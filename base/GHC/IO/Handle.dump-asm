
==================== Asm code ====================
2018-03-16 16:06:17.266015108 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$w$c==_closure
.type GHC.IO.Handle.$w$c==_closure, @object
GHC.IO.Handle.$w$c==_closure:
	.quad	GHC.IO.Handle.$w$c==_info


==================== Asm code ====================
2018-03-16 16:06:17.266886407 UTC

.section .text
.align 8
.globl GHC.IO.Handle.$w$c==_entry
.type GHC.IO.Handle.$w$c==_entry, @object
GHC.IO.Handle.$w$c==_entry:
_cbrxs:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrxt
_cbrxu:
	movq $block_cbrxn_info,-24(%rbp)
	movq %rsi,%rax
	movq %r8,%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_cbrxt:
	movl $GHC.IO.Handle.$w$c==_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.$w$c==_entry, .-GHC.IO.Handle.$w$c==_entry


==================== Asm code ====================
2018-03-16 16:06:17.267532633 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.$w$c==_info
.type GHC.IO.Handle.$w$c==_info, @object
GHC.IO.Handle.$w$c==_info:
	.quad	GHC.IO.Handle.$w$c==_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:06:17.268250679 UTC

.section .text
.align 8
_cbrxn:
_cbrxn:
	cmpq $1,%rbx
	je _cbrxr
_cbrxq:
	movl $GHC.Types.False_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbrxr:
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Types.$fEqHandle_$c==_entry
	.size _cbrxn, .-_cbrxn


==================== Asm code ====================
2018-03-16 16:06:17.271189127 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrxn_info:
	.quad	_cbrxn
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.27450487 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$fEqHandlePosn_$c==_closure
.type GHC.IO.Handle.$fEqHandlePosn_$c==_closure, @object
GHC.IO.Handle.$fEqHandlePosn_$c==_closure:
	.quad	GHC.IO.Handle.$fEqHandlePosn_$c==_info


==================== Asm code ====================
2018-03-16 16:06:17.275269143 UTC

.section .text
.align 8
.globl GHC.IO.Handle.$fEqHandlePosn_$c==_entry
.type GHC.IO.Handle.$fEqHandlePosn_$c==_entry, @object
GHC.IO.Handle.$fEqHandlePosn_$c==_entry:
_cbrxR:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrxV
_cbrxW:
	movq $block_cbrxO_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbrxO
_cbrxP:
	movq (%rbx),%rax
	jmp *(%rax)
_cbrxV:
	movl $GHC.IO.Handle.$fEqHandlePosn_$c==_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.$fEqHandlePosn_$c==_entry, .-GHC.IO.Handle.$fEqHandlePosn_$c==_entry


==================== Asm code ====================
2018-03-16 16:06:17.275940014 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.$fEqHandlePosn_$c==_info
.type GHC.IO.Handle.$fEqHandlePosn_$c==_info, @object
GHC.IO.Handle.$fEqHandlePosn_$c==_info:
	.quad	GHC.IO.Handle.$fEqHandlePosn_$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:06:17.276678194 UTC

.section .text
.align 8
_cbrxO:
_cbrxO:
	movq $block_cbrxU_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbrxU
_cbrxY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbrxO, .-_cbrxO


==================== Asm code ====================
2018-03-16 16:06:17.277347097 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrxO_info:
	.quad	_cbrxO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.277970377 UTC

.section .text
.align 8
_cbrxU:
_cbrxU:
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.$w$c==_entry
	.size _cbrxU, .-_cbrxU


==================== Asm code ====================
2018-03-16 16:06:17.278547326 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrxU_info:
	.quad	_cbrxU
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.28472993 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$fEqHandlePosn_$c/=_closure
.type GHC.IO.Handle.$fEqHandlePosn_$c/=_closure, @object
GHC.IO.Handle.$fEqHandlePosn_$c/=_closure:
	.quad	GHC.IO.Handle.$fEqHandlePosn_$c/=_info


==================== Asm code ====================
2018-03-16 16:06:17.28550121 UTC

.section .text
.align 8
.globl GHC.IO.Handle.$fEqHandlePosn_$c/=_entry
.type GHC.IO.Handle.$fEqHandlePosn_$c/=_entry, @object
GHC.IO.Handle.$fEqHandlePosn_$c/=_entry:
_cbryp:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbryt
_cbryu:
	movq $block_cbrym_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbrym
_cbryn:
	movq (%rbx),%rax
	jmp *(%rax)
_cbryt:
	movl $GHC.IO.Handle.$fEqHandlePosn_$c/=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.$fEqHandlePosn_$c/=_entry, .-GHC.IO.Handle.$fEqHandlePosn_$c/=_entry


==================== Asm code ====================
2018-03-16 16:06:17.286140153 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.$fEqHandlePosn_$c/=_info
.type GHC.IO.Handle.$fEqHandlePosn_$c/=_info, @object
GHC.IO.Handle.$fEqHandlePosn_$c/=_info:
	.quad	GHC.IO.Handle.$fEqHandlePosn_$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:06:17.286849499 UTC

.section .text
.align 8
_cbrym:
_cbrym:
	movq $block_cbrys_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbrys
_cbryw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbrym, .-_cbrym


==================== Asm code ====================
2018-03-16 16:06:17.287482209 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrym_info:
	.quad	_cbrym
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.288106763 UTC

.section .text
.align 8
_cbrys:
_cbrys:
	movq $block_cbryA_info,(%rbp)
	movq 15(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _cbrys, .-_cbrys


==================== Asm code ====================
2018-03-16 16:06:17.28864923 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrys_info:
	.quad	_cbrys
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.289314706 UTC

.section .text
.align 8
_cbryA:
_cbryA:
	cmpq $1,%rbx
	je _cbryM
_ubrzT:
	addq $24,%rbp
	jmp _cbrzF
_cbryM:
	movq $block_cbryK_info,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _cbryK
_cbryN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbryA, .-_cbryA


==================== Asm code ====================
2018-03-16 16:06:17.289922104 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbryA_info:
	.quad	_cbryA
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.2906818 UTC

.section .text
.align 8
_cbryK:
_cbryK:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbryU
_cbrzp:
	movq $block_cbrzn_info,8(%rbp)
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _cbrzn
_cbrzq:
	movq (%rbx),%rax
	jmp *(%rax)
_cbryU:
	movq $block_cbryR_info,8(%rbp)
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _cbryR
_cbryV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbryK, .-_cbryK


==================== Asm code ====================
2018-03-16 16:06:17.291334575 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbryK_info:
	.quad	_cbryK
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.292034023 UTC

.section .text
.align 8
_cbryR:
_cbryR:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbrzg
_ubrzX:
	addq $16,%rbp
	jmp _cbrzF
_cbrzg:
	movq 8(%rbp),%rax
	cmpq 15(%rbx),%rax
	je _ubrzY
_ubrzZ:
	addq $16,%rbp
	jmp _cbrzF
_ubrzY:
	addq $16,%rbp
	jmp _cbrzL
	.size _cbryR, .-_cbryR


==================== Asm code ====================
2018-03-16 16:06:17.292687539 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbryR_info:
	.quad	_cbryR
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.293762968 UTC

.section .text
.align 8
_cbrzn:
_cbrzn:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubrzU
_cbrzP:
	movq 8(%rbp),%rax
	cmpq 14(%rbx),%rax
	je _ubrzV
_ubrzW:
	addq $16,%rbp
	jmp _cbrzF
_ubrzV:
	addq $16,%rbp
	jmp _cbrzL
_ubrzU:
	addq $16,%rbp
	jmp _cbrzF
	.size _cbrzn, .-_cbrzn


==================== Asm code ====================
2018-03-16 16:06:17.29436801 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrzn_info:
	.quad	_cbrzn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.29498088 UTC

.section .text
.align 8
_cbrzL:
_cbrzL:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbrzL, .-_cbrzL


==================== Asm code ====================
2018-03-16 16:06:17.295618364 UTC

.section .text
.align 8
_cbrzF:
_cbrzF:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbrzF, .-_cbrzF


==================== Asm code ====================
2018-03-16 16:06:17.297418274 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$fEqHandlePosn_closure
.type GHC.IO.Handle.$fEqHandlePosn_closure, @object
GHC.IO.Handle.$fEqHandlePosn_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.IO.Handle.$fEqHandlePosn_$c==_closure+2
	.quad	GHC.IO.Handle.$fEqHandlePosn_$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:17.299097422 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn2_bytes
.type GHC.IO.Handle.$fShowHandlePosn2_bytes, @object
GHC.IO.Handle.$fShowHandlePosn2_bytes:
	.asciz " at position "


==================== Asm code ====================
2018-03-16 16:06:17.310117514 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$w$cshowsPrec_closure
.type GHC.IO.Handle.$w$cshowsPrec_closure, @object
GHC.IO.Handle.$w$cshowsPrec_closure:
	.quad	GHC.IO.Handle.$w$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.310930514 UTC

.section .text
.align 8
sat_sbnYk_entry:
_cbrBn:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrBo
_cbrBp:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbrBk_info,-24(%rbp)
	movq 24(%rbx),%rdi
	movq 16(%rbx),%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_cbrBo:
	jmp *-16(%r13)
	.size sat_sbnYk_entry, .-sat_sbnYk_entry


==================== Asm code ====================
2018-03-16 16:06:17.311580587 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbnYk_info:
	.quad	sat_sbnYk_entry
	.quad	2
	.quad	4294967314
	.quad	SboCL_srt


==================== Asm code ====================
2018-03-16 16:06:17.312305906 UTC

.section .text
.align 8
_cbrBk:
_cbrBk:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbrBs
_cbrBr:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbrBs:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _cbrBk, .-_cbrBk


==================== Asm code ====================
2018-03-16 16:06:17.312915786 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrBk_info:
	.quad	_cbrBk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.313958711 UTC

.section .text
.align 8
sat_sbnYl_entry:
_cbrBt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrBu
_cbrBv:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbrBx
_cbrBw:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_sbnYk_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movl $GHC.IO.Handle.$fShowHandlePosn2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_cbrBx:
	movq $32,904(%r13)
_cbrBu:
	jmp *-16(%r13)
	.size sat_sbnYl_entry, .-sat_sbnYl_entry


==================== Asm code ====================
2018-03-16 16:06:17.315726013 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbnYl_info:
	.quad	sat_sbnYl_entry
	.quad	2
	.quad	4294967314
	.quad	SboCL_srt


==================== Asm code ====================
2018-03-16 16:06:17.316488758 UTC

.section .text
.align 8
sat_sbnYm_entry:
_cbrBy:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbrBC
_cbrBB:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_sbnYl_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movl $GHC.IO.Handle.Types.$fReadNewlineMode5_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_cbrBC:
	movq $32,904(%r13)
	jmp *-16(%r13)
	.size sat_sbnYm_entry, .-sat_sbnYm_entry


==================== Asm code ====================
2018-03-16 16:06:17.317109528 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbnYm_info:
	.quad	sat_sbnYm_entry
	.quad	2
	.quad	4294967314
	.quad	SboCL_srt


==================== Asm code ====================
2018-03-16 16:06:17.317901632 UTC

.section .text
.align 8
sat_sbnYn_entry:
_cbrBD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrBE
_cbrBF:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbrBH
_cbrBG:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_sbnYm_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -24(%r12),%rsi
	movq %rbx,%r14
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_cbrBH:
	movq $32,904(%r13)
_cbrBE:
	jmp *-16(%r13)
	.size sat_sbnYn_entry, .-sat_sbnYn_entry


==================== Asm code ====================
2018-03-16 16:06:17.318535564 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbnYn_info:
	.quad	sat_sbnYn_entry
	.quad	3
	.quad	4294967311
	.quad	SboCL_srt


==================== Asm code ====================
2018-03-16 16:06:17.319245475 UTC

.section .text
.align 8
sat_sbnYu_entry:
_cbrC3:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrC4
_cbrC5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbrC0_info,-24(%rbp)
	movq 24(%rbx),%rdi
	movq 16(%rbx),%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$w$cshowsPrec4_entry
_cbrC4:
	jmp *-16(%r13)
	.size sat_sbnYu_entry, .-sat_sbnYu_entry


==================== Asm code ====================
2018-03-16 16:06:17.319841483 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbnYu_info:
	.quad	sat_sbnYu_entry
	.quad	2
	.quad	4294967314
	.quad	SboCL_srt


==================== Asm code ====================
2018-03-16 16:06:17.32054397 UTC

.section .text
.align 8
_cbrC0:
_cbrC0:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbrC8
_cbrC7:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbrC8:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _cbrC0, .-_cbrC0


==================== Asm code ====================
2018-03-16 16:06:17.321154431 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrC0_info:
	.quad	_cbrC0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.321946862 UTC

.section .text
.align 8
sat_sbnYv_entry:
_cbrC9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrCa
_cbrCb:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbrCd
_cbrCc:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_sbnYu_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movl $GHC.IO.Handle.$fShowHandlePosn2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_cbrCd:
	movq $32,904(%r13)
_cbrCa:
	jmp *-16(%r13)
	.size sat_sbnYv_entry, .-sat_sbnYv_entry


==================== Asm code ====================
2018-03-16 16:06:17.322604191 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbnYv_info:
	.quad	sat_sbnYv_entry
	.quad	2
	.quad	4294967314
	.quad	SboCL_srt


==================== Asm code ====================
2018-03-16 16:06:17.32327922 UTC

.section .text
.align 8
sat_sbnYw_entry:
_cbrCe:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbrCi
_cbrCh:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_sbnYv_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movl $GHC.IO.Handle.Types.$fReadNewlineMode5_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_cbrCi:
	movq $32,904(%r13)
	jmp *-16(%r13)
	.size sat_sbnYw_entry, .-sat_sbnYw_entry


==================== Asm code ====================
2018-03-16 16:06:17.32395245 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbnYw_info:
	.quad	sat_sbnYw_entry
	.quad	2
	.quad	4294967314
	.quad	SboCL_srt


==================== Asm code ====================
2018-03-16 16:06:17.324657846 UTC

.section .text
.align 8
sat_sbnYx_entry:
_cbrCj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrCk
_cbrCl:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbrCn
_cbrCm:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_sbnYw_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -24(%r12),%rsi
	movq %rbx,%r14
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_cbrCn:
	movq $32,904(%r13)
_cbrCk:
	jmp *-16(%r13)
	.size sat_sbnYx_entry, .-sat_sbnYx_entry


==================== Asm code ====================
2018-03-16 16:06:17.325517917 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbnYx_info:
	.quad	sat_sbnYx_entry
	.quad	3
	.quad	4294967311
	.quad	SboCL_srt


==================== Asm code ====================
2018-03-16 16:06:17.326258287 UTC

.section .text
.align 8
.globl GHC.IO.Handle.$w$cshowsPrec_entry
.type GHC.IO.Handle.$w$cshowsPrec_entry, @object
GHC.IO.Handle.$w$cshowsPrec_entry:
_cbrCs:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrCt
_cbrCu:
	movq $block_cbrAZ_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbrAZ
_cbrB0:
	movq (%rbx),%rax
	jmp *(%rax)
_cbrCt:
	movl $GHC.IO.Handle.$w$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.$w$cshowsPrec_entry, .-GHC.IO.Handle.$w$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:06:17.32689801 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.$w$cshowsPrec_info
.type GHC.IO.Handle.$w$cshowsPrec_info, @object
GHC.IO.Handle.$w$cshowsPrec_info:
	.quad	GHC.IO.Handle.$w$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	SboCL_srt


==================== Asm code ====================
2018-03-16 16:06:17.327753034 UTC

.section .text
.align 8
_cbrAZ:
_cbrAZ:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _cbrCp
_cbrCq:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbrCA
_cbrCz:
	movq 6(%rbx),%rbx
	movq $sat_sbnYx_info,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rsi
	movl $GHC.IO.Handle.Types.showHandle1_bytes,%r14d
	addq $24,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_cbrCA:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
_cbrCp:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbrCA
_cbrCw:
	movq 7(%rbx),%rbx
	movq $sat_sbnYn_info,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rsi
	movl $GHC.IO.Handle.Types.showHandle1_bytes,%r14d
	addq $24,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
	.size _cbrAZ, .-_cbrAZ


==================== Asm code ====================
2018-03-16 16:06:17.328475417 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrAZ_info:
	.quad	_cbrAZ
	.quad	2
	.quad	4294967326
	.quad	SboCL_srt


==================== Asm code ====================
2018-03-16 16:06:17.331534683 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_closure
.type GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_closure, @object
GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_closure:
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.332313539 UTC

.section .text
.align 8
.globl GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_entry
.type GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_entry, @object
GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_entry:
_cbrDw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrDx
_cbrDy:
	movq $block_cbrDt_info,-16(%rbp)
	movq %rsi,%rbx
	movq %rdi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbrDt
_cbrDu:
	movq (%rbx),%rax
	jmp *(%rax)
_cbrDx:
	movl $GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_entry, .-GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:06:17.332979239 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_info
.type GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_info, @object
GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_info:
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	SboCL_srt+8


==================== Asm code ====================
2018-03-16 16:06:17.333615692 UTC

.section .text
.align 8
_cbrDt:
_cbrDt:
	movq 8(%rbp),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.$w$cshowsPrec_entry
	.size _cbrDt, .-_cbrDt


==================== Asm code ====================
2018-03-16 16:06:17.334175082 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrDt_info:
	.quad	_cbrDt
	.quad	1
	.quad	4294967326
	.quad	SboCL_srt+8


==================== Asm code ====================
2018-03-16 16:06:17.335729855 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn3_closure
.type GHC.IO.Handle.$fShowHandlePosn3_closure, @object
GHC.IO.Handle.$fShowHandlePosn3_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.338808388 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn_$cshow_closure
.type GHC.IO.Handle.$fShowHandlePosn_$cshow_closure, @object
GHC.IO.Handle.$fShowHandlePosn_$cshow_closure:
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.339526657 UTC

.section .text
.align 8
.globl GHC.IO.Handle.$fShowHandlePosn_$cshow_entry
.type GHC.IO.Handle.$fShowHandlePosn_$cshow_entry, @object
GHC.IO.Handle.$fShowHandlePosn_$cshow_entry:
_cbrDU:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrDV
_cbrDW:
	movq $block_cbrDR_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbrDR
_cbrDS:
	movq (%rbx),%rax
	jmp *(%rax)
_cbrDV:
	movl $GHC.IO.Handle.$fShowHandlePosn_$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.$fShowHandlePosn_$cshow_entry, .-GHC.IO.Handle.$fShowHandlePosn_$cshow_entry


==================== Asm code ====================
2018-03-16 16:06:17.34017417 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn_$cshow_info
.type GHC.IO.Handle.$fShowHandlePosn_$cshow_info, @object
GHC.IO.Handle.$fShowHandlePosn_$cshow_info:
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshow_entry
	.quad	0
	.quad	21474836494
	.quad	4294967301
	.quad	SboCL_srt+8


==================== Asm code ====================
2018-03-16 16:06:17.340804789 UTC

.section .text
.align 8
_cbrDR:
_cbrDR:
	movl $GHC.Types.[]_closure+1,%edi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.IO.Handle.$w$cshowsPrec_entry
	.size _cbrDR, .-_cbrDR


==================== Asm code ====================
2018-03-16 16:06:17.341395343 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrDR_info:
	.quad	_cbrDR
	.quad	0
	.quad	4294967326
	.quad	SboCL_srt+8


==================== Asm code ====================
2018-03-16 16:06:17.34417544 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn1_closure
.type GHC.IO.Handle.$fShowHandlePosn1_closure, @object
GHC.IO.Handle.$fShowHandlePosn1_closure:
	.quad	GHC.IO.Handle.$fShowHandlePosn1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.344922955 UTC

.section .text
.align 8
.globl GHC.IO.Handle.$fShowHandlePosn1_entry
.type GHC.IO.Handle.$fShowHandlePosn1_entry, @object
GHC.IO.Handle.$fShowHandlePosn1_entry:
_cbrEh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrEi
_cbrEj:
	movq $block_cbrEe_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbrEe
_cbrEf:
	movq (%rbx),%rax
	jmp *(%rax)
_cbrEi:
	movl $GHC.IO.Handle.$fShowHandlePosn1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.$fShowHandlePosn1_entry, .-GHC.IO.Handle.$fShowHandlePosn1_entry


==================== Asm code ====================
2018-03-16 16:06:17.34555873 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn1_info
.type GHC.IO.Handle.$fShowHandlePosn1_info, @object
GHC.IO.Handle.$fShowHandlePosn1_info:
	.quad	GHC.IO.Handle.$fShowHandlePosn1_entry
	.quad	0
	.quad	38654705678
	.quad	8589934607
	.quad	SboCL_srt+8


==================== Asm code ====================
2018-03-16 16:06:17.346229444 UTC

.section .text
.align 8
_cbrEe:
_cbrEe:
	movq 8(%rbp),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.$w$cshowsPrec_entry
	.size _cbrEe, .-_cbrEe


==================== Asm code ====================
2018-03-16 16:06:17.346825157 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrEe_info:
	.quad	_cbrEe
	.quad	1
	.quad	4294967326
	.quad	SboCL_srt+8


==================== Asm code ====================
2018-03-16 16:06:17.349875107 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn_$cshowList_closure
.type GHC.IO.Handle.$fShowHandlePosn_$cshowList_closure, @object
GHC.IO.Handle.$fShowHandlePosn_$cshowList_closure:
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.350528809 UTC

.section .text
.align 8
.globl GHC.IO.Handle.$fShowHandlePosn_$cshowList_entry
.type GHC.IO.Handle.$fShowHandlePosn_$cshowList_entry, @object
GHC.IO.Handle.$fShowHandlePosn_$cshowList_entry:
_cbrEB:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.IO.Handle.$fShowHandlePosn1_closure+2,%r14d
	jmp GHC.Show.showList___entry
	.size GHC.IO.Handle.$fShowHandlePosn_$cshowList_entry, .-GHC.IO.Handle.$fShowHandlePosn_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:06:17.351108926 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn_$cshowList_info
.type GHC.IO.Handle.$fShowHandlePosn_$cshowList_info, @object
GHC.IO.Handle.$fShowHandlePosn_$cshowList_info:
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	SboCL_srt+32


==================== Asm code ====================
2018-03-16 16:06:17.352854333 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn_closure
.type GHC.IO.Handle.$fShowHandlePosn_closure, @object
GHC.IO.Handle.$fShowHandlePosn_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_closure+3
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshow_closure+1
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.354524376 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hLookAhead3_bytes
.type GHC.IO.Handle.hLookAhead3_bytes, @object
GHC.IO.Handle.hLookAhead3_bytes:
	.asciz "hLookAhead"


==================== Asm code ====================
2018-03-16 16:06:17.356984571 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hLookAhead2_closure
.type GHC.IO.Handle.hLookAhead2_closure, @object
GHC.IO.Handle.hLookAhead2_closure:
	.quad	GHC.IO.Handle.hLookAhead2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.357842295 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hLookAhead2_entry
.type GHC.IO.Handle.hLookAhead2_entry, @object
GHC.IO.Handle.hLookAhead2_entry:
_cbrEQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrER
_cbrES:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbrEP
_cbrEO:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.hLookAhead3_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbrER:
	jmp *-16(%r13)
_cbrEP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hLookAhead2_entry, .-GHC.IO.Handle.hLookAhead2_entry


==================== Asm code ====================
2018-03-16 16:06:17.358493902 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hLookAhead2_info
.type GHC.IO.Handle.hLookAhead2_info, @object
GHC.IO.Handle.hLookAhead2_info:
	.quad	GHC.IO.Handle.hLookAhead2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:17.360599398 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hLookAhead1_closure
.type GHC.IO.Handle.hLookAhead1_closure, @object
GHC.IO.Handle.hLookAhead1_closure:
	.quad	GHC.IO.Handle.hLookAhead1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.36123321 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hLookAhead1_entry
.type GHC.IO.Handle.hLookAhead1_entry, @object
GHC.IO.Handle.hLookAhead1_entry:
_cbrF4:
	movl $GHC.IO.Handle.Internals.hLookAhead_1_closure+2,%edi
	movq %r14,%rsi
	movl $GHC.IO.Handle.hLookAhead2_closure,%r14d
	jmp GHC.IO.Handle.Internals.wantReadableHandle_1_entry
	.size GHC.IO.Handle.hLookAhead1_entry, .-GHC.IO.Handle.hLookAhead1_entry


==================== Asm code ====================
2018-03-16 16:06:17.362157155 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hLookAhead1_info
.type GHC.IO.Handle.hLookAhead1_info, @object
GHC.IO.Handle.hLookAhead1_info:
	.quad	GHC.IO.Handle.hLookAhead1_entry
	.quad	0
	.quad	30064771086
	.quad	8589934597
	.quad	SboCL_srt+40


==================== Asm code ====================
2018-03-16 16:06:17.364175922 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hLookAhead_closure
.type GHC.IO.Handle.hLookAhead_closure, @object
GHC.IO.Handle.hLookAhead_closure:
	.quad	GHC.IO.Handle.hLookAhead_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.364772608 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hLookAhead_entry
.type GHC.IO.Handle.hLookAhead_entry, @object
GHC.IO.Handle.hLookAhead_entry:
_cbrFf:
	jmp GHC.IO.Handle.hLookAhead1_entry
	.size GHC.IO.Handle.hLookAhead_entry, .-GHC.IO.Handle.hLookAhead_entry


==================== Asm code ====================
2018-03-16 16:06:17.36528918 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hLookAhead_info
.type GHC.IO.Handle.hLookAhead_info, @object
GHC.IO.Handle.hLookAhead_info:
	.quad	GHC.IO.Handle.hLookAhead_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SboCL_srt+64


==================== Asm code ====================
2018-03-16 16:06:17.366899755 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hFlush3_bytes
.type GHC.IO.Handle.hFlush3_bytes, @object
GHC.IO.Handle.hFlush3_bytes:
	.asciz "hFlush"


==================== Asm code ====================
2018-03-16 16:06:17.369331996 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFlush2_closure
.type GHC.IO.Handle.hFlush2_closure, @object
GHC.IO.Handle.hFlush2_closure:
	.quad	GHC.IO.Handle.hFlush2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.370201953 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFlush2_entry
.type GHC.IO.Handle.hFlush2_entry, @object
GHC.IO.Handle.hFlush2_entry:
_cbrFt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrFu
_cbrFv:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbrFs
_cbrFr:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.hFlush3_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbrFu:
	jmp *-16(%r13)
_cbrFs:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hFlush2_entry, .-GHC.IO.Handle.hFlush2_entry


==================== Asm code ====================
2018-03-16 16:06:17.370899526 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFlush2_info
.type GHC.IO.Handle.hFlush2_info, @object
GHC.IO.Handle.hFlush2_info:
	.quad	GHC.IO.Handle.hFlush2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:17.373059664 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFlush1_closure
.type GHC.IO.Handle.hFlush1_closure, @object
GHC.IO.Handle.hFlush1_closure:
	.quad	GHC.IO.Handle.hFlush1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.374116375 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFlush1_entry
.type GHC.IO.Handle.hFlush1_entry, @object
GHC.IO.Handle.hFlush1_entry:
_cbrFH:
	movl $GHC.IO.Handle.Internals.flushWriteBuffer1_closure+2,%edi
	movq %r14,%rsi
	movl $GHC.IO.Handle.hFlush2_closure,%r14d
	jmp GHC.IO.Handle.Internals.wantWritableHandle1_entry
	.size GHC.IO.Handle.hFlush1_entry, .-GHC.IO.Handle.hFlush1_entry


==================== Asm code ====================
2018-03-16 16:06:17.374678093 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFlush1_info
.type GHC.IO.Handle.hFlush1_info, @object
GHC.IO.Handle.hFlush1_info:
	.quad	GHC.IO.Handle.hFlush1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	SboCL_srt+72


==================== Asm code ====================
2018-03-16 16:06:17.376767933 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFlush_closure
.type GHC.IO.Handle.hFlush_closure, @object
GHC.IO.Handle.hFlush_closure:
	.quad	GHC.IO.Handle.hFlush_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.377866614 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFlush_entry
.type GHC.IO.Handle.hFlush_entry, @object
GHC.IO.Handle.hFlush_entry:
_cbrFS:
	jmp GHC.IO.Handle.hFlush1_entry
	.size GHC.IO.Handle.hFlush_entry, .-GHC.IO.Handle.hFlush_entry


==================== Asm code ====================
2018-03-16 16:06:17.378513812 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFlush_info
.type GHC.IO.Handle.hFlush_info, @object
GHC.IO.Handle.hFlush_info:
	.quad	GHC.IO.Handle.hFlush_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SboCL_srt+88


==================== Asm code ====================
2018-03-16 16:06:17.380150703 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hFlushAll4_bytes
.type GHC.IO.Handle.hFlushAll4_bytes, @object
GHC.IO.Handle.hFlushAll4_bytes:
	.asciz "hFlushAll"


==================== Asm code ====================
2018-03-16 16:06:17.382643465 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFlushAll3_closure
.type GHC.IO.Handle.hFlushAll3_closure, @object
GHC.IO.Handle.hFlushAll3_closure:
	.quad	GHC.IO.Handle.hFlushAll3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.383482467 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFlushAll3_entry
.type GHC.IO.Handle.hFlushAll3_entry, @object
GHC.IO.Handle.hFlushAll3_entry:
_cbrG6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrG7
_cbrG8:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbrG5
_cbrG4:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.hFlushAll4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbrG7:
	jmp *-16(%r13)
_cbrG5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hFlushAll3_entry, .-GHC.IO.Handle.hFlushAll3_entry


==================== Asm code ====================
2018-03-16 16:06:17.384219331 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFlushAll3_info
.type GHC.IO.Handle.hFlushAll3_info, @object
GHC.IO.Handle.hFlushAll3_info:
	.quad	GHC.IO.Handle.hFlushAll3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:17.387570515 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFlushAll2_closure
.type GHC.IO.Handle.hFlushAll2_closure, @object
GHC.IO.Handle.hFlushAll2_closure:
	.quad	GHC.IO.Handle.hFlushAll2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.388317 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFlushAll2_entry
.type GHC.IO.Handle.hFlushAll2_entry, @object
GHC.IO.Handle.hFlushAll2_entry:
_cbrGn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrGo
_cbrGp:
	movq $block_cbrGk_info,-16(%rbp)
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.flushBuffer1_entry
_cbrGo:
	movl $GHC.IO.Handle.hFlushAll2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hFlushAll2_entry, .-GHC.IO.Handle.hFlushAll2_entry


==================== Asm code ====================
2018-03-16 16:06:17.388936816 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFlushAll2_info
.type GHC.IO.Handle.hFlushAll2_info, @object
GHC.IO.Handle.hFlushAll2_info:
	.quad	GHC.IO.Handle.hFlushAll2_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	SboCL_srt+96


==================== Asm code ====================
2018-03-16 16:06:17.389661489 UTC

.section .text
.align 8
_cbrGk:
_cbrGk:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbrGs
_cbrGr:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbrGs:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbrGk, .-_cbrGk


==================== Asm code ====================
2018-03-16 16:06:17.39028786 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrGk_info:
	.quad	_cbrGk
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.398274197 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFlushAll1_closure
.type GHC.IO.Handle.hFlushAll1_closure, @object
GHC.IO.Handle.hFlushAll1_closure:
	.quad	GHC.IO.Handle.hFlushAll1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.399082598 UTC

.section .text
.align 8
io_sbnZ5_entry:
_cbrGY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrH2
_cbrH3:
	movq $block_cbrGT_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movl $GHC.IO.Handle.hFlushAll2_closure+2,%edi
	movq 7(%rbx),%rsi
	movl $GHC.IO.Handle.hFlushAll3_closure,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbrH2:
	jmp *-8(%r13)
	.size io_sbnZ5_entry, .-io_sbnZ5_entry


==================== Asm code ====================
2018-03-16 16:06:17.399715793 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbnZ5_info:
	.quad	io_sbnZ5_entry
	.quad	2
	.quad	30064771083
	.quad	4294967299
	.quad	SboCL_srt+104


==================== Asm code ====================
2018-03-16 16:06:17.400380221 UTC

.section .text
.align 8
_cbrGT:
_cbrGT:
	movq $block_cbrGV_info,(%rbp)
	testb $7,%bl
	jne _cbrGV
_cbrGW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbrGT, .-_cbrGT


==================== Asm code ====================
2018-03-16 16:06:17.400928034 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrGT_info:
	.quad	_cbrGT
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.401578683 UTC

.section .text
.align 8
_cbrGV:
_cbrGV:
	movq $block_cbrH1_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbrGV, .-_cbrGV


==================== Asm code ====================
2018-03-16 16:06:17.402143521 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrGV_info:
	.quad	_cbrGV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.402752237 UTC

.section .text
.align 8
_cbrH1:
_cbrH1:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbrH1, .-_cbrH1


==================== Asm code ====================
2018-03-16 16:06:17.403320339 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrH1_info:
	.quad	_cbrH1
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.404053881 UTC

.section .text
.align 8
io_sbnZl_entry:
_cbrHn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrHr
_cbrHs:
	movq $block_cbrHi_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movl $GHC.IO.Handle.hFlushAll2_closure+2,%edi
	movq 7(%rbx),%rsi
	movl $GHC.IO.Handle.hFlushAll3_closure,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbrHr:
	jmp *-8(%r13)
	.size io_sbnZl_entry, .-io_sbnZl_entry


==================== Asm code ====================
2018-03-16 16:06:17.404720093 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbnZl_info:
	.quad	io_sbnZl_entry
	.quad	2
	.quad	30064771083
	.quad	4294967299
	.quad	SboCL_srt+104


==================== Asm code ====================
2018-03-16 16:06:17.40537108 UTC

.section .text
.align 8
_cbrHi:
_cbrHi:
	movq $block_cbrHk_info,(%rbp)
	testb $7,%bl
	jne _cbrHk
_cbrHl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbrHi, .-_cbrHi


==================== Asm code ====================
2018-03-16 16:06:17.405931216 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrHi_info:
	.quad	_cbrHi
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.406532451 UTC

.section .text
.align 8
_cbrHk:
_cbrHk:
	movq $block_cbrHq_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbrHk, .-_cbrHk


==================== Asm code ====================
2018-03-16 16:06:17.407133955 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrHk_info:
	.quad	_cbrHk
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.407718405 UTC

.section .text
.align 8
_cbrHq:
_cbrHq:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbrHq, .-_cbrHq


==================== Asm code ====================
2018-03-16 16:06:17.408253025 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrHq_info:
	.quad	_cbrHq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.408926436 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFlushAll1_entry
.type GHC.IO.Handle.hFlushAll1_entry, @object
GHC.IO.Handle.hFlushAll1_entry:
_cbrHC:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrHD
_cbrHE:
	movq $block_cbrGH_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbrGH
_cbrGI:
	movq (%rbx),%rax
	jmp *(%rax)
_cbrHD:
	movl $GHC.IO.Handle.hFlushAll1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hFlushAll1_entry, .-GHC.IO.Handle.hFlushAll1_entry


==================== Asm code ====================
2018-03-16 16:06:17.409763176 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFlushAll1_info
.type GHC.IO.Handle.hFlushAll1_info, @object
GHC.IO.Handle.hFlushAll1_info:
	.quad	GHC.IO.Handle.hFlushAll1_entry
	.quad	0
	.quad	64424509454
	.quad	8589934597
	.quad	SboCL_srt+104


==================== Asm code ====================
2018-03-16 16:06:17.410452631 UTC

.section .text
.align 8
_cbrGH:
_cbrGH:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbrHz
_cbrHA:
	movq $block_cbrHb_info,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
_cbrHz:
	movq $block_cbrGM_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
	.size _cbrGH, .-_cbrGH


==================== Asm code ====================
2018-03-16 16:06:17.411108687 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrGH_info:
	.quad	_cbrGH
	.quad	0
	.quad	30064771102
	.quad	SboCL_srt+104


==================== Asm code ====================
2018-03-16 16:06:17.411838655 UTC

.section .text
.align 8
_cbrGM:
_cbrGM:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbrHI
_cbrHH:
	movq $io_sbnZ5_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbrHM
_cbrHL:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbnZ5_entry
_cbrHM:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_cbrHI:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbrGM, .-_cbrGM


==================== Asm code ====================
2018-03-16 16:06:17.412500616 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrGM_info:
	.quad	_cbrGM
	.quad	2
	.quad	30064771102
	.quad	SboCL_srt+104


==================== Asm code ====================
2018-03-16 16:06:17.41326821 UTC

.section .text
.align 8
_cbrHb:
_cbrHb:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbrHQ
_cbrHP:
	movq $io_sbnZl_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbrHU
_cbrHT:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbnZl_entry
_cbrHU:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_cbrHQ:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbrHb, .-_cbrHb


==================== Asm code ====================
2018-03-16 16:06:17.414410492 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrHb_info:
	.quad	_cbrHb
	.quad	2
	.quad	30064771102
	.quad	SboCL_srt+104


==================== Asm code ====================
2018-03-16 16:06:17.416583266 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFlushAll_closure
.type GHC.IO.Handle.hFlushAll_closure, @object
GHC.IO.Handle.hFlushAll_closure:
	.quad	GHC.IO.Handle.hFlushAll_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.417182238 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFlushAll_entry
.type GHC.IO.Handle.hFlushAll_entry, @object
GHC.IO.Handle.hFlushAll_entry:
_cbrIR:
	jmp GHC.IO.Handle.hFlushAll1_entry
	.size GHC.IO.Handle.hFlushAll_entry, .-GHC.IO.Handle.hFlushAll_entry


==================== Asm code ====================
2018-03-16 16:06:17.417764746 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFlushAll_info
.type GHC.IO.Handle.hFlushAll_info, @object
GHC.IO.Handle.hFlushAll_info:
	.quad	GHC.IO.Handle.hFlushAll_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SboCL_srt+128


==================== Asm code ====================
2018-03-16 16:06:17.419378847 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hGetEcho7_bytes
.type GHC.IO.Handle.hGetEcho7_bytes, @object
GHC.IO.Handle.hGetEcho7_bytes:
	.asciz "hIsTerminalDevice"


==================== Asm code ====================
2018-03-16 16:06:17.422285762 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho_fun_closure
.type GHC.IO.Handle.hGetEcho_fun_closure, @object
GHC.IO.Handle.hGetEcho_fun_closure:
	.quad	GHC.IO.Handle.hGetEcho_fun_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.423106526 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEcho_fun_entry
.type GHC.IO.Handle.hGetEcho_fun_entry, @object
GHC.IO.Handle.hGetEcho_fun_entry:
_cbrJ5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrJ6
_cbrJ7:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbrJ4
_cbrJ3:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.hGetEcho7_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbrJ6:
	jmp *-16(%r13)
_cbrJ4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hGetEcho_fun_entry, .-GHC.IO.Handle.hGetEcho_fun_entry


==================== Asm code ====================
2018-03-16 16:06:17.423798641 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho_fun_info
.type GHC.IO.Handle.hGetEcho_fun_info, @object
GHC.IO.Handle.hGetEcho_fun_info:
	.quad	GHC.IO.Handle.hGetEcho_fun_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:17.427909181 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho6_closure
.type GHC.IO.Handle.hGetEcho6_closure, @object
GHC.IO.Handle.hGetEcho6_closure:
	.quad	GHC.IO.Handle.hGetEcho6_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.428713112 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEcho6_entry
.type GHC.IO.Handle.hGetEcho6_entry, @object
GHC.IO.Handle.hGetEcho6_entry:
_cbrJm:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrJn
_cbrJo:
	movq $block_cbrJj_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbrJj
_cbrJk:
	movq (%rbx),%rax
	jmp *(%rax)
_cbrJn:
	movl $GHC.IO.Handle.hGetEcho6_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hGetEcho6_entry, .-GHC.IO.Handle.hGetEcho6_entry


==================== Asm code ====================
2018-03-16 16:06:17.429382954 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho6_info
.type GHC.IO.Handle.hGetEcho6_info, @object
GHC.IO.Handle.hGetEcho6_info:
	.quad	GHC.IO.Handle.hGetEcho6_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	SboCL_srt+136


==================== Asm code ====================
2018-03-16 16:06:17.430075899 UTC

.section .text
.align 8
_cbrJj:
_cbrJj:
	movq $block_cbrJr_info,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbrJr
_cbrJt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbrJj, .-_cbrJj


==================== Asm code ====================
2018-03-16 16:06:17.430715761 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrJj_info:
	.quad	_cbrJj
	.quad	0
	.quad	4294967326
	.quad	SboCL_srt+136


==================== Asm code ====================
2018-03-16 16:06:17.431425208 UTC

.section .text
.align 8
_cbrJr:
_cbrJr:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbrJJ
_cbrJC:
	movq 16(%rbp),%rax
	movq $block_cbrJx_info,16(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_pv_info,(%rbp)
	movq %rax,8(%rbp)
	jmp GHC.IO.Device.isTerminal_entry
_cbrJJ:
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.ioe_closedHandle1_entry
	.size _cbrJr, .-_cbrJr


==================== Asm code ====================
2018-03-16 16:06:17.432023192 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrJr_info:
	.quad	_cbrJr
	.quad	3
	.quad	4294967326
	.quad	SboCL_srt+136


==================== Asm code ====================
2018-03-16 16:06:17.432736754 UTC

.section .text
.align 8
_cbrJx:
_cbrJx:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbrJF
_cbrJE:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbrJF:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbrJx, .-_cbrJx


==================== Asm code ====================
2018-03-16 16:06:17.433384268 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrJx_info:
	.quad	_cbrJx
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.441422364 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho5_closure
.type GHC.IO.Handle.hGetEcho5_closure, @object
GHC.IO.Handle.hGetEcho5_closure:
	.quad	GHC.IO.Handle.hGetEcho5_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.442158415 UTC

.section .text
.align 8
io_sbo02_entry:
_cbrKs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrKw
_cbrKx:
	movq $block_cbrKn_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movl $GHC.IO.Handle.hGetEcho6_closure+2,%edi
	movq 7(%rbx),%rsi
	movl $GHC.IO.Handle.hGetEcho_fun_closure,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbrKw:
	jmp *-8(%r13)
	.size io_sbo02_entry, .-io_sbo02_entry


==================== Asm code ====================
2018-03-16 16:06:17.442808456 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbo02_info:
	.quad	io_sbo02_entry
	.quad	2
	.quad	210453397515
	.quad	4294967299
	.quad	SboCL_srt+112


==================== Asm code ====================
2018-03-16 16:06:17.443460079 UTC

.section .text
.align 8
_cbrKn:
_cbrKn:
	movq $block_cbrKp_info,(%rbp)
	testb $7,%bl
	jne _cbrKp
_cbrKq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbrKn, .-_cbrKn


==================== Asm code ====================
2018-03-16 16:06:17.444034991 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrKn_info:
	.quad	_cbrKn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.444663421 UTC

.section .text
.align 8
_cbrKp:
_cbrKp:
	movq $block_cbrKv_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbrKp, .-_cbrKp


==================== Asm code ====================
2018-03-16 16:06:17.445206513 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrKp_info:
	.quad	_cbrKp
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.445867698 UTC

.section .text
.align 8
_cbrKv:
_cbrKv:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbrKv, .-_cbrKv


==================== Asm code ====================
2018-03-16 16:06:17.44643215 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrKv_info:
	.quad	_cbrKv
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.447116604 UTC

.section .text
.align 8
io_sbo0i_entry:
_cbrKR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrKV
_cbrKW:
	movq $block_cbrKM_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movl $GHC.IO.Handle.hGetEcho6_closure+2,%edi
	movq 7(%rbx),%rsi
	movl $GHC.IO.Handle.hGetEcho_fun_closure,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbrKV:
	jmp *-8(%r13)
	.size io_sbo0i_entry, .-io_sbo0i_entry


==================== Asm code ====================
2018-03-16 16:06:17.447750172 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbo0i_info:
	.quad	io_sbo0i_entry
	.quad	2
	.quad	210453397515
	.quad	4294967299
	.quad	SboCL_srt+112


==================== Asm code ====================
2018-03-16 16:06:17.448403768 UTC

.section .text
.align 8
_cbrKM:
_cbrKM:
	movq $block_cbrKO_info,(%rbp)
	testb $7,%bl
	jne _cbrKO
_cbrKP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbrKM, .-_cbrKM


==================== Asm code ====================
2018-03-16 16:06:17.448991988 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrKM_info:
	.quad	_cbrKM
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.449949092 UTC

.section .text
.align 8
_cbrKO:
_cbrKO:
	movq $block_cbrKU_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbrKO, .-_cbrKO


==================== Asm code ====================
2018-03-16 16:06:17.450504309 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrKO_info:
	.quad	_cbrKO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.451116632 UTC

.section .text
.align 8
_cbrKU:
_cbrKU:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbrKU, .-_cbrKU


==================== Asm code ====================
2018-03-16 16:06:17.452282555 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrKU_info:
	.quad	_cbrKU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.453001098 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEcho5_entry
.type GHC.IO.Handle.hGetEcho5_entry, @object
GHC.IO.Handle.hGetEcho5_entry:
_cbrL6:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrL7
_cbrL8:
	movq $block_cbrKb_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbrKb
_cbrKc:
	movq (%rbx),%rax
	jmp *(%rax)
_cbrL7:
	movl $GHC.IO.Handle.hGetEcho5_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hGetEcho5_entry, .-GHC.IO.Handle.hGetEcho5_entry


==================== Asm code ====================
2018-03-16 16:06:17.453680146 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho5_info
.type GHC.IO.Handle.hGetEcho5_info, @object
GHC.IO.Handle.hGetEcho5_info:
	.quad	GHC.IO.Handle.hGetEcho5_entry
	.quad	0
	.quad	485331304462
	.quad	8589934597
	.quad	SboCL_srt+112


==================== Asm code ====================
2018-03-16 16:06:17.454405511 UTC

.section .text
.align 8
_cbrKb:
_cbrKb:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbrL3
_cbrL4:
	movq $block_cbrKF_info,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
_cbrL3:
	movq $block_cbrKg_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
	.size _cbrKb, .-_cbrKb


==================== Asm code ====================
2018-03-16 16:06:17.455019757 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrKb_info:
	.quad	_cbrKb
	.quad	0
	.quad	210453397534
	.quad	SboCL_srt+112


==================== Asm code ====================
2018-03-16 16:06:17.455745058 UTC

.section .text
.align 8
_cbrKg:
_cbrKg:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbrLc
_cbrLb:
	movq $io_sbo02_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbrLg
_cbrLf:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbo02_entry
_cbrLg:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_cbrLc:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbrKg, .-_cbrKg


==================== Asm code ====================
2018-03-16 16:06:17.456370273 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrKg_info:
	.quad	_cbrKg
	.quad	2
	.quad	210453397534
	.quad	SboCL_srt+112


==================== Asm code ====================
2018-03-16 16:06:17.457089537 UTC

.section .text
.align 8
_cbrKF:
_cbrKF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbrLk
_cbrLj:
	movq $io_sbo0i_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbrLo
_cbrLn:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbo0i_entry
_cbrLo:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_cbrLk:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbrKF, .-_cbrKF


==================== Asm code ====================
2018-03-16 16:06:17.457759848 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrKF_info:
	.quad	_cbrKF
	.quad	2
	.quad	210453397534
	.quad	SboCL_srt+112


==================== Asm code ====================
2018-03-16 16:06:17.459949812 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsTerminalDevice_closure
.type GHC.IO.Handle.hIsTerminalDevice_closure, @object
GHC.IO.Handle.hIsTerminalDevice_closure:
	.quad	GHC.IO.Handle.hIsTerminalDevice_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.4605646 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsTerminalDevice_entry
.type GHC.IO.Handle.hIsTerminalDevice_entry, @object
GHC.IO.Handle.hIsTerminalDevice_entry:
_cbrMl:
	jmp GHC.IO.Handle.hGetEcho5_entry
	.size GHC.IO.Handle.hIsTerminalDevice_entry, .-GHC.IO.Handle.hIsTerminalDevice_entry


==================== Asm code ====================
2018-03-16 16:06:17.46110746 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsTerminalDevice_info
.type GHC.IO.Handle.hIsTerminalDevice_info, @object
GHC.IO.Handle.hIsTerminalDevice_info:
	.quad	GHC.IO.Handle.hIsTerminalDevice_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SboCL_srt+160


==================== Asm code ====================
2018-03-16 16:06:17.463069002 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_rbnWB_bytes:
	.asciz "hDuplicateTo"


==================== Asm code ====================
2018-03-16 16:06:17.465443317 UTC

.section .data
.align 8
.align 1
lvl1_rbnWC_closure:
	.quad	lvl1_rbnWC_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.466281435 UTC

.section .text
.align 8
lvl1_rbnWC_entry:
_cbrMz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrMA
_cbrMB:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbrMy
_cbrMx:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl_rbnWB_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbrMA:
	jmp *-16(%r13)
_cbrMy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl1_rbnWC_entry, .-lvl1_rbnWC_entry


==================== Asm code ====================
2018-03-16 16:06:17.466913445 UTC

.section .data.rel.ro
.align 8
.align 1
lvl1_rbnWC_info:
	.quad	lvl1_rbnWC_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:17.468507914 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl2_rbnWD_bytes:
	.asciz "handles are incompatible"


==================== Asm code ====================
2018-03-16 16:06:17.470872066 UTC

.section .data
.align 8
.align 1
lvl3_rbnWE_closure:
	.quad	lvl3_rbnWE_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.471640971 UTC

.section .text
.align 8
lvl3_rbnWE_entry:
_cbrMQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrMR
_cbrMS:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbrMP
_cbrMO:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl2_rbnWD_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbrMR:
	jmp *-16(%r13)
_cbrMP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl3_rbnWE_entry, .-lvl3_rbnWE_entry


==================== Asm code ====================
2018-03-16 16:06:17.472301531 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_rbnWE_info:
	.quad	lvl3_rbnWE_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:17.475971657 UTC

.section .data
.align 8
.align 1
ioe_dupHandlesNotCompatible_rbnWF_closure:
	.quad	ioe_dupHandlesNotCompatible_rbnWF_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.476774134 UTC

.section .text
.align 8
sat_sbo0w_entry:
_cbrNa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrNb
_cbrNc:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbrNe
_cbrNd:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $GHC.Base.Just_con_info,-64(%r12)
	movq %rax,-56(%r12)
	movq $GHC.IO.Exception.IOError_con_info,-48(%r12)
	leaq -62(%r12),%rax
	movq %rax,-40(%r12)
	movq $GHC.IO.Exception.IllegalOperation_closure+1,-32(%r12)
	movq $lvl1_rbnWC_closure,-24(%r12)
	movq $lvl3_rbnWE_closure,-16(%r12)
	movq $GHC.Base.Nothing_closure+1,-8(%r12)
	movq $GHC.Base.Nothing_closure+1,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_cbrNe:
	movq $72,904(%r13)
_cbrNb:
	jmp *-16(%r13)
	.size sat_sbo0w_entry, .-sat_sbo0w_entry


==================== Asm code ====================
2018-03-16 16:06:17.477551852 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbo0w_info:
	.quad	sat_sbo0w_entry
	.quad	1
	.quad	30064771088
	.quad	SboCL_srt+168


==================== Asm code ====================
2018-03-16 16:06:17.478255461 UTC

.section .text
.align 8
ioe_dupHandlesNotCompatible_rbnWF_entry:
_cbrNf:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbrNj
_cbrNi:
	movq $sat_sbo0w_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	jmp stg_raiseIO#
_cbrNj:
	movq $24,904(%r13)
	movl $ioe_dupHandlesNotCompatible_rbnWF_closure,%ebx
	jmp *-8(%r13)
	.size ioe_dupHandlesNotCompatible_rbnWF_entry, .-ioe_dupHandlesNotCompatible_rbnWF_entry


==================== Asm code ====================
2018-03-16 16:06:17.478863274 UTC

.section .data.rel.ro
.align 8
.align 1
ioe_dupHandlesNotCompatible_rbnWF_info:
	.quad	ioe_dupHandlesNotCompatible_rbnWF_entry
	.quad	0
	.quad	64424509454
	.quad	8589934597
	.quad	SboCL_srt+168


==================== Asm code ====================
2018-03-16 16:06:17.480433904 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.$trModule4_bytes
.type GHC.IO.Handle.$trModule4_bytes, @object
GHC.IO.Handle.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:06:17.482588582 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$trModule3_closure
.type GHC.IO.Handle.$trModule3_closure, @object
GHC.IO.Handle.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:06:17.484215662 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.$trModule2_bytes
.type GHC.IO.Handle.$trModule2_bytes, @object
GHC.IO.Handle.$trModule2_bytes:
	.asciz "GHC.IO.Handle"


==================== Asm code ====================
2018-03-16 16:06:17.486160424 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$trModule1_closure
.type GHC.IO.Handle.$trModule1_closure, @object
GHC.IO.Handle.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:06:17.487793608 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$trModule_closure
.type GHC.IO.Handle.$trModule_closure, @object
GHC.IO.Handle.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.IO.Handle.$trModule3_closure+1
	.quad	GHC.IO.Handle.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:17.489463446 UTC

.section .data
.align 8
.align 1
$krep_rbnWG_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Integer.Type.$tcInteger_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:17.491073673 UTC

.section .data
.align 8
.align 1
$krep1_rbnWH_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Handle.Types.$tcHandle_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:17.492659188 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.$tcHandlePosn2_bytes
.type GHC.IO.Handle.$tcHandlePosn2_bytes, @object
GHC.IO.Handle.$tcHandlePosn2_bytes:
	.asciz "HandlePosn"


==================== Asm code ====================
2018-03-16 16:06:17.494312865 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$tcHandlePosn1_closure
.type GHC.IO.Handle.$tcHandlePosn1_closure, @object
GHC.IO.Handle.$tcHandlePosn1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.$tcHandlePosn2_bytes


==================== Asm code ====================
2018-03-16 16:06:17.4960106 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$tcHandlePosn_closure
.type GHC.IO.Handle.$tcHandlePosn_closure, @object
GHC.IO.Handle.$tcHandlePosn_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.$trModule_closure+1
	.quad	GHC.IO.Handle.$tcHandlePosn1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-3843117051664735436
	.quad	6047646306417636971
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:17.497673146 UTC

.section .data
.align 8
.align 1
$krep2_rbnWI_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Handle.$tcHandlePosn_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:17.499237863 UTC

.section .data
.align 8
.align 1
$krep3_rbnWJ_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rbnWG_closure+1
	.quad	$krep2_rbnWI_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:17.50087287 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$tc'HandlePosn1_closure
.type GHC.IO.Handle.$tc'HandlePosn1_closure, @object
GHC.IO.Handle.$tc'HandlePosn1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rbnWH_closure+1
	.quad	$krep3_rbnWJ_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:17.502537705 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.$tc'HandlePosn3_bytes
.type GHC.IO.Handle.$tc'HandlePosn3_bytes, @object
GHC.IO.Handle.$tc'HandlePosn3_bytes:
	.asciz "'HandlePosn"


==================== Asm code ====================
2018-03-16 16:06:17.504134523 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$tc'HandlePosn2_closure
.type GHC.IO.Handle.$tc'HandlePosn2_closure, @object
GHC.IO.Handle.$tc'HandlePosn2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.$tc'HandlePosn3_bytes


==================== Asm code ====================
2018-03-16 16:06:17.505941737 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$tc'HandlePosn_closure
.type GHC.IO.Handle.$tc'HandlePosn_closure, @object
GHC.IO.Handle.$tc'HandlePosn_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.$trModule_closure+1
	.quad	GHC.IO.Handle.$tc'HandlePosn2_closure+1
	.quad	GHC.IO.Handle.$tc'HandlePosn1_closure+4
	.quad	2346493220596692855
	.quad	1604707260447826943
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:17.513706341 UTC

.section .data
.align 8
.align 1
dupHandle__rbnWK_closure:
	.quad	dupHandle__rbnWK_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.514430903 UTC

.section .text
.align 8
dupHandle__rbnWK_slow:
_cbrNK:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp dupHandle__rbnWK_entry
	.size dupHandle__rbnWK_slow, .-dupHandle__rbnWK_slow


==================== Asm code ====================
2018-03-16 16:06:17.51529757 UTC

.section .text
.align 8
dupHandle__rbnWK_entry:
_cbrNR:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrNS
_cbrNT:
	movq $block_cbrNO_info,-40(%rbp)
	movq 8(%rbp),%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %r14,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbrNO
_cbrNP:
	movq (%rbx),%rax
	jmp *(%rax)
_cbrNS:
	movl $dupHandle__rbnWK_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size dupHandle__rbnWK_entry, .-dupHandle__rbnWK_entry


==================== Asm code ====================
2018-03-16 16:06:17.515995323 UTC

.section .data.rel.ro
.align 8
.align 1
dupHandle__rbnWK_info:
	.quad	dupHandle__rbnWK_entry
	.quad	0
	.quad	30064771086
	.quad	38654705664
	.quad	SboCL_srt+200
	.quad	8
	.quad	dupHandle__rbnWK_slow


==================== Asm code ====================
2018-03-16 16:06:17.516710288 UTC

.section .text
.align 8
_cbrNO:
_cbrNO:
	movq $block_cbrNY_info,-24(%rbp)
	movq 39(%rbx),%rax
	movq 111(%rbx),%rcx
	movq 119(%rbx),%rdx
	movq 87(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbrNY
_cbrO6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbrNO, .-_cbrNO


==================== Asm code ====================
2018-03-16 16:06:17.517354126 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrNO_info:
	.quad	_cbrNO
	.quad	7
	.quad	12884901918
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.518052762 UTC

.section .text
.align 8
_cbrNY:
_cbrNY:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbrOc
_cbrOh:
	movq $block_cbrOf_info,(%rbp)
	movl $GHC.IO.Encoding.getLocaleEncoding1_closure,%ebx
	testb $7,%bl
	jne _cbrOf
_cbrOi:
	movq (%rbx),%rax
	jmp *(%rax)
_cbrOc:
	movq $GHC.Base.Nothing_closure+1,(%rbp)
	jmp _cbrO1
	.size _cbrNY, .-_cbrNY


==================== Asm code ====================
2018-03-16 16:06:17.518670755 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrNY_info:
	.quad	_cbrNY
	.quad	10
	.quad	12884901918
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.519286787 UTC

.section .text
.align 8
_cbrOf:
_cbrOf:
	movq $block_cbrOm_info,(%rbp)
	movq 7(%rbx),%rbx
	jmp stg_ap_v_fast
	.size _cbrOf, .-_cbrOf


==================== Asm code ====================
2018-03-16 16:06:17.51984904 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrOf_info:
	.quad	_cbrOf
	.quad	10
	.quad	4294967326
	.quad	SboCL_srt+208


==================== Asm code ====================
2018-03-16 16:06:17.520527084 UTC

.section .text
.align 8
_cbrOm:
_cbrOm:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbrOr
_cbrOq:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,(%rbp)
	jmp _cbrO1
_cbrOr:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbrOm, .-_cbrOm


==================== Asm code ====================
2018-03-16 16:06:17.521135538 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrOm_info:
	.quad	_cbrOm
	.quad	10
	.quad	4294967326
	.quad	SboCL_srt+208


==================== Asm code ====================
2018-03-16 16:06:17.522240244 UTC

.section .text
.align 8
_cbrO1:
_cbrO1:
	addq $24,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cbrO5
_cbrO4:
	movq $GHC.IO.Handle.Types.NewlineMode_con_info,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,(%r12)
	movq 56(%rbp),%r9
	movq 48(%rbp),%r8
	movq 40(%rbp),%rdi
	movq 32(%rbp),%rsi
	movq 72(%rbp),%r14
	movq 24(%rbp),%rbx
	movq %rbx,40(%rbp)
	movq $GHC.Types.True_closure+2,48(%rbp)
	movq %rax,56(%rbp)
	movq 64(%rbp),%rax
	leaq -15(%r12),%rbx
	movq %rbx,64(%rbp)
	movq 80(%rbp),%rbx
	movq %rbx,72(%rbp)
	movq %rax,80(%rbp)
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.mkDuplexHandle5_entry
_cbrO5:
	movq $24,904(%r13)
	movq $block_cbrO0_info,(%rbp)
	movq %rax,%rbx
	jmp stg_gc_unpt_r1
	.size _cbrO1, .-_cbrO1


==================== Asm code ====================
2018-03-16 16:06:17.522982649 UTC

.section .text
.align 8
_cbrO0:
_cbrO0:
	movq %rbx,(%rbp)
	jmp _cbrO1
	.size _cbrO0, .-_cbrO0


==================== Asm code ====================
2018-03-16 16:06:17.523527062 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrO0_info:
	.quad	_cbrO0
	.quad	10
	.quad	4294967326
	.quad	SboCL_srt+208


==================== Asm code ====================
2018-03-16 16:06:17.525258713 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl4_rbnWL_bytes:
	.asciz "Pattern match failure in do expression at GHC/IO/Handle.hs:713:7-20"


==================== Asm code ====================
2018-03-16 16:06:17.527843043 UTC

.section .data
.align 8
.align 1
lvl5_rbnWM_closure:
	.quad	lvl5_rbnWM_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.528547322 UTC

.section .text
.align 8
lvl5_rbnWM_entry:
_cbrPk:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrPl
_cbrPm:
	movq $block_cbrPi_info,-8(%rbp)
	movl $lvl4_rbnWL_bytes,%r14d
	addq $-8,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbrPl:
	movl $lvl5_rbnWM_closure,%ebx
	jmp *-8(%r13)
	.size lvl5_rbnWM_entry, .-lvl5_rbnWM_entry


==================== Asm code ====================
2018-03-16 16:06:17.529188068 UTC

.section .data.rel.ro
.align 8
.align 1
lvl5_rbnWM_info:
	.quad	lvl5_rbnWM_entry
	.quad	0
	.quad	12884901902
	.quad	4294967299
	.quad	SboCL_srt+224


==================== Asm code ====================
2018-03-16 16:06:17.529825982 UTC

.section .text
.align 8
_cbrPi:
_cbrPi:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.IO.failIO1_entry
	.size _cbrPi, .-_cbrPi


==================== Asm code ====================
2018-03-16 16:06:17.530400653 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrPi_info:
	.quad	_cbrPi
	.quad	0
	.quad	4294967326
	.quad	SboCL_srt+224


==================== Asm code ====================
2018-03-16 16:06:17.536807703 UTC

.section .data
.align 8
.align 1
dupHandleTo_rbnWN_closure:
	.quad	dupHandleTo_rbnWN_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.537626446 UTC

.section .text
.align 8
dupHandleTo_rbnWN_entry:
_cbrPF:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrPJ
_cbrPK:
	movq $block_cbrPC_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbrPC
_cbrPD:
	movq (%rbx),%rax
	jmp *(%rax)
_cbrPJ:
	movl $dupHandleTo_rbnWN_closure,%ebx
	jmp *-8(%r13)
	.size dupHandleTo_rbnWN_entry, .-dupHandleTo_rbnWN_entry


==================== Asm code ====================
2018-03-16 16:06:17.538290965 UTC

.section .data.rel.ro
.align 8
.align 1
dupHandleTo_rbnWN_info:
	.quad	dupHandleTo_rbnWN_entry
	.quad	0
	.quad	4098983643316238
	.quad	30064771098
	.quad	SboCL_srt+96


==================== Asm code ====================
2018-03-16 16:06:17.538991243 UTC

.section .text
.align 8
_cbrPC:
_cbrPC:
	movq $block_cbrPI_info,-8(%rbp)
	movq 23(%rbx),%rax
	movq 31(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbrPI
_cbrPM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbrPC, .-_cbrPC


==================== Asm code ====================
2018-03-16 16:06:17.539627218 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrPC_info:
	.quad	_cbrPC
	.quad	5
	.quad	1847183829631006
	.quad	SboCL_srt+96


==================== Asm code ====================
2018-03-16 16:06:17.540289087 UTC

.section .text
.align 8
_cbrPI:
_cbrPI:
	movq $block_cbrPQ_info,-40(%rbp)
	movq %rbx,%r14
	movq 7(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 23(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-40,%rbp
	jmp GHC.IO.Handle.Internals.flushBuffer1_entry
	.size _cbrPI, .-_cbrPI


==================== Asm code ====================
2018-03-16 16:06:17.540951491 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrPI_info:
	.quad	_cbrPI
	.quad	6
	.quad	1847183829631006
	.quad	SboCL_srt+96


==================== Asm code ====================
2018-03-16 16:06:17.541613726 UTC

.section .text
.align 8
_cbrPQ:
_cbrPQ:
	movq $block_cbrPS_info,(%rbp)
	movq 24(%rbp),%rsi
	movq 80(%rbp),%r14
	jmp Data.Typeable.Internal.sameTypeRep_entry
	.size _cbrPQ, .-_cbrPQ


==================== Asm code ====================
2018-03-16 16:06:17.542208214 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrPQ_info:
	.quad	_cbrPQ
	.quad	11
	.quad	450971566110
	.quad	SboCL_srt+192


==================== Asm code ====================
2018-03-16 16:06:17.542945844 UTC

.section .text
.align 8
_cbrPS:
_cbrPS:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbrQ0
_cbrQ9:
	movq $block_cbrQ3_info,(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_ppv_info,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 48(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.IO.Device.dup2_entry
_cbrQ0:
	movq 64(%rbp),%r14
	addq $96,%rbp
	jmp ioe_dupHandlesNotCompatible_rbnWF_entry
	.size _cbrPS, .-_cbrPS


==================== Asm code ====================
2018-03-16 16:06:17.543604747 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrPS_info:
	.quad	_cbrPS
	.quad	32779
	.quad	176093659166
	.quad	SboCL_srt+192


==================== Asm code ====================
2018-03-16 16:06:17.544289545 UTC

.section .text
.align 8
_cbrQ3:
_cbrQ3:
	movq 88(%rbp),%rax
	movq $block_cbrQ5_info,88(%rbp)
	movq 56(%rbp),%r9
	movq 48(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 72(%rbp),%rbx
	movq %rbx,64(%rbp)
	movq 40(%rbp),%rbx
	movq %rbx,72(%rbp)
	movq %rax,80(%rbp)
	addq $64,%rbp
	jmp dupHandle__rbnWK_entry
	.size _cbrQ3, .-_cbrQ3


==================== Asm code ====================
2018-03-16 16:06:17.544908132 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrQ3_info:
	.quad	_cbrQ3
	.quad	41483
	.quad	21474836510
	.quad	SboCL_srt+216


==================== Asm code ====================
2018-03-16 16:06:17.545841162 UTC

.section .text
.align 8
_cbrQ5:
_cbrQ5:
	movq $block_cbrQ7_info,(%rbp)
	testb $7,%bl
	jne _cbrQ7
_cbrQc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbrQ5, .-_cbrQ5


==================== Asm code ====================
2018-03-16 16:06:17.546969278 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrQ5_info:
	.quad	_cbrQ5
	.quad	0
	.quad	4294967326
	.quad	SboCL_srt+232


==================== Asm code ====================
2018-03-16 16:06:17.547658175 UTC

.section .text
.align 8
_cbrQ7:
_cbrQ7:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbrQi
_cbrQm:
	addq $8,%rbp
	jmp lvl5_rbnWM_entry
_cbrQi:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp stg_takeMVar#
	.size _cbrQ7, .-_cbrQ7


==================== Asm code ====================
2018-03-16 16:06:17.548230418 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrQ7_info:
	.quad	_cbrQ7
	.quad	0
	.quad	4294967326
	.quad	SboCL_srt+232


==================== Asm code ====================
2018-03-16 16:06:17.549948773 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl6_rbnWO_bytes:
	.asciz "dupHandle"


==================== Asm code ====================
2018-03-16 16:06:17.552544467 UTC

.section .data
.align 8
.align 1
lvl7_rbnWP_closure:
	.quad	lvl7_rbnWP_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.553396005 UTC

.section .text
.align 8
lvl7_rbnWP_entry:
_cbrRe:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrRf
_cbrRg:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbrRd
_cbrRc:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl6_rbnWO_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbrRf:
	jmp *-16(%r13)
_cbrRd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl7_rbnWP_entry, .-lvl7_rbnWP_entry


==================== Asm code ====================
2018-03-16 16:06:17.554042135 UTC

.section .data.rel.ro
.align 8
.align 1
lvl7_rbnWP_info:
	.quad	lvl7_rbnWP_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:17.555694928 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hSetNewlineMode3_bytes
.type GHC.IO.Handle.hSetNewlineMode3_bytes, @object
GHC.IO.Handle.hSetNewlineMode3_bytes:
	.asciz "hSetNewlineMode"


==================== Asm code ====================
2018-03-16 16:06:17.558405506 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetNewlineMode2_closure
.type GHC.IO.Handle.hSetNewlineMode2_closure, @object
GHC.IO.Handle.hSetNewlineMode2_closure:
	.quad	GHC.IO.Handle.hSetNewlineMode2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.559201325 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetNewlineMode2_entry
.type GHC.IO.Handle.hSetNewlineMode2_entry, @object
GHC.IO.Handle.hSetNewlineMode2_entry:
_cbrRv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrRw
_cbrRx:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbrRu
_cbrRt:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.hSetNewlineMode3_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbrRw:
	jmp *-16(%r13)
_cbrRu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hSetNewlineMode2_entry, .-GHC.IO.Handle.hSetNewlineMode2_entry


==================== Asm code ====================
2018-03-16 16:06:17.559890221 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetNewlineMode2_info
.type GHC.IO.Handle.hSetNewlineMode2_info, @object
GHC.IO.Handle.hSetNewlineMode2_info:
	.quad	GHC.IO.Handle.hSetNewlineMode2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:17.565100678 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$whSetNewlineMode_closure
.type GHC.IO.Handle.$whSetNewlineMode_closure, @object
GHC.IO.Handle.$whSetNewlineMode_closure:
	.quad	GHC.IO.Handle.$whSetNewlineMode_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.565876527 UTC

.section .text
.align 8
sat_sbo2y_entry:
_cbrRR:
	leaq -136(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrRX
_cbrRY:
	movq $block_cbrRO_info,-24(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbrRO
_cbrRP:
	movq (%rbx),%rax
	jmp *(%rax)
_cbrRX:
	jmp *-8(%r13)
	.size sat_sbo2y_entry, .-sat_sbo2y_entry


==================== Asm code ====================
2018-03-16 16:06:17.566584367 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbo2y_info:
	.quad	sat_sbo2y_entry
	.quad	2
	.quad	4294967307
	.quad	8589934597
	.quad	SboCL_srt+96


==================== Asm code ====================
2018-03-16 16:06:17.567337313 UTC

.section .text
.align 8
_cbrRO:
_cbrRO:
	movq $block_cbrRU_info,-112(%rbp)
	movq %rbx,%r14
	movq 15(%rbx),%rax
	movq %rax,-104(%rbp)
	movq 23(%rbx),%rax
	movq %rax,-96(%rbp)
	movq 31(%rbx),%rax
	movq %rax,-88(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-80(%rbp)
	movq 47(%rbx),%rax
	movq %rax,-72(%rbp)
	movq 55(%rbx),%rax
	movq %rax,-64(%rbp)
	movq 63(%rbx),%rax
	movq %rax,-56(%rbp)
	movq 71(%rbx),%rax
	movq %rax,-48(%rbp)
	movq 79(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 87(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 95(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 103(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 127(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	addq $-112,%rbp
	jmp GHC.IO.Handle.Internals.flushBuffer1_entry
	.size _cbrRO, .-_cbrRO


==================== Asm code ====================
2018-03-16 16:06:17.568086101 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrRO_info:
	.quad	_cbrRO
	.quad	2
	.quad	4294967326
	.quad	SboCL_srt+96


==================== Asm code ====================
2018-03-16 16:06:17.568907557 UTC

.section .text
.align 8
_cbrRU:
_cbrRU:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cbrS2
_cbrS1:
	movq $GHC.IO.Handle.Types.Handle___con_info,-128(%r12)
	movq 112(%rbp),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq 16(%rbp),%rax
	movq %rax,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq 32(%rbp),%rax
	movq %rax,-88(%r12)
	movq 40(%rbp),%rax
	movq %rax,-80(%r12)
	movq 48(%rbp),%rax
	movq %rax,-72(%r12)
	movq 56(%rbp),%rax
	movq %rax,-64(%r12)
	movq 64(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 80(%rbp),%rax
	movq %rax,-40(%r12)
	movq 88(%rbp),%rax
	movq %rax,-32(%r12)
	movq 96(%rbp),%rax
	movq %rax,-24(%r12)
	movq 120(%rbp),%rax
	movq %rax,-16(%r12)
	movq 128(%rbp),%rax
	movq %rax,-8(%r12)
	movq 104(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbrS2:
	movq $136,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbrRU, .-_cbrRU


==================== Asm code ====================
2018-03-16 16:06:17.570014009 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrRU_info:
	.quad	_cbrRU
	.quad	16
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.570721369 UTC

.section .text
.align 8
.globl GHC.IO.Handle.$whSetNewlineMode_entry
.type GHC.IO.Handle.$whSetNewlineMode_entry, @object
GHC.IO.Handle.$whSetNewlineMode_entry:
_cbrS4:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbrS8
_cbrS7:
	movq $sat_sbo2y_info,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -14(%r12),%rdi
	movq %r14,%rsi
	movl $GHC.IO.Handle.hSetNewlineMode2_closure,%r14d
	jmp GHC.IO.Handle.Internals.withAllHandles__1_entry
_cbrS8:
	movq $24,904(%r13)
	movl $GHC.IO.Handle.$whSetNewlineMode_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.$whSetNewlineMode_entry, .-GHC.IO.Handle.$whSetNewlineMode_entry


==================== Asm code ====================
2018-03-16 16:06:17.571373543 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.$whSetNewlineMode_info
.type GHC.IO.Handle.$whSetNewlineMode_info, @object
GHC.IO.Handle.$whSetNewlineMode_info:
	.quad	GHC.IO.Handle.$whSetNewlineMode_entry
	.quad	0
	.quad	31525201686560782
	.quad	17179869207
	.quad	SboCL_srt+96


==================== Asm code ====================
2018-03-16 16:06:17.574297255 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetNewlineMode1_closure
.type GHC.IO.Handle.hSetNewlineMode1_closure, @object
GHC.IO.Handle.hSetNewlineMode1_closure:
	.quad	GHC.IO.Handle.hSetNewlineMode1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.575048429 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetNewlineMode1_entry
.type GHC.IO.Handle.hSetNewlineMode1_entry, @object
GHC.IO.Handle.hSetNewlineMode1_entry:
_cbrT0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrT1
_cbrT2:
	movq $block_cbrSX_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbrSX
_cbrSY:
	movq (%rbx),%rax
	jmp *(%rax)
_cbrT1:
	movl $GHC.IO.Handle.hSetNewlineMode1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hSetNewlineMode1_entry, .-GHC.IO.Handle.hSetNewlineMode1_entry


==================== Asm code ====================
2018-03-16 16:06:17.575748491 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetNewlineMode1_info
.type GHC.IO.Handle.hSetNewlineMode1_info, @object
GHC.IO.Handle.hSetNewlineMode1_info:
	.quad	GHC.IO.Handle.hSetNewlineMode1_entry
	.quad	0
	.quad	21474836494
	.quad	12884901903
	.quad	SboCL_srt+264


==================== Asm code ====================
2018-03-16 16:06:17.576397573 UTC

.section .text
.align 8
_cbrSX:
_cbrSX:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.$whSetNewlineMode_entry
	.size _cbrSX, .-_cbrSX


==================== Asm code ====================
2018-03-16 16:06:17.57697031 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrSX_info:
	.quad	_cbrSX
	.quad	1
	.quad	4294967326
	.quad	SboCL_srt+264


==================== Asm code ====================
2018-03-16 16:06:17.579096147 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetNewlineMode_closure
.type GHC.IO.Handle.hSetNewlineMode_closure, @object
GHC.IO.Handle.hSetNewlineMode_closure:
	.quad	GHC.IO.Handle.hSetNewlineMode_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.579714831 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetNewlineMode_entry
.type GHC.IO.Handle.hSetNewlineMode_entry, @object
GHC.IO.Handle.hSetNewlineMode_entry:
_cbrTk:
	jmp GHC.IO.Handle.hSetNewlineMode1_entry
	.size GHC.IO.Handle.hSetNewlineMode_entry, .-GHC.IO.Handle.hSetNewlineMode_entry


==================== Asm code ====================
2018-03-16 16:06:17.580320442 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetNewlineMode_info
.type GHC.IO.Handle.hSetNewlineMode_info, @object
GHC.IO.Handle.hSetNewlineMode_info:
	.quad	GHC.IO.Handle.hSetNewlineMode_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SboCL_srt+280


==================== Asm code ====================
2018-03-16 16:06:17.582528637 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl8_rbnWQ_bytes:
	.asciz "hSetBinaryMode"


==================== Asm code ====================
2018-03-16 16:06:17.584949196 UTC

.section .data
.align 8
.align 1
lvl9_rbnWR_closure:
	.quad	lvl9_rbnWR_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.585780968 UTC

.section .text
.align 8
lvl9_rbnWR_entry:
_cbrTy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrTz
_cbrTA:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbrTx
_cbrTw:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl8_rbnWQ_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbrTz:
	jmp *-16(%r13)
_cbrTx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl9_rbnWR_entry, .-lvl9_rbnWR_entry


==================== Asm code ====================
2018-03-16 16:06:17.586423483 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_rbnWR_info:
	.quad	lvl9_rbnWR_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:17.587967844 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl10_rbnWS_bytes:
	.asciz "codec_state"


==================== Asm code ====================
2018-03-16 16:06:17.590860601 UTC

.section .data
.align 8
.align 1
lvl11_rbnWT_closure:
	.quad	lvl11_rbnWT_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.591652598 UTC

.section .text
.align 8
lvl11_rbnWT_entry:
_cbrTR:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrTS
_cbrTT:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbrTO
_cbrTN:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_cbrTP_info,-24(%rbp)
	movl $lvl10_rbnWS_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbrTS:
	jmp *-16(%r13)
_cbrTO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl11_rbnWT_entry, .-lvl11_rbnWT_entry


==================== Asm code ====================
2018-03-16 16:06:17.592343732 UTC

.section .data.rel.ro
.align 8
.align 1
lvl11_rbnWT_info:
	.quad	lvl11_rbnWT_entry
	.quad	0
	.quad	4294967317
	.quad	SboCL_srt+288


==================== Asm code ====================
2018-03-16 16:06:17.593004958 UTC

.section .text
.align 8
_cbrTP:
_cbrTP:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size _cbrTP, .-_cbrTP


==================== Asm code ====================
2018-03-16 16:06:17.593567794 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrTP_info:
	.quad	_cbrTP
	.quad	0
	.quad	4294967326
	.quad	SboCL_srt+288


==================== Asm code ====================
2018-03-16 16:06:17.629919855 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetBinaryMode1_closure
.type GHC.IO.Handle.hSetBinaryMode1_closure, @object
GHC.IO.Handle.hSetBinaryMode1_closure:
	.quad	GHC.IO.Handle.hSetBinaryMode1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.630823723 UTC

.section .text
.align 8
lvl48_sbo2J_entry:
_cbrUi:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrUj
_cbrUk:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbrUf_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbrUf
_cbrUg:
	movq (%rbx),%rax
	jmp *(%rax)
_cbrUj:
	jmp *-16(%r13)
	.size lvl48_sbo2J_entry, .-lvl48_sbo2J_entry


==================== Asm code ====================
2018-03-16 16:06:17.631440314 UTC

.section .data.rel.ro
.align 8
.align 1
lvl48_sbo2J_info:
	.quad	lvl48_sbo2J_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:17.632109366 UTC

.section .text
.align 8
_cbrUf:
_cbrUf:
	movl $GHC.IO.Handle.Types.LF_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbrUf, .-_cbrUf


==================== Asm code ====================
2018-03-16 16:06:17.632700106 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrUf_info:
	.quad	_cbrUf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.633456371 UTC

.section .text
.align 8
sat_sbo5C_entry:
_cbrVa:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrVe
_cbrVf:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbrV7_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbrV7
_cbrV8:
	movq (%rbx),%rax
	jmp *(%rax)
_cbrVe:
	jmp *-16(%r13)
	.size sat_sbo5C_entry, .-sat_sbo5C_entry


==================== Asm code ====================
2018-03-16 16:06:17.634116688 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbo5C_info:
	.quad	sat_sbo5C_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:17.634861207 UTC

.section .text
.align 8
_cbrV7:
_cbrV7:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbrVi
_cbrVh:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbrVi:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbrV7, .-_cbrV7


==================== Asm code ====================
2018-03-16 16:06:17.635577561 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrV7_info:
	.quad	_cbrV7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.636304694 UTC

.section .text
.align 8
sat_sbo5V_entry:
_cbrVG:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrVN
_cbrVO:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbrVD_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbrVD
_cbrVE:
	movq (%rbx),%rax
	jmp *(%rax)
_cbrVN:
	jmp *-16(%r13)
	.size sat_sbo5V_entry, .-sat_sbo5V_entry


==================== Asm code ====================
2018-03-16 16:06:17.636931463 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbo5V_info:
	.quad	sat_sbo5V_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:17.637699095 UTC

.section .text
.align 8
_cbrVD:
_cbrVD:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbrVR
_cbrVQ:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 39(%rbx),%rbx
	addq 8(%rbp),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbrVR:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbrVD, .-_cbrVD


==================== Asm code ====================
2018-03-16 16:06:17.638391077 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrVD_info:
	.quad	_cbrVD
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.639120215 UTC

.section .text
.align 8
sat_sbo6i_entry:
_cbrVT:
	leaq -176(%rbp),%rax
	cmpq %r15,%rax
	jb _cbrVU
_cbrVV:
	movq $block_cbrUu_info,-24(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbrUu
_cbrUv:
	movq (%rbx),%rax
	jmp *(%rax)
_cbrVU:
	jmp *-8(%r13)
	.size sat_sbo6i_entry, .-sat_sbo6i_entry


==================== Asm code ====================
2018-03-16 16:06:17.639800641 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbo6i_info:
	.quad	sat_sbo6i_entry
	.quad	2
	.quad	52780853100555
	.quad	8589934597
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.640683778 UTC

.section .text
.align 8
_cbrUu:
_cbrUu:
	movq $block_cbrUz_info,-104(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq 127(%rbx),%rbx
	movq %rbx,80(%rsp)
	movq 8(%r11),%rbx
	movq %rdx,88(%rsp)
	movq 72(%rsp),%rdx
	movq %rdx,-96(%rbp)
	movq 88(%rsp),%rdx
	movq %rdx,-88(%rbp)
	movq %rsi,-80(%rbp)
	movq %rdi,-72(%rbp)
	movq %r8,-64(%rbp)
	movq %r9,-56(%rbp)
	movq %r10,-48(%rbp)
	movq %r11,-40(%rbp)
	movq %r14,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq 80(%rsp),%rax
	movq %rax,-8(%rbp)
	movq 64(%rsp),%rax
	movq %rax,(%rbp)
	addq $-104,%rbp
	testb $7,%bl
	jne _cbrUz
_cbrUA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbrUu, .-_cbrUu


==================== Asm code ====================
2018-03-16 16:06:17.641489389 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrUu_info:
	.quad	_cbrUu
	.quad	2
	.quad	52780853100574
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.642171998 UTC

.section .text
.align 8
_cbrUz:
_cbrUz:
	movq $block_cbrUG_info,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbrUG
_cbrUH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbrUz, .-_cbrUz


==================== Asm code ====================
2018-03-16 16:06:17.642809929 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrUz_info:
	.quad	_cbrUz
	.quad	15
	.quad	52780853100574
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.643602074 UTC

.section .text
.align 8
_cbrUG:
_cbrUG:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbrZH
_cbs0C:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _ubs13
_cbs0A:
	movl $GHC.IO.Handle.Internals.flushCharBuffer2_closure,%ebx
	addq $144,%rbp
	jmp stg_ap_0_fast
_ubs13:
	addq $24,%rbp
	jmp _sbo3e
_cbrZH:
	movq 80(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbrUL_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbrUL
_cbrUM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbrUG, .-_cbrUG


==================== Asm code ====================
2018-03-16 16:06:17.644310613 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrUG_info:
	.quad	_cbrUG
	.quad	209
	.quad	52780853100574
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.645019633 UTC

.section .text
.align 8
_cbrUL:
_cbrUL:
	movq $block_cbrUQ_info,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbrUQ
_cbrUR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbrUL, .-_cbrUL


==================== Asm code ====================
2018-03-16 16:06:17.645661558 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrUL_info:
	.quad	_cbrUL
	.quad	15
	.quad	35188667056158
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.64739319 UTC

.section .text
.align 8
_cbrUQ:
_cbrUQ:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbs0p
_ubs14:
	addq $24,%rbp
	jmp _sbo3e
_ubs15:
	addq $24,%rbp
	jmp _sbo3e
_cbs0p:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _ubs15
_cbrZL:
	movq 72(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbrUY_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbrUY
_cbrUZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbrUQ, .-_cbrUQ


==================== Asm code ====================
2018-03-16 16:06:17.648051981 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrUQ_info:
	.quad	_cbrUQ
	.quad	209
	.quad	35188667056158
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.648886433 UTC

.section .text
.align 8
_cbrUY:
_cbrUY:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbrZO
_cbrZN:
	movq 64(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq 8(%rax),%rdx
	movq $sat_sbo5C_info,-16(%r12)
	movq %rdx,(%r12)
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cbrVn_info,-8(%rbp)
	movq %rbx,%rcx
	movq 64(%rsp),%rax
	movq %rax,%rbx
	movq %rcx,(%rbp)
	movq %r14,56(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbrVn
_cbrVo:
	movq (%rbx),%rax
	jmp *(%rax)
_cbrZO:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbrUY, .-_cbrUY


==================== Asm code ====================
2018-03-16 16:06:17.649722928 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrUY_info:
	.quad	_cbrUY
	.quad	4111
	.quad	35188667056158
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.650513837 UTC

.section .text
.align 8
_cbrVn:
_cbrVn:
	movq 39(%rbx),%rax
	testq %rax,%rax
	jne _cbrZR
_cbs0m:
	movq 48(%rbp),%rax
	movq 8(%rbp),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $16,%rbp
	jmp _sbo3e
_cbrZR:
	movq $block_cbrVu_info,-32(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq 96(%rbp),%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rsi,(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbrVu
_cbrVv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbrVn, .-_cbrVn


==================== Asm code ====================
2018-03-16 16:06:17.651210057 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrVn_info:
	.quad	_cbrVn
	.quad	16
	.quad	35188667056158
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.652067654 UTC

.section .text
.align 8
_cbrVu:
_cbrVu:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbrZT
_cbs0b:
	movq $block_cbrZZ_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbrZZ
_cbs00:
	movq (%rbx),%rax
	jmp *(%rax)
_cbrZW:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_cbrZT:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbrZW
_cbrZV:
	movq $sat_sbo5V_info,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	movq 80(%rbp),%rax
	leaq -24(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $48,%rbp
	jmp _sbo3e
	.size _cbrVu, .-_cbrVu


==================== Asm code ====================
2018-03-16 16:06:17.652776914 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrVu_info:
	.quad	_cbrVu
	.quad	788
	.quad	35188667056158
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.653427634 UTC

.section .text
.align 8
_cbrZZ:
_cbrZZ:
	movq $block_cbs04_info,-8(%rbp)
	movq 96(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,96(%rbp)
	addq $-8,%rbp
	jmp stg_ap_pv_fast
	.size _cbrZZ, .-_cbrZZ


==================== Asm code ====================
2018-03-16 16:06:17.65405996 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrZZ_info:
	.quad	_cbrZZ
	.quad	788
	.quad	35188667056158
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.654793298 UTC

.section .text
.align 8
_cbs04:
_cbs04:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbs0f
_cbs0e:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	movq 40(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 48(%rbp),%rax
	movq $block_cbs07_info,48(%rbp)
	leaq -47(%r12),%r8
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 104(%rbp),%r14
	addq $48,%rbp
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_cbs0f:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbs04, .-_cbs04


==================== Asm code ====================
2018-03-16 16:06:17.655473613 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbs04_info:
	.quad	_cbs04
	.quad	1557
	.quad	35188667056158
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.656123381 UTC

.section .text
.align 8
_cbs07:
_cbs07:
	movq $block_cbs09_info,(%rbp)
	testb $7,%bl
	jne _cbs09
_cbs0h:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbs07, .-_cbs07


==================== Asm code ====================
2018-03-16 16:06:17.656725983 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbs07_info:
	.quad	_cbs07
	.quad	4111
	.quad	35188667056158
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.65741811 UTC

.section .text
.align 8
_cbs09:
_cbs09:
	movq 40(%rbp),%rax
	movq 7(%rbx),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $8,%rbp
	jmp _sbo3e
	.size _cbs09, .-_cbs09


==================== Asm code ====================
2018-03-16 16:06:17.658020134 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbs09_info:
	.quad	_cbs09
	.quad	4111
	.quad	35188667056158
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.658686988 UTC

.section .text
.align 8
_sbo3e:
_sbo3e:
	movq $block_cbrW3_info,-8(%rbp)
	movq 80(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbrW3
_cbrYF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbo3e, .-_sbo3e


==================== Asm code ====================
2018-03-16 16:06:17.659467287 UTC

.section .text
.align 8
_cbrW3:
_cbrW3:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbrYM
_cbrZb:
	movq $block_cbrZ9_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbrZ9
_cbrZc:
	movq (%rbx),%rax
	jmp *(%rax)
_cbrYM:
	movq $block_cbrYJ_info,(%rbp)
	movq 80(%rbp),%rbx
	testb $7,%bl
	jne _cbrYJ
_cbrYN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbrW3, .-_cbrW3


==================== Asm code ====================
2018-03-16 16:06:17.660119581 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrW3_info:
	.quad	_cbrW3
	.quad	69647
	.quad	35188667056158
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.660795182 UTC

.section .text
.align 8
_cbrYJ:
_cbrYJ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubs1b
_cbrZ3:
	movq $block_cbrYW_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbrYW
_cbrYX:
	movq (%rbx),%rax
	jmp *(%rax)
_ubs1b:
	addq $8,%rbp
	jmp _sbo3g
	.size _cbrYJ, .-_cbrYJ


==================== Asm code ====================
2018-03-16 16:06:17.661796811 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrYJ_info:
	.quad	_cbrYJ
	.quad	102415
	.quad	35188667056158
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.662400751 UTC

.section .text
.align 8
_cbrYW:
_cbrYW:
	movq $block_cbrZ1_info,(%rbp)
	movq 23(%rbx),%rbx
	jmp stg_ap_v_fast
	.size _cbrYW, .-_cbrYW


==================== Asm code ====================
2018-03-16 16:06:17.663008963 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrYW_info:
	.quad	_cbrYW
	.quad	102415
	.quad	35188667056158
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.663588357 UTC

.section .text
.align 8
_cbrZ1:
_cbrZ1:
	addq $8,%rbp
	jmp _sbo3g
	.size _cbrZ1, .-_cbrZ1


==================== Asm code ====================
2018-03-16 16:06:17.664101412 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrZ1_info:
	.quad	_cbrZ1
	.quad	102415
	.quad	35188667056158
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.664702649 UTC

.section .text
.align 8
_cbrZ9:
_cbrZ9:
	movq $block_cbrZg_info,(%rbp)
	movq 23(%rbx),%rbx
	jmp stg_ap_v_fast
	.size _cbrZ9, .-_cbrZ9


==================== Asm code ====================
2018-03-16 16:06:17.665334981 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrZ9_info:
	.quad	_cbrZ9
	.quad	69647
	.quad	35188667056158
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.666014764 UTC

.section .text
.align 8
_cbrZg:
_cbrZg:
	movq $block_cbrZi_info,(%rbp)
	movq 80(%rbp),%rbx
	testb $7,%bl
	jne _cbrZi
_cbrZl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbrZg, .-_cbrZg


==================== Asm code ====================
2018-03-16 16:06:17.666608727 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrZg_info:
	.quad	_cbrZg
	.quad	69647
	.quad	35188667056158
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.667280866 UTC

.section .text
.align 8
_cbrZi:
_cbrZi:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubs19
_cbrZB:
	movq $block_cbrZu_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbrZu
_cbrZv:
	movq (%rbx),%rax
	jmp *(%rax)
_ubs19:
	addq $8,%rbp
	jmp _sbo3g
	.size _cbrZi, .-_cbrZi


==================== Asm code ====================
2018-03-16 16:06:17.667877062 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrZi_info:
	.quad	_cbrZi
	.quad	102415
	.quad	35188667056158
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.668483304 UTC

.section .text
.align 8
_cbrZu:
_cbrZu:
	movq $block_cbrZz_info,(%rbp)
	movq 23(%rbx),%rbx
	jmp stg_ap_v_fast
	.size _cbrZu, .-_cbrZu


==================== Asm code ====================
2018-03-16 16:06:17.669048391 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrZu_info:
	.quad	_cbrZu
	.quad	102415
	.quad	35188667056158
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.669669775 UTC

.section .text
.align 8
_cbrZz:
_cbrZz:
	addq $8,%rbp
	jmp _sbo3g
	.size _cbrZz, .-_cbrZz


==================== Asm code ====================
2018-03-16 16:06:17.670186886 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrZz_info:
	.quad	_cbrZz
	.quad	102415
	.quad	35188667056158
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.670856594 UTC

.section .text
.align 8
_sbo3g:
_sbo3g:
	movq $block_cbrWa_info,-8(%rbp)
	movq 104(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbrWa
_cbrYj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbo3g, .-_sbo3g


==================== Asm code ====================
2018-03-16 16:06:17.671592889 UTC

.section .text
.align 8
_cbrWa:
_cbrWa:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbrYq
_cbrYE:
	movq $GHC.Base.Nothing_closure+1,112(%rbp)
	addq $8,%rbp
	jmp _sbo3i
_cbrYq:
	movq $block_cbrYn_info,(%rbp)
	movl $GHC.IO.Encoding.getLocaleEncoding1_closure,%ebx
	testb $7,%bl
	jne _cbrYn
_cbrYr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbrWa, .-_cbrWa


==================== Asm code ====================
2018-03-16 16:06:17.672209274 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrWa_info:
	.quad	_cbrWa
	.quad	626703
	.quad	35188667056158
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.672794906 UTC

.section .text
.align 8
_cbrYn:
_cbrYn:
	movq $block_cbrYv_info,(%rbp)
	movq 7(%rbx),%rbx
	jmp stg_ap_v_fast
	.size _cbrYn, .-_cbrYn


==================== Asm code ====================
2018-03-16 16:06:17.673690534 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrYn_info:
	.quad	_cbrYn
	.quad	626703
	.quad	4294967326
	.quad	SboCL_srt+304


==================== Asm code ====================
2018-03-16 16:06:17.674348196 UTC

.section .text
.align 8
_cbrYv:
_cbrYv:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbrYA
_cbrYz:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,112(%rbp)
	addq $8,%rbp
	jmp _sbo3i
_cbrYA:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbrYv, .-_cbrYv


==================== Asm code ====================
2018-03-16 16:06:17.674938275 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrYv_info:
	.quad	_cbrYv
	.quad	626703
	.quad	4294967326
	.quad	SboCL_srt+304


==================== Asm code ====================
2018-03-16 16:06:17.675577395 UTC

.section .text
.align 8
_sbo3i:
_sbo3i:
	movq $block_cbrWf_info,-8(%rbp)
	movq 104(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbrWf
_cbrWh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbo3i, .-_sbo3i


==================== Asm code ====================
2018-03-16 16:06:17.677079781 UTC

.section .text
.align 8
_cbrWf:
_cbrWf:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbrWq
_cbrWB:
	movq $block_cbrWz_info,(%rbp)
	movq %rbx,%rax
	movq 6(%rbx),%rbx
	movq %rax,112(%rbp)
	testb $7,%bl
	jne _cbrWz
_cbrWC:
	movq (%rbx),%rax
	jmp *(%rax)
_cbrWt:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_cbrWq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbrWt
_cbrWs:
	movq $(,)_con_info,-16(%r12)
	movq $lvl11_rbnWT_closure,-8(%r12)
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	movq %rax,(%r12)
	movq $block_cbrWm_info,(%rbp)
	leaq -15(%r12),%rbx
	jmp stg_newMutVar#
	.size _cbrWf, .-_cbrWf


==================== Asm code ====================
2018-03-16 16:06:17.677833922 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrWf_info:
	.quad	_cbrWf
	.quad	626703
	.quad	4294967326
	.quad	SboCL_srt+304


==================== Asm code ====================
2018-03-16 16:06:17.678659544 UTC

.section .text
.align 8
_cbrWm:
_cbrWm:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cbrWw
_cbrWv:
	movq $GHC.IO.Handle.Types.Handle___con_info,-128(%r12)
	movq 104(%rbp),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq 16(%rbp),%rax
	movq %rax,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq 32(%rbp),%rax
	movq %rax,-88(%r12)
	movq 40(%rbp),%rax
	movq %rax,-80(%r12)
	movq 48(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 64(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq $GHC.Base.Nothing_closure+1,-40(%r12)
	movq $GHC.Base.Nothing_closure+1,-32(%r12)
	movq $GHC.Base.Nothing_closure+1,-24(%r12)
	movq 120(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rax,-8(%r12)
	movq 96(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbrWw:
	movq $136,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbrWm, .-_cbrWm


==================== Asm code ====================
2018-03-16 16:06:17.679417327 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrWm_info:
	.quad	_cbrWm
	.quad	626703
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.680109772 UTC

.section .text
.align 8
_cbrWz:
_cbrWz:
	movq $block_cbrWI_info,(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,80(%rbp)
	movq %rax,88(%rbp)
	testb $7,%bl
	jne _cbrWI
_cbrXU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbrWz, .-_cbrWz


==================== Asm code ====================
2018-03-16 16:06:17.680722117 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrWz_info:
	.quad	_cbrWz
	.quad	102415
	.quad	4294967326
	.quad	SboCL_srt+304


==================== Asm code ====================
2018-03-16 16:06:17.681487954 UTC

.section .text
.align 8
_cbrWI:
_cbrWI:
	movq 88(%rbp),%rax
	andl $7,%ebx
	cmpq $3,%rbx
	jne _ubs10
_cbrY5:
	movq $block_cbrY3_info,(%rbp)
	movq %rax,%rbx
	jmp stg_ap_v_fast
_ubs10:
	cmpq $6,%rbx
	jne _cbrY0
_cbrYe:
	movq $block_cbrYc_info,(%rbp)
	movq %rax,%rbx
	jmp stg_ap_v_fast
_cbrY0:
	movq $GHC.Base.Nothing_closure+1,88(%rbp)
	addq $8,%rbp
	jmp _sbo3z
	.size _cbrWI, .-_cbrWI


==================== Asm code ====================
2018-03-16 16:06:17.682125647 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrWI_info:
	.quad	_cbrWI
	.quad	4111
	.quad	4294967326
	.quad	SboCL_srt+304


==================== Asm code ====================
2018-03-16 16:06:17.682838599 UTC

.section .text
.align 8
_cbrYc:
_cbrYc:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbrYi
_cbrYh:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,88(%rbp)
	addq $8,%rbp
	jmp _sbo3z
_cbrYi:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbrYc, .-_cbrYc


==================== Asm code ====================
2018-03-16 16:06:17.683459212 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrYc_info:
	.quad	_cbrYc
	.quad	69647
	.quad	4294967326
	.quad	SboCL_srt+304


==================== Asm code ====================
2018-03-16 16:06:17.684121863 UTC

.section .text
.align 8
_cbrY3:
_cbrY3:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbrY9
_cbrY8:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,88(%rbp)
	addq $8,%rbp
	jmp _sbo3z
_cbrY9:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbrY3, .-_cbrY3


==================== Asm code ====================
2018-03-16 16:06:17.684737063 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrY3_info:
	.quad	_cbrY3
	.quad	69647
	.quad	4294967326
	.quad	SboCL_srt+304


==================== Asm code ====================
2018-03-16 16:06:17.685830602 UTC

.section .text
.align 8
_sbo3z:
_sbo3z:
	movq $block_cbrWN_info,-8(%rbp)
	movq 24(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbrWN
_cbrWP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbo3z, .-_sbo3z


==================== Asm code ====================
2018-03-16 16:06:17.68673598 UTC

.section .text
.align 8
_cbrWN:
_cbrWN:
	movq 80(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $5,%rcx
	jb _ubs11
_ubs12:
	cmpq $6,%rcx
	jb _cbrXw
_cbrXN:
	movq $block_cbrXF_info,(%rbp)
	movq %rax,%rbx
	jmp stg_ap_v_fast
_cbrXw:
	movq $block_cbrXo_info,(%rbp)
	movq %rax,%rbx
	jmp stg_ap_v_fast
_ubs11:
	cmpq $4,%rcx
	jb _cbrWY
_cbrXf:
	movq $block_cbrX7_info,(%rbp)
	movq %rax,%rbx
	jmp stg_ap_v_fast
_cbrX1:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_cbrWY:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbrX1
_cbrX0:
	movq $(,)_con_info,-16(%r12)
	movq $lvl11_rbnWT_closure,-8(%r12)
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	movq %rax,(%r12)
	movq $block_cbrWU_info,(%rbp)
	movq %rbx,%rax
	leaq -15(%r12),%rbx
	movq %rax,80(%rbp)
	jmp stg_newMutVar#
	.size _cbrWN, .-_cbrWN


==================== Asm code ====================
2018-03-16 16:06:17.687454811 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrWN_info:
	.quad	_cbrWN
	.quad	4623
	.quad	4294967326
	.quad	SboCL_srt+304


==================== Asm code ====================
2018-03-16 16:06:17.688273398 UTC

.section .text
.align 8
_cbrWU:
_cbrWU:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cbrX4
_cbrX3:
	movq $GHC.IO.Handle.Types.Handle___con_info,-128(%r12)
	movq 104(%rbp),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq 16(%rbp),%rax
	movq %rax,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq 80(%rbp),%rax
	movq %rax,-88(%r12)
	movq 40(%rbp),%rax
	movq %rax,-80(%r12)
	movq 48(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 64(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq $GHC.Base.Nothing_closure+1,-40(%r12)
	movq 88(%rbp),%rax
	movq %rax,-32(%r12)
	movq 112(%rbp),%rax
	movq %rax,-24(%r12)
	movq 120(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rax,-8(%r12)
	movq 96(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbrX4:
	movq $136,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbrWU, .-_cbrWU


==================== Asm code ====================
2018-03-16 16:06:17.689034047 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrWU_info:
	.quad	_cbrWU
	.quad	4623
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.689781946 UTC

.section .text
.align 8
_cbrX7:
_cbrX7:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbrXi
_cbrXh:
	movq $(,)_con_info,-16(%r12)
	movq $lvl11_rbnWT_closure,-8(%r12)
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	movq %rax,(%r12)
	movq $block_cbrXa_info,(%rbp)
	movq %rbx,%rax
	leaq -15(%r12),%rbx
	movq %rax,80(%rbp)
	jmp stg_newMutVar#
_cbrXi:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbrX7, .-_cbrX7


==================== Asm code ====================
2018-03-16 16:06:17.690426072 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrX7_info:
	.quad	_cbrX7
	.quad	37391
	.quad	4294967326
	.quad	SboCL_srt+304


==================== Asm code ====================
2018-03-16 16:06:17.691238076 UTC

.section .text
.align 8
_cbrXa:
_cbrXa:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _cbrXl
_cbrXk:
	movq $GHC.Base.Just_con_info,-144(%r12)
	movq 80(%rbp),%rax
	movq %rax,-136(%r12)
	movq $GHC.IO.Handle.Types.Handle___con_info,-128(%r12)
	movq 104(%rbp),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq 16(%rbp),%rax
	movq %rax,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq $GHC.IO.Handle.Types.WriteHandle_closure+4,-88(%r12)
	movq 40(%rbp),%rax
	movq %rax,-80(%r12)
	movq 48(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 64(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	leaq -142(%r12),%rax
	movq %rax,-40(%r12)
	movq 88(%rbp),%rax
	movq %rax,-32(%r12)
	movq 112(%rbp),%rax
	movq %rax,-24(%r12)
	movq 120(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rax,-8(%r12)
	movq 96(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbrXl:
	movq $152,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbrXa, .-_cbrXa


==================== Asm code ====================
2018-03-16 16:06:17.691991774 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrXa_info:
	.quad	_cbrXa
	.quad	4623
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.692644424 UTC

.section .text
.align 8
_cbrXo:
_cbrXo:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbrXz
_cbrXy:
	movq $(,)_con_info,-16(%r12)
	movq $lvl11_rbnWT_closure,-8(%r12)
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	movq %rax,(%r12)
	movq $block_cbrXr_info,(%rbp)
	movq %rbx,%rax
	leaq -15(%r12),%rbx
	movq %rax,80(%rbp)
	jmp stg_newMutVar#
_cbrXz:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbrXo, .-_cbrXo


==================== Asm code ====================
2018-03-16 16:06:17.693299334 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrXo_info:
	.quad	_cbrXo
	.quad	37391
	.quad	4294967326
	.quad	SboCL_srt+304


==================== Asm code ====================
2018-03-16 16:06:17.694126502 UTC

.section .text
.align 8
_cbrXr:
_cbrXr:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _cbrXC
_cbrXB:
	movq $GHC.Base.Just_con_info,-144(%r12)
	movq 80(%rbp),%rax
	movq %rax,-136(%r12)
	movq $GHC.IO.Handle.Types.Handle___con_info,-128(%r12)
	movq 104(%rbp),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq 16(%rbp),%rax
	movq %rax,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq $GHC.IO.Handle.Types.AppendHandle_closure+5,-88(%r12)
	movq 40(%rbp),%rax
	movq %rax,-80(%r12)
	movq 48(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 64(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	leaq -142(%r12),%rax
	movq %rax,-40(%r12)
	movq 88(%rbp),%rax
	movq %rax,-32(%r12)
	movq 112(%rbp),%rax
	movq %rax,-24(%r12)
	movq 120(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rax,-8(%r12)
	movq 96(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbrXC:
	movq $152,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbrXr, .-_cbrXr


==================== Asm code ====================
2018-03-16 16:06:17.695042439 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrXr_info:
	.quad	_cbrXr
	.quad	4623
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.695823809 UTC

.section .text
.align 8
_cbrXF:
_cbrXF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbrXQ
_cbrXP:
	movq $(,)_con_info,-16(%r12)
	movq $lvl11_rbnWT_closure,-8(%r12)
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	movq %rax,(%r12)
	movq $block_cbrXI_info,(%rbp)
	movq %rbx,%rax
	leaq -15(%r12),%rbx
	movq %rax,80(%rbp)
	jmp stg_newMutVar#
_cbrXQ:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbrXF, .-_cbrXF


==================== Asm code ====================
2018-03-16 16:06:17.696472035 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrXF_info:
	.quad	_cbrXF
	.quad	37391
	.quad	4294967326
	.quad	SboCL_srt+304


==================== Asm code ====================
2018-03-16 16:06:17.697655847 UTC

.section .text
.align 8
_cbrXI:
_cbrXI:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _cbrXT
_cbrXS:
	movq $GHC.Base.Just_con_info,-144(%r12)
	movq 80(%rbp),%rax
	movq %rax,-136(%r12)
	movq $GHC.IO.Handle.Types.Handle___con_info,-128(%r12)
	movq 104(%rbp),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq 16(%rbp),%rax
	movq %rax,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq $GHC.IO.Handle.Types.ReadWriteHandle_closure+6,-88(%r12)
	movq 40(%rbp),%rax
	movq %rax,-80(%r12)
	movq 48(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 64(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	leaq -142(%r12),%rax
	movq %rax,-40(%r12)
	movq 88(%rbp),%rax
	movq %rax,-32(%r12)
	movq 112(%rbp),%rax
	movq %rax,-24(%r12)
	movq 120(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rax,-8(%r12)
	movq 96(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbrXT:
	movq $152,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbrXI, .-_cbrXI


==================== Asm code ====================
2018-03-16 16:06:17.698470201 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbrXI_info:
	.quad	_cbrXI
	.quad	4623
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.699168767 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetBinaryMode1_entry
.type GHC.IO.Handle.hSetBinaryMode1_entry, @object
GHC.IO.Handle.hSetBinaryMode1_entry:
_cbs1T:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbs1X
_cbs1W:
	movq $lvl48_sbo2J_info,-40(%r12)
	movq %rsi,-24(%r12)
	movq $sat_sbo6i_info,-16(%r12)
	movq %rsi,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rdi
	movq %r14,%rsi
	movl $lvl9_rbnWR_closure,%r14d
	jmp GHC.IO.Handle.Internals.withAllHandles__1_entry
_cbs1X:
	movq $48,904(%r13)
	movl $GHC.IO.Handle.hSetBinaryMode1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hSetBinaryMode1_entry, .-GHC.IO.Handle.hSetBinaryMode1_entry


==================== Asm code ====================
2018-03-16 16:06:17.699874413 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetBinaryMode1_info
.type GHC.IO.Handle.hSetBinaryMode1_info, @object
GHC.IO.Handle.hSetBinaryMode1_info:
	.quad	GHC.IO.Handle.hSetBinaryMode1_entry
	.quad	0
	.quad	264436841447438
	.quad	12884901903
	.quad	SboCL_srt+200


==================== Asm code ====================
2018-03-16 16:06:17.702167587 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetBinaryMode_closure
.type GHC.IO.Handle.hSetBinaryMode_closure, @object
GHC.IO.Handle.hSetBinaryMode_closure:
	.quad	GHC.IO.Handle.hSetBinaryMode_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.702784201 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetBinaryMode_entry
.type GHC.IO.Handle.hSetBinaryMode_entry, @object
GHC.IO.Handle.hSetBinaryMode_entry:
_cbs6M:
	jmp GHC.IO.Handle.hSetBinaryMode1_entry
	.size GHC.IO.Handle.hSetBinaryMode_entry, .-GHC.IO.Handle.hSetBinaryMode_entry


==================== Asm code ====================
2018-03-16 16:06:17.703373757 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetBinaryMode_info
.type GHC.IO.Handle.hSetBinaryMode_info, @object
GHC.IO.Handle.hSetBinaryMode_info:
	.quad	GHC.IO.Handle.hSetBinaryMode_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SboCL_srt+312


==================== Asm code ====================
2018-03-16 16:06:17.70505237 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hIsSeekable4_bytes
.type GHC.IO.Handle.hIsSeekable4_bytes, @object
GHC.IO.Handle.hIsSeekable4_bytes:
	.asciz "hIsSeekable"


==================== Asm code ====================
2018-03-16 16:06:17.70755495 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsSeekable3_closure
.type GHC.IO.Handle.hIsSeekable3_closure, @object
GHC.IO.Handle.hIsSeekable3_closure:
	.quad	GHC.IO.Handle.hIsSeekable3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.708929037 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsSeekable3_entry
.type GHC.IO.Handle.hIsSeekable3_entry, @object
GHC.IO.Handle.hIsSeekable3_entry:
_cbs70:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbs71
_cbs72:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbs6Z
_cbs6Y:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.hIsSeekable4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbs71:
	jmp *-16(%r13)
_cbs6Z:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hIsSeekable3_entry, .-GHC.IO.Handle.hIsSeekable3_entry


==================== Asm code ====================
2018-03-16 16:06:17.709909559 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsSeekable3_info
.type GHC.IO.Handle.hIsSeekable3_info, @object
GHC.IO.Handle.hIsSeekable3_info:
	.quad	GHC.IO.Handle.hIsSeekable3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:17.71461826 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsSeekable2_closure
.type GHC.IO.Handle.hIsSeekable2_closure, @object
GHC.IO.Handle.hIsSeekable2_closure:
	.quad	GHC.IO.Handle.hIsSeekable2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.715356302 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsSeekable2_entry
.type GHC.IO.Handle.hIsSeekable2_entry, @object
GHC.IO.Handle.hIsSeekable2_entry:
_cbs7h:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbs7i
_cbs7j:
	movq $block_cbs7e_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbs7e
_cbs7f:
	movq (%rbx),%rax
	jmp *(%rax)
_cbs7i:
	movl $GHC.IO.Handle.hIsSeekable2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsSeekable2_entry, .-GHC.IO.Handle.hIsSeekable2_entry


==================== Asm code ====================
2018-03-16 16:06:17.716020354 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsSeekable2_info
.type GHC.IO.Handle.hIsSeekable2_info, @object
GHC.IO.Handle.hIsSeekable2_info:
	.quad	GHC.IO.Handle.hIsSeekable2_entry
	.quad	0
	.quad	216172786408751118
	.quad	8589934597
	.quad	SboCL_srt+136


==================== Asm code ====================
2018-03-16 16:06:17.7167341 UTC

.section .text
.align 8
_cbs7e:
_cbs7e:
	movq $block_cbs7m_info,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbs7m
_cbs7o:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbs7e, .-_cbs7e


==================== Asm code ====================
2018-03-16 16:06:17.717360385 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbs7e_info:
	.quad	_cbs7e
	.quad	0
	.quad	72057598332895262
	.quad	SboCL_srt+136


==================== Asm code ====================
2018-03-16 16:06:17.718243175 UTC

.section .text
.align 8
_cbs7m:
_cbs7m:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _ubs7R
_ubs7S:
	cmpq $5,%rax
	je _cbs7M
_cbs7x:
	movq 16(%rbp),%rax
	movq $block_cbs7s_info,16(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_pv_info,(%rbp)
	movq %rax,8(%rbp)
	jmp GHC.IO.Device.isSeekable_entry
_cbs7P:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_cbs7M:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbs7P
_cbs7O:
	movq $(,)_con_info,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq $GHC.Types.False_closure+1,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ubs7R:
	cmpq $2,%rax
	jb _cbs7E
_cbs7I:
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry
_cbs7E:
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.ioe_closedHandle1_entry
	.size _cbs7m, .-_cbs7m


==================== Asm code ====================
2018-03-16 16:06:17.718981294 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbs7m_info:
	.quad	_cbs7m
	.quad	3
	.quad	72057598332895262
	.quad	SboCL_srt+136


==================== Asm code ====================
2018-03-16 16:06:17.71971891 UTC

.section .text
.align 8
_cbs7s:
_cbs7s:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbs7A
_cbs7z:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbs7A:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbs7s, .-_cbs7s


==================== Asm code ====================
2018-03-16 16:06:17.720356164 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbs7s_info:
	.quad	_cbs7s
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.72840633 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsSeekable1_closure
.type GHC.IO.Handle.hIsSeekable1_closure, @object
GHC.IO.Handle.hIsSeekable1_closure:
	.quad	GHC.IO.Handle.hIsSeekable1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.729166839 UTC

.section .text
.align 8
io_sbo6S_entry:
_cbs8B:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbs8F
_cbs8G:
	movq $block_cbs8w_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movl $GHC.IO.Handle.hIsSeekable2_closure+2,%edi
	movq 7(%rbx),%rsi
	movl $GHC.IO.Handle.hIsSeekable3_closure,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbs8F:
	jmp *-8(%r13)
	.size io_sbo6S_entry, .-io_sbo6S_entry


==================== Asm code ====================
2018-03-16 16:06:17.729868261 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbo6S_info:
	.quad	io_sbo6S_entry
	.quad	2
	.quad	3458764518115508235
	.quad	4294967299
	.quad	SboCL_srt+112


==================== Asm code ====================
2018-03-16 16:06:17.730535484 UTC

.section .text
.align 8
_cbs8w:
_cbs8w:
	movq $block_cbs8y_info,(%rbp)
	testb $7,%bl
	jne _cbs8y
_cbs8z:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbs8w, .-_cbs8w


==================== Asm code ====================
2018-03-16 16:06:17.731132449 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbs8w_info:
	.quad	_cbs8w
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.731772744 UTC

.section .text
.align 8
_cbs8y:
_cbs8y:
	movq $block_cbs8E_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbs8y, .-_cbs8y


==================== Asm code ====================
2018-03-16 16:06:17.732354866 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbs8y_info:
	.quad	_cbs8y
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.732974726 UTC

.section .text
.align 8
_cbs8E:
_cbs8E:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbs8E, .-_cbs8E


==================== Asm code ====================
2018-03-16 16:06:17.733849219 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbs8E_info:
	.quad	_cbs8E
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.734609343 UTC

.section .text
.align 8
io_sbo78_entry:
_cbs90:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbs94
_cbs95:
	movq $block_cbs8V_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movl $GHC.IO.Handle.hIsSeekable2_closure+2,%edi
	movq 7(%rbx),%rsi
	movl $GHC.IO.Handle.hIsSeekable3_closure,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbs94:
	jmp *-8(%r13)
	.size io_sbo78_entry, .-io_sbo78_entry


==================== Asm code ====================
2018-03-16 16:06:17.735304375 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbo78_info:
	.quad	io_sbo78_entry
	.quad	2
	.quad	3458764518115508235
	.quad	4294967299
	.quad	SboCL_srt+112


==================== Asm code ====================
2018-03-16 16:06:17.735924525 UTC

.section .text
.align 8
_cbs8V:
_cbs8V:
	movq $block_cbs8X_info,(%rbp)
	testb $7,%bl
	jne _cbs8X
_cbs8Y:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbs8V, .-_cbs8V


==================== Asm code ====================
2018-03-16 16:06:17.736506391 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbs8V_info:
	.quad	_cbs8V
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.737166581 UTC

.section .text
.align 8
_cbs8X:
_cbs8X:
	movq $block_cbs93_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbs8X, .-_cbs8X


==================== Asm code ====================
2018-03-16 16:06:17.737773269 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbs8X_info:
	.quad	_cbs8X
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.738392471 UTC

.section .text
.align 8
_cbs93:
_cbs93:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbs93, .-_cbs93


==================== Asm code ====================
2018-03-16 16:06:17.738999654 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbs93_info:
	.quad	_cbs93
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.739718127 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsSeekable1_entry
.type GHC.IO.Handle.hIsSeekable1_entry, @object
GHC.IO.Handle.hIsSeekable1_entry:
_cbs9f:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbs9g
_cbs9h:
	movq $block_cbs8k_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbs8k
_cbs8l:
	movq (%rbx),%rax
	jmp *(%rax)
_cbs9g:
	movl $GHC.IO.Handle.hIsSeekable1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsSeekable1_entry, .-GHC.IO.Handle.hIsSeekable1_entry


==================== Asm code ====================
2018-03-16 16:06:17.740438256 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsSeekable1_info
.type GHC.IO.Handle.hIsSeekable1_info, @object
GHC.IO.Handle.hIsSeekable1_info:
	.quad	GHC.IO.Handle.hIsSeekable1_entry
	.quad	0
	.quad	8070450536542896142
	.quad	8589934597
	.quad	SboCL_srt+112


==================== Asm code ====================
2018-03-16 16:06:17.74119249 UTC

.section .text
.align 8
_cbs8k:
_cbs8k:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbs9c
_cbs9d:
	movq $block_cbs8O_info,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
_cbs9c:
	movq $block_cbs8p_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
	.size _cbs8k, .-_cbs8k


==================== Asm code ====================
2018-03-16 16:06:17.741878383 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbs8k_info:
	.quad	_cbs8k
	.quad	0
	.quad	3458764518115508254
	.quad	SboCL_srt+112


==================== Asm code ====================
2018-03-16 16:06:17.742650062 UTC

.section .text
.align 8
_cbs8p:
_cbs8p:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbs9l
_cbs9k:
	movq $io_sbo6S_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbs9p
_cbs9o:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbo6S_entry
_cbs9p:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_cbs9l:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbs8p, .-_cbs8p


==================== Asm code ====================
2018-03-16 16:06:17.743310148 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbs8p_info:
	.quad	_cbs8p
	.quad	2
	.quad	3458764518115508254
	.quad	SboCL_srt+112


==================== Asm code ====================
2018-03-16 16:06:17.744087473 UTC

.section .text
.align 8
_cbs8O:
_cbs8O:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbs9t
_cbs9s:
	movq $io_sbo78_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbs9x
_cbs9w:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbo78_entry
_cbs9x:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_cbs9t:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbs8O, .-_cbs8O


==================== Asm code ====================
2018-03-16 16:06:17.744804634 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbs8O_info:
	.quad	_cbs8O
	.quad	2
	.quad	3458764518115508254
	.quad	SboCL_srt+112


==================== Asm code ====================
2018-03-16 16:06:17.747039162 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsSeekable_closure
.type GHC.IO.Handle.hIsSeekable_closure, @object
GHC.IO.Handle.hIsSeekable_closure:
	.quad	GHC.IO.Handle.hIsSeekable_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.748171848 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsSeekable_entry
.type GHC.IO.Handle.hIsSeekable_entry, @object
GHC.IO.Handle.hIsSeekable_entry:
_cbsau:
	jmp GHC.IO.Handle.hIsSeekable1_entry
	.size GHC.IO.Handle.hIsSeekable_entry, .-GHC.IO.Handle.hIsSeekable_entry


==================== Asm code ====================
2018-03-16 16:06:17.748781807 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsSeekable_info
.type GHC.IO.Handle.hIsSeekable_info, @object
GHC.IO.Handle.hIsSeekable_info:
	.quad	GHC.IO.Handle.hIsSeekable_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SboCL_srt+352


==================== Asm code ====================
2018-03-16 16:06:17.750649337 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hGetPosn4_bytes
.type GHC.IO.Handle.hGetPosn4_bytes, @object
GHC.IO.Handle.hGetPosn4_bytes:
	.asciz "hGetPosn"


==================== Asm code ====================
2018-03-16 16:06:17.753096028 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetPosn3_closure
.type GHC.IO.Handle.hGetPosn3_closure, @object
GHC.IO.Handle.hGetPosn3_closure:
	.quad	GHC.IO.Handle.hGetPosn3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.75394306 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetPosn3_entry
.type GHC.IO.Handle.hGetPosn3_entry, @object
GHC.IO.Handle.hGetPosn3_entry:
_cbsaI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsaJ
_cbsaK:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbsaH
_cbsaG:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.hGetPosn4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbsaJ:
	jmp *-16(%r13)
_cbsaH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hGetPosn3_entry, .-GHC.IO.Handle.hGetPosn3_entry


==================== Asm code ====================
2018-03-16 16:06:17.75461026 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetPosn3_info
.type GHC.IO.Handle.hGetPosn3_info, @object
GHC.IO.Handle.hGetPosn3_info:
	.quad	GHC.IO.Handle.hGetPosn3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:17.771956287 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetPosn2_closure
.type GHC.IO.Handle.hGetPosn2_closure, @object
GHC.IO.Handle.hGetPosn2_closure:
	.quad	GHC.IO.Handle.hGetPosn2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.772785101 UTC

.section .text
.align 8
sat_sbo88_entry:
_cbsbk:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsbl
_cbsbm:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbsbh_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbsbh
_cbsbi:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsbl:
	jmp *-16(%r13)
	.size sat_sbo88_entry, .-sat_sbo88_entry


==================== Asm code ====================
2018-03-16 16:06:17.773639248 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbo88_info:
	.quad	sat_sbo88_entry
	.quad	2
	.quad	12884901906
	.quad	SboCL_srt+360


==================== Asm code ====================
2018-03-16 16:06:17.774301147 UTC

.section .text
.align 8
_cbsbh:
_cbsbh:
	movq $block_cbsbp_info,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbsbp
_cbsbr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsbh, .-_cbsbh


==================== Asm code ====================
2018-03-16 16:06:17.774889286 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsbh_info:
	.quad	_cbsbh
	.quad	1
	.quad	12884901918
	.quad	SboCL_srt+360


==================== Asm code ====================
2018-03-16 16:06:17.775673877 UTC

.section .text
.align 8
_cbsbp:
_cbsbp:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbsbB
_cbsbN:
	movq $block_cbsbL_info,16(%rbp)
	movq %rcx,%r14
	subq %rax,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_cbsbB:
	movq $block_cbsby_info,16(%rbp)
	movq %rcx,%r14
	subq %rax,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _cbsbp, .-_cbsbp


==================== Asm code ====================
2018-03-16 16:06:17.776342489 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsbp_info:
	.quad	_cbsbp
	.quad	195
	.quad	12884901918
	.quad	SboCL_srt+360


==================== Asm code ====================
2018-03-16 16:06:17.776950372 UTC

.section .text
.align 8
_cbsby:
_cbsby:
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.minusInteger_entry
	.size _cbsby, .-_cbsby


==================== Asm code ====================
2018-03-16 16:06:17.777537092 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsby_info:
	.quad	_cbsby
	.quad	1
	.quad	4294967326
	.quad	SboCL_srt+368


==================== Asm code ====================
2018-03-16 16:06:17.778134998 UTC

.section .text
.align 8
_cbsbL:
_cbsbL:
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
	.size _cbsbL, .-_cbsbL


==================== Asm code ====================
2018-03-16 16:06:17.778714536 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsbL_info:
	.quad	_cbsbL
	.quad	1
	.quad	4294967326
	.quad	SboCL_srt+360


==================== Asm code ====================
2018-03-16 16:06:17.779434864 UTC

.section .text
.align 8
sat_sbo8C_entry:
_cbscp:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsct
_cbscu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbscm_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbscm
_cbscn:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsct:
	jmp *-16(%r13)
	.size sat_sbo8C_entry, .-sat_sbo8C_entry


==================== Asm code ====================
2018-03-16 16:06:17.780048624 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbo8C_info:
	.quad	sat_sbo8C_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:17.780785794 UTC

.section .text
.align 8
_cbscm:
_cbscm:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbscx
_cbscw:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbscx:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbscm, .-_cbscm


==================== Asm code ====================
2018-03-16 16:06:17.781513388 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbscm_info:
	.quad	_cbscm
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.7822545 UTC

.section .text
.align 8
sat_sbo8V_entry:
_cbscV:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsd2
_cbsd3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbscS_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbscS
_cbscT:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsd2:
	jmp *-16(%r13)
	.size sat_sbo8V_entry, .-sat_sbo8V_entry


==================== Asm code ====================
2018-03-16 16:06:17.782852401 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbo8V_info:
	.quad	sat_sbo8V_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:17.783606828 UTC

.section .text
.align 8
_cbscS:
_cbscS:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbsd6
_cbsd5:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 39(%rbx),%rbx
	addq 8(%rbp),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbsd6:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbscS, .-_cbscS


==================== Asm code ====================
2018-03-16 16:06:17.784254701 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbscS_info:
	.quad	_cbscS
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.785039341 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetPosn2_entry
.type GHC.IO.Handle.hGetPosn2_entry, @object
GHC.IO.Handle.hGetPosn2_entry:
_cbsd8:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsd9
_cbsda:
	movq $block_cbsaW_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbsaW
_cbsaX:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsd9:
	movl $GHC.IO.Handle.hGetPosn2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hGetPosn2_entry, .-GHC.IO.Handle.hGetPosn2_entry


==================== Asm code ====================
2018-03-16 16:06:17.785804082 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetPosn2_info
.type GHC.IO.Handle.hGetPosn2_info, @object
GHC.IO.Handle.hGetPosn2_info:
	.quad	GHC.IO.Handle.hGetPosn2_entry
	.quad	0
	.quad	7700876361742
	.quad	8589934597
	.quad	SboCL_srt+296


==================== Asm code ====================
2018-03-16 16:06:17.786476144 UTC

.section .text
.align 8
_cbsaW:
_cbsaW:
	movq $block_cbsb1_info,-32(%rbp)
	movq 7(%rbx),%r14
	movq $stg_ap_pv_info,-48(%rbp)
	movq 31(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 63(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 71(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 95(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,(%rbp)
	addq $-48,%rbp
	jmp GHC.IO.Device.tell_entry
	.size _cbsaW, .-_cbsaW


==================== Asm code ====================
2018-03-16 16:06:17.787103398 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsaW_info:
	.quad	_cbsaW
	.quad	0
	.quad	3302829850654
	.quad	SboCL_srt+296


==================== Asm code ====================
2018-03-16 16:06:17.787786167 UTC

.section .text
.align 8
_cbsb1:
_cbsb1:
	movq 16(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbsb3_info,-8(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbsb3
_cbsb4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsb1, .-_cbsb1


==================== Asm code ====================
2018-03-16 16:06:17.788406652 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsb1_info:
	.quad	_cbsb1
	.quad	4
	.quad	3302829850654
	.quad	SboCL_srt+296


==================== Asm code ====================
2018-03-16 16:06:17.789114147 UTC

.section .text
.align 8
_cbsb3:
_cbsb3:
	movq $block_cbsbV_info,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbsbV
_cbsbW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsb3, .-_cbsb3


==================== Asm code ====================
2018-03-16 16:06:17.789752866 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsb3_info:
	.quad	_cbsb3
	.quad	5
	.quad	3302829850654
	.quad	SboCL_srt+296


==================== Asm code ====================
2018-03-16 16:06:17.790551603 UTC

.section .text
.align 8
_cbsbV:
_cbsbV:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbsdj
_cbsee:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _ubses
_cbsec:
	movl $GHC.IO.Handle.Internals.flushCharBuffer2_closure,%ebx
	addq $64,%rbp
	jmp stg_ap_0_fast
_ubses:
	addq $16,%rbp
	jmp _cbsbb
_cbsdj:
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbsc0_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbsc0
_cbsc1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsbV, .-_cbsbV


==================== Asm code ====================
2018-03-16 16:06:17.791222559 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsbV_info:
	.quad	_cbsbV
	.quad	199
	.quad	3302829850654
	.quad	SboCL_srt+296


==================== Asm code ====================
2018-03-16 16:06:17.791922587 UTC

.section .text
.align 8
_cbsc0:
_cbsc0:
	movq $block_cbsc5_info,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbsc5
_cbsc6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsc0, .-_cbsc0


==================== Asm code ====================
2018-03-16 16:06:17.792568151 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsc0_info:
	.quad	_cbsc0
	.quad	5
	.quad	12884901918
	.quad	SboCL_srt+360


==================== Asm code ====================
2018-03-16 16:06:17.794107737 UTC

.section .text
.align 8
_cbsc5:
_cbsc5:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbse1
_ubset:
	addq $16,%rbp
	jmp _cbsbb
_ubseu:
	addq $16,%rbp
	jmp _cbsbb
_cbse1:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _ubseu
_cbsdn:
	movq 32(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbscd_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbscd
_cbsce:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsc5, .-_cbsc5


==================== Asm code ====================
2018-03-16 16:06:17.794768354 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsc5_info:
	.quad	_cbsc5
	.quad	199
	.quad	12884901918
	.quad	SboCL_srt+360


==================== Asm code ====================
2018-03-16 16:06:17.795623121 UTC

.section .text
.align 8
_cbscd:
_cbscd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbsdq
_cbsdp:
	movq 24(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq 8(%rax),%rdx
	movq $sat_sbo8C_info,-16(%r12)
	movq %rdx,(%r12)
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cbscC_info,-8(%rbp)
	movq %rbx,%rcx
	movq 64(%rsp),%rax
	movq %rax,%rbx
	movq %rcx,(%rbp)
	movq %r14,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbscC
_cbscD:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsdq:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbscd, .-_cbscd


==================== Asm code ====================
2018-03-16 16:06:17.796345677 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbscd_info:
	.quad	_cbscd
	.quad	133
	.quad	12884901918
	.quad	SboCL_srt+360


==================== Asm code ====================
2018-03-16 16:06:17.797148383 UTC

.section .text
.align 8
_cbscC:
_cbscC:
	movq 39(%rbx),%rax
	testq %rax,%rax
	jne _cbsdt
_cbsdY:
	movq 48(%rbp),%rax
	movq 8(%rbp),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $8,%rbp
	jmp _cbsbb
_cbsdt:
	movq $block_cbscJ_info,-24(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq 40(%rbp),%rbx
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rsi,40(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbscJ
_cbscK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbscC, .-_cbscC


==================== Asm code ====================
2018-03-16 16:06:17.798198303 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbscC_info:
	.quad	_cbscC
	.quad	6
	.quad	12884901918
	.quad	SboCL_srt+360


==================== Asm code ====================
2018-03-16 16:06:17.799042685 UTC

.section .text
.align 8
_cbscJ:
_cbscJ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbsdv
_cbsdN:
	movq $block_cbsdB_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbsdB
_cbsdC:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsdy:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_cbsdv:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbsdy
_cbsdx:
	movq $sat_sbo8V_info,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 72(%rbp),%rax
	leaq -24(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $32,%rbp
	jmp _cbsbb
	.size _cbscJ, .-_cbscJ


==================== Asm code ====================
2018-03-16 16:06:17.799723924 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbscJ_info:
	.quad	_cbscJ
	.quad	8329
	.quad	12884901918
	.quad	SboCL_srt+360


==================== Asm code ====================
2018-03-16 16:06:17.800388646 UTC

.section .text
.align 8
_cbsdB:
_cbsdB:
	movq $block_cbsdG_info,-8(%rbp)
	movq 48(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,48(%rbp)
	addq $-8,%rbp
	jmp stg_ap_pv_fast
	.size _cbsdB, .-_cbsdB


==================== Asm code ====================
2018-03-16 16:06:17.801010232 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsdB_info:
	.quad	_cbsdB
	.quad	8329
	.quad	12884901918
	.quad	SboCL_srt+360


==================== Asm code ====================
2018-03-16 16:06:17.801781116 UTC

.section .text
.align 8
_cbsdG:
_cbsdG:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbsdR
_cbsdQ:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 72(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 40(%rbp),%rax
	movq $block_cbsdJ_info,40(%rbp)
	leaq -47(%r12),%r8
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 56(%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_cbsdR:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbsdG, .-_cbsdG


==================== Asm code ====================
2018-03-16 16:06:17.802461741 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsdG_info:
	.quad	_cbsdG
	.quad	16650
	.quad	12884901918
	.quad	SboCL_srt+360


==================== Asm code ====================
2018-03-16 16:06:17.80308096 UTC

.section .text
.align 8
_cbsdJ:
_cbsdJ:
	movq $block_cbsdL_info,(%rbp)
	testb $7,%bl
	jne _cbsdL
_cbsdT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsdJ, .-_cbsdJ


==================== Asm code ====================
2018-03-16 16:06:17.803622613 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsdJ_info:
	.quad	_cbsdJ
	.quad	645
	.quad	12884901918
	.quad	SboCL_srt+360


==================== Asm code ====================
2018-03-16 16:06:17.804310497 UTC

.section .text
.align 8
_cbsdL:
_cbsdL:
	movq 40(%rbp),%rax
	movq 7(%rbx),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	jmp _cbsbb
	.size _cbsdL, .-_cbsdL


==================== Asm code ====================
2018-03-16 16:06:17.804908921 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsdL_info:
	.quad	_cbsdL
	.quad	645
	.quad	12884901918
	.quad	SboCL_srt+360


==================== Asm code ====================
2018-03-16 16:06:17.805669372 UTC

.section .text
.align 8
_cbsbb:
_cbsbb:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbsdg
_cbsdf:
	movq $sat_sbo88_info,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	movq %rax,(%r12)
	leaq -24(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbsdg:
	movq $32,904(%r13)
	movq $block_cbsbb_info,(%rbp)
	jmp stg_gc_noregs
	.size _cbsbb, .-_cbsbb


==================== Asm code ====================
2018-03-16 16:06:17.806329128 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsbb_info:
	.quad	_cbsbb
	.quad	645
	.quad	12884901918
	.quad	SboCL_srt+360


==================== Asm code ====================
2018-03-16 16:06:17.808636026 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hTell1_closure
.type GHC.IO.Handle.hTell1_closure, @object
GHC.IO.Handle.hTell1_closure:
	.quad	GHC.IO.Handle.hTell1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.809628318 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hTell1_entry
.type GHC.IO.Handle.hTell1_entry, @object
GHC.IO.Handle.hTell1_entry:
_cbsgX:
	movl $GHC.IO.Handle.hGetPosn2_closure+2,%edi
	movq %r14,%rsi
	movl $GHC.IO.Handle.hGetPosn3_closure,%r14d
	jmp GHC.IO.Handle.Internals.wantSeekableHandle1_entry
	.size GHC.IO.Handle.hTell1_entry, .-GHC.IO.Handle.hTell1_entry


==================== Asm code ====================
2018-03-16 16:06:17.810192159 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hTell1_info
.type GHC.IO.Handle.hTell1_info, @object
GHC.IO.Handle.hTell1_info:
	.quad	GHC.IO.Handle.hTell1_entry
	.quad	0
	.quad	30064771086
	.quad	8589934597
	.quad	SboCL_srt+376


==================== Asm code ====================
2018-03-16 16:06:17.812274158 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hTell_closure
.type GHC.IO.Handle.hTell_closure, @object
GHC.IO.Handle.hTell_closure:
	.quad	GHC.IO.Handle.hTell_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.812835055 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hTell_entry
.type GHC.IO.Handle.hTell_entry, @object
GHC.IO.Handle.hTell_entry:
_cbsh8:
	jmp GHC.IO.Handle.hTell1_entry
	.size GHC.IO.Handle.hTell_entry, .-GHC.IO.Handle.hTell_entry


==================== Asm code ====================
2018-03-16 16:06:17.81344942 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hTell_info
.type GHC.IO.Handle.hTell_info, @object
GHC.IO.Handle.hTell_info:
	.quad	GHC.IO.Handle.hTell_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SboCL_srt+400


==================== Asm code ====================
2018-03-16 16:06:17.815108897 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl12_rbnWU_bytes:
	.asciz "hSeek"


==================== Asm code ====================
2018-03-16 16:06:17.817626894 UTC

.section .data
.align 8
.align 1
lvl13_rbnWV_closure:
	.quad	lvl13_rbnWV_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.818468541 UTC

.section .text
.align 8
lvl13_rbnWV_entry:
_cbshm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbshn
_cbsho:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbshl
_cbshk:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl12_rbnWU_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbshn:
	jmp *-16(%r13)
_cbshl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl13_rbnWV_entry, .-lvl13_rbnWV_entry


==================== Asm code ====================
2018-03-16 16:06:17.819166425 UTC

.section .data.rel.ro
.align 8
.align 1
lvl13_rbnWV_info:
	.quad	lvl13_rbnWV_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:17.822017025 UTC

.section .data
.align 8
.align 1
lvl14_rbnWW_closure:
	.quad	lvl14_rbnWW_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.822818226 UTC

.section .text
.align 8
lvl14_rbnWW_entry:
_cbshC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbshD
_cbshE:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbshB
_cbshA:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Types.[]_closure+1,%esi
	movl $GHC.Types.True_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_cbshD:
	jmp *-16(%r13)
_cbshB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl14_rbnWW_entry, .-lvl14_rbnWW_entry


==================== Asm code ====================
2018-03-16 16:06:17.823530328 UTC

.section .data.rel.ro
.align 8
.align 1
lvl14_rbnWW_info:
	.quad	lvl14_rbnWW_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:17.8525042 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSeek1_closure
.type GHC.IO.Handle.hSeek1_closure, @object
GHC.IO.Handle.hSeek1_closure:
	.quad	GHC.IO.Handle.hSeek1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.853389974 UTC

.section .text
.align 8
lvl48_sbo9n_entry:
_cbshW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsi0
_cbsi1:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbshU_info,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Integer.Type.integerToInt_entry
_cbsi0:
	jmp *-16(%r13)
	.size lvl48_sbo9n_entry, .-lvl48_sbo9n_entry


==================== Asm code ====================
2018-03-16 16:06:17.854064762 UTC

.section .data.rel.ro
.align 8
.align 1
lvl48_sbo9n_info:
	.quad	lvl48_sbo9n_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:17.8547946 UTC

.section .text
.align 8
_cbshU:
_cbshU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbsi4
_cbsi3:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbsi4:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbshU, .-_cbshU


==================== Asm code ====================
2018-03-16 16:06:17.855388606 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbshU_info:
	.quad	_cbshU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.856128175 UTC

.section .text
.align 8
lvl49_sbo9p_entry:
_cbsib:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsif
_cbsig:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbsi9_info,-24(%rbp)
	movl $lvl14_rbnWW_closure,%esi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Integer.Type.geInteger#_entry
_cbsif:
	jmp *-16(%r13)
	.size lvl49_sbo9p_entry, .-lvl49_sbo9p_entry


==================== Asm code ====================
2018-03-16 16:06:17.856745376 UTC

.section .data.rel.ro
.align 8
.align 1
lvl49_sbo9p_info:
	.quad	lvl49_sbo9p_entry
	.quad	1
	.quad	4294967312
	.quad	SboCL_srt+408


==================== Asm code ====================
2018-03-16 16:06:17.857427619 UTC

.section .text
.align 8
_cbsi9:
_cbsi9:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbsij
_cbsii:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbsij:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbsi9, .-_cbsi9


==================== Asm code ====================
2018-03-16 16:06:17.858038773 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsi9_info:
	.quad	_cbsi9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.858746299 UTC

.section .text
.align 8
sat_sboao_entry:
_cbsj8:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsjc
_cbsjd:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbsj5_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbsj5
_cbsj6:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsjc:
	jmp *-16(%r13)
	.size sat_sboao_entry, .-sat_sboao_entry


==================== Asm code ====================
2018-03-16 16:06:17.859380721 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sboao_info:
	.quad	sat_sboao_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:17.860136418 UTC

.section .text
.align 8
_cbsj5:
_cbsj5:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbsjg
_cbsjf:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbsjg:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbsj5, .-_cbsj5


==================== Asm code ====================
2018-03-16 16:06:17.860806391 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsj5_info:
	.quad	_cbsj5
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.861597936 UTC

.section .text
.align 8
sat_sboaH_entry:
_cbsjE:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsjL
_cbsjM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbsjB_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbsjB
_cbsjC:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsjL:
	jmp *-16(%r13)
	.size sat_sboaH_entry, .-sat_sboaH_entry


==================== Asm code ====================
2018-03-16 16:06:17.862240883 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sboaH_info:
	.quad	sat_sboaH_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:17.863001798 UTC

.section .text
.align 8
_cbsjB:
_cbsjB:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbsjP
_cbsjO:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 39(%rbx),%rbx
	addq 8(%rbp),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbsjP:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbsjB, .-_cbsjB


==================== Asm code ====================
2018-03-16 16:06:17.863680186 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsjB_info:
	.quad	_cbsjB
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.864465927 UTC

.section .text
.align 8
sat_sbobs_entry:
_cbskt:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cbskA
_cbskB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbskq_info,-64(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 16(%rbx),%rbx
	movq %rcx,-56(%rbp)
	movq %rax,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _cbskq
_cbskr:
	movq (%rbx),%rax
	jmp *(%rax)
_cbskA:
	jmp *-16(%r13)
	.size sat_sbobs_entry, .-sat_sbobs_entry


==================== Asm code ====================
2018-03-16 16:06:17.865209594 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbobs_info:
	.quad	sat_sbobs_entry
	.quad	17179869186
	.quad	15


==================== Asm code ====================
2018-03-16 16:06:17.866004663 UTC

.section .text
.align 8
_cbskq:
_cbskq:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbskE
_cbskD:
	leaq 7(%rbx),%rax
	movq 32(%rbp),%rbx
	addq (%rax),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq $GHC.IO.Buffer.ReadBuffer_closure+1,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbskE:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbskq, .-_cbskq


==================== Asm code ====================
2018-03-16 16:06:17.8666724 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbskq_info:
	.quad	_cbskq
	.quad	1861
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.867363723 UTC

.section .text
.align 8
sat_sbobV_entry:
_cbskG:
	leaq -144(%rbp),%rax
	cmpq %r15,%rax
	jb _cbskH
_cbskI:
	movq $block_cbsip_info,-40(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rdx
	movq 30(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbsip
_cbsiq:
	movq (%rbx),%rax
	jmp *(%rax)
_cbskH:
	jmp *-8(%r13)
	.size sat_sbobV_entry, .-sat_sbobV_entry


==================== Asm code ====================
2018-03-16 16:06:17.868024758 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbobV_info:
	.quad	sat_sbobV_entry
	.quad	4
	.quad	4294967304
	.quad	8589934597
	.quad	SboCL_srt+416


==================== Asm code ====================
2018-03-16 16:06:17.868773617 UTC

.section .text
.align 8
_cbsip:
_cbsip:
	movq $block_cbsiu_info,-64(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 63(%rbx),%r8
	movq 71(%rbx),%r9
	movq 95(%rbx),%rbx
	movq %rbx,%r10
	movq 8(%r9),%rbx
	movq %rcx,-56(%rbp)
	movq %rdx,-48(%rbp)
	movq %rsi,-40(%rbp)
	movq %rdi,-32(%rbp)
	movq %r8,-24(%rbp)
	movq %r9,-16(%rbp)
	movq %r10,-8(%rbp)
	movq %rax,(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _cbsiu
_cbsiv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsip, .-_cbsip


==================== Asm code ====================
2018-03-16 16:06:17.869535668 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsip_info:
	.quad	_cbsip
	.quad	4
	.quad	4294967326
	.quad	SboCL_srt+416


==================== Asm code ====================
2018-03-16 16:06:17.870246218 UTC

.section .text
.align 8
_cbsiu:
_cbsiu:
	movq $block_cbsiz_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 15(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	movq %rcx,(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbsiz
_cbsiA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsiu, .-_cbsiu


==================== Asm code ====================
2018-03-16 16:06:17.870923752 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsiu_info:
	.quad	_cbsiu
	.quad	12
	.quad	4294967326
	.quad	SboCL_srt+416


==================== Asm code ====================
2018-03-16 16:06:17.871687391 UTC

.section .text
.align 8
_cbsiz:
_cbsiz:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbsm0
_cbsmv:
	movq 72(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbsmt_info,40(%rbp)
	movq %rax,%rbx
	addq $40,%rbp
	testb $7,%bl
	jne _cbsmt
_cbsmw:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsm0:
	movq $block_cbsjR_info,(%rbp)
	movq 112(%rbp),%rbx
	testb $7,%bl
	jne _cbsjR
_cbsjS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsiz, .-_cbsiz


==================== Asm code ====================
2018-03-16 16:06:17.872354919 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsiz_info:
	.quad	_cbsiz
	.quad	1937
	.quad	4294967326
	.quad	SboCL_srt+416


==================== Asm code ====================
2018-03-16 16:06:17.873037835 UTC

.section .text
.align 8
_cbsjR:
_cbsjR:
	andl $7,%ebx
	cmpq $2,%rbx
	je _cbsm6
_ubsng:
	addq $48,%rbp
	jmp _sbo9V
_cbsm6:
	movq $block_cbsjX_info,(%rbp)
	movq 96(%rbp),%rbx
	testb $7,%bl
	jne _cbsjX
_cbsjY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsjR, .-_cbsjR


==================== Asm code ====================
2018-03-16 16:06:17.873882674 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsjR_info:
	.quad	_cbsjR
	.quad	6033
	.quad	4294967326
	.quad	SboCL_srt+416


==================== Asm code ====================
2018-03-16 16:06:17.874574 UTC

.section .text
.align 8
_cbsjX:
_cbsjX:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbsm9
_ubsnh:
	addq $48,%rbp
	jmp _sbo9V
_cbsm9:
	movq $block_cbsk2_info,(%rbp)
	movq 136(%rbp),%rbx
	testb $7,%bl
	jne _cbsk2
_cbsk3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsjX, .-_cbsjX


==================== Asm code ====================
2018-03-16 16:06:17.875131819 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsjX_info:
	.quad	_cbsjX
	.quad	6033
	.quad	4294967326
	.quad	SboCL_srt+416


==================== Asm code ====================
2018-03-16 16:06:17.875803973 UTC

.section .text
.align 8
_cbsk2:
_cbsk2:
	cmpq $1,7(%rbx)
	je _cbsmd
_ubsni:
	addq $48,%rbp
	jmp _sbo9V
_cbsmd:
	movq 32(%rbp),%rax
	subq 24(%rbp),%rax
	movq $block_cbskd_info,(%rbp)
	movq %rax,%r14
	jmp GHC.Integer.Type.smallInteger_entry
	.size _cbsk2, .-_cbsk2


==================== Asm code ====================
2018-03-16 16:06:17.876408808 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsk2_info:
	.quad	_cbsk2
	.quad	4200337
	.quad	4294967326
	.quad	SboCL_srt+416


==================== Asm code ====================
2018-03-16 16:06:17.877010748 UTC

.section .text
.align 8
_cbskd:
_cbskd:
	movq $block_cbskh_info,(%rbp)
	movq %rbx,%rsi
	movq 120(%rbp),%r14
	jmp GHC.Integer.Type.ltInteger#_entry
	.size _cbskd, .-_cbskd


==================== Asm code ====================
2018-03-16 16:06:17.878389888 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbskd_info:
	.quad	_cbskd
	.quad	4200337
	.quad	4294967326
	.quad	SboCL_srt+416


==================== Asm code ====================
2018-03-16 16:06:17.87924073 UTC

.section .text
.align 8
_cbskh:
_cbskh:
	cmpq $1,%rbx
	je _cbsmj
_ubsnj:
	addq $48,%rbp
	jmp _sbo9V
_cbsmm:
	movq $64,904(%r13)
	jmp stg_gc_unbx_r1
_cbsmj:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cbsmm
_cbsml:
	movq $sat_sbobs_info,-56(%r12)
	movq 128(%rbp),%rax
	movq %rax,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movq 40(%rbp),%rax
	movq %rax,-24(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq 88(%rbp),%rax
	leaq -56(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbskh, .-_cbskh


==================== Asm code ====================
2018-03-16 16:06:17.879994743 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbskh_info:
	.quad	_cbskh
	.quad	4200337
	.quad	4294967326
	.quad	SboCL_srt+416


==================== Asm code ====================
2018-03-16 16:06:17.880671441 UTC

.section .text
.align 8
_sbo9V:
_sbo9V:
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbsiJ_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbsiJ
_cbsiK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbo9V, .-_sbo9V


==================== Asm code ====================
2018-03-16 16:06:17.881462962 UTC

.section .text
.align 8
_cbsiJ:
_cbsiJ:
	movq $block_cbsiO_info,(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,88(%rbp)
	movq %rax,96(%rbp)
	testb $7,%bl
	jne _cbsiO
_cbsiP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsiJ, .-_cbsiJ


==================== Asm code ====================
2018-03-16 16:06:17.8820436 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsiJ_info:
	.quad	_cbsiJ
	.quad	196748
	.quad	4294967326
	.quad	SboCL_srt+416


==================== Asm code ====================
2018-03-16 16:06:17.88353404 UTC

.section .text
.align 8
_cbsiO:
_cbsiO:
	movq 64(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbslR
_cbslW:
	movq $block_cbslU_info,(%rbp)
	movq %rax,%r14
	jmp GHC.IO.Handle.Internals.flushBuffer2_entry
_cbslN:
	movq $block_cbslM_info,(%rbp)
	movq %rax,%r14
	jmp GHC.IO.Handle.Internals.flushBuffer2_entry
_cbslR:
	movq 96(%rbp),%rbx
	cmpq 88(%rbp),%rbx
	je _cbslN
_cbskQ:
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbsiW_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbsiW
_cbsiX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsiO, .-_cbsiO


==================== Asm code ====================
2018-03-16 16:06:17.884230025 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsiO_info:
	.quad	_cbsiO
	.quad	196748
	.quad	4294967326
	.quad	SboCL_srt+416


==================== Asm code ====================
2018-03-16 16:06:17.884862334 UTC

.section .text
.align 8
_cbslM:
_cbslM:
	movq 8(%rbp),%r14
	movq 72(%rbp),%rax
	movq $stg_ap_pppv_info,72(%rbp)
	movq 80(%rbp),%rbx
	movq 24(%rbp),%rcx
	movq %rcx,80(%rbp)
	movq %rax,88(%rbp)
	movq %rbx,96(%rbp)
	addq $72,%rbp
	jmp GHC.IO.Device.seek_entry
	.size _cbslM, .-_cbslM


==================== Asm code ====================
2018-03-16 16:06:17.885811707 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbslM_info:
	.quad	_cbslM
	.quad	212620
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.886667463 UTC

.section .text
.align 8
_cbsiW:
_cbsiW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbskT
_cbskS:
	movq 48(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq 8(%rax),%rdx
	movq $sat_sboao_info,-16(%r12)
	movq %rdx,(%r12)
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cbsjl_info,(%rbp)
	movq %rbx,%rcx
	movq 64(%rsp),%rax
	movq %rax,%rbx
	movq %rcx,88(%rbp)
	movq %r14,96(%rbp)
	testb $7,%bl
	jne _cbsjl
_cbsjm:
	movq (%rbx),%rax
	jmp *(%rax)
_cbskT:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbsiW, .-_cbsiW


==================== Asm code ====================
2018-03-16 16:06:17.887404937 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsiW_info:
	.quad	_cbsiW
	.quad	197772
	.quad	4294967326
	.quad	SboCL_srt+416


==================== Asm code ====================
2018-03-16 16:06:17.88825393 UTC

.section .text
.align 8
_cbsjl:
_cbsjl:
	movq 39(%rbx),%rax
	testq %rax,%rax
	jne _cbskW
_cbslI:
	movq 64(%rbp),%rax
	movq 32(%rbp),%rbx
	movq 88(%rbp),%rcx
	movq %rcx,8(%rbx)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rbx,%rsi
	movq %rcx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cbslH_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.IO.Handle.Internals.flushBuffer2_entry
_cbskW:
	movq $block_cbsjs_info,(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq 56(%rbp),%rbx
	movq %rax,16(%rbp)
	movq %rdx,40(%rbp)
	movq %rcx,48(%rbp)
	movq %rsi,56(%rbp)
	testb $7,%bl
	jne _cbsjs
_cbsjt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsjl, .-_cbsjl


==================== Asm code ====================
2018-03-16 16:06:17.888940676 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsjl_info:
	.quad	_cbsjl
	.quad	3212
	.quad	4294967326
	.quad	SboCL_srt+416


==================== Asm code ====================
2018-03-16 16:06:17.889846564 UTC

.section .text
.align 8
_cbsjs:
_cbsjs:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbsl2
_cbslu:
	movq $block_cbsla_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbsla
_cbslb:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsl5:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_cbsl2:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbsl5
_cbsl4:
	movq $sat_sboaH_info,-24(%r12)
	movq 88(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 64(%rbp),%rax
	movq 32(%rbp),%rbx
	leaq -24(%r12),%rcx
	movq %rcx,8(%rbx)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rbx,%rsi
	movq %rcx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cbsl0_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.IO.Handle.Internals.flushBuffer2_entry
	.size _cbsjs, .-_cbsjs


==================== Asm code ====================
2018-03-16 16:06:17.890607564 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsjs_info:
	.quad	_cbsjs
	.quad	4236
	.quad	4294967326
	.quad	SboCL_srt+416


==================== Asm code ====================
2018-03-16 16:06:17.891272195 UTC

.section .text
.align 8
_cbsl0:
_cbsl0:
	movq 8(%rbp),%r14
	movq 72(%rbp),%rax
	movq $stg_ap_pppv_info,72(%rbp)
	movq 80(%rbp),%rbx
	movq 24(%rbp),%rcx
	movq %rcx,80(%rbp)
	movq %rax,88(%rbp)
	movq %rbx,96(%rbp)
	addq $72,%rbp
	jmp GHC.IO.Device.seek_entry
	.size _cbsl0, .-_cbsl0


==================== Asm code ====================
2018-03-16 16:06:17.891862378 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsl0_info:
	.quad	_cbsl0
	.quad	212620
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.892466007 UTC

.section .text
.align 8
_cbsla:
_cbsla:
	movq $block_cbslf_info,-8(%rbp)
	movq 96(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,96(%rbp)
	addq $-8,%rbp
	jmp stg_ap_pv_fast
	.size _cbsla, .-_cbsla


==================== Asm code ====================
2018-03-16 16:06:17.893057561 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsla_info:
	.quad	_cbsla
	.quad	4236
	.quad	4294967326
	.quad	SboCL_srt+416


==================== Asm code ====================
2018-03-16 16:06:17.893861702 UTC

.section .text
.align 8
_cbslf:
_cbslf:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbsly
_cbslx:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 56(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq 64(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 8(%rbp),%rax
	movq $block_cbsli_info,8(%rbp)
	leaq -47(%r12),%r8
	movq 96(%rbp),%rdi
	movq %rax,%rsi
	movq 104(%rbp),%r14
	addq $8,%rbp
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_cbsly:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbslf, .-_cbslf


==================== Asm code ====================
2018-03-16 16:06:17.894557297 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbslf_info:
	.quad	_cbslf
	.quad	8461
	.quad	4294967326
	.quad	SboCL_srt+416


==================== Asm code ====================
2018-03-16 16:06:17.895194986 UTC

.section .text
.align 8
_cbsli:
_cbsli:
	movq $block_cbslk_info,(%rbp)
	testb $7,%bl
	jne _cbslk
_cbsll:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsli, .-_cbsli


==================== Asm code ====================
2018-03-16 16:06:17.895714213 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsli_info:
	.quad	_cbsli
	.quad	203916
	.quad	4294967326
	.quad	SboCL_srt+416


==================== Asm code ====================
2018-03-16 16:06:17.896392095 UTC

.section .text
.align 8
_cbslk:
_cbslk:
	movq 64(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq %rbx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rcx,%rsi
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cbsls_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.IO.Handle.Internals.flushBuffer2_entry
	.size _cbslk, .-_cbslk


==================== Asm code ====================
2018-03-16 16:06:17.897017305 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbslk_info:
	.quad	_cbslk
	.quad	203916
	.quad	4294967326
	.quad	SboCL_srt+416


==================== Asm code ====================
2018-03-16 16:06:17.897954394 UTC

.section .text
.align 8
_cbsls:
_cbsls:
	movq 8(%rbp),%r14
	movq 72(%rbp),%rax
	movq $stg_ap_pppv_info,72(%rbp)
	movq 80(%rbp),%rbx
	movq 24(%rbp),%rcx
	movq %rcx,80(%rbp)
	movq %rax,88(%rbp)
	movq %rbx,96(%rbp)
	addq $72,%rbp
	jmp GHC.IO.Device.seek_entry
	.size _cbsls, .-_cbsls


==================== Asm code ====================
2018-03-16 16:06:17.898523487 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsls_info:
	.quad	_cbsls
	.quad	212620
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.899170816 UTC

.section .text
.align 8
_cbslH:
_cbslH:
	movq 8(%rbp),%r14
	movq 72(%rbp),%rax
	movq $stg_ap_pppv_info,72(%rbp)
	movq 80(%rbp),%rbx
	movq 24(%rbp),%rcx
	movq %rcx,80(%rbp)
	movq %rax,88(%rbp)
	movq %rbx,96(%rbp)
	addq $72,%rbp
	jmp GHC.IO.Device.seek_entry
	.size _cbslH, .-_cbslH


==================== Asm code ====================
2018-03-16 16:06:17.899694805 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbslH_info:
	.quad	_cbslH
	.quad	212620
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.90035132 UTC

.section .text
.align 8
_cbslU:
_cbslU:
	movq 8(%rbp),%r14
	movq 72(%rbp),%rax
	movq $stg_ap_pppv_info,72(%rbp)
	movq 80(%rbp),%rbx
	movq 24(%rbp),%rcx
	movq %rcx,80(%rbp)
	movq %rax,88(%rbp)
	movq %rbx,96(%rbp)
	addq $72,%rbp
	jmp GHC.IO.Device.seek_entry
	.size _cbslU, .-_cbslU


==================== Asm code ====================
2018-03-16 16:06:17.90092333 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbslU_info:
	.quad	_cbslU
	.quad	212620
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.901569613 UTC

.section .text
.align 8
_cbsmt:
_cbsmt:
	movq $block_cbsmA_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _cbsmA
_cbsmC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsmt, .-_cbsmt


==================== Asm code ====================
2018-03-16 16:06:17.902184934 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsmt_info:
	.quad	_cbsmt
	.quad	211980
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.902926217 UTC

.section .text
.align 8
_cbsmA:
_cbsmA:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ubsne
_cbsmN:
	movq 32(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbsmL_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbsmL
_cbsmO:
	movq (%rbx),%rax
	jmp *(%rax)
_ubsne:
	addq $8,%rbp
	jmp _cbsn1
	.size _cbsmA, .-_cbsmA


==================== Asm code ====================
2018-03-16 16:06:17.903573529 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsmA_info:
	.quad	_cbsmA
	.quad	211980
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.904231192 UTC

.section .text
.align 8
_cbsmL:
_cbsmL:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _ubsnf
_cbsmY:
	movq $block_cbsmW_info,(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_ppv_info,-24(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.IO.BufferedIO.flushWriteBuffer_entry
_ubsnf:
	addq $8,%rbp
	jmp _cbsn1
	.size _cbsmL, .-_cbsmL


==================== Asm code ====================
2018-03-16 16:06:17.904850164 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsmL_info:
	.quad	_cbsmL
	.quad	211980
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.905474468 UTC

.section .text
.align 8
_cbsn1:
_cbsn1:
	movq (%rbp),%r14
	movq 64(%rbp),%rax
	movq $stg_ap_pppv_info,64(%rbp)
	movq 72(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq %rcx,72(%rbp)
	movq %rax,80(%rbp)
	movq %rbx,88(%rbp)
	addq $64,%rbp
	jmp GHC.IO.Device.seek_entry
	.size _cbsn1, .-_cbsn1


==================== Asm code ====================
2018-03-16 16:06:17.90633858 UTC

.section .text
.align 8
_cbsmW:
_cbsmW:
	movq 72(%rbp),%rax
	movq 80(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq 24(%rbp),%rsi
	movq 32(%rbp),%rdi
	movq %rbx,8(%rdi)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rsi,%r8
	movq %rdi,%rsi
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq %r14,%rcx
	movq 64(%rsp),%rax
	movq %rax,%r14
	movq $stg_ap_pppv_info,72(%rbp)
	movq 72(%rsp),%rax
	movq %rax,80(%rbp)
	movq %rbx,88(%rbp)
	movq %rcx,96(%rbp)
	addq $72,%rbp
	jmp GHC.IO.Device.seek_entry
	.size _cbsmW, .-_cbsmW


==================== Asm code ====================
2018-03-16 16:06:17.907023052 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsmW_info:
	.quad	_cbsmW
	.quad	212108
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.907776935 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSeek1_entry
.type GHC.IO.Handle.hSeek1_entry, @object
GHC.IO.Handle.hSeek1_entry:
_cbsnG:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cbsnK
_cbsnJ:
	movq $lvl48_sbo9n_info,-80(%r12)
	movq %rdi,-64(%r12)
	movq $lvl49_sbo9p_info,-56(%r12)
	movq %rdi,-40(%r12)
	movq $sat_sbobV_info,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	leaq -80(%r12),%rax
	movq %rax,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -30(%r12),%rdi
	movq %r14,%rsi
	movl $lvl13_rbnWV_closure,%r14d
	jmp GHC.IO.Handle.Internals.wantSeekableHandle1_entry
_cbsnK:
	movq $88,904(%r13)
	movl $GHC.IO.Handle.hSeek1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hSeek1_entry, .-GHC.IO.Handle.hSeek1_entry


==================== Asm code ====================
2018-03-16 16:06:17.90848455 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSeek1_info
.type GHC.IO.Handle.hSeek1_info, @object
GHC.IO.Handle.hSeek1_info:
	.quad	GHC.IO.Handle.hSeek1_entry
	.quad	0
	.quad	519691042830
	.quad	17179869207
	.quad	SboCL_srt+384


==================== Asm code ====================
2018-03-16 16:06:17.911069014 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSeek_closure
.type GHC.IO.Handle.hSeek_closure, @object
GHC.IO.Handle.hSeek_closure:
	.quad	GHC.IO.Handle.hSeek_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.91167277 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSeek_entry
.type GHC.IO.Handle.hSeek_entry, @object
GHC.IO.Handle.hSeek_entry:
_cbsr9:
	jmp GHC.IO.Handle.hSeek1_entry
	.size GHC.IO.Handle.hSeek_entry, .-GHC.IO.Handle.hSeek_entry


==================== Asm code ====================
2018-03-16 16:06:17.912210379 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSeek_info
.type GHC.IO.Handle.hSeek_info, @object
GHC.IO.Handle.hSeek_info:
	.quad	GHC.IO.Handle.hSeek_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	SboCL_srt+424


==================== Asm code ====================
2018-03-16 16:06:17.915627213 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetPosn1_closure
.type GHC.IO.Handle.hSetPosn1_closure, @object
GHC.IO.Handle.hSetPosn1_closure:
	.quad	GHC.IO.Handle.hSetPosn1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.916375139 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetPosn1_entry
.type GHC.IO.Handle.hSetPosn1_entry, @object
GHC.IO.Handle.hSetPosn1_entry:
_cbsrn:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsro
_cbsrp:
	movq $block_cbsrk_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbsrk
_cbsrl:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsro:
	movl $GHC.IO.Handle.hSetPosn1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hSetPosn1_entry, .-GHC.IO.Handle.hSetPosn1_entry


==================== Asm code ====================
2018-03-16 16:06:17.917047073 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetPosn1_info
.type GHC.IO.Handle.hSetPosn1_info, @object
GHC.IO.Handle.hSetPosn1_info:
	.quad	GHC.IO.Handle.hSetPosn1_entry
	.quad	0
	.quad	21474836494
	.quad	8589934597
	.quad	SboCL_srt+424


==================== Asm code ====================
2018-03-16 16:06:17.917920831 UTC

.section .text
.align 8
_cbsrk:
_cbsrk:
	movq 15(%rbx),%rdi
	movl $GHC.IO.Device.AbsoluteSeek_closure+1,%esi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.IO.Handle.hSeek1_entry
	.size _cbsrk, .-_cbsrk


==================== Asm code ====================
2018-03-16 16:06:17.918515004 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsrk_info:
	.quad	_cbsrk
	.quad	0
	.quad	4294967326
	.quad	SboCL_srt+424


==================== Asm code ====================
2018-03-16 16:06:17.920538034 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetPosn_closure
.type GHC.IO.Handle.hSetPosn_closure, @object
GHC.IO.Handle.hSetPosn_closure:
	.quad	GHC.IO.Handle.hSetPosn_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.921145774 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetPosn_entry
.type GHC.IO.Handle.hSetPosn_entry, @object
GHC.IO.Handle.hSetPosn_entry:
_cbsrH:
	jmp GHC.IO.Handle.hSetPosn1_entry
	.size GHC.IO.Handle.hSetPosn_entry, .-GHC.IO.Handle.hSetPosn_entry


==================== Asm code ====================
2018-03-16 16:06:17.921755152 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetPosn_info
.type GHC.IO.Handle.hSetPosn_info, @object
GHC.IO.Handle.hSetPosn_info:
	.quad	GHC.IO.Handle.hSetPosn_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SboCL_srt+440


==================== Asm code ====================
2018-03-16 16:06:17.923331268 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hGetEncoding4_bytes
.type GHC.IO.Handle.hGetEncoding4_bytes, @object
GHC.IO.Handle.hGetEncoding4_bytes:
	.asciz "hGetEncoding"


==================== Asm code ====================
2018-03-16 16:06:17.925711351 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEncoding3_closure
.type GHC.IO.Handle.hGetEncoding3_closure, @object
GHC.IO.Handle.hGetEncoding3_closure:
	.quad	GHC.IO.Handle.hGetEncoding3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.926563502 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEncoding3_entry
.type GHC.IO.Handle.hGetEncoding3_entry, @object
GHC.IO.Handle.hGetEncoding3_entry:
_cbsrV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsrW
_cbsrX:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbsrU
_cbsrT:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.hGetEncoding4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbsrW:
	jmp *-16(%r13)
_cbsrU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hGetEncoding3_entry, .-GHC.IO.Handle.hGetEncoding3_entry


==================== Asm code ====================
2018-03-16 16:06:17.927286533 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEncoding3_info
.type GHC.IO.Handle.hGetEncoding3_info, @object
GHC.IO.Handle.hGetEncoding3_info:
	.quad	GHC.IO.Handle.hGetEncoding3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:17.930514779 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEncoding2_closure
.type GHC.IO.Handle.hGetEncoding2_closure, @object
GHC.IO.Handle.hGetEncoding2_closure:
	.quad	GHC.IO.Handle.hGetEncoding2_info


==================== Asm code ====================
2018-03-16 16:06:17.931243853 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEncoding2_entry
.type GHC.IO.Handle.hGetEncoding2_entry, @object
GHC.IO.Handle.hGetEncoding2_entry:
_cbssc:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbssg
_cbssh:
	movq $block_cbss9_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbss9
_cbssa:
	movq (%rbx),%rax
	jmp *(%rax)
_cbssg:
	movl $GHC.IO.Handle.hGetEncoding2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hGetEncoding2_entry, .-GHC.IO.Handle.hGetEncoding2_entry


==================== Asm code ====================
2018-03-16 16:06:17.931878969 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEncoding2_info
.type GHC.IO.Handle.hGetEncoding2_info, @object
GHC.IO.Handle.hGetEncoding2_info:
	.quad	GHC.IO.Handle.hGetEncoding2_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:06:17.93258749 UTC

.section .text
.align 8
_cbss9:
_cbss9:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbssk
_cbssj:
	movq 103(%rbx),%rax
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbssk:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbss9, .-_cbss9


==================== Asm code ====================
2018-03-16 16:06:17.93316474 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbss9_info:
	.quad	_cbss9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.940938821 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEncoding1_closure
.type GHC.IO.Handle.hGetEncoding1_closure, @object
GHC.IO.Handle.hGetEncoding1_closure:
	.quad	GHC.IO.Handle.hGetEncoding1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.941762887 UTC

.section .text
.align 8
io_sboct_entry:
_cbssR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbssV
_cbssW:
	movq $block_cbssM_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movl $GHC.IO.Handle.hGetEncoding2_closure+2,%edi
	movq 7(%rbx),%rsi
	movl $GHC.IO.Handle.hGetEncoding3_closure,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbssV:
	jmp *-8(%r13)
	.size io_sboct_entry, .-io_sboct_entry


==================== Asm code ====================
2018-03-16 16:06:17.942473234 UTC

.section .data.rel.ro
.align 8
.align 1
io_sboct_info:
	.quad	io_sboct_entry
	.quad	2
	.quad	12884901899
	.quad	4294967299
	.quad	SboCL_srt+448


==================== Asm code ====================
2018-03-16 16:06:17.94316551 UTC

.section .text
.align 8
_cbssM:
_cbssM:
	movq $block_cbssO_info,(%rbp)
	testb $7,%bl
	jne _cbssO
_cbssP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbssM, .-_cbssM


==================== Asm code ====================
2018-03-16 16:06:17.943725799 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbssM_info:
	.quad	_cbssM
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.944388684 UTC

.section .text
.align 8
_cbssO:
_cbssO:
	movq $block_cbssU_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbssO, .-_cbssO


==================== Asm code ====================
2018-03-16 16:06:17.944937642 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbssO_info:
	.quad	_cbssO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.945586739 UTC

.section .text
.align 8
_cbssU:
_cbssU:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbssU, .-_cbssU


==================== Asm code ====================
2018-03-16 16:06:17.94617022 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbssU_info:
	.quad	_cbssU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.946889618 UTC

.section .text
.align 8
io_sbocJ_entry:
_cbstg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbstk
_cbstl:
	movq $block_cbstb_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movl $GHC.IO.Handle.hGetEncoding2_closure+2,%edi
	movq 7(%rbx),%rsi
	movl $GHC.IO.Handle.hGetEncoding3_closure,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbstk:
	jmp *-8(%r13)
	.size io_sbocJ_entry, .-io_sbocJ_entry


==================== Asm code ====================
2018-03-16 16:06:17.947556534 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbocJ_info:
	.quad	io_sbocJ_entry
	.quad	2
	.quad	12884901899
	.quad	4294967299
	.quad	SboCL_srt+448


==================== Asm code ====================
2018-03-16 16:06:17.948203998 UTC

.section .text
.align 8
_cbstb:
_cbstb:
	movq $block_cbstd_info,(%rbp)
	testb $7,%bl
	jne _cbstd
_cbste:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbstb, .-_cbstb


==================== Asm code ====================
2018-03-16 16:06:17.948767533 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbstb_info:
	.quad	_cbstb
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.94961982 UTC

.section .text
.align 8
_cbstd:
_cbstd:
	movq $block_cbstj_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbstd, .-_cbstd


==================== Asm code ====================
2018-03-16 16:06:17.950739327 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbstd_info:
	.quad	_cbstd
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.951382579 UTC

.section .text
.align 8
_cbstj:
_cbstj:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbstj, .-_cbstj


==================== Asm code ====================
2018-03-16 16:06:17.951976138 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbstj_info:
	.quad	_cbstj
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:17.952705955 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEncoding1_entry
.type GHC.IO.Handle.hGetEncoding1_entry, @object
GHC.IO.Handle.hGetEncoding1_entry:
_cbstv:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbstw
_cbstx:
	movq $block_cbssA_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbssA
_cbssB:
	movq (%rbx),%rax
	jmp *(%rax)
_cbstw:
	movl $GHC.IO.Handle.hGetEncoding1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hGetEncoding1_entry, .-GHC.IO.Handle.hGetEncoding1_entry


==================== Asm code ====================
2018-03-16 16:06:17.953351963 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEncoding1_info
.type GHC.IO.Handle.hGetEncoding1_info, @object
GHC.IO.Handle.hGetEncoding1_info:
	.quad	GHC.IO.Handle.hGetEncoding1_entry
	.quad	0
	.quad	30064771086
	.quad	8589934597
	.quad	SboCL_srt+448


==================== Asm code ====================
2018-03-16 16:06:17.954041767 UTC

.section .text
.align 8
_cbssA:
_cbssA:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbsts
_cbstt:
	movq $block_cbst4_info,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
_cbsts:
	movq $block_cbssF_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
	.size _cbssA, .-_cbssA


==================== Asm code ====================
2018-03-16 16:06:17.954726859 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbssA_info:
	.quad	_cbssA
	.quad	0
	.quad	12884901918
	.quad	SboCL_srt+448


==================== Asm code ====================
2018-03-16 16:06:17.955471045 UTC

.section .text
.align 8
_cbssF:
_cbssF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbstB
_cbstA:
	movq $io_sboct_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbstF
_cbstE:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sboct_entry
_cbstF:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_cbstB:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbssF, .-_cbssF


==================== Asm code ====================
2018-03-16 16:06:17.956099733 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbssF_info:
	.quad	_cbssF
	.quad	2
	.quad	12884901918
	.quad	SboCL_srt+448


==================== Asm code ====================
2018-03-16 16:06:17.956853967 UTC

.section .text
.align 8
_cbst4:
_cbst4:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbstJ
_cbstI:
	movq $io_sbocJ_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbstN
_cbstM:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbocJ_entry
_cbstN:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_cbstJ:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbst4, .-_cbst4


==================== Asm code ====================
2018-03-16 16:06:17.957559165 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbst4_info:
	.quad	_cbst4
	.quad	2
	.quad	12884901918
	.quad	SboCL_srt+448


==================== Asm code ====================
2018-03-16 16:06:17.959736355 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEncoding_closure
.type GHC.IO.Handle.hGetEncoding_closure, @object
GHC.IO.Handle.hGetEncoding_closure:
	.quad	GHC.IO.Handle.hGetEncoding_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.960293882 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEncoding_entry
.type GHC.IO.Handle.hGetEncoding_entry, @object
GHC.IO.Handle.hGetEncoding_entry:
_cbsuK:
	jmp GHC.IO.Handle.hGetEncoding1_entry
	.size GHC.IO.Handle.hGetEncoding_entry, .-GHC.IO.Handle.hGetEncoding_entry


==================== Asm code ====================
2018-03-16 16:06:17.960863941 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEncoding_info
.type GHC.IO.Handle.hGetEncoding_info, @object
GHC.IO.Handle.hGetEncoding_info:
	.quad	GHC.IO.Handle.hGetEncoding_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SboCL_srt+464


==================== Asm code ====================
2018-03-16 16:06:17.962743253 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl15_rbnWX_bytes:
	.asciz "hSetEncoding"


==================== Asm code ====================
2018-03-16 16:06:17.965155197 UTC

.section .data
.align 8
.align 1
lvl16_rbnWY_closure:
	.quad	lvl16_rbnWY_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.965996377 UTC

.section .text
.align 8
lvl16_rbnWY_entry:
_cbsuY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsuZ
_cbsv0:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbsuX
_cbsuW:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl15_rbnWX_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbsuZ:
	jmp *-16(%r13)
_cbsuX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl16_rbnWY_entry, .-lvl16_rbnWY_entry


==================== Asm code ====================
2018-03-16 16:06:17.966637604 UTC

.section .data.rel.ro
.align 8
.align 1
lvl16_rbnWY_info:
	.quad	lvl16_rbnWY_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:17.96822007 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl17_rbnWZ_bytes:
	.asciz "last_decode"


==================== Asm code ====================
2018-03-16 16:06:17.971005641 UTC

.section .data
.align 8
.align 1
lvl18_rbnX0_closure:
	.quad	lvl18_rbnX0_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:17.971735979 UTC

.section .text
.align 8
lvl18_rbnX0_entry:
_cbsvh:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsvi
_cbsvj:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbsve
_cbsvd:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_cbsvf_info,-24(%rbp)
	movl $lvl17_rbnWZ_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbsvi:
	jmp *-16(%r13)
_cbsve:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl18_rbnX0_entry, .-lvl18_rbnX0_entry


==================== Asm code ====================
2018-03-16 16:06:17.972419601 UTC

.section .data.rel.ro
.align 8
.align 1
lvl18_rbnX0_info:
	.quad	lvl18_rbnX0_entry
	.quad	0
	.quad	4294967317
	.quad	SboCL_srt+288


==================== Asm code ====================
2018-03-16 16:06:17.972996221 UTC

.section .text
.align 8
_cbsvf:
_cbsvf:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size _cbsvf, .-_cbsvf


==================== Asm code ====================
2018-03-16 16:06:17.973928513 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsvf_info:
	.quad	_cbsvf
	.quad	0
	.quad	4294967326
	.quad	SboCL_srt+288


==================== Asm code ====================
2018-03-16 16:06:18.004194533 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetEncoding1_closure
.type GHC.IO.Handle.hSetEncoding1_closure, @object
GHC.IO.Handle.hSetEncoding1_closure:
	.quad	GHC.IO.Handle.hSetEncoding1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.005075831 UTC

.section .text
.align 8
sat_sbofq_entry:
_cbswn:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbswr
_cbsws:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbswk_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbswk
_cbswl:
	movq (%rbx),%rax
	jmp *(%rax)
_cbswr:
	jmp *-16(%r13)
	.size sat_sbofq_entry, .-sat_sbofq_entry


==================== Asm code ====================
2018-03-16 16:06:18.005725272 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbofq_info:
	.quad	sat_sbofq_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:18.006414037 UTC

.section .text
.align 8
_cbswk:
_cbswk:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbswv
_cbswu:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbswv:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbswk, .-_cbswk


==================== Asm code ====================
2018-03-16 16:06:18.007076308 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbswk_info:
	.quad	_cbswk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.007769825 UTC

.section .text
.align 8
sat_sbofJ_entry:
_cbswT:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsx0
_cbsx1:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbswQ_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbswQ
_cbswR:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsx0:
	jmp *-16(%r13)
	.size sat_sbofJ_entry, .-sat_sbofJ_entry


==================== Asm code ====================
2018-03-16 16:06:18.008396711 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbofJ_info:
	.quad	sat_sbofJ_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:18.010146628 UTC

.section .text
.align 8
_cbswQ:
_cbswQ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbsx4
_cbsx3:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 39(%rbx),%rbx
	addq 8(%rbp),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbsx4:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbswQ, .-_cbswQ


==================== Asm code ====================
2018-03-16 16:06:18.010827274 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbswQ_info:
	.quad	_cbswQ
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.011556717 UTC

.section .text
.align 8
sat_sbog6_entry:
_cbsx6:
	leaq -192(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsx7
_cbsx8:
	movq $block_cbsvH_info,-24(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbsvH
_cbsvI:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsx7:
	jmp *-8(%r13)
	.size sat_sbog6_entry, .-sat_sbog6_entry


==================== Asm code ====================
2018-03-16 16:06:18.012185939 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbog6_info:
	.quad	sat_sbog6_entry
	.quad	2
	.quad	18014402804449291
	.quad	8589934597
	.quad	SboCL_srt+296


==================== Asm code ====================
2018-03-16 16:06:18.013044277 UTC

.section .text
.align 8
_cbsvH:
_cbsvH:
	movq $block_cbsvM_info,-120(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 111(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 119(%rbx),%rsi
	movq 127(%rbx),%rbx
	movq %rbx,96(%rsp)
	movq 8(%r11),%rbx
	movq %rdi,104(%rsp)
	movq 72(%rsp),%rdi
	movq %rdi,-112(%rbp)
	movq 80(%rsp),%rdi
	movq %rdi,-104(%rbp)
	movq 88(%rsp),%rdi
	movq %rdi,-96(%rbp)
	movq 104(%rsp),%rdi
	movq %rdi,-88(%rbp)
	movq %r8,-80(%rbp)
	movq %r9,-72(%rbp)
	movq %r10,-64(%rbp)
	movq %r11,-56(%rbp)
	movq %r14,-48(%rbp)
	movq %rax,-40(%rbp)
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq 96(%rsp),%rax
	movq %rax,-8(%rbp)
	movq 64(%rsp),%rax
	movq %rax,(%rbp)
	addq $-120,%rbp
	testb $7,%bl
	jne _cbsvM
_cbsvN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsvH, .-_cbsvH


==================== Asm code ====================
2018-03-16 16:06:18.013851296 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsvH_info:
	.quad	_cbsvH
	.quad	2
	.quad	18014402804449310
	.quad	SboCL_srt+296


==================== Asm code ====================
2018-03-16 16:06:18.014476781 UTC

.section .text
.align 8
_cbsvM:
_cbsvM:
	movq $block_cbsvT_info,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbsvT
_cbsvU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsvM, .-_cbsvM


==================== Asm code ====================
2018-03-16 16:06:18.015079814 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsvM_info:
	.quad	_cbsvM
	.quad	17
	.quad	18014402804449310
	.quad	SboCL_srt+296


==================== Asm code ====================
2018-03-16 16:06:18.015804581 UTC

.section .text
.align 8
_cbsvT:
_cbsvT:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbszU
_cbsAP:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _ubsBd
_cbsAN:
	movl $GHC.IO.Handle.Internals.flushCharBuffer2_closure,%ebx
	addq $160,%rbp
	jmp stg_ap_0_fast
_ubsBd:
	addq $24,%rbp
	jmp _sbodr
_cbszU:
	movq 80(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbsvY_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbsvY
_cbsvZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsvT, .-_cbsvT


==================== Asm code ====================
2018-03-16 16:06:18.016419685 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsvT_info:
	.quad	_cbsvT
	.quad	211
	.quad	18014402804449310
	.quad	SboCL_srt+296


==================== Asm code ====================
2018-03-16 16:06:18.017063038 UTC

.section .text
.align 8
_cbsvY:
_cbsvY:
	movq $block_cbsw3_info,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbsw3
_cbsw4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsvY, .-_cbsvY


==================== Asm code ====================
2018-03-16 16:06:18.017694103 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsvY_info:
	.quad	_cbsvY
	.quad	17
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.018434775 UTC

.section .text
.align 8
_cbsw3:
_cbsw3:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbsAC
_ubsBe:
	addq $24,%rbp
	jmp _sbodr
_ubsBf:
	addq $24,%rbp
	jmp _sbodr
_cbsAC:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _ubsBf
_cbszY:
	movq 72(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbswb_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbswb
_cbswc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsw3, .-_cbsw3


==================== Asm code ====================
2018-03-16 16:06:18.01902365 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsw3_info:
	.quad	_cbsw3
	.quad	211
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.01983892 UTC

.section .text
.align 8
_cbswb:
_cbswb:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbsA1
_cbsA0:
	movq 64(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq 8(%rax),%rdx
	movq $sat_sbofq_info,-16(%r12)
	movq %rdx,(%r12)
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cbswA_info,-8(%rbp)
	movq %rbx,%rcx
	movq 64(%rsp),%rax
	movq %rax,%rbx
	movq %rcx,(%rbp)
	movq %r14,56(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbswA
_cbswB:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsA1:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbswb, .-_cbswb


==================== Asm code ====================
2018-03-16 16:06:18.020525366 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbswb_info:
	.quad	_cbswb
	.quad	4113
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.021346255 UTC

.section .text
.align 8
_cbswA:
_cbswA:
	movq 39(%rbx),%rax
	testq %rax,%rax
	jne _cbsA4
_cbsAz:
	movq 48(%rbp),%rax
	movq 8(%rbp),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $16,%rbp
	jmp _sbodr
_cbsA4:
	movq $block_cbswH_info,-32(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq 96(%rbp),%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rsi,(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbswH
_cbswI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbswA, .-_cbswA


==================== Asm code ====================
2018-03-16 16:06:18.02203319 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbswA_info:
	.quad	_cbswA
	.quad	18
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.022835741 UTC

.section .text
.align 8
_cbswH:
_cbswH:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbsA6
_cbsAo:
	movq $block_cbsAc_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbsAc
_cbsAd:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsA9:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_cbsA6:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbsA9
_cbsA8:
	movq $sat_sbofJ_info,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	movq 80(%rbp),%rax
	leaq -24(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $48,%rbp
	jmp _sbodr
	.size _cbswH, .-_cbswH


==================== Asm code ====================
2018-03-16 16:06:18.023599244 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbswH_info:
	.quad	_cbswH
	.quad	790
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.024215017 UTC

.section .text
.align 8
_cbsAc:
_cbsAc:
	movq $block_cbsAh_info,-8(%rbp)
	movq 96(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,96(%rbp)
	addq $-8,%rbp
	jmp stg_ap_pv_fast
	.size _cbsAc, .-_cbsAc


==================== Asm code ====================
2018-03-16 16:06:18.024811047 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsAc_info:
	.quad	_cbsAc
	.quad	790
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.025613621 UTC

.section .text
.align 8
_cbsAh:
_cbsAh:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbsAs
_cbsAr:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	movq 40(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 48(%rbp),%rax
	movq $block_cbsAk_info,48(%rbp)
	leaq -47(%r12),%r8
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 104(%rbp),%r14
	addq $48,%rbp
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_cbsAs:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbsAh, .-_cbsAh


==================== Asm code ====================
2018-03-16 16:06:18.026271413 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsAh_info:
	.quad	_cbsAh
	.quad	1559
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.026897425 UTC

.section .text
.align 8
_cbsAk:
_cbsAk:
	movq $block_cbsAm_info,(%rbp)
	testb $7,%bl
	jne _cbsAm
_cbsAu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsAk, .-_cbsAk


==================== Asm code ====================
2018-03-16 16:06:18.027438199 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsAk_info:
	.quad	_cbsAk
	.quad	4113
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.028103223 UTC

.section .text
.align 8
_cbsAm:
_cbsAm:
	movq 40(%rbp),%rax
	movq 7(%rbx),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $8,%rbp
	jmp _sbodr
	.size _cbsAm, .-_cbsAm


==================== Asm code ====================
2018-03-16 16:06:18.028700013 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsAm_info:
	.quad	_cbsAm
	.quad	4113
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.029602352 UTC

.section .text
.align 8
_sbodr:
_sbodr:
	movq $block_cbsxg_info,-8(%rbp)
	movq 80(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbsxg
_cbsyS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbodr, .-_sbodr


==================== Asm code ====================
2018-03-16 16:06:18.030356985 UTC

.section .text
.align 8
_cbsxg:
_cbsxg:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbsyZ
_cbszo:
	movq $block_cbszm_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbszm
_cbszp:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsyZ:
	movq $block_cbsyW_info,(%rbp)
	movq 80(%rbp),%rbx
	testb $7,%bl
	jne _cbsyW
_cbsz0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsxg, .-_cbsxg


==================== Asm code ====================
2018-03-16 16:06:18.03095859 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsxg_info:
	.quad	_cbsxg
	.quad	69649
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.031639994 UTC

.section .text
.align 8
_cbsyW:
_cbsyW:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubsBl
_cbszg:
	movq $block_cbsz9_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbsz9
_cbsza:
	movq (%rbx),%rax
	jmp *(%rax)
_ubsBl:
	addq $8,%rbp
	jmp _sbodt
	.size _cbsyW, .-_cbsyW


==================== Asm code ====================
2018-03-16 16:06:18.032283521 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsyW_info:
	.quad	_cbsyW
	.quad	102417
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.032862714 UTC

.section .text
.align 8
_cbsz9:
_cbsz9:
	movq $block_cbsze_info,(%rbp)
	movq 23(%rbx),%rbx
	jmp stg_ap_v_fast
	.size _cbsz9, .-_cbsz9


==================== Asm code ====================
2018-03-16 16:06:18.033421127 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsz9_info:
	.quad	_cbsz9
	.quad	102417
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.0340062 UTC

.section .text
.align 8
_cbsze:
_cbsze:
	addq $8,%rbp
	jmp _sbodt
	.size _cbsze, .-_cbsze


==================== Asm code ====================
2018-03-16 16:06:18.034529526 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsze_info:
	.quad	_cbsze
	.quad	102417
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.035084801 UTC

.section .text
.align 8
_cbszm:
_cbszm:
	movq $block_cbszt_info,(%rbp)
	movq 23(%rbx),%rbx
	jmp stg_ap_v_fast
	.size _cbszm, .-_cbszm


==================== Asm code ====================
2018-03-16 16:06:18.035635993 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbszm_info:
	.quad	_cbszm
	.quad	69649
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.036274545 UTC

.section .text
.align 8
_cbszt:
_cbszt:
	movq $block_cbszv_info,(%rbp)
	movq 80(%rbp),%rbx
	testb $7,%bl
	jne _cbszv
_cbszy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbszt, .-_cbszt


==================== Asm code ====================
2018-03-16 16:06:18.036814215 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbszt_info:
	.quad	_cbszt
	.quad	69649
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.03749894 UTC

.section .text
.align 8
_cbszv:
_cbszv:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubsBj
_cbszO:
	movq $block_cbszH_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbszH
_cbszI:
	movq (%rbx),%rax
	jmp *(%rax)
_ubsBj:
	addq $8,%rbp
	jmp _sbodt
	.size _cbszv, .-_cbszv


==================== Asm code ====================
2018-03-16 16:06:18.038077244 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbszv_info:
	.quad	_cbszv
	.quad	102417
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.039276766 UTC

.section .text
.align 8
_cbszH:
_cbszH:
	movq $block_cbszM_info,(%rbp)
	movq 23(%rbx),%rbx
	jmp stg_ap_v_fast
	.size _cbszH, .-_cbszH


==================== Asm code ====================
2018-03-16 16:06:18.03984487 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbszH_info:
	.quad	_cbszH
	.quad	102417
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.040430253 UTC

.section .text
.align 8
_cbszM:
_cbszM:
	addq $8,%rbp
	jmp _sbodt
	.size _cbszM, .-_cbszM


==================== Asm code ====================
2018-03-16 16:06:18.040972878 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbszM_info:
	.quad	_cbszM
	.quad	102417
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.042040482 UTC

.section .text
.align 8
_sbodt:
_sbodt:
	movq $block_cbsxl_info,-8(%rbp)
	movq 120(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbsxl
_cbsxn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbodt, .-_sbodt


==================== Asm code ====================
2018-03-16 16:06:18.042721366 UTC

.section .text
.align 8
_cbsxl:
_cbsxl:
	movq $block_cbsxt_info,(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,88(%rbp)
	movq %rax,128(%rbp)
	testb $7,%bl
	jne _cbsxt
_cbsyt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsxl, .-_cbsxl


==================== Asm code ====================
2018-03-16 16:06:18.043305648 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsxl_info:
	.quad	_cbsxl
	.quad	2199569
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.044000221 UTC

.section .text
.align 8
_cbsxt:
_cbsxt:
	movq 128(%rbp),%rax
	andl $7,%ebx
	cmpq $3,%rbx
	jne _ubsBa
_cbsyE:
	movq $block_cbsyC_info,(%rbp)
	movq %rax,%rbx
	jmp stg_ap_v_fast
_ubsBa:
	cmpq $6,%rbx
	jne _cbsyz
_cbsyN:
	movq $block_cbsyL_info,(%rbp)
	movq %rax,%rbx
	jmp stg_ap_v_fast
_cbsyz:
	movq $GHC.Base.Nothing_closure+1,128(%rbp)
	addq $8,%rbp
	jmp _sbodz
	.size _cbsxt, .-_cbsxt


==================== Asm code ====================
2018-03-16 16:06:18.044631364 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsxt_info:
	.quad	_cbsxt
	.quad	36881
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.045330724 UTC

.section .text
.align 8
_cbsyL:
_cbsyL:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbsyR
_cbsyQ:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,128(%rbp)
	addq $8,%rbp
	jmp _sbodz
_cbsyR:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbsyL, .-_cbsyL


==================== Asm code ====================
2018-03-16 16:06:18.045945235 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsyL_info:
	.quad	_cbsyL
	.quad	2134033
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.046617997 UTC

.section .text
.align 8
_cbsyC:
_cbsyC:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbsyI
_cbsyH:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,128(%rbp)
	addq $8,%rbp
	jmp _sbodz
_cbsyI:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbsyC, .-_cbsyC


==================== Asm code ====================
2018-03-16 16:06:18.047225225 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsyC_info:
	.quad	_cbsyC
	.quad	2134033
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.047870389 UTC

.section .text
.align 8
_sbodz:
_sbodz:
	movq $block_cbsxy_info,-8(%rbp)
	movq 24(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbsxy
_cbsxA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbodz, .-_sbodz


==================== Asm code ====================
2018-03-16 16:06:18.048699865 UTC

.section .text
.align 8
_cbsxy:
_cbsxy:
	movq 88(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $5,%rcx
	jb _ubsBb
_ubsBc:
	cmpq $6,%rcx
	jb _cbsya
_cbsyo:
	movq $block_cbsyh_info,(%rbp)
	movq %rax,%rbx
	jmp stg_ap_v_fast
_cbsya:
	movq $block_cbsy3_info,(%rbp)
	movq %rax,%rbx
	jmp stg_ap_v_fast
_ubsBb:
	cmpq $4,%rcx
	jb _cbsxJ
_cbsxW:
	movq $block_cbsxP_info,(%rbp)
	movq %rax,%rbx
	jmp stg_ap_v_fast
_cbsxJ:
	movq $block_cbsxE_info,(%rbp)
	movq %rbx,%rax
	movl $lvl18_rbnX0_closure,%ebx
	movq %rax,88(%rbp)
	jmp stg_newMutVar#
	.size _cbsxy, .-_cbsxy


==================== Asm code ====================
2018-03-16 16:06:18.049354348 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsxy_info:
	.quad	_cbsxy
	.quad	37393
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.050155202 UTC

.section .text
.align 8
_cbsxE:
_cbsxE:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cbsxM
_cbsxL:
	movq $GHC.IO.Handle.Types.Handle___con_info,-128(%r12)
	movq 120(%rbp),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq 16(%rbp),%rax
	movq %rax,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq 88(%rbp),%rax
	movq %rax,-88(%r12)
	movq 40(%rbp),%rax
	movq %rax,-80(%r12)
	movq 48(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 64(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq $GHC.Base.Nothing_closure+1,-40(%r12)
	movq 128(%rbp),%rax
	movq %rax,-32(%r12)
	movq 136(%rbp),%rax
	movq %rax,-24(%r12)
	movq 96(%rbp),%rax
	movq %rax,-16(%r12)
	movq 104(%rbp),%rax
	movq %rax,-8(%r12)
	movq 112(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbsxM:
	movq $136,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbsxE, .-_cbsxE


==================== Asm code ====================
2018-03-16 16:06:18.05090901 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsxE_info:
	.quad	_cbsxE
	.quad	37393
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.051512515 UTC

.section .text
.align 8
_cbsxP:
_cbsxP:
	movq $block_cbsxR_info,(%rbp)
	movq %rbx,%rax
	movl $lvl18_rbnX0_closure,%ebx
	movq %rax,88(%rbp)
	jmp stg_newMutVar#
	.size _cbsxP, .-_cbsxP


==================== Asm code ====================
2018-03-16 16:06:18.052077979 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsxP_info:
	.quad	_cbsxP
	.quad	102929
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.052883246 UTC

.section .text
.align 8
_cbsxR:
_cbsxR:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _cbsy0
_cbsxZ:
	movq $GHC.Base.Just_con_info,-144(%r12)
	movq 88(%rbp),%rax
	movq %rax,-136(%r12)
	movq $GHC.IO.Handle.Types.Handle___con_info,-128(%r12)
	movq 120(%rbp),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq 16(%rbp),%rax
	movq %rax,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq $GHC.IO.Handle.Types.WriteHandle_closure+4,-88(%r12)
	movq 40(%rbp),%rax
	movq %rax,-80(%r12)
	movq 48(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 64(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	leaq -142(%r12),%rax
	movq %rax,-40(%r12)
	movq 128(%rbp),%rax
	movq %rax,-32(%r12)
	movq 136(%rbp),%rax
	movq %rax,-24(%r12)
	movq 96(%rbp),%rax
	movq %rax,-16(%r12)
	movq 104(%rbp),%rax
	movq %rax,-8(%r12)
	movq 112(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbsy0:
	movq $152,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbsxR, .-_cbsxR


==================== Asm code ====================
2018-03-16 16:06:18.053673503 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsxR_info:
	.quad	_cbsxR
	.quad	37393
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.054306628 UTC

.section .text
.align 8
_cbsy3:
_cbsy3:
	movq $block_cbsy5_info,(%rbp)
	movq %rbx,%rax
	movl $lvl18_rbnX0_closure,%ebx
	movq %rax,88(%rbp)
	jmp stg_newMutVar#
	.size _cbsy3, .-_cbsy3


==================== Asm code ====================
2018-03-16 16:06:18.054884323 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsy3_info:
	.quad	_cbsy3
	.quad	102929
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.055710912 UTC

.section .text
.align 8
_cbsy5:
_cbsy5:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _cbsye
_cbsyd:
	movq $GHC.Base.Just_con_info,-144(%r12)
	movq 88(%rbp),%rax
	movq %rax,-136(%r12)
	movq $GHC.IO.Handle.Types.Handle___con_info,-128(%r12)
	movq 120(%rbp),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq 16(%rbp),%rax
	movq %rax,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq $GHC.IO.Handle.Types.AppendHandle_closure+5,-88(%r12)
	movq 40(%rbp),%rax
	movq %rax,-80(%r12)
	movq 48(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 64(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	leaq -142(%r12),%rax
	movq %rax,-40(%r12)
	movq 128(%rbp),%rax
	movq %rax,-32(%r12)
	movq 136(%rbp),%rax
	movq %rax,-24(%r12)
	movq 96(%rbp),%rax
	movq %rax,-16(%r12)
	movq 104(%rbp),%rax
	movq %rax,-8(%r12)
	movq 112(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbsye:
	movq $152,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbsy5, .-_cbsy5


==================== Asm code ====================
2018-03-16 16:06:18.056464183 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsy5_info:
	.quad	_cbsy5
	.quad	37393
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.057043107 UTC

.section .text
.align 8
_cbsyh:
_cbsyh:
	movq $block_cbsyj_info,(%rbp)
	movq %rbx,%rax
	movl $lvl18_rbnX0_closure,%ebx
	movq %rax,88(%rbp)
	jmp stg_newMutVar#
	.size _cbsyh, .-_cbsyh


==================== Asm code ====================
2018-03-16 16:06:18.058001915 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsyh_info:
	.quad	_cbsyh
	.quad	102929
	.quad	4294967326
	.quad	SboCL_srt+472


==================== Asm code ====================
2018-03-16 16:06:18.058807427 UTC

.section .text
.align 8
_cbsyj:
_cbsyj:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _cbsys
_cbsyr:
	movq $GHC.Base.Just_con_info,-144(%r12)
	movq 88(%rbp),%rax
	movq %rax,-136(%r12)
	movq $GHC.IO.Handle.Types.Handle___con_info,-128(%r12)
	movq 120(%rbp),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq 16(%rbp),%rax
	movq %rax,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq $GHC.IO.Handle.Types.ReadWriteHandle_closure+6,-88(%r12)
	movq 40(%rbp),%rax
	movq %rax,-80(%r12)
	movq 48(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 64(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	leaq -142(%r12),%rax
	movq %rax,-40(%r12)
	movq 128(%rbp),%rax
	movq %rax,-32(%r12)
	movq 136(%rbp),%rax
	movq %rax,-24(%r12)
	movq 96(%rbp),%rax
	movq %rax,-16(%r12)
	movq 104(%rbp),%rax
	movq %rax,-8(%r12)
	movq 112(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbsys:
	movq $152,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbsyj, .-_cbsyj


==================== Asm code ====================
2018-03-16 16:06:18.059586061 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsyj_info:
	.quad	_cbsyj
	.quad	37393
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.060309562 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetEncoding1_entry
.type GHC.IO.Handle.hSetEncoding1_entry, @object
GHC.IO.Handle.hSetEncoding1_entry:
_cbsBW:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbsC0
_cbsBZ:
	movq $GHC.Base.Just_con_info,-32(%r12)
	movq %rsi,-24(%r12)
	movq $sat_sbog6_info,-16(%r12)
	movq %rsi,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rdi
	movq %r14,%rsi
	movl $lvl16_rbnWY_closure,%r14d
	jmp GHC.IO.Handle.Internals.withAllHandles__1_entry
_cbsC0:
	movq $40,904(%r13)
	movl $GHC.IO.Handle.hSetEncoding1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hSetEncoding1_entry, .-GHC.IO.Handle.hSetEncoding1_entry


==================== Asm code ====================
2018-03-16 16:06:18.060998852 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetEncoding1_info
.type GHC.IO.Handle.hSetEncoding1_info, @object
GHC.IO.Handle.hSetEncoding1_info:
	.quad	GHC.IO.Handle.hSetEncoding1_entry
	.quad	0
	.quad	4035225407857885198
	.quad	12884901903
	.quad	SboCL_srt+256


==================== Asm code ====================
2018-03-16 16:06:18.063324698 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetEncoding_closure
.type GHC.IO.Handle.hSetEncoding_closure, @object
GHC.IO.Handle.hSetEncoding_closure:
	.quad	GHC.IO.Handle.hSetEncoding_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.063911116 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetEncoding_entry
.type GHC.IO.Handle.hSetEncoding_entry, @object
GHC.IO.Handle.hSetEncoding_entry:
_cbsG4:
	jmp GHC.IO.Handle.hSetEncoding1_entry
	.size GHC.IO.Handle.hSetEncoding_entry, .-GHC.IO.Handle.hSetEncoding_entry


==================== Asm code ====================
2018-03-16 16:06:18.064483293 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetEncoding_info
.type GHC.IO.Handle.hSetEncoding_info, @object
GHC.IO.Handle.hSetEncoding_info:
	.quad	GHC.IO.Handle.hSetEncoding_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SboCL_srt+480


==================== Asm code ====================
2018-03-16 16:06:18.06612901 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hSetBuffering3_bytes
.type GHC.IO.Handle.hSetBuffering3_bytes, @object
GHC.IO.Handle.hSetBuffering3_bytes:
	.asciz "hSetBuffering"


==================== Asm code ====================
2018-03-16 16:06:18.069003405 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetBuffering2_closure
.type GHC.IO.Handle.hSetBuffering2_closure, @object
GHC.IO.Handle.hSetBuffering2_closure:
	.quad	GHC.IO.Handle.hSetBuffering2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.069883153 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetBuffering2_entry
.type GHC.IO.Handle.hSetBuffering2_entry, @object
GHC.IO.Handle.hSetBuffering2_entry:
_cbsGi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsGj
_cbsGk:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbsGh
_cbsGg:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.hSetBuffering3_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbsGj:
	jmp *-16(%r13)
_cbsGh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hSetBuffering2_entry, .-GHC.IO.Handle.hSetBuffering2_entry


==================== Asm code ====================
2018-03-16 16:06:18.070568868 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetBuffering2_info
.type GHC.IO.Handle.hSetBuffering2_info, @object
GHC.IO.Handle.hSetBuffering2_info:
	.quad	GHC.IO.Handle.hSetBuffering2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:18.092143691 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetBuffering1_closure
.type GHC.IO.Handle.hSetBuffering1_closure, @object
GHC.IO.Handle.hSetBuffering1_closure:
	.quad	GHC.IO.Handle.hSetBuffering1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.093025624 UTC

.section .text
.align 8
sat_sbohh_entry:
_cbsGE:
	leaq -176(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsGF
_cbsGG:
	movq $block_cbsGB_info,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbsGB
_cbsGC:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsGF:
	jmp *-8(%r13)
	.size sat_sbohh_entry, .-sat_sbohh_entry


==================== Asm code ====================
2018-03-16 16:06:18.093659766 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbohh_info:
	.quad	sat_sbohh_entry
	.quad	1
	.quad	12884901897
	.quad	8589934597
	.quad	SboCL_srt+496


==================== Asm code ====================
2018-03-16 16:06:18.094575911 UTC

.section .text
.align 8
_cbsGB:
_cbsGB:
	movq $block_cbsGJ_info,-128(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rsi
	movq 31(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 119(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 127(%rbx),%r8
	movq 39(%rbx),%rbx
	movq %r9,112(%rsp)
	movq 72(%rsp),%r9
	movq %r9,-120(%rbp)
	movq 80(%rsp),%r9
	movq %r9,-112(%rbp)
	movq 88(%rsp),%r9
	movq %r9,-104(%rbp)
	movq 96(%rsp),%r9
	movq %r9,-96(%rbp)
	movq 104(%rsp),%r9
	movq %r9,-88(%rbp)
	movq 112(%rsp),%r9
	movq %r9,-80(%rbp)
	movq %r10,-72(%rbp)
	movq %r11,-64(%rbp)
	movq %r14,-56(%rbp)
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq 64(%rsp),%rax
	movq %rax,(%rbp)
	addq $-128,%rbp
	testb $7,%bl
	jne _cbsGJ
_cbsGL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsGB, .-_cbsGB


==================== Asm code ====================
2018-03-16 16:06:18.095423043 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsGB_info:
	.quad	_cbsGB
	.quad	1
	.quad	12884901918
	.quad	SboCL_srt+496


==================== Asm code ====================
2018-03-16 16:06:18.096164058 UTC

.section .text
.align 8
_cbsGJ:
_cbsGJ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbsKE
_cbsIU:
	movq $block_cbsGR_info,-8(%rbp)
	movq %rbx,%rax
	movq 136(%rbp),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbsGR
_cbsIV:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsKE:
	addq $144,%rbp
	jmp GHC.IO.Handle.Internals.ioe_closedHandle1_entry
	.size _cbsGJ, .-_cbsGJ


==================== Asm code ====================
2018-03-16 16:06:18.096787175 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsGJ_info:
	.quad	_cbsGJ
	.quad	17
	.quad	12884901918
	.quad	SboCL_srt+496


==================== Asm code ====================
2018-03-16 16:06:18.097951435 UTC

.section .text
.align 8
_cbsGR:
_cbsGR:
	movq 56(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _ubsKS
_cbsJy:
	movq $block_cbsJw_info,(%rbp)
	movq 5(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,56(%rbp)
	testb $7,%bl
	jne _cbsJw
_cbsJz:
	movq (%rbx),%rax
	jmp *(%rax)
_ubsKS:
	cmpq $2,%rcx
	jb _cbsJ2
_cbsJi:
	movq $block_cbsJg_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbsJg
_cbsJj:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsJ2:
	movq $block_cbsIZ_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbsIZ
_cbsJ3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsGR, .-_cbsGR


==================== Asm code ====================
2018-03-16 16:06:18.098661676 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsGR_info:
	.quad	_cbsGR
	.quad	18
	.quad	4294967326
	.quad	SboCL_srt+496


==================== Asm code ====================
2018-03-16 16:06:18.099318758 UTC

.section .text
.align 8
_cbsIZ:
_cbsIZ:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ubsKU
_ubsKV:
	addq $8,%rbp
	jmp _sbogu
_ubsKU:
	addq $136,%rbp
	jmp _cbsKA
	.size _cbsIZ, .-_cbsIZ


==================== Asm code ====================
2018-03-16 16:06:18.099920519 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsIZ_info:
	.quad	_cbsIZ
	.quad	4114
	.quad	4294967326
	.quad	SboCL_srt+496


==================== Asm code ====================
2018-03-16 16:06:18.100558594 UTC

.section .text
.align 8
_cbsJg:
_cbsJg:
	andl $7,%ebx
	cmpq $2,%rbx
	je _ubsKW
_ubsKX:
	addq $8,%rbp
	jmp _sbogu
_ubsKW:
	addq $136,%rbp
	jmp _cbsKA
	.size _cbsJg, .-_cbsJg


==================== Asm code ====================
2018-03-16 16:06:18.101103914 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsJg_info:
	.quad	_cbsJg
	.quad	4114
	.quad	4294967326
	.quad	SboCL_srt+496


==================== Asm code ====================
2018-03-16 16:06:18.101866553 UTC

.section .text
.align 8
_cbsJw:
_cbsJw:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _cbsJK
_ubsKY:
	addq $8,%rbp
	jmp _sbogu
_cbsJK:
	movq $block_cbsJI_info,(%rbp)
	movq 5(%rbx),%rax
	movq 56(%rbp),%rbx
	movq %rax,56(%rbp)
	testb $7,%bl
	jne _cbsJI
_cbsJL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsJw, .-_cbsJw


==================== Asm code ====================
2018-03-16 16:06:18.102502169 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsJw_info:
	.quad	_cbsJw
	.quad	18
	.quad	4294967326
	.quad	SboCL_srt+496


==================== Asm code ====================
2018-03-16 16:06:18.103317351 UTC

.section .text
.align 8
_cbsJI:
_cbsJI:
	movq 56(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbsJS
_cbsK8:
	movq $block_cbsK6_info,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,56(%rbp)
	testb $7,%bl
	jne _cbsK6
_cbsK9:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsJS:
	movq $block_cbsJP_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbsJP
_cbsJT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsJI, .-_cbsJI


==================== Asm code ====================
2018-03-16 16:06:18.103972483 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsJI_info:
	.quad	_cbsJI
	.quad	18
	.quad	4294967326
	.quad	SboCL_srt+496


==================== Asm code ====================
2018-03-16 16:06:18.104645709 UTC

.section .text
.align 8
_cbsJP:
_cbsJP:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ubsL2
_ubsL3:
	addq $8,%rbp
	jmp _sbogu
_ubsL2:
	addq $136,%rbp
	jmp _cbsKA
	.size _cbsJP, .-_cbsJP


==================== Asm code ====================
2018-03-16 16:06:18.105256996 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsJP_info:
	.quad	_cbsJP
	.quad	4114
	.quad	4294967326
	.quad	SboCL_srt+496


==================== Asm code ====================
2018-03-16 16:06:18.105924243 UTC

.section .text
.align 8
_cbsK6:
_cbsK6:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubsKZ
_cbsKp:
	movq $block_cbsKi_info,(%rbp)
	movq 6(%rbx),%rax
	movq 56(%rbp),%rbx
	movq %rax,56(%rbp)
	testb $7,%bl
	jne _cbsKi
_cbsKj:
	movq (%rbx),%rax
	jmp *(%rax)
_ubsKZ:
	addq $8,%rbp
	jmp _sbogu
	.size _cbsK6, .-_cbsK6


==================== Asm code ====================
2018-03-16 16:06:18.106580966 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsK6_info:
	.quad	_cbsK6
	.quad	18
	.quad	4294967326
	.quad	SboCL_srt+496


==================== Asm code ====================
2018-03-16 16:06:18.107274168 UTC

.section .text
.align 8
_cbsKi:
_cbsKi:
	movq $block_cbsKn_info,(%rbp)
	movq 7(%rbx),%rax
	movq 56(%rbp),%rbx
	movq %rax,56(%rbp)
	testb $7,%bl
	jne _cbsKn
_cbsKr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsKi, .-_cbsKi


==================== Asm code ====================
2018-03-16 16:06:18.107882011 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsKi_info:
	.quad	_cbsKi
	.quad	18
	.quad	4294967326
	.quad	SboCL_srt+496


==================== Asm code ====================
2018-03-16 16:06:18.108523724 UTC

.section .text
.align 8
_cbsKn:
_cbsKn:
	movq 56(%rbp),%rax
	cmpq 7(%rbx),%rax
	je _ubsL0
_ubsL1:
	addq $8,%rbp
	jmp _sbogu
_ubsL0:
	addq $136,%rbp
	jmp _cbsKA
	.size _cbsKn, .-_cbsKn


==================== Asm code ====================
2018-03-16 16:06:18.10909269 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsKn_info:
	.quad	_cbsKn
	.quad	4114
	.quad	4294967326
	.quad	SboCL_srt+496


==================== Asm code ====================
2018-03-16 16:06:18.109835489 UTC

.section .text
.align 8
_cbsKA:
_cbsKA:
	movq (%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbsKA, .-_cbsKA


==================== Asm code ====================
2018-03-16 16:06:18.110529849 UTC

.section .text
.align 8
_sbogu:
_sbogu:
	movq $block_cbsGY_info,-8(%rbp)
	movq 136(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbsGY
_cbsIl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbogu, .-_sbogu


==================== Asm code ====================
2018-03-16 16:06:18.111293875 UTC

.section .text
.align 8
_cbsGY:
_cbsGY:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _cbsIw
_ubsL4:
	addq $8,%rbp
	jmp _sbogv
_cbsIw:
	movq $block_cbsIu_info,(%rbp)
	movq 5(%rbx),%rbx
	testb $7,%bl
	jne _cbsIu
_cbsIx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsGY, .-_cbsGY


==================== Asm code ====================
2018-03-16 16:06:18.111873394 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsGY_info:
	.quad	_cbsGY
	.quad	4198418
	.quad	4294967326
	.quad	SboCL_srt+496


==================== Asm code ====================
2018-03-16 16:06:18.112565747 UTC

.section .text
.align 8
_cbsIu:
_cbsIu:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubsL5
_cbsII:
	movq $block_cbsIG_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbsIG
_cbsIJ:
	movq (%rbx),%rax
	jmp *(%rax)
_ubsL5:
	addq $8,%rbp
	jmp _sbogv
	.size _cbsIu, .-_cbsIu


==================== Asm code ====================
2018-03-16 16:06:18.113151291 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsIu_info:
	.quad	_cbsIu
	.quad	4198418
	.quad	4294967326
	.quad	SboCL_srt+496


==================== Asm code ====================
2018-03-16 16:06:18.113851832 UTC

.section .text
.align 8
_cbsIG:
_cbsIG:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jg _ubsL6
_cbsIS:
	movq %rax,%r14
	addq $152,%rbp
	jmp GHC.IO.Handle.Internals.$wioe_bufsiz_entry
_ubsL6:
	addq $8,%rbp
	jmp _sbogv
	.size _cbsIG, .-_cbsIG


==================== Asm code ====================
2018-03-16 16:06:18.114466663 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsIG_info:
	.quad	_cbsIG
	.quad	4198418
	.quad	4294967326
	.quad	SboCL_srt+496


==================== Asm code ====================
2018-03-16 16:06:18.115122612 UTC

.section .text
.align 8
_sbogv:
_sbogv:
	movq $block_cbsH3_info,-8(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_pv_info,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	addq $-24,%rbp
	jmp GHC.IO.Device.isTerminal_entry
	.size _sbogv, .-_sbogv


==================== Asm code ====================
2018-03-16 16:06:18.115826229 UTC

.section .text
.align 8
_cbsH3:
_cbsH3:
	movq $block_cbsH5_info,(%rbp)
	testb $7,%bl
	jne _cbsH5
_cbsH8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsH3, .-_cbsH3


==================== Asm code ====================
2018-03-16 16:06:18.116413587 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsH3_info:
	.quad	_cbsH3
	.quad	4198418
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.117565295 UTC

.section .text
.align 8
_cbsH5:
_cbsH5:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbsHh
_cbsHZ:
	movq $block_cbsHp_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbsHp
_cbsI0:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsHk:
	movq $136,904(%r13)
	jmp stg_gc_unpt_r1
_cbsHh:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cbsHk
_cbsHj:
	movq 144(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq 48(%rbp),%r8
	movq 64(%rbp),%r9
	movq 72(%rbp),%r10
	movq 80(%rbp),%r11
	movq 88(%rbp),%r14
	movq %rbx,64(%rsp)
	movq 96(%rbp),%rbx
	movq %rcx,72(%rsp)
	movq 104(%rbp),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbp),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbp),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbp),%rdi
	movq $GHC.IO.Handle.Types.BufferListNil_closure+1,8(%r11)
	subq $8,%rsp
	movq %r8,112(%rsp)
	movq %r13,%r8
	movq %rsi,120(%rsp)
	movq %r11,%rsi
	movq %rdi,128(%rsp)
	movq %r8,%rdi
	movq %rax,%r8
	xorl %eax,%eax
	movq %r9,136(%rsp)
	movq %r10,144(%rsp)
	movq %r11,152(%rsp)
	movq %rcx,160(%rsp)
	movq %rdx,168(%rsp)
	movq %r8,176(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.IO.Handle.Types.Handle___con_info,-128(%r12)
	movq 72(%rsp),%rax
	movq %rax,-120(%r12)
	movq 80(%rsp),%rax
	movq %rax,-112(%r12)
	movq 88(%rsp),%rax
	movq %rax,-104(%r12)
	movq 96(%rsp),%rax
	movq %rax,-96(%r12)
	movq 168(%rsp),%rax
	movq %rax,-88(%r12)
	movq 104(%rsp),%rax
	movq %rax,-80(%r12)
	movq 64(%rsp),%rax
	movq %rax,-72(%r12)
	movq 128(%rsp),%rax
	movq %rax,-64(%r12)
	movq 136(%rsp),%rax
	movq %rax,-56(%r12)
	movq 144(%rsp),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq %rbx,-32(%r12)
	movq 152(%rsp),%rax
	movq %rax,-24(%r12)
	movq 160(%rsp),%rax
	movq %rax,-16(%r12)
	movq 112(%rsp),%rax
	movq %rax,-8(%r12)
	movq 120(%rsp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $152,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbsH5, .-_cbsH5


==================== Asm code ====================
2018-03-16 16:06:18.118588237 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsH5_info:
	.quad	_cbsH5
	.quad	4198418
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.120344812 UTC

.section .text
.align 8
_cbsHp:
_cbsHp:
	movq 144(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	je _sbogD
_ubsKT:
	cmpq $6,%rcx
	je _sbogD
_cbsI9:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cbsIc
_cbsIb:
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq 48(%rbp),%r8
	movq 64(%rbp),%r9
	movq 72(%rbp),%r10
	movq 80(%rbp),%r11
	movq 88(%rbp),%r14
	movq %rax,64(%rsp)
	movq 96(%rbp),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbp),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbp),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbp),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbp),%rdi
	movq $GHC.IO.Handle.Types.BufferListNil_closure+1,8(%r11)
	subq $8,%rsp
	movq %r8,112(%rsp)
	movq %r13,%r8
	movq %rsi,120(%rsp)
	movq %r11,%rsi
	movq %rdi,128(%rsp)
	movq %r8,%rdi
	movq %rax,%r8
	xorl %eax,%eax
	movq %r9,136(%rsp)
	movq %r10,144(%rsp)
	movq %r11,152(%rsp)
	movq %r8,160(%rsp)
	movq %rcx,168(%rsp)
	movq %rdx,176(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.IO.Handle.Types.Handle___con_info,-128(%r12)
	movq 72(%rsp),%rax
	movq %rax,-120(%r12)
	movq 80(%rsp),%rax
	movq %rax,-112(%r12)
	movq 88(%rsp),%rax
	movq %rax,-104(%r12)
	movq 96(%rsp),%rax
	movq %rax,-96(%r12)
	movq %rbx,-88(%r12)
	movq 104(%rsp),%rax
	movq %rax,-80(%r12)
	movq 64(%rsp),%rax
	movq %rax,-72(%r12)
	movq 128(%rsp),%rax
	movq %rax,-64(%r12)
	movq 136(%rsp),%rax
	movq %rax,-56(%r12)
	movq 144(%rsp),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq 152(%rsp),%rax
	movq %rax,-32(%r12)
	movq 160(%rsp),%rax
	movq %rax,-24(%r12)
	movq 168(%rsp),%rax
	movq %rax,-16(%r12)
	movq 112(%rsp),%rax
	movq %rax,-8(%r12)
	movq 120(%rsp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $152,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbsIc:
	movq $136,904(%r13)
	jmp stg_gc_unpt_r1
_sbogD:
	movq $block_cbsHu_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbsHu
_cbsHw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsHp, .-_cbsHp


==================== Asm code ====================
2018-03-16 16:06:18.121762436 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsHp_info:
	.quad	_cbsHp
	.quad	4198418
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.122484776 UTC

.section .text
.align 8
_cbsHu:
_cbsHu:
	movq 16(%rbp),%rax
	movq 40(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _cbsHV
_cbsHI:
	movq $block_cbsHA_info,(%rbp)
	movq %rax,%r14
	movq $stg_ap_ppv_info,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq $GHC.Types.False_closure+1,-8(%rbp)
	movq %rbx,144(%rbp)
	addq $-24,%rbp
	jmp GHC.IO.Device.setRaw_entry
_cbsHV:
	movq $block_cbsHO_info,(%rbp)
	movq %rax,%r14
	movq $stg_ap_ppv_info,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq $GHC.Types.True_closure+2,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.IO.Device.setRaw_entry
	.size _cbsHu, .-_cbsHu


==================== Asm code ====================
2018-03-16 16:06:18.123126687 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsHu_info:
	.quad	_cbsHu
	.quad	12587026
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.124080599 UTC

.section .text
.align 8
_cbsHO:
_cbsHO:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cbsHY
_cbsHX:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rbx
	movq 32(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 48(%rbp),%rsi
	movq 64(%rbp),%rdi
	movq 72(%rbp),%r8
	movq 80(%rbp),%r9
	movq 88(%rbp),%r10
	movq 96(%rbp),%r11
	movq 104(%rbp),%r14
	movq %rax,64(%rsp)
	movq 112(%rbp),%rax
	movq %rbx,72(%rsp)
	movq 120(%rbp),%rbx
	movq %rcx,80(%rsp)
	movq 128(%rbp),%rcx
	movq %rdx,88(%rsp)
	movq 8(%rbp),%rdx
	movq $GHC.IO.Handle.Types.BufferListNil_closure+1,8(%r9)
	subq $8,%rsp
	movq %rsi,104(%rsp)
	movq %r13,%rsi
	movq %rsi,112(%rsp)
	movq %r9,%rsi
	movq %rdi,120(%rsp)
	movq 112(%rsp),%rdi
	movq %rax,128(%rsp)
	xorl %eax,%eax
	movq %r8,136(%rsp)
	movq %r9,144(%rsp)
	movq %r10,152(%rsp)
	movq %r11,160(%rsp)
	movq %rcx,168(%rsp)
	movq %rdx,176(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.IO.Handle.Types.Handle___con_info,-128(%r12)
	movq 64(%rsp),%rax
	movq %rax,-120(%r12)
	movq 72(%rsp),%rax
	movq %rax,-112(%r12)
	movq 80(%rsp),%rax
	movq %rax,-104(%r12)
	movq 88(%rsp),%rax
	movq %rax,-96(%r12)
	movq 168(%rsp),%rax
	movq %rax,-88(%r12)
	movq 96(%rsp),%rax
	movq %rax,-80(%r12)
	movq $GHC.IO.Handle.Types.NoBuffering_closure+1,-72(%r12)
	movq 112(%rsp),%rax
	movq %rax,-64(%r12)
	movq 128(%rsp),%rax
	movq %rax,-56(%r12)
	movq 136(%rsp),%rax
	movq %rax,-48(%r12)
	movq 144(%rsp),%rax
	movq %rax,-40(%r12)
	movq 152(%rsp),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq 120(%rsp),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 160(%rsp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $152,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbsHY:
	movq $136,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbsHO, .-_cbsHO


==================== Asm code ====================
2018-03-16 16:06:18.12501024 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsHO_info:
	.quad	_cbsHO
	.quad	12587026
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.125894126 UTC

.section .text
.align 8
_cbsHA:
_cbsHA:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cbsHL
_cbsHK:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rbx
	movq 32(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 48(%rbp),%rsi
	movq 64(%rbp),%rdi
	movq 72(%rbp),%r8
	movq 80(%rbp),%r9
	movq 88(%rbp),%r10
	movq 96(%rbp),%r11
	movq 104(%rbp),%r14
	movq %rax,64(%rsp)
	movq 112(%rbp),%rax
	movq %rbx,72(%rsp)
	movq 120(%rbp),%rbx
	movq %rcx,80(%rsp)
	movq 128(%rbp),%rcx
	movq %rdx,88(%rsp)
	movq 8(%rbp),%rdx
	movq %rsi,96(%rsp)
	movq 144(%rbp),%rsi
	movq $GHC.IO.Handle.Types.BufferListNil_closure+1,8(%r9)
	subq $8,%rsp
	movq %rdi,112(%rsp)
	movq %r13,%rdi
	movq %rsi,120(%rsp)
	movq %r9,%rsi
	movq %rax,128(%rsp)
	xorl %eax,%eax
	movq %r8,136(%rsp)
	movq %r9,144(%rsp)
	movq %r10,152(%rsp)
	movq %r11,160(%rsp)
	movq %rcx,168(%rsp)
	movq %rdx,176(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.IO.Handle.Types.Handle___con_info,-128(%r12)
	movq 64(%rsp),%rax
	movq %rax,-120(%r12)
	movq 72(%rsp),%rax
	movq %rax,-112(%r12)
	movq 80(%rsp),%rax
	movq %rax,-104(%r12)
	movq 88(%rsp),%rax
	movq %rax,-96(%r12)
	movq 168(%rsp),%rax
	movq %rax,-88(%r12)
	movq 96(%rsp),%rax
	movq %rax,-80(%r12)
	movq 112(%rsp),%rax
	movq %rax,-72(%r12)
	movq 104(%rsp),%rax
	movq %rax,-64(%r12)
	movq 128(%rsp),%rax
	movq %rax,-56(%r12)
	movq 136(%rsp),%rax
	movq %rax,-48(%r12)
	movq 144(%rsp),%rax
	movq %rax,-40(%r12)
	movq 152(%rsp),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq 120(%rsp),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 160(%rsp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $152,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbsHL:
	movq $136,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbsHA, .-_cbsHA


==================== Asm code ====================
2018-03-16 16:06:18.126817565 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsHA_info:
	.quad	_cbsHA
	.quad	4198418
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.127361866 UTC

.section .data.rel.ro
.align 8
.align 1
ubsLG_srtd:
	.quad	SboCL_srt+256
	.quad	34
	.quad	16106127361


==================== Asm code ====================
2018-03-16 16:06:18.128100781 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetBuffering1_entry
.type GHC.IO.Handle.hSetBuffering1_entry, @object
GHC.IO.Handle.hSetBuffering1_entry:
_cbsLB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbsLF
_cbsLE:
	movq $sat_sbohh_info,-8(%r12)
	movq %rsi,(%r12)
	leaq -6(%r12),%rdi
	movq %r14,%rsi
	movl $GHC.IO.Handle.hSetBuffering2_closure,%r14d
	jmp GHC.IO.Handle.Internals.withAllHandles__1_entry
_cbsLF:
	movq $16,904(%r13)
	movl $GHC.IO.Handle.hSetBuffering1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hSetBuffering1_entry, .-GHC.IO.Handle.hSetBuffering1_entry


==================== Asm code ====================
2018-03-16 16:06:18.128733243 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetBuffering1_info
.type GHC.IO.Handle.hSetBuffering1_info, @object
GHC.IO.Handle.hSetBuffering1_info:
	.quad	GHC.IO.Handle.hSetBuffering1_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901903
	.quad	ubsLG_srtd


==================== Asm code ====================
2018-03-16 16:06:18.131035238 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetBuffering_closure
.type GHC.IO.Handle.hSetBuffering_closure, @object
GHC.IO.Handle.hSetBuffering_closure:
	.quad	GHC.IO.Handle.hSetBuffering_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.131652927 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetBuffering_entry
.type GHC.IO.Handle.hSetBuffering_entry, @object
GHC.IO.Handle.hSetBuffering_entry:
_cbsNO:
	jmp GHC.IO.Handle.hSetBuffering1_entry
	.size GHC.IO.Handle.hSetBuffering_entry, .-GHC.IO.Handle.hSetBuffering_entry


==================== Asm code ====================
2018-03-16 16:06:18.132254258 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetBuffering_info
.type GHC.IO.Handle.hSetBuffering_info, @object
GHC.IO.Handle.hSetBuffering_info:
	.quad	GHC.IO.Handle.hSetBuffering_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SboCL_srt+512


==================== Asm code ====================
2018-03-16 16:06:18.134191736 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hIsEOF4_bytes
.type GHC.IO.Handle.hIsEOF4_bytes, @object
GHC.IO.Handle.hIsEOF4_bytes:
	.asciz "hIsEOF"


==================== Asm code ====================
2018-03-16 16:06:18.136622627 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsEOF3_closure
.type GHC.IO.Handle.hIsEOF3_closure, @object
GHC.IO.Handle.hIsEOF3_closure:
	.quad	GHC.IO.Handle.hIsEOF3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.13747402 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsEOF3_entry
.type GHC.IO.Handle.hIsEOF3_entry, @object
GHC.IO.Handle.hIsEOF3_entry:
_cbsO2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsO3
_cbsO4:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbsO1
_cbsO0:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.hIsEOF4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbsO3:
	jmp *-16(%r13)
_cbsO1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hIsEOF3_entry, .-GHC.IO.Handle.hIsEOF3_entry


==================== Asm code ====================
2018-03-16 16:06:18.138151141 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsEOF3_info
.type GHC.IO.Handle.hIsEOF3_info, @object
GHC.IO.Handle.hIsEOF3_info:
	.quad	GHC.IO.Handle.hIsEOF3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:18.143940221 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsEOF2_closure
.type GHC.IO.Handle.hIsEOF2_closure, @object
GHC.IO.Handle.hIsEOF2_closure:
	.quad	GHC.IO.Handle.hIsEOF2_info


==================== Asm code ====================
2018-03-16 16:06:18.144683789 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsEOF2_entry
.type GHC.IO.Handle.hIsEOF2_entry, @object
GHC.IO.Handle.hIsEOF2_entry:
_cbsOj:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsOn
_cbsOo:
	movq $block_cbsOg_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbsOg
_cbsOh:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsOn:
	movl $GHC.IO.Handle.hIsEOF2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsEOF2_entry, .-GHC.IO.Handle.hIsEOF2_entry


==================== Asm code ====================
2018-03-16 16:06:18.145340048 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsEOF2_info
.type GHC.IO.Handle.hIsEOF2_info, @object
GHC.IO.Handle.hIsEOF2_info:
	.quad	GHC.IO.Handle.hIsEOF2_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:06:18.1460553 UTC

.section .text
.align 8
_cbsOg:
_cbsOg:
	movq 71(%rbx),%rax
	movq 8(%rax),%rax
	movq $block_cbsOm_info,-24(%rbp)
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 47(%rbx),%rbx
	movq %rbx,%rsi
	movq %rax,%rbx
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	movq %rcx,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbsOm
_cbsOq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsOg, .-_cbsOg


==================== Asm code ====================
2018-03-16 16:06:18.14668431 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsOg_info:
	.quad	_cbsOg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.147398565 UTC

.section .text
.align 8
_cbsOm:
_cbsOm:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cbsOC
_ubsPc:
	addq $32,%rbp
	jmp _cbsOL
_cbsOC:
	movq 16(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbsOB_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbsOB
_cbsOD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsOm, .-_cbsOm


==================== Asm code ====================
2018-03-16 16:06:18.148036222 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsOm_info:
	.quad	_cbsOm
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.148720749 UTC

.section .text
.align 8
_cbsOB:
_cbsOB:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cbsOW
_ubsPd:
	addq $32,%rbp
	jmp _cbsOL
_cbsOW:
	movq 8(%rbp),%rax
	movq $block_cbsOO_info,8(%rbp)
	movq 24(%rbp),%r14
	movq $stg_ap_ppv_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.BufferedIO.fillReadBuffer_entry
	.size _cbsOB, .-_cbsOB


==================== Asm code ====================
2018-03-16 16:06:18.149705292 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsOB_info:
	.quad	_cbsOB
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.150328822 UTC

.section .text
.align 8
_cbsOO:
_cbsOO:
	movq $block_cbsOQ_info,(%rbp)
	testb $7,%bl
	jne _cbsOQ
_cbsOR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsOO, .-_cbsOO


==================== Asm code ====================
2018-03-16 16:06:18.150893098 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsOO_info:
	.quad	_cbsOO
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.151570539 UTC

.section .text
.align 8
_cbsOQ:
_cbsOQ:
	movq $block_cbsOV_info,(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cbsOV
_cbsOZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsOQ, .-_cbsOQ


==================== Asm code ====================
2018-03-16 16:06:18.152150763 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsOQ_info:
	.quad	_cbsOQ
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.152915178 UTC

.section .text
.align 8
_cbsOV:
_cbsOV:
	cmpq $0,7(%rbx)
	je _cbsP7
_cbsP6:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Types.False_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbsP7:
	movl $GHC.Types.True_closure+2,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbsOV, .-_cbsOV


==================== Asm code ====================
2018-03-16 16:06:18.153591735 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsOV_info:
	.quad	_cbsOV
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.154211426 UTC

.section .text
.align 8
_cbsOL:
_cbsOL:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbsOL, .-_cbsOL


==================== Asm code ====================
2018-03-16 16:06:18.157034918 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsEOF1_closure
.type GHC.IO.Handle.hIsEOF1_closure, @object
GHC.IO.Handle.hIsEOF1_closure:
	.quad	GHC.IO.Handle.hIsEOF1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.157667278 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsEOF1_entry
.type GHC.IO.Handle.hIsEOF1_entry, @object
GHC.IO.Handle.hIsEOF1_entry:
_cbsQ1:
	movl $GHC.IO.Handle.hIsEOF2_closure+2,%edi
	movq %r14,%rsi
	movl $GHC.IO.Handle.hIsEOF3_closure,%r14d
	jmp GHC.IO.Handle.Internals.wantReadableHandle_1_entry
	.size GHC.IO.Handle.hIsEOF1_entry, .-GHC.IO.Handle.hIsEOF1_entry


==================== Asm code ====================
2018-03-16 16:06:18.158245154 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsEOF1_info
.type GHC.IO.Handle.hIsEOF1_info, @object
GHC.IO.Handle.hIsEOF1_info:
	.quad	GHC.IO.Handle.hIsEOF1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	SboCL_srt+528


==================== Asm code ====================
2018-03-16 16:06:18.160300421 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsEOF_closure
.type GHC.IO.Handle.hIsEOF_closure, @object
GHC.IO.Handle.hIsEOF_closure:
	.quad	GHC.IO.Handle.hIsEOF_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.160889759 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsEOF_entry
.type GHC.IO.Handle.hIsEOF_entry, @object
GHC.IO.Handle.hIsEOF_entry:
_cbsQc:
	jmp GHC.IO.Handle.hIsEOF1_entry
	.size GHC.IO.Handle.hIsEOF_entry, .-GHC.IO.Handle.hIsEOF_entry


==================== Asm code ====================
2018-03-16 16:06:18.161513392 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsEOF_info
.type GHC.IO.Handle.hIsEOF_info, @object
GHC.IO.Handle.hIsEOF_info:
	.quad	GHC.IO.Handle.hIsEOF_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SboCL_srt+544


==================== Asm code ====================
2018-03-16 16:06:18.163570029 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.isEOF1_closure
.type GHC.IO.Handle.isEOF1_closure, @object
GHC.IO.Handle.isEOF1_closure:
	.quad	GHC.IO.Handle.isEOF1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.164219504 UTC

.section .text
.align 8
.globl GHC.IO.Handle.isEOF1_entry
.type GHC.IO.Handle.isEOF1_entry, @object
GHC.IO.Handle.isEOF1_entry:
_cbsQn:
	movl $GHC.IO.Handle.hIsEOF2_closure+2,%edi
	movl $GHC.IO.Handle.FD.stdin_closure,%esi
	movl $GHC.IO.Handle.hIsEOF3_closure,%r14d
	jmp GHC.IO.Handle.Internals.wantReadableHandle_1_entry
	.size GHC.IO.Handle.isEOF1_entry, .-GHC.IO.Handle.isEOF1_entry


==================== Asm code ====================
2018-03-16 16:06:18.164793396 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.isEOF1_info
.type GHC.IO.Handle.isEOF1_info, @object
GHC.IO.Handle.isEOF1_info:
	.quad	GHC.IO.Handle.isEOF1_entry
	.quad	0
	.quad	47244640270
	.quad	4294967299
	.quad	SboCL_srt+528


==================== Asm code ====================
2018-03-16 16:06:18.167006625 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.isEOF_closure
.type GHC.IO.Handle.isEOF_closure, @object
GHC.IO.Handle.isEOF_closure:
	.quad	GHC.IO.Handle.isEOF_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.167536949 UTC

.section .text
.align 8
.globl GHC.IO.Handle.isEOF_entry
.type GHC.IO.Handle.isEOF_entry, @object
GHC.IO.Handle.isEOF_entry:
_cbsQy:
	jmp GHC.IO.Handle.isEOF1_entry
	.size GHC.IO.Handle.isEOF_entry, .-GHC.IO.Handle.isEOF_entry


==================== Asm code ====================
2018-03-16 16:06:18.168130602 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.isEOF_info
.type GHC.IO.Handle.isEOF_info, @object
GHC.IO.Handle.isEOF_info:
	.quad	GHC.IO.Handle.isEOF_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	SboCL_srt+560


==================== Asm code ====================
2018-03-16 16:06:18.169803309 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl19_rbnX1_bytes:
	.asciz "hSetFileSize"


==================== Asm code ====================
2018-03-16 16:06:18.172195735 UTC

.section .data
.align 8
.align 1
lvl20_rbnX2_closure:
	.quad	lvl20_rbnX2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.173005272 UTC

.section .text
.align 8
lvl20_rbnX2_entry:
_cbsQM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsQN
_cbsQO:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbsQL
_cbsQK:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl19_rbnX1_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbsQN:
	jmp *-16(%r13)
_cbsQL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl20_rbnX2_entry, .-lvl20_rbnX2_entry


==================== Asm code ====================
2018-03-16 16:06:18.173891406 UTC

.section .data.rel.ro
.align 8
.align 1
lvl20_rbnX2_info:
	.quad	lvl20_rbnX2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:18.19033235 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetFileSize1_closure
.type GHC.IO.Handle.hSetFileSize1_closure, @object
GHC.IO.Handle.hSetFileSize1_closure:
	.quad	GHC.IO.Handle.hSetFileSize1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.191137532 UTC

.section .text
.align 8
act_sboib_entry:
_cbsR8:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsR9
_cbsRa:
	movq $block_cbsR5_info,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbsR5
_cbsR6:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsR9:
	jmp *-8(%r13)
	.size act_sboib_entry, .-act_sboib_entry


==================== Asm code ====================
2018-03-16 16:06:18.191772403 UTC

.section .data.rel.ro
.align 8
.align 1
act_sboib_info:
	.quad	act_sboib_entry
	.quad	1
	.quad	18014402804449289
	.quad	8589934597
	.quad	SboCL_srt+328


==================== Asm code ====================
2018-03-16 16:06:18.192509137 UTC

.section .text
.align 8
_cbsR5:
_cbsR5:
	movq $block_cbsRd_info,-32(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 39(%rbx),%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	movq %rax,(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbsRd
_cbsRf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsR5, .-_cbsR5


==================== Asm code ====================
2018-03-16 16:06:18.193146589 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsR5_info:
	.quad	_cbsR5
	.quad	1
	.quad	18014402804449310
	.quad	SboCL_srt+328


==================== Asm code ====================
2018-03-16 16:06:18.193922016 UTC

.section .text
.align 8
_cbsRd:
_cbsRd:
	andl $7,%ebx
	cmpq $1,%rbx
	jne _ubsSg
_cbsS9:
	addq $48,%rbp
	jmp GHC.IO.Handle.Internals.ioe_closedHandle1_entry
_ubsSg:
	cmpq $2,%rbx
	jne _cbsRm
_cbsSd:
	addq $48,%rbp
	jmp GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry
_cbsRm:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbsRj_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbsRj
_cbsRn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsRd, .-_cbsRd


==================== Asm code ====================
2018-03-16 16:06:18.194570058 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsRd_info:
	.quad	_cbsRd
	.quad	5
	.quad	18014402804449310
	.quad	SboCL_srt+328


==================== Asm code ====================
2018-03-16 16:06:18.195188147 UTC

.section .text
.align 8
_cbsRj:
_cbsRj:
	movq $block_cbsRr_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _cbsRr
_cbsRt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsRj, .-_cbsRj


==================== Asm code ====================
2018-03-16 16:06:18.195771694 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsRj_info:
	.quad	_cbsRj
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.196514105 UTC

.section .text
.align 8
_cbsRr:
_cbsRr:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbsRA
_cbsRH:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbsRF_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbsRF
_cbsRI:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsRA:
	movq 40(%rbp),%rax
	movq $block_cbsRx_info,40(%rbp)
	movq 32(%rbp),%r14
	movq 16(%rbp),%rbx
	movq $stg_ap_ppv_info,16(%rbp)
	movq %rbx,24(%rbp)
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.IO.Device.setSize_entry
	.size _cbsRr, .-_cbsRr


==================== Asm code ====================
2018-03-16 16:06:18.197168005 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsRr_info:
	.quad	_cbsRr
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.197822241 UTC

.section .text
.align 8
_cbsRx:
_cbsRx:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbsRx, .-_cbsRx


==================== Asm code ====================
2018-03-16 16:06:18.198408375 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsRx_info:
	.quad	_cbsRx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.199831763 UTC

.section .text
.align 8
_cbsRF:
_cbsRF:
	movq 16(%rbp),%rax
	movq 39(%rbx),%rcx
	cmpq 47(%rbx),%rcx
	je _cbsS3
_cbsRX:
	movq 8(%rbp),%rcx
	movq $block_cbsRQ_info,8(%rbp)
	movq %rcx,%r14
	movq $stg_ap_ppv_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.BufferedIO.flushWriteBuffer_entry
_cbsS3:
	movq 40(%rbp),%rcx
	movq $block_cbsS2_info,40(%rbp)
	movq 32(%rbp),%r14
	movq $stg_ap_ppv_info,16(%rbp)
	movq %rax,24(%rbp)
	movq %rcx,32(%rbp)
	addq $16,%rbp
	jmp GHC.IO.Device.setSize_entry
	.size _cbsRF, .-_cbsRF


==================== Asm code ====================
2018-03-16 16:06:18.200583092 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsRF_info:
	.quad	_cbsRF
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.201187382 UTC

.section .text
.align 8
_cbsS2:
_cbsS2:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbsS2, .-_cbsS2


==================== Asm code ====================
2018-03-16 16:06:18.201866463 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsS2_info:
	.quad	_cbsS2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.202653759 UTC

.section .text
.align 8
_cbsRQ:
_cbsRQ:
	movq 32(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq 16(%rbp),%rsi
	movq %rbx,8(%rsi)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cbsRV_info,32(%rbp)
	movq $stg_ap_ppv_info,8(%rbp)
	movq 64(%rsp),%rax
	movq %rax,16(%rbp)
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp GHC.IO.Device.setSize_entry
	.size _cbsRQ, .-_cbsRQ


==================== Asm code ====================
2018-03-16 16:06:18.203283187 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsRQ_info:
	.quad	_cbsRQ
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.203907239 UTC

.section .text
.align 8
_cbsRV:
_cbsRV:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbsRV, .-_cbsRV


==================== Asm code ====================
2018-03-16 16:06:18.204477031 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsRV_info:
	.quad	_cbsRV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.205172594 UTC

.section .text
.align 8
sat_sbojj_entry:
_cbsSG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsSH
_cbsSI:
	movq $block_cbsSD_info,-16(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp act_sboib_entry
_cbsSH:
	jmp *-8(%r13)
	.size sat_sbojj_entry, .-sat_sbojj_entry


==================== Asm code ====================
2018-03-16 16:06:18.205804915 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbojj_info:
	.quad	sat_sbojj_entry
	.quad	1
	.quad	18014402804449289
	.quad	8589934597
	.quad	SboCL_srt+328


==================== Asm code ====================
2018-03-16 16:06:18.20647974 UTC

.section .text
.align 8
_cbsSD:
_cbsSD:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbsSL
_cbsSK:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbsSL:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbsSD, .-_cbsSD


==================== Asm code ====================
2018-03-16 16:06:18.207098501 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsSD_info:
	.quad	_cbsSD
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.207889858 UTC

.section .text
.align 8
io_sbojb_entry:
_cbsSR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsSV
_cbsSW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbsSY
_cbsSX:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq $sat_sbojj_info,-8(%r12)
	movq %rax,(%r12)
	movq $block_cbsSM_info,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rcx,%rsi
	movl $lvl20_rbnX2_closure,%r14d
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbsSY:
	movq $16,904(%r13)
_cbsSV:
	jmp *-8(%r13)
	.size io_sbojb_entry, .-io_sbojb_entry


==================== Asm code ====================
2018-03-16 16:06:18.208624631 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbojb_info:
	.quad	io_sbojb_entry
	.quad	3
	.quad	4629981896208547848
	.quad	4294967299
	.quad	SboCL_srt+328


==================== Asm code ====================
2018-03-16 16:06:18.209349799 UTC

.section .text
.align 8
_cbsSM:
_cbsSM:
	movq $block_cbsSO_info,(%rbp)
	testb $7,%bl
	jne _cbsSO
_cbsSP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsSM, .-_cbsSM


==================== Asm code ====================
2018-03-16 16:06:18.20993906 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsSM_info:
	.quad	_cbsSM
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.210560009 UTC

.section .text
.align 8
_cbsSO:
_cbsSO:
	movq $block_cbsSU_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbsSO, .-_cbsSO


==================== Asm code ====================
2018-03-16 16:06:18.211170712 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsSO_info:
	.quad	_cbsSO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.211814178 UTC

.section .text
.align 8
_cbsSU:
_cbsSU:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbsSU, .-_cbsSU


==================== Asm code ====================
2018-03-16 16:06:18.212402505 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsSU_info:
	.quad	_cbsSU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.213081636 UTC

.section .text
.align 8
sat_sbojG_entry:
_cbsTl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsTm
_cbsTn:
	movq $block_cbsTi_info,-16(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp act_sboib_entry
_cbsTm:
	jmp *-8(%r13)
	.size sat_sbojG_entry, .-sat_sbojG_entry


==================== Asm code ====================
2018-03-16 16:06:18.213694464 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbojG_info:
	.quad	sat_sbojG_entry
	.quad	1
	.quad	18014402804449289
	.quad	8589934597
	.quad	SboCL_srt+328


==================== Asm code ====================
2018-03-16 16:06:18.214355807 UTC

.section .text
.align 8
_cbsTi:
_cbsTi:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbsTq
_cbsTp:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbsTq:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbsTi, .-_cbsTi


==================== Asm code ====================
2018-03-16 16:06:18.214970114 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsTi_info:
	.quad	_cbsTi
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.215744964 UTC

.section .text
.align 8
io_sbojy_entry:
_cbsTw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsTA
_cbsTB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbsTD
_cbsTC:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq $sat_sbojG_info,-8(%r12)
	movq %rax,(%r12)
	movq $block_cbsTr_info,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rcx,%rsi
	movl $lvl20_rbnX2_closure,%r14d
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbsTD:
	movq $16,904(%r13)
_cbsTA:
	jmp *-8(%r13)
	.size io_sbojy_entry, .-io_sbojy_entry


==================== Asm code ====================
2018-03-16 16:06:18.21646205 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbojy_info:
	.quad	io_sbojy_entry
	.quad	3
	.quad	4629981896208547848
	.quad	4294967299
	.quad	SboCL_srt+328


==================== Asm code ====================
2018-03-16 16:06:18.217120395 UTC

.section .text
.align 8
_cbsTr:
_cbsTr:
	movq $block_cbsTt_info,(%rbp)
	testb $7,%bl
	jne _cbsTt
_cbsTu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsTr, .-_cbsTr


==================== Asm code ====================
2018-03-16 16:06:18.218027512 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsTr_info:
	.quad	_cbsTr
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.218668881 UTC

.section .text
.align 8
_cbsTt:
_cbsTt:
	movq $block_cbsTz_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbsTt, .-_cbsTt


==================== Asm code ====================
2018-03-16 16:06:18.21922645 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsTt_info:
	.quad	_cbsTt
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.219809817 UTC

.section .text
.align 8
_cbsTz:
_cbsTz:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbsTz, .-_cbsTz


==================== Asm code ====================
2018-03-16 16:06:18.220388217 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsTz_info:
	.quad	_cbsTz
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.221217083 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetFileSize1_entry
.type GHC.IO.Handle.hSetFileSize1_entry, @object
GHC.IO.Handle.hSetFileSize1_entry:
_cbsTN:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsTO
_cbsTP:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbsTR
_cbsTQ:
	movq $act_sboib_info,-8(%r12)
	movq %rsi,(%r12)
	movq $block_cbsSm_info,-16(%rbp)
	movq %r14,%rbx
	leaq -6(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbsSm
_cbsSn:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsTR:
	movq $16,904(%r13)
_cbsTO:
	movl $GHC.IO.Handle.hSetFileSize1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hSetFileSize1_entry, .-GHC.IO.Handle.hSetFileSize1_entry


==================== Asm code ====================
2018-03-16 16:06:18.221961319 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetFileSize1_info
.type GHC.IO.Handle.hSetFileSize1_info, @object
GHC.IO.Handle.hSetFileSize1_info:
	.quad	GHC.IO.Handle.hSetFileSize1_entry
	.quad	0
	.quad	-4593390140646227954
	.quad	12884901903
	.quad	SboCL_srt+328


==================== Asm code ====================
2018-03-16 16:06:18.222711787 UTC

.section .text
.align 8
_cbsSm:
_cbsSm:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbsTK
_cbsTL:
	movq $block_cbsT6_info,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
_cbsTK:
	movq $block_cbsSr_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
	.size _cbsSm, .-_cbsSm


==================== Asm code ====================
2018-03-16 16:06:18.223354109 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsSm_info:
	.quad	_cbsSm
	.quad	1
	.quad	4629981896208547870
	.quad	SboCL_srt+328


==================== Asm code ====================
2018-03-16 16:06:18.22410388 UTC

.section .text
.align 8
_cbsSr:
_cbsSr:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbsTV
_cbsTU:
	movq $io_sbojb_info,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rax
	testq %rbx,%rbx
	je _cbsTZ
_cbsTY:
	movq %rax,%rbx
	addq $32,%rbp
	jmp io_sbojb_entry
_cbsTZ:
	movq %rax,%rbx
	addq $32,%rbp
	jmp stg_maskAsyncExceptions#
_cbsTV:
	movq $32,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbsSr, .-_cbsSr


==================== Asm code ====================
2018-03-16 16:06:18.22477672 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsSr_info:
	.quad	_cbsSr
	.quad	3
	.quad	4629981896208547870
	.quad	SboCL_srt+328


==================== Asm code ====================
2018-03-16 16:06:18.225529418 UTC

.section .text
.align 8
_cbsT6:
_cbsT6:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbsU3
_cbsU2:
	movq $io_sbojy_info,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rax
	testq %rbx,%rbx
	je _cbsU7
_cbsU6:
	movq %rax,%rbx
	addq $32,%rbp
	jmp io_sbojy_entry
_cbsU7:
	movq %rax,%rbx
	addq $32,%rbp
	jmp stg_maskAsyncExceptions#
_cbsU3:
	movq $32,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbsT6, .-_cbsT6


==================== Asm code ====================
2018-03-16 16:06:18.226211108 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsT6_info:
	.quad	_cbsT6
	.quad	3
	.quad	4629981896208547870
	.quad	SboCL_srt+328


==================== Asm code ====================
2018-03-16 16:06:18.228460763 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetFileSize_closure
.type GHC.IO.Handle.hSetFileSize_closure, @object
GHC.IO.Handle.hSetFileSize_closure:
	.quad	GHC.IO.Handle.hSetFileSize_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.230053844 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetFileSize_entry
.type GHC.IO.Handle.hSetFileSize_entry, @object
GHC.IO.Handle.hSetFileSize_entry:
_cbsW9:
	jmp GHC.IO.Handle.hSetFileSize1_entry
	.size GHC.IO.Handle.hSetFileSize_entry, .-GHC.IO.Handle.hSetFileSize_entry


==================== Asm code ====================
2018-03-16 16:06:18.230645331 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetFileSize_info
.type GHC.IO.Handle.hSetFileSize_info, @object
GHC.IO.Handle.hSetFileSize_info:
	.quad	GHC.IO.Handle.hSetFileSize_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SboCL_srt+576


==================== Asm code ====================
2018-03-16 16:06:18.232276956 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hFileSize9_bytes
.type GHC.IO.Handle.hFileSize9_bytes, @object
GHC.IO.Handle.hFileSize9_bytes:
	.asciz "hFileSize"


==================== Asm code ====================
2018-03-16 16:06:18.234748087 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize8_closure
.type GHC.IO.Handle.hFileSize8_closure, @object
GHC.IO.Handle.hFileSize8_closure:
	.quad	GHC.IO.Handle.hFileSize8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.235562216 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFileSize8_entry
.type GHC.IO.Handle.hFileSize8_entry, @object
GHC.IO.Handle.hFileSize8_entry:
_cbsWn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsWo
_cbsWp:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbsWm
_cbsWl:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.hFileSize9_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbsWo:
	jmp *-16(%r13)
_cbsWm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hFileSize8_entry, .-GHC.IO.Handle.hFileSize8_entry


==================== Asm code ====================
2018-03-16 16:06:18.23619441 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize8_info
.type GHC.IO.Handle.hFileSize8_info, @object
GHC.IO.Handle.hFileSize8_info:
	.quad	GHC.IO.Handle.hFileSize8_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:18.238070384 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hFileSize7_bytes
.type GHC.IO.Handle.hFileSize7_bytes, @object
GHC.IO.Handle.hFileSize7_bytes:
	.asciz "not a regular file"


==================== Asm code ====================
2018-03-16 16:06:18.240492643 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize6_closure
.type GHC.IO.Handle.hFileSize6_closure, @object
GHC.IO.Handle.hFileSize6_closure:
	.quad	GHC.IO.Handle.hFileSize6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.241322386 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFileSize6_entry
.type GHC.IO.Handle.hFileSize6_entry, @object
GHC.IO.Handle.hFileSize6_entry:
_cbsWE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsWF
_cbsWG:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbsWD
_cbsWC:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.hFileSize7_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbsWF:
	jmp *-16(%r13)
_cbsWD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hFileSize6_entry, .-GHC.IO.Handle.hFileSize6_entry


==================== Asm code ====================
2018-03-16 16:06:18.241986643 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize6_info
.type GHC.IO.Handle.hFileSize6_info, @object
GHC.IO.Handle.hFileSize6_info:
	.quad	GHC.IO.Handle.hFileSize6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:18.243698635 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize5_closure
.type GHC.IO.Handle.hFileSize5_closure, @object
GHC.IO.Handle.hFileSize5_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.InappropriateType_closure+1
	.quad	GHC.IO.Handle.hFileSize8_closure
	.quad	GHC.IO.Handle.hFileSize6_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.246168766 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize4_closure
.type GHC.IO.Handle.hFileSize4_closure, @object
GHC.IO.Handle.hFileSize4_closure:
	.quad	GHC.IO.Handle.hFileSize4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.246937025 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFileSize4_entry
.type GHC.IO.Handle.hFileSize4_entry, @object
GHC.IO.Handle.hFileSize4_entry:
_cbsWV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsWW
_cbsWX:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbsWU
_cbsWT:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.hFileSize5_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_cbsWW:
	jmp *-16(%r13)
_cbsWU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hFileSize4_entry, .-GHC.IO.Handle.hFileSize4_entry


==================== Asm code ====================
2018-03-16 16:06:18.247574199 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize4_info
.type GHC.IO.Handle.hFileSize4_info, @object
GHC.IO.Handle.hFileSize4_info:
	.quad	GHC.IO.Handle.hFileSize4_entry
	.quad	0
	.quad	12884901909
	.quad	SboCL_srt+584


==================== Asm code ====================
2018-03-16 16:06:18.249235127 UTC

.section .data
.align 8
.align 1
sat_sbojP_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 16:06:18.250861595 UTC

.section .data
.align 8
.align 1
sat_sbojQ_closure:
	.quad	:_con_info
	.quad	sat_sbojP_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.253692843 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize10_closure
.type GHC.IO.Handle.hFileSize10_closure, @object
GHC.IO.Handle.hFileSize10_closure:
	.quad	GHC.IO.Handle.hFileSize10_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.25454615 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFileSize10_entry
.type GHC.IO.Handle.hFileSize10_entry, @object
GHC.IO.Handle.hFileSize10_entry:
_cbsXd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsXe
_cbsXf:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbsXc
_cbsXb:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $sat_sbojQ_closure+2,%esi
	movl $GHC.Types.False_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_cbsXe:
	jmp *-16(%r13)
_cbsXc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hFileSize10_entry, .-GHC.IO.Handle.hFileSize10_entry


==================== Asm code ====================
2018-03-16 16:06:18.255215639 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize10_info
.type GHC.IO.Handle.hFileSize10_info, @object
GHC.IO.Handle.hFileSize10_info:
	.quad	GHC.IO.Handle.hFileSize10_entry
	.quad	0
	.quad	4294967317
	.quad	SboCL_srt+600


==================== Asm code ====================
2018-03-16 16:06:18.262331212 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize3_closure
.type GHC.IO.Handle.hFileSize3_closure, @object
GHC.IO.Handle.hFileSize3_closure:
	.quad	GHC.IO.Handle.hFileSize3_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.262869423 UTC

.section .data.rel.ro
.align 8
.align 1
ubsYY_srtd:
	.quad	SboCL_srt+328
	.quad	38
	.quad	240522362881


==================== Asm code ====================
2018-03-16 16:06:18.263621259 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFileSize3_entry
.type GHC.IO.Handle.hFileSize3_entry, @object
GHC.IO.Handle.hFileSize3_entry:
_cbsXu:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsXv
_cbsXw:
	movq $block_cbsXr_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbsXr
_cbsXs:
	movq (%rbx),%rax
	jmp *(%rax)
_cbsXv:
	movl $GHC.IO.Handle.hFileSize3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hFileSize3_entry, .-GHC.IO.Handle.hFileSize3_entry


==================== Asm code ====================
2018-03-16 16:06:18.264269537 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize3_info
.type GHC.IO.Handle.hFileSize3_info, @object
GHC.IO.Handle.hFileSize3_info:
	.quad	GHC.IO.Handle.hFileSize3_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934597
	.quad	ubsYY_srtd


==================== Asm code ====================
2018-03-16 16:06:18.265871834 UTC

.section .data.rel.ro
.align 8
.align 1
ubsYZ_srtd:
	.quad	SboCL_srt+328
	.quad	38
	.quad	206162624513


==================== Asm code ====================
2018-03-16 16:06:18.266582555 UTC

.section .text
.align 8
_cbsXr:
_cbsXr:
	movq $block_cbsXz_info,-32(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 39(%rbx),%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	movq %rax,(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbsXz
_cbsXB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsXr, .-_cbsXr


==================== Asm code ====================
2018-03-16 16:06:18.267179145 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsXr_info:
	.quad	_cbsXr
	.quad	0
	.quad	-4294967266
	.quad	ubsYZ_srtd


==================== Asm code ====================
2018-03-16 16:06:18.267707406 UTC

.section .data.rel.ro
.align 8
.align 1
ubsZ0_srtd:
	.quad	SboCL_srt+328
	.quad	38
	.quad	206162624513


==================== Asm code ====================
2018-03-16 16:06:18.268437885 UTC

.section .text
.align 8
_cbsXz:
_cbsXz:
	andl $7,%ebx
	cmpq $1,%rbx
	jne _ubsYM
_cbsYC:
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.ioe_closedHandle1_entry
_ubsYM:
	cmpq $2,%rbx
	jne _cbsXI
_cbsYG:
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry
_cbsXI:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbsXF_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbsXF
_cbsXJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsXz, .-_cbsXz


==================== Asm code ====================
2018-03-16 16:06:18.269086022 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsXz_info:
	.quad	_cbsXz
	.quad	4
	.quad	-4294967266
	.quad	ubsZ0_srtd


==================== Asm code ====================
2018-03-16 16:06:18.269771397 UTC

.section .text
.align 8
_cbsXF:
_cbsXF:
	movq $block_cbsXP_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _cbsXP
_cbsY9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbsXF, .-_cbsXF


==================== Asm code ====================
2018-03-16 16:06:18.270354754 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsXF_info:
	.quad	_cbsXF
	.quad	4
	.quad	12884901918
	.quad	SboCL_srt+616


==================== Asm code ====================
2018-03-16 16:06:18.271063088 UTC

.section .text
.align 8
_cbsXP:
_cbsXP:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ubsYN
_cbsYk:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbsYi_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbsYi
_cbsYl:
	movq (%rbx),%rax
	jmp *(%rax)
_ubsYN:
	addq $16,%rbp
	jmp _sbokl
	.size _cbsXP, .-_cbsXP


==================== Asm code ====================
2018-03-16 16:06:18.271686075 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsXP_info:
	.quad	_cbsXP
	.quad	4
	.quad	12884901918
	.quad	SboCL_srt+616


==================== Asm code ====================
2018-03-16 16:06:18.272410674 UTC

.section .text
.align 8
_cbsYi:
_cbsYi:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _ubsYO
_cbsYv:
	movq 8(%rbp),%rax
	movq $block_cbsYt_info,8(%rbp)
	movq %rax,%r14
	movq $stg_ap_ppv_info,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.BufferedIO.flushWriteBuffer_entry
_ubsYO:
	addq $16,%rbp
	jmp _sbokl
	.size _cbsYi, .-_cbsYi


==================== Asm code ====================
2018-03-16 16:06:18.273093858 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsYi_info:
	.quad	_cbsYi
	.quad	4
	.quad	12884901918
	.quad	SboCL_srt+616


==================== Asm code ====================
2018-03-16 16:06:18.273822334 UTC

.section .text
.align 8
_cbsYt:
_cbsYt:
	movq 16(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $8,%rbp
	jmp _sbokl
	.size _cbsYt, .-_cbsYt


==================== Asm code ====================
2018-03-16 16:06:18.274413223 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsYt_info:
	.quad	_cbsYt
	.quad	3
	.quad	12884901918
	.quad	SboCL_srt+616


==================== Asm code ====================
2018-03-16 16:06:18.275063874 UTC

.section .text
.align 8
_sbokl:
_sbokl:
	movq 16(%rbp),%rax
	movq $block_cbsXU_info,16(%rbp)
	movq %rax,%r14
	movq (%rbp),%rax
	movq $stg_ap_pv_info,(%rbp)
	movq %rax,8(%rbp)
	jmp GHC.IO.Device.getSize_entry
	.size _sbokl, .-_sbokl


==================== Asm code ====================
2018-03-16 16:06:18.275755896 UTC

.section .text
.align 8
_cbsXU:
_cbsXU:
	movq $block_cbsXW_info,-8(%rbp)
	movl $GHC.IO.Handle.hFileSize10_closure,%esi
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.neqInteger#_entry
	.size _cbsXU, .-_cbsXU


==================== Asm code ====================
2018-03-16 16:06:18.276329706 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsXU_info:
	.quad	_cbsXU
	.quad	0
	.quad	12884901918
	.quad	SboCL_srt+616


==================== Asm code ====================
2018-03-16 16:06:18.277063012 UTC

.section .text
.align 8
_cbsXW:
_cbsXW:
	cmpq $1,%rbx
	je _cbsY8
_cbsY4:
	movl $GHC.IO.Handle.hFileSize4_closure,%ebx
	addq $16,%rbp
	jmp stg_raiseIO#
_cbsY8:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbsXW, .-_cbsXW


==================== Asm code ====================
2018-03-16 16:06:18.277883057 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsXW_info:
	.quad	_cbsXW
	.quad	1
	.quad	4294967326
	.quad	SboCL_srt+616


==================== Asm code ====================
2018-03-16 16:06:18.280924023 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize2_closure
.type GHC.IO.Handle.hFileSize2_closure, @object
GHC.IO.Handle.hFileSize2_closure:
	.quad	GHC.IO.Handle.hFileSize2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.281651628 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFileSize2_entry
.type GHC.IO.Handle.hFileSize2_entry, @object
GHC.IO.Handle.hFileSize2_entry:
_cbsZU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbsZV
_cbsZW:
	movq $block_cbsZR_info,-16(%rbp)
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.hFileSize3_entry
_cbsZV:
	movl $GHC.IO.Handle.hFileSize2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hFileSize2_entry, .-GHC.IO.Handle.hFileSize2_entry


==================== Asm code ====================
2018-03-16 16:06:18.282292687 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize2_info
.type GHC.IO.Handle.hFileSize2_info, @object
GHC.IO.Handle.hFileSize2_info:
	.quad	GHC.IO.Handle.hFileSize2_entry
	.quad	0
	.quad	38654705678
	.quad	8589934597
	.quad	SboCL_srt+608


==================== Asm code ====================
2018-03-16 16:06:18.283029131 UTC

.section .text
.align 8
_cbsZR:
_cbsZR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbsZZ
_cbsZY:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbsZZ:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbsZR, .-_cbsZR


==================== Asm code ====================
2018-03-16 16:06:18.283644889 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbsZR_info:
	.quad	_cbsZR
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.29165802 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize1_closure
.type GHC.IO.Handle.hFileSize1_closure, @object
GHC.IO.Handle.hFileSize1_closure:
	.quad	GHC.IO.Handle.hFileSize1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.292386832 UTC

.section .text
.align 8
io_sbokV_entry:
_cbt0v:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbt0z
_cbt0A:
	movq $block_cbt0q_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movl $GHC.IO.Handle.hFileSize2_closure+2,%edi
	movq 7(%rbx),%rsi
	movl $GHC.IO.Handle.hFileSize8_closure,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbt0z:
	jmp *-8(%r13)
	.size io_sbokV_entry, .-io_sbokV_entry


==================== Asm code ====================
2018-03-16 16:06:18.293028737 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbokV_info:
	.quad	io_sbokV_entry
	.quad	2
	.quad	54043199823413259
	.quad	4294967299
	.quad	SboCL_srt+456


==================== Asm code ====================
2018-03-16 16:06:18.293751634 UTC

.section .text
.align 8
_cbt0q:
_cbt0q:
	movq $block_cbt0s_info,(%rbp)
	testb $7,%bl
	jne _cbt0s
_cbt0t:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbt0q, .-_cbt0q


==================== Asm code ====================
2018-03-16 16:06:18.294343119 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt0q_info:
	.quad	_cbt0q
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.294976664 UTC

.section .text
.align 8
_cbt0s:
_cbt0s:
	movq $block_cbt0y_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbt0s, .-_cbt0s


==================== Asm code ====================
2018-03-16 16:06:18.295574059 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt0s_info:
	.quad	_cbt0s
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.29624914 UTC

.section .text
.align 8
_cbt0y:
_cbt0y:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbt0y, .-_cbt0y


==================== Asm code ====================
2018-03-16 16:06:18.29682854 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt0y_info:
	.quad	_cbt0y
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.297567597 UTC

.section .text
.align 8
io_sbolb_entry:
_cbt0U:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbt0Y
_cbt0Z:
	movq $block_cbt0P_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movl $GHC.IO.Handle.hFileSize2_closure+2,%edi
	movq 7(%rbx),%rsi
	movl $GHC.IO.Handle.hFileSize8_closure,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbt0Y:
	jmp *-8(%r13)
	.size io_sbolb_entry, .-io_sbolb_entry


==================== Asm code ====================
2018-03-16 16:06:18.298232888 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbolb_info:
	.quad	io_sbolb_entry
	.quad	2
	.quad	54043199823413259
	.quad	4294967299
	.quad	SboCL_srt+456


==================== Asm code ====================
2018-03-16 16:06:18.298908851 UTC

.section .text
.align 8
_cbt0P:
_cbt0P:
	movq $block_cbt0R_info,(%rbp)
	testb $7,%bl
	jne _cbt0R
_cbt0S:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbt0P, .-_cbt0P


==================== Asm code ====================
2018-03-16 16:06:18.299487533 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt0P_info:
	.quad	_cbt0P
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.300158482 UTC

.section .text
.align 8
_cbt0R:
_cbt0R:
	movq $block_cbt0X_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbt0R, .-_cbt0R


==================== Asm code ====================
2018-03-16 16:06:18.301493093 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt0R_info:
	.quad	_cbt0R
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.302174449 UTC

.section .text
.align 8
_cbt0X:
_cbt0X:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbt0X, .-_cbt0X


==================== Asm code ====================
2018-03-16 16:06:18.302727428 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt0X_info:
	.quad	_cbt0X
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.303452524 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFileSize1_entry
.type GHC.IO.Handle.hFileSize1_entry, @object
GHC.IO.Handle.hFileSize1_entry:
_cbt19:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbt1a
_cbt1b:
	movq $block_cbt0e_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbt0e
_cbt0f:
	movq (%rbx),%rax
	jmp *(%rax)
_cbt1a:
	movl $GHC.IO.Handle.hFileSize1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hFileSize1_entry, .-GHC.IO.Handle.hFileSize1_entry


==================== Asm code ====================
2018-03-16 16:06:18.304065931 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize1_info
.type GHC.IO.Handle.hFileSize1_info, @object
GHC.IO.Handle.hFileSize1_info:
	.quad	GHC.IO.Handle.hFileSize1_entry
	.quad	0
	.quad	126100793861341198
	.quad	8589934597
	.quad	SboCL_srt+456


==================== Asm code ====================
2018-03-16 16:06:18.304775199 UTC

.section .text
.align 8
_cbt0e:
_cbt0e:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbt16
_cbt17:
	movq $block_cbt0I_info,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
_cbt16:
	movq $block_cbt0j_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
	.size _cbt0e, .-_cbt0e


==================== Asm code ====================
2018-03-16 16:06:18.305451862 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt0e_info:
	.quad	_cbt0e
	.quad	0
	.quad	54043199823413278
	.quad	SboCL_srt+456


==================== Asm code ====================
2018-03-16 16:06:18.306177696 UTC

.section .text
.align 8
_cbt0j:
_cbt0j:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbt1f
_cbt1e:
	movq $io_sbokV_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbt1j
_cbt1i:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbokV_entry
_cbt1j:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_cbt1f:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbt0j, .-_cbt0j


==================== Asm code ====================
2018-03-16 16:06:18.306787481 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt0j_info:
	.quad	_cbt0j
	.quad	2
	.quad	54043199823413278
	.quad	SboCL_srt+456


==================== Asm code ====================
2018-03-16 16:06:18.307524283 UTC

.section .text
.align 8
_cbt0I:
_cbt0I:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbt1n
_cbt1m:
	movq $io_sbolb_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbt1r
_cbt1q:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbolb_entry
_cbt1r:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_cbt1n:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbt0I, .-_cbt0I


==================== Asm code ====================
2018-03-16 16:06:18.30821519 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt0I_info:
	.quad	_cbt0I
	.quad	2
	.quad	54043199823413278
	.quad	SboCL_srt+456


==================== Asm code ====================
2018-03-16 16:06:18.310440074 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize_closure
.type GHC.IO.Handle.hFileSize_closure, @object
GHC.IO.Handle.hFileSize_closure:
	.quad	GHC.IO.Handle.hFileSize_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.311045569 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFileSize_entry
.type GHC.IO.Handle.hFileSize_entry, @object
GHC.IO.Handle.hFileSize_entry:
_cbt2o:
	jmp GHC.IO.Handle.hFileSize1_entry
	.size GHC.IO.Handle.hFileSize_entry, .-GHC.IO.Handle.hFileSize_entry


==================== Asm code ====================
2018-03-16 16:06:18.311659434 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize_info
.type GHC.IO.Handle.hFileSize_info, @object
GHC.IO.Handle.hFileSize_info:
	.quad	GHC.IO.Handle.hFileSize_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SboCL_srt+648


==================== Asm code ====================
2018-03-16 16:06:18.313719375 UTC

.section .data
.align 8
.align 1
lvl21_rbnX3_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.IO.Handle.Internals.handleFinalizer1_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.329476363 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hDuplicateTo1_closure
.type GHC.IO.Handle.hDuplicateTo1_closure, @object
GHC.IO.Handle.hDuplicateTo1_closure:
	.quad	GHC.IO.Handle.hDuplicateTo1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.330343978 UTC

.section .text
.align 8
sat_sbolF_entry:
_cbt2Z:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbt30
_cbt31:
	movq $block_cbt2W_info,-16(%rbp)
	movq %r14,%r9
	movq 22(%rbx),%r8
	movl $GHC.Base.Nothing_closure+1,%edi
	movq 6(%rbx),%rsi
	movq %r14,%rax
	movq 14(%rbx),%r14
	movq $lvl21_rbnX3_closure+2,-24(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp dupHandleTo_rbnWN_entry
_cbt30:
	jmp *-8(%r13)
	.size sat_sbolF_entry, .-sat_sbolF_entry


==================== Asm code ====================
2018-03-16 16:06:18.331005523 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbolF_info:
	.quad	sat_sbolF_entry
	.quad	3
	.quad	12884901896
	.quad	8589934597
	.quad	SboCL_srt+656


==================== Asm code ====================
2018-03-16 16:06:18.331717692 UTC

.section .text
.align 8
_cbt2W:
_cbt2W:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbt34
_cbt33:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbt34:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbt2W, .-_cbt2W


==================== Asm code ====================
2018-03-16 16:06:18.332323464 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt2W_info:
	.quad	_cbt2W
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.332846102 UTC

.section .data.rel.ro
.align 8
.align 1
ubt4R_srtd:
	.quad	SboCL_srt+176
	.quad	64
	.quad	-1152921504606846975


==================== Asm code ====================
2018-03-16 16:06:18.333586969 UTC

.section .text
.align 8
sat_sbolG_entry:
_cbt35:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cbt36
_cbt37:
	movq $block_cbt2P_info,-40(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%rcx
	movq %rcx,-32(%rbp)
	movq 14(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq 22(%rbx),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.IO.Handle.Internals.hClose_help1_entry
_cbt36:
	jmp *-8(%r13)
	.size sat_sbolG_entry, .-sat_sbolG_entry


==================== Asm code ====================
2018-03-16 16:06:18.334209843 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbolG_info:
	.quad	sat_sbolG_entry
	.quad	3
	.quad	-4294967288
	.quad	8589934597
	.quad	ubt4R_srtd


==================== Asm code ====================
2018-03-16 16:06:18.334775294 UTC

.section .data.rel.ro
.align 8
.align 1
ubt4S_srtd:
	.quad	SboCL_srt+176
	.quad	64
	.quad	-5764607523034234879


==================== Asm code ====================
2018-03-16 16:06:18.335498529 UTC

.section .text
.align 8
_cbt2P:
_cbt2P:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbt3a
_cbt39:
	movq $sat_sbolF_info,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -22(%r12),%r8
	movq 24(%rbp),%rdi
	movq %rax,%rsi
	movl $lvl1_rbnWC_closure,%r14d
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.$wwithHandle'_entry
_cbt3a:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbt2P, .-_cbt2P


==================== Asm code ====================
2018-03-16 16:06:18.336164979 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt2P_info:
	.quad	_cbt2P
	.quad	4
	.quad	-4294967266
	.quad	ubt4S_srtd


==================== Asm code ====================
2018-03-16 16:06:18.336880501 UTC

.section .text
.align 8
sat_sbom4_entry:
_cbt3y:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbt3z
_cbt3A:
	movq $block_cbt3v_info,-16(%rbp)
	movq %r14,%r9
	movq 22(%rbx),%r8
	movl $GHC.Base.Nothing_closure+1,%edi
	movq 6(%rbx),%rsi
	movq %r14,%rax
	movq 14(%rbx),%r14
	movq $lvl21_rbnX3_closure+2,-24(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp dupHandleTo_rbnWN_entry
_cbt3z:
	jmp *-8(%r13)
	.size sat_sbom4_entry, .-sat_sbom4_entry


==================== Asm code ====================
2018-03-16 16:06:18.337634575 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbom4_info:
	.quad	sat_sbom4_entry
	.quad	3
	.quad	12884901896
	.quad	8589934597
	.quad	SboCL_srt+656


==================== Asm code ====================
2018-03-16 16:06:18.338328818 UTC

.section .text
.align 8
_cbt3v:
_cbt3v:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbt3D
_cbt3C:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbt3D:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbt3v, .-_cbt3v


==================== Asm code ====================
2018-03-16 16:06:18.338981157 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt3v_info:
	.quad	_cbt3v
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.339509025 UTC

.section .data.rel.ro
.align 8
.align 1
ubt4T_srtd:
	.quad	SboCL_srt+176
	.quad	64
	.quad	-1152921504606846975


==================== Asm code ====================
2018-03-16 16:06:18.340192688 UTC

.section .text
.align 8
sat_sbom5_entry:
_cbt3E:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cbt3F
_cbt3G:
	movq $block_cbt3o_info,-40(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%rcx
	movq %rcx,-32(%rbp)
	movq 14(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq 22(%rbx),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.IO.Handle.Internals.hClose_help1_entry
_cbt3F:
	jmp *-8(%r13)
	.size sat_sbom5_entry, .-sat_sbom5_entry


==================== Asm code ====================
2018-03-16 16:06:18.340855801 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbom5_info:
	.quad	sat_sbom5_entry
	.quad	3
	.quad	-4294967288
	.quad	8589934597
	.quad	ubt4T_srtd


==================== Asm code ====================
2018-03-16 16:06:18.341447858 UTC

.section .data.rel.ro
.align 8
.align 1
ubt4U_srtd:
	.quad	SboCL_srt+176
	.quad	64
	.quad	-5764607523034234879


==================== Asm code ====================
2018-03-16 16:06:18.342150016 UTC

.section .text
.align 8
_cbt3o:
_cbt3o:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbt3J
_cbt3I:
	movq $sat_sbom4_info,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -22(%r12),%r8
	movq 24(%rbp),%rdi
	movq %rax,%rsi
	movl $lvl1_rbnWC_closure,%r14d
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.$wwithHandle'_entry
_cbt3J:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbt3o, .-_cbt3o


==================== Asm code ====================
2018-03-16 16:06:18.342781753 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt3o_info:
	.quad	_cbt3o
	.quad	4
	.quad	-4294967266
	.quad	ubt4U_srtd


==================== Asm code ====================
2018-03-16 16:06:18.343516549 UTC

.section .text
.align 8
sat_sbomm_entry:
_cbt43:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbt44
_cbt45:
	movq $block_cbt40_info,-16(%rbp)
	movq %r14,%r9
	movq 30(%rbx),%r8
	movq 22(%rbx),%rdi
	movq 6(%rbx),%rsi
	movq %r14,%rax
	movq 14(%rbx),%r14
	movq $GHC.Base.Nothing_closure+1,-24(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp dupHandleTo_rbnWN_entry
_cbt44:
	jmp *-8(%r13)
	.size sat_sbomm_entry, .-sat_sbomm_entry


==================== Asm code ====================
2018-03-16 16:06:18.344890753 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbomm_info:
	.quad	sat_sbomm_entry
	.quad	4
	.quad	4294967304
	.quad	8589934597
	.quad	SboCL_srt+664


==================== Asm code ====================
2018-03-16 16:06:18.345711869 UTC

.section .text
.align 8
_cbt40:
_cbt40:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbt48
_cbt47:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbt48:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbt40, .-_cbt40


==================== Asm code ====================
2018-03-16 16:06:18.346358051 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt40_info:
	.quad	_cbt40
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.3469147 UTC

.section .data.rel.ro
.align 8
.align 1
ubt4V_srtd:
	.quad	SboCL_srt+176
	.quad	64
	.quad	-2305843009213693951


==================== Asm code ====================
2018-03-16 16:06:18.347598341 UTC

.section .text
.align 8
sat_sbomn_entry:
_cbt49:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbt4a
_cbt4b:
	movq $block_cbt3T_info,-48(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%rcx
	movq %rcx,-40(%rbp)
	movq 14(%rbx),%rcx
	movq %rcx,-32(%rbp)
	movq 22(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq 30(%rbx),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-48,%rbp
	jmp GHC.IO.Handle.Internals.hClose_help1_entry
_cbt4a:
	jmp *-8(%r13)
	.size sat_sbomn_entry, .-sat_sbomn_entry


==================== Asm code ====================
2018-03-16 16:06:18.348264577 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbomn_info:
	.quad	sat_sbomn_entry
	.quad	4
	.quad	-4294967288
	.quad	8589934597
	.quad	ubt4V_srtd


==================== Asm code ====================
2018-03-16 16:06:18.34884464 UTC

.section .data.rel.ro
.align 8
.align 1
ubt4W_srtd:
	.quad	SboCL_srt+176
	.quad	64
	.quad	-6917529027641081855


==================== Asm code ====================
2018-03-16 16:06:18.349835537 UTC

.section .text
.align 8
_cbt3T:
_cbt3T:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbt4e
_cbt4d:
	movq $sat_sbomm_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -30(%r12),%r8
	movq 24(%rbp),%rdi
	movq %rax,%rsi
	movl $lvl1_rbnWC_closure,%r14d
	addq $48,%rbp
	jmp GHC.IO.Handle.Internals.$wwithHandle'_entry
_cbt4e:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbt3T, .-_cbt3T


==================== Asm code ====================
2018-03-16 16:06:18.350534357 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt3T_info:
	.quad	_cbt3T
	.quad	5
	.quad	-4294967266
	.quad	ubt4W_srtd


==================== Asm code ====================
2018-03-16 16:06:18.351072953 UTC

.section .data.rel.ro
.align 8
.align 1
ubt4X_srtd:
	.quad	SboCL_srt+176
	.quad	66
	.quad	-1152921504606846971
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:18.351813608 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hDuplicateTo1_entry
.type GHC.IO.Handle.hDuplicateTo1_entry, @object
GHC.IO.Handle.hDuplicateTo1_entry:
_cbt4j:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cbt4k
_cbt4l:
	movq $block_cbt2A_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbt2A
_cbt2B:
	movq (%rbx),%rax
	jmp *(%rax)
_cbt4k:
	movl $GHC.IO.Handle.hDuplicateTo1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hDuplicateTo1_entry, .-GHC.IO.Handle.hDuplicateTo1_entry


==================== Asm code ====================
2018-03-16 16:06:18.352449421 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hDuplicateTo1_info
.type GHC.IO.Handle.hDuplicateTo1_info, @object
GHC.IO.Handle.hDuplicateTo1_info:
	.quad	GHC.IO.Handle.hDuplicateTo1_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901903
	.quad	ubt4X_srtd


==================== Asm code ====================
2018-03-16 16:06:18.353018948 UTC

.section .data.rel.ro
.align 8
.align 1
ubt4Y_srtd:
	.quad	SboCL_srt+176
	.quad	65
	.quad	-1152921504606846971
	.quad	1


==================== Asm code ====================
2018-03-16 16:06:18.353875804 UTC

.section .text
.align 8
_cbt2A:
_cbt2A:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbt4g
_cbt4h:
	movq $block_cbt3d_info,-24(%rbp)
	movq %rbx,%rcx
	movq 6(%rbx),%rdx
	movq 14(%rbx),%rsi
	movq 22(%rbx),%rbx
	movq %rbx,%rdi
	movq %rax,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbt3d
_cbt3e:
	movq (%rbx),%rax
	jmp *(%rax)
_cbt4g:
	movq $block_cbt2F_info,-16(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rbx
	movq %rbx,%rsi
	movq %rax,%rbx
	movq %rsi,-8(%rbp)
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbt2F
_cbt2G:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbt2A, .-_cbt2A


==================== Asm code ====================
2018-03-16 16:06:18.35464006 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt2A_info:
	.quad	_cbt2A
	.quad	1
	.quad	-4294967266
	.quad	ubt4Y_srtd


==================== Asm code ====================
2018-03-16 16:06:18.355180786 UTC

.section .data.rel.ro
.align 8
.align 1
ubt4Z_srtd:
	.quad	SboCL_srt+176
	.quad	65
	.quad	-1152921504606846971
	.quad	1


==================== Asm code ====================
2018-03-16 16:06:18.356003086 UTC

.section .text
.align 8
_cbt2F:
_cbt2F:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbt4o
_ubt4L:
	addq $24,%rbp
	jmp _cbt4A
_cbt4r:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_cbt4o:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbt4r
_cbt4q:
	movq 15(%rbx),%rax
	movq $sat_sbolG_info,-24(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,(%r12)
	leaq -22(%r12),%r8
	movq %rax,%rdi
	movq %rbx,%rsi
	movl $lvl1_rbnWC_closure,%r14d
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.$wwithHandle__'_entry
	.size _cbt2F, .-_cbt2F


==================== Asm code ====================
2018-03-16 16:06:18.356704629 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt2F_info:
	.quad	_cbt2F
	.quad	3
	.quad	-4294967266
	.quad	ubt4Z_srtd


==================== Asm code ====================
2018-03-16 16:06:18.357301691 UTC

.section .data.rel.ro
.align 8
.align 1
ubt50_srtd:
	.quad	SboCL_srt+176
	.quad	65
	.quad	-1152921504606846971
	.quad	1


==================== Asm code ====================
2018-03-16 16:06:18.358094244 UTC

.section .text
.align 8
_cbt3d:
_cbt3d:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubt4K
_cbt4B:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbt4E
_cbt4D:
	movq 14(%rbx),%rax
	movq 22(%rbx),%rcx
	movq $sat_sbom5_info,-24(%r12)
	movq 32(%rbp),%rdx
	movq %rdx,-16(%r12)
	movq 24(%rbp),%rdx
	movq %rdx,-8(%r12)
	movq 16(%rbp),%rdx
	movq %rdx,(%r12)
	movq $block_cbt3K_info,-16(%rbp)
	leaq -22(%r12),%r8
	movq %rcx,%rdi
	movq %rbx,%rsi
	movl $lvl1_rbnWC_closure,%r14d
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wwithHandle__'_entry
_ubt4K:
	addq $32,%rbp
	jmp _cbt4A
_cbt4E:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbt3d, .-_cbt3d


==================== Asm code ====================
2018-03-16 16:06:18.358829701 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt3d_info:
	.quad	_cbt3d
	.quad	4
	.quad	-4294967266
	.quad	ubt50_srtd


==================== Asm code ====================
2018-03-16 16:06:18.359465904 UTC

.section .text
.align 8
_cbt4A:
_cbt4A:
	movq (%rbp),%r14
	addq $8,%rbp
	jmp ioe_dupHandlesNotCompatible_rbnWF_entry
	.size _cbt4A, .-_cbt4A


==================== Asm code ====================
2018-03-16 16:06:18.360038783 UTC

.section .data.rel.ro
.align 8
.align 1
ubt51_srtd:
	.quad	SboCL_srt+176
	.quad	65
	.quad	-2305843009213693951
	.quad	1


==================== Asm code ====================
2018-03-16 16:06:18.360826178 UTC

.section .text
.align 8
_cbt3K:
_cbt3K:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbt4H
_cbt4G:
	movq $GHC.MVar.MVar_con_info,-64(%r12)
	movq 32(%rbp),%rax
	movq %rax,-56(%r12)
	movq $GHC.Base.Just_con_info,-48(%r12)
	leaq -63(%r12),%rax
	movq %rax,-40(%r12)
	movq $sat_sbomn_info,-32(%r12)
	movq 48(%rbp),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	leaq -46(%r12),%rax
	movq %rax,(%r12)
	leaq -30(%r12),%r8
	movq 8(%rbp),%rdi
	movq 16(%rbp),%rsi
	movl $lvl1_rbnWC_closure,%r14d
	addq $56,%rbp
	jmp GHC.IO.Handle.Internals.$wwithHandle__'_entry
_cbt4H:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbt3K, .-_cbt3K


==================== Asm code ====================
2018-03-16 16:06:18.361564846 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt3K_info:
	.quad	_cbt3K
	.quad	6
	.quad	-4294967266
	.quad	ubt51_srtd


==================== Asm code ====================
2018-03-16 16:06:18.36394953 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hDuplicateTo_closure
.type GHC.IO.Handle.hDuplicateTo_closure, @object
GHC.IO.Handle.hDuplicateTo_closure:
	.quad	GHC.IO.Handle.hDuplicateTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.36457573 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hDuplicateTo_entry
.type GHC.IO.Handle.hDuplicateTo_entry, @object
GHC.IO.Handle.hDuplicateTo_entry:
_cbt6Y:
	jmp GHC.IO.Handle.hDuplicateTo1_entry
	.size GHC.IO.Handle.hDuplicateTo_entry, .-GHC.IO.Handle.hDuplicateTo_entry


==================== Asm code ====================
2018-03-16 16:06:18.365162067 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hDuplicateTo_info
.type GHC.IO.Handle.hDuplicateTo_info, @object
GHC.IO.Handle.hDuplicateTo_info:
	.quad	GHC.IO.Handle.hDuplicateTo_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SboCL_srt+696


==================== Asm code ====================
2018-03-16 16:06:18.367138409 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl22_rbnX4_bytes:
	.asciz "hDuplicate"


==================== Asm code ====================
2018-03-16 16:06:18.369639444 UTC

.section .data
.align 8
.align 1
lvl23_rbnX5_closure:
	.quad	lvl23_rbnX5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.370499254 UTC

.section .text
.align 8
lvl23_rbnX5_entry:
_cbt7c:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbt7d
_cbt7e:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbt7b
_cbt7a:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl22_rbnX4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbt7d:
	jmp *-16(%r13)
_cbt7b:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl23_rbnX5_entry, .-lvl23_rbnX5_entry


==================== Asm code ====================
2018-03-16 16:06:18.371203293 UTC

.section .data.rel.ro
.align 8
.align 1
lvl23_rbnX5_info:
	.quad	lvl23_rbnX5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:18.3729283 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl24_rbnX6_bytes:
	.asciz "Pattern match failure in do expression at GHC/IO/Handle.hs:626:3-33"


==================== Asm code ====================
2018-03-16 16:06:18.376011202 UTC

.section .data
.align 8
.align 1
lvl25_rbnX7_closure:
	.quad	lvl25_rbnX7_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.376778569 UTC

.section .text
.align 8
lvl25_rbnX7_entry:
_cbt7t:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbt7u
_cbt7v:
	movq $block_cbt7r_info,-8(%rbp)
	movl $lvl24_rbnX6_bytes,%r14d
	addq $-8,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbt7u:
	movl $lvl25_rbnX7_closure,%ebx
	jmp *-8(%r13)
	.size lvl25_rbnX7_entry, .-lvl25_rbnX7_entry


==================== Asm code ====================
2018-03-16 16:06:18.377852933 UTC

.section .data.rel.ro
.align 8
.align 1
lvl25_rbnX7_info:
	.quad	lvl25_rbnX7_entry
	.quad	0
	.quad	12884901902
	.quad	4294967299
	.quad	SboCL_srt+704


==================== Asm code ====================
2018-03-16 16:06:18.3784913 UTC

.section .text
.align 8
_cbt7r:
_cbt7r:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.IO.failIO1_entry
	.size _cbt7r, .-_cbt7r


==================== Asm code ====================
2018-03-16 16:06:18.379058672 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt7r_info:
	.quad	_cbt7r
	.quad	0
	.quad	4294967326
	.quad	SboCL_srt+712


==================== Asm code ====================
2018-03-16 16:06:18.380740763 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl26_rbnX8_bytes:
	.asciz "Pattern match failure in do expression at GHC/IO/Handle.hs:623:3-35"


==================== Asm code ====================
2018-03-16 16:06:18.383271528 UTC

.section .data
.align 8
.align 1
lvl27_rbnX9_closure:
	.quad	lvl27_rbnX9_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.3839819 UTC

.section .text
.align 8
lvl27_rbnX9_entry:
_cbt7O:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbt7P
_cbt7Q:
	movq $block_cbt7M_info,-8(%rbp)
	movl $lvl26_rbnX8_bytes,%r14d
	addq $-8,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbt7P:
	movl $lvl27_rbnX9_closure,%ebx
	jmp *-8(%r13)
	.size lvl27_rbnX9_entry, .-lvl27_rbnX9_entry


==================== Asm code ====================
2018-03-16 16:06:18.384627275 UTC

.section .data.rel.ro
.align 8
.align 1
lvl27_rbnX9_info:
	.quad	lvl27_rbnX9_entry
	.quad	0
	.quad	12884901902
	.quad	4294967299
	.quad	SboCL_srt+712


==================== Asm code ====================
2018-03-16 16:06:18.385267287 UTC

.section .text
.align 8
_cbt7M:
_cbt7M:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.IO.failIO1_entry
	.size _cbt7M, .-_cbt7M


==================== Asm code ====================
2018-03-16 16:06:18.385853148 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt7M_info:
	.quad	_cbt7M
	.quad	0
	.quad	4294967326
	.quad	SboCL_srt+712


==================== Asm code ====================
2018-03-16 16:06:18.403124095 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hDuplicate1_closure
.type GHC.IO.Handle.hDuplicate1_closure, @object
GHC.IO.Handle.hDuplicate1_closure:
	.quad	GHC.IO.Handle.hDuplicate1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.403706782 UTC

.section .data.rel.ro
.align 8
.align 1
ubtaJ_srtd:
	.quad	SboCL_srt+96
	.quad	71
	.quad	32769
	.quad	64


==================== Asm code ====================
2018-03-16 16:06:18.404605191 UTC

.section .text
.align 8
sat_sbon0_entry:
_cbt8j:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cbt8t
_cbt8u:
	movq $block_cbt8g_info,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbt8g
_cbt8h:
	movq (%rbx),%rax
	jmp *(%rax)
_cbt8t:
	jmp *-8(%r13)
	.size sat_sbon0_entry, .-sat_sbon0_entry


==================== Asm code ====================
2018-03-16 16:06:18.405529022 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbon0_info:
	.quad	sat_sbon0_entry
	.quad	1
	.quad	-4294967287
	.quad	8589934597
	.quad	ubtaJ_srtd


==================== Asm code ====================
2018-03-16 16:06:18.406121546 UTC

.section .data.rel.ro
.align 8
.align 1
ubtaK_srtd:
	.quad	SboCL_srt+96
	.quad	71
	.quad	32769
	.quad	64


==================== Asm code ====================
2018-03-16 16:06:18.406822563 UTC

.section .text
.align 8
_cbt8g:
_cbt8g:
	movq $block_cbt8m_info,-40(%rbp)
	movq %rbx,%r14
	movq 7(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 23(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-40,%rbp
	jmp GHC.IO.Handle.Internals.flushBuffer1_entry
	.size _cbt8g, .-_cbt8g


==================== Asm code ====================
2018-03-16 16:06:18.407460553 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt8g_info:
	.quad	_cbt8g
	.quad	1
	.quad	-4294967266
	.quad	ubtaK_srtd


==================== Asm code ====================
2018-03-16 16:06:18.407992813 UTC

.section .data.rel.ro
.align 8
.align 1
ubtaL_srtd:
	.quad	SboCL_srt+216
	.quad	56
	.quad	36028797018963969


==================== Asm code ====================
2018-03-16 16:06:18.408672659 UTC

.section .text
.align 8
_cbt8m:
_cbt8m:
	movq $block_cbt8o_info,(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_pv_info,-16(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Device.dup_entry
	.size _cbt8m, .-_cbt8m


==================== Asm code ====================
2018-03-16 16:06:18.409298874 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt8m_info:
	.quad	_cbt8m
	.quad	6
	.quad	-4294967266
	.quad	ubtaL_srtd


==================== Asm code ====================
2018-03-16 16:06:18.409833219 UTC

.section .data.rel.ro
.align 8
.align 1
ubtaM_srtd:
	.quad	SboCL_srt+216
	.quad	56
	.quad	36028797018963969


==================== Asm code ====================
2018-03-16 16:06:18.4104986 UTC

.section .text
.align 8
_cbt8o:
_cbt8o:
	movq $block_cbt8q_info,32(%rbp)
	movq 48(%rbp),%r9
	movq %rbx,%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq $GHC.Base.Nothing_closure+1,8(%rbp)
	movq 40(%rbp),%rax
	movq %rax,16(%rbp)
	movq $lvl21_rbnX3_closure+2,24(%rbp)
	addq $8,%rbp
	jmp dupHandle__rbnWK_entry
	.size _cbt8o, .-_cbt8o


==================== Asm code ====================
2018-03-16 16:06:18.411113043 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt8o_info:
	.quad	_cbt8o
	.quad	518
	.quad	-4294967266
	.quad	ubtaM_srtd


==================== Asm code ====================
2018-03-16 16:06:18.411830446 UTC

.section .text
.align 8
_cbt8q:
_cbt8q:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbt8A
_cbt8z:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbt8A:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbt8q, .-_cbt8q


==================== Asm code ====================
2018-03-16 16:06:18.412444523 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt8q_info:
	.quad	_cbt8q
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.413007237 UTC

.section .data.rel.ro
.align 8
.align 1
ubtaN_srtd:
	.quad	SboCL_srt+96
	.quad	71
	.quad	32769
	.quad	64


==================== Asm code ====================
2018-03-16 16:06:18.413777028 UTC

.section .text
.align 8
sat_sbonx_entry:
_cbt8M:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cbt8W
_cbt8X:
	movq $block_cbt8J_info,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbt8J
_cbt8K:
	movq (%rbx),%rax
	jmp *(%rax)
_cbt8W:
	jmp *-8(%r13)
	.size sat_sbonx_entry, .-sat_sbonx_entry


==================== Asm code ====================
2018-03-16 16:06:18.414436655 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbonx_info:
	.quad	sat_sbonx_entry
	.quad	1
	.quad	-4294967287
	.quad	8589934597
	.quad	ubtaN_srtd


==================== Asm code ====================
2018-03-16 16:06:18.414987323 UTC

.section .data.rel.ro
.align 8
.align 1
ubtaO_srtd:
	.quad	SboCL_srt+96
	.quad	71
	.quad	32769
	.quad	64


==================== Asm code ====================
2018-03-16 16:06:18.415692767 UTC

.section .text
.align 8
_cbt8J:
_cbt8J:
	movq $block_cbt8P_info,-40(%rbp)
	movq %rbx,%r14
	movq 7(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 23(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-40,%rbp
	jmp GHC.IO.Handle.Internals.flushBuffer1_entry
	.size _cbt8J, .-_cbt8J


==================== Asm code ====================
2018-03-16 16:06:18.41631027 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt8J_info:
	.quad	_cbt8J
	.quad	1
	.quad	-4294967266
	.quad	ubtaO_srtd


==================== Asm code ====================
2018-03-16 16:06:18.41681974 UTC

.section .data.rel.ro
.align 8
.align 1
ubtaP_srtd:
	.quad	SboCL_srt+216
	.quad	56
	.quad	36028797018963969


==================== Asm code ====================
2018-03-16 16:06:18.417593212 UTC

.section .text
.align 8
_cbt8P:
_cbt8P:
	movq $block_cbt8R_info,(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_pv_info,-16(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Device.dup_entry
	.size _cbt8P, .-_cbt8P


==================== Asm code ====================
2018-03-16 16:06:18.418170857 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt8P_info:
	.quad	_cbt8P
	.quad	6
	.quad	-4294967266
	.quad	ubtaP_srtd


==================== Asm code ====================
2018-03-16 16:06:18.418720893 UTC

.section .data.rel.ro
.align 8
.align 1
ubtaQ_srtd:
	.quad	SboCL_srt+216
	.quad	56
	.quad	36028797018963969


==================== Asm code ====================
2018-03-16 16:06:18.420134318 UTC

.section .text
.align 8
_cbt8R:
_cbt8R:
	movq $block_cbt8T_info,32(%rbp)
	movq 48(%rbp),%r9
	movq %rbx,%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq $GHC.Base.Nothing_closure+1,8(%rbp)
	movq 40(%rbp),%rax
	movq %rax,16(%rbp)
	movq $lvl21_rbnX3_closure+2,24(%rbp)
	addq $8,%rbp
	jmp dupHandle__rbnWK_entry
	.size _cbt8R, .-_cbt8R


==================== Asm code ====================
2018-03-16 16:06:18.420846596 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt8R_info:
	.quad	_cbt8R
	.quad	518
	.quad	-4294967266
	.quad	ubtaQ_srtd


==================== Asm code ====================
2018-03-16 16:06:18.421572871 UTC

.section .text
.align 8
_cbt8T:
_cbt8T:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbt93
_cbt92:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbt93:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbt8T, .-_cbt8T


==================== Asm code ====================
2018-03-16 16:06:18.422221881 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt8T_info:
	.quad	_cbt8T
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.422944531 UTC

.section .text
.align 8
sat_sboop_entry:
_cbt9y:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cbt9E
_cbt9F:
	movq $block_cbt9v_info,-32(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rax,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbt9v
_cbt9w:
	movq (%rbx),%rax
	jmp *(%rax)
_cbt9E:
	jmp *-8(%r13)
	.size sat_sboop_entry, .-sat_sboop_entry


==================== Asm code ====================
2018-03-16 16:06:18.423614349 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sboop_info:
	.quad	sat_sboop_entry
	.quad	3
	.quad	4294967304
	.quad	8589934597
	.quad	SboCL_srt+728


==================== Asm code ====================
2018-03-16 16:06:18.424293323 UTC

.section .text
.align 8
_cbt9v:
_cbt9v:
	movq 16(%rbp),%rax
	movq $block_cbt9B_info,16(%rbp)
	movq 8(%rbp),%r9
	movq 31(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	movq %rax,-8(%rbp)
	movq 24(%rbp),%rax
	movq %rax,(%rbp)
	movq $GHC.Base.Nothing_closure+1,8(%rbp)
	movq %rbx,24(%rbp)
	addq $-8,%rbp
	jmp dupHandle__rbnWK_entry
	.size _cbt9v, .-_cbt9v


==================== Asm code ====================
2018-03-16 16:06:18.424937616 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt9v_info:
	.quad	_cbt9v
	.quad	3
	.quad	4294967326
	.quad	SboCL_srt+728


==================== Asm code ====================
2018-03-16 16:06:18.425634712 UTC

.section .text
.align 8
_cbt9B:
_cbt9B:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbt9J
_cbt9I:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbt9J:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbt9B, .-_cbt9B


==================== Asm code ====================
2018-03-16 16:06:18.426263402 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt9B_info:
	.quad	_cbt9B
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.426821987 UTC

.section .data.rel.ro
.align 8
.align 1
ubtaR_srtd:
	.quad	SboCL_srt+96
	.quad	81
	.quad	1
	.quad	98816


==================== Asm code ====================
2018-03-16 16:06:18.427527858 UTC

.section .text
.align 8
sat_sboou_entry:
_cbt9L:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbt9P
_cbt9Q:
	movq $block_cbt9j_info,-40(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rdx
	movq 30(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbt9j
_cbt9k:
	movq (%rbx),%rax
	jmp *(%rax)
_cbt9P:
	jmp *-8(%r13)
	.size sat_sboou_entry, .-sat_sboou_entry


==================== Asm code ====================
2018-03-16 16:06:18.428170901 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sboou_info:
	.quad	sat_sboou_entry
	.quad	4
	.quad	-4294967288
	.quad	8589934597
	.quad	ubtaR_srtd


==================== Asm code ====================
2018-03-16 16:06:18.42873351 UTC

.section .data.rel.ro
.align 8
.align 1
ubtaS_srtd:
	.quad	SboCL_srt+96
	.quad	81
	.quad	1
	.quad	98816


==================== Asm code ====================
2018-03-16 16:06:18.429705438 UTC

.section .text
.align 8
_cbt9j:
_cbt9j:
	movq $block_cbt9o_info,-8(%rbp)
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.IO.Handle.Internals.flushBuffer1_entry
	.size _cbt9j, .-_cbt9j


==================== Asm code ====================
2018-03-16 16:06:18.430313194 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt9j_info:
	.quad	_cbt9j
	.quad	4
	.quad	-4294967266
	.quad	ubtaS_srtd


==================== Asm code ====================
2018-03-16 16:06:18.431039736 UTC

.section .text
.align 8
_cbt9o:
_cbt9o:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbt9U
_cbt9T:
	movq $sat_sboop_info,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_cbt9M_info,(%rbp)
	leaq -22(%r12),%r8
	movq 32(%rbp),%rdi
	movq 16(%rbp),%rsi
	movl $lvl7_rbnWP_closure,%r14d
	jmp GHC.IO.Handle.Internals.$wwithHandle'_entry
_cbt9U:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbt9o, .-_cbt9o


==================== Asm code ====================
2018-03-16 16:06:18.431712195 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt9o_info:
	.quad	_cbt9o
	.quad	5
	.quad	828928688158
	.quad	SboCL_srt+680


==================== Asm code ====================
2018-03-16 16:06:18.432379935 UTC

.section .text
.align 8
_cbt9M:
_cbt9M:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbt9X
_cbt9W:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbt9X:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbt9M, .-_cbt9M


==================== Asm code ====================
2018-03-16 16:06:18.432987437 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt9M_info:
	.quad	_cbt9M
	.quad	1925
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.433523784 UTC

.section .data.rel.ro
.align 8
.align 1
ubtaT_srtd:
	.quad	SboCL_srt+96
	.quad	83
	.quad	1
	.quad	512576


==================== Asm code ====================
2018-03-16 16:06:18.434221423 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hDuplicate1_entry
.type GHC.IO.Handle.hDuplicate1_entry, @object
GHC.IO.Handle.hDuplicate1_entry:
_cbta3:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbta4
_cbta5:
	movq $block_cbt86_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbt86
_cbt87:
	movq (%rbx),%rax
	jmp *(%rax)
_cbta4:
	movl $GHC.IO.Handle.hDuplicate1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hDuplicate1_entry, .-GHC.IO.Handle.hDuplicate1_entry


==================== Asm code ====================
2018-03-16 16:06:18.434870558 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hDuplicate1_info
.type GHC.IO.Handle.hDuplicate1_info, @object
GHC.IO.Handle.hDuplicate1_info:
	.quad	GHC.IO.Handle.hDuplicate1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934597
	.quad	ubtaT_srtd


==================== Asm code ====================
2018-03-16 16:06:18.4354332 UTC

.section .data.rel.ro
.align 8
.align 1
ubtaU_srtd:
	.quad	SboCL_srt+96
	.quad	83
	.quad	1
	.quad	381504


==================== Asm code ====================
2018-03-16 16:06:18.436278875 UTC

.section .text
.align 8
_cbt86:
_cbt86:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbta0
_cbta1:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbtab
_cbtaa:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rdx
	movq $sat_sbonx_info,-8(%r12)
	movq %rax,(%r12)
	movq $block_cbt95_info,-24(%rbp)
	leaq -6(%r12),%r8
	movq %rdx,%rdi
	movq %rbx,%rsi
	movl $lvl23_rbnX5_closure,%r14d
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-24,%rbp
	jmp GHC.IO.Handle.Internals.$wwithHandle'_entry
_cbtab:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_cbta0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbtab
_cbta7:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq $sat_sbon0_info,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%r8
	movq %rcx,%rdi
	movq %rbx,%rsi
	movl $lvl23_rbnX5_closure,%r14d
	addq $8,%rbp
	jmp GHC.IO.Handle.Internals.$wwithHandle'_entry
	.size _cbt86, .-_cbt86


==================== Asm code ====================
2018-03-16 16:06:18.437000723 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt86_info:
	.quad	_cbt86
	.quad	0
	.quad	-4294967266
	.quad	ubtaU_srtd


==================== Asm code ====================
2018-03-16 16:06:18.4375903 UTC

.section .data.rel.ro
.align 8
.align 1
ubtaV_srtd:
	.quad	SboCL_srt+96
	.quad	83
	.quad	1
	.quad	381440


==================== Asm code ====================
2018-03-16 16:06:18.438178102 UTC

.section .text
.align 8
_cbt95:
_cbt95:
	movq $block_cbt97_info,(%rbp)
	testb $7,%bl
	jne _cbt97
_cbt98:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbt95, .-_cbt95


==================== Asm code ====================
2018-03-16 16:06:18.438719697 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt95_info:
	.quad	_cbt95
	.quad	3
	.quad	-4294967266
	.quad	ubtaV_srtd


==================== Asm code ====================
2018-03-16 16:06:18.439315897 UTC

.section .data.rel.ro
.align 8
.align 1
ubtaW_srtd:
	.quad	SboCL_srt+96
	.quad	83
	.quad	1
	.quad	381440


==================== Asm code ====================
2018-03-16 16:06:18.44011611 UTC

.section .text
.align 8
_cbt97:
_cbt97:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbtah
_cbtaD:
	addq $32,%rbp
	jmp lvl27_rbnX9_entry
_cbtak:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
_cbtah:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbtak
_cbtaj:
	movq 15(%rbx),%rax
	movq $GHC.MVar.MVar_con_info,-64(%r12)
	movq %rax,-56(%r12)
	movq $GHC.Base.Just_con_info,-48(%r12)
	leaq -63(%r12),%rbx
	movq %rbx,-40(%r12)
	movq $sat_sboou_info,-32(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -46(%r12),%rcx
	movq %rcx,(%r12)
	movq $block_cbtad_info,(%rbp)
	leaq -30(%r12),%r8
	movq 16(%rbp),%rdi
	movq %rbx,%rsi
	movl $lvl23_rbnX5_closure,%r14d
	movq %rax,24(%rbp)
	jmp GHC.IO.Handle.Internals.$wwithHandle'_entry
	.size _cbt97, .-_cbt97


==================== Asm code ====================
2018-03-16 16:06:18.440868405 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbt97_info:
	.quad	_cbt97
	.quad	3
	.quad	-4294967266
	.quad	ubtaW_srtd


==================== Asm code ====================
2018-03-16 16:06:18.441504357 UTC

.section .text
.align 8
_cbtad:
_cbtad:
	movq $block_cbtaf_info,(%rbp)
	testb $7,%bl
	jne _cbtaf
_cbtam:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtad, .-_cbtad


==================== Asm code ====================
2018-03-16 16:06:18.442083118 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtad_info:
	.quad	_cbtad
	.quad	131
	.quad	4294967326
	.quad	SboCL_srt+704


==================== Asm code ====================
2018-03-16 16:06:18.442855248 UTC

.section .text
.align 8
_cbtaf:
_cbtaf:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbtas
_cbtaz:
	addq $32,%rbp
	jmp lvl25_rbnX7_entry
_cbtav:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_cbtas:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbtav
_cbtau:
	movq 15(%rbx),%rax
	movq $GHC.IO.Handle.Types.DuplexHandle_con_info,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	leaq -22(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbtaf, .-_cbtaf


==================== Asm code ====================
2018-03-16 16:06:18.443497991 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtaf_info:
	.quad	_cbtaf
	.quad	131
	.quad	4294967326
	.quad	SboCL_srt+704


==================== Asm code ====================
2018-03-16 16:06:18.445982692 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hDuplicate_closure
.type GHC.IO.Handle.hDuplicate_closure, @object
GHC.IO.Handle.hDuplicate_closure:
	.quad	GHC.IO.Handle.hDuplicate_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.446585196 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hDuplicate_entry
.type GHC.IO.Handle.hDuplicate_entry, @object
GHC.IO.Handle.hDuplicate_entry:
_cbtd9:
	jmp GHC.IO.Handle.hDuplicate1_entry
	.size GHC.IO.Handle.hDuplicate_entry, .-GHC.IO.Handle.hDuplicate_entry


==================== Asm code ====================
2018-03-16 16:06:18.447172696 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hDuplicate_info
.type GHC.IO.Handle.hDuplicate_info, @object
GHC.IO.Handle.hDuplicate_info:
	.quad	GHC.IO.Handle.hDuplicate_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SboCL_srt+744


==================== Asm code ====================
2018-03-16 16:06:18.449221582 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hGetEcho4_bytes
.type GHC.IO.Handle.hGetEcho4_bytes, @object
GHC.IO.Handle.hGetEcho4_bytes:
	.asciz "hGetEcho"


==================== Asm code ====================
2018-03-16 16:06:18.451752558 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho3_closure
.type GHC.IO.Handle.hGetEcho3_closure, @object
GHC.IO.Handle.hGetEcho3_closure:
	.quad	GHC.IO.Handle.hGetEcho3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.452582384 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEcho3_entry
.type GHC.IO.Handle.hGetEcho3_entry, @object
GHC.IO.Handle.hGetEcho3_entry:
_cbtdn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtdo
_cbtdp:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbtdm
_cbtdl:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.hGetEcho4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbtdo:
	jmp *-16(%r13)
_cbtdm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hGetEcho3_entry, .-GHC.IO.Handle.hGetEcho3_entry


==================== Asm code ====================
2018-03-16 16:06:18.453308209 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho3_info
.type GHC.IO.Handle.hGetEcho3_info, @object
GHC.IO.Handle.hGetEcho3_info:
	.quad	GHC.IO.Handle.hGetEcho3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:18.457776259 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho2_closure
.type GHC.IO.Handle.hGetEcho2_closure, @object
GHC.IO.Handle.hGetEcho2_closure:
	.quad	GHC.IO.Handle.hGetEcho2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.45854508 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEcho2_entry
.type GHC.IO.Handle.hGetEcho2_entry, @object
GHC.IO.Handle.hGetEcho2_entry:
_cbtdE:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtdF
_cbtdG:
	movq $block_cbtdB_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbtdB
_cbtdC:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtdF:
	movl $GHC.IO.Handle.hGetEcho2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hGetEcho2_entry, .-GHC.IO.Handle.hGetEcho2_entry


==================== Asm code ====================
2018-03-16 16:06:18.459143816 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho2_info
.type GHC.IO.Handle.hGetEcho2_info, @object
GHC.IO.Handle.hGetEcho2_info:
	.quad	GHC.IO.Handle.hGetEcho2_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	SboCL_srt+760


==================== Asm code ====================
2018-03-16 16:06:18.459862281 UTC

.section .text
.align 8
_cbtdB:
_cbtdB:
	movq $block_cbtdJ_info,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbtdJ
_cbtdL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtdB, .-_cbtdB


==================== Asm code ====================
2018-03-16 16:06:18.460477851 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtdB_info:
	.quad	_cbtdB
	.quad	0
	.quad	4294967326
	.quad	SboCL_srt+768


==================== Asm code ====================
2018-03-16 16:06:18.461177245 UTC

.section .text
.align 8
_cbtdJ:
_cbtdJ:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbte1
_cbtdU:
	movq 16(%rbp),%rax
	movq $block_cbtdP_info,16(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_pv_info,(%rbp)
	movq %rax,8(%rbp)
	jmp GHC.IO.Device.getEcho_entry
_cbte1:
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.ioe_closedHandle1_entry
	.size _cbtdJ, .-_cbtdJ


==================== Asm code ====================
2018-03-16 16:06:18.461815657 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtdJ_info:
	.quad	_cbtdJ
	.quad	3
	.quad	4294967326
	.quad	SboCL_srt+768


==================== Asm code ====================
2018-03-16 16:06:18.462499666 UTC

.section .text
.align 8
_cbtdP:
_cbtdP:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtdX
_cbtdW:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbtdX:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbtdP, .-_cbtdP


==================== Asm code ====================
2018-03-16 16:06:18.463097883 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtdP_info:
	.quad	_cbtdP
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.472520226 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho1_closure
.type GHC.IO.Handle.hGetEcho1_closure, @object
GHC.IO.Handle.hGetEcho1_closure:
	.quad	GHC.IO.Handle.hGetEcho1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.473081872 UTC

.section .data.rel.ro
.align 8
.align 1
ubtfZ_srtd:
	.quad	SboCL_srt+456
	.quad	41
	.quad	1374389534721


==================== Asm code ====================
2018-03-16 16:06:18.473872195 UTC

.section .text
.align 8
io_sbopj_entry:
_cbteS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbteW
_cbteX:
	movq $block_cbteN_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movl $GHC.IO.Handle.hGetEcho2_closure+2,%edi
	movq 7(%rbx),%rsi
	movl $GHC.IO.Handle.hGetEcho3_closure,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbteW:
	jmp *-8(%r13)
	.size io_sbopj_entry, .-io_sbopj_entry


==================== Asm code ====================
2018-03-16 16:06:18.474512792 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbopj_info:
	.quad	io_sbopj_entry
	.quad	2
	.quad	-4294967285
	.quad	4294967299
	.quad	ubtfZ_srtd


==================== Asm code ====================
2018-03-16 16:06:18.475126678 UTC

.section .text
.align 8
_cbteN:
_cbteN:
	movq $block_cbteP_info,(%rbp)
	testb $7,%bl
	jne _cbteP
_cbteQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbteN, .-_cbteN


==================== Asm code ====================
2018-03-16 16:06:18.475681545 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbteN_info:
	.quad	_cbteN
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.476328883 UTC

.section .text
.align 8
_cbteP:
_cbteP:
	movq $block_cbteV_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbteP, .-_cbteP


==================== Asm code ====================
2018-03-16 16:06:18.47689174 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbteP_info:
	.quad	_cbteP
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.477499064 UTC

.section .text
.align 8
_cbteV:
_cbteV:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbteV, .-_cbteV


==================== Asm code ====================
2018-03-16 16:06:18.478033146 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbteV_info:
	.quad	_cbteV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.478543315 UTC

.section .data.rel.ro
.align 8
.align 1
ubtg0_srtd:
	.quad	SboCL_srt+456
	.quad	41
	.quad	1374389534721


==================== Asm code ====================
2018-03-16 16:06:18.479243262 UTC

.section .text
.align 8
io_sbopz_entry:
_cbtfh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtfl
_cbtfm:
	movq $block_cbtfc_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movl $GHC.IO.Handle.hGetEcho2_closure+2,%edi
	movq 7(%rbx),%rsi
	movl $GHC.IO.Handle.hGetEcho3_closure,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbtfl:
	jmp *-8(%r13)
	.size io_sbopz_entry, .-io_sbopz_entry


==================== Asm code ====================
2018-03-16 16:06:18.479923024 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbopz_info:
	.quad	io_sbopz_entry
	.quad	2
	.quad	-4294967285
	.quad	4294967299
	.quad	ubtg0_srtd


==================== Asm code ====================
2018-03-16 16:06:18.480558733 UTC

.section .text
.align 8
_cbtfc:
_cbtfc:
	movq $block_cbtfe_info,(%rbp)
	testb $7,%bl
	jne _cbtfe
_cbtff:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtfc, .-_cbtfc


==================== Asm code ====================
2018-03-16 16:06:18.481155448 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtfc_info:
	.quad	_cbtfc
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.482001927 UTC

.section .text
.align 8
_cbtfe:
_cbtfe:
	movq $block_cbtfk_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbtfe, .-_cbtfe


==================== Asm code ====================
2018-03-16 16:06:18.482572943 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtfe_info:
	.quad	_cbtfe
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.483189922 UTC

.section .text
.align 8
_cbtfk:
_cbtfk:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbtfk, .-_cbtfk


==================== Asm code ====================
2018-03-16 16:06:18.483745382 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtfk_info:
	.quad	_cbtfk
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.484281789 UTC

.section .data.rel.ro
.align 8
.align 1
ubtg1_srtd:
	.quad	SboCL_srt+160
	.quad	79
	.quad	137438953473
	.quad	26624


==================== Asm code ====================
2018-03-16 16:06:18.484966532 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEcho1_entry
.type GHC.IO.Handle.hGetEcho1_entry, @object
GHC.IO.Handle.hGetEcho1_entry:
_cbtfw:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtfx
_cbtfy:
	movq $block_cbtet_info,-16(%rbp)
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.hGetEcho5_entry
_cbtfx:
	movl $GHC.IO.Handle.hGetEcho1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hGetEcho1_entry, .-GHC.IO.Handle.hGetEcho1_entry


==================== Asm code ====================
2018-03-16 16:06:18.485627048 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho1_info
.type GHC.IO.Handle.hGetEcho1_info, @object
GHC.IO.Handle.hGetEcho1_info:
	.quad	GHC.IO.Handle.hGetEcho1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934597
	.quad	ubtg1_srtd


==================== Asm code ====================
2018-03-16 16:06:18.486149302 UTC

.section .data.rel.ro
.align 8
.align 1
ubtg2_srtd:
	.quad	SboCL_srt+456
	.quad	41
	.quad	1374389534721


==================== Asm code ====================
2018-03-16 16:06:18.486784586 UTC

.section .text
.align 8
_cbtet:
_cbtet:
	movq $block_cbtev_info,(%rbp)
	testb $7,%bl
	jne _cbtev
_cbtew:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtet, .-_cbtet


==================== Asm code ====================
2018-03-16 16:06:18.487948503 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtet_info:
	.quad	_cbtet
	.quad	1
	.quad	-4294967266
	.quad	ubtg2_srtd


==================== Asm code ====================
2018-03-16 16:06:18.488550084 UTC

.section .data.rel.ro
.align 8
.align 1
ubtg3_srtd:
	.quad	SboCL_srt+456
	.quad	41
	.quad	1374389534721


==================== Asm code ====================
2018-03-16 16:06:18.48927526 UTC

.section .text
.align 8
_cbtev:
_cbtev:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbtft
_cbtfu:
	movq 8(%rbp),%rax
	movq $block_cbteB_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cbteB
_cbteC:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtft:
	movl $GHC.Types.False_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbtev, .-_cbtev


==================== Asm code ====================
2018-03-16 16:06:18.489925866 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtev_info:
	.quad	_cbtev
	.quad	1
	.quad	-4294967266
	.quad	ubtg3_srtd


==================== Asm code ====================
2018-03-16 16:06:18.490468965 UTC

.section .data.rel.ro
.align 8
.align 1
ubtg4_srtd:
	.quad	SboCL_srt+456
	.quad	41
	.quad	1374389534721


==================== Asm code ====================
2018-03-16 16:06:18.491186686 UTC

.section .text
.align 8
_cbteB:
_cbteB:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbtfF
_cbtfO:
	movq $block_cbtf5_info,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
_cbtfF:
	movq $block_cbteG_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
	.size _cbteB, .-_cbteB


==================== Asm code ====================
2018-03-16 16:06:18.491825446 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbteB_info:
	.quad	_cbteB
	.quad	0
	.quad	-4294967266
	.quad	ubtg4_srtd


==================== Asm code ====================
2018-03-16 16:06:18.492345779 UTC

.section .data.rel.ro
.align 8
.align 1
ubtg5_srtd:
	.quad	SboCL_srt+456
	.quad	41
	.quad	1374389534721


==================== Asm code ====================
2018-03-16 16:06:18.49308025 UTC

.section .text
.align 8
_cbteG:
_cbteG:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtfI
_cbtfH:
	movq $io_sbopj_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbtfM
_cbtfL:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbopj_entry
_cbtfM:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_cbtfI:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbteG, .-_cbteG


==================== Asm code ====================
2018-03-16 16:06:18.493693926 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbteG_info:
	.quad	_cbteG
	.quad	2
	.quad	-4294967266
	.quad	ubtg5_srtd


==================== Asm code ====================
2018-03-16 16:06:18.494241098 UTC

.section .data.rel.ro
.align 8
.align 1
ubtg6_srtd:
	.quad	SboCL_srt+456
	.quad	41
	.quad	1374389534721


==================== Asm code ====================
2018-03-16 16:06:18.49496769 UTC

.section .text
.align 8
_cbtf5:
_cbtf5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtfR
_cbtfQ:
	movq $io_sbopz_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbtfV
_cbtfU:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbopz_entry
_cbtfV:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_cbtfR:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbtf5, .-_cbtf5


==================== Asm code ====================
2018-03-16 16:06:18.495620174 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtf5_info:
	.quad	_cbtf5
	.quad	2
	.quad	-4294967266
	.quad	ubtg6_srtd


==================== Asm code ====================
2018-03-16 16:06:18.498169073 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho_closure
.type GHC.IO.Handle.hGetEcho_closure, @object
GHC.IO.Handle.hGetEcho_closure:
	.quad	GHC.IO.Handle.hGetEcho_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.498729338 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEcho_entry
.type GHC.IO.Handle.hGetEcho_entry, @object
GHC.IO.Handle.hGetEcho_entry:
_cbthk:
	jmp GHC.IO.Handle.hGetEcho1_entry
	.size GHC.IO.Handle.hGetEcho_entry, .-GHC.IO.Handle.hGetEcho_entry


==================== Asm code ====================
2018-03-16 16:06:18.499269074 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho_info
.type GHC.IO.Handle.hGetEcho_info, @object
GHC.IO.Handle.hGetEcho_info:
	.quad	GHC.IO.Handle.hGetEcho_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SboCL_srt+784


==================== Asm code ====================
2018-03-16 16:06:18.500864193 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hSetEcho3_bytes
.type GHC.IO.Handle.hSetEcho3_bytes, @object
GHC.IO.Handle.hSetEcho3_bytes:
	.asciz "hSetEcho"


==================== Asm code ====================
2018-03-16 16:06:18.503274378 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetEcho2_closure
.type GHC.IO.Handle.hSetEcho2_closure, @object
GHC.IO.Handle.hSetEcho2_closure:
	.quad	GHC.IO.Handle.hSetEcho2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.504076259 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetEcho2_entry
.type GHC.IO.Handle.hSetEcho2_entry, @object
GHC.IO.Handle.hSetEcho2_entry:
_cbthy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbthz
_cbthA:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbthx
_cbthw:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.hSetEcho3_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbthz:
	jmp *-16(%r13)
_cbthx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hSetEcho2_entry, .-GHC.IO.Handle.hSetEcho2_entry


==================== Asm code ====================
2018-03-16 16:06:18.504770666 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetEcho2_info
.type GHC.IO.Handle.hSetEcho2_info, @object
GHC.IO.Handle.hSetEcho2_info:
	.quad	GHC.IO.Handle.hSetEcho2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:18.519689386 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetEcho1_closure
.type GHC.IO.Handle.hSetEcho1_closure, @object
GHC.IO.Handle.hSetEcho1_closure:
	.quad	GHC.IO.Handle.hSetEcho1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.520500718 UTC

.section .text
.align 8
sat_sboqn_entry:
_cbtie:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtif
_cbtig:
	movq $block_cbtib_info,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbtib
_cbtic:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtif:
	jmp *-8(%r13)
	.size sat_sboqn_entry, .-sat_sboqn_entry


==================== Asm code ====================
2018-03-16 16:06:18.521196999 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sboqn_info:
	.quad	sat_sboqn_entry
	.quad	1
	.quad	4294967305
	.quad	8589934597
	.quad	SboCL_srt+768


==================== Asm code ====================
2018-03-16 16:06:18.521932191 UTC

.section .text
.align 8
_cbtib:
_cbtib:
	movq $block_cbtij_info,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbtij
_cbtil:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtib, .-_cbtib


==================== Asm code ====================
2018-03-16 16:06:18.522533554 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtib_info:
	.quad	_cbtib
	.quad	1
	.quad	4294967326
	.quad	SboCL_srt+768


==================== Asm code ====================
2018-03-16 16:06:18.523289257 UTC

.section .text
.align 8
_cbtij:
_cbtij:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbtiB
_cbtiu:
	movq 16(%rbp),%rax
	movq $block_cbtip_info,16(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_ppv_info,-8(%rbp)
	movq %rax,(%rbp)
	movq 32(%rbp),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp GHC.IO.Device.setEcho_entry
_cbtiB:
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.ioe_closedHandle1_entry
	.size _cbtij, .-_cbtij


==================== Asm code ====================
2018-03-16 16:06:18.523905634 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtij_info:
	.quad	_cbtij
	.quad	4
	.quad	4294967326
	.quad	SboCL_srt+768


==================== Asm code ====================
2018-03-16 16:06:18.524598864 UTC

.section .text
.align 8
_cbtip:
_cbtip:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtix
_cbtiw:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbtix:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbtip, .-_cbtip


==================== Asm code ====================
2018-03-16 16:06:18.525208236 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtip_info:
	.quad	_cbtip
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.525991877 UTC

.section .data.rel.ro
.align 8
.align 1
ubtku_srtd:
	.quad	SboCL_srt+456
	.quad	43
	.quad	4947802324993


==================== Asm code ====================
2018-03-16 16:06:18.526756189 UTC

.section .text
.align 8
io_sbopW_entry:
_cbtiK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtiO
_cbtiP:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbtiR
_cbtiQ:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq $sat_sboqn_info,-8(%r12)
	movq %rax,(%r12)
	movq $block_cbtiF_info,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rcx,%rsi
	movl $GHC.IO.Handle.hSetEcho2_closure,%r14d
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbtiR:
	movq $16,904(%r13)
_cbtiO:
	jmp *-8(%r13)
	.size io_sbopW_entry, .-io_sbopW_entry


==================== Asm code ====================
2018-03-16 16:06:18.527479781 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbopW_info:
	.quad	io_sbopW_entry
	.quad	3
	.quad	-4294967288
	.quad	4294967299
	.quad	ubtku_srtd


==================== Asm code ====================
2018-03-16 16:06:18.528152963 UTC

.section .text
.align 8
_cbtiF:
_cbtiF:
	movq $block_cbtiH_info,(%rbp)
	testb $7,%bl
	jne _cbtiH
_cbtiI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtiF, .-_cbtiF


==================== Asm code ====================
2018-03-16 16:06:18.528760453 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtiF_info:
	.quad	_cbtiF
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.530074191 UTC

.section .text
.align 8
_cbtiH:
_cbtiH:
	movq $block_cbtiN_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbtiH, .-_cbtiH


==================== Asm code ====================
2018-03-16 16:06:18.530764854 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtiH_info:
	.quad	_cbtiH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.531366458 UTC

.section .text
.align 8
_cbtiN:
_cbtiN:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbtiN, .-_cbtiN


==================== Asm code ====================
2018-03-16 16:06:18.531907754 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtiN_info:
	.quad	_cbtiN
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.53260166 UTC

.section .text
.align 8
sat_sbor3_entry:
_cbtje:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtjf
_cbtjg:
	movq $block_cbtjb_info,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbtjb
_cbtjc:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtjf:
	jmp *-8(%r13)
	.size sat_sbor3_entry, .-sat_sbor3_entry


==================== Asm code ====================
2018-03-16 16:06:18.533277013 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbor3_info:
	.quad	sat_sbor3_entry
	.quad	1
	.quad	4294967305
	.quad	8589934597
	.quad	SboCL_srt+768


==================== Asm code ====================
2018-03-16 16:06:18.533980267 UTC

.section .text
.align 8
_cbtjb:
_cbtjb:
	movq $block_cbtjj_info,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbtjj
_cbtjl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtjb, .-_cbtjb


==================== Asm code ====================
2018-03-16 16:06:18.534585223 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtjb_info:
	.quad	_cbtjb
	.quad	1
	.quad	4294967326
	.quad	SboCL_srt+768


==================== Asm code ====================
2018-03-16 16:06:18.535288759 UTC

.section .text
.align 8
_cbtjj:
_cbtjj:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbtjB
_cbtju:
	movq 16(%rbp),%rax
	movq $block_cbtjp_info,16(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_ppv_info,-8(%rbp)
	movq %rax,(%rbp)
	movq 32(%rbp),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp GHC.IO.Device.setEcho_entry
_cbtjB:
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.ioe_closedHandle1_entry
	.size _cbtjj, .-_cbtjj


==================== Asm code ====================
2018-03-16 16:06:18.535953973 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtjj_info:
	.quad	_cbtjj
	.quad	4
	.quad	4294967326
	.quad	SboCL_srt+768


==================== Asm code ====================
2018-03-16 16:06:18.536654415 UTC

.section .text
.align 8
_cbtjp:
_cbtjp:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtjx
_cbtjw:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbtjx:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbtjp, .-_cbtjp


==================== Asm code ====================
2018-03-16 16:06:18.537226117 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtjp_info:
	.quad	_cbtjp
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.538054454 UTC

.section .data.rel.ro
.align 8
.align 1
ubtkv_srtd:
	.quad	SboCL_srt+456
	.quad	43
	.quad	4947802324993


==================== Asm code ====================
2018-03-16 16:06:18.538839603 UTC

.section .text
.align 8
io_sboqC_entry:
_cbtjK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtjO
_cbtjP:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbtjR
_cbtjQ:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq $sat_sbor3_info,-8(%r12)
	movq %rax,(%r12)
	movq $block_cbtjF_info,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rcx,%rsi
	movl $GHC.IO.Handle.hSetEcho2_closure,%r14d
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbtjR:
	movq $16,904(%r13)
_cbtjO:
	jmp *-8(%r13)
	.size io_sboqC_entry, .-io_sboqC_entry


==================== Asm code ====================
2018-03-16 16:06:18.53951778 UTC

.section .data.rel.ro
.align 8
.align 1
io_sboqC_info:
	.quad	io_sboqC_entry
	.quad	3
	.quad	-4294967288
	.quad	4294967299
	.quad	ubtkv_srtd


==================== Asm code ====================
2018-03-16 16:06:18.540169183 UTC

.section .text
.align 8
_cbtjF:
_cbtjF:
	movq $block_cbtjH_info,(%rbp)
	testb $7,%bl
	jne _cbtjH
_cbtjI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtjF, .-_cbtjF


==================== Asm code ====================
2018-03-16 16:06:18.540773478 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtjF_info:
	.quad	_cbtjF
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.541411213 UTC

.section .text
.align 8
_cbtjH:
_cbtjH:
	movq $block_cbtjN_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbtjH, .-_cbtjH


==================== Asm code ====================
2018-03-16 16:06:18.541980338 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtjH_info:
	.quad	_cbtjH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.542556565 UTC

.section .text
.align 8
_cbtjN:
_cbtjN:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbtjN, .-_cbtjN


==================== Asm code ====================
2018-03-16 16:06:18.543132767 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtjN_info:
	.quad	_cbtjN
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.543680514 UTC

.section .data.rel.ro
.align 8
.align 1
ubtkw_srtd:
	.quad	SboCL_srt+160
	.quad	81
	.quad	137438953473
	.quad	102400


==================== Asm code ====================
2018-03-16 16:06:18.54434235 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetEcho1_entry
.type GHC.IO.Handle.hSetEcho1_entry, @object
GHC.IO.Handle.hSetEcho1_entry:
_cbtk1:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtk2
_cbtk3:
	movq $block_cbthM_info,-24(%rbp)
	movq %r14,%rax
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.IO.Handle.hGetEcho5_entry
_cbtk2:
	movl $GHC.IO.Handle.hSetEcho1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hSetEcho1_entry, .-GHC.IO.Handle.hSetEcho1_entry


==================== Asm code ====================
2018-03-16 16:06:18.544943619 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetEcho1_info
.type GHC.IO.Handle.hSetEcho1_info, @object
GHC.IO.Handle.hSetEcho1_info:
	.quad	GHC.IO.Handle.hSetEcho1_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901903
	.quad	ubtkw_srtd


==================== Asm code ====================
2018-03-16 16:06:18.545518115 UTC

.section .data.rel.ro
.align 8
.align 1
ubtkx_srtd:
	.quad	SboCL_srt+456
	.quad	43
	.quad	4947802324993


==================== Asm code ====================
2018-03-16 16:06:18.546119239 UTC

.section .text
.align 8
_cbthM:
_cbthM:
	movq $block_cbthO_info,(%rbp)
	testb $7,%bl
	jne _cbthO
_cbthP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbthM, .-_cbthM


==================== Asm code ====================
2018-03-16 16:06:18.54669806 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbthM_info:
	.quad	_cbthM
	.quad	2
	.quad	-4294967266
	.quad	ubtkx_srtd


==================== Asm code ====================
2018-03-16 16:06:18.547245878 UTC

.section .data.rel.ro
.align 8
.align 1
ubtky_srtd:
	.quad	SboCL_srt+456
	.quad	43
	.quad	4947802324993


==================== Asm code ====================
2018-03-16 16:06:18.547991907 UTC

.section .text
.align 8
_cbthO:
_cbthO:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbtjY
_cbtjZ:
	movq 8(%rbp),%rax
	movq $block_cbthU_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cbthU
_cbthV:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtjY:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbthO, .-_cbthO


==================== Asm code ====================
2018-03-16 16:06:18.548672567 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbthO_info:
	.quad	_cbthO
	.quad	2
	.quad	-4294967266
	.quad	ubtky_srtd


==================== Asm code ====================
2018-03-16 16:06:18.549171664 UTC

.section .data.rel.ro
.align 8
.align 1
ubtkz_srtd:
	.quad	SboCL_srt+456
	.quad	43
	.quad	4947802324993


==================== Asm code ====================
2018-03-16 16:06:18.549898422 UTC

.section .text
.align 8
_cbthU:
_cbthU:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbtka
_cbtkj:
	movq $block_cbtiZ_info,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
_cbtka:
	movq $block_cbthZ_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
	.size _cbthU, .-_cbthU


==================== Asm code ====================
2018-03-16 16:06:18.550551528 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbthU_info:
	.quad	_cbthU
	.quad	1
	.quad	-4294967266
	.quad	ubtkz_srtd


==================== Asm code ====================
2018-03-16 16:06:18.551108924 UTC

.section .data.rel.ro
.align 8
.align 1
ubtkA_srtd:
	.quad	SboCL_srt+456
	.quad	43
	.quad	4947802324993


==================== Asm code ====================
2018-03-16 16:06:18.551892039 UTC

.section .text
.align 8
_cbthZ:
_cbthZ:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbtkd
_cbtkc:
	movq $io_sbopW_info,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rax
	testq %rbx,%rbx
	je _cbtkh
_cbtkg:
	movq %rax,%rbx
	addq $32,%rbp
	jmp io_sbopW_entry
_cbtkh:
	movq %rax,%rbx
	addq $32,%rbp
	jmp stg_maskAsyncExceptions#
_cbtkd:
	movq $32,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbthZ, .-_cbthZ


==================== Asm code ====================
2018-03-16 16:06:18.552550352 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbthZ_info:
	.quad	_cbthZ
	.quad	3
	.quad	-4294967266
	.quad	ubtkA_srtd


==================== Asm code ====================
2018-03-16 16:06:18.553098807 UTC

.section .data.rel.ro
.align 8
.align 1
ubtkB_srtd:
	.quad	SboCL_srt+456
	.quad	43
	.quad	4947802324993


==================== Asm code ====================
2018-03-16 16:06:18.553879021 UTC

.section .text
.align 8
_cbtiZ:
_cbtiZ:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbtkm
_cbtkl:
	movq $io_sboqC_info,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rax
	testq %rbx,%rbx
	je _cbtkq
_cbtkp:
	movq %rax,%rbx
	addq $32,%rbp
	jmp io_sboqC_entry
_cbtkq:
	movq %rax,%rbx
	addq $32,%rbp
	jmp stg_maskAsyncExceptions#
_cbtkm:
	movq $32,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbtiZ, .-_cbtiZ


==================== Asm code ====================
2018-03-16 16:06:18.554557625 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtiZ_info:
	.quad	_cbtiZ
	.quad	3
	.quad	-4294967266
	.quad	ubtkB_srtd


==================== Asm code ====================
2018-03-16 16:06:18.556811093 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetEcho_closure
.type GHC.IO.Handle.hSetEcho_closure, @object
GHC.IO.Handle.hSetEcho_closure:
	.quad	GHC.IO.Handle.hSetEcho_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.557751523 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetEcho_entry
.type GHC.IO.Handle.hSetEcho_entry, @object
GHC.IO.Handle.hSetEcho_entry:
_cbtmv:
	jmp GHC.IO.Handle.hSetEcho1_entry
	.size GHC.IO.Handle.hSetEcho_entry, .-GHC.IO.Handle.hSetEcho_entry


==================== Asm code ====================
2018-03-16 16:06:18.558851029 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetEcho_info
.type GHC.IO.Handle.hSetEcho_info, @object
GHC.IO.Handle.hSetEcho_info:
	.quad	GHC.IO.Handle.hSetEcho_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SboCL_srt+800


==================== Asm code ====================
2018-03-16 16:06:18.560526298 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hGetBuffering3_bytes
.type GHC.IO.Handle.hGetBuffering3_bytes, @object
GHC.IO.Handle.hGetBuffering3_bytes:
	.asciz "hGetBuffering"


==================== Asm code ====================
2018-03-16 16:06:18.563038158 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetBuffering_fun_closure
.type GHC.IO.Handle.hGetBuffering_fun_closure, @object
GHC.IO.Handle.hGetBuffering_fun_closure:
	.quad	GHC.IO.Handle.hGetBuffering_fun_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.563869505 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetBuffering_fun_entry
.type GHC.IO.Handle.hGetBuffering_fun_entry, @object
GHC.IO.Handle.hGetBuffering_fun_entry:
_cbtmJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtmK
_cbtmL:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbtmI
_cbtmH:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.hGetBuffering3_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbtmK:
	jmp *-16(%r13)
_cbtmI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hGetBuffering_fun_entry, .-GHC.IO.Handle.hGetBuffering_fun_entry


==================== Asm code ====================
2018-03-16 16:06:18.564540536 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetBuffering_fun_info
.type GHC.IO.Handle.hGetBuffering_fun_info, @object
GHC.IO.Handle.hGetBuffering_fun_info:
	.quad	GHC.IO.Handle.hGetBuffering_fun_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:18.568248406 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetBuffering2_closure
.type GHC.IO.Handle.hGetBuffering2_closure, @object
GHC.IO.Handle.hGetBuffering2_closure:
	.quad	GHC.IO.Handle.hGetBuffering2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.568996908 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetBuffering2_entry
.type GHC.IO.Handle.hGetBuffering2_entry, @object
GHC.IO.Handle.hGetBuffering2_entry:
_cbtn0:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtn1
_cbtn2:
	movq $block_cbtmX_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbtmX
_cbtmY:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtn1:
	movl $GHC.IO.Handle.hGetBuffering2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hGetBuffering2_entry, .-GHC.IO.Handle.hGetBuffering2_entry


==================== Asm code ====================
2018-03-16 16:06:18.570223091 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetBuffering2_info
.type GHC.IO.Handle.hGetBuffering2_info, @object
GHC.IO.Handle.hGetBuffering2_info:
	.quad	GHC.IO.Handle.hGetBuffering2_entry
	.quad	0
	.quad	141733920782
	.quad	8589934597
	.quad	SboCL_srt+768


==================== Asm code ====================
2018-03-16 16:06:18.570925818 UTC

.section .text
.align 8
_cbtmX:
_cbtmX:
	movq $block_cbtn5_info,-16(%rbp)
	movq %rbx,%rax
	movq 55(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbtn5
_cbtn7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtmX, .-_cbtmX


==================== Asm code ====================
2018-03-16 16:06:18.571531463 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtmX_info:
	.quad	_cbtmX
	.quad	0
	.quad	4294967326
	.quad	SboCL_srt+768


==================== Asm code ====================
2018-03-16 16:06:18.572298932 UTC

.section .text
.align 8
_cbtn5:
_cbtn5:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbtnk
_cbtnd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtng
_cbtnf:
	movq $(,)_con_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbtnk:
	addq $24,%rbp
	jmp GHC.IO.Handle.Internals.ioe_closedHandle1_entry
_cbtng:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbtn5, .-_cbtn5


==================== Asm code ====================
2018-03-16 16:06:18.572983163 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtn5_info:
	.quad	_cbtn5
	.quad	2
	.quad	4294967326
	.quad	SboCL_srt+768


==================== Asm code ====================
2018-03-16 16:06:18.58119534 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetBuffering1_closure
.type GHC.IO.Handle.hGetBuffering1_closure, @object
GHC.IO.Handle.hGetBuffering1_closure:
	.quad	GHC.IO.Handle.hGetBuffering1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.582054251 UTC

.section .data.rel.ro
.align 8
.align 1
ubtoZ_srtd:
	.quad	SboCL_srt+456
	.quad	46
	.quad	52776558133249


==================== Asm code ====================
2018-03-16 16:06:18.582833945 UTC

.section .text
.align 8
io_sborG_entry:
_cbto1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbto5
_cbto6:
	movq $block_cbtnW_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movl $GHC.IO.Handle.hGetBuffering2_closure+2,%edi
	movq 7(%rbx),%rsi
	movl $GHC.IO.Handle.hGetBuffering_fun_closure,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbto5:
	jmp *-8(%r13)
	.size io_sborG_entry, .-io_sborG_entry


==================== Asm code ====================
2018-03-16 16:06:18.583469554 UTC

.section .data.rel.ro
.align 8
.align 1
io_sborG_info:
	.quad	io_sborG_entry
	.quad	2
	.quad	-4294967285
	.quad	4294967299
	.quad	ubtoZ_srtd


==================== Asm code ====================
2018-03-16 16:06:18.584127919 UTC

.section .text
.align 8
_cbtnW:
_cbtnW:
	movq $block_cbtnY_info,(%rbp)
	testb $7,%bl
	jne _cbtnY
_cbtnZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtnW, .-_cbtnW


==================== Asm code ====================
2018-03-16 16:06:18.584732944 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtnW_info:
	.quad	_cbtnW
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.585403461 UTC

.section .text
.align 8
_cbtnY:
_cbtnY:
	movq $block_cbto4_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbtnY, .-_cbtnY


==================== Asm code ====================
2018-03-16 16:06:18.585998767 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtnY_info:
	.quad	_cbtnY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.58663718 UTC

.section .text
.align 8
_cbto4:
_cbto4:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbto4, .-_cbto4


==================== Asm code ====================
2018-03-16 16:06:18.587189081 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbto4_info:
	.quad	_cbto4
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.587742526 UTC

.section .data.rel.ro
.align 8
.align 1
ubtp0_srtd:
	.quad	SboCL_srt+456
	.quad	46
	.quad	52776558133249


==================== Asm code ====================
2018-03-16 16:06:18.588478531 UTC

.section .text
.align 8
io_sborW_entry:
_cbtoq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtou
_cbtov:
	movq $block_cbtol_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movl $GHC.IO.Handle.hGetBuffering2_closure+2,%edi
	movq 7(%rbx),%rsi
	movl $GHC.IO.Handle.hGetBuffering_fun_closure,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbtou:
	jmp *-8(%r13)
	.size io_sborW_entry, .-io_sborW_entry


==================== Asm code ====================
2018-03-16 16:06:18.589162486 UTC

.section .data.rel.ro
.align 8
.align 1
io_sborW_info:
	.quad	io_sborW_entry
	.quad	2
	.quad	-4294967285
	.quad	4294967299
	.quad	ubtp0_srtd


==================== Asm code ====================
2018-03-16 16:06:18.589992102 UTC

.section .text
.align 8
_cbtol:
_cbtol:
	movq $block_cbton_info,(%rbp)
	testb $7,%bl
	jne _cbton
_cbtoo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtol, .-_cbtol


==================== Asm code ====================
2018-03-16 16:06:18.590555551 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtol_info:
	.quad	_cbtol
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.591211042 UTC

.section .text
.align 8
_cbton:
_cbton:
	movq $block_cbtot_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbton, .-_cbton


==================== Asm code ====================
2018-03-16 16:06:18.59178061 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbton_info:
	.quad	_cbton
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.592366755 UTC

.section .text
.align 8
_cbtot:
_cbtot:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbtot, .-_cbtot


==================== Asm code ====================
2018-03-16 16:06:18.592894028 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtot_info:
	.quad	_cbtot
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.593471747 UTC

.section .data.rel.ro
.align 8
.align 1
ubtp1_srtd:
	.quad	SboCL_srt+456
	.quad	47
	.quad	123145302310913


==================== Asm code ====================
2018-03-16 16:06:18.5942071 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetBuffering1_entry
.type GHC.IO.Handle.hGetBuffering1_entry, @object
GHC.IO.Handle.hGetBuffering1_entry:
_cbtoF:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtoG
_cbtoH:
	movq $block_cbtnK_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbtnK
_cbtnL:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtoG:
	movl $GHC.IO.Handle.hGetBuffering1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hGetBuffering1_entry, .-GHC.IO.Handle.hGetBuffering1_entry


==================== Asm code ====================
2018-03-16 16:06:18.594813004 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetBuffering1_info
.type GHC.IO.Handle.hGetBuffering1_info, @object
GHC.IO.Handle.hGetBuffering1_info:
	.quad	GHC.IO.Handle.hGetBuffering1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934597
	.quad	ubtp1_srtd


==================== Asm code ====================
2018-03-16 16:06:18.595376666 UTC

.section .data.rel.ro
.align 8
.align 1
ubtp2_srtd:
	.quad	SboCL_srt+456
	.quad	46
	.quad	52776558133249


==================== Asm code ====================
2018-03-16 16:06:18.596683366 UTC

.section .text
.align 8
_cbtnK:
_cbtnK:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbtoC
_cbtoD:
	movq $block_cbtoe_info,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
_cbtoC:
	movq $block_cbtnP_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
	.size _cbtnK, .-_cbtnK


==================== Asm code ====================
2018-03-16 16:06:18.597439379 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtnK_info:
	.quad	_cbtnK
	.quad	0
	.quad	-4294967266
	.quad	ubtp2_srtd


==================== Asm code ====================
2018-03-16 16:06:18.598026776 UTC

.section .data.rel.ro
.align 8
.align 1
ubtp3_srtd:
	.quad	SboCL_srt+456
	.quad	46
	.quad	52776558133249


==================== Asm code ====================
2018-03-16 16:06:18.598734803 UTC

.section .text
.align 8
_cbtnP:
_cbtnP:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtoL
_cbtoK:
	movq $io_sborG_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbtoP
_cbtoO:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sborG_entry
_cbtoP:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_cbtoL:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbtnP, .-_cbtnP


==================== Asm code ====================
2018-03-16 16:06:18.599392896 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtnP_info:
	.quad	_cbtnP
	.quad	2
	.quad	-4294967266
	.quad	ubtp3_srtd


==================== Asm code ====================
2018-03-16 16:06:18.599903688 UTC

.section .data.rel.ro
.align 8
.align 1
ubtp4_srtd:
	.quad	SboCL_srt+456
	.quad	46
	.quad	52776558133249


==================== Asm code ====================
2018-03-16 16:06:18.600611332 UTC

.section .text
.align 8
_cbtoe:
_cbtoe:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtoT
_cbtoS:
	movq $io_sborW_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbtoX
_cbtoW:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sborW_entry
_cbtoX:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_cbtoT:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbtoe, .-_cbtoe


==================== Asm code ====================
2018-03-16 16:06:18.601431746 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtoe_info:
	.quad	_cbtoe
	.quad	2
	.quad	-4294967266
	.quad	ubtp4_srtd


==================== Asm code ====================
2018-03-16 16:06:18.603656126 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetBuffering_closure
.type GHC.IO.Handle.hGetBuffering_closure, @object
GHC.IO.Handle.hGetBuffering_closure:
	.quad	GHC.IO.Handle.hGetBuffering_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.604299498 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetBuffering_entry
.type GHC.IO.Handle.hGetBuffering_entry, @object
GHC.IO.Handle.hGetBuffering_entry:
_cbtq6:
	jmp GHC.IO.Handle.hGetBuffering1_entry
	.size GHC.IO.Handle.hGetBuffering_entry, .-GHC.IO.Handle.hGetBuffering_entry


==================== Asm code ====================
2018-03-16 16:06:18.604827545 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetBuffering_info
.type GHC.IO.Handle.hGetBuffering_info, @object
GHC.IO.Handle.hGetBuffering_info:
	.quad	GHC.IO.Handle.hGetBuffering_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SboCL_srt+824


==================== Asm code ====================
2018-03-16 16:06:18.606472455 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hIsWritable4_bytes
.type GHC.IO.Handle.hIsWritable4_bytes, @object
GHC.IO.Handle.hIsWritable4_bytes:
	.asciz "hIsWritable"


==================== Asm code ====================
2018-03-16 16:06:18.608964022 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsWritable3_closure
.type GHC.IO.Handle.hIsWritable3_closure, @object
GHC.IO.Handle.hIsWritable3_closure:
	.quad	GHC.IO.Handle.hIsWritable3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.609842175 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsWritable3_entry
.type GHC.IO.Handle.hIsWritable3_entry, @object
GHC.IO.Handle.hIsWritable3_entry:
_cbtqk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtql
_cbtqm:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbtqj
_cbtqi:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.hIsWritable4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbtql:
	jmp *-16(%r13)
_cbtqj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hIsWritable3_entry, .-GHC.IO.Handle.hIsWritable3_entry


==================== Asm code ====================
2018-03-16 16:06:18.61051603 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsWritable3_info
.type GHC.IO.Handle.hIsWritable3_info, @object
GHC.IO.Handle.hIsWritable3_info:
	.quad	GHC.IO.Handle.hIsWritable3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:18.616282795 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsWritable2_closure
.type GHC.IO.Handle.hIsWritable2_closure, @object
GHC.IO.Handle.hIsWritable2_closure:
	.quad	GHC.IO.Handle.hIsWritable2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.617037268 UTC

.section .text
.align 8
sat_sbosr_entry:
_cbtqV:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtqW
_cbtqX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbtqM_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbtqM
_cbtqN:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtqW:
	jmp *-16(%r13)
	.size sat_sbosr_entry, .-sat_sbosr_entry


==================== Asm code ====================
2018-03-16 16:06:18.617689424 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbosr_info:
	.quad	sat_sbosr_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:18.618397806 UTC

.section .text
.align 8
_cbtqM:
_cbtqM:
	andl $7,%ebx
	cmpq $4,%rbx
	jb _cbtqQ
_ubtra:
	cmpq $5,%rbx
	jne _cbtqT
_cbtqT:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbtqQ:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbtqM, .-_cbtqM


==================== Asm code ====================
2018-03-16 16:06:18.619068562 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtqM_info:
	.quad	_cbtqM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.619625038 UTC

.section .data.rel.ro
.align 8
.align 1
ubtry_srtd:
	.quad	SboCL_srt+328
	.quad	64
	.quad	-9187343239835811839


==================== Asm code ====================
2018-03-16 16:06:18.620390046 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsWritable2_entry
.type GHC.IO.Handle.hIsWritable2_entry, @object
GHC.IO.Handle.hIsWritable2_entry:
_cbtrc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtrd
_cbtre:
	movq $block_cbtqy_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbtqy
_cbtqz:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtrd:
	movl $GHC.IO.Handle.hIsWritable2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsWritable2_entry, .-GHC.IO.Handle.hIsWritable2_entry


==================== Asm code ====================
2018-03-16 16:06:18.621028384 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsWritable2_info
.type GHC.IO.Handle.hIsWritable2_info, @object
GHC.IO.Handle.hIsWritable2_info:
	.quad	GHC.IO.Handle.hIsWritable2_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934597
	.quad	ubtry_srtd


==================== Asm code ====================
2018-03-16 16:06:18.621628962 UTC

.section .data.rel.ro
.align 8
.align 1
ubtrz_srtd:
	.quad	SboCL_srt+328
	.quad	56
	.quad	36028797018963969


==================== Asm code ====================
2018-03-16 16:06:18.622274472 UTC

.section .text
.align 8
_cbtqy:
_cbtqy:
	movq $block_cbtqD_info,-8(%rbp)
	movq %rbx,%rax
	movq 39(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbtqD
_cbtqE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtqy, .-_cbtqy


==================== Asm code ====================
2018-03-16 16:06:18.622846074 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtqy_info:
	.quad	_cbtqy
	.quad	0
	.quad	-4294967266
	.quad	ubtrz_srtd


==================== Asm code ====================
2018-03-16 16:06:18.623424451 UTC

.section .data.rel.ro
.align 8
.align 1
ubtrA_srtd:
	.quad	SboCL_srt+328
	.quad	56
	.quad	36028797018963969


==================== Asm code ====================
2018-03-16 16:06:18.624247558 UTC

.section .text
.align 8
_cbtqD:
_cbtqD:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbtrp
_ubtrv:
	cmpq $2,%rax
	je _cbtrt
_cbtri:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbtrl
_cbtrk:
	movq $sat_sbosr_info,-40(%r12)
	movq %rbx,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbtrt:
	addq $16,%rbp
	jmp GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry
_cbtrp:
	addq $16,%rbp
	jmp GHC.IO.Handle.Internals.ioe_closedHandle1_entry
_cbtrl:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbtqD, .-_cbtqD


==================== Asm code ====================
2018-03-16 16:06:18.624922084 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtqD_info:
	.quad	_cbtqD
	.quad	1
	.quad	-4294967266
	.quad	ubtrA_srtd


==================== Asm code ====================
2018-03-16 16:06:18.631013549 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsWritable1_closure
.type GHC.IO.Handle.hIsWritable1_closure, @object
GHC.IO.Handle.hIsWritable1_closure:
	.quad	GHC.IO.Handle.hIsWritable1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.631595852 UTC

.section .data.rel.ro
.align 8
.align 1
ubtsV_srtd:
	.quad	SboCL_srt+456
	.quad	49
	.quad	422212465065985


==================== Asm code ====================
2018-03-16 16:06:18.632300527 UTC

.section .text
.align 8
io_sbosD_entry:
_cbtsr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtsv
_cbtsw:
	movq $block_cbtsm_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movl $GHC.IO.Handle.hIsWritable2_closure+2,%edi
	movq 7(%rbx),%rsi
	movl $GHC.IO.Handle.hIsWritable3_closure,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbtsv:
	jmp *-8(%r13)
	.size io_sbosD_entry, .-io_sbosD_entry


==================== Asm code ====================
2018-03-16 16:06:18.63352383 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbosD_info:
	.quad	io_sbosD_entry
	.quad	2
	.quad	-4294967285
	.quad	4294967299
	.quad	ubtsV_srtd


==================== Asm code ====================
2018-03-16 16:06:18.634255721 UTC

.section .text
.align 8
_cbtsm:
_cbtsm:
	movq $block_cbtso_info,(%rbp)
	testb $7,%bl
	jne _cbtso
_cbtsp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtsm, .-_cbtsm


==================== Asm code ====================
2018-03-16 16:06:18.634854659 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtsm_info:
	.quad	_cbtsm
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.635485914 UTC

.section .text
.align 8
_cbtso:
_cbtso:
	movq $block_cbtsu_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbtso, .-_cbtso


==================== Asm code ====================
2018-03-16 16:06:18.636061155 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtso_info:
	.quad	_cbtso
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.636655468 UTC

.section .text
.align 8
_cbtsu:
_cbtsu:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbtsu, .-_cbtsu


==================== Asm code ====================
2018-03-16 16:06:18.637186789 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtsu_info:
	.quad	_cbtsu
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.637758261 UTC

.section .data.rel.ro
.align 8
.align 1
ubtsW_srtd:
	.quad	SboCL_srt+456
	.quad	50
	.quad	985162418487297


==================== Asm code ====================
2018-03-16 16:06:18.638486802 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsWritable1_entry
.type GHC.IO.Handle.hIsWritable1_entry, @object
GHC.IO.Handle.hIsWritable1_entry:
_cbtsG:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtsH
_cbtsI:
	movq $block_cbtsa_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbtsa
_cbtsb:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtsH:
	movl $GHC.IO.Handle.hIsWritable1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsWritable1_entry, .-GHC.IO.Handle.hIsWritable1_entry


==================== Asm code ====================
2018-03-16 16:06:18.639152945 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsWritable1_info
.type GHC.IO.Handle.hIsWritable1_info, @object
GHC.IO.Handle.hIsWritable1_info:
	.quad	GHC.IO.Handle.hIsWritable1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934597
	.quad	ubtsW_srtd


==================== Asm code ====================
2018-03-16 16:06:18.639748757 UTC

.section .data.rel.ro
.align 8
.align 1
ubtsX_srtd:
	.quad	SboCL_srt+456
	.quad	49
	.quad	422212465065985


==================== Asm code ====================
2018-03-16 16:06:18.640489574 UTC

.section .text
.align 8
_cbtsa:
_cbtsa:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbtsD
_cbtsE:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbtsD:
	movq $block_cbtsf_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
	.size _cbtsa, .-_cbtsa


==================== Asm code ====================
2018-03-16 16:06:18.641163707 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtsa_info:
	.quad	_cbtsa
	.quad	0
	.quad	-4294967266
	.quad	ubtsX_srtd


==================== Asm code ====================
2018-03-16 16:06:18.642081283 UTC

.section .data.rel.ro
.align 8
.align 1
ubtsY_srtd:
	.quad	SboCL_srt+456
	.quad	49
	.quad	422212465065985


==================== Asm code ====================
2018-03-16 16:06:18.642857863 UTC

.section .text
.align 8
_cbtsf:
_cbtsf:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtsM
_cbtsL:
	movq $io_sbosD_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbtsQ
_cbtsP:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbosD_entry
_cbtsQ:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_cbtsM:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbtsf, .-_cbtsf


==================== Asm code ====================
2018-03-16 16:06:18.643510168 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtsf_info:
	.quad	_cbtsf
	.quad	2
	.quad	-4294967266
	.quad	ubtsY_srtd


==================== Asm code ====================
2018-03-16 16:06:18.645745964 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsWritable_closure
.type GHC.IO.Handle.hIsWritable_closure, @object
GHC.IO.Handle.hIsWritable_closure:
	.quad	GHC.IO.Handle.hIsWritable_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.64638665 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsWritable_entry
.type GHC.IO.Handle.hIsWritable_entry, @object
GHC.IO.Handle.hIsWritable_entry:
_cbttE:
	jmp GHC.IO.Handle.hIsWritable1_entry
	.size GHC.IO.Handle.hIsWritable_entry, .-GHC.IO.Handle.hIsWritable_entry


==================== Asm code ====================
2018-03-16 16:06:18.646951826 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsWritable_info
.type GHC.IO.Handle.hIsWritable_info, @object
GHC.IO.Handle.hIsWritable_info:
	.quad	GHC.IO.Handle.hIsWritable_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SboCL_srt+848


==================== Asm code ====================
2018-03-16 16:06:18.648635284 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hIsReadable4_bytes
.type GHC.IO.Handle.hIsReadable4_bytes, @object
GHC.IO.Handle.hIsReadable4_bytes:
	.asciz "hIsReadable"


==================== Asm code ====================
2018-03-16 16:06:18.651333154 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsReadable3_closure
.type GHC.IO.Handle.hIsReadable3_closure, @object
GHC.IO.Handle.hIsReadable3_closure:
	.quad	GHC.IO.Handle.hIsReadable3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.652195529 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsReadable3_entry
.type GHC.IO.Handle.hIsReadable3_entry, @object
GHC.IO.Handle.hIsReadable3_entry:
_cbttS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbttT
_cbttU:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbttR
_cbttQ:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.hIsReadable4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbttT:
	jmp *-16(%r13)
_cbttR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hIsReadable3_entry, .-GHC.IO.Handle.hIsReadable3_entry


==================== Asm code ====================
2018-03-16 16:06:18.652881181 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsReadable3_info
.type GHC.IO.Handle.hIsReadable3_info, @object
GHC.IO.Handle.hIsReadable3_info:
	.quad	GHC.IO.Handle.hIsReadable3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:18.658251142 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsReadable2_closure
.type GHC.IO.Handle.hIsReadable2_closure, @object
GHC.IO.Handle.hIsReadable2_closure:
	.quad	GHC.IO.Handle.hIsReadable2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.659011762 UTC

.section .text
.align 8
sat_sbotb_entry:
_cbtus:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtut
_cbtuu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbtuk_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbtuk
_cbtul:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtut:
	jmp *-16(%r13)
	.size sat_sbotb_entry, .-sat_sbotb_entry


==================== Asm code ====================
2018-03-16 16:06:18.659679196 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbotb_info:
	.quad	sat_sbotb_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:18.660413523 UTC

.section .text
.align 8
_cbtuk:
_cbtuk:
	andl $7,%ebx
	cmpq $3,%rbx
	je _cbtuq
_ubtuE:
	cmpq $6,%rbx
	je _cbtuq
_cbtuo:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbtuq:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbtuk, .-_cbtuk


==================== Asm code ====================
2018-03-16 16:06:18.661024621 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtuk_info:
	.quad	_cbtuk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.661911995 UTC

.section .data.rel.ro
.align 8
.align 1
ubtv2_srtd:
	.quad	SboCL_srt+328
	.quad	67
	.quad	36028797018963969
	.quad	4


==================== Asm code ====================
2018-03-16 16:06:18.662628766 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsReadable2_entry
.type GHC.IO.Handle.hIsReadable2_entry, @object
GHC.IO.Handle.hIsReadable2_entry:
_cbtuG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtuH
_cbtuI:
	movq $block_cbtu6_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbtu6
_cbtu7:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtuH:
	movl $GHC.IO.Handle.hIsReadable2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsReadable2_entry, .-GHC.IO.Handle.hIsReadable2_entry


==================== Asm code ====================
2018-03-16 16:06:18.663286034 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsReadable2_info
.type GHC.IO.Handle.hIsReadable2_info, @object
GHC.IO.Handle.hIsReadable2_info:
	.quad	GHC.IO.Handle.hIsReadable2_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934597
	.quad	ubtv2_srtd


==================== Asm code ====================
2018-03-16 16:06:18.663864906 UTC

.section .data.rel.ro
.align 8
.align 1
ubtv3_srtd:
	.quad	SboCL_srt+328
	.quad	56
	.quad	36028797018963969


==================== Asm code ====================
2018-03-16 16:06:18.664517893 UTC

.section .text
.align 8
_cbtu6:
_cbtu6:
	movq $block_cbtub_info,-8(%rbp)
	movq %rbx,%rax
	movq 39(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbtub
_cbtuc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtu6, .-_cbtu6


==================== Asm code ====================
2018-03-16 16:06:18.665136416 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtu6_info:
	.quad	_cbtu6
	.quad	0
	.quad	-4294967266
	.quad	ubtv3_srtd


==================== Asm code ====================
2018-03-16 16:06:18.665749994 UTC

.section .data.rel.ro
.align 8
.align 1
ubtv4_srtd:
	.quad	SboCL_srt+328
	.quad	56
	.quad	36028797018963969


==================== Asm code ====================
2018-03-16 16:06:18.667059436 UTC

.section .text
.align 8
_cbtub:
_cbtub:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbtuT
_ubtuZ:
	cmpq $2,%rax
	je _cbtuX
_cbtuM:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbtuP
_cbtuO:
	movq $sat_sbotb_info,-40(%r12)
	movq %rbx,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbtuX:
	addq $16,%rbp
	jmp GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry
_cbtuT:
	addq $16,%rbp
	jmp GHC.IO.Handle.Internals.ioe_closedHandle1_entry
_cbtuP:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbtub, .-_cbtub


==================== Asm code ====================
2018-03-16 16:06:18.667784539 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtub_info:
	.quad	_cbtub
	.quad	1
	.quad	-4294967266
	.quad	ubtv4_srtd


==================== Asm code ====================
2018-03-16 16:06:18.673760579 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsReadable1_closure
.type GHC.IO.Handle.hIsReadable1_closure, @object
GHC.IO.Handle.hIsReadable1_closure:
	.quad	GHC.IO.Handle.hIsReadable1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.674317177 UTC

.section .data.rel.ro
.align 8
.align 1
ubtwp_srtd:
	.quad	SboCL_srt+456
	.quad	52
	.quad	3377699720527873


==================== Asm code ====================
2018-03-16 16:06:18.675059747 UTC

.section .text
.align 8
io_sbotn_entry:
_cbtvV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtvZ
_cbtw0:
	movq $block_cbtvQ_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movl $GHC.IO.Handle.hIsReadable2_closure+2,%edi
	movq 7(%rbx),%rsi
	movl $GHC.IO.Handle.hIsReadable3_closure,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbtvZ:
	jmp *-8(%r13)
	.size io_sbotn_entry, .-io_sbotn_entry


==================== Asm code ====================
2018-03-16 16:06:18.675703417 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbotn_info:
	.quad	io_sbotn_entry
	.quad	2
	.quad	-4294967285
	.quad	4294967299
	.quad	ubtwp_srtd


==================== Asm code ====================
2018-03-16 16:06:18.67636067 UTC

.section .text
.align 8
_cbtvQ:
_cbtvQ:
	movq $block_cbtvS_info,(%rbp)
	testb $7,%bl
	jne _cbtvS
_cbtvT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtvQ, .-_cbtvQ


==================== Asm code ====================
2018-03-16 16:06:18.676962415 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtvQ_info:
	.quad	_cbtvQ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.677638844 UTC

.section .text
.align 8
_cbtvS:
_cbtvS:
	movq $block_cbtvY_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbtvS, .-_cbtvS


==================== Asm code ====================
2018-03-16 16:06:18.678227127 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtvS_info:
	.quad	_cbtvS
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.678849785 UTC

.section .text
.align 8
_cbtvY:
_cbtvY:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbtvY, .-_cbtvY


==================== Asm code ====================
2018-03-16 16:06:18.679450895 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtvY_info:
	.quad	_cbtvY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.680012361 UTC

.section .data.rel.ro
.align 8
.align 1
ubtwq_srtd:
	.quad	SboCL_srt+456
	.quad	53
	.quad	7881299347898369


==================== Asm code ====================
2018-03-16 16:06:18.680740782 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsReadable1_entry
.type GHC.IO.Handle.hIsReadable1_entry, @object
GHC.IO.Handle.hIsReadable1_entry:
_cbtwa:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtwb
_cbtwc:
	movq $block_cbtvE_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbtvE
_cbtvF:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtwb:
	movl $GHC.IO.Handle.hIsReadable1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsReadable1_entry, .-GHC.IO.Handle.hIsReadable1_entry


==================== Asm code ====================
2018-03-16 16:06:18.681447706 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsReadable1_info
.type GHC.IO.Handle.hIsReadable1_info, @object
GHC.IO.Handle.hIsReadable1_info:
	.quad	GHC.IO.Handle.hIsReadable1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934597
	.quad	ubtwq_srtd


==================== Asm code ====================
2018-03-16 16:06:18.682027978 UTC

.section .data.rel.ro
.align 8
.align 1
ubtwr_srtd:
	.quad	SboCL_srt+456
	.quad	52
	.quad	3377699720527873


==================== Asm code ====================
2018-03-16 16:06:18.68275063 UTC

.section .text
.align 8
_cbtvE:
_cbtvE:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbtw7
_cbtw8:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbtw7:
	movq $block_cbtvJ_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
	.size _cbtvE, .-_cbtvE


==================== Asm code ====================
2018-03-16 16:06:18.683389779 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtvE_info:
	.quad	_cbtvE
	.quad	0
	.quad	-4294967266
	.quad	ubtwr_srtd


==================== Asm code ====================
2018-03-16 16:06:18.683951392 UTC

.section .data.rel.ro
.align 8
.align 1
ubtws_srtd:
	.quad	SboCL_srt+456
	.quad	52
	.quad	3377699720527873


==================== Asm code ====================
2018-03-16 16:06:18.68469129 UTC

.section .text
.align 8
_cbtvJ:
_cbtvJ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtwg
_cbtwf:
	movq $io_sbotn_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbtwk
_cbtwj:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbotn_entry
_cbtwk:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_cbtwg:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbtvJ, .-_cbtvJ


==================== Asm code ====================
2018-03-16 16:06:18.685599381 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtvJ_info:
	.quad	_cbtvJ
	.quad	2
	.quad	-4294967266
	.quad	ubtws_srtd


==================== Asm code ====================
2018-03-16 16:06:18.687786656 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsReadable_closure
.type GHC.IO.Handle.hIsReadable_closure, @object
GHC.IO.Handle.hIsReadable_closure:
	.quad	GHC.IO.Handle.hIsReadable_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.688403526 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsReadable_entry
.type GHC.IO.Handle.hIsReadable_entry, @object
GHC.IO.Handle.hIsReadable_entry:
_cbtx8:
	jmp GHC.IO.Handle.hIsReadable1_entry
	.size GHC.IO.Handle.hIsReadable_entry, .-GHC.IO.Handle.hIsReadable_entry


==================== Asm code ====================
2018-03-16 16:06:18.688960137 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsReadable_info
.type GHC.IO.Handle.hIsReadable_info, @object
GHC.IO.Handle.hIsReadable_info:
	.quad	GHC.IO.Handle.hIsReadable_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SboCL_srt+872


==================== Asm code ====================
2018-03-16 16:06:18.690632055 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hIsClosed4_bytes
.type GHC.IO.Handle.hIsClosed4_bytes, @object
GHC.IO.Handle.hIsClosed4_bytes:
	.asciz "hIsClosed"


==================== Asm code ====================
2018-03-16 16:06:18.693069523 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsClosed3_closure
.type GHC.IO.Handle.hIsClosed3_closure, @object
GHC.IO.Handle.hIsClosed3_closure:
	.quad	GHC.IO.Handle.hIsClosed3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.693958051 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsClosed3_entry
.type GHC.IO.Handle.hIsClosed3_entry, @object
GHC.IO.Handle.hIsClosed3_entry:
_cbtxm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtxn
_cbtxo:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbtxl
_cbtxk:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.hIsClosed4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbtxn:
	jmp *-16(%r13)
_cbtxl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hIsClosed3_entry, .-GHC.IO.Handle.hIsClosed3_entry


==================== Asm code ====================
2018-03-16 16:06:18.694674608 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsClosed3_info
.type GHC.IO.Handle.hIsClosed3_info, @object
GHC.IO.Handle.hIsClosed3_info:
	.quad	GHC.IO.Handle.hIsClosed3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:18.698906422 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsClosed2_closure
.type GHC.IO.Handle.hIsClosed2_closure, @object
GHC.IO.Handle.hIsClosed2_closure:
	.quad	GHC.IO.Handle.hIsClosed2_info


==================== Asm code ====================
2018-03-16 16:06:18.699670504 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsClosed2_entry
.type GHC.IO.Handle.hIsClosed2_entry, @object
GHC.IO.Handle.hIsClosed2_entry:
_cbtxD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtxE
_cbtxF:
	movq $block_cbtxA_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbtxA
_cbtxB:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtxE:
	movl $GHC.IO.Handle.hIsClosed2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsClosed2_entry, .-GHC.IO.Handle.hIsClosed2_entry


==================== Asm code ====================
2018-03-16 16:06:18.700283462 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsClosed2_info
.type GHC.IO.Handle.hIsClosed2_info, @object
GHC.IO.Handle.hIsClosed2_info:
	.quad	GHC.IO.Handle.hIsClosed2_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:06:18.70099122 UTC

.section .text
.align 8
_cbtxA:
_cbtxA:
	movq $block_cbtxI_info,-8(%rbp)
	movq %rbx,%rax
	movq 39(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbtxI
_cbtxK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtxA, .-_cbtxA


==================== Asm code ====================
2018-03-16 16:06:18.701608232 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtxA_info:
	.quad	_cbtxA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.703000768 UTC

.section .text
.align 8
_cbtxI:
_cbtxI:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbtxX
_cbtxQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbty0
_cbtxS:
	movq $(,)_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq $GHC.Types.False_closure+1,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbty0:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_cbtxX:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbty0
_cbtxZ:
	movq $(,)_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq $GHC.Types.True_closure+2,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbtxI, .-_cbtxI


==================== Asm code ====================
2018-03-16 16:06:18.703765314 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtxI_info:
	.quad	_cbtxI
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.711678039 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsClosed1_closure
.type GHC.IO.Handle.hIsClosed1_closure, @object
GHC.IO.Handle.hIsClosed1_closure:
	.quad	GHC.IO.Handle.hIsClosed1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.712413971 UTC

.section .text
.align 8
io_sbou4_entry:
_cbtyG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtyK
_cbtyL:
	movq $block_cbtyB_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movl $GHC.IO.Handle.hIsClosed2_closure+2,%edi
	movq 7(%rbx),%rsi
	movl $GHC.IO.Handle.hIsClosed3_closure,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbtyK:
	jmp *-8(%r13)
	.size io_sbou4_entry, .-io_sbou4_entry


==================== Asm code ====================
2018-03-16 16:06:18.713077064 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbou4_info:
	.quad	io_sbou4_entry
	.quad	2
	.quad	12884901899
	.quad	4294967299
	.quad	SboCL_srt+880


==================== Asm code ====================
2018-03-16 16:06:18.713749851 UTC

.section .text
.align 8
_cbtyB:
_cbtyB:
	movq $block_cbtyD_info,(%rbp)
	testb $7,%bl
	jne _cbtyD
_cbtyE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtyB, .-_cbtyB


==================== Asm code ====================
2018-03-16 16:06:18.714359453 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtyB_info:
	.quad	_cbtyB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.714981968 UTC

.section .text
.align 8
_cbtyD:
_cbtyD:
	movq $block_cbtyJ_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbtyD, .-_cbtyD


==================== Asm code ====================
2018-03-16 16:06:18.715571219 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtyD_info:
	.quad	_cbtyD
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.716171069 UTC

.section .text
.align 8
_cbtyJ:
_cbtyJ:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbtyJ, .-_cbtyJ


==================== Asm code ====================
2018-03-16 16:06:18.716737661 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtyJ_info:
	.quad	_cbtyJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.717480214 UTC

.section .text
.align 8
io_sbouk_entry:
_cbtz5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtz9
_cbtza:
	movq $block_cbtz0_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movl $GHC.IO.Handle.hIsClosed2_closure+2,%edi
	movq 7(%rbx),%rsi
	movl $GHC.IO.Handle.hIsClosed3_closure,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbtz9:
	jmp *-8(%r13)
	.size io_sbouk_entry, .-io_sbouk_entry


==================== Asm code ====================
2018-03-16 16:06:18.718118432 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbouk_info:
	.quad	io_sbouk_entry
	.quad	2
	.quad	12884901899
	.quad	4294967299
	.quad	SboCL_srt+880


==================== Asm code ====================
2018-03-16 16:06:18.718772578 UTC

.section .text
.align 8
_cbtz0:
_cbtz0:
	movq $block_cbtz2_info,(%rbp)
	testb $7,%bl
	jne _cbtz2
_cbtz3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtz0, .-_cbtz0


==================== Asm code ====================
2018-03-16 16:06:18.719358687 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtz0_info:
	.quad	_cbtz0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.720010739 UTC

.section .text
.align 8
_cbtz2:
_cbtz2:
	movq $block_cbtz8_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbtz2, .-_cbtz2


==================== Asm code ====================
2018-03-16 16:06:18.720567286 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtz2_info:
	.quad	_cbtz2
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.721208225 UTC

.section .text
.align 8
_cbtz8:
_cbtz8:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbtz8, .-_cbtz8


==================== Asm code ====================
2018-03-16 16:06:18.721954993 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtz8_info:
	.quad	_cbtz8
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.722658997 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsClosed1_entry
.type GHC.IO.Handle.hIsClosed1_entry, @object
GHC.IO.Handle.hIsClosed1_entry:
_cbtzk:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtzl
_cbtzm:
	movq $block_cbtyp_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbtyp
_cbtyq:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtzl:
	movl $GHC.IO.Handle.hIsClosed1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsClosed1_entry, .-GHC.IO.Handle.hIsClosed1_entry


==================== Asm code ====================
2018-03-16 16:06:18.723304996 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsClosed1_info
.type GHC.IO.Handle.hIsClosed1_info, @object
GHC.IO.Handle.hIsClosed1_info:
	.quad	GHC.IO.Handle.hIsClosed1_entry
	.quad	0
	.quad	30064771086
	.quad	8589934597
	.quad	SboCL_srt+880


==================== Asm code ====================
2018-03-16 16:06:18.724046148 UTC

.section .text
.align 8
_cbtyp:
_cbtyp:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbtzh
_cbtzi:
	movq $block_cbtyT_info,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
_cbtzh:
	movq $block_cbtyu_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
	.size _cbtyp, .-_cbtyp


==================== Asm code ====================
2018-03-16 16:06:18.724697324 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtyp_info:
	.quad	_cbtyp
	.quad	0
	.quad	12884901918
	.quad	SboCL_srt+880


==================== Asm code ====================
2018-03-16 16:06:18.72547862 UTC

.section .text
.align 8
_cbtyu:
_cbtyu:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtzq
_cbtzp:
	movq $io_sbou4_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbtzu
_cbtzt:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbou4_entry
_cbtzu:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_cbtzq:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbtyu, .-_cbtyu


==================== Asm code ====================
2018-03-16 16:06:18.726132242 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtyu_info:
	.quad	_cbtyu
	.quad	2
	.quad	12884901918
	.quad	SboCL_srt+880


==================== Asm code ====================
2018-03-16 16:06:18.72689928 UTC

.section .text
.align 8
_cbtyT:
_cbtyT:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtzy
_cbtzx:
	movq $io_sbouk_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbtzC
_cbtzB:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbouk_entry
_cbtzC:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_cbtzy:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbtyT, .-_cbtyT


==================== Asm code ====================
2018-03-16 16:06:18.727510905 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtyT_info:
	.quad	_cbtyT
	.quad	2
	.quad	12884901918
	.quad	SboCL_srt+880


==================== Asm code ====================
2018-03-16 16:06:18.729746597 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsClosed_closure
.type GHC.IO.Handle.hIsClosed_closure, @object
GHC.IO.Handle.hIsClosed_closure:
	.quad	GHC.IO.Handle.hIsClosed_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.730368267 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsClosed_entry
.type GHC.IO.Handle.hIsClosed_entry, @object
GHC.IO.Handle.hIsClosed_entry:
_cbtAz:
	jmp GHC.IO.Handle.hIsClosed1_entry
	.size GHC.IO.Handle.hIsClosed_entry, .-GHC.IO.Handle.hIsClosed_entry


==================== Asm code ====================
2018-03-16 16:06:18.730944714 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsClosed_info
.type GHC.IO.Handle.hIsClosed_info, @object
GHC.IO.Handle.hIsClosed_info:
	.quad	GHC.IO.Handle.hIsClosed_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SboCL_srt+896


==================== Asm code ====================
2018-03-16 16:06:18.732630677 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hIsOpen4_bytes
.type GHC.IO.Handle.hIsOpen4_bytes, @object
GHC.IO.Handle.hIsOpen4_bytes:
	.asciz "hIsOpen"


==================== Asm code ====================
2018-03-16 16:06:18.735481668 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsOpen3_closure
.type GHC.IO.Handle.hIsOpen3_closure, @object
GHC.IO.Handle.hIsOpen3_closure:
	.quad	GHC.IO.Handle.hIsOpen3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.736284796 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsOpen3_entry
.type GHC.IO.Handle.hIsOpen3_entry, @object
GHC.IO.Handle.hIsOpen3_entry:
_cbtAN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtAO
_cbtAP:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbtAM
_cbtAL:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.hIsOpen4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbtAO:
	jmp *-16(%r13)
_cbtAM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hIsOpen3_entry, .-GHC.IO.Handle.hIsOpen3_entry


==================== Asm code ====================
2018-03-16 16:06:18.736991125 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsOpen3_info
.type GHC.IO.Handle.hIsOpen3_info, @object
GHC.IO.Handle.hIsOpen3_info:
	.quad	GHC.IO.Handle.hIsOpen3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:18.741790971 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsOpen2_closure
.type GHC.IO.Handle.hIsOpen2_closure, @object
GHC.IO.Handle.hIsOpen2_closure:
	.quad	GHC.IO.Handle.hIsOpen2_info


==================== Asm code ====================
2018-03-16 16:06:18.742512263 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsOpen2_entry
.type GHC.IO.Handle.hIsOpen2_entry, @object
GHC.IO.Handle.hIsOpen2_entry:
_cbtB4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtB5
_cbtB6:
	movq $block_cbtB1_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbtB1
_cbtB2:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtB5:
	movl $GHC.IO.Handle.hIsOpen2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsOpen2_entry, .-GHC.IO.Handle.hIsOpen2_entry


==================== Asm code ====================
2018-03-16 16:06:18.743167522 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsOpen2_info
.type GHC.IO.Handle.hIsOpen2_info, @object
GHC.IO.Handle.hIsOpen2_info:
	.quad	GHC.IO.Handle.hIsOpen2_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:06:18.743854899 UTC

.section .text
.align 8
_cbtB1:
_cbtB1:
	movq $block_cbtB9_info,-8(%rbp)
	movq %rbx,%rax
	movq 39(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbtB9
_cbtBb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtB1, .-_cbtB1


==================== Asm code ====================
2018-03-16 16:06:18.744447056 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtB1_info:
	.quad	_cbtB1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.745657983 UTC

.section .text
.align 8
_cbtB9:
_cbtB9:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbtBo
_ubtBA:
	cmpq $2,%rcx
	je _cbtBv
_cbtBh:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtBy
_cbtBj:
	movq $(,)_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq $GHC.Types.True_closure+2,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbtBy:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_cbtBv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtBy
_cbtBx:
	movq $(,)_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq $GHC.Types.False_closure+1,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbtBo:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtBy
_cbtBq:
	movq $(,)_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq $GHC.Types.False_closure+1,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbtB9, .-_cbtB9


==================== Asm code ====================
2018-03-16 16:06:18.746479406 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtB9_info:
	.quad	_cbtB9
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.75408071 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsOpen1_closure
.type GHC.IO.Handle.hIsOpen1_closure, @object
GHC.IO.Handle.hIsOpen1_closure:
	.quad	GHC.IO.Handle.hIsOpen1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.754822175 UTC

.section .text
.align 8
io_sbouZ_entry:
_cbtCf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtCj
_cbtCk:
	movq $block_cbtCa_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movl $GHC.IO.Handle.hIsOpen2_closure+2,%edi
	movq 7(%rbx),%rsi
	movl $GHC.IO.Handle.hIsOpen3_closure,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbtCj:
	jmp *-8(%r13)
	.size io_sbouZ_entry, .-io_sbouZ_entry


==================== Asm code ====================
2018-03-16 16:06:18.755418724 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbouZ_info:
	.quad	io_sbouZ_entry
	.quad	2
	.quad	21474836491
	.quad	4294967299
	.quad	SboCL_srt+888


==================== Asm code ====================
2018-03-16 16:06:18.756043033 UTC

.section .text
.align 8
_cbtCa:
_cbtCa:
	movq $block_cbtCc_info,(%rbp)
	testb $7,%bl
	jne _cbtCc
_cbtCd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtCa, .-_cbtCa


==================== Asm code ====================
2018-03-16 16:06:18.756631004 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtCa_info:
	.quad	_cbtCa
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.757498688 UTC

.section .text
.align 8
_cbtCc:
_cbtCc:
	movq $block_cbtCi_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbtCc, .-_cbtCc


==================== Asm code ====================
2018-03-16 16:06:18.758021795 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtCc_info:
	.quad	_cbtCc
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.758633256 UTC

.section .text
.align 8
_cbtCi:
_cbtCi:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbtCi, .-_cbtCi


==================== Asm code ====================
2018-03-16 16:06:18.759163113 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtCi_info:
	.quad	_cbtCi
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.759873213 UTC

.section .text
.align 8
io_sbovf_entry:
_cbtCE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtCI
_cbtCJ:
	movq $block_cbtCz_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	movl $GHC.IO.Handle.hIsOpen2_closure+2,%edi
	movq 7(%rbx),%rsi
	movl $GHC.IO.Handle.hIsOpen3_closure,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbtCI:
	jmp *-8(%r13)
	.size io_sbovf_entry, .-io_sbovf_entry


==================== Asm code ====================
2018-03-16 16:06:18.760511733 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbovf_info:
	.quad	io_sbovf_entry
	.quad	2
	.quad	21474836491
	.quad	4294967299
	.quad	SboCL_srt+888


==================== Asm code ====================
2018-03-16 16:06:18.761149815 UTC

.section .text
.align 8
_cbtCz:
_cbtCz:
	movq $block_cbtCB_info,(%rbp)
	testb $7,%bl
	jne _cbtCB
_cbtCC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtCz, .-_cbtCz


==================== Asm code ====================
2018-03-16 16:06:18.761740412 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtCz_info:
	.quad	_cbtCz
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.76237171 UTC

.section .text
.align 8
_cbtCB:
_cbtCB:
	movq $block_cbtCH_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbtCB, .-_cbtCB


==================== Asm code ====================
2018-03-16 16:06:18.762926589 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtCB_info:
	.quad	_cbtCB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.763543275 UTC

.section .text
.align 8
_cbtCH:
_cbtCH:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbtCH, .-_cbtCH


==================== Asm code ====================
2018-03-16 16:06:18.764078909 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtCH_info:
	.quad	_cbtCH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.764777906 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsOpen1_entry
.type GHC.IO.Handle.hIsOpen1_entry, @object
GHC.IO.Handle.hIsOpen1_entry:
_cbtCT:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtCU
_cbtCV:
	movq $block_cbtBY_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbtBY
_cbtBZ:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtCU:
	movl $GHC.IO.Handle.hIsOpen1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsOpen1_entry, .-GHC.IO.Handle.hIsOpen1_entry


==================== Asm code ====================
2018-03-16 16:06:18.765440763 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsOpen1_info
.type GHC.IO.Handle.hIsOpen1_info, @object
GHC.IO.Handle.hIsOpen1_info:
	.quad	GHC.IO.Handle.hIsOpen1_entry
	.quad	0
	.quad	55834574862
	.quad	8589934597
	.quad	SboCL_srt+888


==================== Asm code ====================
2018-03-16 16:06:18.766174099 UTC

.section .text
.align 8
_cbtBY:
_cbtBY:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbtCQ
_cbtCR:
	movq $block_cbtCs_info,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
_cbtCQ:
	movq $block_cbtC3_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
	.size _cbtBY, .-_cbtBY


==================== Asm code ====================
2018-03-16 16:06:18.766828197 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtBY_info:
	.quad	_cbtBY
	.quad	0
	.quad	21474836510
	.quad	SboCL_srt+888


==================== Asm code ====================
2018-03-16 16:06:18.767572539 UTC

.section .text
.align 8
_cbtC3:
_cbtC3:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtCZ
_cbtCY:
	movq $io_sbouZ_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbtD3
_cbtD2:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbouZ_entry
_cbtD3:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_cbtCZ:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbtC3, .-_cbtC3


==================== Asm code ====================
2018-03-16 16:06:18.76822388 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtC3_info:
	.quad	_cbtC3
	.quad	2
	.quad	21474836510
	.quad	SboCL_srt+888


==================== Asm code ====================
2018-03-16 16:06:18.768934829 UTC

.section .text
.align 8
_cbtCs:
_cbtCs:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtD7
_cbtD6:
	movq $io_sbovf_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbtDb
_cbtDa:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbovf_entry
_cbtDb:
	movq %rax,%rbx
	addq $24,%rbp
	jmp stg_maskAsyncExceptions#
_cbtD7:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbtCs, .-_cbtCs


==================== Asm code ====================
2018-03-16 16:06:18.769600708 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtCs_info:
	.quad	_cbtCs
	.quad	2
	.quad	21474836510
	.quad	SboCL_srt+888


==================== Asm code ====================
2018-03-16 16:06:18.771801667 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsOpen_closure
.type GHC.IO.Handle.hIsOpen_closure, @object
GHC.IO.Handle.hIsOpen_closure:
	.quad	GHC.IO.Handle.hIsOpen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.772443692 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsOpen_entry
.type GHC.IO.Handle.hIsOpen_entry, @object
GHC.IO.Handle.hIsOpen_entry:
_cbtE8:
	jmp GHC.IO.Handle.hIsOpen1_entry
	.size GHC.IO.Handle.hIsOpen_entry, .-GHC.IO.Handle.hIsOpen_entry


==================== Asm code ====================
2018-03-16 16:06:18.773012492 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsOpen_info
.type GHC.IO.Handle.hIsOpen_info, @object
GHC.IO.Handle.hIsOpen_info:
	.quad	GHC.IO.Handle.hIsOpen_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SboCL_srt+912


==================== Asm code ====================
2018-03-16 16:06:18.776767123 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetPosn1_closure
.type GHC.IO.Handle.hGetPosn1_closure, @object
GHC.IO.Handle.hGetPosn1_closure:
	.quad	GHC.IO.Handle.hGetPosn1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.777714462 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetPosn1_entry
.type GHC.IO.Handle.hGetPosn1_entry, @object
GHC.IO.Handle.hGetPosn1_entry:
_cbtEm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtEn
_cbtEo:
	movq $block_cbtEj_info,-16(%rbp)
	movl $GHC.IO.Handle.hGetPosn2_closure+2,%edi
	movq %r14,%rsi
	movq %r14,%rax
	movl $GHC.IO.Handle.hGetPosn3_closure,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.wantSeekableHandle1_entry
_cbtEn:
	movl $GHC.IO.Handle.hGetPosn1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hGetPosn1_entry, .-GHC.IO.Handle.hGetPosn1_entry


==================== Asm code ====================
2018-03-16 16:06:18.778349829 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetPosn1_info
.type GHC.IO.Handle.hGetPosn1_info, @object
GHC.IO.Handle.hGetPosn1_info:
	.quad	GHC.IO.Handle.hGetPosn1_entry
	.quad	0
	.quad	64424509454
	.quad	8589934597
	.quad	SboCL_srt+920


==================== Asm code ====================
2018-03-16 16:06:18.779057962 UTC

.section .text
.align 8
_cbtEj:
_cbtEj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtEr
_cbtEq:
	movq $GHC.IO.Handle.HandlePosn_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbtEr:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbtEj, .-_cbtEj


==================== Asm code ====================
2018-03-16 16:06:18.779699347 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtEj_info:
	.quad	_cbtEj
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.781975018 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetPosn_closure
.type GHC.IO.Handle.hGetPosn_closure, @object
GHC.IO.Handle.hGetPosn_closure:
	.quad	GHC.IO.Handle.hGetPosn_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.782611145 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetPosn_entry
.type GHC.IO.Handle.hGetPosn_entry, @object
GHC.IO.Handle.hGetPosn_entry:
_cbtEG:
	jmp GHC.IO.Handle.hGetPosn1_entry
	.size GHC.IO.Handle.hGetPosn_entry, .-GHC.IO.Handle.hGetPosn_entry


==================== Asm code ====================
2018-03-16 16:06:18.783157143 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetPosn_info
.type GHC.IO.Handle.hGetPosn_info, @object
GHC.IO.Handle.hGetPosn_info:
	.quad	GHC.IO.Handle.hGetPosn_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SboCL_srt+920


==================== Asm code ====================
2018-03-16 16:06:18.784868646 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hClose3_bytes
.type GHC.IO.Handle.hClose3_bytes, @object
GHC.IO.Handle.hClose3_bytes:
	.asciz "hClose"


==================== Asm code ====================
2018-03-16 16:06:18.787516497 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hClose2_closure
.type GHC.IO.Handle.hClose2_closure, @object
GHC.IO.Handle.hClose2_closure:
	.quad	GHC.IO.Handle.hClose2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.788434601 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hClose2_entry
.type GHC.IO.Handle.hClose2_entry, @object
GHC.IO.Handle.hClose2_entry:
_cbtEU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtEV
_cbtEW:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbtET
_cbtES:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.hClose3_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbtEV:
	jmp *-16(%r13)
_cbtET:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hClose2_entry, .-GHC.IO.Handle.hClose2_entry


==================== Asm code ====================
2018-03-16 16:06:18.789143757 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hClose2_info
.type GHC.IO.Handle.hClose2_info, @object
GHC.IO.Handle.hClose2_info:
	.quad	GHC.IO.Handle.hClose2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:18.795676777 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$wlvl_closure
.type GHC.IO.Handle.$wlvl_closure, @object
GHC.IO.Handle.$wlvl_closure:
	.quad	GHC.IO.Handle.$wlvl_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.796477711 UTC

.section .text
.align 8
sat_sbovK_entry:
_cbtFn:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtFo
_cbtFp:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbtFg_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbtFg
_cbtFh:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtFo:
	jmp *-16(%r13)
	.size sat_sbovK_entry, .-sat_sbovK_entry


==================== Asm code ====================
2018-03-16 16:06:18.797113589 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbovK_info:
	.quad	sat_sbovK_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:06:18.797919261 UTC

.section .text
.align 8
_cbtFg:
_cbtFg:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbtFk
_cbtFl:
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cbtFk:
	movq 8(%rbp),%rax
	movq $block_cbtFs_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cbtFs
_cbtFu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtFg, .-_cbtFg


==================== Asm code ====================
2018-03-16 16:06:18.798556572 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtFg_info:
	.quad	_cbtFg
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.799342221 UTC

.section .text
.align 8
_cbtFs:
_cbtFs:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbtFA
_cbtFH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbtFK
_cbtFJ:
	movq 6(%rbx),%rax
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbtFK:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_cbtFA:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbtFK
_cbtFC:
	movq 7(%rbx),%rax
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbtFs, .-_cbtFs


==================== Asm code ====================
2018-03-16 16:06:18.800015782 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtFs_info:
	.quad	_cbtFs
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.800785789 UTC

.section .text
.align 8
sat_sbovM_entry:
_cbtFT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtFU
_cbtFV:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cbtFX
_cbtFW:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq $sat_sbovK_info,-96(%r12)
	movq %rax,-80(%r12)
	movq %rbx,-72(%r12)
	movq $GHC.Base.Just_con_info,-64(%r12)
	movq %rax,-56(%r12)
	movq $GHC.IO.Exception.IOError_con_info,-48(%r12)
	leaq -62(%r12),%rax
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq $GHC.IO.Handle.hClose2_closure,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_cbtFX:
	movq $104,904(%r13)
_cbtFU:
	jmp *-16(%r13)
	.size sat_sbovM_entry, .-sat_sbovM_entry


==================== Asm code ====================
2018-03-16 16:06:18.801613399 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbovM_info:
	.quad	sat_sbovM_entry
	.quad	5
	.quad	12884901903
	.quad	SboCL_srt+952


==================== Asm code ====================
2018-03-16 16:06:18.802356131 UTC

.section .text
.align 8
.globl GHC.IO.Handle.$wlvl_entry
.type GHC.IO.Handle.$wlvl_entry, @object
GHC.IO.Handle.$wlvl_entry:
_cbtFY:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbtG2
_cbtG1:
	movq $sat_sbovM_info,-48(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %r9,(%r12)
	leaq -48(%r12),%rbx
	jmp stg_raiseIO#
_cbtG2:
	movq $56,904(%r13)
	movl $GHC.IO.Handle.$wlvl_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.$wlvl_entry, .-GHC.IO.Handle.$wlvl_entry


==================== Asm code ====================
2018-03-16 16:06:18.803003377 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.$wlvl_info
.type GHC.IO.Handle.$wlvl_info, @object
GHC.IO.Handle.$wlvl_info:
	.quad	GHC.IO.Handle.$wlvl_entry
	.quad	0
	.quad	30064771086
	.quad	25769803801
	.quad	SboCL_srt+952


==================== Asm code ====================
2018-03-16 16:06:18.81354735 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hClose1_closure
.type GHC.IO.Handle.hClose1_closure, @object
GHC.IO.Handle.hClose1_closure:
	.quad	GHC.IO.Handle.hClose1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.814090779 UTC

.section .data.rel.ro
.align 8
.align 1
ubtIv_srtd:
	.quad	SboCL_srt+240
	.quad	94
	.quad	54043195528445953
	.quad	973078528


==================== Asm code ====================
2018-03-16 16:06:18.814901864 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hClose1_entry
.type GHC.IO.Handle.hClose1_entry, @object
GHC.IO.Handle.hClose1_entry:
_cbtGI:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtGJ
_cbtGK:
	movq $block_cbtGB_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbtGB
_cbtGC:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtGJ:
	movl $GHC.IO.Handle.hClose1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hClose1_entry, .-GHC.IO.Handle.hClose1_entry


==================== Asm code ====================
2018-03-16 16:06:18.815550474 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hClose1_info
.type GHC.IO.Handle.hClose1_info, @object
GHC.IO.Handle.hClose1_info:
	.quad	GHC.IO.Handle.hClose1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934597
	.quad	ubtIv_srtd


==================== Asm code ====================
2018-03-16 16:06:18.816114942 UTC

.section .data.rel.ro
.align 8
.align 1
ubtIw_srtd:
	.quad	SboCL_srt+240
	.quad	93
	.quad	54043195528445953
	.quad	436207616


==================== Asm code ====================
2018-03-16 16:06:18.816888496 UTC

.section .text
.align 8
_cbtGB:
_cbtGB:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbtGF
_cbtGG:
	movq $block_cbtHw_info,-16(%rbp)
	movl $GHC.IO.Handle.Internals.hClose_help1_closure+2,%r8d
	movq 14(%rbx),%rdi
	movq %rbx,%rsi
	movl $GHC.IO.Handle.hClose2_closure,%r14d
	movq 22(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wwithHandle'_entry
_cbtGF:
	movq $block_cbtGN_info,-8(%rbp)
	movl $GHC.IO.Handle.Internals.hClose_help1_closure+2,%r8d
	movq 15(%rbx),%rdi
	movq %rbx,%rsi
	movl $GHC.IO.Handle.hClose2_closure,%r14d
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.IO.Handle.Internals.$wwithHandle'_entry
	.size _cbtGB, .-_cbtGB


==================== Asm code ====================
2018-03-16 16:06:18.817597864 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtGB_info:
	.quad	_cbtGB
	.quad	0
	.quad	-4294967266
	.quad	ubtIw_srtd


==================== Asm code ====================
2018-03-16 16:06:18.818154366 UTC

.section .data.rel.ro
.align 8
.align 1
ubtIx_srtd:
	.quad	SboCL_srt+240
	.quad	93
	.quad	1
	.quad	402653184


==================== Asm code ====================
2018-03-16 16:06:18.818798848 UTC

.section .text
.align 8
_cbtGN:
_cbtGN:
	movq $block_cbtGP_info,(%rbp)
	testb $7,%bl
	jne _cbtGP
_cbtGS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtGN, .-_cbtGN


==================== Asm code ====================
2018-03-16 16:06:18.819325354 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtGN_info:
	.quad	_cbtGN
	.quad	1
	.quad	-4294967266
	.quad	ubtIx_srtd


==================== Asm code ====================
2018-03-16 16:06:18.820511518 UTC

.section .data.rel.ro
.align 8
.align 1
ubtIy_srtd:
	.quad	SboCL_srt+240
	.quad	93
	.quad	1
	.quad	402653184


==================== Asm code ====================
2018-03-16 16:06:18.82154003 UTC

.section .text
.align 8
_cbtGP:
_cbtGP:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubtIo
_cbtH8:
	movq $block_cbtH1_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbtH1
_cbtH2:
	movq (%rbx),%rax
	jmp *(%rax)
_ubtIo:
	addq $16,%rbp
	jmp _cbtHN
	.size _cbtGP, .-_cbtGP


==================== Asm code ====================
2018-03-16 16:06:18.822207883 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtGP_info:
	.quad	_cbtGP
	.quad	1
	.quad	-4294967266
	.quad	ubtIy_srtd


==================== Asm code ====================
2018-03-16 16:06:18.822758445 UTC

.section .data.rel.ro
.align 8
.align 1
ubtIz_srtd:
	.quad	SboCL_srt+240
	.quad	93
	.quad	1
	.quad	402653184


==================== Asm code ====================
2018-03-16 16:06:18.823391978 UTC

.section .text
.align 8
_cbtH1:
_cbtH1:
	movq $block_cbtH6_info,-16(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.Exception.$p1Exception_entry
	.size _cbtH1, .-_cbtH1


==================== Asm code ====================
2018-03-16 16:06:18.823984187 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtH1_info:
	.quad	_cbtH1
	.quad	1
	.quad	-4294967266
	.quad	ubtIz_srtd


==================== Asm code ====================
2018-03-16 16:06:18.824511762 UTC

.section .data.rel.ro
.align 8
.align 1
ubtIA_srtd:
	.quad	SboCL_srt+240
	.quad	93
	.quad	1
	.quad	402653184


==================== Asm code ====================
2018-03-16 16:06:18.825130306 UTC

.section .text
.align 8
_cbtH6:
_cbtH6:
	movq $block_cbtHd_info,(%rbp)
	movl $GHC.IO.Exception.$fExceptionIOException4_closure,%esi
	movq %rbx,%r14
	jmp Data.Typeable.Internal.sameTypeRep_entry
	.size _cbtH6, .-_cbtH6


==================== Asm code ====================
2018-03-16 16:06:18.82573357 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtH6_info:
	.quad	_cbtH6
	.quad	3
	.quad	-4294967266
	.quad	ubtIA_srtd


==================== Asm code ====================
2018-03-16 16:06:18.826446562 UTC

.section .text
.align 8
_cbtHd:
_cbtHd:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbtHk
_cbtHp:
	movq $block_cbtHn_info,16(%rbp)
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_0_fast
_cbtHk:
	movq 16(%rbp),%rbx
	addq $32,%rbp
	jmp stg_raiseIO#
	.size _cbtHd, .-_cbtHd


==================== Asm code ====================
2018-03-16 16:06:18.827032026 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtHd_info:
	.quad	_cbtHd
	.quad	3
	.quad	4294967326
	.quad	SboCL_srt+968


==================== Asm code ====================
2018-03-16 16:06:18.827654219 UTC

.section .text
.align 8
_cbtHn:
_cbtHn:
	movq 47(%rbx),%r9
	movq 39(%rbx),%r8
	movq 31(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.$wlvl_entry
	.size _cbtHn, .-_cbtHn


==================== Asm code ====================
2018-03-16 16:06:18.828241215 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtHn_info:
	.quad	_cbtHn
	.quad	1
	.quad	4294967326
	.quad	SboCL_srt+968


==================== Asm code ====================
2018-03-16 16:06:18.82876929 UTC

.section .data.rel.ro
.align 8
.align 1
ubtIB_srtd:
	.quad	SboCL_srt+240
	.quad	93
	.quad	54043195528445953
	.quad	436207616


==================== Asm code ====================
2018-03-16 16:06:18.829440924 UTC

.section .text
.align 8
_cbtHw:
_cbtHw:
	movq $block_cbtHy_info,(%rbp)
	movl $GHC.IO.Handle.Internals.hClose_help1_closure+2,%r8d
	movq 8(%rbp),%rdi
	movq 16(%rbp),%rsi
	movl $GHC.IO.Handle.hClose2_closure,%r14d
	movq %rbx,8(%rbp)
	jmp GHC.IO.Handle.Internals.$wwithHandle'_entry
	.size _cbtHw, .-_cbtHw


==================== Asm code ====================
2018-03-16 16:06:18.830037277 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtHw_info:
	.quad	_cbtHw
	.quad	2
	.quad	-4294967266
	.quad	ubtIB_srtd


==================== Asm code ====================
2018-03-16 16:06:18.83060173 UTC

.section .data.rel.ro
.align 8
.align 1
ubtIC_srtd:
	.quad	SboCL_srt+240
	.quad	93
	.quad	1
	.quad	402653184


==================== Asm code ====================
2018-03-16 16:06:18.831344848 UTC

.section .text
.align 8
_cbtHy:
_cbtHy:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbtHH
_cbtHG:
	movq $:_con_info,-40(%r12)
	movq %rbx,-32(%r12)
	movq $GHC.Types.[]_closure+1,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	movq $block_cbtHC_info,8(%rbp)
	leaq -14(%r12),%r14
	addq $8,%rbp
	jmp Data.Maybe.catMaybes1_entry
_cbtHH:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbtHy, .-_cbtHy


==================== Asm code ====================
2018-03-16 16:06:18.832003686 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtHy_info:
	.quad	_cbtHy
	.quad	2
	.quad	-4294967266
	.quad	ubtIC_srtd


==================== Asm code ====================
2018-03-16 16:06:18.832556886 UTC

.section .data.rel.ro
.align 8
.align 1
ubtID_srtd:
	.quad	SboCL_srt+240
	.quad	93
	.quad	1
	.quad	402653184


==================== Asm code ====================
2018-03-16 16:06:18.833263407 UTC

.section .text
.align 8
_cbtHC:
_cbtHC:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubtIn
_cbtHX:
	movq $block_cbtHQ_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbtHQ
_cbtHR:
	movq (%rbx),%rax
	jmp *(%rax)
_ubtIn:
	addq $16,%rbp
	jmp _cbtHN
	.size _cbtHC, .-_cbtHC


==================== Asm code ====================
2018-03-16 16:06:18.833853818 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtHC_info:
	.quad	_cbtHC
	.quad	1
	.quad	-4294967266
	.quad	ubtID_srtd


==================== Asm code ====================
2018-03-16 16:06:18.834441816 UTC

.section .text
.align 8
_cbtHN:
_cbtHN:
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbtHN, .-_cbtHN


==================== Asm code ====================
2018-03-16 16:06:18.835001178 UTC

.section .data.rel.ro
.align 8
.align 1
ubtIE_srtd:
	.quad	SboCL_srt+240
	.quad	93
	.quad	1
	.quad	402653184


==================== Asm code ====================
2018-03-16 16:06:18.835638765 UTC

.section .text
.align 8
_cbtHQ:
_cbtHQ:
	movq $block_cbtHV_info,-16(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.Exception.$p1Exception_entry
	.size _cbtHQ, .-_cbtHQ


==================== Asm code ====================
2018-03-16 16:06:18.836196495 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtHQ_info:
	.quad	_cbtHQ
	.quad	1
	.quad	-4294967266
	.quad	ubtIE_srtd


==================== Asm code ====================
2018-03-16 16:06:18.836745095 UTC

.section .data.rel.ro
.align 8
.align 1
ubtIF_srtd:
	.quad	SboCL_srt+240
	.quad	93
	.quad	1
	.quad	402653184


==================== Asm code ====================
2018-03-16 16:06:18.837629606 UTC

.section .text
.align 8
_cbtHV:
_cbtHV:
	movq $block_cbtI2_info,(%rbp)
	movl $GHC.IO.Exception.$fExceptionIOException4_closure,%esi
	movq %rbx,%r14
	jmp Data.Typeable.Internal.sameTypeRep_entry
	.size _cbtHV, .-_cbtHV


==================== Asm code ====================
2018-03-16 16:06:18.838183539 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtHV_info:
	.quad	_cbtHV
	.quad	3
	.quad	-4294967266
	.quad	ubtIF_srtd


==================== Asm code ====================
2018-03-16 16:06:18.83887252 UTC

.section .text
.align 8
_cbtI2:
_cbtI2:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbtI9
_cbtIe:
	movq $block_cbtIc_info,16(%rbp)
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_0_fast
_cbtI9:
	movq 16(%rbp),%rbx
	addq $32,%rbp
	jmp stg_raiseIO#
	.size _cbtI2, .-_cbtI2


==================== Asm code ====================
2018-03-16 16:06:18.839445581 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtI2_info:
	.quad	_cbtI2
	.quad	3
	.quad	4294967326
	.quad	SboCL_srt+968


==================== Asm code ====================
2018-03-16 16:06:18.840145801 UTC

.section .text
.align 8
_cbtIc:
_cbtIc:
	movq 47(%rbx),%r9
	movq 39(%rbx),%r8
	movq 31(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.$wlvl_entry
	.size _cbtIc, .-_cbtIc


==================== Asm code ====================
2018-03-16 16:06:18.840752266 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtIc_info:
	.quad	_cbtIc
	.quad	1
	.quad	4294967326
	.quad	SboCL_srt+968


==================== Asm code ====================
2018-03-16 16:06:18.842995643 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hClose_closure
.type GHC.IO.Handle.hClose_closure, @object
GHC.IO.Handle.hClose_closure:
	.quad	GHC.IO.Handle.hClose_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.843599745 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hClose_entry
.type GHC.IO.Handle.hClose_entry, @object
GHC.IO.Handle.hClose_entry:
_cbtK2:
	jmp GHC.IO.Handle.hClose1_entry
	.size GHC.IO.Handle.hClose_entry, .-GHC.IO.Handle.hClose_entry


==================== Asm code ====================
2018-03-16 16:06:18.844150618 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hClose_info
.type GHC.IO.Handle.hClose_info, @object
GHC.IO.Handle.hClose_info:
	.quad	GHC.IO.Handle.hClose_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SboCL_srt+984


==================== Asm code ====================
2018-03-16 16:06:18.845859224 UTC

.section .data
.align 8
.align 1
lvl28_rbnXa_closure:
	.quad	GHC.Types.C#_con_info
	.quad	123


==================== Asm code ====================
2018-03-16 16:06:18.848018714 UTC

.section .data
.align 8
.align 1
lvl29_rbnXb_closure:
	.quad	GHC.Types.C#_con_info
	.quad	44


==================== Asm code ====================
2018-03-16 16:06:18.850191268 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl30_rbnXc_bytes:
	.asciz "duplex (read-write)"


==================== Asm code ====================
2018-03-16 16:06:18.852646353 UTC

.section .data
.align 8
.align 1
lvl31_rbnXd_closure:
	.quad	lvl31_rbnXd_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.853560372 UTC

.section .text
.align 8
lvl31_rbnXd_entry:
_cbtKi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtKj
_cbtKk:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbtKh
_cbtKg:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl30_rbnXc_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbtKj:
	jmp *-16(%r13)
_cbtKh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl31_rbnXd_entry, .-lvl31_rbnXd_entry


==================== Asm code ====================
2018-03-16 16:06:18.854216317 UTC

.section .data.rel.ro
.align 8
.align 1
lvl31_rbnXd_info:
	.quad	lvl31_rbnXd_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:18.855781817 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl32_rbnXe_bytes:
	.asciz "none"


==================== Asm code ====================
2018-03-16 16:06:18.858137683 UTC

.section .data
.align 8
.align 1
lvl33_rbnXf_closure:
	.quad	lvl33_rbnXf_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.858897662 UTC

.section .text
.align 8
lvl33_rbnXf_entry:
_cbtKz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtKA
_cbtKB:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbtKy
_cbtKx:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl32_rbnXe_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbtKA:
	jmp *-16(%r13)
_cbtKy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl33_rbnXf_entry, .-lvl33_rbnXf_entry


==================== Asm code ====================
2018-03-16 16:06:18.85955536 UTC

.section .data.rel.ro
.align 8
.align 1
lvl33_rbnXf_info:
	.quad	lvl33_rbnXf_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:18.86112935 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl34_rbnXg_bytes:
	.asciz "line"


==================== Asm code ====================
2018-03-16 16:06:18.863504242 UTC

.section .data
.align 8
.align 1
lvl35_rbnXh_closure:
	.quad	lvl35_rbnXh_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.86434142 UTC

.section .text
.align 8
lvl35_rbnXh_entry:
_cbtKQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtKR
_cbtKS:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbtKP
_cbtKO:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl34_rbnXg_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbtKR:
	jmp *-16(%r13)
_cbtKP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl35_rbnXh_entry, .-lvl35_rbnXh_entry


==================== Asm code ====================
2018-03-16 16:06:18.864988854 UTC

.section .data.rel.ro
.align 8
.align 1
lvl35_rbnXh_info:
	.quad	lvl35_rbnXh_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:18.866945972 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl36_rbnXi_bytes:
	.asciz "showHandle"


==================== Asm code ====================
2018-03-16 16:06:18.869397295 UTC

.section .data
.align 8
.align 1
lvl37_rbnXj_closure:
	.quad	lvl37_rbnXj_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.870186887 UTC

.section .text
.align 8
lvl37_rbnXj_entry:
_cbtL7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtL8
_cbtL9:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbtL6
_cbtL5:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl36_rbnXi_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbtL8:
	jmp *-16(%r13)
_cbtL6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl37_rbnXj_entry, .-lvl37_rbnXj_entry


==================== Asm code ====================
2018-03-16 16:06:18.870894897 UTC

.section .data.rel.ro
.align 8
.align 1
lvl37_rbnXj_info:
	.quad	lvl37_rbnXj_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:18.872542033 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl38_rbnXk_bytes:
	.asciz "loc="


==================== Asm code ====================
2018-03-16 16:06:18.874280853 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl39_rbnXl_bytes:
	.asciz "type="


==================== Asm code ====================
2018-03-16 16:06:18.875891635 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl40_rbnXm_bytes:
	.asciz "buffering="


==================== Asm code ====================
2018-03-16 16:06:18.878108197 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl41_rbnXn_bytes:
	.asciz "}"


==================== Asm code ====================
2018-03-16 16:06:18.880568018 UTC

.section .data
.align 8
.align 1
lvl42_rbnXo_closure:
	.quad	lvl42_rbnXo_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.881497737 UTC

.section .text
.align 8
lvl42_rbnXo_entry:
_cbtLr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtLs
_cbtLt:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbtLq
_cbtLp:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl41_rbnXn_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbtLs:
	jmp *-16(%r13)
_cbtLq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl42_rbnXo_entry, .-lvl42_rbnXo_entry


==================== Asm code ====================
2018-03-16 16:06:18.882176311 UTC

.section .data.rel.ro
.align 8
.align 1
lvl42_rbnXo_info:
	.quad	lvl42_rbnXo_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:18.884676826 UTC

.section .data
.align 8
.align 1
lvl43_rbnXp_closure:
	.quad	lvl43_rbnXp_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.885946602 UTC

.section .text
.align 8
lvl43_rbnXp_entry:
_cbtLH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtLI
_cbtLJ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbtLG
_cbtLF:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl42_rbnXo_closure,%esi
	movl $lvl33_rbnXf_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_cbtLI:
	jmp *-16(%r13)
_cbtLG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl43_rbnXp_entry, .-lvl43_rbnXp_entry


==================== Asm code ====================
2018-03-16 16:06:18.886630065 UTC

.section .data.rel.ro
.align 8
.align 1
lvl43_rbnXp_info:
	.quad	lvl43_rbnXp_entry
	.quad	0
	.quad	12884901909
	.quad	SboCL_srt+992


==================== Asm code ====================
2018-03-16 16:06:18.88908958 UTC

.section .data
.align 8
.align 1
lvl44_rbnXq_closure:
	.quad	lvl44_rbnXq_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.889893483 UTC

.section .text
.align 8
lvl44_rbnXq_entry:
_cbtLX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtLY
_cbtLZ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbtLW
_cbtLV:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl42_rbnXo_closure,%esi
	movl $lvl35_rbnXh_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_cbtLY:
	jmp *-16(%r13)
_cbtLW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl44_rbnXq_entry, .-lvl44_rbnXq_entry


==================== Asm code ====================
2018-03-16 16:06:18.890520031 UTC

.section .data.rel.ro
.align 8
.align 1
lvl44_rbnXq_info:
	.quad	lvl44_rbnXq_entry
	.quad	0
	.quad	12884901909
	.quad	SboCL_srt+1000


==================== Asm code ====================
2018-03-16 16:06:18.892145837 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl45_rbnXr_bytes:
	.asciz "block "


==================== Asm code ====================
2018-03-16 16:06:18.893897082 UTC

.section .data
.align 8
.align 1
lvl46_rbnXs_closure:
	.quad	:_con_info
	.quad	GHC.Show.$fShow(,)2_closure
	.quad	lvl42_rbnXo_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.896333156 UTC

.section .data
.align 8
.align 1
lvl47_rbnXt_closure:
	.quad	lvl47_rbnXt_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.897161574 UTC

.section .text
.align 8
lvl47_rbnXt_entry:
_cbtMf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtMg
_cbtMh:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbtMe
_cbtMd:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl42_rbnXo_closure,%esi
	movl $GHC.IO.Handle.Types.$fShowHandleType11_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_cbtMg:
	jmp *-16(%r13)
_cbtMe:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl47_rbnXt_entry, .-lvl47_rbnXt_entry


==================== Asm code ====================
2018-03-16 16:06:18.897876644 UTC

.section .data.rel.ro
.align 8
.align 1
lvl47_rbnXt_info:
	.quad	lvl47_rbnXt_entry
	.quad	0
	.quad	21474836501
	.quad	SboCL_srt+1000


==================== Asm code ====================
2018-03-16 16:06:18.925450757 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hShow2_closure
.type GHC.IO.Handle.hShow2_closure, @object
GHC.IO.Handle.hShow2_closure:
	.quad	GHC.IO.Handle.hShow2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.92627455 UTC

.section .text
.align 8
sat_sboxg_entry:
_cbtNu:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtNA
_cbtNB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbtNm_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp stg_noDuplicate#
_cbtNA:
	jmp *-16(%r13)
	.size sat_sboxg_entry, .-sat_sboxg_entry


==================== Asm code ====================
2018-03-16 16:06:18.926889767 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sboxg_info:
	.quad	sat_sboxg_entry
	.quad	1
	.quad	4294967312
	.quad	SboCL_srt+1024


==================== Asm code ====================
2018-03-16 16:06:18.927599677 UTC

.section .text
.align 8
_cbtNm:
_cbtNm:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbtNr_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cbtNr
_cbtNs:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtNm, .-_cbtNm


==================== Asm code ====================
2018-03-16 16:06:18.92818839 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtNm_info:
	.quad	_cbtNm
	.quad	1
	.quad	4294967326
	.quad	SboCL_srt+1024


==================== Asm code ====================
2018-03-16 16:06:18.928823098 UTC

.section .text
.align 8
_cbtNr:
_cbtNr:
	movq $block_cbtNx_info,(%rbp)
	movl $lvl46_rbnXs_closure+2,%edi
	movq 31(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Show.$wshowSignedInt_entry
	.size _cbtNr, .-_cbtNr


==================== Asm code ====================
2018-03-16 16:06:18.929415506 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtNr_info:
	.quad	_cbtNr
	.quad	0
	.quad	4294967326
	.quad	SboCL_srt+1024


==================== Asm code ====================
2018-03-16 16:06:18.930110203 UTC

.section .text
.align 8
_cbtNx:
_cbtNx:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtNH
_cbtNG:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbtNH:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _cbtNx, .-_cbtNx


==================== Asm code ====================
2018-03-16 16:06:18.930738817 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtNx_info:
	.quad	_cbtNx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.93147496 UTC

.section .text
.align 8
sat_sboxo_entry:
_cbtNS:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtNY
_cbtNZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbtNP_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbtNP
_cbtNQ:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtNY:
	jmp *-16(%r13)
	.size sat_sboxo_entry, .-sat_sboxo_entry


==================== Asm code ====================
2018-03-16 16:06:18.932101746 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sboxo_info:
	.quad	sat_sboxo_entry
	.quad	1
	.quad	4294967312
	.quad	SboCL_srt+1024


==================== Asm code ====================
2018-03-16 16:06:18.932738206 UTC

.section .text
.align 8
_cbtNP:
_cbtNP:
	movq $block_cbtNV_info,(%rbp)
	movl $lvl46_rbnXs_closure+2,%edi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Show.$wshowSignedInt_entry
	.size _cbtNP, .-_cbtNP


==================== Asm code ====================
2018-03-16 16:06:18.934350107 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtNP_info:
	.quad	_cbtNP
	.quad	0
	.quad	4294967326
	.quad	SboCL_srt+1024


==================== Asm code ====================
2018-03-16 16:06:18.935122973 UTC

.section .text
.align 8
_cbtNV:
_cbtNV:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtO3
_cbtO2:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbtO3:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _cbtNV, .-_cbtNV


==================== Asm code ====================
2018-03-16 16:06:18.935747238 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtNV_info:
	.quad	_cbtNV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.936480313 UTC

.section .text
.align 8
sat_sboxq_entry:
_cbtOa:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtOb
_cbtOc:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbtN6_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbtN6
_cbtN7:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtOb:
	jmp *-16(%r13)
	.size sat_sboxq_entry, .-sat_sboxq_entry


==================== Asm code ====================
2018-03-16 16:06:18.937130752 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sboxq_info:
	.quad	sat_sboxq_entry
	.quad	2
	.quad	30064771090
	.quad	SboCL_srt+1024


==================== Asm code ====================
2018-03-16 16:06:18.937949348 UTC

.section .text
.align 8
_cbtN6:
_cbtN6:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _ubtOu
_cbtO8:
	movq $block_cbtNd_info,(%rbp)
	movq 5(%rbx),%rbx
	testb $7,%bl
	jne _cbtNd
_cbtNe:
	movq (%rbx),%rax
	jmp *(%rax)
_ubtOu:
	cmpq $2,%rax
	jb _cbtO6
_cbtO7:
	movl $lvl44_rbnXq_closure,%ebx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cbtO6:
	movl $lvl43_rbnXp_closure,%ebx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtN6, .-_cbtN6


==================== Asm code ====================
2018-03-16 16:06:18.938608474 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtN6_info:
	.quad	_cbtN6
	.quad	1
	.quad	30064771102
	.quad	SboCL_srt+1024


==================== Asm code ====================
2018-03-16 16:06:18.939461769 UTC

.section .text
.align 8
_cbtNd:
_cbtNd:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbtOk
_cbtOp:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbtOs
_cbtOr:
	movq 6(%rbx),%rax
	movq $sat_sboxo_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)4_closure,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	movl $lvl45_rbnXr_bytes,%r14d
	addq $16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_cbtOs:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
_cbtOk:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbtOs
_cbtOm:
	movq $sat_sboxg_info,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)4_closure,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	movl $lvl45_rbnXr_bytes,%r14d
	addq $16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
	.size _cbtNd, .-_cbtNd


==================== Asm code ====================
2018-03-16 16:06:18.940242249 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtNd_info:
	.quad	_cbtNd
	.quad	1
	.quad	4294967326
	.quad	SboCL_srt+1024


==================== Asm code ====================
2018-03-16 16:06:18.941027435 UTC

.section .text
.align 8
karg_sbowY_entry:
_cbtOx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtOy
_cbtOz:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbtOB
_cbtOA:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_sboxq_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movl $lvl40_rbnXm_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_cbtOB:
	movq $32,904(%r13)
_cbtOy:
	jmp *-16(%r13)
	.size karg_sbowY_entry, .-karg_sbowY_entry


==================== Asm code ====================
2018-03-16 16:06:18.941793189 UTC

.section .data.rel.ro
.align 8
.align 1
karg_sbowY_info:
	.quad	karg_sbowY_entry
	.quad	2
	.quad	30064771090
	.quad	SboCL_srt+1024


==================== Asm code ====================
2018-03-16 16:06:18.942627266 UTC

.section .text
.align 8
sat_sboxz_entry:
_cbtOJ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtOK
_cbtOL:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbtON
_cbtOM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	movq $karg_sbowY_info,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rdx,(%r12)
	movq $block_cbtOC_info,-40(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	leaq -24(%r12),%rax
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbtOC
_cbtOD:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtON:
	movq $32,904(%r13)
_cbtOK:
	jmp *-16(%r13)
	.size sat_sboxz_entry, .-sat_sboxz_entry


==================== Asm code ====================
2018-03-16 16:06:18.943338609 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sboxz_info:
	.quad	sat_sboxz_entry
	.quad	4
	.quad	2194728288271
	.quad	SboCL_srt+1024


==================== Asm code ====================
2018-03-16 16:06:18.944127116 UTC

.section .text
.align 8
_cbtOC:
_cbtOC:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbtOG
_cbtOH:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtPz
_cbtPy:
	movq $:_con_info,-16(%r12)
	movq $lvl29_rbnXb_closure+1,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	movl $lvl31_rbnXd_closure,%r14d
	addq $24,%rbp
	jmp GHC.Base.++_entry
_cbtPz:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_cbtOG:
	movq $block_cbtOQ_info,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _cbtOQ
_cbtOS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtOC, .-_cbtOC


==================== Asm code ====================
2018-03-16 16:06:18.944806156 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtOC_info:
	.quad	_cbtOC
	.quad	2
	.quad	270582939678
	.quad	SboCL_srt+1048


==================== Asm code ====================
2018-03-16 16:06:18.945876461 UTC

.section .text
.align 8
_cbtOQ:
_cbtOQ:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $5,%rcx
	jb _ubtPB
_ubtPD:
	cmpq $6,%rcx
	jb _cbtPj
_cbtPq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtPt
_cbtPs:
	movq $:_con_info,-16(%r12)
	movq $lvl29_rbnXb_closure+1,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	movl $GHC.IO.Handle.Types.$fShowHandleType1_closure,%r14d
	addq $24,%rbp
	jmp GHC.Base.++_entry
_cbtPt:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_cbtPj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtPt
_cbtPl:
	movq $:_con_info,-16(%r12)
	movq $lvl29_rbnXb_closure+1,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	movl $GHC.IO.Handle.Types.$fShowHandleType3_closure,%r14d
	addq $24,%rbp
	jmp GHC.Base.++_entry
_ubtPB:
	cmpq $4,%rcx
	jb _ubtPC
_cbtPc:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtPt
_cbtPe:
	movq $:_con_info,-16(%r12)
	movq $lvl29_rbnXb_closure+1,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	movl $GHC.IO.Handle.Types.$fShowHandleType5_closure,%r14d
	addq $24,%rbp
	jmp GHC.Base.++_entry
_ubtPC:
	cmpq $3,%rcx
	jb _cbtOY
_cbtP5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtPt
_cbtP7:
	movq $:_con_info,-16(%r12)
	movq $lvl29_rbnXb_closure+1,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	movl $GHC.IO.Handle.Types.$fShowHandleType7_closure,%r14d
	addq $24,%rbp
	jmp GHC.Base.++_entry
_cbtOY:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtPt
_cbtP0:
	movq $:_con_info,-16(%r12)
	movq $lvl29_rbnXb_closure+1,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	movl $GHC.IO.Handle.Types.$fShowHandleType9_closure,%r14d
	addq $24,%rbp
	jmp GHC.Base.++_entry
	.size _cbtOQ, .-_cbtOQ


==================== Asm code ====================
2018-03-16 16:06:18.946843155 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtOQ_info:
	.quad	_cbtOQ
	.quad	130
	.quad	133143986206
	.quad	SboCL_srt+1048


==================== Asm code ====================
2018-03-16 16:06:18.947598593 UTC

.section .text
.align 8
sat_sboxA_entry:
_cbtPG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtPH
_cbtPI:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbtPK
_cbtPJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	movq $sat_sboxz_info,-40(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -40(%r12),%rsi
	movl $lvl39_rbnXl_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_cbtPK:
	movq $48,904(%r13)
_cbtPH:
	jmp *-16(%r13)
	.size sat_sboxA_entry, .-sat_sboxA_entry


==================== Asm code ====================
2018-03-16 16:06:18.94828181 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sboxA_info:
	.quad	sat_sboxA_entry
	.quad	4
	.quad	2194728288271
	.quad	SboCL_srt+1024


==================== Asm code ====================
2018-03-16 16:06:18.949063715 UTC

.section .text
.align 8
sat_sboxC_entry:
_cbtPM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtPN
_cbtPO:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbtPQ
_cbtPP:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq $sat_sboxA_info,-64(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $lvl29_rbnXb_closure+1,-8(%r12)
	leaq -64(%r12),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_cbtPQ:
	movq $72,904(%r13)
_cbtPN:
	jmp *-16(%r13)
	.size sat_sboxC_entry, .-sat_sboxC_entry


==================== Asm code ====================
2018-03-16 16:06:18.950066886 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sboxC_info:
	.quad	sat_sboxC_entry
	.quad	5
	.quad	2194728288271
	.quad	SboCL_srt+1024


==================== Asm code ====================
2018-03-16 16:06:18.950775831 UTC

.section .text
.align 8
sat_sboxD_entry:
_cbtPR:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtPS
_cbtPT:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbtMC_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbtMC
_cbtMD:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtPS:
	jmp *-16(%r13)
	.size sat_sboxD_entry, .-sat_sboxD_entry


==================== Asm code ====================
2018-03-16 16:06:18.951437439 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sboxD_info:
	.quad	sat_sboxD_entry
	.quad	3
	.quad	4393751543823
	.quad	SboCL_srt+1024


==================== Asm code ====================
2018-03-16 16:06:18.952143612 UTC

.section .text
.align 8
_cbtMC:
_cbtMC:
	movq $block_cbtMH_info,-16(%rbp)
	movq 55(%rbx),%rax
	movq 71(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbtMH
_cbtMI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtMC, .-_cbtMC


==================== Asm code ====================
2018-03-16 16:06:18.952731967 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtMC_info:
	.quad	_cbtMC
	.quad	2
	.quad	4393751543838
	.quad	SboCL_srt+1024


==================== Asm code ====================
2018-03-16 16:06:18.953611218 UTC

.section .text
.align 8
_cbtMH:
_cbtMH:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbtQ3
_cbtPW:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbtPZ
_cbtPY:
	movq $sat_sboxC_info,-48(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	movq 32(%rbp),%rax
	movq %rax,-24(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -48(%r12),%rsi
	movl $lvl38_rbnXk_bytes,%r14d
	addq $40,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_cbtQ3:
	movl $lvl47_rbnXt_closure,%ebx
	addq $40,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cbtPZ:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbtMH, .-_cbtMH


==================== Asm code ====================
2018-03-16 16:06:18.954311992 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtMH_info:
	.quad	_cbtMH
	.quad	4
	.quad	4393751543838
	.quad	SboCL_srt+1024


==================== Asm code ====================
2018-03-16 16:06:18.955024312 UTC

.section .text
.align 8
act_sbowD_entry:
_cbtQ8:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cbtQc
_cbtQb:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $sat_sboxD_info,-56(%r12)
	movq %rax,-40(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $lvl28_rbnXa_closure+1,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cbtQc:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size act_sbowD_entry, .-act_sbowD_entry


==================== Asm code ====================
2018-03-16 16:06:18.955663514 UTC

.section .data.rel.ro
.align 8
.align 1
act_sbowD_info:
	.quad	act_sbowD_entry
	.quad	2
	.quad	4393751543819
	.quad	8589934597
	.quad	SboCL_srt+1024


==================== Asm code ====================
2018-03-16 16:06:18.956326084 UTC

.section .text
.align 8
sat_sboxT_entry:
_cbtQx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtQy
_cbtQz:
	movq $block_cbtQu_info,-16(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp act_sbowD_entry
_cbtQy:
	jmp *-8(%r13)
	.size sat_sboxT_entry, .-sat_sboxT_entry


==================== Asm code ====================
2018-03-16 16:06:18.956965188 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sboxT_info:
	.quad	sat_sboxT_entry
	.quad	1
	.quad	4393751543817
	.quad	8589934597
	.quad	SboCL_srt+1024


==================== Asm code ====================
2018-03-16 16:06:18.957714971 UTC

.section .text
.align 8
_cbtQu:
_cbtQu:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtQC
_cbtQB:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbtQC:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbtQu, .-_cbtQu


==================== Asm code ====================
2018-03-16 16:06:18.958327725 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtQu_info:
	.quad	_cbtQu
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.959047043 UTC

.section .text
.align 8
io_sboxL_entry:
_cbtQI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtQM
_cbtQN:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbtQP
_cbtQO:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq $sat_sboxT_info,-8(%r12)
	movq %rax,(%r12)
	movq $block_cbtQD_info,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rcx,%rsi
	movl $lvl37_rbnXj_closure,%r14d
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbtQP:
	movq $16,904(%r13)
_cbtQM:
	jmp *-8(%r13)
	.size io_sboxL_entry, .-io_sboxL_entry


==================== Asm code ====================
2018-03-16 16:06:18.959758583 UTC

.section .data.rel.ro
.align 8
.align 1
io_sboxL_info:
	.quad	io_sboxL_entry
	.quad	3
	.quad	1152358558948392968
	.quad	4294967299
	.quad	SboCL_srt+888


==================== Asm code ====================
2018-03-16 16:06:18.96040519 UTC

.section .text
.align 8
_cbtQD:
_cbtQD:
	movq $block_cbtQF_info,(%rbp)
	testb $7,%bl
	jne _cbtQF
_cbtQG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtQD, .-_cbtQD


==================== Asm code ====================
2018-03-16 16:06:18.960949095 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtQD_info:
	.quad	_cbtQD
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.961611565 UTC

.section .text
.align 8
_cbtQF:
_cbtQF:
	movq $block_cbtQL_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbtQF, .-_cbtQF


==================== Asm code ====================
2018-03-16 16:06:18.962195172 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtQF_info:
	.quad	_cbtQF
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.962793878 UTC

.section .text
.align 8
_cbtQL:
_cbtQL:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbtQL, .-_cbtQL


==================== Asm code ====================
2018-03-16 16:06:18.963377499 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtQL_info:
	.quad	_cbtQL
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.964047496 UTC

.section .text
.align 8
sat_sboyg_entry:
_cbtRc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtRd
_cbtRe:
	movq $block_cbtR9_info,-16(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp act_sbowD_entry
_cbtRd:
	jmp *-8(%r13)
	.size sat_sboyg_entry, .-sat_sboyg_entry


==================== Asm code ====================
2018-03-16 16:06:18.965212659 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sboyg_info:
	.quad	sat_sboyg_entry
	.quad	1
	.quad	4393751543817
	.quad	8589934597
	.quad	SboCL_srt+1024


==================== Asm code ====================
2018-03-16 16:06:18.966372213 UTC

.section .text
.align 8
_cbtR9:
_cbtR9:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtRh
_cbtRg:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbtRh:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbtR9, .-_cbtR9


==================== Asm code ====================
2018-03-16 16:06:18.966996591 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtR9_info:
	.quad	_cbtR9
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.967751931 UTC

.section .text
.align 8
io_sboy8_entry:
_cbtRn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtRr
_cbtRs:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbtRu
_cbtRt:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq $sat_sboyg_info,-8(%r12)
	movq %rax,(%r12)
	movq $block_cbtRi_info,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rcx,%rsi
	movl $lvl37_rbnXj_closure,%r14d
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cbtRu:
	movq $16,904(%r13)
_cbtRr:
	jmp *-8(%r13)
	.size io_sboy8_entry, .-io_sboy8_entry


==================== Asm code ====================
2018-03-16 16:06:18.968404411 UTC

.section .data.rel.ro
.align 8
.align 1
io_sboy8_info:
	.quad	io_sboy8_entry
	.quad	3
	.quad	1152358558948392968
	.quad	4294967299
	.quad	SboCL_srt+888


==================== Asm code ====================
2018-03-16 16:06:18.969052909 UTC

.section .text
.align 8
_cbtRi:
_cbtRi:
	movq $block_cbtRk_info,(%rbp)
	testb $7,%bl
	jne _cbtRk
_cbtRl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbtRi, .-_cbtRi


==================== Asm code ====================
2018-03-16 16:06:18.969682799 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtRi_info:
	.quad	_cbtRi
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.970293127 UTC

.section .text
.align 8
_cbtRk:
_cbtRk:
	movq $block_cbtRq_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cbtRk, .-_cbtRk


==================== Asm code ====================
2018-03-16 16:06:18.970859184 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtRk_info:
	.quad	_cbtRk
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.971393222 UTC

.section .text
.align 8
_cbtRq:
_cbtRq:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbtRq, .-_cbtRq


==================== Asm code ====================
2018-03-16 16:06:18.97192073 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtRq_info:
	.quad	_cbtRq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:18.972759446 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hShow2_entry
.type GHC.IO.Handle.hShow2_entry, @object
GHC.IO.Handle.hShow2_entry:
_cbtRE:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtRF
_cbtRG:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtRI
_cbtRH:
	movq $act_sbowD_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq $block_cbtQd_info,-16(%rbp)
	movq %rdi,%rbx
	leaq -14(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbtQd
_cbtQe:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtRI:
	movq $24,904(%r13)
_cbtRF:
	movl $GHC.IO.Handle.hShow2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hShow2_entry, .-GHC.IO.Handle.hShow2_entry


==================== Asm code ====================
2018-03-16 16:06:18.973543686 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hShow2_info
.type GHC.IO.Handle.hShow2_info, @object
GHC.IO.Handle.hShow2_info:
	.quad	GHC.IO.Handle.hShow2_entry
	.quad	0
	.quad	2305280063555239950
	.quad	17179869207
	.quad	SboCL_srt+888


==================== Asm code ====================
2018-03-16 16:06:18.974266031 UTC

.section .text
.align 8
_cbtQd:
_cbtQd:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbtRB
_cbtRC:
	movq $block_cbtQX_info,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
_cbtRB:
	movq $block_cbtQi_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
	.size _cbtQd, .-_cbtQd


==================== Asm code ====================
2018-03-16 16:06:18.974907488 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtQd_info:
	.quad	_cbtQd
	.quad	1
	.quad	1152358558948392990
	.quad	SboCL_srt+888


==================== Asm code ====================
2018-03-16 16:06:18.975643834 UTC

.section .text
.align 8
_cbtQi:
_cbtQi:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbtRM
_cbtRL:
	movq $io_sboxL_info,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rax
	testq %rbx,%rbx
	je _cbtRQ
_cbtRP:
	movq %rax,%rbx
	addq $32,%rbp
	jmp io_sboxL_entry
_cbtRQ:
	movq %rax,%rbx
	addq $32,%rbp
	jmp stg_maskAsyncExceptions#
_cbtRM:
	movq $32,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbtQi, .-_cbtQi


==================== Asm code ====================
2018-03-16 16:06:18.976316475 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtQi_info:
	.quad	_cbtQi
	.quad	3
	.quad	1152358558948392990
	.quad	SboCL_srt+888


==================== Asm code ====================
2018-03-16 16:06:18.977035488 UTC

.section .text
.align 8
_cbtQX:
_cbtQX:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbtRU
_cbtRT:
	movq $io_sboy8_info,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rax
	testq %rbx,%rbx
	je _cbtRY
_cbtRX:
	movq %rax,%rbx
	addq $32,%rbp
	jmp io_sboy8_entry
_cbtRY:
	movq %rax,%rbx
	addq $32,%rbp
	jmp stg_maskAsyncExceptions#
_cbtRU:
	movq $32,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cbtQX, .-_cbtQX


==================== Asm code ====================
2018-03-16 16:06:18.977659764 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtQX_info:
	.quad	_cbtQX
	.quad	3
	.quad	1152358558948392990
	.quad	SboCL_srt+888


==================== Asm code ====================
2018-03-16 16:06:18.98083514 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hShow1_closure
.type GHC.IO.Handle.hShow1_closure, @object
GHC.IO.Handle.hShow1_closure:
	.quad	GHC.IO.Handle.hShow1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.982012313 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hShow1_entry
.type GHC.IO.Handle.hShow1_entry, @object
GHC.IO.Handle.hShow1_entry:
_cbtV2:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbtV3
_cbtV4:
	movq $block_cbtUV_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbtUV
_cbtUW:
	movq (%rbx),%rax
	jmp *(%rax)
_cbtV3:
	movl $GHC.IO.Handle.hShow1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hShow1_entry, .-GHC.IO.Handle.hShow1_entry


==================== Asm code ====================
2018-03-16 16:06:18.982652913 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hShow1_info
.type GHC.IO.Handle.hShow1_info, @object
GHC.IO.Handle.hShow1_info:
	.quad	GHC.IO.Handle.hShow1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	SboCL_srt+1112


==================== Asm code ====================
2018-03-16 16:06:18.983386559 UTC

.section .text
.align 8
_cbtUV:
_cbtUV:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbtUZ
_cbtV0:
	movq %rbx,%rdi
	movl $GHC.Types.True_closure+2,%esi
	movq 6(%rbx),%r14
	addq $8,%rbp
	jmp GHC.IO.Handle.hShow2_entry
_cbtUZ:
	movq %rbx,%rdi
	movl $GHC.Types.False_closure+1,%esi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.IO.Handle.hShow2_entry
	.size _cbtUV, .-_cbtUV


==================== Asm code ====================
2018-03-16 16:06:18.984020244 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbtUV_info:
	.quad	_cbtUV
	.quad	0
	.quad	4294967326
	.quad	SboCL_srt+1112


==================== Asm code ====================
2018-03-16 16:06:18.986029415 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hShow_closure
.type GHC.IO.Handle.hShow_closure, @object
GHC.IO.Handle.hShow_closure:
	.quad	GHC.IO.Handle.hShow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:18.986606882 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hShow_entry
.type GHC.IO.Handle.hShow_entry, @object
GHC.IO.Handle.hShow_entry:
_cbtVr:
	jmp GHC.IO.Handle.hShow1_entry
	.size GHC.IO.Handle.hShow_entry, .-GHC.IO.Handle.hShow_entry


==================== Asm code ====================
2018-03-16 16:06:18.987160764 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hShow_info
.type GHC.IO.Handle.hShow_info, @object
GHC.IO.Handle.hShow_info:
	.quad	GHC.IO.Handle.hShow_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SboCL_srt+1120


==================== Asm code ====================
2018-03-16 16:06:18.989506127 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.HandlePosn_closure
.type GHC.IO.Handle.HandlePosn_closure, @object
GHC.IO.Handle.HandlePosn_closure:
	.quad	GHC.IO.Handle.HandlePosn_info


==================== Asm code ====================
2018-03-16 16:06:18.990238361 UTC

.section .text
.align 8
GHC.IO.Handle.HandlePosn_entry:
_cbtVD:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbtVH
_cbtVG:
	movq $GHC.IO.Handle.HandlePosn_con_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cbtVH:
	movq $24,904(%r13)
	movl $GHC.IO.Handle.HandlePosn_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.HandlePosn_entry, .-GHC.IO.Handle.HandlePosn_entry


==================== Asm code ====================
2018-03-16 16:06:18.990866773 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.IO.Handle.HandlePosn_info:
	.quad	GHC.IO.Handle.HandlePosn_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:06:18.992845052 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
ibrxi_str:
	.asciz "base:GHC.IO.Handle.HandlePosn"


==================== Asm code ====================
2018-03-16 16:06:18.993845636 UTC

.section .text
.align 8
.globl GHC.IO.Handle.HandlePosn_con_entry
.type GHC.IO.Handle.HandlePosn_con_entry, @object
GHC.IO.Handle.HandlePosn_con_entry:
_cbtVN:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.HandlePosn_con_entry, .-GHC.IO.Handle.HandlePosn_con_entry


==================== Asm code ====================
2018-03-16 16:06:18.994418475 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.HandlePosn_con_info
.type GHC.IO.Handle.HandlePosn_con_info, @object
GHC.IO.Handle.HandlePosn_con_info:
	.quad	GHC.IO.Handle.HandlePosn_con_entry
	.quad	2
	.quad	4
	.quad	ibrxi_str


==================== Asm code ====================
2018-03-16 16:06:18.998278325 UTC

.section .data.rel.ro
.align 8
.align 1
SboCL_srt:
	.quad	GHC.Show.$w$cshowsPrec4_closure
	.quad	GHC.IO.Handle.$w$cshowsPrec_closure
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_closure
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshow_closure
	.quad	GHC.IO.Handle.$fShowHandlePosn1_closure
	.quad	GHC.IO.Handle.Internals.hLookAhead_1_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle_1_closure
	.quad	GHC.IO.Handle.hLookAhead2_closure
	.quad	GHC.IO.Handle.hLookAhead1_closure
	.quad	GHC.IO.Handle.Internals.wantWritableHandle1_closure
	.quad	GHC.IO.Handle.hFlush2_closure
	.quad	GHC.IO.Handle.hFlush1_closure
	.quad	GHC.IO.Handle.Internals.flushBuffer1_closure
	.quad	GHC.IO.Handle.hFlushAll2_closure
	.quad	GHC.IO.Handle.Internals.$wdo_operation_closure
	.quad	GHC.IO.Handle.hFlushAll3_closure
	.quad	GHC.IO.Handle.hFlushAll1_closure
	.quad	GHC.IO.Handle.Internals.ioe_closedHandle1_closure
	.quad	GHC.IO.Handle.hGetEcho6_closure
	.quad	GHC.IO.Handle.hGetEcho_fun_closure
	.quad	GHC.IO.Handle.hGetEcho5_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	lvl1_rbnWC_closure
	.quad	lvl3_rbnWE_closure
	.quad	ioe_dupHandlesNotCompatible_rbnWF_closure
	.quad	GHC.IO.Encoding.getLocaleEncoding1_closure
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle5_closure
	.quad	dupHandle__rbnWK_closure
	.quad	GHC.IO.failIO1_closure
	.quad	lvl5_rbnWM_closure
	.quad	Data.Typeable.Internal.sameTypeRep_closure
	.quad	dupHandleTo_rbnWN_closure
	.quad	GHC.IO.Handle.Internals.withAllHandles__1_closure
	.quad	GHC.IO.Handle.$whSetNewlineMode_closure
	.quad	GHC.IO.Handle.hSetNewlineMode2_closure
	.quad	GHC.IO.Handle.hSetNewlineMode1_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	GHC.IO.Handle.Internals.flushCharBuffer2_closure
	.quad	lvl11_rbnWT_closure
	.quad	GHC.IO.Handle.hSetBinaryMode1_closure
	.quad	lvl9_rbnWR_closure
	.quad	GHC.IO.Handle.Internals.ioe_semiclosedHandle1_closure
	.quad	GHC.IO.Handle.hIsSeekable2_closure
	.quad	GHC.IO.Handle.hIsSeekable3_closure
	.quad	GHC.IO.Handle.hIsSeekable1_closure
	.quad	GHC.Integer.Type.plusInteger_closure
	.quad	GHC.Integer.Type.minusInteger_closure
	.quad	GHC.IO.Handle.hGetPosn2_closure
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle1_closure
	.quad	GHC.IO.Handle.hGetPosn3_closure
	.quad	GHC.IO.Handle.hTell1_closure
	.quad	lvl14_rbnWW_closure
	.quad	GHC.IO.Handle.Internals.flushBuffer2_closure
	.quad	GHC.IO.Handle.hSeek1_closure
	.quad	lvl13_rbnWV_closure
	.quad	GHC.IO.Handle.hSetPosn1_closure
	.quad	GHC.IO.Handle.hGetEncoding3_closure
	.quad	GHC.IO.Handle.Internals.$wdo_operation_closure
	.quad	GHC.IO.Handle.hGetEncoding1_closure
	.quad	lvl18_rbnX0_closure
	.quad	GHC.IO.Handle.hSetEncoding1_closure
	.quad	lvl16_rbnWY_closure
	.quad	GHC.IO.Handle.Internals.$wioe_bufsiz_closure
	.quad	GHC.IO.Handle.Internals.ioe_closedHandle1_closure
	.quad	GHC.IO.Handle.hSetBuffering1_closure
	.quad	GHC.IO.Handle.hSetBuffering2_closure
	.quad	GHC.IO.Handle.hIsEOF3_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle_1_closure
	.quad	GHC.IO.Handle.hIsEOF1_closure
	.quad	GHC.IO.Handle.FD.stdin_closure
	.quad	GHC.IO.Handle.isEOF1_closure
	.quad	lvl20_rbnX2_closure
	.quad	GHC.IO.Handle.hSetFileSize1_closure
	.quad	GHC.IO.Handle.hFileSize5_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	sat_sbojQ_closure
	.quad	GHC.IO.Handle.hFileSize3_closure
	.quad	GHC.IO.Handle.hFileSize4_closure
	.quad	GHC.IO.Handle.hFileSize10_closure
	.quad	GHC.IO.Handle.hFileSize2_closure
	.quad	GHC.IO.Handle.hFileSize8_closure
	.quad	GHC.IO.Handle.hFileSize1_closure
	.quad	lvl21_rbnX3_closure
	.quad	dupHandleTo_rbnWN_closure
	.quad	GHC.IO.Handle.Internals.hClose_help1_closure
	.quad	GHC.IO.Handle.Internals.$wwithHandle'_closure
	.quad	GHC.IO.Handle.Internals.$wwithHandle__'_closure
	.quad	GHC.IO.Handle.hDuplicateTo1_closure
	.quad	lvl25_rbnX7_closure
	.quad	GHC.IO.failIO1_closure
	.quad	lvl27_rbnX9_closure
	.quad	dupHandle__rbnWK_closure
	.quad	lvl7_rbnWP_closure
	.quad	GHC.IO.Handle.hDuplicate1_closure
	.quad	lvl23_rbnX5_closure
	.quad	GHC.IO.Handle.hGetEcho2_closure
	.quad	GHC.IO.Handle.Internals.ioe_closedHandle1_closure
	.quad	GHC.IO.Handle.hGetEcho3_closure
	.quad	GHC.IO.Handle.hGetEcho1_closure
	.quad	GHC.IO.Handle.hSetEcho2_closure
	.quad	GHC.IO.Handle.hSetEcho1_closure
	.quad	GHC.IO.Handle.hGetBuffering2_closure
	.quad	GHC.IO.Handle.hGetBuffering_fun_closure
	.quad	GHC.IO.Handle.hGetBuffering1_closure
	.quad	GHC.IO.Handle.hIsWritable2_closure
	.quad	GHC.IO.Handle.hIsWritable3_closure
	.quad	GHC.IO.Handle.hIsWritable1_closure
	.quad	GHC.IO.Handle.hIsReadable2_closure
	.quad	GHC.IO.Handle.hIsReadable3_closure
	.quad	GHC.IO.Handle.hIsReadable1_closure
	.quad	GHC.IO.Handle.hIsClosed3_closure
	.quad	GHC.IO.Handle.Internals.$wdo_operation_closure
	.quad	GHC.IO.Handle.hIsClosed1_closure
	.quad	GHC.IO.Handle.hIsOpen3_closure
	.quad	GHC.IO.Handle.hIsOpen1_closure
	.quad	GHC.IO.Handle.hGetPosn1_closure
	.quad	GHC.IO.Handle.hGetPosn3_closure
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle1_closure
	.quad	GHC.IO.Handle.hGetPosn2_closure
	.quad	GHC.IO.Handle.hClose2_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	GHC.IO.Handle.$wlvl_closure
	.quad	GHC.IO.Exception.$fExceptionIOException4_closure
	.quad	GHC.IO.Handle.hClose1_closure
	.quad	lvl33_rbnXf_closure
	.quad	lvl42_rbnXo_closure
	.quad	lvl35_rbnXh_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType11_closure
	.quad	lvl46_rbnXs_closure
	.quad	lvl43_rbnXp_closure
	.quad	lvl44_rbnXq_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType1_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType3_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType5_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType7_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType9_closure
	.quad	lvl31_rbnXd_closure
	.quad	lvl47_rbnXt_closure
	.quad	lvl37_rbnXj_closure
	.quad	GHC.IO.Handle.hShow2_closure
	.quad	GHC.IO.Handle.hShow1_closure


==================== Asm code ====================
2018-03-16 16:06:27.859196328 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$w$c==_closure
.type GHC.IO.Handle.$w$c==_closure, @object
GHC.IO.Handle.$w$c==_closure:
	.quad	GHC.IO.Handle.$w$c==_info


==================== Asm code ====================
2018-03-16 16:06:27.86008374 UTC

.section .text
.align 8
.globl GHC.IO.Handle.$w$c==_entry
.type GHC.IO.Handle.$w$c==_entry, @object
GHC.IO.Handle.$w$c==_entry:
_cbux5:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbux6
_cbux7:
	leaq block_cbux0_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	movq %r8,%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_cbux6:
	leaq GHC.IO.Handle.$w$c==_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.$w$c==_entry, .-GHC.IO.Handle.$w$c==_entry


==================== Asm code ====================
2018-03-16 16:06:27.860751136 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.$w$c==_info
.type GHC.IO.Handle.$w$c==_info, @object
GHC.IO.Handle.$w$c==_info:
	.quad	GHC.IO.Handle.$w$c==_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:06:27.861526061 UTC

.section .text
.align 8
_cbux0:
_cbux0:
	cmpq $1,%rbx
	je _cbux4
_cbux3:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbux4:
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp *GHC.IO.Handle.Types.$fEqHandle_$c==_entry@gotpcrel(%rip)
	.size _cbux0, .-_cbux0


==================== Asm code ====================
2018-03-16 16:06:27.862176625 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbux0_info:
	.quad	_cbux0
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:27.865674203 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$fEqHandlePosn_$c==_closure
.type GHC.IO.Handle.$fEqHandlePosn_$c==_closure, @object
GHC.IO.Handle.$fEqHandlePosn_$c==_closure:
	.quad	GHC.IO.Handle.$fEqHandlePosn_$c==_info


==================== Asm code ====================
2018-03-16 16:06:27.866498447 UTC

.section .text
.align 8
.globl GHC.IO.Handle.$fEqHandlePosn_$c==_entry
.type GHC.IO.Handle.$fEqHandlePosn_$c==_entry, @object
GHC.IO.Handle.$fEqHandlePosn_$c==_entry:
_cbuxw:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuxA
_cbuxB:
	leaq block_cbuxt_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbuxt
_cbuxu:
	movq (%rbx),%rax
	jmp *(%rax)
_cbuxA:
	leaq GHC.IO.Handle.$fEqHandlePosn_$c==_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.$fEqHandlePosn_$c==_entry, .-GHC.IO.Handle.$fEqHandlePosn_$c==_entry


==================== Asm code ====================
2018-03-16 16:06:27.867213905 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.$fEqHandlePosn_$c==_info
.type GHC.IO.Handle.$fEqHandlePosn_$c==_info, @object
GHC.IO.Handle.$fEqHandlePosn_$c==_info:
	.quad	GHC.IO.Handle.$fEqHandlePosn_$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:06:27.867988876 UTC

.section .text
.align 8
_cbuxt:
_cbuxt:
	leaq block_cbuxz_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbuxz
_cbuxD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbuxt, .-_cbuxt


==================== Asm code ====================
2018-03-16 16:06:27.868691268 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuxt_info:
	.quad	_cbuxt
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:27.870551558 UTC

.section .text
.align 8
_cbuxz:
_cbuxz:
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.$w$c==_entry
	.size _cbuxz, .-_cbuxz


==================== Asm code ====================
2018-03-16 16:06:27.871225561 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuxz_info:
	.quad	_cbuxz
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:27.878303778 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$fEqHandlePosn_$c/=_closure
.type GHC.IO.Handle.$fEqHandlePosn_$c/=_closure, @object
GHC.IO.Handle.$fEqHandlePosn_$c/=_closure:
	.quad	GHC.IO.Handle.$fEqHandlePosn_$c/=_info


==================== Asm code ====================
2018-03-16 16:06:27.879113957 UTC

.section .text
.align 8
.globl GHC.IO.Handle.$fEqHandlePosn_$c/=_entry
.type GHC.IO.Handle.$fEqHandlePosn_$c/=_entry, @object
GHC.IO.Handle.$fEqHandlePosn_$c/=_entry:
_cbuy6:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuya
_cbuyb:
	leaq block_cbuy3_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbuy3
_cbuy4:
	movq (%rbx),%rax
	jmp *(%rax)
_cbuya:
	leaq GHC.IO.Handle.$fEqHandlePosn_$c/=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.$fEqHandlePosn_$c/=_entry, .-GHC.IO.Handle.$fEqHandlePosn_$c/=_entry


==================== Asm code ====================
2018-03-16 16:06:27.879788945 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.$fEqHandlePosn_$c/=_info
.type GHC.IO.Handle.$fEqHandlePosn_$c/=_info, @object
GHC.IO.Handle.$fEqHandlePosn_$c/=_info:
	.quad	GHC.IO.Handle.$fEqHandlePosn_$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:06:27.880517139 UTC

.section .text
.align 8
_cbuy3:
_cbuy3:
	leaq block_cbuy9_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbuy9
_cbuyd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbuy3, .-_cbuy3


==================== Asm code ====================
2018-03-16 16:06:27.881162648 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuy3_info:
	.quad	_cbuy3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:27.881848163 UTC

.section .text
.align 8
_cbuy9:
_cbuy9:
	leaq block_cbuyh_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,8(%rbp)
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _cbuy9, .-_cbuy9


==================== Asm code ====================
2018-03-16 16:06:27.88248307 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuy9_info:
	.quad	_cbuy9
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:27.883182841 UTC

.section .text
.align 8
_cbuyh:
_cbuyh:
	cmpq $1,%rbx
	je _cbuyt
_ubuzA:
	addq $24,%rbp
	jmp _cbuzm
_cbuyt:
	leaq block_cbuyr_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _cbuyr
_cbuyu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbuyh, .-_cbuyh


==================== Asm code ====================
2018-03-16 16:06:27.883830756 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuyh_info:
	.quad	_cbuyh
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:27.884632491 UTC

.section .text
.align 8
_cbuyr:
_cbuyr:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbuyB
_cbuz6:
	leaq block_cbuz4_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _cbuz4
_cbuz7:
	movq (%rbx),%rax
	jmp *(%rax)
_cbuyB:
	leaq block_cbuyy_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _cbuyy
_cbuyC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbuyr, .-_cbuyr


==================== Asm code ====================
2018-03-16 16:06:27.885636566 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuyr_info:
	.quad	_cbuyr
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:27.886333384 UTC

.section .text
.align 8
_cbuyy:
_cbuyy:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbuyX
_ubuzE:
	addq $16,%rbp
	jmp _cbuzm
_cbuyX:
	movq 8(%rbp),%rax
	cmpq 15(%rbx),%rax
	je _ubuzF
_ubuzG:
	addq $16,%rbp
	jmp _cbuzm
_ubuzF:
	addq $16,%rbp
	jmp _cbuzs
	.size _cbuyy, .-_cbuyy


==================== Asm code ====================
2018-03-16 16:06:27.886978034 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuyy_info:
	.quad	_cbuyy
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:27.887707988 UTC

.section .text
.align 8
_cbuz4:
_cbuz4:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubuzB
_cbuzw:
	movq 8(%rbp),%rax
	cmpq 14(%rbx),%rax
	je _ubuzC
_ubuzD:
	addq $16,%rbp
	jmp _cbuzm
_ubuzC:
	addq $16,%rbp
	jmp _cbuzs
_ubuzB:
	addq $16,%rbp
	jmp _cbuzm
	.size _cbuz4, .-_cbuz4


==================== Asm code ====================
2018-03-16 16:06:27.888358994 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuz4_info:
	.quad	_cbuz4
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:27.888993099 UTC

.section .text
.align 8
_cbuzs:
_cbuzs:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbuzs, .-_cbuzs


==================== Asm code ====================
2018-03-16 16:06:27.889664527 UTC

.section .text
.align 8
_cbuzm:
_cbuzm:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbuzm, .-_cbuzm


==================== Asm code ====================
2018-03-16 16:06:27.891381941 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$fEqHandlePosn_closure
.type GHC.IO.Handle.$fEqHandlePosn_closure, @object
GHC.IO.Handle.$fEqHandlePosn_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.IO.Handle.$fEqHandlePosn_$c==_closure+2
	.quad	GHC.IO.Handle.$fEqHandlePosn_$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:27.893073911 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn2_bytes
.type GHC.IO.Handle.$fShowHandlePosn2_bytes, @object
GHC.IO.Handle.$fShowHandlePosn2_bytes:
	.asciz " at position "


==================== Asm code ====================
2018-03-16 16:06:27.904264115 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$w$cshowsPrec_closure
.type GHC.IO.Handle.$w$cshowsPrec_closure, @object
GHC.IO.Handle.$w$cshowsPrec_closure:
	.quad	GHC.IO.Handle.$w$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:27.905115647 UTC

.section .text
.align 8
sat_sbtWJ_entry:
_cbuBc:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuBd
_cbuBe:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbuB9_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbx),%rdi
	movq 16(%rbx),%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_cbuBd:
	jmp *-16(%r13)
	.size sat_sbtWJ_entry, .-sat_sbtWJ_entry


==================== Asm code ====================
2018-03-16 16:06:27.905856566 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbtWJ_info:
	.quad	sat_sbtWJ_entry
	.quad	2
	.quad	4294967314
	.quad	SbuCr_srt


==================== Asm code ====================
2018-03-16 16:06:27.906618664 UTC

.section .text
.align 8
_cbuB9:
_cbuB9:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbuBh
_cbuBg:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbuBh:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cbuB9, .-_cbuB9


==================== Asm code ====================
2018-03-16 16:06:27.907281116 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuB9_info:
	.quad	_cbuB9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:27.908077626 UTC

.section .text
.align 8
sat_sbtWK_entry:
_cbuBi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuBj
_cbuBk:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbuBm
_cbuBl:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_sbtWJ_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	leaq GHC.IO.Handle.$fShowHandlePosn2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_cbuBm:
	movq $32,904(%r13)
_cbuBj:
	jmp *-16(%r13)
	.size sat_sbtWK_entry, .-sat_sbtWK_entry


==================== Asm code ====================
2018-03-16 16:06:27.908776666 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbtWK_info:
	.quad	sat_sbtWK_entry
	.quad	2
	.quad	4294967314
	.quad	SbuCr_srt


==================== Asm code ====================
2018-03-16 16:06:27.909562959 UTC

.section .text
.align 8
sat_sbtWL_entry:
_cbuBn:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbuBr
_cbuBq:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_sbtWK_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movq GHC.IO.Handle.Types.$fReadNewlineMode5_bytes@gotpcrel(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_cbuBr:
	movq $32,904(%r13)
	jmp *-16(%r13)
	.size sat_sbtWL_entry, .-sat_sbtWL_entry


==================== Asm code ====================
2018-03-16 16:06:27.910240706 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbtWL_info:
	.quad	sat_sbtWL_entry
	.quad	2
	.quad	4294967314
	.quad	SbuCr_srt


==================== Asm code ====================
2018-03-16 16:06:27.911036782 UTC

.section .text
.align 8
sat_sbtWM_entry:
_cbuBs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuBt
_cbuBu:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbuBw
_cbuBv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_sbtWL_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -24(%r12),%rsi
	movq %rbx,%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_cbuBw:
	movq $32,904(%r13)
_cbuBt:
	jmp *-16(%r13)
	.size sat_sbtWM_entry, .-sat_sbtWM_entry


==================== Asm code ====================
2018-03-16 16:06:27.911738632 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbtWM_info:
	.quad	sat_sbtWM_entry
	.quad	3
	.quad	4294967311
	.quad	SbuCr_srt


==================== Asm code ====================
2018-03-16 16:06:27.912477794 UTC

.section .text
.align 8
sat_sbtWT_entry:
_cbuBS:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuBT
_cbuBU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbuBP_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbx),%rdi
	movq 16(%rbx),%rsi
	xorl %r14d,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$w$cshowsPrec4_entry@gotpcrel(%rip)
_cbuBT:
	jmp *-16(%r13)
	.size sat_sbtWT_entry, .-sat_sbtWT_entry


==================== Asm code ====================
2018-03-16 16:06:27.9131375 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbtWT_info:
	.quad	sat_sbtWT_entry
	.quad	2
	.quad	4294967314
	.quad	SbuCr_srt


==================== Asm code ====================
2018-03-16 16:06:27.91477865 UTC

.section .text
.align 8
_cbuBP:
_cbuBP:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbuBX
_cbuBW:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbuBX:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cbuBP, .-_cbuBP


==================== Asm code ====================
2018-03-16 16:06:27.915395992 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuBP_info:
	.quad	_cbuBP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:27.916167364 UTC

.section .text
.align 8
sat_sbtWU_entry:
_cbuBY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuBZ
_cbuC0:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbuC2
_cbuC1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_sbtWT_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	leaq GHC.IO.Handle.$fShowHandlePosn2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_cbuC2:
	movq $32,904(%r13)
_cbuBZ:
	jmp *-16(%r13)
	.size sat_sbtWU_entry, .-sat_sbtWU_entry


==================== Asm code ====================
2018-03-16 16:06:27.916839608 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbtWU_info:
	.quad	sat_sbtWU_entry
	.quad	2
	.quad	4294967314
	.quad	SbuCr_srt


==================== Asm code ====================
2018-03-16 16:06:27.917550453 UTC

.section .text
.align 8
sat_sbtWV_entry:
_cbuC3:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbuC7
_cbuC6:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_sbtWU_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movq GHC.IO.Handle.Types.$fReadNewlineMode5_bytes@gotpcrel(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_cbuC7:
	movq $32,904(%r13)
	jmp *-16(%r13)
	.size sat_sbtWV_entry, .-sat_sbtWV_entry


==================== Asm code ====================
2018-03-16 16:06:27.918210309 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbtWV_info:
	.quad	sat_sbtWV_entry
	.quad	2
	.quad	4294967314
	.quad	SbuCr_srt


==================== Asm code ====================
2018-03-16 16:06:27.918995599 UTC

.section .text
.align 8
sat_sbtWW_entry:
_cbuC8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuC9
_cbuCa:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbuCc
_cbuCb:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_sbtWV_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -24(%r12),%rsi
	movq %rbx,%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_cbuCc:
	movq $32,904(%r13)
_cbuC9:
	jmp *-16(%r13)
	.size sat_sbtWW_entry, .-sat_sbtWW_entry


==================== Asm code ====================
2018-03-16 16:06:27.919725543 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbtWW_info:
	.quad	sat_sbtWW_entry
	.quad	3
	.quad	4294967311
	.quad	SbuCr_srt


==================== Asm code ====================
2018-03-16 16:06:27.92044804 UTC

.section .text
.align 8
.globl GHC.IO.Handle.$w$cshowsPrec_entry
.type GHC.IO.Handle.$w$cshowsPrec_entry, @object
GHC.IO.Handle.$w$cshowsPrec_entry:
_cbuCh:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuCi
_cbuCj:
	leaq block_cbuAO_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbuAO
_cbuAP:
	movq (%rbx),%rax
	jmp *(%rax)
_cbuCi:
	leaq GHC.IO.Handle.$w$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.$w$cshowsPrec_entry, .-GHC.IO.Handle.$w$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:06:27.921072611 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.$w$cshowsPrec_info
.type GHC.IO.Handle.$w$cshowsPrec_info, @object
GHC.IO.Handle.$w$cshowsPrec_info:
	.quad	GHC.IO.Handle.$w$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	SbuCr_srt


==================== Asm code ====================
2018-03-16 16:06:27.922000625 UTC

.section .text
.align 8
_cbuAO:
_cbuAO:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _cbuCe
_cbuCf:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbuCp
_cbuCo:
	movq 6(%rbx),%rbx
	leaq sat_sbtWW_info(%rip),%rdx
	movq %rdx,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rsi
	movq GHC.IO.Handle.Types.showHandle1_bytes@gotpcrel(%rip),%r14
	addq $24,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_cbuCp:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbuCe:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbuCp
_cbuCl:
	movq 7(%rbx),%rbx
	leaq sat_sbtWM_info(%rip),%rdx
	movq %rdx,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rsi
	movq GHC.IO.Handle.Types.showHandle1_bytes@gotpcrel(%rip),%r14
	addq $24,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
	.size _cbuAO, .-_cbuAO


==================== Asm code ====================
2018-03-16 16:06:27.92276407 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuAO_info:
	.quad	_cbuAO
	.quad	2
	.quad	4294967326
	.quad	SbuCr_srt


==================== Asm code ====================
2018-03-16 16:06:27.926191743 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_closure
.type GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_closure, @object
GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_closure:
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:27.926998994 UTC

.section .text
.align 8
.globl GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_entry
.type GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_entry, @object
GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_entry:
_cbuDF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuDG
_cbuDH:
	leaq block_cbuDC_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %rdi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbuDC
_cbuDD:
	movq (%rbx),%rax
	jmp *(%rax)
_cbuDG:
	leaq GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_entry, .-GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:06:27.927690098 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_info
.type GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_info, @object
GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_info:
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	SbuCr_srt+8


==================== Asm code ====================
2018-03-16 16:06:27.928352864 UTC

.section .text
.align 8
_cbuDC:
_cbuDC:
	movq 8(%rbp),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.$w$cshowsPrec_entry
	.size _cbuDC, .-_cbuDC


==================== Asm code ====================
2018-03-16 16:06:27.928933971 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuDC_info:
	.quad	_cbuDC
	.quad	1
	.quad	4294967326
	.quad	SbuCr_srt+8


==================== Asm code ====================
2018-03-16 16:06:27.93055773 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn3_closure
.type GHC.IO.Handle.$fShowHandlePosn3_closure, @object
GHC.IO.Handle.$fShowHandlePosn3_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:27.933350222 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn_$cshow_closure
.type GHC.IO.Handle.$fShowHandlePosn_$cshow_closure, @object
GHC.IO.Handle.$fShowHandlePosn_$cshow_closure:
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:27.934097068 UTC

.section .text
.align 8
.globl GHC.IO.Handle.$fShowHandlePosn_$cshow_entry
.type GHC.IO.Handle.$fShowHandlePosn_$cshow_entry, @object
GHC.IO.Handle.$fShowHandlePosn_$cshow_entry:
_cbuE4:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuE5
_cbuE6:
	leaq block_cbuE1_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbuE1
_cbuE2:
	movq (%rbx),%rax
	jmp *(%rax)
_cbuE5:
	leaq GHC.IO.Handle.$fShowHandlePosn_$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.$fShowHandlePosn_$cshow_entry, .-GHC.IO.Handle.$fShowHandlePosn_$cshow_entry


==================== Asm code ====================
2018-03-16 16:06:27.934743586 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn_$cshow_info
.type GHC.IO.Handle.$fShowHandlePosn_$cshow_info, @object
GHC.IO.Handle.$fShowHandlePosn_$cshow_info:
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshow_entry
	.quad	0
	.quad	21474836494
	.quad	4294967301
	.quad	SbuCr_srt+8


==================== Asm code ====================
2018-03-16 16:06:27.935414605 UTC

.section .text
.align 8
_cbuE1:
_cbuE1:
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.IO.Handle.$w$cshowsPrec_entry
	.size _cbuE1, .-_cbuE1


==================== Asm code ====================
2018-03-16 16:06:27.93598724 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuE1_info:
	.quad	_cbuE1
	.quad	0
	.quad	4294967326
	.quad	SbuCr_srt+8


==================== Asm code ====================
2018-03-16 16:06:27.939181088 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn1_closure
.type GHC.IO.Handle.$fShowHandlePosn1_closure, @object
GHC.IO.Handle.$fShowHandlePosn1_closure:
	.quad	GHC.IO.Handle.$fShowHandlePosn1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:27.939904525 UTC

.section .text
.align 8
.globl GHC.IO.Handle.$fShowHandlePosn1_entry
.type GHC.IO.Handle.$fShowHandlePosn1_entry, @object
GHC.IO.Handle.$fShowHandlePosn1_entry:
_cbuEt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuEu
_cbuEv:
	leaq block_cbuEq_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbuEq
_cbuEr:
	movq (%rbx),%rax
	jmp *(%rax)
_cbuEu:
	leaq GHC.IO.Handle.$fShowHandlePosn1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.$fShowHandlePosn1_entry, .-GHC.IO.Handle.$fShowHandlePosn1_entry


==================== Asm code ====================
2018-03-16 16:06:27.940543477 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn1_info
.type GHC.IO.Handle.$fShowHandlePosn1_info, @object
GHC.IO.Handle.$fShowHandlePosn1_info:
	.quad	GHC.IO.Handle.$fShowHandlePosn1_entry
	.quad	0
	.quad	38654705678
	.quad	8589934607
	.quad	SbuCr_srt+8


==================== Asm code ====================
2018-03-16 16:06:27.941201423 UTC

.section .text
.align 8
_cbuEq:
_cbuEq:
	movq 8(%rbp),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.$w$cshowsPrec_entry
	.size _cbuEq, .-_cbuEq


==================== Asm code ====================
2018-03-16 16:06:27.941842052 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuEq_info:
	.quad	_cbuEq
	.quad	1
	.quad	4294967326
	.quad	SbuCr_srt+8


==================== Asm code ====================
2018-03-16 16:06:27.944000437 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn_$cshowList_closure
.type GHC.IO.Handle.$fShowHandlePosn_$cshowList_closure, @object
GHC.IO.Handle.$fShowHandlePosn_$cshowList_closure:
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:27.944640588 UTC

.section .text
.align 8
.globl GHC.IO.Handle.$fShowHandlePosn_$cshowList_entry
.type GHC.IO.Handle.$fShowHandlePosn_$cshowList_entry, @object
GHC.IO.Handle.$fShowHandlePosn_$cshowList_entry:
_cbuEO:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.IO.Handle.$fShowHandlePosn1_closure+2(%rip),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
	.size GHC.IO.Handle.$fShowHandlePosn_$cshowList_entry, .-GHC.IO.Handle.$fShowHandlePosn_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:06:27.945219501 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn_$cshowList_info
.type GHC.IO.Handle.$fShowHandlePosn_$cshowList_info, @object
GHC.IO.Handle.$fShowHandlePosn_$cshowList_info:
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	SbuCr_srt+32


==================== Asm code ====================
2018-03-16 16:06:27.947485397 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$fShowHandlePosn_closure
.type GHC.IO.Handle.$fShowHandlePosn_closure, @object
GHC.IO.Handle.$fShowHandlePosn_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_closure+3
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshow_closure+1
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:27.949134316 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hLookAhead3_bytes
.type GHC.IO.Handle.hLookAhead3_bytes, @object
GHC.IO.Handle.hLookAhead3_bytes:
	.asciz "hLookAhead"


==================== Asm code ====================
2018-03-16 16:06:27.951612203 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hLookAhead2_closure
.type GHC.IO.Handle.hLookAhead2_closure, @object
GHC.IO.Handle.hLookAhead2_closure:
	.quad	GHC.IO.Handle.hLookAhead2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:27.952492887 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hLookAhead2_entry
.type GHC.IO.Handle.hLookAhead2_entry, @object
GHC.IO.Handle.hLookAhead2_entry:
_cbuF3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuF4
_cbuF5:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbuF2
_cbuF1:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hLookAhead3_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbuF4:
	jmp *-16(%r13)
_cbuF2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hLookAhead2_entry, .-GHC.IO.Handle.hLookAhead2_entry


==================== Asm code ====================
2018-03-16 16:06:27.953175881 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hLookAhead2_info
.type GHC.IO.Handle.hLookAhead2_info, @object
GHC.IO.Handle.hLookAhead2_info:
	.quad	GHC.IO.Handle.hLookAhead2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:27.95574029 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hLookAhead1_closure
.type GHC.IO.Handle.hLookAhead1_closure, @object
GHC.IO.Handle.hLookAhead1_closure:
	.quad	GHC.IO.Handle.hLookAhead1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:27.956391768 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hLookAhead1_entry
.type GHC.IO.Handle.hLookAhead1_entry, @object
GHC.IO.Handle.hLookAhead1_entry:
_cbuFi:
	movq GHC.IO.Handle.Internals.hLookAhead_1_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rdi
	movq %r14,%rsi
	leaq GHC.IO.Handle.hLookAhead2_closure(%rip),%r14
	jmp *GHC.IO.Handle.Internals.wantReadableHandle_1_entry@gotpcrel(%rip)
	.size GHC.IO.Handle.hLookAhead1_entry, .-GHC.IO.Handle.hLookAhead1_entry


==================== Asm code ====================
2018-03-16 16:06:27.957009235 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hLookAhead1_info
.type GHC.IO.Handle.hLookAhead1_info, @object
GHC.IO.Handle.hLookAhead1_info:
	.quad	GHC.IO.Handle.hLookAhead1_entry
	.quad	0
	.quad	30064771086
	.quad	8589934597
	.quad	SbuCr_srt+40


==================== Asm code ====================
2018-03-16 16:06:27.958993972 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hLookAhead_closure
.type GHC.IO.Handle.hLookAhead_closure, @object
GHC.IO.Handle.hLookAhead_closure:
	.quad	GHC.IO.Handle.hLookAhead_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:27.959598728 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hLookAhead_entry
.type GHC.IO.Handle.hLookAhead_entry, @object
GHC.IO.Handle.hLookAhead_entry:
_cbuFu:
	jmp GHC.IO.Handle.hLookAhead1_entry
	.size GHC.IO.Handle.hLookAhead_entry, .-GHC.IO.Handle.hLookAhead_entry


==================== Asm code ====================
2018-03-16 16:06:27.960169021 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hLookAhead_info
.type GHC.IO.Handle.hLookAhead_info, @object
GHC.IO.Handle.hLookAhead_info:
	.quad	GHC.IO.Handle.hLookAhead_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbuCr_srt+64


==================== Asm code ====================
2018-03-16 16:06:27.962142287 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hFlush3_bytes
.type GHC.IO.Handle.hFlush3_bytes, @object
GHC.IO.Handle.hFlush3_bytes:
	.asciz "hFlush"


==================== Asm code ====================
2018-03-16 16:06:27.964594467 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFlush2_closure
.type GHC.IO.Handle.hFlush2_closure, @object
GHC.IO.Handle.hFlush2_closure:
	.quad	GHC.IO.Handle.hFlush2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:27.965471985 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFlush2_entry
.type GHC.IO.Handle.hFlush2_entry, @object
GHC.IO.Handle.hFlush2_entry:
_cbuFI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuFJ
_cbuFK:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbuFH
_cbuFG:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hFlush3_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbuFJ:
	jmp *-16(%r13)
_cbuFH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hFlush2_entry, .-GHC.IO.Handle.hFlush2_entry


==================== Asm code ====================
2018-03-16 16:06:27.966177495 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFlush2_info
.type GHC.IO.Handle.hFlush2_info, @object
GHC.IO.Handle.hFlush2_info:
	.quad	GHC.IO.Handle.hFlush2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:27.968298546 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFlush1_closure
.type GHC.IO.Handle.hFlush1_closure, @object
GHC.IO.Handle.hFlush1_closure:
	.quad	GHC.IO.Handle.hFlush1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:27.968956145 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFlush1_entry
.type GHC.IO.Handle.hFlush1_entry, @object
GHC.IO.Handle.hFlush1_entry:
_cbuFX:
	movq GHC.IO.Handle.Internals.flushWriteBuffer1_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rdi
	movq %r14,%rsi
	leaq GHC.IO.Handle.hFlush2_closure(%rip),%r14
	jmp *GHC.IO.Handle.Internals.wantWritableHandle1_entry@gotpcrel(%rip)
	.size GHC.IO.Handle.hFlush1_entry, .-GHC.IO.Handle.hFlush1_entry


==================== Asm code ====================
2018-03-16 16:06:27.969614088 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFlush1_info
.type GHC.IO.Handle.hFlush1_info, @object
GHC.IO.Handle.hFlush1_info:
	.quad	GHC.IO.Handle.hFlush1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	SbuCr_srt+72


==================== Asm code ====================
2018-03-16 16:06:27.971642166 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFlush_closure
.type GHC.IO.Handle.hFlush_closure, @object
GHC.IO.Handle.hFlush_closure:
	.quad	GHC.IO.Handle.hFlush_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:27.972258213 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFlush_entry
.type GHC.IO.Handle.hFlush_entry, @object
GHC.IO.Handle.hFlush_entry:
_cbuG9:
	jmp GHC.IO.Handle.hFlush1_entry
	.size GHC.IO.Handle.hFlush_entry, .-GHC.IO.Handle.hFlush_entry


==================== Asm code ====================
2018-03-16 16:06:27.972850439 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFlush_info
.type GHC.IO.Handle.hFlush_info, @object
GHC.IO.Handle.hFlush_info:
	.quad	GHC.IO.Handle.hFlush_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbuCr_srt+88


==================== Asm code ====================
2018-03-16 16:06:27.974459695 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hFlushAll4_bytes
.type GHC.IO.Handle.hFlushAll4_bytes, @object
GHC.IO.Handle.hFlushAll4_bytes:
	.asciz "hFlushAll"


==================== Asm code ====================
2018-03-16 16:06:27.976929577 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFlushAll3_closure
.type GHC.IO.Handle.hFlushAll3_closure, @object
GHC.IO.Handle.hFlushAll3_closure:
	.quad	GHC.IO.Handle.hFlushAll3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:27.978402572 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFlushAll3_entry
.type GHC.IO.Handle.hFlushAll3_entry, @object
GHC.IO.Handle.hFlushAll3_entry:
_cbuGn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuGo
_cbuGp:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbuGm
_cbuGl:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hFlushAll4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbuGo:
	jmp *-16(%r13)
_cbuGm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hFlushAll3_entry, .-GHC.IO.Handle.hFlushAll3_entry


==================== Asm code ====================
2018-03-16 16:06:27.979088721 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFlushAll3_info
.type GHC.IO.Handle.hFlushAll3_info, @object
GHC.IO.Handle.hFlushAll3_info:
	.quad	GHC.IO.Handle.hFlushAll3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:27.985080603 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFlushAll2_closure
.type GHC.IO.Handle.hFlushAll2_closure, @object
GHC.IO.Handle.hFlushAll2_closure:
	.quad	GHC.IO.Handle.hFlushAll2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:27.985894724 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFlushAll2_entry
.type GHC.IO.Handle.hFlushAll2_entry, @object
GHC.IO.Handle.hFlushAll2_entry:
_cbuGF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuGG
_cbuGH:
	leaq block_cbuGC_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.flushBuffer1_entry@gotpcrel(%rip)
_cbuGG:
	leaq GHC.IO.Handle.hFlushAll2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hFlushAll2_entry, .-GHC.IO.Handle.hFlushAll2_entry


==================== Asm code ====================
2018-03-16 16:06:27.986565573 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFlushAll2_info
.type GHC.IO.Handle.hFlushAll2_info, @object
GHC.IO.Handle.hFlushAll2_info:
	.quad	GHC.IO.Handle.hFlushAll2_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	SbuCr_srt+96


==================== Asm code ====================
2018-03-16 16:06:27.987351268 UTC

.section .text
.align 8
_cbuGC:
_cbuGC:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbuGK
_cbuGJ:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbuGK:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbuGC, .-_cbuGC


==================== Asm code ====================
2018-03-16 16:06:27.987962814 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuGC_info:
	.quad	_cbuGC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:27.997746537 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFlushAll1_closure
.type GHC.IO.Handle.hFlushAll1_closure, @object
GHC.IO.Handle.hFlushAll1_closure:
	.quad	GHC.IO.Handle.hFlushAll1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:27.998578479 UTC

.section .text
.align 8
io_sbtXu_entry:
_cbuHi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuHm
_cbuHn:
	leaq block_cbuHd_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	leaq GHC.IO.Handle.hFlushAll2_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	leaq GHC.IO.Handle.hFlushAll3_closure(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbuHm:
	jmp *-8(%r13)
	.size io_sbtXu_entry, .-io_sbtXu_entry


==================== Asm code ====================
2018-03-16 16:06:27.999345764 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbtXu_info:
	.quad	io_sbtXu_entry
	.quad	2
	.quad	30064771083
	.quad	4294967299
	.quad	SbuCr_srt+104


==================== Asm code ====================
2018-03-16 16:06:28.000062384 UTC

.section .text
.align 8
_cbuHd:
_cbuHd:
	leaq block_cbuHf_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbuHf
_cbuHg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbuHd, .-_cbuHd


==================== Asm code ====================
2018-03-16 16:06:28.000610625 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuHd_info:
	.quad	_cbuHd
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.001253897 UTC

.section .text
.align 8
_cbuHf:
_cbuHf:
	leaq block_cbuHl_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbuHf, .-_cbuHf


==================== Asm code ====================
2018-03-16 16:06:28.001960401 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuHf_info:
	.quad	_cbuHf
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.00257697 UTC

.section .text
.align 8
_cbuHl:
_cbuHl:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbuHl, .-_cbuHl


==================== Asm code ====================
2018-03-16 16:06:28.003224304 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuHl_info:
	.quad	_cbuHl
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.003985977 UTC

.section .text
.align 8
io_sbtXK_entry:
_cbuHH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuHL
_cbuHM:
	leaq block_cbuHC_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	leaq GHC.IO.Handle.hFlushAll2_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	leaq GHC.IO.Handle.hFlushAll3_closure(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbuHL:
	jmp *-8(%r13)
	.size io_sbtXK_entry, .-io_sbtXK_entry


==================== Asm code ====================
2018-03-16 16:06:28.004734264 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbtXK_info:
	.quad	io_sbtXK_entry
	.quad	2
	.quad	30064771083
	.quad	4294967299
	.quad	SbuCr_srt+104


==================== Asm code ====================
2018-03-16 16:06:28.00570854 UTC

.section .text
.align 8
_cbuHC:
_cbuHC:
	leaq block_cbuHE_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbuHE
_cbuHF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbuHC, .-_cbuHC


==================== Asm code ====================
2018-03-16 16:06:28.006387195 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuHC_info:
	.quad	_cbuHC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.00713019 UTC

.section .text
.align 8
_cbuHE:
_cbuHE:
	leaq block_cbuHK_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbuHE, .-_cbuHE


==================== Asm code ====================
2018-03-16 16:06:28.007743918 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuHE_info:
	.quad	_cbuHE
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.008476285 UTC

.section .text
.align 8
_cbuHK:
_cbuHK:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbuHK, .-_cbuHK


==================== Asm code ====================
2018-03-16 16:06:28.009114598 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuHK_info:
	.quad	_cbuHK
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.009984013 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFlushAll1_entry
.type GHC.IO.Handle.hFlushAll1_entry, @object
GHC.IO.Handle.hFlushAll1_entry:
_cbuHW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuHX
_cbuHY:
	leaq block_cbuH1_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbuH1
_cbuH2:
	movq (%rbx),%rax
	jmp *(%rax)
_cbuHX:
	leaq GHC.IO.Handle.hFlushAll1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hFlushAll1_entry, .-GHC.IO.Handle.hFlushAll1_entry


==================== Asm code ====================
2018-03-16 16:06:28.010779055 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFlushAll1_info
.type GHC.IO.Handle.hFlushAll1_info, @object
GHC.IO.Handle.hFlushAll1_info:
	.quad	GHC.IO.Handle.hFlushAll1_entry
	.quad	0
	.quad	64424509454
	.quad	8589934597
	.quad	SbuCr_srt+104


==================== Asm code ====================
2018-03-16 16:06:28.011676575 UTC

.section .text
.align 8
_cbuH1:
_cbuH1:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbuHT
_cbuHU:
	leaq block_cbuHv_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_cbuHT:
	leaq block_cbuH6_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _cbuH1, .-_cbuH1


==================== Asm code ====================
2018-03-16 16:06:28.012419538 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuH1_info:
	.quad	_cbuH1
	.quad	0
	.quad	30064771102
	.quad	SbuCr_srt+104


==================== Asm code ====================
2018-03-16 16:06:28.013281191 UTC

.section .text
.align 8
_cbuH6:
_cbuH6:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbuI2
_cbuI1:
	leaq io_sbtXu_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbuI6
_cbuI5:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbtXu_entry
_cbuI6:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbuI2:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbuH6, .-_cbuH6


==================== Asm code ====================
2018-03-16 16:06:28.014081639 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuH6_info:
	.quad	_cbuH6
	.quad	2
	.quad	30064771102
	.quad	SbuCr_srt+104


==================== Asm code ====================
2018-03-16 16:06:28.015087752 UTC

.section .text
.align 8
_cbuHv:
_cbuHv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbuIa
_cbuI9:
	leaq io_sbtXK_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbuIe
_cbuId:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbtXK_entry
_cbuIe:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbuIa:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbuHv, .-_cbuHv


==================== Asm code ====================
2018-03-16 16:06:28.015965378 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuHv_info:
	.quad	_cbuHv
	.quad	2
	.quad	30064771102
	.quad	SbuCr_srt+104


==================== Asm code ====================
2018-03-16 16:06:28.018923451 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFlushAll_closure
.type GHC.IO.Handle.hFlushAll_closure, @object
GHC.IO.Handle.hFlushAll_closure:
	.quad	GHC.IO.Handle.hFlushAll_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.019679637 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFlushAll_entry
.type GHC.IO.Handle.hFlushAll_entry, @object
GHC.IO.Handle.hFlushAll_entry:
_cbuJm:
	jmp GHC.IO.Handle.hFlushAll1_entry
	.size GHC.IO.Handle.hFlushAll_entry, .-GHC.IO.Handle.hFlushAll_entry


==================== Asm code ====================
2018-03-16 16:06:28.020396525 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFlushAll_info
.type GHC.IO.Handle.hFlushAll_info, @object
GHC.IO.Handle.hFlushAll_info:
	.quad	GHC.IO.Handle.hFlushAll_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbuCr_srt+128


==================== Asm code ====================
2018-03-16 16:06:28.022942162 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hGetEcho7_bytes
.type GHC.IO.Handle.hGetEcho7_bytes, @object
GHC.IO.Handle.hGetEcho7_bytes:
	.asciz "hIsTerminalDevice"


==================== Asm code ====================
2018-03-16 16:06:28.025643104 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho_fun_closure
.type GHC.IO.Handle.hGetEcho_fun_closure, @object
GHC.IO.Handle.hGetEcho_fun_closure:
	.quad	GHC.IO.Handle.hGetEcho_fun_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.026479888 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEcho_fun_entry
.type GHC.IO.Handle.hGetEcho_fun_entry, @object
GHC.IO.Handle.hGetEcho_fun_entry:
_cbuJA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuJB
_cbuJC:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbuJz
_cbuJy:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hGetEcho7_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbuJB:
	jmp *-16(%r13)
_cbuJz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hGetEcho_fun_entry, .-GHC.IO.Handle.hGetEcho_fun_entry


==================== Asm code ====================
2018-03-16 16:06:28.027146745 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho_fun_info
.type GHC.IO.Handle.hGetEcho_fun_info, @object
GHC.IO.Handle.hGetEcho_fun_info:
	.quad	GHC.IO.Handle.hGetEcho_fun_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:28.031590546 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho6_closure
.type GHC.IO.Handle.hGetEcho6_closure, @object
GHC.IO.Handle.hGetEcho6_closure:
	.quad	GHC.IO.Handle.hGetEcho6_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.032347932 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEcho6_entry
.type GHC.IO.Handle.hGetEcho6_entry, @object
GHC.IO.Handle.hGetEcho6_entry:
_cbuJS:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuJT
_cbuJU:
	leaq block_cbuJP_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbuJP
_cbuJQ:
	movq (%rbx),%rax
	jmp *(%rax)
_cbuJT:
	leaq GHC.IO.Handle.hGetEcho6_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hGetEcho6_entry, .-GHC.IO.Handle.hGetEcho6_entry


==================== Asm code ====================
2018-03-16 16:06:28.033002514 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho6_info
.type GHC.IO.Handle.hGetEcho6_info, @object
GHC.IO.Handle.hGetEcho6_info:
	.quad	GHC.IO.Handle.hGetEcho6_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	SbuCr_srt+136


==================== Asm code ====================
2018-03-16 16:06:28.033775864 UTC

.section .text
.align 8
_cbuJP:
_cbuJP:
	leaq block_cbuJX_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbuJX
_cbuJZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbuJP, .-_cbuJP


==================== Asm code ====================
2018-03-16 16:06:28.034362556 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuJP_info:
	.quad	_cbuJP
	.quad	0
	.quad	4294967326
	.quad	SbuCr_srt+136


==================== Asm code ====================
2018-03-16 16:06:28.035045288 UTC

.section .text
.align 8
_cbuJX:
_cbuJX:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbuKf
_cbuK8:
	movq 16(%rbp),%rax
	leaq block_cbuK3_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_pv_info@gotpcrel(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	jmp *GHC.IO.Device.isTerminal_entry@gotpcrel(%rip)
_cbuKf:
	addq $32,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_closedHandle1_entry@gotpcrel(%rip)
	.size _cbuJX, .-_cbuJX


==================== Asm code ====================
2018-03-16 16:06:28.035687441 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuJX_info:
	.quad	_cbuJX
	.quad	3
	.quad	4294967326
	.quad	SbuCr_srt+136


==================== Asm code ====================
2018-03-16 16:06:28.036390257 UTC

.section .text
.align 8
_cbuK3:
_cbuK3:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbuKb
_cbuKa:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbuKb:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbuK3, .-_cbuK3


==================== Asm code ====================
2018-03-16 16:06:28.036993429 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuK3_info:
	.quad	_cbuK3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.044872941 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho5_closure
.type GHC.IO.Handle.hGetEcho5_closure, @object
GHC.IO.Handle.hGetEcho5_closure:
	.quad	GHC.IO.Handle.hGetEcho5_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.046034109 UTC

.section .text
.align 8
io_sbtYr_entry:
_cbuL3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuL7
_cbuL8:
	leaq block_cbuKY_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	leaq GHC.IO.Handle.hGetEcho6_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	leaq GHC.IO.Handle.hGetEcho_fun_closure(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbuL7:
	jmp *-8(%r13)
	.size io_sbtYr_entry, .-io_sbtYr_entry


==================== Asm code ====================
2018-03-16 16:06:28.046708789 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbtYr_info:
	.quad	io_sbtYr_entry
	.quad	2
	.quad	210453397515
	.quad	4294967299
	.quad	SbuCr_srt+112


==================== Asm code ====================
2018-03-16 16:06:28.047395067 UTC

.section .text
.align 8
_cbuKY:
_cbuKY:
	leaq block_cbuL0_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbuL0
_cbuL1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbuKY, .-_cbuKY


==================== Asm code ====================
2018-03-16 16:06:28.04792565 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuKY_info:
	.quad	_cbuKY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.048555532 UTC

.section .text
.align 8
_cbuL0:
_cbuL0:
	leaq block_cbuL6_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbuL0, .-_cbuL0


==================== Asm code ====================
2018-03-16 16:06:28.049176945 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuL0_info:
	.quad	_cbuL0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.049859 UTC

.section .text
.align 8
_cbuL6:
_cbuL6:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbuL6, .-_cbuL6


==================== Asm code ====================
2018-03-16 16:06:28.050382847 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuL6_info:
	.quad	_cbuL6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.051119306 UTC

.section .text
.align 8
io_sbtYH_entry:
_cbuLs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuLw
_cbuLx:
	leaq block_cbuLn_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	leaq GHC.IO.Handle.hGetEcho6_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	leaq GHC.IO.Handle.hGetEcho_fun_closure(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbuLw:
	jmp *-8(%r13)
	.size io_sbtYH_entry, .-io_sbtYH_entry


==================== Asm code ====================
2018-03-16 16:06:28.051752476 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbtYH_info:
	.quad	io_sbtYH_entry
	.quad	2
	.quad	210453397515
	.quad	4294967299
	.quad	SbuCr_srt+112


==================== Asm code ====================
2018-03-16 16:06:28.052372615 UTC

.section .text
.align 8
_cbuLn:
_cbuLn:
	leaq block_cbuLp_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbuLp
_cbuLq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbuLn, .-_cbuLn


==================== Asm code ====================
2018-03-16 16:06:28.05296376 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuLn_info:
	.quad	_cbuLn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.053586713 UTC

.section .text
.align 8
_cbuLp:
_cbuLp:
	leaq block_cbuLv_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbuLp, .-_cbuLp


==================== Asm code ====================
2018-03-16 16:06:28.054169881 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuLp_info:
	.quad	_cbuLp
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.054789572 UTC

.section .text
.align 8
_cbuLv:
_cbuLv:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbuLv, .-_cbuLv


==================== Asm code ====================
2018-03-16 16:06:28.055360493 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuLv_info:
	.quad	_cbuLv
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.056077218 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEcho5_entry
.type GHC.IO.Handle.hGetEcho5_entry, @object
GHC.IO.Handle.hGetEcho5_entry:
_cbuLH:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuLI
_cbuLJ:
	leaq block_cbuKM_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbuKM
_cbuKN:
	movq (%rbx),%rax
	jmp *(%rax)
_cbuLI:
	leaq GHC.IO.Handle.hGetEcho5_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hGetEcho5_entry, .-GHC.IO.Handle.hGetEcho5_entry


==================== Asm code ====================
2018-03-16 16:06:28.056757437 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho5_info
.type GHC.IO.Handle.hGetEcho5_info, @object
GHC.IO.Handle.hGetEcho5_info:
	.quad	GHC.IO.Handle.hGetEcho5_entry
	.quad	0
	.quad	485331304462
	.quad	8589934597
	.quad	SbuCr_srt+112


==================== Asm code ====================
2018-03-16 16:06:28.058001803 UTC

.section .text
.align 8
_cbuKM:
_cbuKM:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbuLE
_cbuLF:
	leaq block_cbuLg_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_cbuLE:
	leaq block_cbuKR_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _cbuKM, .-_cbuKM


==================== Asm code ====================
2018-03-16 16:06:28.058858835 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuKM_info:
	.quad	_cbuKM
	.quad	0
	.quad	210453397534
	.quad	SbuCr_srt+112


==================== Asm code ====================
2018-03-16 16:06:28.059746763 UTC

.section .text
.align 8
_cbuKR:
_cbuKR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbuLN
_cbuLM:
	leaq io_sbtYr_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbuLR
_cbuLQ:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbtYr_entry
_cbuLR:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbuLN:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbuKR, .-_cbuKR


==================== Asm code ====================
2018-03-16 16:06:28.060577835 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuKR_info:
	.quad	_cbuKR
	.quad	2
	.quad	210453397534
	.quad	SbuCr_srt+112


==================== Asm code ====================
2018-03-16 16:06:28.062092937 UTC

.section .text
.align 8
_cbuLg:
_cbuLg:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbuLV
_cbuLU:
	leaq io_sbtYH_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbuLZ
_cbuLY:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbtYH_entry
_cbuLZ:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbuLV:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbuLg, .-_cbuLg


==================== Asm code ====================
2018-03-16 16:06:28.062747269 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuLg_info:
	.quad	_cbuLg
	.quad	2
	.quad	210453397534
	.quad	SbuCr_srt+112


==================== Asm code ====================
2018-03-16 16:06:28.0649396 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsTerminalDevice_closure
.type GHC.IO.Handle.hIsTerminalDevice_closure, @object
GHC.IO.Handle.hIsTerminalDevice_closure:
	.quad	GHC.IO.Handle.hIsTerminalDevice_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.065529449 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsTerminalDevice_entry
.type GHC.IO.Handle.hIsTerminalDevice_entry, @object
GHC.IO.Handle.hIsTerminalDevice_entry:
_cbuN7:
	jmp GHC.IO.Handle.hGetEcho5_entry
	.size GHC.IO.Handle.hIsTerminalDevice_entry, .-GHC.IO.Handle.hIsTerminalDevice_entry


==================== Asm code ====================
2018-03-16 16:06:28.066108788 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsTerminalDevice_info
.type GHC.IO.Handle.hIsTerminalDevice_info, @object
GHC.IO.Handle.hIsTerminalDevice_info:
	.quad	GHC.IO.Handle.hIsTerminalDevice_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbuCr_srt+160


==================== Asm code ====================
2018-03-16 16:06:28.06758623 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_rbnWB_bytes:
	.asciz "hDuplicateTo"


==================== Asm code ====================
2018-03-16 16:06:28.070409205 UTC

.section .data
.align 8
.align 1
lvl1_rbnWC_closure:
	.quad	lvl1_rbnWC_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.071215467 UTC

.section .text
.align 8
lvl1_rbnWC_entry:
_cbuNl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuNm
_cbuNn:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbuNk
_cbuNj:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl_rbnWB_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbuNm:
	jmp *-16(%r13)
_cbuNk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl1_rbnWC_entry, .-lvl1_rbnWC_entry


==================== Asm code ====================
2018-03-16 16:06:28.071904752 UTC

.section .data.rel.ro
.align 8
.align 1
lvl1_rbnWC_info:
	.quad	lvl1_rbnWC_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:28.073531041 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl2_rbnWD_bytes:
	.asciz "handles are incompatible"


==================== Asm code ====================
2018-03-16 16:06:28.075973628 UTC

.section .data
.align 8
.align 1
lvl3_rbnWE_closure:
	.quad	lvl3_rbnWE_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.076765 UTC

.section .text
.align 8
lvl3_rbnWE_entry:
_cbuND:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuNE
_cbuNF:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbuNC
_cbuNB:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl2_rbnWD_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbuNE:
	jmp *-16(%r13)
_cbuNC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl3_rbnWE_entry, .-lvl3_rbnWE_entry


==================== Asm code ====================
2018-03-16 16:06:28.077472177 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_rbnWE_info:
	.quad	lvl3_rbnWE_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:28.080832139 UTC

.section .data
.align 8
.align 1
ioe_dupHandlesNotCompatible_rbnWF_closure:
	.quad	ioe_dupHandlesNotCompatible_rbnWF_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.082144358 UTC

.section .text
.align 8
sat_sbtYV_entry:
_cbuNY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuNZ
_cbuO0:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbuO2
_cbuO1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq GHC.IO.Exception.IOError_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -62(%r12),%rax
	movq %rax,-40(%r12)
	movq GHC.IO.Exception.IllegalOperation_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	leaq lvl1_rbnWC_closure(%rip),%rax
	movq %rax,-24(%r12)
	leaq lvl3_rbnWE_closure(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cbuO2:
	movq $72,904(%r13)
_cbuNZ:
	jmp *-16(%r13)
	.size sat_sbtYV_entry, .-sat_sbtYV_entry


==================== Asm code ====================
2018-03-16 16:06:28.082942672 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbtYV_info:
	.quad	sat_sbtYV_entry
	.quad	1
	.quad	30064771088
	.quad	SbuCr_srt+168


==================== Asm code ====================
2018-03-16 16:06:28.083613812 UTC

.section .text
.align 8
ioe_dupHandlesNotCompatible_rbnWF_entry:
_cbuO3:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbuO7
_cbuO6:
	leaq sat_sbtYV_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
_cbuO7:
	movq $24,904(%r13)
	leaq ioe_dupHandlesNotCompatible_rbnWF_closure(%rip),%rbx
	jmp *-8(%r13)
	.size ioe_dupHandlesNotCompatible_rbnWF_entry, .-ioe_dupHandlesNotCompatible_rbnWF_entry


==================== Asm code ====================
2018-03-16 16:06:28.084238249 UTC

.section .data.rel.ro
.align 8
.align 1
ioe_dupHandlesNotCompatible_rbnWF_info:
	.quad	ioe_dupHandlesNotCompatible_rbnWF_entry
	.quad	0
	.quad	64424509454
	.quad	8589934597
	.quad	SbuCr_srt+168


==================== Asm code ====================
2018-03-16 16:06:28.085965217 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.$trModule4_bytes
.type GHC.IO.Handle.$trModule4_bytes, @object
GHC.IO.Handle.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:06:28.087610913 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$trModule3_closure
.type GHC.IO.Handle.$trModule3_closure, @object
GHC.IO.Handle.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:06:28.089231639 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.$trModule2_bytes
.type GHC.IO.Handle.$trModule2_bytes, @object
GHC.IO.Handle.$trModule2_bytes:
	.asciz "GHC.IO.Handle"


==================== Asm code ====================
2018-03-16 16:06:28.09095422 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$trModule1_closure
.type GHC.IO.Handle.$trModule1_closure, @object
GHC.IO.Handle.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:06:28.093160081 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$trModule_closure
.type GHC.IO.Handle.$trModule_closure, @object
GHC.IO.Handle.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.IO.Handle.$trModule3_closure+1
	.quad	GHC.IO.Handle.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:28.095276866 UTC

.section .data
.align 8
.align 1
$krep_rbnWG_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Integer.Type.$tcInteger_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:28.096981013 UTC

.section .data
.align 8
.align 1
$krep1_rbnWH_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Handle.Types.$tcHandle_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:28.098651797 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.$tcHandlePosn2_bytes
.type GHC.IO.Handle.$tcHandlePosn2_bytes, @object
GHC.IO.Handle.$tcHandlePosn2_bytes:
	.asciz "HandlePosn"


==================== Asm code ====================
2018-03-16 16:06:28.100254447 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$tcHandlePosn1_closure
.type GHC.IO.Handle.$tcHandlePosn1_closure, @object
GHC.IO.Handle.$tcHandlePosn1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.$tcHandlePosn2_bytes


==================== Asm code ====================
2018-03-16 16:06:28.102034204 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$tcHandlePosn_closure
.type GHC.IO.Handle.$tcHandlePosn_closure, @object
GHC.IO.Handle.$tcHandlePosn_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.$trModule_closure+1
	.quad	GHC.IO.Handle.$tcHandlePosn1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-3843117051664735436
	.quad	6047646306417636971
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:28.103787907 UTC

.section .data
.align 8
.align 1
$krep2_rbnWI_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Handle.$tcHandlePosn_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:28.106032392 UTC

.section .data
.align 8
.align 1
$krep3_rbnWJ_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rbnWG_closure+1
	.quad	$krep2_rbnWI_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:28.107724837 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$tc'HandlePosn1_closure
.type GHC.IO.Handle.$tc'HandlePosn1_closure, @object
GHC.IO.Handle.$tc'HandlePosn1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_rbnWH_closure+1
	.quad	$krep3_rbnWJ_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:28.109464094 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.$tc'HandlePosn3_bytes
.type GHC.IO.Handle.$tc'HandlePosn3_bytes, @object
GHC.IO.Handle.$tc'HandlePosn3_bytes:
	.asciz "'HandlePosn"


==================== Asm code ====================
2018-03-16 16:06:28.111079398 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$tc'HandlePosn2_closure
.type GHC.IO.Handle.$tc'HandlePosn2_closure, @object
GHC.IO.Handle.$tc'HandlePosn2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.$tc'HandlePosn3_bytes


==================== Asm code ====================
2018-03-16 16:06:28.112874786 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$tc'HandlePosn_closure
.type GHC.IO.Handle.$tc'HandlePosn_closure, @object
GHC.IO.Handle.$tc'HandlePosn_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.$trModule_closure+1
	.quad	GHC.IO.Handle.$tc'HandlePosn2_closure+1
	.quad	GHC.IO.Handle.$tc'HandlePosn1_closure+4
	.quad	2346493220596692855
	.quad	1604707260447826943
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:28.119615863 UTC

.section .data
.align 8
.align 1
dupHandle__rbnWK_closure:
	.quad	dupHandle__rbnWK_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.120346675 UTC

.section .text
.align 8
dupHandle__rbnWK_slow:
_cbuOK:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp dupHandle__rbnWK_entry
	.size dupHandle__rbnWK_slow, .-dupHandle__rbnWK_slow


==================== Asm code ====================
2018-03-16 16:06:28.121169216 UTC

.section .text
.align 8
dupHandle__rbnWK_entry:
_cbuOR:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuOS
_cbuOT:
	leaq block_cbuOO_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 8(%rbp),%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %r14,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbuOO
_cbuOP:
	movq (%rbx),%rax
	jmp *(%rax)
_cbuOS:
	leaq dupHandle__rbnWK_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size dupHandle__rbnWK_entry, .-dupHandle__rbnWK_entry


==================== Asm code ====================
2018-03-16 16:06:28.122380012 UTC

.section .data.rel.ro
.align 8
.align 1
dupHandle__rbnWK_info:
	.quad	dupHandle__rbnWK_entry
	.quad	0
	.quad	30064771086
	.quad	38654705664
	.quad	SbuCr_srt+200
	.quad	8
	.quad	dupHandle__rbnWK_slow


==================== Asm code ====================
2018-03-16 16:06:28.123093306 UTC

.section .text
.align 8
_cbuOO:
_cbuOO:
	leaq block_cbuOY_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 39(%rbx),%rax
	movq 111(%rbx),%rcx
	movq 119(%rbx),%rdx
	movq 87(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbuOY
_cbuP6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbuOO, .-_cbuOO


==================== Asm code ====================
2018-03-16 16:06:28.124261608 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuOO_info:
	.quad	_cbuOO
	.quad	7
	.quad	12884901918
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.125023917 UTC

.section .text
.align 8
_cbuOY:
_cbuOY:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbuPc
_cbuPh:
	leaq block_cbuPf_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.IO.Encoding.getLocaleEncoding1_closure@gotpcrel(%rip),%rbx
	testb $7,%bl
	jne _cbuPf
_cbuPi:
	movq (%rbx),%rax
	jmp *(%rax)
_cbuPc:
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%rbp)
	jmp _cbuP1
	.size _cbuOY, .-_cbuOY


==================== Asm code ====================
2018-03-16 16:06:28.12573359 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuOY_info:
	.quad	_cbuOY
	.quad	10
	.quad	12884901918
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.126351742 UTC

.section .text
.align 8
_cbuPf:
_cbuPf:
	leaq block_cbuPm_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cbuPf, .-_cbuPf


==================== Asm code ====================
2018-03-16 16:06:28.126916374 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuPf_info:
	.quad	_cbuPf
	.quad	10
	.quad	4294967326
	.quad	SbuCr_srt+208


==================== Asm code ====================
2018-03-16 16:06:28.127610371 UTC

.section .text
.align 8
_cbuPm:
_cbuPm:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbuPr
_cbuPq:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,(%rbp)
	jmp _cbuP1
_cbuPr:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbuPm, .-_cbuPm


==================== Asm code ====================
2018-03-16 16:06:28.128197256 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuPm_info:
	.quad	_cbuPm
	.quad	10
	.quad	4294967326
	.quad	SbuCr_srt+208


==================== Asm code ====================
2018-03-16 16:06:28.129015025 UTC

.section .text
.align 8
_cbuP1:
_cbuP1:
	addq $24,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cbuP5
_cbuP4:
	movq GHC.IO.Handle.Types.NewlineMode_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,(%r12)
	movq 56(%rbp),%r9
	movq 48(%rbp),%r8
	movq 40(%rbp),%rdi
	movq 32(%rbp),%rsi
	movq 72(%rbp),%r14
	movq 24(%rbp),%rbx
	movq %rbx,40(%rbp)
	movq GHC.Types.True_closure@gotpcrel(%rip),%rbx
	addq $2,%rbx
	movq %rbx,48(%rbp)
	movq %rax,56(%rbp)
	movq 64(%rbp),%rax
	leaq -15(%r12),%rbx
	movq %rbx,64(%rbp)
	movq 80(%rbp),%rbx
	movq %rbx,72(%rbp)
	movq %rax,80(%rbp)
	addq $40,%rbp
	jmp *GHC.IO.Handle.Internals.mkDuplexHandle5_entry@gotpcrel(%rip)
_cbuP5:
	movq $24,904(%r13)
	leaq block_cbuP0_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbuP1, .-_cbuP1


==================== Asm code ====================
2018-03-16 16:06:28.129831728 UTC

.section .text
.align 8
_cbuP0:
_cbuP0:
	movq %rbx,(%rbp)
	jmp _cbuP1
	.size _cbuP0, .-_cbuP0


==================== Asm code ====================
2018-03-16 16:06:28.130383413 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuP0_info:
	.quad	_cbuP0
	.quad	10
	.quad	4294967326
	.quad	SbuCr_srt+208


==================== Asm code ====================
2018-03-16 16:06:28.132113328 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl4_rbnWL_bytes:
	.asciz "Pattern match failure in do expression at GHC/IO/Handle.hs:713:7-20"


==================== Asm code ====================
2018-03-16 16:06:28.135208549 UTC

.section .data
.align 8
.align 1
lvl5_rbnWM_closure:
	.quad	lvl5_rbnWM_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.135931088 UTC

.section .text
.align 8
lvl5_rbnWM_entry:
_cbuQv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuQw
_cbuQx:
	leaq block_cbuQt_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq lvl4_rbnWL_bytes(%rip),%r14
	addq $-8,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbuQw:
	leaq lvl5_rbnWM_closure(%rip),%rbx
	jmp *-8(%r13)
	.size lvl5_rbnWM_entry, .-lvl5_rbnWM_entry


==================== Asm code ====================
2018-03-16 16:06:28.136594322 UTC

.section .data.rel.ro
.align 8
.align 1
lvl5_rbnWM_info:
	.quad	lvl5_rbnWM_entry
	.quad	0
	.quad	12884901902
	.quad	4294967299
	.quad	SbuCr_srt+224


==================== Asm code ====================
2018-03-16 16:06:28.13721353 UTC

.section .text
.align 8
_cbuQt:
_cbuQt:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.IO.failIO1_entry@gotpcrel(%rip)
	.size _cbuQt, .-_cbuQt


==================== Asm code ====================
2018-03-16 16:06:28.137873965 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuQt_info:
	.quad	_cbuQt
	.quad	0
	.quad	4294967326
	.quad	SbuCr_srt+224


==================== Asm code ====================
2018-03-16 16:06:28.143953504 UTC

.section .data
.align 8
.align 1
dupHandleTo_rbnWN_closure:
	.quad	dupHandleTo_rbnWN_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.144720771 UTC

.section .text
.align 8
dupHandleTo_rbnWN_entry:
_cbuQR:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuQV
_cbuQW:
	leaq block_cbuQO_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbuQO
_cbuQP:
	movq (%rbx),%rax
	jmp *(%rax)
_cbuQV:
	leaq dupHandleTo_rbnWN_closure(%rip),%rbx
	jmp *-8(%r13)
	.size dupHandleTo_rbnWN_entry, .-dupHandleTo_rbnWN_entry


==================== Asm code ====================
2018-03-16 16:06:28.14580489 UTC

.section .data.rel.ro
.align 8
.align 1
dupHandleTo_rbnWN_info:
	.quad	dupHandleTo_rbnWN_entry
	.quad	0
	.quad	4098983643316238
	.quad	30064771098
	.quad	SbuCr_srt+96


==================== Asm code ====================
2018-03-16 16:06:28.146517145 UTC

.section .text
.align 8
_cbuQO:
_cbuQO:
	leaq block_cbuQU_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 23(%rbx),%rax
	movq 31(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbuQU
_cbuQY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbuQO, .-_cbuQO


==================== Asm code ====================
2018-03-16 16:06:28.147171331 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuQO_info:
	.quad	_cbuQO
	.quad	5
	.quad	1847183829631006
	.quad	SbuCr_srt+96


==================== Asm code ====================
2018-03-16 16:06:28.147816529 UTC

.section .text
.align 8
_cbuQU:
_cbuQU:
	leaq block_cbuR2_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rbx,%r14
	movq 7(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 23(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-40,%rbp
	jmp *GHC.IO.Handle.Internals.flushBuffer1_entry@gotpcrel(%rip)
	.size _cbuQU, .-_cbuQU


==================== Asm code ====================
2018-03-16 16:06:28.148428694 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuQU_info:
	.quad	_cbuQU
	.quad	6
	.quad	1847183829631006
	.quad	SbuCr_srt+96


==================== Asm code ====================
2018-03-16 16:06:28.149082802 UTC

.section .text
.align 8
_cbuR2:
_cbuR2:
	leaq block_cbuR4_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rsi
	movq 80(%rbp),%r14
	jmp *Data.Typeable.Internal.sameTypeRep_entry@gotpcrel(%rip)
	.size _cbuR2, .-_cbuR2


==================== Asm code ====================
2018-03-16 16:06:28.149794112 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuR2_info:
	.quad	_cbuR2
	.quad	11
	.quad	450971566110
	.quad	SbuCr_srt+192


==================== Asm code ====================
2018-03-16 16:06:28.150530041 UTC

.section .text
.align 8
_cbuR4:
_cbuR4:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbuRc
_cbuRl:
	leaq block_cbuRf_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 48(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.IO.Device.dup2_entry@gotpcrel(%rip)
_cbuRc:
	movq 64(%rbp),%r14
	addq $96,%rbp
	jmp ioe_dupHandlesNotCompatible_rbnWF_entry
	.size _cbuR4, .-_cbuR4


==================== Asm code ====================
2018-03-16 16:06:28.151200867 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuR4_info:
	.quad	_cbuR4
	.quad	32779
	.quad	176093659166
	.quad	SbuCr_srt+192


==================== Asm code ====================
2018-03-16 16:06:28.151910069 UTC

.section .text
.align 8
_cbuRf:
_cbuRf:
	movq 88(%rbp),%rax
	leaq block_cbuRh_info(%rip),%rbx
	movq %rbx,88(%rbp)
	movq 56(%rbp),%r9
	movq 48(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 72(%rbp),%rbx
	movq %rbx,64(%rbp)
	movq 40(%rbp),%rbx
	movq %rbx,72(%rbp)
	movq %rax,80(%rbp)
	addq $64,%rbp
	jmp dupHandle__rbnWK_entry
	.size _cbuRf, .-_cbuRf


==================== Asm code ====================
2018-03-16 16:06:28.152576612 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuRf_info:
	.quad	_cbuRf
	.quad	41483
	.quad	21474836510
	.quad	SbuCr_srt+216


==================== Asm code ====================
2018-03-16 16:06:28.153328465 UTC

.section .text
.align 8
_cbuRh:
_cbuRh:
	leaq block_cbuRj_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbuRj
_cbuRo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbuRh, .-_cbuRh


==================== Asm code ====================
2018-03-16 16:06:28.153955552 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuRh_info:
	.quad	_cbuRh
	.quad	0
	.quad	4294967326
	.quad	SbuCr_srt+232


==================== Asm code ====================
2018-03-16 16:06:28.154619273 UTC

.section .text
.align 8
_cbuRj:
_cbuRj:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbuRu
_cbuRy:
	addq $8,%rbp
	jmp lvl5_rbnWM_entry
_cbuRu:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_takeMVar#@gotpcrel(%rip)
	.size _cbuRj, .-_cbuRj


==================== Asm code ====================
2018-03-16 16:06:28.155250247 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuRj_info:
	.quad	_cbuRj
	.quad	0
	.quad	4294967326
	.quad	SbuCr_srt+232


==================== Asm code ====================
2018-03-16 16:06:28.156861831 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl6_rbnWO_bytes:
	.asciz "dupHandle"


==================== Asm code ====================
2018-03-16 16:06:28.160003748 UTC

.section .data
.align 8
.align 1
lvl7_rbnWP_closure:
	.quad	lvl7_rbnWP_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.160781336 UTC

.section .text
.align 8
lvl7_rbnWP_entry:
_cbuSy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuSz
_cbuSA:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbuSx
_cbuSw:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl6_rbnWO_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbuSz:
	jmp *-16(%r13)
_cbuSx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl7_rbnWP_entry, .-lvl7_rbnWP_entry


==================== Asm code ====================
2018-03-16 16:06:28.161743996 UTC

.section .data.rel.ro
.align 8
.align 1
lvl7_rbnWP_info:
	.quad	lvl7_rbnWP_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:28.163353935 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hSetNewlineMode3_bytes
.type GHC.IO.Handle.hSetNewlineMode3_bytes, @object
GHC.IO.Handle.hSetNewlineMode3_bytes:
	.asciz "hSetNewlineMode"


==================== Asm code ====================
2018-03-16 16:06:28.165852049 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetNewlineMode2_closure
.type GHC.IO.Handle.hSetNewlineMode2_closure, @object
GHC.IO.Handle.hSetNewlineMode2_closure:
	.quad	GHC.IO.Handle.hSetNewlineMode2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.166663337 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetNewlineMode2_entry
.type GHC.IO.Handle.hSetNewlineMode2_entry, @object
GHC.IO.Handle.hSetNewlineMode2_entry:
_cbuSQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuSR
_cbuSS:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbuSP
_cbuSO:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hSetNewlineMode3_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbuSR:
	jmp *-16(%r13)
_cbuSP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hSetNewlineMode2_entry, .-GHC.IO.Handle.hSetNewlineMode2_entry


==================== Asm code ====================
2018-03-16 16:06:28.167322719 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetNewlineMode2_info
.type GHC.IO.Handle.hSetNewlineMode2_info, @object
GHC.IO.Handle.hSetNewlineMode2_info:
	.quad	GHC.IO.Handle.hSetNewlineMode2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:28.172564316 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$whSetNewlineMode_closure
.type GHC.IO.Handle.$whSetNewlineMode_closure, @object
GHC.IO.Handle.$whSetNewlineMode_closure:
	.quad	GHC.IO.Handle.$whSetNewlineMode_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.173898693 UTC

.section .text
.align 8
sat_sbu0X_entry:
_cbuTd:
	leaq -136(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuTj
_cbuTk:
	leaq block_cbuTa_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbuTa
_cbuTb:
	movq (%rbx),%rax
	jmp *(%rax)
_cbuTj:
	jmp *-8(%r13)
	.size sat_sbu0X_entry, .-sat_sbu0X_entry


==================== Asm code ====================
2018-03-16 16:06:28.174548495 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbu0X_info:
	.quad	sat_sbu0X_entry
	.quad	2
	.quad	4294967307
	.quad	8589934597
	.quad	SbuCr_srt+96


==================== Asm code ====================
2018-03-16 16:06:28.175314916 UTC

.section .text
.align 8
_cbuTa:
_cbuTa:
	leaq block_cbuTg_info(%rip),%rax
	movq %rax,-112(%rbp)
	movq %rbx,%r14
	movq 15(%rbx),%rax
	movq %rax,-104(%rbp)
	movq 23(%rbx),%rax
	movq %rax,-96(%rbp)
	movq 31(%rbx),%rax
	movq %rax,-88(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-80(%rbp)
	movq 47(%rbx),%rax
	movq %rax,-72(%rbp)
	movq 55(%rbx),%rax
	movq %rax,-64(%rbp)
	movq 63(%rbx),%rax
	movq %rax,-56(%rbp)
	movq 71(%rbx),%rax
	movq %rax,-48(%rbp)
	movq 79(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 87(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 95(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 103(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 127(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	addq $-112,%rbp
	jmp *GHC.IO.Handle.Internals.flushBuffer1_entry@gotpcrel(%rip)
	.size _cbuTa, .-_cbuTa


==================== Asm code ====================
2018-03-16 16:06:28.176066119 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuTa_info:
	.quad	_cbuTa
	.quad	2
	.quad	4294967326
	.quad	SbuCr_srt+96


==================== Asm code ====================
2018-03-16 16:06:28.176910335 UTC

.section .text
.align 8
_cbuTg:
_cbuTg:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cbuTo
_cbuTn:
	movq GHC.IO.Handle.Types.Handle___con_info@gotpcrel(%rip),%rax
	movq %rax,-128(%r12)
	movq 112(%rbp),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq 16(%rbp),%rax
	movq %rax,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq 32(%rbp),%rax
	movq %rax,-88(%r12)
	movq 40(%rbp),%rax
	movq %rax,-80(%r12)
	movq 48(%rbp),%rax
	movq %rax,-72(%r12)
	movq 56(%rbp),%rax
	movq %rax,-64(%r12)
	movq 64(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 80(%rbp),%rax
	movq %rax,-40(%r12)
	movq 88(%rbp),%rax
	movq %rax,-32(%r12)
	movq 96(%rbp),%rax
	movq %rax,-24(%r12)
	movq 120(%rbp),%rax
	movq %rax,-16(%r12)
	movq 128(%rbp),%rax
	movq %rax,-8(%r12)
	movq 104(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbuTo:
	movq $136,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbuTg, .-_cbuTg


==================== Asm code ====================
2018-03-16 16:06:28.177799703 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuTg_info:
	.quad	_cbuTg
	.quad	16
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.178555378 UTC

.section .text
.align 8
.globl GHC.IO.Handle.$whSetNewlineMode_entry
.type GHC.IO.Handle.$whSetNewlineMode_entry, @object
GHC.IO.Handle.$whSetNewlineMode_entry:
_cbuTq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbuTu
_cbuTt:
	leaq sat_sbu0X_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -14(%r12),%rdi
	movq %r14,%rsi
	leaq GHC.IO.Handle.hSetNewlineMode2_closure(%rip),%r14
	jmp *GHC.IO.Handle.Internals.withAllHandles__1_entry@gotpcrel(%rip)
_cbuTu:
	movq $24,904(%r13)
	leaq GHC.IO.Handle.$whSetNewlineMode_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.$whSetNewlineMode_entry, .-GHC.IO.Handle.$whSetNewlineMode_entry


==================== Asm code ====================
2018-03-16 16:06:28.179224005 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.$whSetNewlineMode_info
.type GHC.IO.Handle.$whSetNewlineMode_info, @object
GHC.IO.Handle.$whSetNewlineMode_info:
	.quad	GHC.IO.Handle.$whSetNewlineMode_entry
	.quad	0
	.quad	31525201686560782
	.quad	17179869207
	.quad	SbuCr_srt+96


==================== Asm code ====================
2018-03-16 16:06:28.182287082 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetNewlineMode1_closure
.type GHC.IO.Handle.hSetNewlineMode1_closure, @object
GHC.IO.Handle.hSetNewlineMode1_closure:
	.quad	GHC.IO.Handle.hSetNewlineMode1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.183024038 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetNewlineMode1_entry
.type GHC.IO.Handle.hSetNewlineMode1_entry, @object
GHC.IO.Handle.hSetNewlineMode1_entry:
_cbuUq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuUr
_cbuUs:
	leaq block_cbuUn_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbuUn
_cbuUo:
	movq (%rbx),%rax
	jmp *(%rax)
_cbuUr:
	leaq GHC.IO.Handle.hSetNewlineMode1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hSetNewlineMode1_entry, .-GHC.IO.Handle.hSetNewlineMode1_entry


==================== Asm code ====================
2018-03-16 16:06:28.183699555 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetNewlineMode1_info
.type GHC.IO.Handle.hSetNewlineMode1_info, @object
GHC.IO.Handle.hSetNewlineMode1_info:
	.quad	GHC.IO.Handle.hSetNewlineMode1_entry
	.quad	0
	.quad	21474836494
	.quad	12884901903
	.quad	SbuCr_srt+264


==================== Asm code ====================
2018-03-16 16:06:28.184352073 UTC

.section .text
.align 8
_cbuUn:
_cbuUn:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.$whSetNewlineMode_entry
	.size _cbuUn, .-_cbuUn


==================== Asm code ====================
2018-03-16 16:06:28.184944572 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuUn_info:
	.quad	_cbuUn
	.quad	1
	.quad	4294967326
	.quad	SbuCr_srt+264


==================== Asm code ====================
2018-03-16 16:06:28.187376141 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetNewlineMode_closure
.type GHC.IO.Handle.hSetNewlineMode_closure, @object
GHC.IO.Handle.hSetNewlineMode_closure:
	.quad	GHC.IO.Handle.hSetNewlineMode_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.187988384 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetNewlineMode_entry
.type GHC.IO.Handle.hSetNewlineMode_entry, @object
GHC.IO.Handle.hSetNewlineMode_entry:
_cbuUL:
	jmp GHC.IO.Handle.hSetNewlineMode1_entry
	.size GHC.IO.Handle.hSetNewlineMode_entry, .-GHC.IO.Handle.hSetNewlineMode_entry


==================== Asm code ====================
2018-03-16 16:06:28.188515675 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetNewlineMode_info
.type GHC.IO.Handle.hSetNewlineMode_info, @object
GHC.IO.Handle.hSetNewlineMode_info:
	.quad	GHC.IO.Handle.hSetNewlineMode_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SbuCr_srt+280


==================== Asm code ====================
2018-03-16 16:06:28.190247604 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl8_rbnWQ_bytes:
	.asciz "hSetBinaryMode"


==================== Asm code ====================
2018-03-16 16:06:28.192712351 UTC

.section .data
.align 8
.align 1
lvl9_rbnWR_closure:
	.quad	lvl9_rbnWR_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.193591395 UTC

.section .text
.align 8
lvl9_rbnWR_entry:
_cbuUZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuV0
_cbuV1:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbuUY
_cbuUX:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl8_rbnWQ_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbuV0:
	jmp *-16(%r13)
_cbuUY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl9_rbnWR_entry, .-lvl9_rbnWR_entry


==================== Asm code ====================
2018-03-16 16:06:28.194271473 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_rbnWR_info:
	.quad	lvl9_rbnWR_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:28.196374192 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl10_rbnWS_bytes:
	.asciz "codec_state"


==================== Asm code ====================
2018-03-16 16:06:28.199475556 UTC

.section .data
.align 8
.align 1
lvl11_rbnWT_closure:
	.quad	lvl11_rbnWT_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.200235251 UTC

.section .text
.align 8
lvl11_rbnWT_entry:
_cbuVj:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuVk
_cbuVl:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbuVg
_cbuVf:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_cbuVh_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl10_rbnWS_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbuVk:
	jmp *-16(%r13)
_cbuVg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl11_rbnWT_entry, .-lvl11_rbnWT_entry


==================== Asm code ====================
2018-03-16 16:06:28.200909777 UTC

.section .data.rel.ro
.align 8
.align 1
lvl11_rbnWT_info:
	.quad	lvl11_rbnWT_entry
	.quad	0
	.quad	4294967317
	.quad	SbuCr_srt+288


==================== Asm code ====================
2018-03-16 16:06:28.201581814 UTC

.section .text
.align 8
_cbuVh:
_cbuVh:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size _cbuVh, .-_cbuVh


==================== Asm code ====================
2018-03-16 16:06:28.202161193 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuVh_info:
	.quad	_cbuVh
	.quad	0
	.quad	4294967326
	.quad	SbuCr_srt+288


==================== Asm code ====================
2018-03-16 16:06:28.241697692 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetBinaryMode1_closure
.type GHC.IO.Handle.hSetBinaryMode1_closure, @object
GHC.IO.Handle.hSetBinaryMode1_closure:
	.quad	GHC.IO.Handle.hSetBinaryMode1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.24276954 UTC

.section .text
.align 8
lvl48_sbu18_entry:
_cbuVM:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuVN
_cbuVO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbuVJ_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbuVJ
_cbuVK:
	movq (%rbx),%rax
	jmp *(%rax)
_cbuVN:
	jmp *-16(%r13)
	.size lvl48_sbu18_entry, .-lvl48_sbu18_entry


==================== Asm code ====================
2018-03-16 16:06:28.243562054 UTC

.section .data.rel.ro
.align 8
.align 1
lvl48_sbu18_info:
	.quad	lvl48_sbu18_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:28.244274801 UTC

.section .text
.align 8
_cbuVJ:
_cbuVJ:
	movq GHC.IO.Handle.Types.LF_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbuVJ, .-_cbuVJ


==================== Asm code ====================
2018-03-16 16:06:28.244958343 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuVJ_info:
	.quad	_cbuVJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.24595497 UTC

.section .text
.align 8
sat_sbu41_entry:
_cbuWE:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuWI
_cbuWJ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbuWB_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbuWB
_cbuWC:
	movq (%rbx),%rax
	jmp *(%rax)
_cbuWI:
	jmp *-16(%r13)
	.size sat_sbu41_entry, .-sat_sbu41_entry


==================== Asm code ====================
2018-03-16 16:06:28.246723274 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbu41_info:
	.quad	sat_sbu41_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:28.247599957 UTC

.section .text
.align 8
_cbuWB:
_cbuWB:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbuWM
_cbuWL:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rsi
	movq %rsi,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbuWM:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbuWB, .-_cbuWB


==================== Asm code ====================
2018-03-16 16:06:28.248480024 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuWB_info:
	.quad	_cbuWB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.249438279 UTC

.section .text
.align 8
sat_sbu4k_entry:
_cbuXa:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuXh
_cbuXi:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbuX7_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbuX7
_cbuX8:
	movq (%rbx),%rax
	jmp *(%rax)
_cbuXh:
	jmp *-16(%r13)
	.size sat_sbu4k_entry, .-sat_sbu4k_entry


==================== Asm code ====================
2018-03-16 16:06:28.250302439 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbu4k_info:
	.quad	sat_sbu4k_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:28.251212753 UTC

.section .text
.align 8
_cbuX7:
_cbuX7:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbuXl
_cbuXk:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 39(%rbx),%rbx
	addq 8(%rbp),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbuXl:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbuX7, .-_cbuX7


==================== Asm code ====================
2018-03-16 16:06:28.252075179 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuX7_info:
	.quad	_cbuX7
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.253057633 UTC

.section .text
.align 8
sat_sbu4H_entry:
_cbuXn:
	leaq -176(%rbp),%rax
	cmpq %r15,%rax
	jb _cbuXo
_cbuXp:
	leaq block_cbuVY_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbuVY
_cbuVZ:
	movq (%rbx),%rax
	jmp *(%rax)
_cbuXo:
	jmp *-8(%r13)
	.size sat_sbu4H_entry, .-sat_sbu4H_entry


==================== Asm code ====================
2018-03-16 16:06:28.254002951 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbu4H_info:
	.quad	sat_sbu4H_entry
	.quad	2
	.quad	52780853100555
	.quad	8589934597
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.255069413 UTC

.section .text
.align 8
_cbuVY:
_cbuVY:
	leaq block_cbuW3_info(%rip),%rax
	movq %rax,-104(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq 127(%rbx),%rbx
	movq %rbx,80(%rsp)
	movq 8(%r11),%rbx
	movq %rdx,88(%rsp)
	movq 72(%rsp),%rdx
	movq %rdx,-96(%rbp)
	movq 88(%rsp),%rdx
	movq %rdx,-88(%rbp)
	movq %rsi,-80(%rbp)
	movq %rdi,-72(%rbp)
	movq %r8,-64(%rbp)
	movq %r9,-56(%rbp)
	movq %r10,-48(%rbp)
	movq %r11,-40(%rbp)
	movq %r14,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq 80(%rsp),%rax
	movq %rax,-8(%rbp)
	movq 64(%rsp),%rax
	movq %rax,(%rbp)
	addq $-104,%rbp
	testb $7,%bl
	jne _cbuW3
_cbuW4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbuVY, .-_cbuVY


==================== Asm code ====================
2018-03-16 16:06:28.256157177 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuVY_info:
	.quad	_cbuVY
	.quad	2
	.quad	52780853100574
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.257101032 UTC

.section .text
.align 8
_cbuW3:
_cbuW3:
	leaq block_cbuWa_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbuWa
_cbuWb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbuW3, .-_cbuW3


==================== Asm code ====================
2018-03-16 16:06:28.257999493 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuW3_info:
	.quad	_cbuW3
	.quad	15
	.quad	52780853100574
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.259055502 UTC

.section .text
.align 8
_cbuWa:
_cbuWa:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbv1b
_cbv26:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _ubv2x
_cbv24:
	movq GHC.IO.Handle.Internals.flushCharBuffer2_closure@gotpcrel(%rip),%rbx
	addq $144,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_ubv2x:
	addq $24,%rbp
	jmp _sbu1D
_cbv1b:
	movq 80(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbuWf_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbuWf
_cbuWg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbuWa, .-_cbuWa


==================== Asm code ====================
2018-03-16 16:06:28.259990195 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuWa_info:
	.quad	_cbuWa
	.quad	209
	.quad	52780853100574
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.260915202 UTC

.section .text
.align 8
_cbuWf:
_cbuWf:
	leaq block_cbuWk_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbuWk
_cbuWl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbuWf, .-_cbuWf


==================== Asm code ====================
2018-03-16 16:06:28.261764827 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuWf_info:
	.quad	_cbuWf
	.quad	15
	.quad	35188667056158
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.262828537 UTC

.section .text
.align 8
_cbuWk:
_cbuWk:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbv1T
_ubv2y:
	addq $24,%rbp
	jmp _sbu1D
_ubv2z:
	addq $24,%rbp
	jmp _sbu1D
_cbv1T:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _ubv2z
_cbv1f:
	movq 72(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbuWs_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbuWs
_cbuWt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbuWk, .-_cbuWk


==================== Asm code ====================
2018-03-16 16:06:28.263757484 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuWk_info:
	.quad	_cbuWk
	.quad	209
	.quad	35188667056158
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.264895489 UTC

.section .text
.align 8
_cbuWs:
_cbuWs:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbv1i
_cbv1h:
	movq 64(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq 8(%rax),%rdx
	leaq sat_sbu41_info(%rip),%rsi
	movq %rsi,-16(%r12)
	movq %rdx,(%r12)
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_cbuWR_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rcx
	movq 64(%rsp),%rax
	movq %rax,%rbx
	movq %rcx,(%rbp)
	movq %r14,56(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbuWR
_cbuWS:
	movq (%rbx),%rax
	jmp *(%rax)
_cbv1i:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbuWs, .-_cbuWs


==================== Asm code ====================
2018-03-16 16:06:28.265969775 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuWs_info:
	.quad	_cbuWs
	.quad	4111
	.quad	35188667056158
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.266962276 UTC

.section .text
.align 8
_cbuWR:
_cbuWR:
	movq 39(%rbx),%rax
	testq %rax,%rax
	jne _cbv1l
_cbv1Q:
	movq 48(%rbp),%rax
	movq 8(%rbp),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $16,%rbp
	jmp _sbu1D
_cbv1l:
	leaq block_cbuWY_info(%rip),%rcx
	movq %rcx,-32(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq 96(%rbp),%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rsi,(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbuWY
_cbuWZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbuWR, .-_cbuWR


==================== Asm code ====================
2018-03-16 16:06:28.267932163 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuWR_info:
	.quad	_cbuWR
	.quad	16
	.quad	35188667056158
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.269052364 UTC

.section .text
.align 8
_cbuWY:
_cbuWY:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbv1n
_cbv1F:
	leaq block_cbv1t_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbv1t
_cbv1u:
	movq (%rbx),%rax
	jmp *(%rax)
_cbv1q:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbv1n:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbv1q
_cbv1p:
	leaq sat_sbu4k_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	movq 80(%rbp),%rax
	leaq -24(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $48,%rbp
	jmp _sbu1D
	.size _cbuWY, .-_cbuWY


==================== Asm code ====================
2018-03-16 16:06:28.271188948 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuWY_info:
	.quad	_cbuWY
	.quad	788
	.quad	35188667056158
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.271858669 UTC

.section .text
.align 8
_cbv1t:
_cbv1t:
	leaq block_cbv1y_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 96(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,96(%rbp)
	addq $-8,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
	.size _cbv1t, .-_cbv1t


==================== Asm code ====================
2018-03-16 16:06:28.27249672 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbv1t_info:
	.quad	_cbv1t
	.quad	788
	.quad	35188667056158
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.273227566 UTC

.section .text
.align 8
_cbv1y:
_cbv1y:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbv1J
_cbv1I:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	movq 40(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 48(%rbp),%rax
	leaq block_cbv1B_info(%rip),%rbx
	movq %rbx,48(%rbp)
	leaq -47(%r12),%r8
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 104(%rbp),%r14
	addq $48,%rbp
	jmp *GHC.IO.Handle.Internals.$wstreamEncode_entry@gotpcrel(%rip)
_cbv1J:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbv1y, .-_cbv1y


==================== Asm code ====================
2018-03-16 16:06:28.274044698 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbv1y_info:
	.quad	_cbv1y
	.quad	1557
	.quad	35188667056158
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.274673058 UTC

.section .text
.align 8
_cbv1B:
_cbv1B:
	leaq block_cbv1D_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbv1D
_cbv1L:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbv1B, .-_cbv1B


==================== Asm code ====================
2018-03-16 16:06:28.275251274 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbv1B_info:
	.quad	_cbv1B
	.quad	4111
	.quad	35188667056158
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.275957654 UTC

.section .text
.align 8
_cbv1D:
_cbv1D:
	movq 40(%rbp),%rax
	movq 7(%rbx),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $8,%rbp
	jmp _sbu1D
	.size _cbv1D, .-_cbv1D


==================== Asm code ====================
2018-03-16 16:06:28.276541938 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbv1D_info:
	.quad	_cbv1D
	.quad	4111
	.quad	35188667056158
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.27721081 UTC

.section .text
.align 8
_sbu1D:
_sbu1D:
	leaq block_cbuXx_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 80(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbuXx
_cbv09:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbu1D, .-_sbu1D


==================== Asm code ====================
2018-03-16 16:06:28.278068995 UTC

.section .text
.align 8
_cbuXx:
_cbuXx:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbv0g
_cbv0F:
	leaq block_cbv0D_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbv0D
_cbv0G:
	movq (%rbx),%rax
	jmp *(%rax)
_cbv0g:
	leaq block_cbv0d_info(%rip),%rax
	movq %rax,(%rbp)
	movq 80(%rbp),%rbx
	testb $7,%bl
	jne _cbv0d
_cbv0h:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbuXx, .-_cbuXx


==================== Asm code ====================
2018-03-16 16:06:28.278739468 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuXx_info:
	.quad	_cbuXx
	.quad	69647
	.quad	35188667056158
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.27945403 UTC

.section .text
.align 8
_cbv0d:
_cbv0d:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubv2F
_cbv0x:
	leaq block_cbv0q_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbv0q
_cbv0r:
	movq (%rbx),%rax
	jmp *(%rax)
_ubv2F:
	addq $8,%rbp
	jmp _sbu1F
	.size _cbv0d, .-_cbv0d


==================== Asm code ====================
2018-03-16 16:06:28.280088218 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbv0d_info:
	.quad	_cbv0d
	.quad	102415
	.quad	35188667056158
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.280698779 UTC

.section .text
.align 8
_cbv0q:
_cbv0q:
	leaq block_cbv0v_info(%rip),%rax
	movq %rax,(%rbp)
	movq 23(%rbx),%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cbv0q, .-_cbv0q


==================== Asm code ====================
2018-03-16 16:06:28.281278716 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbv0q_info:
	.quad	_cbv0q
	.quad	102415
	.quad	35188667056158
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.281933341 UTC

.section .text
.align 8
_cbv0v:
_cbv0v:
	addq $8,%rbp
	jmp _sbu1F
	.size _cbv0v, .-_cbv0v


==================== Asm code ====================
2018-03-16 16:06:28.282475854 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbv0v_info:
	.quad	_cbv0v
	.quad	102415
	.quad	35188667056158
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.283109327 UTC

.section .text
.align 8
_cbv0D:
_cbv0D:
	leaq block_cbv0K_info(%rip),%rax
	movq %rax,(%rbp)
	movq 23(%rbx),%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cbv0D, .-_cbv0D


==================== Asm code ====================
2018-03-16 16:06:28.283677659 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbv0D_info:
	.quad	_cbv0D
	.quad	69647
	.quad	35188667056158
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.284372864 UTC

.section .text
.align 8
_cbv0K:
_cbv0K:
	leaq block_cbv0M_info(%rip),%rax
	movq %rax,(%rbp)
	movq 80(%rbp),%rbx
	testb $7,%bl
	jne _cbv0M
_cbv0P:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbv0K, .-_cbv0K


==================== Asm code ====================
2018-03-16 16:06:28.284912106 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbv0K_info:
	.quad	_cbv0K
	.quad	69647
	.quad	35188667056158
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.285684726 UTC

.section .text
.align 8
_cbv0M:
_cbv0M:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubv2D
_cbv15:
	leaq block_cbv0Y_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbv0Y
_cbv0Z:
	movq (%rbx),%rax
	jmp *(%rax)
_ubv2D:
	addq $8,%rbp
	jmp _sbu1F
	.size _cbv0M, .-_cbv0M


==================== Asm code ====================
2018-03-16 16:06:28.286245755 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbv0M_info:
	.quad	_cbv0M
	.quad	102415
	.quad	35188667056158
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.286830069 UTC

.section .text
.align 8
_cbv0Y:
_cbv0Y:
	leaq block_cbv13_info(%rip),%rax
	movq %rax,(%rbp)
	movq 23(%rbx),%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cbv0Y, .-_cbv0Y


==================== Asm code ====================
2018-03-16 16:06:28.287396443 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbv0Y_info:
	.quad	_cbv0Y
	.quad	102415
	.quad	35188667056158
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.288040318 UTC

.section .text
.align 8
_cbv13:
_cbv13:
	addq $8,%rbp
	jmp _sbu1F
	.size _cbv13, .-_cbv13


==================== Asm code ====================
2018-03-16 16:06:28.288579084 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbv13_info:
	.quad	_cbv13
	.quad	102415
	.quad	35188667056158
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.289309327 UTC

.section .text
.align 8
_sbu1F:
_sbu1F:
	leaq block_cbuXE_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 104(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbuXE
_cbuZN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbu1F, .-_sbu1F


==================== Asm code ====================
2018-03-16 16:06:28.290110203 UTC

.section .text
.align 8
_cbuXE:
_cbuXE:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbuZU
_cbv08:
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,112(%rbp)
	addq $8,%rbp
	jmp _sbu1H
_cbuZU:
	leaq block_cbuZR_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.IO.Encoding.getLocaleEncoding1_closure@gotpcrel(%rip),%rbx
	testb $7,%bl
	jne _cbuZR
_cbuZV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbuXE, .-_cbuXE


==================== Asm code ====================
2018-03-16 16:06:28.290741859 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuXE_info:
	.quad	_cbuXE
	.quad	626703
	.quad	35188667056158
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.291405036 UTC

.section .text
.align 8
_cbuZR:
_cbuZR:
	leaq block_cbuZZ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cbuZR, .-_cbuZR


==================== Asm code ====================
2018-03-16 16:06:28.291993535 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuZR_info:
	.quad	_cbuZR
	.quad	626703
	.quad	4294967326
	.quad	SbuCr_srt+304


==================== Asm code ====================
2018-03-16 16:06:28.292693464 UTC

.section .text
.align 8
_cbuZZ:
_cbuZZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbv04
_cbv03:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,112(%rbp)
	addq $8,%rbp
	jmp _sbu1H
_cbv04:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbuZZ, .-_cbuZZ


==================== Asm code ====================
2018-03-16 16:06:28.294136897 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuZZ_info:
	.quad	_cbuZZ
	.quad	626703
	.quad	4294967326
	.quad	SbuCr_srt+304


==================== Asm code ====================
2018-03-16 16:06:28.294795996 UTC

.section .text
.align 8
_sbu1H:
_sbu1H:
	leaq block_cbuXJ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 104(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbuXJ
_cbuXL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbu1H, .-_sbu1H


==================== Asm code ====================
2018-03-16 16:06:28.295629853 UTC

.section .text
.align 8
_cbuXJ:
_cbuXJ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbuXU
_cbuY5:
	leaq block_cbuY3_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 6(%rbx),%rbx
	movq %rax,112(%rbp)
	testb $7,%bl
	jne _cbuY3
_cbuY6:
	movq (%rbx),%rax
	jmp *(%rax)
_cbuXX:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbuXU:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbuXX
_cbuXW:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl11_rbnWT_closure(%rip),%rax
	movq %rax,-8(%r12)
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	movq %rax,(%r12)
	leaq block_cbuXQ_info(%rip),%rax
	movq %rax,(%rbp)
	leaq -15(%r12),%rbx
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _cbuXJ, .-_cbuXJ


==================== Asm code ====================
2018-03-16 16:06:28.296394244 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuXJ_info:
	.quad	_cbuXJ
	.quad	626703
	.quad	4294967326
	.quad	SbuCr_srt+304


==================== Asm code ====================
2018-03-16 16:06:28.297303676 UTC

.section .text
.align 8
_cbuXQ:
_cbuXQ:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cbuY0
_cbuXZ:
	movq GHC.IO.Handle.Types.Handle___con_info@gotpcrel(%rip),%rax
	movq %rax,-128(%r12)
	movq 104(%rbp),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq 16(%rbp),%rax
	movq %rax,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq 32(%rbp),%rax
	movq %rax,-88(%r12)
	movq 40(%rbp),%rax
	movq %rax,-80(%r12)
	movq 48(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 64(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%r12)
	movq 120(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rax,-8(%r12)
	movq 96(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbuY0:
	movq $136,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbuXQ, .-_cbuXQ


==================== Asm code ====================
2018-03-16 16:06:28.298111893 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuXQ_info:
	.quad	_cbuXQ
	.quad	626703
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.298815383 UTC

.section .text
.align 8
_cbuY3:
_cbuY3:
	leaq block_cbuYc_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,80(%rbp)
	movq %rax,88(%rbp)
	testb $7,%bl
	jne _cbuYc
_cbuZo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbuY3, .-_cbuY3


==================== Asm code ====================
2018-03-16 16:06:28.299497478 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuY3_info:
	.quad	_cbuY3
	.quad	102415
	.quad	4294967326
	.quad	SbuCr_srt+304


==================== Asm code ====================
2018-03-16 16:06:28.300223664 UTC

.section .text
.align 8
_cbuYc:
_cbuYc:
	movq 88(%rbp),%rax
	andl $7,%ebx
	cmpq $3,%rbx
	jne _ubv2u
_cbuZz:
	leaq block_cbuZx_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_ubv2u:
	cmpq $6,%rbx
	jne _cbuZu
_cbuZI:
	leaq block_cbuZG_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_cbuZu:
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,88(%rbp)
	addq $8,%rbp
	jmp _sbu1Y
	.size _cbuYc, .-_cbuYc


==================== Asm code ====================
2018-03-16 16:06:28.301563707 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuYc_info:
	.quad	_cbuYc
	.quad	4111
	.quad	4294967326
	.quad	SbuCr_srt+304


==================== Asm code ====================
2018-03-16 16:06:28.30228916 UTC

.section .text
.align 8
_cbuZG:
_cbuZG:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbuZM
_cbuZL:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,88(%rbp)
	addq $8,%rbp
	jmp _sbu1Y
_cbuZM:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbuZG, .-_cbuZG


==================== Asm code ====================
2018-03-16 16:06:28.302917221 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuZG_info:
	.quad	_cbuZG
	.quad	69647
	.quad	4294967326
	.quad	SbuCr_srt+304


==================== Asm code ====================
2018-03-16 16:06:28.303577576 UTC

.section .text
.align 8
_cbuZx:
_cbuZx:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbuZD
_cbuZC:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,88(%rbp)
	addq $8,%rbp
	jmp _sbu1Y
_cbuZD:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbuZx, .-_cbuZx


==================== Asm code ====================
2018-03-16 16:06:28.304178654 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuZx_info:
	.quad	_cbuZx
	.quad	69647
	.quad	4294967326
	.quad	SbuCr_srt+304


==================== Asm code ====================
2018-03-16 16:06:28.304883309 UTC

.section .text
.align 8
_sbu1Y:
_sbu1Y:
	leaq block_cbuYh_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbuYh
_cbuYj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbu1Y, .-_sbu1Y


==================== Asm code ====================
2018-03-16 16:06:28.305923611 UTC

.section .text
.align 8
_cbuYh:
_cbuYh:
	movq 80(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $5,%rcx
	jb _ubv2v
_ubv2w:
	cmpq $6,%rcx
	jb _cbuZ0
_cbuZh:
	leaq block_cbuZ9_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_cbuZ0:
	leaq block_cbuYS_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_ubv2v:
	cmpq $4,%rcx
	jb _cbuYs
_cbuYJ:
	leaq block_cbuYB_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_cbuYv:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbuYs:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbuYv
_cbuYu:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl11_rbnWT_closure(%rip),%rax
	movq %rax,-8(%r12)
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	movq %rax,(%r12)
	leaq block_cbuYo_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	leaq -15(%r12),%rbx
	movq %rax,80(%rbp)
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _cbuYh, .-_cbuYh


==================== Asm code ====================
2018-03-16 16:06:28.306752936 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuYh_info:
	.quad	_cbuYh
	.quad	4623
	.quad	4294967326
	.quad	SbuCr_srt+304


==================== Asm code ====================
2018-03-16 16:06:28.307587176 UTC

.section .text
.align 8
_cbuYo:
_cbuYo:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cbuYy
_cbuYx:
	movq GHC.IO.Handle.Types.Handle___con_info@gotpcrel(%rip),%rax
	movq %rax,-128(%r12)
	movq 104(%rbp),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq 16(%rbp),%rax
	movq %rax,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq 80(%rbp),%rax
	movq %rax,-88(%r12)
	movq 40(%rbp),%rax
	movq %rax,-80(%r12)
	movq 48(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 64(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	movq 88(%rbp),%rax
	movq %rax,-32(%r12)
	movq 112(%rbp),%rax
	movq %rax,-24(%r12)
	movq 120(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rax,-8(%r12)
	movq 96(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbuYy:
	movq $136,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbuYo, .-_cbuYo


==================== Asm code ====================
2018-03-16 16:06:28.308360406 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuYo_info:
	.quad	_cbuYo
	.quad	4623
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.30909545 UTC

.section .text
.align 8
_cbuYB:
_cbuYB:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbuYM
_cbuYL:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl11_rbnWT_closure(%rip),%rax
	movq %rax,-8(%r12)
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	movq %rax,(%r12)
	leaq block_cbuYE_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	leaq -15(%r12),%rbx
	movq %rax,80(%rbp)
	jmp *stg_newMutVar#@gotpcrel(%rip)
_cbuYM:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbuYB, .-_cbuYB


==================== Asm code ====================
2018-03-16 16:06:28.309809179 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuYB_info:
	.quad	_cbuYB
	.quad	37391
	.quad	4294967326
	.quad	SbuCr_srt+304


==================== Asm code ====================
2018-03-16 16:06:28.310681231 UTC

.section .text
.align 8
_cbuYE:
_cbuYE:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _cbuYP
_cbuYO:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-144(%r12)
	movq 80(%rbp),%rax
	movq %rax,-136(%r12)
	movq GHC.IO.Handle.Types.Handle___con_info@gotpcrel(%rip),%rax
	movq %rax,-128(%r12)
	movq 104(%rbp),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq 16(%rbp),%rax
	movq %rax,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq GHC.IO.Handle.Types.WriteHandle_closure@gotpcrel(%rip),%rax
	addq $4,%rax
	movq %rax,-88(%r12)
	movq 40(%rbp),%rax
	movq %rax,-80(%r12)
	movq 48(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 64(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	leaq -142(%r12),%rax
	movq %rax,-40(%r12)
	movq 88(%rbp),%rax
	movq %rax,-32(%r12)
	movq 112(%rbp),%rax
	movq %rax,-24(%r12)
	movq 120(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rax,-8(%r12)
	movq 96(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbuYP:
	movq $152,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbuYE, .-_cbuYE


==================== Asm code ====================
2018-03-16 16:06:28.311501975 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuYE_info:
	.quad	_cbuYE
	.quad	4623
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.312212402 UTC

.section .text
.align 8
_cbuYS:
_cbuYS:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbuZ3
_cbuZ2:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl11_rbnWT_closure(%rip),%rax
	movq %rax,-8(%r12)
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	movq %rax,(%r12)
	leaq block_cbuYV_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	leaq -15(%r12),%rbx
	movq %rax,80(%rbp)
	jmp *stg_newMutVar#@gotpcrel(%rip)
_cbuZ3:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbuYS, .-_cbuYS


==================== Asm code ====================
2018-03-16 16:06:28.312899586 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuYS_info:
	.quad	_cbuYS
	.quad	37391
	.quad	4294967326
	.quad	SbuCr_srt+304


==================== Asm code ====================
2018-03-16 16:06:28.313786524 UTC

.section .text
.align 8
_cbuYV:
_cbuYV:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _cbuZ6
_cbuZ5:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-144(%r12)
	movq 80(%rbp),%rax
	movq %rax,-136(%r12)
	movq GHC.IO.Handle.Types.Handle___con_info@gotpcrel(%rip),%rax
	movq %rax,-128(%r12)
	movq 104(%rbp),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq 16(%rbp),%rax
	movq %rax,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq GHC.IO.Handle.Types.AppendHandle_closure@gotpcrel(%rip),%rax
	addq $5,%rax
	movq %rax,-88(%r12)
	movq 40(%rbp),%rax
	movq %rax,-80(%r12)
	movq 48(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 64(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	leaq -142(%r12),%rax
	movq %rax,-40(%r12)
	movq 88(%rbp),%rax
	movq %rax,-32(%r12)
	movq 112(%rbp),%rax
	movq %rax,-24(%r12)
	movq 120(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rax,-8(%r12)
	movq 96(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbuZ6:
	movq $152,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbuYV, .-_cbuYV


==================== Asm code ====================
2018-03-16 16:06:28.314617175 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuYV_info:
	.quad	_cbuYV
	.quad	4623
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.315309136 UTC

.section .text
.align 8
_cbuZ9:
_cbuZ9:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbuZk
_cbuZj:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl11_rbnWT_closure(%rip),%rax
	movq %rax,-8(%r12)
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	movq %rax,(%r12)
	leaq block_cbuZc_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	leaq -15(%r12),%rbx
	movq %rax,80(%rbp)
	jmp *stg_newMutVar#@gotpcrel(%rip)
_cbuZk:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbuZ9, .-_cbuZ9


==================== Asm code ====================
2018-03-16 16:06:28.315992179 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuZ9_info:
	.quad	_cbuZ9
	.quad	37391
	.quad	4294967326
	.quad	SbuCr_srt+304


==================== Asm code ====================
2018-03-16 16:06:28.316826978 UTC

.section .text
.align 8
_cbuZc:
_cbuZc:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _cbuZn
_cbuZm:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-144(%r12)
	movq 80(%rbp),%rax
	movq %rax,-136(%r12)
	movq GHC.IO.Handle.Types.Handle___con_info@gotpcrel(%rip),%rax
	movq %rax,-128(%r12)
	movq 104(%rbp),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq 16(%rbp),%rax
	movq %rax,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq GHC.IO.Handle.Types.ReadWriteHandle_closure@gotpcrel(%rip),%rax
	addq $6,%rax
	movq %rax,-88(%r12)
	movq 40(%rbp),%rax
	movq %rax,-80(%r12)
	movq 48(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 64(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	leaq -142(%r12),%rax
	movq %rax,-40(%r12)
	movq 88(%rbp),%rax
	movq %rax,-32(%r12)
	movq 112(%rbp),%rax
	movq %rax,-24(%r12)
	movq 120(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rax,-8(%r12)
	movq 96(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbuZn:
	movq $152,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbuZc, .-_cbuZc


==================== Asm code ====================
2018-03-16 16:06:28.318065726 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbuZc_info:
	.quad	_cbuZc
	.quad	4623
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.318792695 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetBinaryMode1_entry
.type GHC.IO.Handle.hSetBinaryMode1_entry, @object
GHC.IO.Handle.hSetBinaryMode1_entry:
_cbv3n:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbv3r
_cbv3q:
	leaq lvl48_sbu18_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rsi,-24(%r12)
	leaq sat_sbu4H_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rsi,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rdi
	movq %r14,%rsi
	leaq lvl9_rbnWR_closure(%rip),%r14
	jmp *GHC.IO.Handle.Internals.withAllHandles__1_entry@gotpcrel(%rip)
_cbv3r:
	movq $48,904(%r13)
	leaq GHC.IO.Handle.hSetBinaryMode1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hSetBinaryMode1_entry, .-GHC.IO.Handle.hSetBinaryMode1_entry


==================== Asm code ====================
2018-03-16 16:06:28.319471997 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetBinaryMode1_info
.type GHC.IO.Handle.hSetBinaryMode1_info, @object
GHC.IO.Handle.hSetBinaryMode1_info:
	.quad	GHC.IO.Handle.hSetBinaryMode1_entry
	.quad	0
	.quad	264436841447438
	.quad	12884901903
	.quad	SbuCr_srt+200


==================== Asm code ====================
2018-03-16 16:06:28.321896338 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetBinaryMode_closure
.type GHC.IO.Handle.hSetBinaryMode_closure, @object
GHC.IO.Handle.hSetBinaryMode_closure:
	.quad	GHC.IO.Handle.hSetBinaryMode_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.322527864 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetBinaryMode_entry
.type GHC.IO.Handle.hSetBinaryMode_entry, @object
GHC.IO.Handle.hSetBinaryMode_entry:
_cbv9J:
	jmp GHC.IO.Handle.hSetBinaryMode1_entry
	.size GHC.IO.Handle.hSetBinaryMode_entry, .-GHC.IO.Handle.hSetBinaryMode_entry


==================== Asm code ====================
2018-03-16 16:06:28.323108644 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetBinaryMode_info
.type GHC.IO.Handle.hSetBinaryMode_info, @object
GHC.IO.Handle.hSetBinaryMode_info:
	.quad	GHC.IO.Handle.hSetBinaryMode_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SbuCr_srt+312


==================== Asm code ====================
2018-03-16 16:06:28.324743051 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hIsSeekable4_bytes
.type GHC.IO.Handle.hIsSeekable4_bytes, @object
GHC.IO.Handle.hIsSeekable4_bytes:
	.asciz "hIsSeekable"


==================== Asm code ====================
2018-03-16 16:06:28.327220453 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsSeekable3_closure
.type GHC.IO.Handle.hIsSeekable3_closure, @object
GHC.IO.Handle.hIsSeekable3_closure:
	.quad	GHC.IO.Handle.hIsSeekable3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.328099312 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsSeekable3_entry
.type GHC.IO.Handle.hIsSeekable3_entry, @object
GHC.IO.Handle.hIsSeekable3_entry:
_cbv9X:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbv9Y
_cbv9Z:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbv9W
_cbv9V:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hIsSeekable4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbv9Y:
	jmp *-16(%r13)
_cbv9W:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hIsSeekable3_entry, .-GHC.IO.Handle.hIsSeekable3_entry


==================== Asm code ====================
2018-03-16 16:06:28.328804404 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsSeekable3_info
.type GHC.IO.Handle.hIsSeekable3_info, @object
GHC.IO.Handle.hIsSeekable3_info:
	.quad	GHC.IO.Handle.hIsSeekable3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:28.334154221 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsSeekable2_closure
.type GHC.IO.Handle.hIsSeekable2_closure, @object
GHC.IO.Handle.hIsSeekable2_closure:
	.quad	GHC.IO.Handle.hIsSeekable2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.334917818 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsSeekable2_entry
.type GHC.IO.Handle.hIsSeekable2_entry, @object
GHC.IO.Handle.hIsSeekable2_entry:
_cbvaf:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvag
_cbvah:
	leaq block_cbvac_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbvac
_cbvad:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvag:
	leaq GHC.IO.Handle.hIsSeekable2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsSeekable2_entry, .-GHC.IO.Handle.hIsSeekable2_entry


==================== Asm code ====================
2018-03-16 16:06:28.335587978 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsSeekable2_info
.type GHC.IO.Handle.hIsSeekable2_info, @object
GHC.IO.Handle.hIsSeekable2_info:
	.quad	GHC.IO.Handle.hIsSeekable2_entry
	.quad	0
	.quad	216172786408751118
	.quad	8589934597
	.quad	SbuCr_srt+136


==================== Asm code ====================
2018-03-16 16:06:28.336311934 UTC

.section .text
.align 8
_cbvac:
_cbvac:
	leaq block_cbvak_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbvak
_cbvam:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvac, .-_cbvac


==================== Asm code ====================
2018-03-16 16:06:28.337578497 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvac_info:
	.quad	_cbvac
	.quad	0
	.quad	72057598332895262
	.quad	SbuCr_srt+136


==================== Asm code ====================
2018-03-16 16:06:28.338491989 UTC

.section .text
.align 8
_cbvak:
_cbvak:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _ubvaP
_ubvaQ:
	cmpq $5,%rax
	je _cbvaK
_cbvav:
	movq 16(%rbp),%rax
	leaq block_cbvaq_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_pv_info@gotpcrel(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	jmp *GHC.IO.Device.isSeekable_entry@gotpcrel(%rip)
_cbvaN:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbvaK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbvaN
_cbvaM:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ubvaP:
	cmpq $2,%rax
	jb _cbvaC
_cbvaG:
	addq $32,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry@gotpcrel(%rip)
_cbvaC:
	addq $32,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_closedHandle1_entry@gotpcrel(%rip)
	.size _cbvak, .-_cbvak


==================== Asm code ====================
2018-03-16 16:06:28.339292875 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvak_info:
	.quad	_cbvak
	.quad	3
	.quad	72057598332895262
	.quad	SbuCr_srt+136


==================== Asm code ====================
2018-03-16 16:06:28.339979742 UTC

.section .text
.align 8
_cbvaq:
_cbvaq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbvay
_cbvax:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbvay:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvaq, .-_cbvaq


==================== Asm code ====================
2018-03-16 16:06:28.340596285 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvaq_info:
	.quad	_cbvaq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.348737201 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsSeekable1_closure
.type GHC.IO.Handle.hIsSeekable1_closure, @object
GHC.IO.Handle.hIsSeekable1_closure:
	.quad	GHC.IO.Handle.hIsSeekable1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.349548795 UTC

.section .text
.align 8
io_sbu5h_entry:
_cbvbH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvbL
_cbvbM:
	leaq block_cbvbC_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	leaq GHC.IO.Handle.hIsSeekable2_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	leaq GHC.IO.Handle.hIsSeekable3_closure(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbvbL:
	jmp *-8(%r13)
	.size io_sbu5h_entry, .-io_sbu5h_entry


==================== Asm code ====================
2018-03-16 16:06:28.350208424 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbu5h_info:
	.quad	io_sbu5h_entry
	.quad	2
	.quad	3458764518115508235
	.quad	4294967299
	.quad	SbuCr_srt+112


==================== Asm code ====================
2018-03-16 16:06:28.350882045 UTC

.section .text
.align 8
_cbvbC:
_cbvbC:
	leaq block_cbvbE_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbvbE
_cbvbF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvbC, .-_cbvbC


==================== Asm code ====================
2018-03-16 16:06:28.351427917 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvbC_info:
	.quad	_cbvbC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.352074958 UTC

.section .text
.align 8
_cbvbE:
_cbvbE:
	leaq block_cbvbK_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbvbE, .-_cbvbE


==================== Asm code ====================
2018-03-16 16:06:28.352694511 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvbE_info:
	.quad	_cbvbE
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.353363936 UTC

.section .text
.align 8
_cbvbK:
_cbvbK:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbvbK, .-_cbvbK


==================== Asm code ====================
2018-03-16 16:06:28.353953226 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvbK_info:
	.quad	_cbvbK
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.354727652 UTC

.section .text
.align 8
io_sbu5x_entry:
_cbvc6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvca
_cbvcb:
	leaq block_cbvc1_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	leaq GHC.IO.Handle.hIsSeekable2_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	leaq GHC.IO.Handle.hIsSeekable3_closure(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbvca:
	jmp *-8(%r13)
	.size io_sbu5x_entry, .-io_sbu5x_entry


==================== Asm code ====================
2018-03-16 16:06:28.355389768 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbu5x_info:
	.quad	io_sbu5x_entry
	.quad	2
	.quad	3458764518115508235
	.quad	4294967299
	.quad	SbuCr_srt+112


==================== Asm code ====================
2018-03-16 16:06:28.35605004 UTC

.section .text
.align 8
_cbvc1:
_cbvc1:
	leaq block_cbvc3_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbvc3
_cbvc4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvc1, .-_cbvc1


==================== Asm code ====================
2018-03-16 16:06:28.356600286 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvc1_info:
	.quad	_cbvc1
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.357484136 UTC

.section .text
.align 8
_cbvc3:
_cbvc3:
	leaq block_cbvc9_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbvc3, .-_cbvc3


==================== Asm code ====================
2018-03-16 16:06:28.358072191 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvc3_info:
	.quad	_cbvc3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.358718665 UTC

.section .text
.align 8
_cbvc9:
_cbvc9:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbvc9, .-_cbvc9


==================== Asm code ====================
2018-03-16 16:06:28.359267852 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvc9_info:
	.quad	_cbvc9
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.359993762 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsSeekable1_entry
.type GHC.IO.Handle.hIsSeekable1_entry, @object
GHC.IO.Handle.hIsSeekable1_entry:
_cbvcl:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvcm
_cbvcn:
	leaq block_cbvbq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbvbq
_cbvbr:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvcm:
	leaq GHC.IO.Handle.hIsSeekable1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsSeekable1_entry, .-GHC.IO.Handle.hIsSeekable1_entry


==================== Asm code ====================
2018-03-16 16:06:28.360660493 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsSeekable1_info
.type GHC.IO.Handle.hIsSeekable1_info, @object
GHC.IO.Handle.hIsSeekable1_info:
	.quad	GHC.IO.Handle.hIsSeekable1_entry
	.quad	0
	.quad	8070450536542896142
	.quad	8589934597
	.quad	SbuCr_srt+112


==================== Asm code ====================
2018-03-16 16:06:28.361447732 UTC

.section .text
.align 8
_cbvbq:
_cbvbq:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbvci
_cbvcj:
	leaq block_cbvbU_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_cbvci:
	leaq block_cbvbv_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _cbvbq, .-_cbvbq


==================== Asm code ====================
2018-03-16 16:06:28.362137147 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvbq_info:
	.quad	_cbvbq
	.quad	0
	.quad	3458764518115508254
	.quad	SbuCr_srt+112


==================== Asm code ====================
2018-03-16 16:06:28.362939318 UTC

.section .text
.align 8
_cbvbv:
_cbvbv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbvcr
_cbvcq:
	leaq io_sbu5h_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbvcv
_cbvcu:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbu5h_entry
_cbvcv:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbvcr:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbvbv, .-_cbvbv


==================== Asm code ====================
2018-03-16 16:06:28.363610579 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvbv_info:
	.quad	_cbvbv
	.quad	2
	.quad	3458764518115508254
	.quad	SbuCr_srt+112


==================== Asm code ====================
2018-03-16 16:06:28.36432091 UTC

.section .text
.align 8
_cbvbU:
_cbvbU:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbvcz
_cbvcy:
	leaq io_sbu5x_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbvcD
_cbvcC:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbu5x_entry
_cbvcD:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbvcz:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbvbU, .-_cbvbU


==================== Asm code ====================
2018-03-16 16:06:28.365040335 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvbU_info:
	.quad	_cbvbU
	.quad	2
	.quad	3458764518115508254
	.quad	SbuCr_srt+112


==================== Asm code ====================
2018-03-16 16:06:28.367451379 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsSeekable_closure
.type GHC.IO.Handle.hIsSeekable_closure, @object
GHC.IO.Handle.hIsSeekable_closure:
	.quad	GHC.IO.Handle.hIsSeekable_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.368168727 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsSeekable_entry
.type GHC.IO.Handle.hIsSeekable_entry, @object
GHC.IO.Handle.hIsSeekable_entry:
_cbvdL:
	jmp GHC.IO.Handle.hIsSeekable1_entry
	.size GHC.IO.Handle.hIsSeekable_entry, .-GHC.IO.Handle.hIsSeekable_entry


==================== Asm code ====================
2018-03-16 16:06:28.368770209 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsSeekable_info
.type GHC.IO.Handle.hIsSeekable_info, @object
GHC.IO.Handle.hIsSeekable_info:
	.quad	GHC.IO.Handle.hIsSeekable_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbuCr_srt+352


==================== Asm code ====================
2018-03-16 16:06:28.370783253 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hGetPosn4_bytes
.type GHC.IO.Handle.hGetPosn4_bytes, @object
GHC.IO.Handle.hGetPosn4_bytes:
	.asciz "hGetPosn"


==================== Asm code ====================
2018-03-16 16:06:28.374117447 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetPosn3_closure
.type GHC.IO.Handle.hGetPosn3_closure, @object
GHC.IO.Handle.hGetPosn3_closure:
	.quad	GHC.IO.Handle.hGetPosn3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.37511706 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetPosn3_entry
.type GHC.IO.Handle.hGetPosn3_entry, @object
GHC.IO.Handle.hGetPosn3_entry:
_cbvdZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbve0
_cbve1:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbvdY
_cbvdX:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hGetPosn4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbve0:
	jmp *-16(%r13)
_cbvdY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hGetPosn3_entry, .-GHC.IO.Handle.hGetPosn3_entry


==================== Asm code ====================
2018-03-16 16:06:28.375860233 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetPosn3_info
.type GHC.IO.Handle.hGetPosn3_info, @object
GHC.IO.Handle.hGetPosn3_info:
	.quad	GHC.IO.Handle.hGetPosn3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:28.397755443 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetPosn2_closure
.type GHC.IO.Handle.hGetPosn2_closure, @object
GHC.IO.Handle.hGetPosn2_closure:
	.quad	GHC.IO.Handle.hGetPosn2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.398830991 UTC

.section .text
.align 8
sat_sbu6x_entry:
_cbveC:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbveD
_cbveE:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbvez_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbvez
_cbveA:
	movq (%rbx),%rax
	jmp *(%rax)
_cbveD:
	jmp *-16(%r13)
	.size sat_sbu6x_entry, .-sat_sbu6x_entry


==================== Asm code ====================
2018-03-16 16:06:28.399702055 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbu6x_info:
	.quad	sat_sbu6x_entry
	.quad	2
	.quad	12884901906
	.quad	SbuCr_srt+360


==================== Asm code ====================
2018-03-16 16:06:28.400521429 UTC

.section .text
.align 8
_cbvez:
_cbvez:
	leaq block_cbveH_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbveH
_cbveJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvez, .-_cbvez


==================== Asm code ====================
2018-03-16 16:06:28.401520676 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvez_info:
	.quad	_cbvez
	.quad	1
	.quad	12884901918
	.quad	SbuCr_srt+360


==================== Asm code ====================
2018-03-16 16:06:28.402400137 UTC

.section .text
.align 8
_cbveH:
_cbveH:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbveT
_cbvf5:
	leaq block_cbvf3_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rcx,%r14
	subq %rax,%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_cbveT:
	leaq block_cbveQ_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rcx,%r14
	subq %rax,%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _cbveH, .-_cbveH


==================== Asm code ====================
2018-03-16 16:06:28.403198881 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbveH_info:
	.quad	_cbveH
	.quad	195
	.quad	12884901918
	.quad	SbuCr_srt+360


==================== Asm code ====================
2018-03-16 16:06:28.403978113 UTC

.section .text
.align 8
_cbveQ:
_cbveQ:
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.minusInteger_entry@gotpcrel(%rip)
	.size _cbveQ, .-_cbveQ


==================== Asm code ====================
2018-03-16 16:06:28.404697204 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbveQ_info:
	.quad	_cbveQ
	.quad	1
	.quad	4294967326
	.quad	SbuCr_srt+368


==================== Asm code ====================
2018-03-16 16:06:28.40547257 UTC

.section .text
.align 8
_cbvf3:
_cbvf3:
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
	.size _cbvf3, .-_cbvf3


==================== Asm code ====================
2018-03-16 16:06:28.406153224 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvf3_info:
	.quad	_cbvf3
	.quad	1
	.quad	4294967326
	.quad	SbuCr_srt+360


==================== Asm code ====================
2018-03-16 16:06:28.407067889 UTC

.section .text
.align 8
sat_sbu71_entry:
_cbvfH:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvfL
_cbvfM:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbvfE_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbvfE
_cbvfF:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvfL:
	jmp *-16(%r13)
	.size sat_sbu71_entry, .-sat_sbu71_entry


==================== Asm code ====================
2018-03-16 16:06:28.407768141 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbu71_info:
	.quad	sat_sbu71_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:28.408626851 UTC

.section .text
.align 8
_cbvfE:
_cbvfE:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbvfP
_cbvfO:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rsi
	movq %rsi,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbvfP:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvfE, .-_cbvfE


==================== Asm code ====================
2018-03-16 16:06:28.409449086 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvfE_info:
	.quad	_cbvfE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.410352505 UTC

.section .text
.align 8
sat_sbu7k_entry:
_cbvgd:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvgk
_cbvgl:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbvga_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbvga
_cbvgb:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvgk:
	jmp *-16(%r13)
	.size sat_sbu7k_entry, .-sat_sbu7k_entry


==================== Asm code ====================
2018-03-16 16:06:28.4111302 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbu7k_info:
	.quad	sat_sbu7k_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:28.412014529 UTC

.section .text
.align 8
_cbvga:
_cbvga:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbvgo
_cbvgn:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 39(%rbx),%rbx
	addq 8(%rbp),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbvgo:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvga, .-_cbvga


==================== Asm code ====================
2018-03-16 16:06:28.412809417 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvga_info:
	.quad	_cbvga
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.413799066 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetPosn2_entry
.type GHC.IO.Handle.hGetPosn2_entry, @object
GHC.IO.Handle.hGetPosn2_entry:
_cbvgq:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvgr
_cbvgs:
	leaq block_cbvee_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbvee
_cbvef:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvgr:
	leaq GHC.IO.Handle.hGetPosn2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hGetPosn2_entry, .-GHC.IO.Handle.hGetPosn2_entry


==================== Asm code ====================
2018-03-16 16:06:28.414527793 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetPosn2_info
.type GHC.IO.Handle.hGetPosn2_info, @object
GHC.IO.Handle.hGetPosn2_info:
	.quad	GHC.IO.Handle.hGetPosn2_entry
	.quad	0
	.quad	7700876361742
	.quad	8589934597
	.quad	SbuCr_srt+296


==================== Asm code ====================
2018-03-16 16:06:28.415405421 UTC

.section .text
.align 8
_cbvee:
_cbvee:
	leaq block_cbvej_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 7(%rbx),%r14
	movq stg_ap_pv_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 31(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 63(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 71(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 95(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,(%rbp)
	addq $-48,%rbp
	jmp *GHC.IO.Device.tell_entry@gotpcrel(%rip)
	.size _cbvee, .-_cbvee


==================== Asm code ====================
2018-03-16 16:06:28.416189725 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvee_info:
	.quad	_cbvee
	.quad	0
	.quad	3302829850654
	.quad	SbuCr_srt+296


==================== Asm code ====================
2018-03-16 16:06:28.416962024 UTC

.section .text
.align 8
_cbvej:
_cbvej:
	movq 16(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbvel_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbvel
_cbvem:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvej, .-_cbvej


==================== Asm code ====================
2018-03-16 16:06:28.417817483 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvej_info:
	.quad	_cbvej
	.quad	4
	.quad	3302829850654
	.quad	SbuCr_srt+296


==================== Asm code ====================
2018-03-16 16:06:28.418650777 UTC

.section .text
.align 8
_cbvel:
_cbvel:
	leaq block_cbvfd_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbvfd
_cbvfe:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvel, .-_cbvel


==================== Asm code ====================
2018-03-16 16:06:28.419322435 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvel_info:
	.quad	_cbvel
	.quad	5
	.quad	3302829850654
	.quad	SbuCr_srt+296


==================== Asm code ====================
2018-03-16 16:06:28.420231155 UTC

.section .text
.align 8
_cbvfd:
_cbvfd:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbvgB
_cbvhw:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _ubvhK
_cbvhu:
	movq GHC.IO.Handle.Internals.flushCharBuffer2_closure@gotpcrel(%rip),%rbx
	addq $64,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_ubvhK:
	addq $16,%rbp
	jmp _cbvet
_cbvgB:
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbvfi_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbvfi
_cbvfj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvfd, .-_cbvfd


==================== Asm code ====================
2018-03-16 16:06:28.421062307 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvfd_info:
	.quad	_cbvfd
	.quad	199
	.quad	3302829850654
	.quad	SbuCr_srt+296


==================== Asm code ====================
2018-03-16 16:06:28.421939606 UTC

.section .text
.align 8
_cbvfi:
_cbvfi:
	leaq block_cbvfn_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbvfn
_cbvfo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvfi, .-_cbvfi


==================== Asm code ====================
2018-03-16 16:06:28.422702869 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvfi_info:
	.quad	_cbvfi
	.quad	5
	.quad	12884901918
	.quad	SbuCr_srt+360


==================== Asm code ====================
2018-03-16 16:06:28.423654738 UTC

.section .text
.align 8
_cbvfn:
_cbvfn:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbvhj
_ubvhL:
	addq $16,%rbp
	jmp _cbvet
_ubvhM:
	addq $16,%rbp
	jmp _cbvet
_cbvhj:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _ubvhM
_cbvgF:
	movq 32(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbvfv_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbvfv
_cbvfw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvfn, .-_cbvfn


==================== Asm code ====================
2018-03-16 16:06:28.424433379 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvfn_info:
	.quad	_cbvfn
	.quad	199
	.quad	12884901918
	.quad	SbuCr_srt+360


==================== Asm code ====================
2018-03-16 16:06:28.425565748 UTC

.section .text
.align 8
_cbvfv:
_cbvfv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbvgI
_cbvgH:
	movq 24(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq 8(%rax),%rdx
	leaq sat_sbu71_info(%rip),%rsi
	movq %rsi,-16(%r12)
	movq %rdx,(%r12)
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_cbvfU_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rcx
	movq 64(%rsp),%rax
	movq %rax,%rbx
	movq %rcx,(%rbp)
	movq %r14,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbvfU
_cbvfV:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvgI:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvfv, .-_cbvfv


==================== Asm code ====================
2018-03-16 16:06:28.426459812 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvfv_info:
	.quad	_cbvfv
	.quad	133
	.quad	12884901918
	.quad	SbuCr_srt+360


==================== Asm code ====================
2018-03-16 16:06:28.427423433 UTC

.section .text
.align 8
_cbvfU:
_cbvfU:
	movq 39(%rbx),%rax
	testq %rax,%rax
	jne _cbvgL
_cbvhg:
	movq 48(%rbp),%rax
	movq 8(%rbp),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $8,%rbp
	jmp _cbvet
_cbvgL:
	leaq block_cbvg1_info(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq 40(%rbp),%rbx
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rsi,40(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbvg1
_cbvg2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvfU, .-_cbvfU


==================== Asm code ====================
2018-03-16 16:06:28.428218026 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvfU_info:
	.quad	_cbvfU
	.quad	6
	.quad	12884901918
	.quad	SbuCr_srt+360


==================== Asm code ====================
2018-03-16 16:06:28.429320627 UTC

.section .text
.align 8
_cbvg1:
_cbvg1:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbvgN
_cbvh5:
	leaq block_cbvgT_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbvgT
_cbvgU:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvgQ:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbvgN:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbvgQ
_cbvgP:
	leaq sat_sbu7k_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 72(%rbp),%rax
	leaq -24(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $32,%rbp
	jmp _cbvet
	.size _cbvg1, .-_cbvg1


==================== Asm code ====================
2018-03-16 16:06:28.430834761 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvg1_info:
	.quad	_cbvg1
	.quad	8329
	.quad	12884901918
	.quad	SbuCr_srt+360


==================== Asm code ====================
2018-03-16 16:06:28.431728383 UTC

.section .text
.align 8
_cbvgT:
_cbvgT:
	leaq block_cbvgY_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 48(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,48(%rbp)
	addq $-8,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
	.size _cbvgT, .-_cbvgT


==================== Asm code ====================
2018-03-16 16:06:28.432494971 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvgT_info:
	.quad	_cbvgT
	.quad	8329
	.quad	12884901918
	.quad	SbuCr_srt+360


==================== Asm code ====================
2018-03-16 16:06:28.433422138 UTC

.section .text
.align 8
_cbvgY:
_cbvgY:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbvh9
_cbvh8:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 72(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 40(%rbp),%rax
	leaq block_cbvh1_info(%rip),%rbx
	movq %rbx,40(%rbp)
	leaq -47(%r12),%r8
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 56(%rbp),%r14
	addq $40,%rbp
	jmp *GHC.IO.Handle.Internals.$wstreamEncode_entry@gotpcrel(%rip)
_cbvh9:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvgY, .-_cbvgY


==================== Asm code ====================
2018-03-16 16:06:28.434157541 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvgY_info:
	.quad	_cbvgY
	.quad	16650
	.quad	12884901918
	.quad	SbuCr_srt+360


==================== Asm code ====================
2018-03-16 16:06:28.434916701 UTC

.section .text
.align 8
_cbvh1:
_cbvh1:
	leaq block_cbvh3_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbvh3
_cbvhb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvh1, .-_cbvh1


==================== Asm code ====================
2018-03-16 16:06:28.435580678 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvh1_info:
	.quad	_cbvh1
	.quad	645
	.quad	12884901918
	.quad	SbuCr_srt+360


==================== Asm code ====================
2018-03-16 16:06:28.436350829 UTC

.section .text
.align 8
_cbvh3:
_cbvh3:
	movq 40(%rbp),%rax
	movq 7(%rbx),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	jmp _cbvet
	.size _cbvh3, .-_cbvh3


==================== Asm code ====================
2018-03-16 16:06:28.437157961 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvh3_info:
	.quad	_cbvh3
	.quad	645
	.quad	12884901918
	.quad	SbuCr_srt+360


==================== Asm code ====================
2018-03-16 16:06:28.438452231 UTC

.section .text
.align 8
_cbvet:
_cbvet:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbvgy
_cbvgx:
	leaq sat_sbu6x_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	movq %rax,(%r12)
	leaq -24(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbvgy:
	movq $32,904(%r13)
	leaq block_cbvet_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cbvet, .-_cbvet


==================== Asm code ====================
2018-03-16 16:06:28.439228833 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvet_info:
	.quad	_cbvet
	.quad	645
	.quad	12884901918
	.quad	SbuCr_srt+360


==================== Asm code ====================
2018-03-16 16:06:28.441950395 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hTell1_closure
.type GHC.IO.Handle.hTell1_closure, @object
GHC.IO.Handle.hTell1_closure:
	.quad	GHC.IO.Handle.hTell1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.442767374 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hTell1_entry
.type GHC.IO.Handle.hTell1_entry, @object
GHC.IO.Handle.hTell1_entry:
_cbvkJ:
	leaq GHC.IO.Handle.hGetPosn2_closure+2(%rip),%rdi
	movq %r14,%rsi
	leaq GHC.IO.Handle.hGetPosn3_closure(%rip),%r14
	jmp *GHC.IO.Handle.Internals.wantSeekableHandle1_entry@gotpcrel(%rip)
	.size GHC.IO.Handle.hTell1_entry, .-GHC.IO.Handle.hTell1_entry


==================== Asm code ====================
2018-03-16 16:06:28.443361834 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hTell1_info
.type GHC.IO.Handle.hTell1_info, @object
GHC.IO.Handle.hTell1_info:
	.quad	GHC.IO.Handle.hTell1_entry
	.quad	0
	.quad	30064771086
	.quad	8589934597
	.quad	SbuCr_srt+376


==================== Asm code ====================
2018-03-16 16:06:28.445474265 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hTell_closure
.type GHC.IO.Handle.hTell_closure, @object
GHC.IO.Handle.hTell_closure:
	.quad	GHC.IO.Handle.hTell_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.446086973 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hTell_entry
.type GHC.IO.Handle.hTell_entry, @object
GHC.IO.Handle.hTell_entry:
_cbvkU:
	jmp GHC.IO.Handle.hTell1_entry
	.size GHC.IO.Handle.hTell_entry, .-GHC.IO.Handle.hTell_entry


==================== Asm code ====================
2018-03-16 16:06:28.446625241 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hTell_info
.type GHC.IO.Handle.hTell_info, @object
GHC.IO.Handle.hTell_info:
	.quad	GHC.IO.Handle.hTell_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbuCr_srt+400


==================== Asm code ====================
2018-03-16 16:06:28.448262931 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl12_rbnWU_bytes:
	.asciz "hSeek"


==================== Asm code ====================
2018-03-16 16:06:28.450753222 UTC

.section .data
.align 8
.align 1
lvl13_rbnWV_closure:
	.quad	lvl13_rbnWV_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.451600092 UTC

.section .text
.align 8
lvl13_rbnWV_entry:
_cbvl8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvl9
_cbvla:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbvl7
_cbvl6:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl12_rbnWU_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbvl9:
	jmp *-16(%r13)
_cbvl7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl13_rbnWV_entry, .-lvl13_rbnWV_entry


==================== Asm code ====================
2018-03-16 16:06:28.452273777 UTC

.section .data.rel.ro
.align 8
.align 1
lvl13_rbnWV_info:
	.quad	lvl13_rbnWV_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:28.455037516 UTC

.section .data
.align 8
.align 1
lvl14_rbnWW_closure:
	.quad	lvl14_rbnWW_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.455842248 UTC

.section .text
.align 8
lvl14_rbnWW_entry:
_cbvlp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvlq
_cbvlr:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbvlo
_cbvln:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_cbvlq:
	jmp *-16(%r13)
_cbvlo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl14_rbnWW_entry, .-lvl14_rbnWW_entry


==================== Asm code ====================
2018-03-16 16:06:28.456529166 UTC

.section .data.rel.ro
.align 8
.align 1
lvl14_rbnWW_info:
	.quad	lvl14_rbnWW_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:28.487423232 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSeek1_closure
.type GHC.IO.Handle.hSeek1_closure, @object
GHC.IO.Handle.hSeek1_closure:
	.quad	GHC.IO.Handle.hSeek1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.488405789 UTC

.section .text
.align 8
lvl48_sbu7M_entry:
_cbvlM:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvlQ
_cbvlR:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbvlK_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
_cbvlQ:
	jmp *-16(%r13)
	.size lvl48_sbu7M_entry, .-lvl48_sbu7M_entry


==================== Asm code ====================
2018-03-16 16:06:28.489116556 UTC

.section .data.rel.ro
.align 8
.align 1
lvl48_sbu7M_info:
	.quad	lvl48_sbu7M_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:28.490025369 UTC

.section .text
.align 8
_cbvlK:
_cbvlK:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbvlU
_cbvlT:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbvlU:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbvlK, .-_cbvlK


==================== Asm code ====================
2018-03-16 16:06:28.490713384 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvlK_info:
	.quad	_cbvlK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.49156839 UTC

.section .text
.align 8
lvl49_sbu7O_entry:
_cbvm1:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvm5
_cbvm6:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbvlZ_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl14_rbnWW_closure(%rip),%rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp *GHC.Integer.Type.geInteger#_entry@gotpcrel(%rip)
_cbvm5:
	jmp *-16(%r13)
	.size lvl49_sbu7O_entry, .-lvl49_sbu7O_entry


==================== Asm code ====================
2018-03-16 16:06:28.492280328 UTC

.section .data.rel.ro
.align 8
.align 1
lvl49_sbu7O_info:
	.quad	lvl49_sbu7O_entry
	.quad	1
	.quad	4294967312
	.quad	SbuCr_srt+408


==================== Asm code ====================
2018-03-16 16:06:28.494216418 UTC

.section .text
.align 8
_cbvlZ:
_cbvlZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbvm9
_cbvm8:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbvm9:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbvlZ, .-_cbvlZ


==================== Asm code ====================
2018-03-16 16:06:28.494832585 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvlZ_info:
	.quad	_cbvlZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.495625252 UTC

.section .text
.align 8
sat_sbu8N_entry:
_cbvmY:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvn2
_cbvn3:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbvmV_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbvmV
_cbvmW:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvn2:
	jmp *-16(%r13)
	.size sat_sbu8N_entry, .-sat_sbu8N_entry


==================== Asm code ====================
2018-03-16 16:06:28.496260552 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbu8N_info:
	.quad	sat_sbu8N_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:28.496979156 UTC

.section .text
.align 8
_cbvmV:
_cbvmV:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbvn6
_cbvn5:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rsi
	movq %rsi,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbvn6:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvmV, .-_cbvmV


==================== Asm code ====================
2018-03-16 16:06:28.497712355 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvmV_info:
	.quad	_cbvmV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.498423637 UTC

.section .text
.align 8
sat_sbu96_entry:
_cbvnu:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvnB
_cbvnC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbvnr_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbvnr
_cbvns:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvnB:
	jmp *-16(%r13)
	.size sat_sbu96_entry, .-sat_sbu96_entry


==================== Asm code ====================
2018-03-16 16:06:28.499069005 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbu96_info:
	.quad	sat_sbu96_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:28.499797061 UTC

.section .text
.align 8
_cbvnr:
_cbvnr:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbvnF
_cbvnE:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 39(%rbx),%rbx
	addq 8(%rbp),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbvnF:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvnr, .-_cbvnr


==================== Asm code ====================
2018-03-16 16:06:28.50043414 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvnr_info:
	.quad	_cbvnr
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.5011926 UTC

.section .text
.align 8
sat_sbu9R_entry:
_cbvoj:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvoq
_cbvor:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbvog_info(%rip),%rax
	movq %rax,-64(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 16(%rbx),%rbx
	movq %rcx,-56(%rbp)
	movq %rax,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _cbvog
_cbvoh:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvoq:
	jmp *-16(%r13)
	.size sat_sbu9R_entry, .-sat_sbu9R_entry


==================== Asm code ====================
2018-03-16 16:06:28.501865939 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbu9R_info:
	.quad	sat_sbu9R_entry
	.quad	17179869186
	.quad	15


==================== Asm code ====================
2018-03-16 16:06:28.502611425 UTC

.section .text
.align 8
_cbvog:
_cbvog:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbvou
_cbvot:
	leaq 7(%rbx),%rax
	movq 32(%rbp),%rbx
	addq (%rax),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq GHC.IO.Buffer.ReadBuffer_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbvou:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvog, .-_cbvog


==================== Asm code ====================
2018-03-16 16:06:28.503284779 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvog_info:
	.quad	_cbvog
	.quad	1861
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.504030796 UTC

.section .text
.align 8
sat_sbuak_entry:
_cbvow:
	leaq -144(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvox
_cbvoy:
	leaq block_cbvmf_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rdx
	movq 30(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbvmf
_cbvmg:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvox:
	jmp *-8(%r13)
	.size sat_sbuak_entry, .-sat_sbuak_entry


==================== Asm code ====================
2018-03-16 16:06:28.504720574 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbuak_info:
	.quad	sat_sbuak_entry
	.quad	4
	.quad	4294967304
	.quad	8589934597
	.quad	SbuCr_srt+416


==================== Asm code ====================
2018-03-16 16:06:28.505538293 UTC

.section .text
.align 8
_cbvmf:
_cbvmf:
	leaq block_cbvmk_info(%rip),%rax
	movq %rax,-64(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 63(%rbx),%r8
	movq 71(%rbx),%r9
	movq 95(%rbx),%rbx
	movq %rbx,%r10
	movq 8(%r9),%rbx
	movq %rcx,-56(%rbp)
	movq %rdx,-48(%rbp)
	movq %rsi,-40(%rbp)
	movq %rdi,-32(%rbp)
	movq %r8,-24(%rbp)
	movq %r9,-16(%rbp)
	movq %r10,-8(%rbp)
	movq %rax,(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _cbvmk
_cbvml:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvmf, .-_cbvmf


==================== Asm code ====================
2018-03-16 16:06:28.506240692 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvmf_info:
	.quad	_cbvmf
	.quad	4
	.quad	4294967326
	.quad	SbuCr_srt+416


==================== Asm code ====================
2018-03-16 16:06:28.5069757 UTC

.section .text
.align 8
_cbvmk:
_cbvmk:
	leaq block_cbvmp_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 15(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	movq %rcx,(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbvmp
_cbvmq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvmk, .-_cbvmk


==================== Asm code ====================
2018-03-16 16:06:28.507619713 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvmk_info:
	.quad	_cbvmk
	.quad	12
	.quad	4294967326
	.quad	SbuCr_srt+416


==================== Asm code ====================
2018-03-16 16:06:28.508402547 UTC

.section .text
.align 8
_cbvmp:
_cbvmp:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbvpQ
_cbvql:
	movq 72(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbvqj_info(%rip),%rbx
	movq %rbx,40(%rbp)
	movq %rax,%rbx
	addq $40,%rbp
	testb $7,%bl
	jne _cbvqj
_cbvqm:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvpQ:
	leaq block_cbvnH_info(%rip),%rax
	movq %rax,(%rbp)
	movq 112(%rbp),%rbx
	testb $7,%bl
	jne _cbvnH
_cbvnI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvmp, .-_cbvmp


==================== Asm code ====================
2018-03-16 16:06:28.509052092 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvmp_info:
	.quad	_cbvmp
	.quad	1937
	.quad	4294967326
	.quad	SbuCr_srt+416


==================== Asm code ====================
2018-03-16 16:06:28.509779421 UTC

.section .text
.align 8
_cbvnH:
_cbvnH:
	andl $7,%ebx
	cmpq $2,%rbx
	je _cbvpW
_ubvr6:
	addq $48,%rbp
	jmp _sbu8k
_cbvpW:
	leaq block_cbvnN_info(%rip),%rax
	movq %rax,(%rbp)
	movq 96(%rbp),%rbx
	testb $7,%bl
	jne _cbvnN
_cbvnO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvnH, .-_cbvnH


==================== Asm code ====================
2018-03-16 16:06:28.510413068 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvnH_info:
	.quad	_cbvnH
	.quad	6033
	.quad	4294967326
	.quad	SbuCr_srt+416


==================== Asm code ====================
2018-03-16 16:06:28.511114758 UTC

.section .text
.align 8
_cbvnN:
_cbvnN:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbvpZ
_ubvr7:
	addq $48,%rbp
	jmp _sbu8k
_cbvpZ:
	leaq block_cbvnS_info(%rip),%rax
	movq %rax,(%rbp)
	movq 136(%rbp),%rbx
	testb $7,%bl
	jne _cbvnS
_cbvnT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvnN, .-_cbvnN


==================== Asm code ====================
2018-03-16 16:06:28.511740908 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvnN_info:
	.quad	_cbvnN
	.quad	6033
	.quad	4294967326
	.quad	SbuCr_srt+416


==================== Asm code ====================
2018-03-16 16:06:28.512414064 UTC

.section .text
.align 8
_cbvnS:
_cbvnS:
	cmpq $1,7(%rbx)
	je _cbvq3
_ubvr8:
	addq $48,%rbp
	jmp _sbu8k
_cbvq3:
	movq 32(%rbp),%rax
	subq 24(%rbp),%rax
	leaq block_cbvo3_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _cbvnS, .-_cbvnS


==================== Asm code ====================
2018-03-16 16:06:28.513051102 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvnS_info:
	.quad	_cbvnS
	.quad	4200337
	.quad	4294967326
	.quad	SbuCr_srt+416


==================== Asm code ====================
2018-03-16 16:06:28.51391033 UTC

.section .text
.align 8
_cbvo3:
_cbvo3:
	leaq block_cbvo7_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq 120(%rbp),%r14
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
	.size _cbvo3, .-_cbvo3


==================== Asm code ====================
2018-03-16 16:06:28.514501921 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvo3_info:
	.quad	_cbvo3
	.quad	4200337
	.quad	4294967326
	.quad	SbuCr_srt+416


==================== Asm code ====================
2018-03-16 16:06:28.515430132 UTC

.section .text
.align 8
_cbvo7:
_cbvo7:
	cmpq $1,%rbx
	je _cbvq9
_ubvr9:
	addq $48,%rbp
	jmp _sbu8k
_cbvqc:
	movq $64,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_cbvq9:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cbvqc
_cbvqb:
	leaq sat_sbu9R_info(%rip),%rax
	movq %rax,-56(%r12)
	movq 128(%rbp),%rax
	movq %rax,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movq 40(%rbp),%rax
	movq %rax,-24(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq 88(%rbp),%rax
	leaq -56(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbvo7, .-_cbvo7


==================== Asm code ====================
2018-03-16 16:06:28.51620506 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvo7_info:
	.quad	_cbvo7
	.quad	4200337
	.quad	4294967326
	.quad	SbuCr_srt+416


==================== Asm code ====================
2018-03-16 16:06:28.516890216 UTC

.section .text
.align 8
_sbu8k:
_sbu8k:
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbvmz_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbvmz
_cbvmA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbu8k, .-_sbu8k


==================== Asm code ====================
2018-03-16 16:06:28.517653906 UTC

.section .text
.align 8
_cbvmz:
_cbvmz:
	leaq block_cbvmE_info(%rip),%rax
	movq %rax,(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,88(%rbp)
	movq %rax,96(%rbp)
	testb $7,%bl
	jne _cbvmE
_cbvmF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvmz, .-_cbvmz


==================== Asm code ====================
2018-03-16 16:06:28.5182781 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvmz_info:
	.quad	_cbvmz
	.quad	196748
	.quad	4294967326
	.quad	SbuCr_srt+416


==================== Asm code ====================
2018-03-16 16:06:28.519059385 UTC

.section .text
.align 8
_cbvmE:
_cbvmE:
	movq 64(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbvpH
_cbvpM:
	leaq block_cbvpK_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	jmp *GHC.IO.Handle.Internals.flushBuffer2_entry@gotpcrel(%rip)
_cbvpD:
	leaq block_cbvpC_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	jmp *GHC.IO.Handle.Internals.flushBuffer2_entry@gotpcrel(%rip)
_cbvpH:
	movq 96(%rbp),%rbx
	cmpq 88(%rbp),%rbx
	je _cbvpD
_cbvoG:
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbvmM_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbvmM
_cbvmN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvmE, .-_cbvmE


==================== Asm code ====================
2018-03-16 16:06:28.519788597 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvmE_info:
	.quad	_cbvmE
	.quad	196748
	.quad	4294967326
	.quad	SbuCr_srt+416


==================== Asm code ====================
2018-03-16 16:06:28.520465391 UTC

.section .text
.align 8
_cbvpC:
_cbvpC:
	movq 8(%rbp),%r14
	movq 72(%rbp),%rax
	movq stg_ap_pppv_info@gotpcrel(%rip),%rbx
	movq %rbx,72(%rbp)
	movq 80(%rbp),%rbx
	movq 24(%rbp),%rcx
	movq %rcx,80(%rbp)
	movq %rax,88(%rbp)
	movq %rbx,96(%rbp)
	addq $72,%rbp
	jmp *GHC.IO.Device.seek_entry@gotpcrel(%rip)
	.size _cbvpC, .-_cbvpC


==================== Asm code ====================
2018-03-16 16:06:28.521101205 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvpC_info:
	.quad	_cbvpC
	.quad	212620
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.52218092 UTC

.section .text
.align 8
_cbvmM:
_cbvmM:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbvoJ
_cbvoI:
	movq 48(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq 8(%rax),%rdx
	leaq sat_sbu8N_info(%rip),%rsi
	movq %rsi,-16(%r12)
	movq %rdx,(%r12)
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_cbvnb_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rcx
	movq 64(%rsp),%rax
	movq %rax,%rbx
	movq %rcx,88(%rbp)
	movq %r14,96(%rbp)
	testb $7,%bl
	jne _cbvnb
_cbvnc:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvoJ:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvmM, .-_cbvmM


==================== Asm code ====================
2018-03-16 16:06:28.522909837 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvmM_info:
	.quad	_cbvmM
	.quad	197772
	.quad	4294967326
	.quad	SbuCr_srt+416


==================== Asm code ====================
2018-03-16 16:06:28.523795646 UTC

.section .text
.align 8
_cbvnb:
_cbvnb:
	movq 39(%rbx),%rax
	testq %rax,%rax
	jne _cbvoM
_cbvpy:
	movq 64(%rbp),%rax
	movq 32(%rbp),%rbx
	movq 88(%rbp),%rcx
	movq %rcx,8(%rbx)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rbx,%rsi
	movq %rcx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_cbvpx_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.IO.Handle.Internals.flushBuffer2_entry@gotpcrel(%rip)
_cbvoM:
	leaq block_cbvni_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq 56(%rbp),%rbx
	movq %rax,16(%rbp)
	movq %rdx,40(%rbp)
	movq %rcx,48(%rbp)
	movq %rsi,56(%rbp)
	testb $7,%bl
	jne _cbvni
_cbvnj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvnb, .-_cbvnb


==================== Asm code ====================
2018-03-16 16:06:28.525140554 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvnb_info:
	.quad	_cbvnb
	.quad	3212
	.quad	4294967326
	.quad	SbuCr_srt+416


==================== Asm code ====================
2018-03-16 16:06:28.526070369 UTC

.section .text
.align 8
_cbvni:
_cbvni:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbvoS
_cbvpk:
	leaq block_cbvp0_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbvp0
_cbvp1:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvoV:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbvoS:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbvoV
_cbvoU:
	leaq sat_sbu96_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 88(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 64(%rbp),%rax
	movq 32(%rbp),%rbx
	leaq -24(%r12),%rcx
	movq %rcx,8(%rbx)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rbx,%rsi
	movq %rcx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_cbvoQ_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.IO.Handle.Internals.flushBuffer2_entry@gotpcrel(%rip)
	.size _cbvni, .-_cbvni


==================== Asm code ====================
2018-03-16 16:06:28.526822426 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvni_info:
	.quad	_cbvni
	.quad	4236
	.quad	4294967326
	.quad	SbuCr_srt+416


==================== Asm code ====================
2018-03-16 16:06:28.527522454 UTC

.section .text
.align 8
_cbvoQ:
_cbvoQ:
	movq 8(%rbp),%r14
	movq 72(%rbp),%rax
	movq stg_ap_pppv_info@gotpcrel(%rip),%rbx
	movq %rbx,72(%rbp)
	movq 80(%rbp),%rbx
	movq 24(%rbp),%rcx
	movq %rcx,80(%rbp)
	movq %rax,88(%rbp)
	movq %rbx,96(%rbp)
	addq $72,%rbp
	jmp *GHC.IO.Device.seek_entry@gotpcrel(%rip)
	.size _cbvoQ, .-_cbvoQ


==================== Asm code ====================
2018-03-16 16:06:28.528133575 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvoQ_info:
	.quad	_cbvoQ
	.quad	212620
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.52876767 UTC

.section .text
.align 8
_cbvp0:
_cbvp0:
	leaq block_cbvp5_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 96(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,96(%rbp)
	addq $-8,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
	.size _cbvp0, .-_cbvp0


==================== Asm code ====================
2018-03-16 16:06:28.529395207 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvp0_info:
	.quad	_cbvp0
	.quad	4236
	.quad	4294967326
	.quad	SbuCr_srt+416


==================== Asm code ====================
2018-03-16 16:06:28.530156316 UTC

.section .text
.align 8
_cbvp5:
_cbvp5:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbvpo
_cbvpn:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 56(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq 64(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 8(%rbp),%rax
	leaq block_cbvp8_info(%rip),%rbx
	movq %rbx,8(%rbp)
	leaq -47(%r12),%r8
	movq 96(%rbp),%rdi
	movq %rax,%rsi
	movq 104(%rbp),%r14
	addq $8,%rbp
	jmp *GHC.IO.Handle.Internals.$wstreamEncode_entry@gotpcrel(%rip)
_cbvpo:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvp5, .-_cbvp5


==================== Asm code ====================
2018-03-16 16:06:28.530877334 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvp5_info:
	.quad	_cbvp5
	.quad	8461
	.quad	4294967326
	.quad	SbuCr_srt+416


==================== Asm code ====================
2018-03-16 16:06:28.531601654 UTC

.section .text
.align 8
_cbvp8:
_cbvp8:
	leaq block_cbvpa_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbvpa
_cbvpb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvp8, .-_cbvp8


==================== Asm code ====================
2018-03-16 16:06:28.532175531 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvp8_info:
	.quad	_cbvp8
	.quad	203916
	.quad	4294967326
	.quad	SbuCr_srt+416


==================== Asm code ====================
2018-03-16 16:06:28.532877019 UTC

.section .text
.align 8
_cbvpa:
_cbvpa:
	movq 64(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq %rbx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rcx,%rsi
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_cbvpi_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.IO.Handle.Internals.flushBuffer2_entry@gotpcrel(%rip)
	.size _cbvpa, .-_cbvpa


==================== Asm code ====================
2018-03-16 16:06:28.533643003 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvpa_info:
	.quad	_cbvpa
	.quad	203916
	.quad	4294967326
	.quad	SbuCr_srt+416


==================== Asm code ====================
2018-03-16 16:06:28.534320296 UTC

.section .text
.align 8
_cbvpi:
_cbvpi:
	movq 8(%rbp),%r14
	movq 72(%rbp),%rax
	movq stg_ap_pppv_info@gotpcrel(%rip),%rbx
	movq %rbx,72(%rbp)
	movq 80(%rbp),%rbx
	movq 24(%rbp),%rcx
	movq %rcx,80(%rbp)
	movq %rax,88(%rbp)
	movq %rbx,96(%rbp)
	addq $72,%rbp
	jmp *GHC.IO.Device.seek_entry@gotpcrel(%rip)
	.size _cbvpi, .-_cbvpi


==================== Asm code ====================
2018-03-16 16:06:28.534916723 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvpi_info:
	.quad	_cbvpi
	.quad	212620
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.5356269 UTC

.section .text
.align 8
_cbvpx:
_cbvpx:
	movq 8(%rbp),%r14
	movq 72(%rbp),%rax
	movq stg_ap_pppv_info@gotpcrel(%rip),%rbx
	movq %rbx,72(%rbp)
	movq 80(%rbp),%rbx
	movq 24(%rbp),%rcx
	movq %rcx,80(%rbp)
	movq %rax,88(%rbp)
	movq %rbx,96(%rbp)
	addq $72,%rbp
	jmp *GHC.IO.Device.seek_entry@gotpcrel(%rip)
	.size _cbvpx, .-_cbvpx


==================== Asm code ====================
2018-03-16 16:06:28.536198141 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvpx_info:
	.quad	_cbvpx
	.quad	212620
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.536852269 UTC

.section .text
.align 8
_cbvpK:
_cbvpK:
	movq 8(%rbp),%r14
	movq 72(%rbp),%rax
	movq stg_ap_pppv_info@gotpcrel(%rip),%rbx
	movq %rbx,72(%rbp)
	movq 80(%rbp),%rbx
	movq 24(%rbp),%rcx
	movq %rcx,80(%rbp)
	movq %rax,88(%rbp)
	movq %rbx,96(%rbp)
	addq $72,%rbp
	jmp *GHC.IO.Device.seek_entry@gotpcrel(%rip)
	.size _cbvpK, .-_cbvpK


==================== Asm code ====================
2018-03-16 16:06:28.53795051 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvpK_info:
	.quad	_cbvpK
	.quad	212620
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.53860533 UTC

.section .text
.align 8
_cbvqj:
_cbvqj:
	leaq block_cbvqq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _cbvqq
_cbvqs:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvqj, .-_cbvqj


==================== Asm code ====================
2018-03-16 16:06:28.539188377 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvqj_info:
	.quad	_cbvqj
	.quad	211980
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.539935704 UTC

.section .text
.align 8
_cbvqq:
_cbvqq:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ubvr4
_cbvqD:
	movq 32(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbvqB_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbvqB
_cbvqE:
	movq (%rbx),%rax
	jmp *(%rax)
_ubvr4:
	addq $8,%rbp
	jmp _cbvqR
	.size _cbvqq, .-_cbvqq


==================== Asm code ====================
2018-03-16 16:06:28.540566931 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvqq_info:
	.quad	_cbvqq
	.quad	211980
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.54132313 UTC

.section .text
.align 8
_cbvqB:
_cbvqB:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _ubvr5
_cbvqO:
	leaq block_cbvqM_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.IO.BufferedIO.flushWriteBuffer_entry@gotpcrel(%rip)
_ubvr5:
	addq $8,%rbp
	jmp _cbvqR
	.size _cbvqB, .-_cbvqB


==================== Asm code ====================
2018-03-16 16:06:28.541994346 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvqB_info:
	.quad	_cbvqB
	.quad	211980
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.542672396 UTC

.section .text
.align 8
_cbvqR:
_cbvqR:
	movq (%rbp),%r14
	movq 64(%rbp),%rax
	movq stg_ap_pppv_info@gotpcrel(%rip),%rbx
	movq %rbx,64(%rbp)
	movq 72(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq %rcx,72(%rbp)
	movq %rax,80(%rbp)
	movq %rbx,88(%rbp)
	addq $64,%rbp
	jmp *GHC.IO.Device.seek_entry@gotpcrel(%rip)
	.size _cbvqR, .-_cbvqR


==================== Asm code ====================
2018-03-16 16:06:28.543537878 UTC

.section .text
.align 8
_cbvqM:
_cbvqM:
	movq 72(%rbp),%rax
	movq 80(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq 24(%rbp),%rsi
	movq 32(%rbp),%rdi
	movq %rbx,8(%rdi)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rsi,%r8
	movq %rdi,%rsi
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq %r14,%rcx
	movq 64(%rsp),%rax
	movq %rax,%r14
	movq stg_ap_pppv_info@gotpcrel(%rip),%rax
	movq %rax,72(%rbp)
	movq 72(%rsp),%rax
	movq %rax,80(%rbp)
	movq %rbx,88(%rbp)
	movq %rcx,96(%rbp)
	addq $72,%rbp
	jmp *GHC.IO.Device.seek_entry@gotpcrel(%rip)
	.size _cbvqM, .-_cbvqM


==================== Asm code ====================
2018-03-16 16:06:28.544253393 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvqM_info:
	.quad	_cbvqM
	.quad	212108
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.545057853 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSeek1_entry
.type GHC.IO.Handle.hSeek1_entry, @object
GHC.IO.Handle.hSeek1_entry:
_cbvrw:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cbvrA
_cbvrz:
	leaq lvl48_sbu7M_info(%rip),%rax
	movq %rax,-80(%r12)
	movq %rdi,-64(%r12)
	leaq lvl49_sbu7O_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %rdi,-40(%r12)
	leaq sat_sbuak_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	leaq -80(%r12),%rax
	movq %rax,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -30(%r12),%rdi
	movq %r14,%rsi
	leaq lvl13_rbnWV_closure(%rip),%r14
	jmp *GHC.IO.Handle.Internals.wantSeekableHandle1_entry@gotpcrel(%rip)
_cbvrA:
	movq $88,904(%r13)
	leaq GHC.IO.Handle.hSeek1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hSeek1_entry, .-GHC.IO.Handle.hSeek1_entry


==================== Asm code ====================
2018-03-16 16:06:28.545896377 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSeek1_info
.type GHC.IO.Handle.hSeek1_info, @object
GHC.IO.Handle.hSeek1_info:
	.quad	GHC.IO.Handle.hSeek1_entry
	.quad	0
	.quad	519691042830
	.quad	17179869207
	.quad	SbuCr_srt+384


==================== Asm code ====================
2018-03-16 16:06:28.548311484 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSeek_closure
.type GHC.IO.Handle.hSeek_closure, @object
GHC.IO.Handle.hSeek_closure:
	.quad	GHC.IO.Handle.hSeek_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.54891221 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSeek_entry
.type GHC.IO.Handle.hSeek_entry, @object
GHC.IO.Handle.hSeek_entry:
_cbvvW:
	jmp GHC.IO.Handle.hSeek1_entry
	.size GHC.IO.Handle.hSeek_entry, .-GHC.IO.Handle.hSeek_entry


==================== Asm code ====================
2018-03-16 16:06:28.549581925 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSeek_info
.type GHC.IO.Handle.hSeek_info, @object
GHC.IO.Handle.hSeek_info:
	.quad	GHC.IO.Handle.hSeek_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	SbuCr_srt+424


==================== Asm code ====================
2018-03-16 16:06:28.552424709 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetPosn1_closure
.type GHC.IO.Handle.hSetPosn1_closure, @object
GHC.IO.Handle.hSetPosn1_closure:
	.quad	GHC.IO.Handle.hSetPosn1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.553198366 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetPosn1_entry
.type GHC.IO.Handle.hSetPosn1_entry, @object
GHC.IO.Handle.hSetPosn1_entry:
_cbvwa:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvwb
_cbvwc:
	leaq block_cbvw7_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbvw7
_cbvw8:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvwb:
	leaq GHC.IO.Handle.hSetPosn1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hSetPosn1_entry, .-GHC.IO.Handle.hSetPosn1_entry


==================== Asm code ====================
2018-03-16 16:06:28.553970327 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetPosn1_info
.type GHC.IO.Handle.hSetPosn1_info, @object
GHC.IO.Handle.hSetPosn1_info:
	.quad	GHC.IO.Handle.hSetPosn1_entry
	.quad	0
	.quad	21474836494
	.quad	8589934597
	.quad	SbuCr_srt+424


==================== Asm code ====================
2018-03-16 16:06:28.554639082 UTC

.section .text
.align 8
_cbvw7:
_cbvw7:
	movq 15(%rbx),%rdi
	movq GHC.IO.Device.AbsoluteSeek_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.IO.Handle.hSeek1_entry
	.size _cbvw7, .-_cbvw7


==================== Asm code ====================
2018-03-16 16:06:28.555193333 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvw7_info:
	.quad	_cbvw7
	.quad	0
	.quad	4294967326
	.quad	SbuCr_srt+424


==================== Asm code ====================
2018-03-16 16:06:28.557941746 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetPosn_closure
.type GHC.IO.Handle.hSetPosn_closure, @object
GHC.IO.Handle.hSetPosn_closure:
	.quad	GHC.IO.Handle.hSetPosn_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.558579254 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetPosn_entry
.type GHC.IO.Handle.hSetPosn_entry, @object
GHC.IO.Handle.hSetPosn_entry:
_cbvww:
	jmp GHC.IO.Handle.hSetPosn1_entry
	.size GHC.IO.Handle.hSetPosn_entry, .-GHC.IO.Handle.hSetPosn_entry


==================== Asm code ====================
2018-03-16 16:06:28.559157873 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetPosn_info
.type GHC.IO.Handle.hSetPosn_info, @object
GHC.IO.Handle.hSetPosn_info:
	.quad	GHC.IO.Handle.hSetPosn_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbuCr_srt+440


==================== Asm code ====================
2018-03-16 16:06:28.560851383 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hGetEncoding4_bytes
.type GHC.IO.Handle.hGetEncoding4_bytes, @object
GHC.IO.Handle.hGetEncoding4_bytes:
	.asciz "hGetEncoding"


==================== Asm code ====================
2018-03-16 16:06:28.56384744 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEncoding3_closure
.type GHC.IO.Handle.hGetEncoding3_closure, @object
GHC.IO.Handle.hGetEncoding3_closure:
	.quad	GHC.IO.Handle.hGetEncoding3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.564676645 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEncoding3_entry
.type GHC.IO.Handle.hGetEncoding3_entry, @object
GHC.IO.Handle.hGetEncoding3_entry:
_cbvwK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvwL
_cbvwM:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbvwJ
_cbvwI:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hGetEncoding4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbvwL:
	jmp *-16(%r13)
_cbvwJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hGetEncoding3_entry, .-GHC.IO.Handle.hGetEncoding3_entry


==================== Asm code ====================
2018-03-16 16:06:28.565437148 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEncoding3_info
.type GHC.IO.Handle.hGetEncoding3_info, @object
GHC.IO.Handle.hGetEncoding3_info:
	.quad	GHC.IO.Handle.hGetEncoding3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:28.568407257 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEncoding2_closure
.type GHC.IO.Handle.hGetEncoding2_closure, @object
GHC.IO.Handle.hGetEncoding2_closure:
	.quad	GHC.IO.Handle.hGetEncoding2_info


==================== Asm code ====================
2018-03-16 16:06:28.569147857 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEncoding2_entry
.type GHC.IO.Handle.hGetEncoding2_entry, @object
GHC.IO.Handle.hGetEncoding2_entry:
_cbvx2:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvx6
_cbvx7:
	leaq block_cbvwZ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbvwZ
_cbvx0:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvx6:
	leaq GHC.IO.Handle.hGetEncoding2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hGetEncoding2_entry, .-GHC.IO.Handle.hGetEncoding2_entry


==================== Asm code ====================
2018-03-16 16:06:28.569884814 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEncoding2_info
.type GHC.IO.Handle.hGetEncoding2_info, @object
GHC.IO.Handle.hGetEncoding2_info:
	.quad	GHC.IO.Handle.hGetEncoding2_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:06:28.570601468 UTC

.section .text
.align 8
_cbvwZ:
_cbvwZ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbvxa
_cbvx9:
	movq 103(%rbx),%rax
	movq (,)_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbvxa:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvwZ, .-_cbvwZ


==================== Asm code ====================
2018-03-16 16:06:28.571230137 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvwZ_info:
	.quad	_cbvwZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.579222261 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEncoding1_closure
.type GHC.IO.Handle.hGetEncoding1_closure, @object
GHC.IO.Handle.hGetEncoding1_closure:
	.quad	GHC.IO.Handle.hGetEncoding1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.580038067 UTC

.section .text
.align 8
io_sbuaS_entry:
_cbvxJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvxN
_cbvxO:
	leaq block_cbvxE_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	leaq GHC.IO.Handle.hGetEncoding2_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	leaq GHC.IO.Handle.hGetEncoding3_closure(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbvxN:
	jmp *-8(%r13)
	.size io_sbuaS_entry, .-io_sbuaS_entry


==================== Asm code ====================
2018-03-16 16:06:28.58071845 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbuaS_info:
	.quad	io_sbuaS_entry
	.quad	2
	.quad	12884901899
	.quad	4294967299
	.quad	SbuCr_srt+448


==================== Asm code ====================
2018-03-16 16:06:28.581458527 UTC

.section .text
.align 8
_cbvxE:
_cbvxE:
	leaq block_cbvxG_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbvxG
_cbvxH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvxE, .-_cbvxE


==================== Asm code ====================
2018-03-16 16:06:28.582069077 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvxE_info:
	.quad	_cbvxE
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.582722631 UTC

.section .text
.align 8
_cbvxG:
_cbvxG:
	leaq block_cbvxM_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbvxG, .-_cbvxG


==================== Asm code ====================
2018-03-16 16:06:28.583331511 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvxG_info:
	.quad	_cbvxG
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.583930453 UTC

.section .text
.align 8
_cbvxM:
_cbvxM:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbvxM, .-_cbvxM


==================== Asm code ====================
2018-03-16 16:06:28.584519486 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvxM_info:
	.quad	_cbvxM
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.585941321 UTC

.section .text
.align 8
io_sbub8_entry:
_cbvy8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvyc
_cbvyd:
	leaq block_cbvy3_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	leaq GHC.IO.Handle.hGetEncoding2_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	leaq GHC.IO.Handle.hGetEncoding3_closure(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbvyc:
	jmp *-8(%r13)
	.size io_sbub8_entry, .-io_sbub8_entry


==================== Asm code ====================
2018-03-16 16:06:28.586607986 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbub8_info:
	.quad	io_sbub8_entry
	.quad	2
	.quad	12884901899
	.quad	4294967299
	.quad	SbuCr_srt+448


==================== Asm code ====================
2018-03-16 16:06:28.587285617 UTC

.section .text
.align 8
_cbvy3:
_cbvy3:
	leaq block_cbvy5_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbvy5
_cbvy6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvy3, .-_cbvy3


==================== Asm code ====================
2018-03-16 16:06:28.587883032 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvy3_info:
	.quad	_cbvy3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.588520141 UTC

.section .text
.align 8
_cbvy5:
_cbvy5:
	leaq block_cbvyb_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbvy5, .-_cbvy5


==================== Asm code ====================
2018-03-16 16:06:28.589163028 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvy5_info:
	.quad	_cbvy5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.589831923 UTC

.section .text
.align 8
_cbvyb:
_cbvyb:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbvyb, .-_cbvyb


==================== Asm code ====================
2018-03-16 16:06:28.590444492 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvyb_info:
	.quad	_cbvyb
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.591186318 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEncoding1_entry
.type GHC.IO.Handle.hGetEncoding1_entry, @object
GHC.IO.Handle.hGetEncoding1_entry:
_cbvyn:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvyo
_cbvyp:
	leaq block_cbvxs_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbvxs
_cbvxt:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvyo:
	leaq GHC.IO.Handle.hGetEncoding1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hGetEncoding1_entry, .-GHC.IO.Handle.hGetEncoding1_entry


==================== Asm code ====================
2018-03-16 16:06:28.591859464 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEncoding1_info
.type GHC.IO.Handle.hGetEncoding1_info, @object
GHC.IO.Handle.hGetEncoding1_info:
	.quad	GHC.IO.Handle.hGetEncoding1_entry
	.quad	0
	.quad	30064771086
	.quad	8589934597
	.quad	SbuCr_srt+448


==================== Asm code ====================
2018-03-16 16:06:28.592636529 UTC

.section .text
.align 8
_cbvxs:
_cbvxs:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbvyk
_cbvyl:
	leaq block_cbvxW_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_cbvyk:
	leaq block_cbvxx_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _cbvxs, .-_cbvxs


==================== Asm code ====================
2018-03-16 16:06:28.593322159 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvxs_info:
	.quad	_cbvxs
	.quad	0
	.quad	12884901918
	.quad	SbuCr_srt+448


==================== Asm code ====================
2018-03-16 16:06:28.594108923 UTC

.section .text
.align 8
_cbvxx:
_cbvxx:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbvyt
_cbvys:
	leaq io_sbuaS_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbvyx
_cbvyw:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbuaS_entry
_cbvyx:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbvyt:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbvxx, .-_cbvxx


==================== Asm code ====================
2018-03-16 16:06:28.595386844 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvxx_info:
	.quad	_cbvxx
	.quad	2
	.quad	12884901918
	.quad	SbuCr_srt+448


==================== Asm code ====================
2018-03-16 16:06:28.596171815 UTC

.section .text
.align 8
_cbvxW:
_cbvxW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbvyB
_cbvyA:
	leaq io_sbub8_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbvyF
_cbvyE:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbub8_entry
_cbvyF:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbvyB:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbvxW, .-_cbvxW


==================== Asm code ====================
2018-03-16 16:06:28.596778024 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvxW_info:
	.quad	_cbvxW
	.quad	2
	.quad	12884901918
	.quad	SbuCr_srt+448


==================== Asm code ====================
2018-03-16 16:06:28.598967145 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEncoding_closure
.type GHC.IO.Handle.hGetEncoding_closure, @object
GHC.IO.Handle.hGetEncoding_closure:
	.quad	GHC.IO.Handle.hGetEncoding_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.599566342 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEncoding_entry
.type GHC.IO.Handle.hGetEncoding_entry, @object
GHC.IO.Handle.hGetEncoding_entry:
_cbvzN:
	jmp GHC.IO.Handle.hGetEncoding1_entry
	.size GHC.IO.Handle.hGetEncoding_entry, .-GHC.IO.Handle.hGetEncoding_entry


==================== Asm code ====================
2018-03-16 16:06:28.600100654 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEncoding_info
.type GHC.IO.Handle.hGetEncoding_info, @object
GHC.IO.Handle.hGetEncoding_info:
	.quad	GHC.IO.Handle.hGetEncoding_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbuCr_srt+464


==================== Asm code ====================
2018-03-16 16:06:28.601968891 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl15_rbnWX_bytes:
	.asciz "hSetEncoding"


==================== Asm code ====================
2018-03-16 16:06:28.604339439 UTC

.section .data
.align 8
.align 1
lvl16_rbnWY_closure:
	.quad	lvl16_rbnWY_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.605199333 UTC

.section .text
.align 8
lvl16_rbnWY_entry:
_cbvA1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvA2
_cbvA3:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbvA0
_cbvzZ:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl15_rbnWX_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbvA2:
	jmp *-16(%r13)
_cbvA0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl16_rbnWY_entry, .-lvl16_rbnWY_entry


==================== Asm code ====================
2018-03-16 16:06:28.605910917 UTC

.section .data.rel.ro
.align 8
.align 1
lvl16_rbnWY_info:
	.quad	lvl16_rbnWY_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:28.607603513 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl17_rbnWZ_bytes:
	.asciz "last_decode"


==================== Asm code ====================
2018-03-16 16:06:28.610417336 UTC

.section .data
.align 8
.align 1
lvl18_rbnX0_closure:
	.quad	lvl18_rbnX0_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.611223144 UTC

.section .text
.align 8
lvl18_rbnX0_entry:
_cbvAl:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvAm
_cbvAn:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbvAi
_cbvAh:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_cbvAj_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl17_rbnWZ_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbvAm:
	jmp *-16(%r13)
_cbvAi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl18_rbnX0_entry, .-lvl18_rbnX0_entry


==================== Asm code ====================
2018-03-16 16:06:28.611935957 UTC

.section .data.rel.ro
.align 8
.align 1
lvl18_rbnX0_info:
	.quad	lvl18_rbnX0_entry
	.quad	0
	.quad	4294967317
	.quad	SbuCr_srt+288


==================== Asm code ====================
2018-03-16 16:06:28.612580304 UTC

.section .text
.align 8
_cbvAj:
_cbvAj:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size _cbvAj, .-_cbvAj


==================== Asm code ====================
2018-03-16 16:06:28.613167908 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvAj_info:
	.quad	_cbvAj
	.quad	0
	.quad	4294967326
	.quad	SbuCr_srt+288


==================== Asm code ====================
2018-03-16 16:06:28.644436411 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetEncoding1_closure
.type GHC.IO.Handle.hSetEncoding1_closure, @object
GHC.IO.Handle.hSetEncoding1_closure:
	.quad	GHC.IO.Handle.hSetEncoding1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.645384004 UTC

.section .text
.align 8
sat_sbudP_entry:
_cbvBt:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvBx
_cbvBy:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbvBq_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbvBq
_cbvBr:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvBx:
	jmp *-16(%r13)
	.size sat_sbudP_entry, .-sat_sbudP_entry


==================== Asm code ====================
2018-03-16 16:06:28.646052827 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbudP_info:
	.quad	sat_sbudP_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:28.646799327 UTC

.section .text
.align 8
_cbvBq:
_cbvBq:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbvBB
_cbvBA:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rsi
	movq %rsi,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbvBB:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvBq, .-_cbvBq


==================== Asm code ====================
2018-03-16 16:06:28.647516394 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvBq_info:
	.quad	_cbvBq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.648315424 UTC

.section .text
.align 8
sat_sbue8_entry:
_cbvBZ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvC6
_cbvC7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbvBW_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbvBW
_cbvBX:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvC6:
	jmp *-16(%r13)
	.size sat_sbue8_entry, .-sat_sbue8_entry


==================== Asm code ====================
2018-03-16 16:06:28.648999982 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbue8_info:
	.quad	sat_sbue8_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:28.649890187 UTC

.section .text
.align 8
_cbvBW:
_cbvBW:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbvCa
_cbvC9:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 39(%rbx),%rbx
	addq 8(%rbp),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbvCa:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvBW, .-_cbvBW


==================== Asm code ====================
2018-03-16 16:06:28.650642018 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvBW_info:
	.quad	_cbvBW
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.651445116 UTC

.section .text
.align 8
sat_sbuev_entry:
_cbvCc:
	leaq -192(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvCd
_cbvCe:
	leaq block_cbvAN_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbvAN
_cbvAO:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvCd:
	jmp *-8(%r13)
	.size sat_sbuev_entry, .-sat_sbuev_entry


==================== Asm code ====================
2018-03-16 16:06:28.652164222 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbuev_info:
	.quad	sat_sbuev_entry
	.quad	2
	.quad	18014402804449291
	.quad	8589934597
	.quad	SbuCr_srt+296


==================== Asm code ====================
2018-03-16 16:06:28.65317797 UTC

.section .text
.align 8
_cbvAN:
_cbvAN:
	leaq block_cbvAS_info(%rip),%rax
	movq %rax,-120(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 111(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 119(%rbx),%rsi
	movq 127(%rbx),%rbx
	movq %rbx,96(%rsp)
	movq 8(%r11),%rbx
	movq %rdi,104(%rsp)
	movq 72(%rsp),%rdi
	movq %rdi,-112(%rbp)
	movq 80(%rsp),%rdi
	movq %rdi,-104(%rbp)
	movq 88(%rsp),%rdi
	movq %rdi,-96(%rbp)
	movq 104(%rsp),%rdi
	movq %rdi,-88(%rbp)
	movq %r8,-80(%rbp)
	movq %r9,-72(%rbp)
	movq %r10,-64(%rbp)
	movq %r11,-56(%rbp)
	movq %r14,-48(%rbp)
	movq %rax,-40(%rbp)
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq 96(%rsp),%rax
	movq %rax,-8(%rbp)
	movq 64(%rsp),%rax
	movq %rax,(%rbp)
	addq $-120,%rbp
	testb $7,%bl
	jne _cbvAS
_cbvAT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvAN, .-_cbvAN


==================== Asm code ====================
2018-03-16 16:06:28.654248337 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvAN_info:
	.quad	_cbvAN
	.quad	2
	.quad	18014402804449310
	.quad	SbuCr_srt+296


==================== Asm code ====================
2018-03-16 16:06:28.655105467 UTC

.section .text
.align 8
_cbvAS:
_cbvAS:
	leaq block_cbvAZ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbvAZ
_cbvB0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvAS, .-_cbvAS


==================== Asm code ====================
2018-03-16 16:06:28.656851485 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvAS_info:
	.quad	_cbvAS
	.quad	17
	.quad	18014402804449310
	.quad	SbuCr_srt+296


==================== Asm code ====================
2018-03-16 16:06:28.657767015 UTC

.section .text
.align 8
_cbvAZ:
_cbvAZ:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbvF0
_cbvFV:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _ubvGj
_cbvFT:
	movq GHC.IO.Handle.Internals.flushCharBuffer2_closure@gotpcrel(%rip),%rbx
	addq $160,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_ubvGj:
	addq $24,%rbp
	jmp _sbubQ
_cbvF0:
	movq 80(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbvB4_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbvB4
_cbvB5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvAZ, .-_cbvAZ


==================== Asm code ====================
2018-03-16 16:06:28.658467535 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvAZ_info:
	.quad	_cbvAZ
	.quad	211
	.quad	18014402804449310
	.quad	SbuCr_srt+296


==================== Asm code ====================
2018-03-16 16:06:28.659185097 UTC

.section .text
.align 8
_cbvB4:
_cbvB4:
	leaq block_cbvB9_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbvB9
_cbvBa:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvB4, .-_cbvB4


==================== Asm code ====================
2018-03-16 16:06:28.659803786 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvB4_info:
	.quad	_cbvB4
	.quad	17
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.660558964 UTC

.section .text
.align 8
_cbvB9:
_cbvB9:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbvFI
_ubvGk:
	addq $24,%rbp
	jmp _sbubQ
_ubvGl:
	addq $24,%rbp
	jmp _sbubQ
_cbvFI:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _ubvGl
_cbvF4:
	movq 72(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbvBh_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbvBh
_cbvBi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvB9, .-_cbvB9


==================== Asm code ====================
2018-03-16 16:06:28.661283889 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvB9_info:
	.quad	_cbvB9
	.quad	211
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.662176946 UTC

.section .text
.align 8
_cbvBh:
_cbvBh:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbvF7
_cbvF6:
	movq 64(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq 8(%rax),%rdx
	leaq sat_sbudP_info(%rip),%rsi
	movq %rsi,-16(%r12)
	movq %rdx,(%r12)
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_cbvBG_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rcx
	movq 64(%rsp),%rax
	movq %rax,%rbx
	movq %rcx,(%rbp)
	movq %r14,56(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbvBG
_cbvBH:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvF7:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvBh, .-_cbvBh


==================== Asm code ====================
2018-03-16 16:06:28.662946804 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvBh_info:
	.quad	_cbvBh
	.quad	4113
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.663784197 UTC

.section .text
.align 8
_cbvBG:
_cbvBG:
	movq 39(%rbx),%rax
	testq %rax,%rax
	jne _cbvFa
_cbvFF:
	movq 48(%rbp),%rax
	movq 8(%rbp),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $16,%rbp
	jmp _sbubQ
_cbvFa:
	leaq block_cbvBN_info(%rip),%rcx
	movq %rcx,-32(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq 96(%rbp),%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rsi,(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbvBN
_cbvBO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvBG, .-_cbvBG


==================== Asm code ====================
2018-03-16 16:06:28.664550576 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvBG_info:
	.quad	_cbvBG
	.quad	18
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.665401246 UTC

.section .text
.align 8
_cbvBN:
_cbvBN:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbvFc
_cbvFu:
	leaq block_cbvFi_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbvFi
_cbvFj:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvFf:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbvFc:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbvFf
_cbvFe:
	leaq sat_sbue8_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	movq 80(%rbp),%rax
	leaq -24(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $48,%rbp
	jmp _sbubQ
	.size _cbvBN, .-_cbvBN


==================== Asm code ====================
2018-03-16 16:06:28.666138937 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvBN_info:
	.quad	_cbvBN
	.quad	790
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.666787336 UTC

.section .text
.align 8
_cbvFi:
_cbvFi:
	leaq block_cbvFn_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 96(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,96(%rbp)
	addq $-8,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
	.size _cbvFi, .-_cbvFi


==================== Asm code ====================
2018-03-16 16:06:28.667362744 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvFi_info:
	.quad	_cbvFi
	.quad	790
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.668126682 UTC

.section .text
.align 8
_cbvFn:
_cbvFn:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbvFy
_cbvFx:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	movq 40(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 48(%rbp),%rax
	leaq block_cbvFq_info(%rip),%rbx
	movq %rbx,48(%rbp)
	leaq -47(%r12),%r8
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 104(%rbp),%r14
	addq $48,%rbp
	jmp *GHC.IO.Handle.Internals.$wstreamEncode_entry@gotpcrel(%rip)
_cbvFy:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvFn, .-_cbvFn


==================== Asm code ====================
2018-03-16 16:06:28.668822961 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvFn_info:
	.quad	_cbvFn
	.quad	1559
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.669486597 UTC

.section .text
.align 8
_cbvFq:
_cbvFq:
	leaq block_cbvFs_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbvFs
_cbvFA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvFq, .-_cbvFq


==================== Asm code ====================
2018-03-16 16:06:28.670090734 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvFq_info:
	.quad	_cbvFq
	.quad	4113
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.670796103 UTC

.section .text
.align 8
_cbvFs:
_cbvFs:
	movq 40(%rbp),%rax
	movq 7(%rbx),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $8,%rbp
	jmp _sbubQ
	.size _cbvFs, .-_cbvFs


==================== Asm code ====================
2018-03-16 16:06:28.671407735 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvFs_info:
	.quad	_cbvFs
	.quad	4113
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.672049597 UTC

.section .text
.align 8
_sbubQ:
_sbubQ:
	leaq block_cbvCm_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 80(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbvCm
_cbvDY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbubQ, .-_sbubQ


==================== Asm code ====================
2018-03-16 16:06:28.672836886 UTC

.section .text
.align 8
_cbvCm:
_cbvCm:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbvE5
_cbvEu:
	leaq block_cbvEs_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbvEs
_cbvEv:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvE5:
	leaq block_cbvE2_info(%rip),%rax
	movq %rax,(%rbp)
	movq 80(%rbp),%rbx
	testb $7,%bl
	jne _cbvE2
_cbvE6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvCm, .-_cbvCm


==================== Asm code ====================
2018-03-16 16:06:28.673901811 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvCm_info:
	.quad	_cbvCm
	.quad	69649
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.67458755 UTC

.section .text
.align 8
_cbvE2:
_cbvE2:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubvGr
_cbvEm:
	leaq block_cbvEf_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbvEf
_cbvEg:
	movq (%rbx),%rax
	jmp *(%rax)
_ubvGr:
	addq $8,%rbp
	jmp _sbubS
	.size _cbvE2, .-_cbvE2


==================== Asm code ====================
2018-03-16 16:06:28.675199902 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvE2_info:
	.quad	_cbvE2
	.quad	102417
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.675832551 UTC

.section .text
.align 8
_cbvEf:
_cbvEf:
	leaq block_cbvEk_info(%rip),%rax
	movq %rax,(%rbp)
	movq 23(%rbx),%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cbvEf, .-_cbvEf


==================== Asm code ====================
2018-03-16 16:06:28.676420007 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvEf_info:
	.quad	_cbvEf
	.quad	102417
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.676985602 UTC

.section .text
.align 8
_cbvEk:
_cbvEk:
	addq $8,%rbp
	jmp _sbubS
	.size _cbvEk, .-_cbvEk


==================== Asm code ====================
2018-03-16 16:06:28.677601068 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvEk_info:
	.quad	_cbvEk
	.quad	102417
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.678243868 UTC

.section .text
.align 8
_cbvEs:
_cbvEs:
	leaq block_cbvEz_info(%rip),%rax
	movq %rax,(%rbp)
	movq 23(%rbx),%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cbvEs, .-_cbvEs


==================== Asm code ====================
2018-03-16 16:06:28.678835297 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvEs_info:
	.quad	_cbvEs
	.quad	69649
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.679505627 UTC

.section .text
.align 8
_cbvEz:
_cbvEz:
	leaq block_cbvEB_info(%rip),%rax
	movq %rax,(%rbp)
	movq 80(%rbp),%rbx
	testb $7,%bl
	jne _cbvEB
_cbvEE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvEz, .-_cbvEz


==================== Asm code ====================
2018-03-16 16:06:28.680086286 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvEz_info:
	.quad	_cbvEz
	.quad	69649
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.680770109 UTC

.section .text
.align 8
_cbvEB:
_cbvEB:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubvGp
_cbvEU:
	leaq block_cbvEN_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbvEN
_cbvEO:
	movq (%rbx),%rax
	jmp *(%rax)
_ubvGp:
	addq $8,%rbp
	jmp _sbubS
	.size _cbvEB, .-_cbvEB


==================== Asm code ====================
2018-03-16 16:06:28.681454296 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvEB_info:
	.quad	_cbvEB
	.quad	102417
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.682100919 UTC

.section .text
.align 8
_cbvEN:
_cbvEN:
	leaq block_cbvES_info(%rip),%rax
	movq %rax,(%rbp)
	movq 23(%rbx),%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cbvEN, .-_cbvEN


==================== Asm code ====================
2018-03-16 16:06:28.682710129 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvEN_info:
	.quad	_cbvEN
	.quad	102417
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.683321079 UTC

.section .text
.align 8
_cbvES:
_cbvES:
	addq $8,%rbp
	jmp _sbubS
	.size _cbvES, .-_cbvES


==================== Asm code ====================
2018-03-16 16:06:28.68387376 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvES_info:
	.quad	_cbvES
	.quad	102417
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.684579395 UTC

.section .text
.align 8
_sbubS:
_sbubS:
	leaq block_cbvCr_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 120(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbvCr
_cbvCt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbubS, .-_sbubS


==================== Asm code ====================
2018-03-16 16:06:28.685323053 UTC

.section .text
.align 8
_cbvCr:
_cbvCr:
	leaq block_cbvCz_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rbx
	movq %rbx,%rcx
	movq 32(%rbp),%rbx
	movq %rcx,88(%rbp)
	movq %rax,128(%rbp)
	testb $7,%bl
	jne _cbvCz
_cbvDz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvCr, .-_cbvCr


==================== Asm code ====================
2018-03-16 16:06:28.685976367 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvCr_info:
	.quad	_cbvCr
	.quad	2199569
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.687438004 UTC

.section .text
.align 8
_cbvCz:
_cbvCz:
	movq 128(%rbp),%rax
	andl $7,%ebx
	cmpq $3,%rbx
	jne _ubvGg
_cbvDK:
	leaq block_cbvDI_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_ubvGg:
	cmpq $6,%rbx
	jne _cbvDF
_cbvDT:
	leaq block_cbvDR_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_cbvDF:
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,128(%rbp)
	addq $8,%rbp
	jmp _sbubY
	.size _cbvCz, .-_cbvCz


==================== Asm code ====================
2018-03-16 16:06:28.688147854 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvCz_info:
	.quad	_cbvCz
	.quad	36881
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.688870273 UTC

.section .text
.align 8
_cbvDR:
_cbvDR:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbvDX
_cbvDW:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,128(%rbp)
	addq $8,%rbp
	jmp _sbubY
_cbvDX:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvDR, .-_cbvDR


==================== Asm code ====================
2018-03-16 16:06:28.689581761 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvDR_info:
	.quad	_cbvDR
	.quad	2134033
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.690314489 UTC

.section .text
.align 8
_cbvDI:
_cbvDI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbvDO
_cbvDN:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,128(%rbp)
	addq $8,%rbp
	jmp _sbubY
_cbvDO:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvDI, .-_cbvDI


==================== Asm code ====================
2018-03-16 16:06:28.690949522 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvDI_info:
	.quad	_cbvDI
	.quad	2134033
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.691607827 UTC

.section .text
.align 8
_sbubY:
_sbubY:
	leaq block_cbvCE_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbvCE
_cbvCG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbubY, .-_sbubY


==================== Asm code ====================
2018-03-16 16:06:28.692449661 UTC

.section .text
.align 8
_cbvCE:
_cbvCE:
	movq 88(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $5,%rcx
	jb _ubvGh
_ubvGi:
	cmpq $6,%rcx
	jb _cbvDg
_cbvDu:
	leaq block_cbvDn_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_cbvDg:
	leaq block_cbvD9_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_ubvGh:
	cmpq $4,%rcx
	jb _cbvCP
_cbvD2:
	leaq block_cbvCV_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_cbvCP:
	leaq block_cbvCK_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	leaq lvl18_rbnX0_closure(%rip),%rbx
	movq %rax,88(%rbp)
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _cbvCE, .-_cbvCE


==================== Asm code ====================
2018-03-16 16:06:28.693151639 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvCE_info:
	.quad	_cbvCE
	.quad	37393
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.694453134 UTC

.section .text
.align 8
_cbvCK:
_cbvCK:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cbvCS
_cbvCR:
	movq GHC.IO.Handle.Types.Handle___con_info@gotpcrel(%rip),%rax
	movq %rax,-128(%r12)
	movq 120(%rbp),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq 16(%rbp),%rax
	movq %rax,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq 88(%rbp),%rax
	movq %rax,-88(%r12)
	movq 40(%rbp),%rax
	movq %rax,-80(%r12)
	movq 48(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 64(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	movq 128(%rbp),%rax
	movq %rax,-32(%r12)
	movq 136(%rbp),%rax
	movq %rax,-24(%r12)
	movq 96(%rbp),%rax
	movq %rax,-16(%r12)
	movq 104(%rbp),%rax
	movq %rax,-8(%r12)
	movq 112(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbvCS:
	movq $136,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvCK, .-_cbvCK


==================== Asm code ====================
2018-03-16 16:06:28.695221942 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvCK_info:
	.quad	_cbvCK
	.quad	37393
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.695860858 UTC

.section .text
.align 8
_cbvCV:
_cbvCV:
	leaq block_cbvCX_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	leaq lvl18_rbnX0_closure(%rip),%rbx
	movq %rax,88(%rbp)
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _cbvCV, .-_cbvCV


==================== Asm code ====================
2018-03-16 16:06:28.696459755 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvCV_info:
	.quad	_cbvCV
	.quad	102929
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.697330394 UTC

.section .text
.align 8
_cbvCX:
_cbvCX:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _cbvD6
_cbvD5:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-144(%r12)
	movq 88(%rbp),%rax
	movq %rax,-136(%r12)
	movq GHC.IO.Handle.Types.Handle___con_info@gotpcrel(%rip),%rax
	movq %rax,-128(%r12)
	movq 120(%rbp),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq 16(%rbp),%rax
	movq %rax,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq GHC.IO.Handle.Types.WriteHandle_closure@gotpcrel(%rip),%rax
	addq $4,%rax
	movq %rax,-88(%r12)
	movq 40(%rbp),%rax
	movq %rax,-80(%r12)
	movq 48(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 64(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	leaq -142(%r12),%rax
	movq %rax,-40(%r12)
	movq 128(%rbp),%rax
	movq %rax,-32(%r12)
	movq 136(%rbp),%rax
	movq %rax,-24(%r12)
	movq 96(%rbp),%rax
	movq %rax,-16(%r12)
	movq 104(%rbp),%rax
	movq %rax,-8(%r12)
	movq 112(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbvD6:
	movq $152,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvCX, .-_cbvCX


==================== Asm code ====================
2018-03-16 16:06:28.698134653 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvCX_info:
	.quad	_cbvCX
	.quad	37393
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.698792481 UTC

.section .text
.align 8
_cbvD9:
_cbvD9:
	leaq block_cbvDb_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	leaq lvl18_rbnX0_closure(%rip),%rbx
	movq %rax,88(%rbp)
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _cbvD9, .-_cbvD9


==================== Asm code ====================
2018-03-16 16:06:28.699368012 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvD9_info:
	.quad	_cbvD9
	.quad	102929
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.700231296 UTC

.section .text
.align 8
_cbvDb:
_cbvDb:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _cbvDk
_cbvDj:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-144(%r12)
	movq 88(%rbp),%rax
	movq %rax,-136(%r12)
	movq GHC.IO.Handle.Types.Handle___con_info@gotpcrel(%rip),%rax
	movq %rax,-128(%r12)
	movq 120(%rbp),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq 16(%rbp),%rax
	movq %rax,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq GHC.IO.Handle.Types.AppendHandle_closure@gotpcrel(%rip),%rax
	addq $5,%rax
	movq %rax,-88(%r12)
	movq 40(%rbp),%rax
	movq %rax,-80(%r12)
	movq 48(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 64(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	leaq -142(%r12),%rax
	movq %rax,-40(%r12)
	movq 128(%rbp),%rax
	movq %rax,-32(%r12)
	movq 136(%rbp),%rax
	movq %rax,-24(%r12)
	movq 96(%rbp),%rax
	movq %rax,-16(%r12)
	movq 104(%rbp),%rax
	movq %rax,-8(%r12)
	movq 112(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbvDk:
	movq $152,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvDb, .-_cbvDb


==================== Asm code ====================
2018-03-16 16:06:28.701021781 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvDb_info:
	.quad	_cbvDb
	.quad	37393
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.701733948 UTC

.section .text
.align 8
_cbvDn:
_cbvDn:
	leaq block_cbvDp_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	leaq lvl18_rbnX0_closure(%rip),%rbx
	movq %rax,88(%rbp)
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _cbvDn, .-_cbvDn


==================== Asm code ====================
2018-03-16 16:06:28.702329688 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvDn_info:
	.quad	_cbvDn
	.quad	102929
	.quad	4294967326
	.quad	SbuCr_srt+472


==================== Asm code ====================
2018-03-16 16:06:28.703202077 UTC

.section .text
.align 8
_cbvDp:
_cbvDp:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _cbvDy
_cbvDx:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-144(%r12)
	movq 88(%rbp),%rax
	movq %rax,-136(%r12)
	movq GHC.IO.Handle.Types.Handle___con_info@gotpcrel(%rip),%rax
	movq %rax,-128(%r12)
	movq 120(%rbp),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq 16(%rbp),%rax
	movq %rax,-104(%r12)
	movq 24(%rbp),%rax
	movq %rax,-96(%r12)
	movq GHC.IO.Handle.Types.ReadWriteHandle_closure@gotpcrel(%rip),%rax
	addq $6,%rax
	movq %rax,-88(%r12)
	movq 40(%rbp),%rax
	movq %rax,-80(%r12)
	movq 48(%rbp),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 64(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	leaq -142(%r12),%rax
	movq %rax,-40(%r12)
	movq 128(%rbp),%rax
	movq %rax,-32(%r12)
	movq 136(%rbp),%rax
	movq %rax,-24(%r12)
	movq 96(%rbp),%rax
	movq %rax,-16(%r12)
	movq 104(%rbp),%rax
	movq %rax,-8(%r12)
	movq 112(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbvDy:
	movq $152,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvDp, .-_cbvDp


==================== Asm code ====================
2018-03-16 16:06:28.704024779 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvDp_info:
	.quad	_cbvDp
	.quad	37393
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.704799534 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetEncoding1_entry
.type GHC.IO.Handle.hSetEncoding1_entry, @object
GHC.IO.Handle.hSetEncoding1_entry:
_cbvH2:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbvH6
_cbvH5:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	movq %rsi,-24(%r12)
	leaq sat_sbuev_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rsi,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rdi
	movq %r14,%rsi
	leaq lvl16_rbnWY_closure(%rip),%r14
	jmp *GHC.IO.Handle.Internals.withAllHandles__1_entry@gotpcrel(%rip)
_cbvH6:
	movq $40,904(%r13)
	leaq GHC.IO.Handle.hSetEncoding1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hSetEncoding1_entry, .-GHC.IO.Handle.hSetEncoding1_entry


==================== Asm code ====================
2018-03-16 16:06:28.706134922 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetEncoding1_info
.type GHC.IO.Handle.hSetEncoding1_info, @object
GHC.IO.Handle.hSetEncoding1_info:
	.quad	GHC.IO.Handle.hSetEncoding1_entry
	.quad	0
	.quad	4035225407857885198
	.quad	12884901903
	.quad	SbuCr_srt+256


==================== Asm code ====================
2018-03-16 16:06:28.708500755 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetEncoding_closure
.type GHC.IO.Handle.hSetEncoding_closure, @object
GHC.IO.Handle.hSetEncoding_closure:
	.quad	GHC.IO.Handle.hSetEncoding_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.709093791 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetEncoding_entry
.type GHC.IO.Handle.hSetEncoding_entry, @object
GHC.IO.Handle.hSetEncoding_entry:
_cbvMb:
	jmp GHC.IO.Handle.hSetEncoding1_entry
	.size GHC.IO.Handle.hSetEncoding_entry, .-GHC.IO.Handle.hSetEncoding_entry


==================== Asm code ====================
2018-03-16 16:06:28.709771675 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetEncoding_info
.type GHC.IO.Handle.hSetEncoding_info, @object
GHC.IO.Handle.hSetEncoding_info:
	.quad	GHC.IO.Handle.hSetEncoding_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SbuCr_srt+480


==================== Asm code ====================
2018-03-16 16:06:28.711521487 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hSetBuffering3_bytes
.type GHC.IO.Handle.hSetBuffering3_bytes, @object
GHC.IO.Handle.hSetBuffering3_bytes:
	.asciz "hSetBuffering"


==================== Asm code ====================
2018-03-16 16:06:28.714112829 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetBuffering2_closure
.type GHC.IO.Handle.hSetBuffering2_closure, @object
GHC.IO.Handle.hSetBuffering2_closure:
	.quad	GHC.IO.Handle.hSetBuffering2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.714998165 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetBuffering2_entry
.type GHC.IO.Handle.hSetBuffering2_entry, @object
GHC.IO.Handle.hSetBuffering2_entry:
_cbvMp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvMq
_cbvMr:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbvMo
_cbvMn:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hSetBuffering3_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbvMq:
	jmp *-16(%r13)
_cbvMo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hSetBuffering2_entry, .-GHC.IO.Handle.hSetBuffering2_entry


==================== Asm code ====================
2018-03-16 16:06:28.715679208 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetBuffering2_info
.type GHC.IO.Handle.hSetBuffering2_info, @object
GHC.IO.Handle.hSetBuffering2_info:
	.quad	GHC.IO.Handle.hSetBuffering2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:28.738357151 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetBuffering1_closure
.type GHC.IO.Handle.hSetBuffering1_closure, @object
GHC.IO.Handle.hSetBuffering1_closure:
	.quad	GHC.IO.Handle.hSetBuffering1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.739298266 UTC

.section .text
.align 8
sat_sbufG_entry:
_cbvMM:
	leaq -176(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvMN
_cbvMO:
	leaq block_cbvMJ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbvMJ
_cbvMK:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvMN:
	jmp *-8(%r13)
	.size sat_sbufG_entry, .-sat_sbufG_entry


==================== Asm code ====================
2018-03-16 16:06:28.739955025 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbufG_info:
	.quad	sat_sbufG_entry
	.quad	1
	.quad	12884901897
	.quad	8589934597
	.quad	SbuCr_srt+496


==================== Asm code ====================
2018-03-16 16:06:28.741893228 UTC

.section .text
.align 8
_cbvMJ:
_cbvMJ:
	leaq block_cbvMR_info(%rip),%rax
	movq %rax,-128(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rsi
	movq 31(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 119(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 127(%rbx),%r8
	movq 39(%rbx),%rbx
	movq %r9,112(%rsp)
	movq 72(%rsp),%r9
	movq %r9,-120(%rbp)
	movq 80(%rsp),%r9
	movq %r9,-112(%rbp)
	movq 88(%rsp),%r9
	movq %r9,-104(%rbp)
	movq 96(%rsp),%r9
	movq %r9,-96(%rbp)
	movq 104(%rsp),%r9
	movq %r9,-88(%rbp)
	movq 112(%rsp),%r9
	movq %r9,-80(%rbp)
	movq %r10,-72(%rbp)
	movq %r11,-64(%rbp)
	movq %r14,-56(%rbp)
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq 64(%rsp),%rax
	movq %rax,(%rbp)
	addq $-128,%rbp
	testb $7,%bl
	jne _cbvMR
_cbvMT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvMJ, .-_cbvMJ


==================== Asm code ====================
2018-03-16 16:06:28.742718888 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvMJ_info:
	.quad	_cbvMJ
	.quad	1
	.quad	12884901918
	.quad	SbuCr_srt+496


==================== Asm code ====================
2018-03-16 16:06:28.743436615 UTC

.section .text
.align 8
_cbvMR:
_cbvMR:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbvQM
_cbvP2:
	leaq block_cbvMZ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 136(%rbp),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbvMZ
_cbvP3:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvQM:
	addq $144,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_closedHandle1_entry@gotpcrel(%rip)
	.size _cbvMR, .-_cbvMR


==================== Asm code ====================
2018-03-16 16:06:28.744083512 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvMR_info:
	.quad	_cbvMR
	.quad	17
	.quad	12884901918
	.quad	SbuCr_srt+496


==================== Asm code ====================
2018-03-16 16:06:28.744899732 UTC

.section .text
.align 8
_cbvMZ:
_cbvMZ:
	movq 56(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _ubvR0
_cbvPG:
	leaq block_cbvPE_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 5(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,56(%rbp)
	testb $7,%bl
	jne _cbvPE
_cbvPH:
	movq (%rbx),%rax
	jmp *(%rax)
_ubvR0:
	cmpq $2,%rcx
	jb _cbvPa
_cbvPq:
	leaq block_cbvPo_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbvPo
_cbvPr:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvPa:
	leaq block_cbvP7_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbvP7
_cbvPb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvMZ, .-_cbvMZ


==================== Asm code ====================
2018-03-16 16:06:28.745694998 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvMZ_info:
	.quad	_cbvMZ
	.quad	18
	.quad	4294967326
	.quad	SbuCr_srt+496


==================== Asm code ====================
2018-03-16 16:06:28.746298949 UTC

.section .text
.align 8
_cbvP7:
_cbvP7:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ubvR2
_ubvR3:
	addq $8,%rbp
	jmp _sbueT
_ubvR2:
	addq $136,%rbp
	jmp _cbvQI
	.size _cbvP7, .-_cbvP7


==================== Asm code ====================
2018-03-16 16:06:28.74687004 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvP7_info:
	.quad	_cbvP7
	.quad	4114
	.quad	4294967326
	.quad	SbuCr_srt+496


==================== Asm code ====================
2018-03-16 16:06:28.747532846 UTC

.section .text
.align 8
_cbvPo:
_cbvPo:
	andl $7,%ebx
	cmpq $2,%rbx
	je _ubvR4
_ubvR5:
	addq $8,%rbp
	jmp _sbueT
_ubvR4:
	addq $136,%rbp
	jmp _cbvQI
	.size _cbvPo, .-_cbvPo


==================== Asm code ====================
2018-03-16 16:06:28.748111066 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvPo_info:
	.quad	_cbvPo
	.quad	4114
	.quad	4294967326
	.quad	SbuCr_srt+496


==================== Asm code ====================
2018-03-16 16:06:28.748837971 UTC

.section .text
.align 8
_cbvPE:
_cbvPE:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _cbvPS
_ubvR6:
	addq $8,%rbp
	jmp _sbueT
_cbvPS:
	leaq block_cbvPQ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 5(%rbx),%rax
	movq 56(%rbp),%rbx
	movq %rax,56(%rbp)
	testb $7,%bl
	jne _cbvPQ
_cbvPT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvPE, .-_cbvPE


==================== Asm code ====================
2018-03-16 16:06:28.749573959 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvPE_info:
	.quad	_cbvPE
	.quad	18
	.quad	4294967326
	.quad	SbuCr_srt+496


==================== Asm code ====================
2018-03-16 16:06:28.750338555 UTC

.section .text
.align 8
_cbvPQ:
_cbvPQ:
	movq 56(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbvQ0
_cbvQg:
	leaq block_cbvQe_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,56(%rbp)
	testb $7,%bl
	jne _cbvQe
_cbvQh:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvQ0:
	leaq block_cbvPX_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbvPX
_cbvQ1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvPQ, .-_cbvPQ


==================== Asm code ====================
2018-03-16 16:06:28.751002622 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvPQ_info:
	.quad	_cbvPQ
	.quad	18
	.quad	4294967326
	.quad	SbuCr_srt+496


==================== Asm code ====================
2018-03-16 16:06:28.751660652 UTC

.section .text
.align 8
_cbvPX:
_cbvPX:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ubvRa
_ubvRb:
	addq $8,%rbp
	jmp _sbueT
_ubvRa:
	addq $136,%rbp
	jmp _cbvQI
	.size _cbvPX, .-_cbvPX


==================== Asm code ====================
2018-03-16 16:06:28.75224623 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvPX_info:
	.quad	_cbvPX
	.quad	4114
	.quad	4294967326
	.quad	SbuCr_srt+496


==================== Asm code ====================
2018-03-16 16:06:28.752960996 UTC

.section .text
.align 8
_cbvQe:
_cbvQe:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubvR7
_cbvQx:
	leaq block_cbvQq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 56(%rbp),%rbx
	movq %rax,56(%rbp)
	testb $7,%bl
	jne _cbvQq
_cbvQr:
	movq (%rbx),%rax
	jmp *(%rax)
_ubvR7:
	addq $8,%rbp
	jmp _sbueT
	.size _cbvQe, .-_cbvQe


==================== Asm code ====================
2018-03-16 16:06:28.75367252 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvQe_info:
	.quad	_cbvQe
	.quad	18
	.quad	4294967326
	.quad	SbuCr_srt+496


==================== Asm code ====================
2018-03-16 16:06:28.75433758 UTC

.section .text
.align 8
_cbvQq:
_cbvQq:
	leaq block_cbvQv_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 56(%rbp),%rbx
	movq %rax,56(%rbp)
	testb $7,%bl
	jne _cbvQv
_cbvQz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvQq, .-_cbvQq


==================== Asm code ====================
2018-03-16 16:06:28.754922462 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvQq_info:
	.quad	_cbvQq
	.quad	18
	.quad	4294967326
	.quad	SbuCr_srt+496


==================== Asm code ====================
2018-03-16 16:06:28.755583379 UTC

.section .text
.align 8
_cbvQv:
_cbvQv:
	movq 56(%rbp),%rax
	cmpq 7(%rbx),%rax
	je _ubvR8
_ubvR9:
	addq $8,%rbp
	jmp _sbueT
_ubvR8:
	addq $136,%rbp
	jmp _cbvQI
	.size _cbvQv, .-_cbvQv


==================== Asm code ====================
2018-03-16 16:06:28.756156381 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvQv_info:
	.quad	_cbvQv
	.quad	4114
	.quad	4294967326
	.quad	SbuCr_srt+496


==================== Asm code ====================
2018-03-16 16:06:28.756833504 UTC

.section .text
.align 8
_cbvQI:
_cbvQI:
	movq (%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbvQI, .-_cbvQI


==================== Asm code ====================
2018-03-16 16:06:28.757564363 UTC

.section .text
.align 8
_sbueT:
_sbueT:
	leaq block_cbvN6_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 136(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbvN6
_cbvOt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbueT, .-_sbueT


==================== Asm code ====================
2018-03-16 16:06:28.758347217 UTC

.section .text
.align 8
_cbvN6:
_cbvN6:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _cbvOE
_ubvRc:
	addq $8,%rbp
	jmp _sbueU
_cbvOE:
	leaq block_cbvOC_info(%rip),%rax
	movq %rax,(%rbp)
	movq 5(%rbx),%rbx
	testb $7,%bl
	jne _cbvOC
_cbvOF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvN6, .-_cbvN6


==================== Asm code ====================
2018-03-16 16:06:28.75898298 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvN6_info:
	.quad	_cbvN6
	.quad	4198418
	.quad	4294967326
	.quad	SbuCr_srt+496


==================== Asm code ====================
2018-03-16 16:06:28.759688752 UTC

.section .text
.align 8
_cbvOC:
_cbvOC:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubvRd
_cbvOQ:
	leaq block_cbvOO_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbvOO
_cbvOR:
	movq (%rbx),%rax
	jmp *(%rax)
_ubvRd:
	addq $8,%rbp
	jmp _sbueU
	.size _cbvOC, .-_cbvOC


==================== Asm code ====================
2018-03-16 16:06:28.760328469 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvOC_info:
	.quad	_cbvOC
	.quad	4198418
	.quad	4294967326
	.quad	SbuCr_srt+496


==================== Asm code ====================
2018-03-16 16:06:28.761004358 UTC

.section .text
.align 8
_cbvOO:
_cbvOO:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jg _ubvRe
_cbvP0:
	movq %rax,%r14
	addq $152,%rbp
	jmp *GHC.IO.Handle.Internals.$wioe_bufsiz_entry@gotpcrel(%rip)
_ubvRe:
	addq $8,%rbp
	jmp _sbueU
	.size _cbvOO, .-_cbvOO


==================== Asm code ====================
2018-03-16 16:06:28.761691944 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvOO_info:
	.quad	_cbvOO
	.quad	4198418
	.quad	4294967326
	.quad	SbuCr_srt+496


==================== Asm code ====================
2018-03-16 16:06:28.762360245 UTC

.section .text
.align 8
_sbueU:
_sbueU:
	leaq block_cbvNb_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_pv_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-16(%rbp)
	addq $-24,%rbp
	jmp *GHC.IO.Device.isTerminal_entry@gotpcrel(%rip)
	.size _sbueU, .-_sbueU


==================== Asm code ====================
2018-03-16 16:06:28.763108888 UTC

.section .text
.align 8
_cbvNb:
_cbvNb:
	leaq block_cbvNd_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbvNd
_cbvNg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvNb, .-_cbvNb


==================== Asm code ====================
2018-03-16 16:06:28.76370372 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvNb_info:
	.quad	_cbvNb
	.quad	4198418
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.764839229 UTC

.section .text
.align 8
_cbvNd:
_cbvNd:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbvNp
_cbvO7:
	leaq block_cbvNx_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbvNx
_cbvO8:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvNs:
	movq $136,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbvNp:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cbvNs
_cbvNr:
	movq 144(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq 48(%rbp),%r8
	movq 64(%rbp),%r9
	movq 72(%rbp),%r10
	movq 80(%rbp),%r11
	movq 88(%rbp),%r14
	movq %rbx,64(%rsp)
	movq 96(%rbp),%rbx
	movq %rcx,72(%rsp)
	movq 104(%rbp),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbp),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbp),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbp),%rdi
	movq %r8,104(%rsp)
	movq GHC.IO.Handle.Types.BufferListNil_closure@gotpcrel(%rip),%r8
	incq %r8
	movq %r8,8(%r11)
	subq $8,%rsp
	movq %r13,%r8
	movq %rsi,120(%rsp)
	movq %r11,%rsi
	movq %rdi,128(%rsp)
	movq %r8,%rdi
	movq %rax,%r8
	xorl %eax,%eax
	movq %r9,136(%rsp)
	movq %r10,144(%rsp)
	movq %r11,152(%rsp)
	movq %rcx,160(%rsp)
	movq %rdx,168(%rsp)
	movq %r8,176(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.IO.Handle.Types.Handle___con_info@gotpcrel(%rip),%rax
	movq %rax,-128(%r12)
	movq 72(%rsp),%rax
	movq %rax,-120(%r12)
	movq 80(%rsp),%rax
	movq %rax,-112(%r12)
	movq 88(%rsp),%rax
	movq %rax,-104(%r12)
	movq 96(%rsp),%rax
	movq %rax,-96(%r12)
	movq 168(%rsp),%rax
	movq %rax,-88(%r12)
	movq 104(%rsp),%rax
	movq %rax,-80(%r12)
	movq 64(%rsp),%rax
	movq %rax,-72(%r12)
	movq 128(%rsp),%rax
	movq %rax,-64(%r12)
	movq 136(%rsp),%rax
	movq %rax,-56(%r12)
	movq 144(%rsp),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq %rbx,-32(%r12)
	movq 152(%rsp),%rax
	movq %rax,-24(%r12)
	movq 160(%rsp),%rax
	movq %rax,-16(%r12)
	movq 112(%rsp),%rax
	movq %rax,-8(%r12)
	movq 120(%rsp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $152,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbvNd, .-_cbvNd


==================== Asm code ====================
2018-03-16 16:06:28.765992757 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvNd_info:
	.quad	_cbvNd
	.quad	4198418
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.76717752 UTC

.section .text
.align 8
_cbvNx:
_cbvNx:
	movq 144(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	je _sbuf2
_ubvR1:
	cmpq $6,%rcx
	je _sbuf2
_cbvOh:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cbvOk
_cbvOj:
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq 48(%rbp),%r8
	movq 64(%rbp),%r9
	movq 72(%rbp),%r10
	movq 80(%rbp),%r11
	movq 88(%rbp),%r14
	movq %rax,64(%rsp)
	movq 96(%rbp),%rax
	movq %rcx,72(%rsp)
	movq 104(%rbp),%rcx
	movq %rdx,80(%rsp)
	movq 112(%rbp),%rdx
	movq %rsi,88(%rsp)
	movq 120(%rbp),%rsi
	movq %rdi,96(%rsp)
	movq 128(%rbp),%rdi
	movq %r8,104(%rsp)
	movq GHC.IO.Handle.Types.BufferListNil_closure@gotpcrel(%rip),%r8
	incq %r8
	movq %r8,8(%r11)
	subq $8,%rsp
	movq %r13,%r8
	movq %rsi,120(%rsp)
	movq %r11,%rsi
	movq %rdi,128(%rsp)
	movq %r8,%rdi
	movq %rax,%r8
	xorl %eax,%eax
	movq %r9,136(%rsp)
	movq %r10,144(%rsp)
	movq %r11,152(%rsp)
	movq %r8,160(%rsp)
	movq %rcx,168(%rsp)
	movq %rdx,176(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.IO.Handle.Types.Handle___con_info@gotpcrel(%rip),%rax
	movq %rax,-128(%r12)
	movq 72(%rsp),%rax
	movq %rax,-120(%r12)
	movq 80(%rsp),%rax
	movq %rax,-112(%r12)
	movq 88(%rsp),%rax
	movq %rax,-104(%r12)
	movq 96(%rsp),%rax
	movq %rax,-96(%r12)
	movq %rbx,-88(%r12)
	movq 104(%rsp),%rax
	movq %rax,-80(%r12)
	movq 64(%rsp),%rax
	movq %rax,-72(%r12)
	movq 128(%rsp),%rax
	movq %rax,-64(%r12)
	movq 136(%rsp),%rax
	movq %rax,-56(%r12)
	movq 144(%rsp),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq 152(%rsp),%rax
	movq %rax,-32(%r12)
	movq 160(%rsp),%rax
	movq %rax,-24(%r12)
	movq 168(%rsp),%rax
	movq %rax,-16(%r12)
	movq 112(%rsp),%rax
	movq %rax,-8(%r12)
	movq 120(%rsp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $152,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbvOk:
	movq $136,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_sbuf2:
	leaq block_cbvNC_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbvNC
_cbvNE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvNx, .-_cbvNx


==================== Asm code ====================
2018-03-16 16:06:28.768229755 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvNx_info:
	.quad	_cbvNx
	.quad	4198418
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.769022642 UTC

.section .text
.align 8
_cbvNC:
_cbvNC:
	movq 16(%rbp),%rax
	movq 40(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _cbvO3
_cbvNQ:
	leaq block_cbvNI_info(%rip),%rdx
	movq %rdx,(%rbp)
	movq %rax,%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%rbp)
	movq %rbx,144(%rbp)
	addq $-24,%rbp
	jmp *GHC.IO.Device.setRaw_entry@gotpcrel(%rip)
_cbvO3:
	leaq block_cbvNW_info(%rip),%rdx
	movq %rdx,(%rbp)
	movq %rax,%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.IO.Device.setRaw_entry@gotpcrel(%rip)
	.size _cbvNC, .-_cbvNC


==================== Asm code ====================
2018-03-16 16:06:28.769848658 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvNC_info:
	.quad	_cbvNC
	.quad	12587026
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.770921949 UTC

.section .text
.align 8
_cbvNW:
_cbvNW:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cbvO6
_cbvO5:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rbx
	movq 32(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 48(%rbp),%rsi
	movq 64(%rbp),%rdi
	movq 72(%rbp),%r8
	movq 80(%rbp),%r9
	movq 88(%rbp),%r10
	movq 96(%rbp),%r11
	movq 104(%rbp),%r14
	movq %rax,64(%rsp)
	movq 112(%rbp),%rax
	movq %rbx,72(%rsp)
	movq 120(%rbp),%rbx
	movq %rcx,80(%rsp)
	movq 128(%rbp),%rcx
	movq %rdx,88(%rsp)
	movq 8(%rbp),%rdx
	movq %rsi,96(%rsp)
	movq GHC.IO.Handle.Types.BufferListNil_closure@gotpcrel(%rip),%rsi
	incq %rsi
	movq %rsi,8(%r9)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,112(%rsp)
	movq %r9,%rsi
	movq %rdi,120(%rsp)
	movq 112(%rsp),%rdi
	movq %rax,128(%rsp)
	xorl %eax,%eax
	movq %r8,136(%rsp)
	movq %r9,144(%rsp)
	movq %r10,152(%rsp)
	movq %r11,160(%rsp)
	movq %rcx,168(%rsp)
	movq %rdx,176(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.IO.Handle.Types.Handle___con_info@gotpcrel(%rip),%rax
	movq %rax,-128(%r12)
	movq 64(%rsp),%rax
	movq %rax,-120(%r12)
	movq 72(%rsp),%rax
	movq %rax,-112(%r12)
	movq 80(%rsp),%rax
	movq %rax,-104(%r12)
	movq 88(%rsp),%rax
	movq %rax,-96(%r12)
	movq 168(%rsp),%rax
	movq %rax,-88(%r12)
	movq 96(%rsp),%rax
	movq %rax,-80(%r12)
	movq GHC.IO.Handle.Types.NoBuffering_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-72(%r12)
	movq 112(%rsp),%rax
	movq %rax,-64(%r12)
	movq 128(%rsp),%rax
	movq %rax,-56(%r12)
	movq 136(%rsp),%rax
	movq %rax,-48(%r12)
	movq 144(%rsp),%rax
	movq %rax,-40(%r12)
	movq 152(%rsp),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq 120(%rsp),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 160(%rsp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $152,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbvO6:
	movq $136,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvNW, .-_cbvNW


==================== Asm code ====================
2018-03-16 16:06:28.771974213 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvNW_info:
	.quad	_cbvNW
	.quad	12587026
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.77303552 UTC

.section .text
.align 8
_cbvNI:
_cbvNI:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cbvNT
_cbvNS:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rbx
	movq 32(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 48(%rbp),%rsi
	movq 64(%rbp),%rdi
	movq 72(%rbp),%r8
	movq 80(%rbp),%r9
	movq 88(%rbp),%r10
	movq 96(%rbp),%r11
	movq 104(%rbp),%r14
	movq %rax,64(%rsp)
	movq 112(%rbp),%rax
	movq %rbx,72(%rsp)
	movq 120(%rbp),%rbx
	movq %rcx,80(%rsp)
	movq 128(%rbp),%rcx
	movq %rdx,88(%rsp)
	movq 8(%rbp),%rdx
	movq %rsi,96(%rsp)
	movq 144(%rbp),%rsi
	movq %rdi,104(%rsp)
	movq GHC.IO.Handle.Types.BufferListNil_closure@gotpcrel(%rip),%rdi
	incq %rdi
	movq %rdi,8(%r9)
	subq $8,%rsp
	movq %r13,%rdi
	movq %rsi,120(%rsp)
	movq %r9,%rsi
	movq %rax,128(%rsp)
	xorl %eax,%eax
	movq %r8,136(%rsp)
	movq %r9,144(%rsp)
	movq %r10,152(%rsp)
	movq %r11,160(%rsp)
	movq %rcx,168(%rsp)
	movq %rdx,176(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.IO.Handle.Types.Handle___con_info@gotpcrel(%rip),%rax
	movq %rax,-128(%r12)
	movq 64(%rsp),%rax
	movq %rax,-120(%r12)
	movq 72(%rsp),%rax
	movq %rax,-112(%r12)
	movq 80(%rsp),%rax
	movq %rax,-104(%r12)
	movq 88(%rsp),%rax
	movq %rax,-96(%r12)
	movq 168(%rsp),%rax
	movq %rax,-88(%r12)
	movq 96(%rsp),%rax
	movq %rax,-80(%r12)
	movq 112(%rsp),%rax
	movq %rax,-72(%r12)
	movq 104(%rsp),%rax
	movq %rax,-64(%r12)
	movq 128(%rsp),%rax
	movq %rax,-56(%r12)
	movq 136(%rsp),%rax
	movq %rax,-48(%r12)
	movq 144(%rsp),%rax
	movq %rax,-40(%r12)
	movq 152(%rsp),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq 120(%rsp),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 160(%rsp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $152,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbvNT:
	movq $136,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvNI, .-_cbvNI


==================== Asm code ====================
2018-03-16 16:06:28.774981562 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvNI_info:
	.quad	_cbvNI
	.quad	4198418
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.775599793 UTC

.section .data.rel.ro
.align 8
.align 1
ubvRO_srtd:
	.quad	SbuCr_srt+256
	.quad	34
	.quad	16106127361


==================== Asm code ====================
2018-03-16 16:06:28.776310439 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetBuffering1_entry
.type GHC.IO.Handle.hSetBuffering1_entry, @object
GHC.IO.Handle.hSetBuffering1_entry:
_cbvRJ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbvRN
_cbvRM:
	leaq sat_sbufG_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rsi,(%r12)
	leaq -6(%r12),%rdi
	movq %r14,%rsi
	leaq GHC.IO.Handle.hSetBuffering2_closure(%rip),%r14
	jmp *GHC.IO.Handle.Internals.withAllHandles__1_entry@gotpcrel(%rip)
_cbvRN:
	movq $16,904(%r13)
	leaq GHC.IO.Handle.hSetBuffering1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hSetBuffering1_entry, .-GHC.IO.Handle.hSetBuffering1_entry


==================== Asm code ====================
2018-03-16 16:06:28.776966567 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetBuffering1_info
.type GHC.IO.Handle.hSetBuffering1_info, @object
GHC.IO.Handle.hSetBuffering1_info:
	.quad	GHC.IO.Handle.hSetBuffering1_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901903
	.quad	ubvRO_srtd


==================== Asm code ====================
2018-03-16 16:06:28.779342219 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetBuffering_closure
.type GHC.IO.Handle.hSetBuffering_closure, @object
GHC.IO.Handle.hSetBuffering_closure:
	.quad	GHC.IO.Handle.hSetBuffering_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.779943827 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetBuffering_entry
.type GHC.IO.Handle.hSetBuffering_entry, @object
GHC.IO.Handle.hSetBuffering_entry:
_cbvUC:
	jmp GHC.IO.Handle.hSetBuffering1_entry
	.size GHC.IO.Handle.hSetBuffering_entry, .-GHC.IO.Handle.hSetBuffering_entry


==================== Asm code ====================
2018-03-16 16:06:28.780522103 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetBuffering_info
.type GHC.IO.Handle.hSetBuffering_info, @object
GHC.IO.Handle.hSetBuffering_info:
	.quad	GHC.IO.Handle.hSetBuffering_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SbuCr_srt+512


==================== Asm code ====================
2018-03-16 16:06:28.782474137 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hIsEOF4_bytes
.type GHC.IO.Handle.hIsEOF4_bytes, @object
GHC.IO.Handle.hIsEOF4_bytes:
	.asciz "hIsEOF"


==================== Asm code ====================
2018-03-16 16:06:28.785043096 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsEOF3_closure
.type GHC.IO.Handle.hIsEOF3_closure, @object
GHC.IO.Handle.hIsEOF3_closure:
	.quad	GHC.IO.Handle.hIsEOF3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.786929788 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsEOF3_entry
.type GHC.IO.Handle.hIsEOF3_entry, @object
GHC.IO.Handle.hIsEOF3_entry:
_cbvUQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvUR
_cbvUS:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbvUP
_cbvUO:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hIsEOF4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbvUR:
	jmp *-16(%r13)
_cbvUP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hIsEOF3_entry, .-GHC.IO.Handle.hIsEOF3_entry


==================== Asm code ====================
2018-03-16 16:06:28.787711747 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsEOF3_info
.type GHC.IO.Handle.hIsEOF3_info, @object
GHC.IO.Handle.hIsEOF3_info:
	.quad	GHC.IO.Handle.hIsEOF3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:28.794586085 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsEOF2_closure
.type GHC.IO.Handle.hIsEOF2_closure, @object
GHC.IO.Handle.hIsEOF2_closure:
	.quad	GHC.IO.Handle.hIsEOF2_info


==================== Asm code ====================
2018-03-16 16:06:28.795434962 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsEOF2_entry
.type GHC.IO.Handle.hIsEOF2_entry, @object
GHC.IO.Handle.hIsEOF2_entry:
_cbvV8:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvVc
_cbvVd:
	leaq block_cbvV5_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbvV5
_cbvV6:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvVc:
	leaq GHC.IO.Handle.hIsEOF2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsEOF2_entry, .-GHC.IO.Handle.hIsEOF2_entry


==================== Asm code ====================
2018-03-16 16:06:28.79620041 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsEOF2_info
.type GHC.IO.Handle.hIsEOF2_info, @object
GHC.IO.Handle.hIsEOF2_info:
	.quad	GHC.IO.Handle.hIsEOF2_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:06:28.797009804 UTC

.section .text
.align 8
_cbvV5:
_cbvV5:
	movq 71(%rbx),%rax
	movq 8(%rax),%rax
	leaq block_cbvVb_info(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 47(%rbx),%rbx
	movq %rbx,%rsi
	movq %rax,%rbx
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	movq %rcx,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbvVb
_cbvVf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvV5, .-_cbvV5


==================== Asm code ====================
2018-03-16 16:06:28.798203293 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvV5_info:
	.quad	_cbvV5
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.798955307 UTC

.section .text
.align 8
_cbvVb:
_cbvVb:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cbvVr
_ubvW1:
	addq $32,%rbp
	jmp _cbvVA
_cbvVr:
	movq 16(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbvVq_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbvVq
_cbvVs:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvVb, .-_cbvVb


==================== Asm code ====================
2018-03-16 16:06:28.799616883 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvVb_info:
	.quad	_cbvVb
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.800402185 UTC

.section .text
.align 8
_cbvVq:
_cbvVq:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cbvVL
_ubvW2:
	addq $32,%rbp
	jmp _cbvVA
_cbvVL:
	movq 8(%rbp),%rax
	leaq block_cbvVD_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 24(%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.BufferedIO.fillReadBuffer_entry@gotpcrel(%rip)
	.size _cbvVq, .-_cbvVq


==================== Asm code ====================
2018-03-16 16:06:28.801148886 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvVq_info:
	.quad	_cbvVq
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.801965266 UTC

.section .text
.align 8
_cbvVD:
_cbvVD:
	leaq block_cbvVF_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbvVF
_cbvVG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvVD, .-_cbvVD


==================== Asm code ====================
2018-03-16 16:06:28.80261504 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvVD_info:
	.quad	_cbvVD
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.803290302 UTC

.section .text
.align 8
_cbvVF:
_cbvVF:
	leaq block_cbvVK_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cbvVK
_cbvVO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvVF, .-_cbvVF


==================== Asm code ====================
2018-03-16 16:06:28.803941662 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvVF_info:
	.quad	_cbvVF
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.804814977 UTC

.section .text
.align 8
_cbvVK:
_cbvVK:
	cmpq $0,7(%rbx)
	je _cbvVW
_cbvVV:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbvVW:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbvVK, .-_cbvVK


==================== Asm code ====================
2018-03-16 16:06:28.805677921 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvVK_info:
	.quad	_cbvVK
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.806329959 UTC

.section .text
.align 8
_cbvVA:
_cbvVA:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbvVA, .-_cbvVA


==================== Asm code ====================
2018-03-16 16:06:28.809010361 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsEOF1_closure
.type GHC.IO.Handle.hIsEOF1_closure, @object
GHC.IO.Handle.hIsEOF1_closure:
	.quad	GHC.IO.Handle.hIsEOF1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.809845322 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsEOF1_entry
.type GHC.IO.Handle.hIsEOF1_entry, @object
GHC.IO.Handle.hIsEOF1_entry:
_cbvX0:
	leaq GHC.IO.Handle.hIsEOF2_closure+2(%rip),%rdi
	movq %r14,%rsi
	leaq GHC.IO.Handle.hIsEOF3_closure(%rip),%r14
	jmp *GHC.IO.Handle.Internals.wantReadableHandle_1_entry@gotpcrel(%rip)
	.size GHC.IO.Handle.hIsEOF1_entry, .-GHC.IO.Handle.hIsEOF1_entry


==================== Asm code ====================
2018-03-16 16:06:28.810587682 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsEOF1_info
.type GHC.IO.Handle.hIsEOF1_info, @object
GHC.IO.Handle.hIsEOF1_info:
	.quad	GHC.IO.Handle.hIsEOF1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	SbuCr_srt+528


==================== Asm code ====================
2018-03-16 16:06:28.812879059 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsEOF_closure
.type GHC.IO.Handle.hIsEOF_closure, @object
GHC.IO.Handle.hIsEOF_closure:
	.quad	GHC.IO.Handle.hIsEOF_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.81445281 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsEOF_entry
.type GHC.IO.Handle.hIsEOF_entry, @object
GHC.IO.Handle.hIsEOF_entry:
_cbvXb:
	jmp GHC.IO.Handle.hIsEOF1_entry
	.size GHC.IO.Handle.hIsEOF_entry, .-GHC.IO.Handle.hIsEOF_entry


==================== Asm code ====================
2018-03-16 16:06:28.815171962 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsEOF_info
.type GHC.IO.Handle.hIsEOF_info, @object
GHC.IO.Handle.hIsEOF_info:
	.quad	GHC.IO.Handle.hIsEOF_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbuCr_srt+544


==================== Asm code ====================
2018-03-16 16:06:28.817291372 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.isEOF1_closure
.type GHC.IO.Handle.isEOF1_closure, @object
GHC.IO.Handle.isEOF1_closure:
	.quad	GHC.IO.Handle.isEOF1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.818004712 UTC

.section .text
.align 8
.globl GHC.IO.Handle.isEOF1_entry
.type GHC.IO.Handle.isEOF1_entry, @object
GHC.IO.Handle.isEOF1_entry:
_cbvXm:
	leaq GHC.IO.Handle.hIsEOF2_closure+2(%rip),%rdi
	movq GHC.IO.Handle.FD.stdin_closure@gotpcrel(%rip),%rsi
	leaq GHC.IO.Handle.hIsEOF3_closure(%rip),%r14
	jmp *GHC.IO.Handle.Internals.wantReadableHandle_1_entry@gotpcrel(%rip)
	.size GHC.IO.Handle.isEOF1_entry, .-GHC.IO.Handle.isEOF1_entry


==================== Asm code ====================
2018-03-16 16:06:28.818664427 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.isEOF1_info
.type GHC.IO.Handle.isEOF1_info, @object
GHC.IO.Handle.isEOF1_info:
	.quad	GHC.IO.Handle.isEOF1_entry
	.quad	0
	.quad	47244640270
	.quad	4294967299
	.quad	SbuCr_srt+528


==================== Asm code ====================
2018-03-16 16:06:28.820781724 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.isEOF_closure
.type GHC.IO.Handle.isEOF_closure, @object
GHC.IO.Handle.isEOF_closure:
	.quad	GHC.IO.Handle.isEOF_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.821589517 UTC

.section .text
.align 8
.globl GHC.IO.Handle.isEOF_entry
.type GHC.IO.Handle.isEOF_entry, @object
GHC.IO.Handle.isEOF_entry:
_cbvXx:
	jmp GHC.IO.Handle.isEOF1_entry
	.size GHC.IO.Handle.isEOF_entry, .-GHC.IO.Handle.isEOF_entry


==================== Asm code ====================
2018-03-16 16:06:28.822235223 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.isEOF_info
.type GHC.IO.Handle.isEOF_info, @object
GHC.IO.Handle.isEOF_info:
	.quad	GHC.IO.Handle.isEOF_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	SbuCr_srt+560


==================== Asm code ====================
2018-03-16 16:06:28.824036026 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl19_rbnX1_bytes:
	.asciz "hSetFileSize"


==================== Asm code ====================
2018-03-16 16:06:28.826998517 UTC

.section .data
.align 8
.align 1
lvl20_rbnX2_closure:
	.quad	lvl20_rbnX2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.827907426 UTC

.section .text
.align 8
lvl20_rbnX2_entry:
_cbvXL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvXM
_cbvXN:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbvXK
_cbvXJ:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl19_rbnX1_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbvXM:
	jmp *-16(%r13)
_cbvXK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl20_rbnX2_entry, .-lvl20_rbnX2_entry


==================== Asm code ====================
2018-03-16 16:06:28.828591209 UTC

.section .data.rel.ro
.align 8
.align 1
lvl20_rbnX2_info:
	.quad	lvl20_rbnX2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:28.845441105 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetFileSize1_closure
.type GHC.IO.Handle.hSetFileSize1_closure, @object
GHC.IO.Handle.hSetFileSize1_closure:
	.quad	GHC.IO.Handle.hSetFileSize1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.846325443 UTC

.section .text
.align 8
act_sbugA_entry:
_cbvY8:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvY9
_cbvYa:
	leaq block_cbvY5_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbvY5
_cbvY6:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvY9:
	jmp *-8(%r13)
	.size act_sbugA_entry, .-act_sbugA_entry


==================== Asm code ====================
2018-03-16 16:06:28.846979549 UTC

.section .data.rel.ro
.align 8
.align 1
act_sbugA_info:
	.quad	act_sbugA_entry
	.quad	1
	.quad	18014402804449289
	.quad	8589934597
	.quad	SbuCr_srt+328


==================== Asm code ====================
2018-03-16 16:06:28.847763686 UTC

.section .text
.align 8
_cbvY5:
_cbvY5:
	leaq block_cbvYd_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 39(%rbx),%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	movq %rax,(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbvYd
_cbvYf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvY5, .-_cbvY5


==================== Asm code ====================
2018-03-16 16:06:28.848419847 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvY5_info:
	.quad	_cbvY5
	.quad	1
	.quad	18014402804449310
	.quad	SbuCr_srt+328


==================== Asm code ====================
2018-03-16 16:06:28.849221702 UTC

.section .text
.align 8
_cbvYd:
_cbvYd:
	andl $7,%ebx
	cmpq $1,%rbx
	jne _ubvZg
_cbvZ9:
	addq $48,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_closedHandle1_entry@gotpcrel(%rip)
_ubvZg:
	cmpq $2,%rbx
	jne _cbvYm
_cbvZd:
	addq $48,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry@gotpcrel(%rip)
_cbvYm:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbvYj_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbvYj
_cbvYn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvYd, .-_cbvYd


==================== Asm code ====================
2018-03-16 16:06:28.849999707 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvYd_info:
	.quad	_cbvYd
	.quad	5
	.quad	18014402804449310
	.quad	SbuCr_srt+328


==================== Asm code ====================
2018-03-16 16:06:28.850734264 UTC

.section .text
.align 8
_cbvYj:
_cbvYj:
	leaq block_cbvYr_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _cbvYr
_cbvYt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvYj, .-_cbvYj


==================== Asm code ====================
2018-03-16 16:06:28.851373193 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvYj_info:
	.quad	_cbvYj
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.852228856 UTC

.section .text
.align 8
_cbvYr:
_cbvYr:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbvYA
_cbvYH:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbvYF_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbvYF
_cbvYI:
	movq (%rbx),%rax
	jmp *(%rax)
_cbvYA:
	movq 40(%rbp),%rax
	leaq block_cbvYx_info(%rip),%rbx
	movq %rbx,40(%rbp)
	movq 32(%rbp),%r14
	movq 16(%rbp),%rbx
	movq stg_ap_ppv_info@gotpcrel(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rbx,24(%rbp)
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp *GHC.IO.Device.setSize_entry@gotpcrel(%rip)
	.size _cbvYr, .-_cbvYr


==================== Asm code ====================
2018-03-16 16:06:28.853022408 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvYr_info:
	.quad	_cbvYr
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.85390095 UTC

.section .text
.align 8
_cbvYx:
_cbvYx:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbvYx, .-_cbvYx


==================== Asm code ====================
2018-03-16 16:06:28.854532368 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvYx_info:
	.quad	_cbvYx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.855425234 UTC

.section .text
.align 8
_cbvYF:
_cbvYF:
	movq 16(%rbp),%rax
	movq 39(%rbx),%rcx
	cmpq 47(%rbx),%rcx
	je _cbvZ3
_cbvYX:
	movq 8(%rbp),%rcx
	leaq block_cbvYQ_info(%rip),%rdx
	movq %rdx,8(%rbp)
	movq %rcx,%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.BufferedIO.flushWriteBuffer_entry@gotpcrel(%rip)
_cbvZ3:
	movq 40(%rbp),%rcx
	leaq block_cbvZ2_info(%rip),%rdx
	movq %rdx,40(%rbp)
	movq 32(%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rdx
	movq %rdx,16(%rbp)
	movq %rax,24(%rbp)
	movq %rcx,32(%rbp)
	addq $16,%rbp
	jmp *GHC.IO.Device.setSize_entry@gotpcrel(%rip)
	.size _cbvYF, .-_cbvYF


==================== Asm code ====================
2018-03-16 16:06:28.856182828 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvYF_info:
	.quad	_cbvYF
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.856917179 UTC

.section .text
.align 8
_cbvZ2:
_cbvZ2:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbvZ2, .-_cbvZ2


==================== Asm code ====================
2018-03-16 16:06:28.857668003 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvZ2_info:
	.quad	_cbvZ2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.85860916 UTC

.section .text
.align 8
_cbvYQ:
_cbvYQ:
	movq 32(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq 16(%rbp),%rsi
	movq %rbx,8(%rsi)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_cbvYV_info(%rip),%rax
	movq %rax,32(%rbp)
	movq stg_ap_ppv_info@gotpcrel(%rip),%rax
	movq %rax,8(%rbp)
	movq 64(%rsp),%rax
	movq %rax,16(%rbp)
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp *GHC.IO.Device.setSize_entry@gotpcrel(%rip)
	.size _cbvYQ, .-_cbvYQ


==================== Asm code ====================
2018-03-16 16:06:28.859394786 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvYQ_info:
	.quad	_cbvYQ
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.860136675 UTC

.section .text
.align 8
_cbvYV:
_cbvYV:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbvYV, .-_cbvYV


==================== Asm code ====================
2018-03-16 16:06:28.860724033 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvYV_info:
	.quad	_cbvYV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.862286359 UTC

.section .text
.align 8
sat_sbuhI_entry:
_cbvZG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvZH
_cbvZI:
	leaq block_cbvZD_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp act_sbugA_entry
_cbvZH:
	jmp *-8(%r13)
	.size sat_sbuhI_entry, .-sat_sbuhI_entry


==================== Asm code ====================
2018-03-16 16:06:28.86296779 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbuhI_info:
	.quad	sat_sbuhI_entry
	.quad	1
	.quad	18014402804449289
	.quad	8589934597
	.quad	SbuCr_srt+328


==================== Asm code ====================
2018-03-16 16:06:28.863646573 UTC

.section .text
.align 8
_cbvZD:
_cbvZD:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbvZL
_cbvZK:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbvZL:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbvZD, .-_cbvZD


==================== Asm code ====================
2018-03-16 16:06:28.864290049 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvZD_info:
	.quad	_cbvZD
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.865097067 UTC

.section .text
.align 8
io_sbuhA_entry:
_cbvZR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbvZV
_cbvZW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbvZY
_cbvZX:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	leaq sat_sbuhI_info(%rip),%rdx
	movq %rdx,-8(%r12)
	movq %rax,(%r12)
	leaq block_cbvZM_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rcx,%rsi
	leaq lvl20_rbnX2_closure(%rip),%r14
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbvZY:
	movq $16,904(%r13)
_cbvZV:
	jmp *-8(%r13)
	.size io_sbuhA_entry, .-io_sbuhA_entry


==================== Asm code ====================
2018-03-16 16:06:28.866137769 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbuhA_info:
	.quad	io_sbuhA_entry
	.quad	3
	.quad	4629981896208547848
	.quad	4294967299
	.quad	SbuCr_srt+328


==================== Asm code ====================
2018-03-16 16:06:28.86680626 UTC

.section .text
.align 8
_cbvZM:
_cbvZM:
	leaq block_cbvZO_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbvZO
_cbvZP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbvZM, .-_cbvZM


==================== Asm code ====================
2018-03-16 16:06:28.867388499 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvZM_info:
	.quad	_cbvZM
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.868066854 UTC

.section .text
.align 8
_cbvZO:
_cbvZO:
	leaq block_cbvZU_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbvZO, .-_cbvZO


==================== Asm code ====================
2018-03-16 16:06:28.868637184 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvZO_info:
	.quad	_cbvZO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.869202442 UTC

.section .text
.align 8
_cbvZU:
_cbvZU:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbvZU, .-_cbvZU


==================== Asm code ====================
2018-03-16 16:06:28.869882396 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvZU_info:
	.quad	_cbvZU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.870582521 UTC

.section .text
.align 8
sat_sbui5_entry:
_cbw0l:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbw0m
_cbw0n:
	leaq block_cbw0i_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp act_sbugA_entry
_cbw0m:
	jmp *-8(%r13)
	.size sat_sbui5_entry, .-sat_sbui5_entry


==================== Asm code ====================
2018-03-16 16:06:28.871217887 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbui5_info:
	.quad	sat_sbui5_entry
	.quad	1
	.quad	18014402804449289
	.quad	8589934597
	.quad	SbuCr_srt+328


==================== Asm code ====================
2018-03-16 16:06:28.871975517 UTC

.section .text
.align 8
_cbw0i:
_cbw0i:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbw0q
_cbw0p:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbw0q:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbw0i, .-_cbw0i


==================== Asm code ====================
2018-03-16 16:06:28.872603052 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw0i_info:
	.quad	_cbw0i
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.873446721 UTC

.section .text
.align 8
io_sbuhX_entry:
_cbw0w:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbw0A
_cbw0B:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbw0D
_cbw0C:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	leaq sat_sbui5_info(%rip),%rdx
	movq %rdx,-8(%r12)
	movq %rax,(%r12)
	leaq block_cbw0r_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rcx,%rsi
	leaq lvl20_rbnX2_closure(%rip),%r14
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbw0D:
	movq $16,904(%r13)
_cbw0A:
	jmp *-8(%r13)
	.size io_sbuhX_entry, .-io_sbuhX_entry


==================== Asm code ====================
2018-03-16 16:06:28.87417192 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbuhX_info:
	.quad	io_sbuhX_entry
	.quad	3
	.quad	4629981896208547848
	.quad	4294967299
	.quad	SbuCr_srt+328


==================== Asm code ====================
2018-03-16 16:06:28.874788299 UTC

.section .text
.align 8
_cbw0r:
_cbw0r:
	leaq block_cbw0t_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbw0t
_cbw0u:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbw0r, .-_cbw0r


==================== Asm code ====================
2018-03-16 16:06:28.875399814 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw0r_info:
	.quad	_cbw0r
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.876050035 UTC

.section .text
.align 8
_cbw0t:
_cbw0t:
	leaq block_cbw0z_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbw0t, .-_cbw0t


==================== Asm code ====================
2018-03-16 16:06:28.876630242 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw0t_info:
	.quad	_cbw0t
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.877590409 UTC

.section .text
.align 8
_cbw0z:
_cbw0z:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbw0z, .-_cbw0z


==================== Asm code ====================
2018-03-16 16:06:28.87818891 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw0z_info:
	.quad	_cbw0z
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.87901031 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetFileSize1_entry
.type GHC.IO.Handle.hSetFileSize1_entry, @object
GHC.IO.Handle.hSetFileSize1_entry:
_cbw0N:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbw0O
_cbw0P:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbw0R
_cbw0Q:
	leaq act_sbugA_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rsi,(%r12)
	leaq block_cbvZm_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	leaq -6(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbvZm
_cbvZn:
	movq (%rbx),%rax
	jmp *(%rax)
_cbw0R:
	movq $16,904(%r13)
_cbw0O:
	leaq GHC.IO.Handle.hSetFileSize1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hSetFileSize1_entry, .-GHC.IO.Handle.hSetFileSize1_entry


==================== Asm code ====================
2018-03-16 16:06:28.879744394 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetFileSize1_info
.type GHC.IO.Handle.hSetFileSize1_info, @object
GHC.IO.Handle.hSetFileSize1_info:
	.quad	GHC.IO.Handle.hSetFileSize1_entry
	.quad	0
	.quad	-4593390140646227954
	.quad	12884901903
	.quad	SbuCr_srt+328


==================== Asm code ====================
2018-03-16 16:06:28.880519149 UTC

.section .text
.align 8
_cbvZm:
_cbvZm:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbw0K
_cbw0L:
	leaq block_cbw06_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_cbw0K:
	leaq block_cbvZr_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _cbvZm, .-_cbvZm


==================== Asm code ====================
2018-03-16 16:06:28.881231128 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvZm_info:
	.quad	_cbvZm
	.quad	1
	.quad	4629981896208547870
	.quad	SbuCr_srt+328


==================== Asm code ====================
2018-03-16 16:06:28.882102148 UTC

.section .text
.align 8
_cbvZr:
_cbvZr:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbw0V
_cbw0U:
	leaq io_sbuhA_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rax
	testq %rbx,%rbx
	je _cbw0Z
_cbw0Y:
	movq %rax,%rbx
	addq $32,%rbp
	jmp io_sbuhA_entry
_cbw0Z:
	movq %rax,%rbx
	addq $32,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbw0V:
	movq $32,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbvZr, .-_cbvZr


==================== Asm code ====================
2018-03-16 16:06:28.882782311 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbvZr_info:
	.quad	_cbvZr
	.quad	3
	.quad	4629981896208547870
	.quad	SbuCr_srt+328


==================== Asm code ====================
2018-03-16 16:06:28.883543542 UTC

.section .text
.align 8
_cbw06:
_cbw06:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbw13
_cbw12:
	leaq io_sbuhX_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rax
	testq %rbx,%rbx
	je _cbw17
_cbw16:
	movq %rax,%rbx
	addq $32,%rbp
	jmp io_sbuhX_entry
_cbw17:
	movq %rax,%rbx
	addq $32,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbw13:
	movq $32,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbw06, .-_cbw06


==================== Asm code ====================
2018-03-16 16:06:28.884270806 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw06_info:
	.quad	_cbw06
	.quad	3
	.quad	4629981896208547870
	.quad	SbuCr_srt+328


==================== Asm code ====================
2018-03-16 16:06:28.886638792 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetFileSize_closure
.type GHC.IO.Handle.hSetFileSize_closure, @object
GHC.IO.Handle.hSetFileSize_closure:
	.quad	GHC.IO.Handle.hSetFileSize_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.88723979 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetFileSize_entry
.type GHC.IO.Handle.hSetFileSize_entry, @object
GHC.IO.Handle.hSetFileSize_entry:
_cbw3H:
	jmp GHC.IO.Handle.hSetFileSize1_entry
	.size GHC.IO.Handle.hSetFileSize_entry, .-GHC.IO.Handle.hSetFileSize_entry


==================== Asm code ====================
2018-03-16 16:06:28.887787786 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetFileSize_info
.type GHC.IO.Handle.hSetFileSize_info, @object
GHC.IO.Handle.hSetFileSize_info:
	.quad	GHC.IO.Handle.hSetFileSize_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SbuCr_srt+576


==================== Asm code ====================
2018-03-16 16:06:28.889399562 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hFileSize9_bytes
.type GHC.IO.Handle.hFileSize9_bytes, @object
GHC.IO.Handle.hFileSize9_bytes:
	.asciz "hFileSize"


==================== Asm code ====================
2018-03-16 16:06:28.892405682 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize8_closure
.type GHC.IO.Handle.hFileSize8_closure, @object
GHC.IO.Handle.hFileSize8_closure:
	.quad	GHC.IO.Handle.hFileSize8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.893741457 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFileSize8_entry
.type GHC.IO.Handle.hFileSize8_entry, @object
GHC.IO.Handle.hFileSize8_entry:
_cbw3V:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbw3W
_cbw3X:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbw3U
_cbw3T:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hFileSize9_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbw3W:
	jmp *-16(%r13)
_cbw3U:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hFileSize8_entry, .-GHC.IO.Handle.hFileSize8_entry


==================== Asm code ====================
2018-03-16 16:06:28.894419641 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize8_info
.type GHC.IO.Handle.hFileSize8_info, @object
GHC.IO.Handle.hFileSize8_info:
	.quad	GHC.IO.Handle.hFileSize8_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:28.896047075 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hFileSize7_bytes
.type GHC.IO.Handle.hFileSize7_bytes, @object
GHC.IO.Handle.hFileSize7_bytes:
	.asciz "not a regular file"


==================== Asm code ====================
2018-03-16 16:06:28.898551236 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize6_closure
.type GHC.IO.Handle.hFileSize6_closure, @object
GHC.IO.Handle.hFileSize6_closure:
	.quad	GHC.IO.Handle.hFileSize6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.899339311 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFileSize6_entry
.type GHC.IO.Handle.hFileSize6_entry, @object
GHC.IO.Handle.hFileSize6_entry:
_cbw4d:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbw4e
_cbw4f:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbw4c
_cbw4b:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hFileSize7_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbw4e:
	jmp *-16(%r13)
_cbw4c:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hFileSize6_entry, .-GHC.IO.Handle.hFileSize6_entry


==================== Asm code ====================
2018-03-16 16:06:28.900010092 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize6_info
.type GHC.IO.Handle.hFileSize6_info, @object
GHC.IO.Handle.hFileSize6_info:
	.quad	GHC.IO.Handle.hFileSize6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:28.901847739 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize5_closure
.type GHC.IO.Handle.hFileSize5_closure, @object
GHC.IO.Handle.hFileSize5_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.InappropriateType_closure+1
	.quad	GHC.IO.Handle.hFileSize8_closure
	.quad	GHC.IO.Handle.hFileSize6_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.904357406 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize4_closure
.type GHC.IO.Handle.hFileSize4_closure, @object
GHC.IO.Handle.hFileSize4_closure:
	.quad	GHC.IO.Handle.hFileSize4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.905183306 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFileSize4_entry
.type GHC.IO.Handle.hFileSize4_entry, @object
GHC.IO.Handle.hFileSize4_entry:
_cbw4v:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbw4w
_cbw4x:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbw4u
_cbw4t:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hFileSize5_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cbw4w:
	jmp *-16(%r13)
_cbw4u:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hFileSize4_entry, .-GHC.IO.Handle.hFileSize4_entry


==================== Asm code ====================
2018-03-16 16:06:28.905927897 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize4_info
.type GHC.IO.Handle.hFileSize4_info, @object
GHC.IO.Handle.hFileSize4_info:
	.quad	GHC.IO.Handle.hFileSize4_entry
	.quad	0
	.quad	12884901909
	.quad	SbuCr_srt+584


==================== Asm code ====================
2018-03-16 16:06:28.907623353 UTC

.section .data
.align 8
.align 1
sat_sbuie_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 16:06:28.909734859 UTC

.section .data
.align 8
.align 1
sat_sbuif_closure:
	.quad	:_con_info
	.quad	sat_sbuie_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.912187412 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize10_closure
.type GHC.IO.Handle.hFileSize10_closure, @object
GHC.IO.Handle.hFileSize10_closure:
	.quad	GHC.IO.Handle.hFileSize10_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.913066361 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFileSize10_entry
.type GHC.IO.Handle.hFileSize10_entry, @object
GHC.IO.Handle.hFileSize10_entry:
_cbw4O:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbw4P
_cbw4Q:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbw4N
_cbw4M:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq sat_sbuif_closure+2(%rip),%rsi
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_cbw4P:
	jmp *-16(%r13)
_cbw4N:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hFileSize10_entry, .-GHC.IO.Handle.hFileSize10_entry


==================== Asm code ====================
2018-03-16 16:06:28.913815537 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize10_info
.type GHC.IO.Handle.hFileSize10_info, @object
GHC.IO.Handle.hFileSize10_info:
	.quad	GHC.IO.Handle.hFileSize10_entry
	.quad	0
	.quad	4294967317
	.quad	SbuCr_srt+600


==================== Asm code ====================
2018-03-16 16:06:28.921154582 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize3_closure
.type GHC.IO.Handle.hFileSize3_closure, @object
GHC.IO.Handle.hFileSize3_closure:
	.quad	GHC.IO.Handle.hFileSize3_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.921825154 UTC

.section .data.rel.ro
.align 8
.align 1
ubw6B_srtd:
	.quad	SbuCr_srt+328
	.quad	38
	.quad	240522362881


==================== Asm code ====================
2018-03-16 16:06:28.92264365 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFileSize3_entry
.type GHC.IO.Handle.hFileSize3_entry, @object
GHC.IO.Handle.hFileSize3_entry:
_cbw57:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cbw58
_cbw59:
	leaq block_cbw54_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbw54
_cbw55:
	movq (%rbx),%rax
	jmp *(%rax)
_cbw58:
	leaq GHC.IO.Handle.hFileSize3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hFileSize3_entry, .-GHC.IO.Handle.hFileSize3_entry


==================== Asm code ====================
2018-03-16 16:06:28.923315645 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize3_info
.type GHC.IO.Handle.hFileSize3_info, @object
GHC.IO.Handle.hFileSize3_info:
	.quad	GHC.IO.Handle.hFileSize3_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934597
	.quad	ubw6B_srtd


==================== Asm code ====================
2018-03-16 16:06:28.923860229 UTC

.section .data.rel.ro
.align 8
.align 1
ubw6C_srtd:
	.quad	SbuCr_srt+328
	.quad	38
	.quad	206162624513


==================== Asm code ====================
2018-03-16 16:06:28.924581327 UTC

.section .text
.align 8
_cbw54:
_cbw54:
	leaq block_cbw5c_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 39(%rbx),%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	movq %rax,(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbw5c
_cbw5e:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbw54, .-_cbw54


==================== Asm code ====================
2018-03-16 16:06:28.925216261 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw54_info:
	.quad	_cbw54
	.quad	0
	.quad	-4294967266
	.quad	ubw6C_srtd


==================== Asm code ====================
2018-03-16 16:06:28.926317782 UTC

.section .data.rel.ro
.align 8
.align 1
ubw6D_srtd:
	.quad	SbuCr_srt+328
	.quad	38
	.quad	206162624513


==================== Asm code ====================
2018-03-16 16:06:28.927040285 UTC

.section .text
.align 8
_cbw5c:
_cbw5c:
	andl $7,%ebx
	cmpq $1,%rbx
	jne _ubw6p
_cbw6f:
	addq $40,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_closedHandle1_entry@gotpcrel(%rip)
_ubw6p:
	cmpq $2,%rbx
	jne _cbw5l
_cbw6j:
	addq $40,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry@gotpcrel(%rip)
_cbw5l:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbw5i_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbw5i
_cbw5m:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbw5c, .-_cbw5c


==================== Asm code ====================
2018-03-16 16:06:28.927716717 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw5c_info:
	.quad	_cbw5c
	.quad	4
	.quad	-4294967266
	.quad	ubw6D_srtd


==================== Asm code ====================
2018-03-16 16:06:28.928364514 UTC

.section .text
.align 8
_cbw5i:
_cbw5i:
	leaq block_cbw5s_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _cbw5s
_cbw5M:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbw5i, .-_cbw5i


==================== Asm code ====================
2018-03-16 16:06:28.929570565 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw5i_info:
	.quad	_cbw5i
	.quad	4
	.quad	12884901918
	.quad	SbuCr_srt+616


==================== Asm code ====================
2018-03-16 16:06:28.93034673 UTC

.section .text
.align 8
_cbw5s:
_cbw5s:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ubw6q
_cbw5X:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbw5V_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbw5V
_cbw5Y:
	movq (%rbx),%rax
	jmp *(%rax)
_ubw6q:
	addq $16,%rbp
	jmp _sbuiK
	.size _cbw5s, .-_cbw5s


==================== Asm code ====================
2018-03-16 16:06:28.930957919 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw5s_info:
	.quad	_cbw5s
	.quad	4
	.quad	12884901918
	.quad	SbuCr_srt+616


==================== Asm code ====================
2018-03-16 16:06:28.93168312 UTC

.section .text
.align 8
_cbw5V:
_cbw5V:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _ubw6r
_cbw68:
	movq 8(%rbp),%rax
	leaq block_cbw66_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.BufferedIO.flushWriteBuffer_entry@gotpcrel(%rip)
_ubw6r:
	addq $16,%rbp
	jmp _sbuiK
	.size _cbw5V, .-_cbw5V


==================== Asm code ====================
2018-03-16 16:06:28.932503622 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw5V_info:
	.quad	_cbw5V
	.quad	4
	.quad	12884901918
	.quad	SbuCr_srt+616


==================== Asm code ====================
2018-03-16 16:06:28.933532532 UTC

.section .text
.align 8
_cbw66:
_cbw66:
	movq 16(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $8,%rbp
	jmp _sbuiK
	.size _cbw66, .-_cbw66


==================== Asm code ====================
2018-03-16 16:06:28.934404736 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw66_info:
	.quad	_cbw66
	.quad	3
	.quad	12884901918
	.quad	SbuCr_srt+616


==================== Asm code ====================
2018-03-16 16:06:28.935306583 UTC

.section .text
.align 8
_sbuiK:
_sbuiK:
	movq 16(%rbp),%rax
	leaq block_cbw5x_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%r14
	movq (%rbp),%rax
	movq stg_ap_pv_info@gotpcrel(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	jmp *GHC.IO.Device.getSize_entry@gotpcrel(%rip)
	.size _sbuiK, .-_sbuiK


==================== Asm code ====================
2018-03-16 16:06:28.93641309 UTC

.section .text
.align 8
_cbw5x:
_cbw5x:
	leaq block_cbw5z_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hFileSize10_closure(%rip),%rsi
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.neqInteger#_entry@gotpcrel(%rip)
	.size _cbw5x, .-_cbw5x


==================== Asm code ====================
2018-03-16 16:06:28.937337909 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw5x_info:
	.quad	_cbw5x
	.quad	0
	.quad	12884901918
	.quad	SbuCr_srt+616


==================== Asm code ====================
2018-03-16 16:06:28.938045549 UTC

.section .text
.align 8
_cbw5z:
_cbw5z:
	cmpq $1,%rbx
	je _cbw5L
_cbw5H:
	leaq GHC.IO.Handle.hFileSize4_closure(%rip),%rbx
	addq $16,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_cbw5L:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbw5z, .-_cbw5z


==================== Asm code ====================
2018-03-16 16:06:28.938657131 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw5z_info:
	.quad	_cbw5z
	.quad	1
	.quad	4294967326
	.quad	SbuCr_srt+616


==================== Asm code ====================
2018-03-16 16:06:28.94188059 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize2_closure
.type GHC.IO.Handle.hFileSize2_closure, @object
GHC.IO.Handle.hFileSize2_closure:
	.quad	GHC.IO.Handle.hFileSize2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.942647049 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFileSize2_entry
.type GHC.IO.Handle.hFileSize2_entry, @object
GHC.IO.Handle.hFileSize2_entry:
_cbw7H:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbw7I
_cbw7J:
	leaq block_cbw7E_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.hFileSize3_entry
_cbw7I:
	leaq GHC.IO.Handle.hFileSize2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hFileSize2_entry, .-GHC.IO.Handle.hFileSize2_entry


==================== Asm code ====================
2018-03-16 16:06:28.943317164 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize2_info
.type GHC.IO.Handle.hFileSize2_info, @object
GHC.IO.Handle.hFileSize2_info:
	.quad	GHC.IO.Handle.hFileSize2_entry
	.quad	0
	.quad	38654705678
	.quad	8589934597
	.quad	SbuCr_srt+608


==================== Asm code ====================
2018-03-16 16:06:28.94407014 UTC

.section .text
.align 8
_cbw7E:
_cbw7E:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbw7M
_cbw7L:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbw7M:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbw7E, .-_cbw7E


==================== Asm code ====================
2018-03-16 16:06:28.944719018 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw7E_info:
	.quad	_cbw7E
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.952870359 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize1_closure
.type GHC.IO.Handle.hFileSize1_closure, @object
GHC.IO.Handle.hFileSize1_closure:
	.quad	GHC.IO.Handle.hFileSize1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.953726023 UTC

.section .text
.align 8
io_sbujk_entry:
_cbw8k:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbw8o
_cbw8p:
	leaq block_cbw8f_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	leaq GHC.IO.Handle.hFileSize2_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	leaq GHC.IO.Handle.hFileSize8_closure(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbw8o:
	jmp *-8(%r13)
	.size io_sbujk_entry, .-io_sbujk_entry


==================== Asm code ====================
2018-03-16 16:06:28.954405459 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbujk_info:
	.quad	io_sbujk_entry
	.quad	2
	.quad	54043199823413259
	.quad	4294967299
	.quad	SbuCr_srt+456


==================== Asm code ====================
2018-03-16 16:06:28.955056939 UTC

.section .text
.align 8
_cbw8f:
_cbw8f:
	leaq block_cbw8h_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbw8h
_cbw8i:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbw8f, .-_cbw8f


==================== Asm code ====================
2018-03-16 16:06:28.955619537 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw8f_info:
	.quad	_cbw8f
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.956297527 UTC

.section .text
.align 8
_cbw8h:
_cbw8h:
	leaq block_cbw8n_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbw8h, .-_cbw8h


==================== Asm code ====================
2018-03-16 16:06:28.956889481 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw8h_info:
	.quad	_cbw8h
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.9580463 UTC

.section .text
.align 8
_cbw8n:
_cbw8n:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbw8n, .-_cbw8n


==================== Asm code ====================
2018-03-16 16:06:28.958608365 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw8n_info:
	.quad	_cbw8n
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.95932783 UTC

.section .text
.align 8
io_sbujA_entry:
_cbw8J:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbw8N
_cbw8O:
	leaq block_cbw8E_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	leaq GHC.IO.Handle.hFileSize2_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	leaq GHC.IO.Handle.hFileSize8_closure(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbw8N:
	jmp *-8(%r13)
	.size io_sbujA_entry, .-io_sbujA_entry


==================== Asm code ====================
2018-03-16 16:06:28.960009947 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbujA_info:
	.quad	io_sbujA_entry
	.quad	2
	.quad	54043199823413259
	.quad	4294967299
	.quad	SbuCr_srt+456


==================== Asm code ====================
2018-03-16 16:06:28.960649193 UTC

.section .text
.align 8
_cbw8E:
_cbw8E:
	leaq block_cbw8G_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbw8G
_cbw8H:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbw8E, .-_cbw8E


==================== Asm code ====================
2018-03-16 16:06:28.961325204 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw8E_info:
	.quad	_cbw8E
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.962010914 UTC

.section .text
.align 8
_cbw8G:
_cbw8G:
	leaq block_cbw8M_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbw8G, .-_cbw8G


==================== Asm code ====================
2018-03-16 16:06:28.962632331 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw8G_info:
	.quad	_cbw8G
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.963229868 UTC

.section .text
.align 8
_cbw8M:
_cbw8M:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbw8M, .-_cbw8M


==================== Asm code ====================
2018-03-16 16:06:28.963791016 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw8M_info:
	.quad	_cbw8M
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:28.964527893 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFileSize1_entry
.type GHC.IO.Handle.hFileSize1_entry, @object
GHC.IO.Handle.hFileSize1_entry:
_cbw8Y:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbw8Z
_cbw90:
	leaq block_cbw83_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbw83
_cbw84:
	movq (%rbx),%rax
	jmp *(%rax)
_cbw8Z:
	leaq GHC.IO.Handle.hFileSize1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hFileSize1_entry, .-GHC.IO.Handle.hFileSize1_entry


==================== Asm code ====================
2018-03-16 16:06:28.965202052 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize1_info
.type GHC.IO.Handle.hFileSize1_info, @object
GHC.IO.Handle.hFileSize1_info:
	.quad	GHC.IO.Handle.hFileSize1_entry
	.quad	0
	.quad	126100793861341198
	.quad	8589934597
	.quad	SbuCr_srt+456


==================== Asm code ====================
2018-03-16 16:06:28.966039504 UTC

.section .text
.align 8
_cbw83:
_cbw83:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbw8V
_cbw8W:
	leaq block_cbw8x_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_cbw8V:
	leaq block_cbw88_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _cbw83, .-_cbw83


==================== Asm code ====================
2018-03-16 16:06:28.966676443 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw83_info:
	.quad	_cbw83
	.quad	0
	.quad	54043199823413278
	.quad	SbuCr_srt+456


==================== Asm code ====================
2018-03-16 16:06:28.967478527 UTC

.section .text
.align 8
_cbw88:
_cbw88:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbw94
_cbw93:
	leaq io_sbujk_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbw98
_cbw97:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbujk_entry
_cbw98:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbw94:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbw88, .-_cbw88


==================== Asm code ====================
2018-03-16 16:06:28.968791187 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw88_info:
	.quad	_cbw88
	.quad	2
	.quad	54043199823413278
	.quad	SbuCr_srt+456


==================== Asm code ====================
2018-03-16 16:06:28.969853376 UTC

.section .text
.align 8
_cbw8x:
_cbw8x:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbw9c
_cbw9b:
	leaq io_sbujA_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbw9g
_cbw9f:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbujA_entry
_cbw9g:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbw9c:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbw8x, .-_cbw8x


==================== Asm code ====================
2018-03-16 16:06:28.970495057 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbw8x_info:
	.quad	_cbw8x
	.quad	2
	.quad	54043199823413278
	.quad	SbuCr_srt+456


==================== Asm code ====================
2018-03-16 16:06:28.972711155 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize_closure
.type GHC.IO.Handle.hFileSize_closure, @object
GHC.IO.Handle.hFileSize_closure:
	.quad	GHC.IO.Handle.hFileSize_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:28.973564506 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hFileSize_entry
.type GHC.IO.Handle.hFileSize_entry, @object
GHC.IO.Handle.hFileSize_entry:
_cbwao:
	jmp GHC.IO.Handle.hFileSize1_entry
	.size GHC.IO.Handle.hFileSize_entry, .-GHC.IO.Handle.hFileSize_entry


==================== Asm code ====================
2018-03-16 16:06:28.974377663 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hFileSize_info
.type GHC.IO.Handle.hFileSize_info, @object
GHC.IO.Handle.hFileSize_info:
	.quad	GHC.IO.Handle.hFileSize_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbuCr_srt+648


==================== Asm code ====================
2018-03-16 16:06:28.976978627 UTC

.section .data
.align 8
.align 1
lvl21_rbnX3_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.IO.Handle.Internals.handleFinalizer1_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.000381728 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hDuplicateTo1_closure
.type GHC.IO.Handle.hDuplicateTo1_closure, @object
GHC.IO.Handle.hDuplicateTo1_closure:
	.quad	GHC.IO.Handle.hDuplicateTo1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.001211955 UTC

.section .text
.align 8
sat_sbuk4_entry:
_cbwaZ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwb0
_cbwb1:
	leaq block_cbwaW_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%r9
	movq 22(%rbx),%r8
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 6(%rbx),%rsi
	movq %r14,%rax
	movq 14(%rbx),%r14
	leaq lvl21_rbnX3_closure+2(%rip),%rbx
	movq %rbx,-24(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp dupHandleTo_rbnWN_entry
_cbwb0:
	jmp *-8(%r13)
	.size sat_sbuk4_entry, .-sat_sbuk4_entry


==================== Asm code ====================
2018-03-16 16:06:29.001910675 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbuk4_info:
	.quad	sat_sbuk4_entry
	.quad	3
	.quad	12884901896
	.quad	8589934597
	.quad	SbuCr_srt+656


==================== Asm code ====================
2018-03-16 16:06:29.002617895 UTC

.section .text
.align 8
_cbwaW:
_cbwaW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwb4
_cbwb3:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwb4:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwaW, .-_cbwaW


==================== Asm code ====================
2018-03-16 16:06:29.00324237 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwaW_info:
	.quad	_cbwaW
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.003789712 UTC

.section .data.rel.ro
.align 8
.align 1
ubwcR_srtd:
	.quad	SbuCr_srt+176
	.quad	64
	.quad	-1152921504606846975


==================== Asm code ====================
2018-03-16 16:06:29.004505333 UTC

.section .text
.align 8
sat_sbuk5_entry:
_cbwb5:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwb6
_cbwb7:
	leaq block_cbwaP_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%rcx
	movq %rcx,-32(%rbp)
	movq 14(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq 22(%rbx),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp *GHC.IO.Handle.Internals.hClose_help1_entry@gotpcrel(%rip)
_cbwb6:
	jmp *-8(%r13)
	.size sat_sbuk5_entry, .-sat_sbuk5_entry


==================== Asm code ====================
2018-03-16 16:06:29.005146362 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbuk5_info:
	.quad	sat_sbuk5_entry
	.quad	3
	.quad	-4294967288
	.quad	8589934597
	.quad	ubwcR_srtd


==================== Asm code ====================
2018-03-16 16:06:29.005788035 UTC

.section .data.rel.ro
.align 8
.align 1
ubwcS_srtd:
	.quad	SbuCr_srt+176
	.quad	64
	.quad	-5764607523034234879


==================== Asm code ====================
2018-03-16 16:06:29.006548769 UTC

.section .text
.align 8
_cbwaP:
_cbwaP:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbwba
_cbwb9:
	leaq sat_sbuk4_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -22(%r12),%r8
	movq 24(%rbp),%rdi
	movq %rax,%rsi
	leaq lvl1_rbnWC_closure(%rip),%r14
	addq $40,%rbp
	jmp *GHC.IO.Handle.Internals.$wwithHandle'_entry@gotpcrel(%rip)
_cbwba:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwaP, .-_cbwaP


==================== Asm code ====================
2018-03-16 16:06:29.00725018 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwaP_info:
	.quad	_cbwaP
	.quad	4
	.quad	-4294967266
	.quad	ubwcS_srtd


==================== Asm code ====================
2018-03-16 16:06:29.008033905 UTC

.section .text
.align 8
sat_sbukt_entry:
_cbwby:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwbz
_cbwbA:
	leaq block_cbwbv_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%r9
	movq 22(%rbx),%r8
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 6(%rbx),%rsi
	movq %r14,%rax
	movq 14(%rbx),%r14
	leaq lvl21_rbnX3_closure+2(%rip),%rbx
	movq %rbx,-24(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp dupHandleTo_rbnWN_entry
_cbwbz:
	jmp *-8(%r13)
	.size sat_sbukt_entry, .-sat_sbukt_entry


==================== Asm code ====================
2018-03-16 16:06:29.008721194 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbukt_info:
	.quad	sat_sbukt_entry
	.quad	3
	.quad	12884901896
	.quad	8589934597
	.quad	SbuCr_srt+656


==================== Asm code ====================
2018-03-16 16:06:29.009539813 UTC

.section .text
.align 8
_cbwbv:
_cbwbv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwbD
_cbwbC:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwbD:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwbv, .-_cbwbv


==================== Asm code ====================
2018-03-16 16:06:29.010167022 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwbv_info:
	.quad	_cbwbv
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.010696576 UTC

.section .data.rel.ro
.align 8
.align 1
ubwcT_srtd:
	.quad	SbuCr_srt+176
	.quad	64
	.quad	-1152921504606846975


==================== Asm code ====================
2018-03-16 16:06:29.011364398 UTC

.section .text
.align 8
sat_sbuku_entry:
_cbwbE:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwbF
_cbwbG:
	leaq block_cbwbo_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%rcx
	movq %rcx,-32(%rbp)
	movq 14(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq 22(%rbx),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp *GHC.IO.Handle.Internals.hClose_help1_entry@gotpcrel(%rip)
_cbwbF:
	jmp *-8(%r13)
	.size sat_sbuku_entry, .-sat_sbuku_entry


==================== Asm code ====================
2018-03-16 16:06:29.011988401 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbuku_info:
	.quad	sat_sbuku_entry
	.quad	3
	.quad	-4294967288
	.quad	8589934597
	.quad	ubwcT_srtd


==================== Asm code ====================
2018-03-16 16:06:29.012554457 UTC

.section .data.rel.ro
.align 8
.align 1
ubwcU_srtd:
	.quad	SbuCr_srt+176
	.quad	64
	.quad	-5764607523034234879


==================== Asm code ====================
2018-03-16 16:06:29.013389014 UTC

.section .text
.align 8
_cbwbo:
_cbwbo:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbwbJ
_cbwbI:
	leaq sat_sbukt_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -22(%r12),%r8
	movq 24(%rbp),%rdi
	movq %rax,%rsi
	leaq lvl1_rbnWC_closure(%rip),%r14
	addq $40,%rbp
	jmp *GHC.IO.Handle.Internals.$wwithHandle'_entry@gotpcrel(%rip)
_cbwbJ:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwbo, .-_cbwbo


==================== Asm code ====================
2018-03-16 16:06:29.014072566 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwbo_info:
	.quad	_cbwbo
	.quad	4
	.quad	-4294967266
	.quad	ubwcU_srtd


==================== Asm code ====================
2018-03-16 16:06:29.014775853 UTC

.section .text
.align 8
sat_sbukL_entry:
_cbwc3:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwc4
_cbwc5:
	leaq block_cbwc0_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%r9
	movq 30(%rbx),%r8
	movq 22(%rbx),%rdi
	movq 6(%rbx),%rsi
	movq %r14,%rax
	movq 14(%rbx),%r14
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rbx,-24(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp dupHandleTo_rbnWN_entry
_cbwc4:
	jmp *-8(%r13)
	.size sat_sbukL_entry, .-sat_sbukL_entry


==================== Asm code ====================
2018-03-16 16:06:29.015457147 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbukL_info:
	.quad	sat_sbukL_entry
	.quad	4
	.quad	4294967304
	.quad	8589934597
	.quad	SbuCr_srt+664


==================== Asm code ====================
2018-03-16 16:06:29.016215412 UTC

.section .text
.align 8
_cbwc0:
_cbwc0:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwc8
_cbwc7:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwc8:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwc0, .-_cbwc0


==================== Asm code ====================
2018-03-16 16:06:29.016835625 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwc0_info:
	.quad	_cbwc0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.017403662 UTC

.section .data.rel.ro
.align 8
.align 1
ubwcV_srtd:
	.quad	SbuCr_srt+176
	.quad	64
	.quad	-2305843009213693951


==================== Asm code ====================
2018-03-16 16:06:29.018159333 UTC

.section .text
.align 8
sat_sbukM_entry:
_cbwc9:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwca
_cbwcb:
	leaq block_cbwbT_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%rcx
	movq %rcx,-40(%rbp)
	movq 14(%rbx),%rcx
	movq %rcx,-32(%rbp)
	movq 22(%rbx),%rcx
	movq %rcx,-24(%rbp)
	movq 30(%rbx),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-48,%rbp
	jmp *GHC.IO.Handle.Internals.hClose_help1_entry@gotpcrel(%rip)
_cbwca:
	jmp *-8(%r13)
	.size sat_sbukM_entry, .-sat_sbukM_entry


==================== Asm code ====================
2018-03-16 16:06:29.018797602 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbukM_info:
	.quad	sat_sbukM_entry
	.quad	4
	.quad	-4294967288
	.quad	8589934597
	.quad	ubwcV_srtd


==================== Asm code ====================
2018-03-16 16:06:29.019331115 UTC

.section .data.rel.ro
.align 8
.align 1
ubwcW_srtd:
	.quad	SbuCr_srt+176
	.quad	64
	.quad	-6917529027641081855


==================== Asm code ====================
2018-03-16 16:06:29.020786075 UTC

.section .text
.align 8
_cbwbT:
_cbwbT:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbwce
_cbwcd:
	leaq sat_sbukL_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -30(%r12),%r8
	movq 24(%rbp),%rdi
	movq %rax,%rsi
	leaq lvl1_rbnWC_closure(%rip),%r14
	addq $48,%rbp
	jmp *GHC.IO.Handle.Internals.$wwithHandle'_entry@gotpcrel(%rip)
_cbwce:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwbT, .-_cbwbT


==================== Asm code ====================
2018-03-16 16:06:29.021813309 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwbT_info:
	.quad	_cbwbT
	.quad	5
	.quad	-4294967266
	.quad	ubwcW_srtd


==================== Asm code ====================
2018-03-16 16:06:29.02236933 UTC

.section .data.rel.ro
.align 8
.align 1
ubwcX_srtd:
	.quad	SbuCr_srt+176
	.quad	66
	.quad	-1152921504606846971
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:29.023106339 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hDuplicateTo1_entry
.type GHC.IO.Handle.hDuplicateTo1_entry, @object
GHC.IO.Handle.hDuplicateTo1_entry:
_cbwcj:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwck
_cbwcl:
	leaq block_cbwaA_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbwaA
_cbwaB:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwck:
	leaq GHC.IO.Handle.hDuplicateTo1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hDuplicateTo1_entry, .-GHC.IO.Handle.hDuplicateTo1_entry


==================== Asm code ====================
2018-03-16 16:06:29.023752 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hDuplicateTo1_info
.type GHC.IO.Handle.hDuplicateTo1_info, @object
GHC.IO.Handle.hDuplicateTo1_info:
	.quad	GHC.IO.Handle.hDuplicateTo1_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901903
	.quad	ubwcX_srtd


==================== Asm code ====================
2018-03-16 16:06:29.024259705 UTC

.section .data.rel.ro
.align 8
.align 1
ubwcY_srtd:
	.quad	SbuCr_srt+176
	.quad	65
	.quad	-1152921504606846971
	.quad	1


==================== Asm code ====================
2018-03-16 16:06:29.025097352 UTC

.section .text
.align 8
_cbwaA:
_cbwaA:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbwcg
_cbwch:
	leaq block_cbwbd_info(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq %rbx,%rcx
	movq 6(%rbx),%rdx
	movq 14(%rbx),%rsi
	movq 22(%rbx),%rbx
	movq %rbx,%rdi
	movq %rax,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbwbd
_cbwbe:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwcg:
	leaq block_cbwaF_info(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rbx
	movq %rbx,%rsi
	movq %rax,%rbx
	movq %rsi,-8(%rbp)
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbwaF
_cbwaG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwaA, .-_cbwaA


==================== Asm code ====================
2018-03-16 16:06:29.025939782 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwaA_info:
	.quad	_cbwaA
	.quad	1
	.quad	-4294967266
	.quad	ubwcY_srtd


==================== Asm code ====================
2018-03-16 16:06:29.026506892 UTC

.section .data.rel.ro
.align 8
.align 1
ubwcZ_srtd:
	.quad	SbuCr_srt+176
	.quad	65
	.quad	-1152921504606846971
	.quad	1


==================== Asm code ====================
2018-03-16 16:06:29.027304 UTC

.section .text
.align 8
_cbwaF:
_cbwaF:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbwco
_ubwcL:
	addq $24,%rbp
	jmp _cbwcA
_cbwcr:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbwco:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbwcr
_cbwcq:
	movq 15(%rbx),%rax
	leaq sat_sbuk5_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,(%r12)
	leaq -22(%r12),%r8
	movq %rax,%rdi
	movq %rbx,%rsi
	leaq lvl1_rbnWC_closure(%rip),%r14
	addq $32,%rbp
	jmp *GHC.IO.Handle.Internals.$wwithHandle__'_entry@gotpcrel(%rip)
	.size _cbwaF, .-_cbwaF


==================== Asm code ====================
2018-03-16 16:06:29.027949311 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwaF_info:
	.quad	_cbwaF
	.quad	3
	.quad	-4294967266
	.quad	ubwcZ_srtd


==================== Asm code ====================
2018-03-16 16:06:29.028501663 UTC

.section .data.rel.ro
.align 8
.align 1
ubwd0_srtd:
	.quad	SbuCr_srt+176
	.quad	65
	.quad	-1152921504606846971
	.quad	1


==================== Asm code ====================
2018-03-16 16:06:29.029316294 UTC

.section .text
.align 8
_cbwbd:
_cbwbd:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubwcK
_cbwcB:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbwcE
_cbwcD:
	movq 14(%rbx),%rax
	movq 22(%rbx),%rcx
	leaq sat_sbuku_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq 32(%rbp),%rdx
	movq %rdx,-16(%r12)
	movq 24(%rbp),%rdx
	movq %rdx,-8(%r12)
	movq 16(%rbp),%rdx
	movq %rdx,(%r12)
	leaq block_cbwbK_info(%rip),%rdx
	movq %rdx,-16(%rbp)
	leaq -22(%r12),%r8
	movq %rcx,%rdi
	movq %rbx,%rsi
	leaq lvl1_rbnWC_closure(%rip),%r14
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wwithHandle__'_entry@gotpcrel(%rip)
_ubwcK:
	addq $32,%rbp
	jmp _cbwcA
_cbwcE:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwbd, .-_cbwbd


==================== Asm code ====================
2018-03-16 16:06:29.03009037 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwbd_info:
	.quad	_cbwbd
	.quad	4
	.quad	-4294967266
	.quad	ubwd0_srtd


==================== Asm code ====================
2018-03-16 16:06:29.030698116 UTC

.section .text
.align 8
_cbwcA:
_cbwcA:
	movq (%rbp),%r14
	addq $8,%rbp
	jmp ioe_dupHandlesNotCompatible_rbnWF_entry
	.size _cbwcA, .-_cbwcA


==================== Asm code ====================
2018-03-16 16:06:29.031241996 UTC

.section .data.rel.ro
.align 8
.align 1
ubwd1_srtd:
	.quad	SbuCr_srt+176
	.quad	65
	.quad	-2305843009213693951
	.quad	1


==================== Asm code ====================
2018-03-16 16:06:29.032001297 UTC

.section .text
.align 8
_cbwbK:
_cbwbK:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbwcH
_cbwcG:
	movq GHC.MVar.MVar_con_info@gotpcrel(%rip),%rax
	movq %rax,-64(%r12)
	movq 32(%rbp),%rax
	movq %rax,-56(%r12)
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -63(%r12),%rax
	movq %rax,-40(%r12)
	leaq sat_sbukM_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 48(%rbp),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	leaq -46(%r12),%rax
	movq %rax,(%r12)
	leaq -30(%r12),%r8
	movq 8(%rbp),%rdi
	movq 16(%rbp),%rsi
	leaq lvl1_rbnWC_closure(%rip),%r14
	addq $56,%rbp
	jmp *GHC.IO.Handle.Internals.$wwithHandle__'_entry@gotpcrel(%rip)
_cbwcH:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwbK, .-_cbwbK


==================== Asm code ====================
2018-03-16 16:06:29.032701454 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwbK_info:
	.quad	_cbwbK
	.quad	6
	.quad	-4294967266
	.quad	ubwd1_srtd


==================== Asm code ====================
2018-03-16 16:06:29.034992223 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hDuplicateTo_closure
.type GHC.IO.Handle.hDuplicateTo_closure, @object
GHC.IO.Handle.hDuplicateTo_closure:
	.quad	GHC.IO.Handle.hDuplicateTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.035583524 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hDuplicateTo_entry
.type GHC.IO.Handle.hDuplicateTo_entry, @object
GHC.IO.Handle.hDuplicateTo_entry:
_cbwfp:
	jmp GHC.IO.Handle.hDuplicateTo1_entry
	.size GHC.IO.Handle.hDuplicateTo_entry, .-GHC.IO.Handle.hDuplicateTo_entry


==================== Asm code ====================
2018-03-16 16:06:29.036133241 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hDuplicateTo_info
.type GHC.IO.Handle.hDuplicateTo_info, @object
GHC.IO.Handle.hDuplicateTo_info:
	.quad	GHC.IO.Handle.hDuplicateTo_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SbuCr_srt+696


==================== Asm code ====================
2018-03-16 16:06:29.038036578 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl22_rbnX4_bytes:
	.asciz "hDuplicate"


==================== Asm code ====================
2018-03-16 16:06:29.040450567 UTC

.section .data
.align 8
.align 1
lvl23_rbnX5_closure:
	.quad	lvl23_rbnX5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.041342738 UTC

.section .text
.align 8
lvl23_rbnX5_entry:
_cbwfD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwfE
_cbwfF:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbwfC
_cbwfB:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl22_rbnX4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbwfE:
	jmp *-16(%r13)
_cbwfC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl23_rbnX5_entry, .-lvl23_rbnX5_entry


==================== Asm code ====================
2018-03-16 16:06:29.042046743 UTC

.section .data.rel.ro
.align 8
.align 1
lvl23_rbnX5_info:
	.quad	lvl23_rbnX5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:29.04365852 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl24_rbnX6_bytes:
	.asciz "Pattern match failure in do expression at GHC/IO/Handle.hs:626:3-33"


==================== Asm code ====================
2018-03-16 16:06:29.046111919 UTC

.section .data
.align 8
.align 1
lvl25_rbnX7_closure:
	.quad	lvl25_rbnX7_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.046796745 UTC

.section .text
.align 8
lvl25_rbnX7_entry:
_cbwfV:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwfW
_cbwfX:
	leaq block_cbwfT_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq lvl24_rbnX6_bytes(%rip),%r14
	addq $-8,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbwfW:
	leaq lvl25_rbnX7_closure(%rip),%rbx
	jmp *-8(%r13)
	.size lvl25_rbnX7_entry, .-lvl25_rbnX7_entry


==================== Asm code ====================
2018-03-16 16:06:29.047385662 UTC

.section .data.rel.ro
.align 8
.align 1
lvl25_rbnX7_info:
	.quad	lvl25_rbnX7_entry
	.quad	0
	.quad	12884901902
	.quad	4294967299
	.quad	SbuCr_srt+704


==================== Asm code ====================
2018-03-16 16:06:29.048011036 UTC

.section .text
.align 8
_cbwfT:
_cbwfT:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.IO.failIO1_entry@gotpcrel(%rip)
	.size _cbwfT, .-_cbwfT


==================== Asm code ====================
2018-03-16 16:06:29.048551168 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwfT_info:
	.quad	_cbwfT
	.quad	0
	.quad	4294967326
	.quad	SbuCr_srt+712


==================== Asm code ====================
2018-03-16 16:06:29.050686275 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl26_rbnX8_bytes:
	.asciz "Pattern match failure in do expression at GHC/IO/Handle.hs:623:3-35"


==================== Asm code ====================
2018-03-16 16:06:29.053076622 UTC

.section .data
.align 8
.align 1
lvl27_rbnX9_closure:
	.quad	lvl27_rbnX9_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.054241046 UTC

.section .text
.align 8
lvl27_rbnX9_entry:
_cbwgh:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwgi
_cbwgj:
	leaq block_cbwgf_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq lvl26_rbnX8_bytes(%rip),%r14
	addq $-8,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbwgi:
	leaq lvl27_rbnX9_closure(%rip),%rbx
	jmp *-8(%r13)
	.size lvl27_rbnX9_entry, .-lvl27_rbnX9_entry


==================== Asm code ====================
2018-03-16 16:06:29.054912911 UTC

.section .data.rel.ro
.align 8
.align 1
lvl27_rbnX9_info:
	.quad	lvl27_rbnX9_entry
	.quad	0
	.quad	12884901902
	.quad	4294967299
	.quad	SbuCr_srt+712


==================== Asm code ====================
2018-03-16 16:06:29.055518113 UTC

.section .text
.align 8
_cbwgf:
_cbwgf:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.IO.failIO1_entry@gotpcrel(%rip)
	.size _cbwgf, .-_cbwgf


==================== Asm code ====================
2018-03-16 16:06:29.05608852 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwgf_info:
	.quad	_cbwgf
	.quad	0
	.quad	4294967326
	.quad	SbuCr_srt+712


==================== Asm code ====================
2018-03-16 16:06:29.073642153 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hDuplicate1_closure
.type GHC.IO.Handle.hDuplicate1_closure, @object
GHC.IO.Handle.hDuplicate1_closure:
	.quad	GHC.IO.Handle.hDuplicate1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.074218763 UTC

.section .data.rel.ro
.align 8
.align 1
ubwjd_srtd:
	.quad	SbuCr_srt+96
	.quad	71
	.quad	32769
	.quad	64


==================== Asm code ====================
2018-03-16 16:06:29.075029739 UTC

.section .text
.align 8
sat_sbulp_entry:
_cbwgN:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwgX
_cbwgY:
	leaq block_cbwgK_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbwgK
_cbwgL:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwgX:
	jmp *-8(%r13)
	.size sat_sbulp_entry, .-sat_sbulp_entry


==================== Asm code ====================
2018-03-16 16:06:29.075648838 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbulp_info:
	.quad	sat_sbulp_entry
	.quad	1
	.quad	-4294967287
	.quad	8589934597
	.quad	ubwjd_srtd


==================== Asm code ====================
2018-03-16 16:06:29.076201691 UTC

.section .data.rel.ro
.align 8
.align 1
ubwje_srtd:
	.quad	SbuCr_srt+96
	.quad	71
	.quad	32769
	.quad	64


==================== Asm code ====================
2018-03-16 16:06:29.076901424 UTC

.section .text
.align 8
_cbwgK:
_cbwgK:
	leaq block_cbwgQ_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rbx,%r14
	movq 7(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 23(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-40,%rbp
	jmp *GHC.IO.Handle.Internals.flushBuffer1_entry@gotpcrel(%rip)
	.size _cbwgK, .-_cbwgK


==================== Asm code ====================
2018-03-16 16:06:29.07752313 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwgK_info:
	.quad	_cbwgK
	.quad	1
	.quad	-4294967266
	.quad	ubwje_srtd


==================== Asm code ====================
2018-03-16 16:06:29.078023935 UTC

.section .data.rel.ro
.align 8
.align 1
ubwjf_srtd:
	.quad	SbuCr_srt+216
	.quad	56
	.quad	36028797018963969


==================== Asm code ====================
2018-03-16 16:06:29.078692 UTC

.section .text
.align 8
_cbwgQ:
_cbwgQ:
	leaq block_cbwgS_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_pv_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Device.dup_entry@gotpcrel(%rip)
	.size _cbwgQ, .-_cbwgQ


==================== Asm code ====================
2018-03-16 16:06:29.079270233 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwgQ_info:
	.quad	_cbwgQ
	.quad	6
	.quad	-4294967266
	.quad	ubwjf_srtd


==================== Asm code ====================
2018-03-16 16:06:29.079823308 UTC

.section .data.rel.ro
.align 8
.align 1
ubwjg_srtd:
	.quad	SbuCr_srt+216
	.quad	56
	.quad	36028797018963969


==================== Asm code ====================
2018-03-16 16:06:29.080531895 UTC

.section .text
.align 8
_cbwgS:
_cbwgS:
	leaq block_cbwgU_info(%rip),%rax
	movq %rax,32(%rbp)
	movq 48(%rbp),%r9
	movq %rbx,%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,8(%rbp)
	movq 40(%rbp),%rax
	movq %rax,16(%rbp)
	leaq lvl21_rbnX3_closure+2(%rip),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp dupHandle__rbnWK_entry
	.size _cbwgS, .-_cbwgS


==================== Asm code ====================
2018-03-16 16:06:29.081196783 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwgS_info:
	.quad	_cbwgS
	.quad	518
	.quad	-4294967266
	.quad	ubwjg_srtd


==================== Asm code ====================
2018-03-16 16:06:29.082058833 UTC

.section .text
.align 8
_cbwgU:
_cbwgU:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwh4
_cbwh3:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwh4:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwgU, .-_cbwgU


==================== Asm code ====================
2018-03-16 16:06:29.082685359 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwgU_info:
	.quad	_cbwgU
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.083260584 UTC

.section .data.rel.ro
.align 8
.align 1
ubwjh_srtd:
	.quad	SbuCr_srt+96
	.quad	71
	.quad	32769
	.quad	64


==================== Asm code ====================
2018-03-16 16:06:29.083970531 UTC

.section .text
.align 8
sat_sbulW_entry:
_cbwhg:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwhq
_cbwhr:
	leaq block_cbwhd_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbwhd
_cbwhe:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwhq:
	jmp *-8(%r13)
	.size sat_sbulW_entry, .-sat_sbulW_entry


==================== Asm code ====================
2018-03-16 16:06:29.084587179 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbulW_info:
	.quad	sat_sbulW_entry
	.quad	1
	.quad	-4294967287
	.quad	8589934597
	.quad	ubwjh_srtd


==================== Asm code ====================
2018-03-16 16:06:29.085149549 UTC

.section .data.rel.ro
.align 8
.align 1
ubwji_srtd:
	.quad	SbuCr_srt+96
	.quad	71
	.quad	32769
	.quad	64


==================== Asm code ====================
2018-03-16 16:06:29.08587308 UTC

.section .text
.align 8
_cbwhd:
_cbwhd:
	leaq block_cbwhj_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rbx,%r14
	movq 7(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 23(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-40,%rbp
	jmp *GHC.IO.Handle.Internals.flushBuffer1_entry@gotpcrel(%rip)
	.size _cbwhd, .-_cbwhd


==================== Asm code ====================
2018-03-16 16:06:29.086491647 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwhd_info:
	.quad	_cbwhd
	.quad	1
	.quad	-4294967266
	.quad	ubwji_srtd


==================== Asm code ====================
2018-03-16 16:06:29.087037198 UTC

.section .data.rel.ro
.align 8
.align 1
ubwjj_srtd:
	.quad	SbuCr_srt+216
	.quad	56
	.quad	36028797018963969


==================== Asm code ====================
2018-03-16 16:06:29.08766118 UTC

.section .text
.align 8
_cbwhj:
_cbwhj:
	leaq block_cbwhl_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_pv_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Device.dup_entry@gotpcrel(%rip)
	.size _cbwhj, .-_cbwhj


==================== Asm code ====================
2018-03-16 16:06:29.088235476 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwhj_info:
	.quad	_cbwhj
	.quad	6
	.quad	-4294967266
	.quad	ubwjj_srtd


==================== Asm code ====================
2018-03-16 16:06:29.088735412 UTC

.section .data.rel.ro
.align 8
.align 1
ubwjk_srtd:
	.quad	SbuCr_srt+216
	.quad	56
	.quad	36028797018963969


==================== Asm code ====================
2018-03-16 16:06:29.089441554 UTC

.section .text
.align 8
_cbwhl:
_cbwhl:
	leaq block_cbwhn_info(%rip),%rax
	movq %rax,32(%rbp)
	movq 48(%rbp),%r9
	movq %rbx,%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,8(%rbp)
	movq 40(%rbp),%rax
	movq %rax,16(%rbp)
	leaq lvl21_rbnX3_closure+2(%rip),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp dupHandle__rbnWK_entry
	.size _cbwhl, .-_cbwhl


==================== Asm code ====================
2018-03-16 16:06:29.090123657 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwhl_info:
	.quad	_cbwhl
	.quad	518
	.quad	-4294967266
	.quad	ubwjk_srtd


==================== Asm code ====================
2018-03-16 16:06:29.090827907 UTC

.section .text
.align 8
_cbwhn:
_cbwhn:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwhx
_cbwhw:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwhx:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwhn, .-_cbwhn


==================== Asm code ====================
2018-03-16 16:06:29.091438625 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwhn_info:
	.quad	_cbwhn
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.092180056 UTC

.section .text
.align 8
sat_sbumO_entry:
_cbwi2:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwi8
_cbwi9:
	leaq block_cbwhZ_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rax,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbwhZ
_cbwi0:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwi8:
	jmp *-8(%r13)
	.size sat_sbumO_entry, .-sat_sbumO_entry


==================== Asm code ====================
2018-03-16 16:06:29.092826891 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbumO_info:
	.quad	sat_sbumO_entry
	.quad	3
	.quad	4294967304
	.quad	8589934597
	.quad	SbuCr_srt+728


==================== Asm code ====================
2018-03-16 16:06:29.093853801 UTC

.section .text
.align 8
_cbwhZ:
_cbwhZ:
	movq 16(%rbp),%rax
	leaq block_cbwi5_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 8(%rbp),%r9
	movq 31(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	movq %rax,-8(%rbp)
	movq 24(%rbp),%rax
	movq %rax,(%rbp)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,8(%rbp)
	movq %rbx,24(%rbp)
	addq $-8,%rbp
	jmp dupHandle__rbnWK_entry
	.size _cbwhZ, .-_cbwhZ


==================== Asm code ====================
2018-03-16 16:06:29.094510807 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwhZ_info:
	.quad	_cbwhZ
	.quad	3
	.quad	4294967326
	.quad	SbuCr_srt+728


==================== Asm code ====================
2018-03-16 16:06:29.095938984 UTC

.section .text
.align 8
_cbwi5:
_cbwi5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwid
_cbwic:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwid:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwi5, .-_cbwi5


==================== Asm code ====================
2018-03-16 16:06:29.096606799 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwi5_info:
	.quad	_cbwi5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.097151232 UTC

.section .data.rel.ro
.align 8
.align 1
ubwjl_srtd:
	.quad	SbuCr_srt+96
	.quad	81
	.quad	1
	.quad	98816


==================== Asm code ====================
2018-03-16 16:06:29.097891425 UTC

.section .text
.align 8
sat_sbumT_entry:
_cbwif:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwij
_cbwik:
	leaq block_cbwhN_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rdx
	movq 30(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbwhN
_cbwhO:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwij:
	jmp *-8(%r13)
	.size sat_sbumT_entry, .-sat_sbumT_entry


==================== Asm code ====================
2018-03-16 16:06:29.098554565 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbumT_info:
	.quad	sat_sbumT_entry
	.quad	4
	.quad	-4294967288
	.quad	8589934597
	.quad	ubwjl_srtd


==================== Asm code ====================
2018-03-16 16:06:29.099051355 UTC

.section .data.rel.ro
.align 8
.align 1
ubwjm_srtd:
	.quad	SbuCr_srt+96
	.quad	81
	.quad	1
	.quad	98816


==================== Asm code ====================
2018-03-16 16:06:29.099665634 UTC

.section .text
.align 8
_cbwhN:
_cbwhN:
	leaq block_cbwhS_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.IO.Handle.Internals.flushBuffer1_entry@gotpcrel(%rip)
	.size _cbwhN, .-_cbwhN


==================== Asm code ====================
2018-03-16 16:06:29.100214644 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwhN_info:
	.quad	_cbwhN
	.quad	4
	.quad	-4294967266
	.quad	ubwjm_srtd


==================== Asm code ====================
2018-03-16 16:06:29.100939979 UTC

.section .text
.align 8
_cbwhS:
_cbwhS:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbwio
_cbwin:
	leaq sat_sbumO_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_cbwig_info(%rip),%rax
	movq %rax,(%rbp)
	leaq -22(%r12),%r8
	movq 32(%rbp),%rdi
	movq 16(%rbp),%rsi
	leaq lvl7_rbnWP_closure(%rip),%r14
	jmp *GHC.IO.Handle.Internals.$wwithHandle'_entry@gotpcrel(%rip)
_cbwio:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwhS, .-_cbwhS


==================== Asm code ====================
2018-03-16 16:06:29.101721831 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwhS_info:
	.quad	_cbwhS
	.quad	5
	.quad	828928688158
	.quad	SbuCr_srt+680


==================== Asm code ====================
2018-03-16 16:06:29.102443848 UTC

.section .text
.align 8
_cbwig:
_cbwig:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwir
_cbwiq:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwir:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwig, .-_cbwig


==================== Asm code ====================
2018-03-16 16:06:29.1030364 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwig_info:
	.quad	_cbwig
	.quad	1925
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.103561662 UTC

.section .data.rel.ro
.align 8
.align 1
ubwjn_srtd:
	.quad	SbuCr_srt+96
	.quad	83
	.quad	1
	.quad	512576


==================== Asm code ====================
2018-03-16 16:06:29.104272637 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hDuplicate1_entry
.type GHC.IO.Handle.hDuplicate1_entry, @object
GHC.IO.Handle.hDuplicate1_entry:
_cbwix:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwiy
_cbwiz:
	leaq block_cbwgA_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbwgA
_cbwgB:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwiy:
	leaq GHC.IO.Handle.hDuplicate1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hDuplicate1_entry, .-GHC.IO.Handle.hDuplicate1_entry


==================== Asm code ====================
2018-03-16 16:06:29.104930674 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hDuplicate1_info
.type GHC.IO.Handle.hDuplicate1_info, @object
GHC.IO.Handle.hDuplicate1_info:
	.quad	GHC.IO.Handle.hDuplicate1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934597
	.quad	ubwjn_srtd


==================== Asm code ====================
2018-03-16 16:06:29.105571085 UTC

.section .data.rel.ro
.align 8
.align 1
ubwjo_srtd:
	.quad	SbuCr_srt+96
	.quad	83
	.quad	1
	.quad	381504


==================== Asm code ====================
2018-03-16 16:06:29.106449892 UTC

.section .text
.align 8
_cbwgA:
_cbwgA:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbwiu
_cbwiv:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbwiF
_cbwiE:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rdx
	leaq sat_sbulW_info(%rip),%rsi
	movq %rsi,-8(%r12)
	movq %rax,(%r12)
	leaq block_cbwhz_info(%rip),%rsi
	movq %rsi,-24(%rbp)
	leaq -6(%r12),%r8
	movq %rdx,%rdi
	movq %rbx,%rsi
	leaq lvl23_rbnX5_closure(%rip),%r14
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-24,%rbp
	jmp *GHC.IO.Handle.Internals.$wwithHandle'_entry@gotpcrel(%rip)
_cbwiF:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbwiu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbwiF
_cbwiB:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	leaq sat_sbulp_info(%rip),%rdx
	movq %rdx,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%r8
	movq %rcx,%rdi
	movq %rbx,%rsi
	leaq lvl23_rbnX5_closure(%rip),%r14
	addq $8,%rbp
	jmp *GHC.IO.Handle.Internals.$wwithHandle'_entry@gotpcrel(%rip)
	.size _cbwgA, .-_cbwgA


==================== Asm code ====================
2018-03-16 16:06:29.107250547 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwgA_info:
	.quad	_cbwgA
	.quad	0
	.quad	-4294967266
	.quad	ubwjo_srtd


==================== Asm code ====================
2018-03-16 16:06:29.10782306 UTC

.section .data.rel.ro
.align 8
.align 1
ubwjp_srtd:
	.quad	SbuCr_srt+96
	.quad	83
	.quad	1
	.quad	381440


==================== Asm code ====================
2018-03-16 16:06:29.108472063 UTC

.section .text
.align 8
_cbwhz:
_cbwhz:
	leaq block_cbwhB_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbwhB
_cbwhC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwhz, .-_cbwhz


==================== Asm code ====================
2018-03-16 16:06:29.109044317 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwhz_info:
	.quad	_cbwhz
	.quad	3
	.quad	-4294967266
	.quad	ubwjp_srtd


==================== Asm code ====================
2018-03-16 16:06:29.109948222 UTC

.section .data.rel.ro
.align 8
.align 1
ubwjq_srtd:
	.quad	SbuCr_srt+96
	.quad	83
	.quad	1
	.quad	381440


==================== Asm code ====================
2018-03-16 16:06:29.110777257 UTC

.section .text
.align 8
_cbwhB:
_cbwhB:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbwiL
_cbwj7:
	addq $32,%rbp
	jmp lvl27_rbnX9_entry
_cbwiO:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbwiL:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbwiO
_cbwiN:
	movq 15(%rbx),%rax
	movq GHC.MVar.MVar_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	leaq -63(%r12),%rbx
	movq %rbx,-40(%r12)
	leaq sat_sbumT_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -46(%r12),%rcx
	movq %rcx,(%r12)
	leaq block_cbwiH_info(%rip),%rcx
	movq %rcx,(%rbp)
	leaq -30(%r12),%r8
	movq 16(%rbp),%rdi
	movq %rbx,%rsi
	leaq lvl23_rbnX5_closure(%rip),%r14
	movq %rax,24(%rbp)
	jmp *GHC.IO.Handle.Internals.$wwithHandle'_entry@gotpcrel(%rip)
	.size _cbwhB, .-_cbwhB


==================== Asm code ====================
2018-03-16 16:06:29.111564703 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwhB_info:
	.quad	_cbwhB
	.quad	3
	.quad	-4294967266
	.quad	ubwjq_srtd


==================== Asm code ====================
2018-03-16 16:06:29.112186305 UTC

.section .text
.align 8
_cbwiH:
_cbwiH:
	leaq block_cbwiJ_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbwiJ
_cbwiQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwiH, .-_cbwiH


==================== Asm code ====================
2018-03-16 16:06:29.11274356 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwiH_info:
	.quad	_cbwiH
	.quad	131
	.quad	4294967326
	.quad	SbuCr_srt+704


==================== Asm code ====================
2018-03-16 16:06:29.11363257 UTC

.section .text
.align 8
_cbwiJ:
_cbwiJ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbwiW
_cbwj3:
	addq $32,%rbp
	jmp lvl25_rbnX7_entry
_cbwiZ:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbwiW:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbwiZ
_cbwiY:
	movq 15(%rbx),%rax
	movq GHC.IO.Handle.Types.DuplexHandle_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	leaq -22(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbwiJ, .-_cbwiJ


==================== Asm code ====================
2018-03-16 16:06:29.114307441 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwiJ_info:
	.quad	_cbwiJ
	.quad	131
	.quad	4294967326
	.quad	SbuCr_srt+704


==================== Asm code ====================
2018-03-16 16:06:29.116547989 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hDuplicate_closure
.type GHC.IO.Handle.hDuplicate_closure, @object
GHC.IO.Handle.hDuplicate_closure:
	.quad	GHC.IO.Handle.hDuplicate_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.117140775 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hDuplicate_entry
.type GHC.IO.Handle.hDuplicate_entry, @object
GHC.IO.Handle.hDuplicate_entry:
_cbwmg:
	jmp GHC.IO.Handle.hDuplicate1_entry
	.size GHC.IO.Handle.hDuplicate_entry, .-GHC.IO.Handle.hDuplicate_entry


==================== Asm code ====================
2018-03-16 16:06:29.117707229 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hDuplicate_info
.type GHC.IO.Handle.hDuplicate_info, @object
GHC.IO.Handle.hDuplicate_info:
	.quad	GHC.IO.Handle.hDuplicate_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbuCr_srt+744


==================== Asm code ====================
2018-03-16 16:06:29.119298887 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hGetEcho4_bytes
.type GHC.IO.Handle.hGetEcho4_bytes, @object
GHC.IO.Handle.hGetEcho4_bytes:
	.asciz "hGetEcho"


==================== Asm code ====================
2018-03-16 16:06:29.121843895 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho3_closure
.type GHC.IO.Handle.hGetEcho3_closure, @object
GHC.IO.Handle.hGetEcho3_closure:
	.quad	GHC.IO.Handle.hGetEcho3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.122727572 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEcho3_entry
.type GHC.IO.Handle.hGetEcho3_entry, @object
GHC.IO.Handle.hGetEcho3_entry:
_cbwmu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwmv
_cbwmw:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbwmt
_cbwms:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hGetEcho4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbwmv:
	jmp *-16(%r13)
_cbwmt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hGetEcho3_entry, .-GHC.IO.Handle.hGetEcho3_entry


==================== Asm code ====================
2018-03-16 16:06:29.123449575 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho3_info
.type GHC.IO.Handle.hGetEcho3_info, @object
GHC.IO.Handle.hGetEcho3_info:
	.quad	GHC.IO.Handle.hGetEcho3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:29.128584293 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho2_closure
.type GHC.IO.Handle.hGetEcho2_closure, @object
GHC.IO.Handle.hGetEcho2_closure:
	.quad	GHC.IO.Handle.hGetEcho2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.129410947 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEcho2_entry
.type GHC.IO.Handle.hGetEcho2_entry, @object
GHC.IO.Handle.hGetEcho2_entry:
_cbwmM:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwmN
_cbwmO:
	leaq block_cbwmJ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbwmJ
_cbwmK:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwmN:
	leaq GHC.IO.Handle.hGetEcho2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hGetEcho2_entry, .-GHC.IO.Handle.hGetEcho2_entry


==================== Asm code ====================
2018-03-16 16:06:29.130090843 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho2_info
.type GHC.IO.Handle.hGetEcho2_info, @object
GHC.IO.Handle.hGetEcho2_info:
	.quad	GHC.IO.Handle.hGetEcho2_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	SbuCr_srt+760


==================== Asm code ====================
2018-03-16 16:06:29.130816792 UTC

.section .text
.align 8
_cbwmJ:
_cbwmJ:
	leaq block_cbwmR_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbwmR
_cbwmT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwmJ, .-_cbwmJ


==================== Asm code ====================
2018-03-16 16:06:29.131414241 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwmJ_info:
	.quad	_cbwmJ
	.quad	0
	.quad	4294967326
	.quad	SbuCr_srt+768


==================== Asm code ====================
2018-03-16 16:06:29.132125493 UTC

.section .text
.align 8
_cbwmR:
_cbwmR:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbwn9
_cbwn2:
	movq 16(%rbp),%rax
	leaq block_cbwmX_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_pv_info@gotpcrel(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	jmp *GHC.IO.Device.getEcho_entry@gotpcrel(%rip)
_cbwn9:
	addq $32,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_closedHandle1_entry@gotpcrel(%rip)
	.size _cbwmR, .-_cbwmR


==================== Asm code ====================
2018-03-16 16:06:29.132774581 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwmR_info:
	.quad	_cbwmR
	.quad	3
	.quad	4294967326
	.quad	SbuCr_srt+768


==================== Asm code ====================
2018-03-16 16:06:29.133507618 UTC

.section .text
.align 8
_cbwmX:
_cbwmX:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwn5
_cbwn4:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwn5:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwmX, .-_cbwmX


==================== Asm code ====================
2018-03-16 16:06:29.134150849 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwmX_info:
	.quad	_cbwmX
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.14384238 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho1_closure
.type GHC.IO.Handle.hGetEcho1_closure, @object
GHC.IO.Handle.hGetEcho1_closure:
	.quad	GHC.IO.Handle.hGetEcho1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.144377929 UTC

.section .data.rel.ro
.align 8
.align 1
ubwpc_srtd:
	.quad	SbuCr_srt+456
	.quad	41
	.quad	1374389534721


==================== Asm code ====================
2018-03-16 16:06:29.145162799 UTC

.section .text
.align 8
io_sbunI_entry:
_cbwo5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwo9
_cbwoa:
	leaq block_cbwo0_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	leaq GHC.IO.Handle.hGetEcho2_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	leaq GHC.IO.Handle.hGetEcho3_closure(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbwo9:
	jmp *-8(%r13)
	.size io_sbunI_entry, .-io_sbunI_entry


==================== Asm code ====================
2018-03-16 16:06:29.145929471 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbunI_info:
	.quad	io_sbunI_entry
	.quad	2
	.quad	-4294967285
	.quad	4294967299
	.quad	ubwpc_srtd


==================== Asm code ====================
2018-03-16 16:06:29.146613916 UTC

.section .text
.align 8
_cbwo0:
_cbwo0:
	leaq block_cbwo2_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbwo2
_cbwo3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwo0, .-_cbwo0


==================== Asm code ====================
2018-03-16 16:06:29.147182509 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwo0_info:
	.quad	_cbwo0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.147789442 UTC

.section .text
.align 8
_cbwo2:
_cbwo2:
	leaq block_cbwo8_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbwo2, .-_cbwo2


==================== Asm code ====================
2018-03-16 16:06:29.148352903 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwo2_info:
	.quad	_cbwo2
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.148975586 UTC

.section .text
.align 8
_cbwo8:
_cbwo8:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbwo8, .-_cbwo8


==================== Asm code ====================
2018-03-16 16:06:29.14960264 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwo8_info:
	.quad	_cbwo8
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.150111739 UTC

.section .data.rel.ro
.align 8
.align 1
ubwpd_srtd:
	.quad	SbuCr_srt+456
	.quad	41
	.quad	1374389534721


==================== Asm code ====================
2018-03-16 16:06:29.150829547 UTC

.section .text
.align 8
io_sbunY_entry:
_cbwou:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwoy
_cbwoz:
	leaq block_cbwop_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	leaq GHC.IO.Handle.hGetEcho2_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	leaq GHC.IO.Handle.hGetEcho3_closure(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbwoy:
	jmp *-8(%r13)
	.size io_sbunY_entry, .-io_sbunY_entry


==================== Asm code ====================
2018-03-16 16:06:29.151488653 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbunY_info:
	.quad	io_sbunY_entry
	.quad	2
	.quad	-4294967285
	.quad	4294967299
	.quad	ubwpd_srtd


==================== Asm code ====================
2018-03-16 16:06:29.152155295 UTC

.section .text
.align 8
_cbwop:
_cbwop:
	leaq block_cbwor_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbwor
_cbwos:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwop, .-_cbwop


==================== Asm code ====================
2018-03-16 16:06:29.152680945 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwop_info:
	.quad	_cbwop
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.153577579 UTC

.section .text
.align 8
_cbwor:
_cbwor:
	leaq block_cbwox_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbwor, .-_cbwor


==================== Asm code ====================
2018-03-16 16:06:29.154194936 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwor_info:
	.quad	_cbwor
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.154810698 UTC

.section .text
.align 8
_cbwox:
_cbwox:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbwox, .-_cbwox


==================== Asm code ====================
2018-03-16 16:06:29.155376282 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwox_info:
	.quad	_cbwox
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.155920788 UTC

.section .data.rel.ro
.align 8
.align 1
ubwpe_srtd:
	.quad	SbuCr_srt+160
	.quad	79
	.quad	137438953473
	.quad	26624


==================== Asm code ====================
2018-03-16 16:06:29.156638914 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEcho1_entry
.type GHC.IO.Handle.hGetEcho1_entry, @object
GHC.IO.Handle.hGetEcho1_entry:
_cbwoJ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwoK
_cbwoL:
	leaq block_cbwnG_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.hGetEcho5_entry
_cbwoK:
	leaq GHC.IO.Handle.hGetEcho1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hGetEcho1_entry, .-GHC.IO.Handle.hGetEcho1_entry


==================== Asm code ====================
2018-03-16 16:06:29.157269494 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho1_info
.type GHC.IO.Handle.hGetEcho1_info, @object
GHC.IO.Handle.hGetEcho1_info:
	.quad	GHC.IO.Handle.hGetEcho1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934597
	.quad	ubwpe_srtd


==================== Asm code ====================
2018-03-16 16:06:29.157834933 UTC

.section .data.rel.ro
.align 8
.align 1
ubwpf_srtd:
	.quad	SbuCr_srt+456
	.quad	41
	.quad	1374389534721


==================== Asm code ====================
2018-03-16 16:06:29.158497584 UTC

.section .text
.align 8
_cbwnG:
_cbwnG:
	leaq block_cbwnI_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbwnI
_cbwnJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwnG, .-_cbwnG


==================== Asm code ====================
2018-03-16 16:06:29.159072251 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwnG_info:
	.quad	_cbwnG
	.quad	1
	.quad	-4294967266
	.quad	ubwpf_srtd


==================== Asm code ====================
2018-03-16 16:06:29.159614181 UTC

.section .data.rel.ro
.align 8
.align 1
ubwpg_srtd:
	.quad	SbuCr_srt+456
	.quad	41
	.quad	1374389534721


==================== Asm code ====================
2018-03-16 16:06:29.160398768 UTC

.section .text
.align 8
_cbwnI:
_cbwnI:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbwoG
_cbwoH:
	movq 8(%rbp),%rax
	leaq block_cbwnO_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cbwnO
_cbwnP:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwoG:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbwnI, .-_cbwnI


==================== Asm code ====================
2018-03-16 16:06:29.161044827 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwnI_info:
	.quad	_cbwnI
	.quad	1
	.quad	-4294967266
	.quad	ubwpg_srtd


==================== Asm code ====================
2018-03-16 16:06:29.161621272 UTC

.section .data.rel.ro
.align 8
.align 1
ubwph_srtd:
	.quad	SbuCr_srt+456
	.quad	41
	.quad	1374389534721


==================== Asm code ====================
2018-03-16 16:06:29.162346411 UTC

.section .text
.align 8
_cbwnO:
_cbwnO:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbwoS
_cbwp1:
	leaq block_cbwoi_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_cbwoS:
	leaq block_cbwnT_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _cbwnO, .-_cbwnO


==================== Asm code ====================
2018-03-16 16:06:29.162992602 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwnO_info:
	.quad	_cbwnO
	.quad	0
	.quad	-4294967266
	.quad	ubwph_srtd


==================== Asm code ====================
2018-03-16 16:06:29.164077783 UTC

.section .data.rel.ro
.align 8
.align 1
ubwpi_srtd:
	.quad	SbuCr_srt+456
	.quad	41
	.quad	1374389534721


==================== Asm code ====================
2018-03-16 16:06:29.164901857 UTC

.section .text
.align 8
_cbwnT:
_cbwnT:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwoV
_cbwoU:
	leaq io_sbunI_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbwoZ
_cbwoY:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbunI_entry
_cbwoZ:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbwoV:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbwnT, .-_cbwnT


==================== Asm code ====================
2018-03-16 16:06:29.166001767 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwnT_info:
	.quad	_cbwnT
	.quad	2
	.quad	-4294967266
	.quad	ubwpi_srtd


==================== Asm code ====================
2018-03-16 16:06:29.166530772 UTC

.section .data.rel.ro
.align 8
.align 1
ubwpj_srtd:
	.quad	SbuCr_srt+456
	.quad	41
	.quad	1374389534721


==================== Asm code ====================
2018-03-16 16:06:29.167203635 UTC

.section .text
.align 8
_cbwoi:
_cbwoi:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwp4
_cbwp3:
	leaq io_sbunY_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbwp8
_cbwp7:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbunY_entry
_cbwp8:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbwp4:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbwoi, .-_cbwoi


==================== Asm code ====================
2018-03-16 16:06:29.167877785 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwoi_info:
	.quad	_cbwoi
	.quad	2
	.quad	-4294967266
	.quad	ubwpj_srtd


==================== Asm code ====================
2018-03-16 16:06:29.170161598 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho_closure
.type GHC.IO.Handle.hGetEcho_closure, @object
GHC.IO.Handle.hGetEcho_closure:
	.quad	GHC.IO.Handle.hGetEcho_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.170803004 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetEcho_entry
.type GHC.IO.Handle.hGetEcho_entry, @object
GHC.IO.Handle.hGetEcho_entry:
_cbwqL:
	jmp GHC.IO.Handle.hGetEcho1_entry
	.size GHC.IO.Handle.hGetEcho_entry, .-GHC.IO.Handle.hGetEcho_entry


==================== Asm code ====================
2018-03-16 16:06:29.171375208 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetEcho_info
.type GHC.IO.Handle.hGetEcho_info, @object
GHC.IO.Handle.hGetEcho_info:
	.quad	GHC.IO.Handle.hGetEcho_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbuCr_srt+784


==================== Asm code ====================
2018-03-16 16:06:29.172955252 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hSetEcho3_bytes
.type GHC.IO.Handle.hSetEcho3_bytes, @object
GHC.IO.Handle.hSetEcho3_bytes:
	.asciz "hSetEcho"


==================== Asm code ====================
2018-03-16 16:06:29.175488063 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetEcho2_closure
.type GHC.IO.Handle.hSetEcho2_closure, @object
GHC.IO.Handle.hSetEcho2_closure:
	.quad	GHC.IO.Handle.hSetEcho2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.176312848 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetEcho2_entry
.type GHC.IO.Handle.hSetEcho2_entry, @object
GHC.IO.Handle.hSetEcho2_entry:
_cbwqZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwr0
_cbwr1:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbwqY
_cbwqX:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hSetEcho3_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbwr0:
	jmp *-16(%r13)
_cbwqY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hSetEcho2_entry, .-GHC.IO.Handle.hSetEcho2_entry


==================== Asm code ====================
2018-03-16 16:06:29.177016014 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetEcho2_info
.type GHC.IO.Handle.hSetEcho2_info, @object
GHC.IO.Handle.hSetEcho2_info:
	.quad	GHC.IO.Handle.hSetEcho2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:29.194353714 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetEcho1_closure
.type GHC.IO.Handle.hSetEcho1_closure, @object
GHC.IO.Handle.hSetEcho1_closure:
	.quad	GHC.IO.Handle.hSetEcho1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.195231282 UTC

.section .text
.align 8
sat_sbuoM_entry:
_cbwrG:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwrH
_cbwrI:
	leaq block_cbwrD_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbwrD
_cbwrE:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwrH:
	jmp *-8(%r13)
	.size sat_sbuoM_entry, .-sat_sbuoM_entry


==================== Asm code ====================
2018-03-16 16:06:29.195855528 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbuoM_info:
	.quad	sat_sbuoM_entry
	.quad	1
	.quad	4294967305
	.quad	8589934597
	.quad	SbuCr_srt+768


==================== Asm code ====================
2018-03-16 16:06:29.196555545 UTC

.section .text
.align 8
_cbwrD:
_cbwrD:
	leaq block_cbwrL_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbwrL
_cbwrN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwrD, .-_cbwrD


==================== Asm code ====================
2018-03-16 16:06:29.197190697 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwrD_info:
	.quad	_cbwrD
	.quad	1
	.quad	4294967326
	.quad	SbuCr_srt+768


==================== Asm code ====================
2018-03-16 16:06:29.198037676 UTC

.section .text
.align 8
_cbwrL:
_cbwrL:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbws3
_cbwrW:
	movq 16(%rbp),%rax
	leaq block_cbwrR_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	movq 32(%rbp),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp *GHC.IO.Device.setEcho_entry@gotpcrel(%rip)
_cbws3:
	addq $40,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_closedHandle1_entry@gotpcrel(%rip)
	.size _cbwrL, .-_cbwrL


==================== Asm code ====================
2018-03-16 16:06:29.198722544 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwrL_info:
	.quad	_cbwrL
	.quad	4
	.quad	4294967326
	.quad	SbuCr_srt+768


==================== Asm code ====================
2018-03-16 16:06:29.199427432 UTC

.section .text
.align 8
_cbwrR:
_cbwrR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwrZ
_cbwrY:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwrZ:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwrR, .-_cbwrR


==================== Asm code ====================
2018-03-16 16:06:29.200051842 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwrR_info:
	.quad	_cbwrR
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.200621669 UTC

.section .data.rel.ro
.align 8
.align 1
ubwtW_srtd:
	.quad	SbuCr_srt+456
	.quad	43
	.quad	4947802324993


==================== Asm code ====================
2018-03-16 16:06:29.201526353 UTC

.section .text
.align 8
io_sbuol_entry:
_cbwsc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwsg
_cbwsh:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbwsj
_cbwsi:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	leaq sat_sbuoM_info(%rip),%rdx
	movq %rdx,-8(%r12)
	movq %rax,(%r12)
	leaq block_cbws7_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rcx,%rsi
	leaq GHC.IO.Handle.hSetEcho2_closure(%rip),%r14
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbwsj:
	movq $16,904(%r13)
_cbwsg:
	jmp *-8(%r13)
	.size io_sbuol_entry, .-io_sbuol_entry


==================== Asm code ====================
2018-03-16 16:06:29.202228812 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbuol_info:
	.quad	io_sbuol_entry
	.quad	3
	.quad	-4294967288
	.quad	4294967299
	.quad	ubwtW_srtd


==================== Asm code ====================
2018-03-16 16:06:29.202908039 UTC

.section .text
.align 8
_cbws7:
_cbws7:
	leaq block_cbws9_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbws9
_cbwsa:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbws7, .-_cbws7


==================== Asm code ====================
2018-03-16 16:06:29.203496214 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbws7_info:
	.quad	_cbws7
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.204162467 UTC

.section .text
.align 8
_cbws9:
_cbws9:
	leaq block_cbwsf_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbws9, .-_cbws9


==================== Asm code ====================
2018-03-16 16:06:29.204742588 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbws9_info:
	.quad	_cbws9
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.205597282 UTC

.section .text
.align 8
_cbwsf:
_cbwsf:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbwsf, .-_cbwsf


==================== Asm code ====================
2018-03-16 16:06:29.206222583 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwsf_info:
	.quad	_cbwsf
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.206975505 UTC

.section .text
.align 8
sat_sbups_entry:
_cbwsG:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwsH
_cbwsI:
	leaq block_cbwsD_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbwsD
_cbwsE:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwsH:
	jmp *-8(%r13)
	.size sat_sbups_entry, .-sat_sbups_entry


==================== Asm code ====================
2018-03-16 16:06:29.207645249 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbups_info:
	.quad	sat_sbups_entry
	.quad	1
	.quad	4294967305
	.quad	8589934597
	.quad	SbuCr_srt+768


==================== Asm code ====================
2018-03-16 16:06:29.208364311 UTC

.section .text
.align 8
_cbwsD:
_cbwsD:
	leaq block_cbwsL_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbwsL
_cbwsN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwsD, .-_cbwsD


==================== Asm code ====================
2018-03-16 16:06:29.208971159 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwsD_info:
	.quad	_cbwsD
	.quad	1
	.quad	4294967326
	.quad	SbuCr_srt+768


==================== Asm code ====================
2018-03-16 16:06:29.210467708 UTC

.section .text
.align 8
_cbwsL:
_cbwsL:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbwt3
_cbwsW:
	movq 16(%rbp),%rax
	leaq block_cbwsR_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	movq 32(%rbp),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp *GHC.IO.Device.setEcho_entry@gotpcrel(%rip)
_cbwt3:
	addq $40,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_closedHandle1_entry@gotpcrel(%rip)
	.size _cbwsL, .-_cbwsL


==================== Asm code ====================
2018-03-16 16:06:29.211165483 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwsL_info:
	.quad	_cbwsL
	.quad	4
	.quad	4294967326
	.quad	SbuCr_srt+768


==================== Asm code ====================
2018-03-16 16:06:29.211946627 UTC

.section .text
.align 8
_cbwsR:
_cbwsR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwsZ
_cbwsY:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwsZ:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwsR, .-_cbwsR


==================== Asm code ====================
2018-03-16 16:06:29.212583898 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwsR_info:
	.quad	_cbwsR
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.213334527 UTC

.section .data.rel.ro
.align 8
.align 1
ubwtX_srtd:
	.quad	SbuCr_srt+456
	.quad	43
	.quad	4947802324993


==================== Asm code ====================
2018-03-16 16:06:29.214154683 UTC

.section .text
.align 8
io_sbup1_entry:
_cbwtc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwtg
_cbwth:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbwtj
_cbwti:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	leaq sat_sbups_info(%rip),%rdx
	movq %rdx,-8(%r12)
	movq %rax,(%r12)
	leaq block_cbwt7_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rcx,%rsi
	leaq GHC.IO.Handle.hSetEcho2_closure(%rip),%r14
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbwtj:
	movq $16,904(%r13)
_cbwtg:
	jmp *-8(%r13)
	.size io_sbup1_entry, .-io_sbup1_entry


==================== Asm code ====================
2018-03-16 16:06:29.214933623 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbup1_info:
	.quad	io_sbup1_entry
	.quad	3
	.quad	-4294967288
	.quad	4294967299
	.quad	ubwtX_srtd


==================== Asm code ====================
2018-03-16 16:06:29.215618117 UTC

.section .text
.align 8
_cbwt7:
_cbwt7:
	leaq block_cbwt9_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbwt9
_cbwta:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwt7, .-_cbwt7


==================== Asm code ====================
2018-03-16 16:06:29.216238839 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwt7_info:
	.quad	_cbwt7
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.216878322 UTC

.section .text
.align 8
_cbwt9:
_cbwt9:
	leaq block_cbwtf_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbwt9, .-_cbwt9


==================== Asm code ====================
2018-03-16 16:06:29.217526594 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwt9_info:
	.quad	_cbwt9
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.218119075 UTC

.section .text
.align 8
_cbwtf:
_cbwtf:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbwtf, .-_cbwtf


==================== Asm code ====================
2018-03-16 16:06:29.218645605 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwtf_info:
	.quad	_cbwtf
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.219195263 UTC

.section .data.rel.ro
.align 8
.align 1
ubwtY_srtd:
	.quad	SbuCr_srt+160
	.quad	81
	.quad	137438953473
	.quad	102400


==================== Asm code ====================
2018-03-16 16:06:29.219997988 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetEcho1_entry
.type GHC.IO.Handle.hSetEcho1_entry, @object
GHC.IO.Handle.hSetEcho1_entry:
_cbwtt:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwtu
_cbwtv:
	leaq block_cbwre_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rax
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.IO.Handle.hGetEcho5_entry
_cbwtu:
	leaq GHC.IO.Handle.hSetEcho1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hSetEcho1_entry, .-GHC.IO.Handle.hSetEcho1_entry


==================== Asm code ====================
2018-03-16 16:06:29.220669863 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetEcho1_info
.type GHC.IO.Handle.hSetEcho1_info, @object
GHC.IO.Handle.hSetEcho1_info:
	.quad	GHC.IO.Handle.hSetEcho1_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901903
	.quad	ubwtY_srtd


==================== Asm code ====================
2018-03-16 16:06:29.221587368 UTC

.section .data.rel.ro
.align 8
.align 1
ubwtZ_srtd:
	.quad	SbuCr_srt+456
	.quad	43
	.quad	4947802324993


==================== Asm code ====================
2018-03-16 16:06:29.222239337 UTC

.section .text
.align 8
_cbwre:
_cbwre:
	leaq block_cbwrg_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbwrg
_cbwrh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwre, .-_cbwre


==================== Asm code ====================
2018-03-16 16:06:29.222814446 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwre_info:
	.quad	_cbwre
	.quad	2
	.quad	-4294967266
	.quad	ubwtZ_srtd


==================== Asm code ====================
2018-03-16 16:06:29.223322691 UTC

.section .data.rel.ro
.align 8
.align 1
ubwu0_srtd:
	.quad	SbuCr_srt+456
	.quad	43
	.quad	4947802324993


==================== Asm code ====================
2018-03-16 16:06:29.224064881 UTC

.section .text
.align 8
_cbwrg:
_cbwrg:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbwtq
_cbwtr:
	movq 8(%rbp),%rax
	leaq block_cbwrm_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cbwrm
_cbwrn:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwtq:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbwrg, .-_cbwrg


==================== Asm code ====================
2018-03-16 16:06:29.224722824 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwrg_info:
	.quad	_cbwrg
	.quad	2
	.quad	-4294967266
	.quad	ubwu0_srtd


==================== Asm code ====================
2018-03-16 16:06:29.225280104 UTC

.section .data.rel.ro
.align 8
.align 1
ubwu1_srtd:
	.quad	SbuCr_srt+456
	.quad	43
	.quad	4947802324993


==================== Asm code ====================
2018-03-16 16:06:29.226038213 UTC

.section .text
.align 8
_cbwrm:
_cbwrm:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbwtC
_cbwtL:
	leaq block_cbwsr_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_cbwtC:
	leaq block_cbwrr_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _cbwrm, .-_cbwrm


==================== Asm code ====================
2018-03-16 16:06:29.226725329 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwrm_info:
	.quad	_cbwrm
	.quad	1
	.quad	-4294967266
	.quad	ubwu1_srtd


==================== Asm code ====================
2018-03-16 16:06:29.227276794 UTC

.section .data.rel.ro
.align 8
.align 1
ubwu2_srtd:
	.quad	SbuCr_srt+456
	.quad	43
	.quad	4947802324993


==================== Asm code ====================
2018-03-16 16:06:29.228022096 UTC

.section .text
.align 8
_cbwrr:
_cbwrr:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbwtF
_cbwtE:
	leaq io_sbuol_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rax
	testq %rbx,%rbx
	je _cbwtJ
_cbwtI:
	movq %rax,%rbx
	addq $32,%rbp
	jmp io_sbuol_entry
_cbwtJ:
	movq %rax,%rbx
	addq $32,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbwtF:
	movq $32,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbwrr, .-_cbwrr


==================== Asm code ====================
2018-03-16 16:06:29.228675095 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwrr_info:
	.quad	_cbwrr
	.quad	3
	.quad	-4294967266
	.quad	ubwu2_srtd


==================== Asm code ====================
2018-03-16 16:06:29.229204392 UTC

.section .data.rel.ro
.align 8
.align 1
ubwu3_srtd:
	.quad	SbuCr_srt+456
	.quad	43
	.quad	4947802324993


==================== Asm code ====================
2018-03-16 16:06:29.230006821 UTC

.section .text
.align 8
_cbwsr:
_cbwsr:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbwtO
_cbwtN:
	leaq io_sbup1_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rax
	testq %rbx,%rbx
	je _cbwtS
_cbwtR:
	movq %rax,%rbx
	addq $32,%rbp
	jmp io_sbup1_entry
_cbwtS:
	movq %rax,%rbx
	addq $32,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbwtO:
	movq $32,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbwsr, .-_cbwsr


==================== Asm code ====================
2018-03-16 16:06:29.230666973 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwsr_info:
	.quad	_cbwsr
	.quad	3
	.quad	-4294967266
	.quad	ubwu3_srtd


==================== Asm code ====================
2018-03-16 16:06:29.232966984 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hSetEcho_closure
.type GHC.IO.Handle.hSetEcho_closure, @object
GHC.IO.Handle.hSetEcho_closure:
	.quad	GHC.IO.Handle.hSetEcho_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.234020013 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hSetEcho_entry
.type GHC.IO.Handle.hSetEcho_entry, @object
GHC.IO.Handle.hSetEcho_entry:
_cbwwn:
	jmp GHC.IO.Handle.hSetEcho1_entry
	.size GHC.IO.Handle.hSetEcho_entry, .-GHC.IO.Handle.hSetEcho_entry


==================== Asm code ====================
2018-03-16 16:06:29.234570378 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hSetEcho_info
.type GHC.IO.Handle.hSetEcho_info, @object
GHC.IO.Handle.hSetEcho_info:
	.quad	GHC.IO.Handle.hSetEcho_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SbuCr_srt+800


==================== Asm code ====================
2018-03-16 16:06:29.23616101 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hGetBuffering3_bytes
.type GHC.IO.Handle.hGetBuffering3_bytes, @object
GHC.IO.Handle.hGetBuffering3_bytes:
	.asciz "hGetBuffering"


==================== Asm code ====================
2018-03-16 16:06:29.238714673 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetBuffering_fun_closure
.type GHC.IO.Handle.hGetBuffering_fun_closure, @object
GHC.IO.Handle.hGetBuffering_fun_closure:
	.quad	GHC.IO.Handle.hGetBuffering_fun_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.240086383 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetBuffering_fun_entry
.type GHC.IO.Handle.hGetBuffering_fun_entry, @object
GHC.IO.Handle.hGetBuffering_fun_entry:
_cbwwB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwwC
_cbwwD:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbwwA
_cbwwz:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hGetBuffering3_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbwwC:
	jmp *-16(%r13)
_cbwwA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hGetBuffering_fun_entry, .-GHC.IO.Handle.hGetBuffering_fun_entry


==================== Asm code ====================
2018-03-16 16:06:29.240868105 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetBuffering_fun_info
.type GHC.IO.Handle.hGetBuffering_fun_info, @object
GHC.IO.Handle.hGetBuffering_fun_info:
	.quad	GHC.IO.Handle.hGetBuffering_fun_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:29.244911333 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetBuffering2_closure
.type GHC.IO.Handle.hGetBuffering2_closure, @object
GHC.IO.Handle.hGetBuffering2_closure:
	.quad	GHC.IO.Handle.hGetBuffering2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.245664268 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetBuffering2_entry
.type GHC.IO.Handle.hGetBuffering2_entry, @object
GHC.IO.Handle.hGetBuffering2_entry:
_cbwwT:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwwU
_cbwwV:
	leaq block_cbwwQ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbwwQ
_cbwwR:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwwU:
	leaq GHC.IO.Handle.hGetBuffering2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hGetBuffering2_entry, .-GHC.IO.Handle.hGetBuffering2_entry


==================== Asm code ====================
2018-03-16 16:06:29.246327761 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetBuffering2_info
.type GHC.IO.Handle.hGetBuffering2_info, @object
GHC.IO.Handle.hGetBuffering2_info:
	.quad	GHC.IO.Handle.hGetBuffering2_entry
	.quad	0
	.quad	141733920782
	.quad	8589934597
	.quad	SbuCr_srt+768


==================== Asm code ====================
2018-03-16 16:06:29.247026246 UTC

.section .text
.align 8
_cbwwQ:
_cbwwQ:
	leaq block_cbwwY_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%rax
	movq 55(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbwwY
_cbwx0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwwQ, .-_cbwwQ


==================== Asm code ====================
2018-03-16 16:06:29.247621456 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwwQ_info:
	.quad	_cbwwQ
	.quad	0
	.quad	4294967326
	.quad	SbuCr_srt+768


==================== Asm code ====================
2018-03-16 16:06:29.248329382 UTC

.section .text
.align 8
_cbwwY:
_cbwwY:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbwxd
_cbwx6:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwx9
_cbwx8:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwxd:
	addq $24,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_closedHandle1_entry@gotpcrel(%rip)
_cbwx9:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwwY, .-_cbwwY


==================== Asm code ====================
2018-03-16 16:06:29.248989692 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwwY_info:
	.quad	_cbwwY
	.quad	2
	.quad	4294967326
	.quad	SbuCr_srt+768


==================== Asm code ====================
2018-03-16 16:06:29.257478073 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetBuffering1_closure
.type GHC.IO.Handle.hGetBuffering1_closure, @object
GHC.IO.Handle.hGetBuffering1_closure:
	.quad	GHC.IO.Handle.hGetBuffering1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.258042924 UTC

.section .data.rel.ro
.align 8
.align 1
ubwyV_srtd:
	.quad	SbuCr_srt+456
	.quad	46
	.quad	52776558133249


==================== Asm code ====================
2018-03-16 16:06:29.258827332 UTC

.section .text
.align 8
io_sbuq5_entry:
_cbwxX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwy1
_cbwy2:
	leaq block_cbwxS_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	leaq GHC.IO.Handle.hGetBuffering2_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	leaq GHC.IO.Handle.hGetBuffering_fun_closure(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbwy1:
	jmp *-8(%r13)
	.size io_sbuq5_entry, .-io_sbuq5_entry


==================== Asm code ====================
2018-03-16 16:06:29.259502754 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbuq5_info:
	.quad	io_sbuq5_entry
	.quad	2
	.quad	-4294967285
	.quad	4294967299
	.quad	ubwyV_srtd


==================== Asm code ====================
2018-03-16 16:06:29.260212701 UTC

.section .text
.align 8
_cbwxS:
_cbwxS:
	leaq block_cbwxU_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbwxU
_cbwxV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwxS, .-_cbwxS


==================== Asm code ====================
2018-03-16 16:06:29.260803805 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwxS_info:
	.quad	_cbwxS
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.261528378 UTC

.section .text
.align 8
_cbwxU:
_cbwxU:
	leaq block_cbwy0_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbwxU, .-_cbwxU


==================== Asm code ====================
2018-03-16 16:06:29.262158215 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwxU_info:
	.quad	_cbwxU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.262814659 UTC

.section .text
.align 8
_cbwy0:
_cbwy0:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbwy0, .-_cbwy0


==================== Asm code ====================
2018-03-16 16:06:29.263364347 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwy0_info:
	.quad	_cbwy0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.26394098 UTC

.section .data.rel.ro
.align 8
.align 1
ubwyW_srtd:
	.quad	SbuCr_srt+456
	.quad	46
	.quad	52776558133249


==================== Asm code ====================
2018-03-16 16:06:29.264667822 UTC

.section .text
.align 8
io_sbuql_entry:
_cbwym:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwyq
_cbwyr:
	leaq block_cbwyh_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	leaq GHC.IO.Handle.hGetBuffering2_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	leaq GHC.IO.Handle.hGetBuffering_fun_closure(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbwyq:
	jmp *-8(%r13)
	.size io_sbuql_entry, .-io_sbuql_entry


==================== Asm code ====================
2018-03-16 16:06:29.265593189 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbuql_info:
	.quad	io_sbuql_entry
	.quad	2
	.quad	-4294967285
	.quad	4294967299
	.quad	ubwyW_srtd


==================== Asm code ====================
2018-03-16 16:06:29.266242208 UTC

.section .text
.align 8
_cbwyh:
_cbwyh:
	leaq block_cbwyj_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbwyj
_cbwyk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwyh, .-_cbwyh


==================== Asm code ====================
2018-03-16 16:06:29.266802942 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwyh_info:
	.quad	_cbwyh
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.267456568 UTC

.section .text
.align 8
_cbwyj:
_cbwyj:
	leaq block_cbwyp_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbwyj, .-_cbwyj


==================== Asm code ====================
2018-03-16 16:06:29.268053848 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwyj_info:
	.quad	_cbwyj
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.268636163 UTC

.section .text
.align 8
_cbwyp:
_cbwyp:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbwyp, .-_cbwyp


==================== Asm code ====================
2018-03-16 16:06:29.269236481 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwyp_info:
	.quad	_cbwyp
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.269831517 UTC

.section .data.rel.ro
.align 8
.align 1
ubwyX_srtd:
	.quad	SbuCr_srt+456
	.quad	47
	.quad	123145302310913


==================== Asm code ====================
2018-03-16 16:06:29.270568848 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetBuffering1_entry
.type GHC.IO.Handle.hGetBuffering1_entry, @object
GHC.IO.Handle.hGetBuffering1_entry:
_cbwyB:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwyC
_cbwyD:
	leaq block_cbwxG_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbwxG
_cbwxH:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwyC:
	leaq GHC.IO.Handle.hGetBuffering1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hGetBuffering1_entry, .-GHC.IO.Handle.hGetBuffering1_entry


==================== Asm code ====================
2018-03-16 16:06:29.271262662 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetBuffering1_info
.type GHC.IO.Handle.hGetBuffering1_info, @object
GHC.IO.Handle.hGetBuffering1_info:
	.quad	GHC.IO.Handle.hGetBuffering1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934597
	.quad	ubwyX_srtd


==================== Asm code ====================
2018-03-16 16:06:29.271870843 UTC

.section .data.rel.ro
.align 8
.align 1
ubwyY_srtd:
	.quad	SbuCr_srt+456
	.quad	46
	.quad	52776558133249


==================== Asm code ====================
2018-03-16 16:06:29.272575334 UTC

.section .text
.align 8
_cbwxG:
_cbwxG:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbwyy
_cbwyz:
	leaq block_cbwya_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_cbwyy:
	leaq block_cbwxL_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _cbwxG, .-_cbwxG


==================== Asm code ====================
2018-03-16 16:06:29.273296903 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwxG_info:
	.quad	_cbwxG
	.quad	0
	.quad	-4294967266
	.quad	ubwyY_srtd


==================== Asm code ====================
2018-03-16 16:06:29.273904136 UTC

.section .data.rel.ro
.align 8
.align 1
ubwyZ_srtd:
	.quad	SbuCr_srt+456
	.quad	46
	.quad	52776558133249


==================== Asm code ====================
2018-03-16 16:06:29.274689267 UTC

.section .text
.align 8
_cbwxL:
_cbwxL:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwyH
_cbwyG:
	leaq io_sbuq5_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbwyL
_cbwyK:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbuq5_entry
_cbwyL:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbwyH:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbwxL, .-_cbwxL


==================== Asm code ====================
2018-03-16 16:06:29.275409866 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwxL_info:
	.quad	_cbwxL
	.quad	2
	.quad	-4294967266
	.quad	ubwyZ_srtd


==================== Asm code ====================
2018-03-16 16:06:29.275954285 UTC

.section .data.rel.ro
.align 8
.align 1
ubwz0_srtd:
	.quad	SbuCr_srt+456
	.quad	46
	.quad	52776558133249


==================== Asm code ====================
2018-03-16 16:06:29.276717913 UTC

.section .text
.align 8
_cbwya:
_cbwya:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwyP
_cbwyO:
	leaq io_sbuql_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbwyT
_cbwyS:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbuql_entry
_cbwyT:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbwyP:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbwya, .-_cbwya


==================== Asm code ====================
2018-03-16 16:06:29.277982048 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwya_info:
	.quad	_cbwya
	.quad	2
	.quad	-4294967266
	.quad	ubwz0_srtd


==================== Asm code ====================
2018-03-16 16:06:29.28028455 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetBuffering_closure
.type GHC.IO.Handle.hGetBuffering_closure, @object
GHC.IO.Handle.hGetBuffering_closure:
	.quad	GHC.IO.Handle.hGetBuffering_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.280889883 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetBuffering_entry
.type GHC.IO.Handle.hGetBuffering_entry, @object
GHC.IO.Handle.hGetBuffering_entry:
_cbwAd:
	jmp GHC.IO.Handle.hGetBuffering1_entry
	.size GHC.IO.Handle.hGetBuffering_entry, .-GHC.IO.Handle.hGetBuffering_entry


==================== Asm code ====================
2018-03-16 16:06:29.281524197 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetBuffering_info
.type GHC.IO.Handle.hGetBuffering_info, @object
GHC.IO.Handle.hGetBuffering_info:
	.quad	GHC.IO.Handle.hGetBuffering_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbuCr_srt+824


==================== Asm code ====================
2018-03-16 16:06:29.283160921 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hIsWritable4_bytes
.type GHC.IO.Handle.hIsWritable4_bytes, @object
GHC.IO.Handle.hIsWritable4_bytes:
	.asciz "hIsWritable"


==================== Asm code ====================
2018-03-16 16:06:29.285634503 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsWritable3_closure
.type GHC.IO.Handle.hIsWritable3_closure, @object
GHC.IO.Handle.hIsWritable3_closure:
	.quad	GHC.IO.Handle.hIsWritable3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.286451771 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsWritable3_entry
.type GHC.IO.Handle.hIsWritable3_entry, @object
GHC.IO.Handle.hIsWritable3_entry:
_cbwAr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwAs
_cbwAt:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbwAq
_cbwAp:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hIsWritable4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbwAs:
	jmp *-16(%r13)
_cbwAq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hIsWritable3_entry, .-GHC.IO.Handle.hIsWritable3_entry


==================== Asm code ====================
2018-03-16 16:06:29.287137011 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsWritable3_info
.type GHC.IO.Handle.hIsWritable3_info, @object
GHC.IO.Handle.hIsWritable3_info:
	.quad	GHC.IO.Handle.hIsWritable3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:29.292880684 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsWritable2_closure
.type GHC.IO.Handle.hIsWritable2_closure, @object
GHC.IO.Handle.hIsWritable2_closure:
	.quad	GHC.IO.Handle.hIsWritable2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.293745474 UTC

.section .text
.align 8
sat_sbuqQ_entry:
_cbwB3:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwB4
_cbwB5:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbwAU_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbwAU
_cbwAV:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwB4:
	jmp *-16(%r13)
	.size sat_sbuqQ_entry, .-sat_sbuqQ_entry


==================== Asm code ====================
2018-03-16 16:06:29.294378367 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbuqQ_info:
	.quad	sat_sbuqQ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:29.295156403 UTC

.section .text
.align 8
_cbwAU:
_cbwAU:
	andl $7,%ebx
	cmpq $4,%rbx
	jb _cbwAY
_ubwBi:
	cmpq $5,%rbx
	jne _cbwB1
_cbwB1:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwAY:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbwAU, .-_cbwAU


==================== Asm code ====================
2018-03-16 16:06:29.295839817 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwAU_info:
	.quad	_cbwAU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.296412222 UTC

.section .data.rel.ro
.align 8
.align 1
ubwBG_srtd:
	.quad	SbuCr_srt+328
	.quad	64
	.quad	-9187343239835811839


==================== Asm code ====================
2018-03-16 16:06:29.297151306 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsWritable2_entry
.type GHC.IO.Handle.hIsWritable2_entry, @object
GHC.IO.Handle.hIsWritable2_entry:
_cbwBk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwBl
_cbwBm:
	leaq block_cbwAG_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbwAG
_cbwAH:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwBl:
	leaq GHC.IO.Handle.hIsWritable2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsWritable2_entry, .-GHC.IO.Handle.hIsWritable2_entry


==================== Asm code ====================
2018-03-16 16:06:29.297873454 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsWritable2_info
.type GHC.IO.Handle.hIsWritable2_info, @object
GHC.IO.Handle.hIsWritable2_info:
	.quad	GHC.IO.Handle.hIsWritable2_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934597
	.quad	ubwBG_srtd


==================== Asm code ====================
2018-03-16 16:06:29.298423606 UTC

.section .data.rel.ro
.align 8
.align 1
ubwBH_srtd:
	.quad	SbuCr_srt+328
	.quad	56
	.quad	36028797018963969


==================== Asm code ====================
2018-03-16 16:06:29.29911258 UTC

.section .text
.align 8
_cbwAG:
_cbwAG:
	leaq block_cbwAL_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 39(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbwAL
_cbwAM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwAG, .-_cbwAG


==================== Asm code ====================
2018-03-16 16:06:29.299698894 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwAG_info:
	.quad	_cbwAG
	.quad	0
	.quad	-4294967266
	.quad	ubwBH_srtd


==================== Asm code ====================
2018-03-16 16:06:29.300204624 UTC

.section .data.rel.ro
.align 8
.align 1
ubwBI_srtd:
	.quad	SbuCr_srt+328
	.quad	56
	.quad	36028797018963969


==================== Asm code ====================
2018-03-16 16:06:29.301009084 UTC

.section .text
.align 8
_cbwAL:
_cbwAL:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbwBx
_ubwBD:
	cmpq $2,%rax
	je _cbwBB
_cbwBq:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbwBt
_cbwBs:
	leaq sat_sbuqQ_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rbx,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwBB:
	addq $16,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry@gotpcrel(%rip)
_cbwBx:
	addq $16,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_closedHandle1_entry@gotpcrel(%rip)
_cbwBt:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwAL, .-_cbwAL


==================== Asm code ====================
2018-03-16 16:06:29.302177184 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwAL_info:
	.quad	_cbwAL
	.quad	1
	.quad	-4294967266
	.quad	ubwBI_srtd


==================== Asm code ====================
2018-03-16 16:06:29.308115345 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsWritable1_closure
.type GHC.IO.Handle.hIsWritable1_closure, @object
GHC.IO.Handle.hIsWritable1_closure:
	.quad	GHC.IO.Handle.hIsWritable1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.308703481 UTC

.section .data.rel.ro
.align 8
.align 1
ubwDb_srtd:
	.quad	SbuCr_srt+456
	.quad	49
	.quad	422212465065985


==================== Asm code ====================
2018-03-16 16:06:29.309504318 UTC

.section .text
.align 8
io_sbur2_entry:
_cbwCH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwCL
_cbwCM:
	leaq block_cbwCC_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	leaq GHC.IO.Handle.hIsWritable2_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	leaq GHC.IO.Handle.hIsWritable3_closure(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbwCL:
	jmp *-8(%r13)
	.size io_sbur2_entry, .-io_sbur2_entry


==================== Asm code ====================
2018-03-16 16:06:29.310158545 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbur2_info:
	.quad	io_sbur2_entry
	.quad	2
	.quad	-4294967285
	.quad	4294967299
	.quad	ubwDb_srtd


==================== Asm code ====================
2018-03-16 16:06:29.310817666 UTC

.section .text
.align 8
_cbwCC:
_cbwCC:
	leaq block_cbwCE_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbwCE
_cbwCF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwCC, .-_cbwCC


==================== Asm code ====================
2018-03-16 16:06:29.31140979 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwCC_info:
	.quad	_cbwCC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.312076224 UTC

.section .text
.align 8
_cbwCE:
_cbwCE:
	leaq block_cbwCK_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbwCE, .-_cbwCE


==================== Asm code ====================
2018-03-16 16:06:29.312642715 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwCE_info:
	.quad	_cbwCE
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.313223986 UTC

.section .text
.align 8
_cbwCK:
_cbwCK:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbwCK, .-_cbwCK


==================== Asm code ====================
2018-03-16 16:06:29.313807129 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwCK_info:
	.quad	_cbwCK
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.314363741 UTC

.section .data.rel.ro
.align 8
.align 1
ubwDc_srtd:
	.quad	SbuCr_srt+456
	.quad	50
	.quad	985162418487297


==================== Asm code ====================
2018-03-16 16:06:29.315731077 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsWritable1_entry
.type GHC.IO.Handle.hIsWritable1_entry, @object
GHC.IO.Handle.hIsWritable1_entry:
_cbwCW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwCX
_cbwCY:
	leaq block_cbwCq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbwCq
_cbwCr:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwCX:
	leaq GHC.IO.Handle.hIsWritable1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsWritable1_entry, .-GHC.IO.Handle.hIsWritable1_entry


==================== Asm code ====================
2018-03-16 16:06:29.316459315 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsWritable1_info
.type GHC.IO.Handle.hIsWritable1_info, @object
GHC.IO.Handle.hIsWritable1_info:
	.quad	GHC.IO.Handle.hIsWritable1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934597
	.quad	ubwDc_srtd


==================== Asm code ====================
2018-03-16 16:06:29.316985009 UTC

.section .data.rel.ro
.align 8
.align 1
ubwDd_srtd:
	.quad	SbuCr_srt+456
	.quad	49
	.quad	422212465065985


==================== Asm code ====================
2018-03-16 16:06:29.318298305 UTC

.section .text
.align 8
_cbwCq:
_cbwCq:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbwCT
_cbwCU:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwCT:
	leaq block_cbwCv_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _cbwCq, .-_cbwCq


==================== Asm code ====================
2018-03-16 16:06:29.318863444 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwCq_info:
	.quad	_cbwCq
	.quad	0
	.quad	-4294967266
	.quad	ubwDd_srtd


==================== Asm code ====================
2018-03-16 16:06:29.319412646 UTC

.section .data.rel.ro
.align 8
.align 1
ubwDe_srtd:
	.quad	SbuCr_srt+456
	.quad	49
	.quad	422212465065985


==================== Asm code ====================
2018-03-16 16:06:29.320185423 UTC

.section .text
.align 8
_cbwCv:
_cbwCv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwD2
_cbwD1:
	leaq io_sbur2_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbwD6
_cbwD5:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbur2_entry
_cbwD6:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbwD2:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbwCv, .-_cbwCv


==================== Asm code ====================
2018-03-16 16:06:29.320856542 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwCv_info:
	.quad	_cbwCv
	.quad	2
	.quad	-4294967266
	.quad	ubwDe_srtd


==================== Asm code ====================
2018-03-16 16:06:29.323085624 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsWritable_closure
.type GHC.IO.Handle.hIsWritable_closure, @object
GHC.IO.Handle.hIsWritable_closure:
	.quad	GHC.IO.Handle.hIsWritable_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.32369267 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsWritable_entry
.type GHC.IO.Handle.hIsWritable_entry, @object
GHC.IO.Handle.hIsWritable_entry:
_cbwE1:
	jmp GHC.IO.Handle.hIsWritable1_entry
	.size GHC.IO.Handle.hIsWritable_entry, .-GHC.IO.Handle.hIsWritable_entry


==================== Asm code ====================
2018-03-16 16:06:29.324232752 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsWritable_info
.type GHC.IO.Handle.hIsWritable_info, @object
GHC.IO.Handle.hIsWritable_info:
	.quad	GHC.IO.Handle.hIsWritable_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbuCr_srt+848


==================== Asm code ====================
2018-03-16 16:06:29.325938647 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hIsReadable4_bytes
.type GHC.IO.Handle.hIsReadable4_bytes, @object
GHC.IO.Handle.hIsReadable4_bytes:
	.asciz "hIsReadable"


==================== Asm code ====================
2018-03-16 16:06:29.328362493 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsReadable3_closure
.type GHC.IO.Handle.hIsReadable3_closure, @object
GHC.IO.Handle.hIsReadable3_closure:
	.quad	GHC.IO.Handle.hIsReadable3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.329211754 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsReadable3_entry
.type GHC.IO.Handle.hIsReadable3_entry, @object
GHC.IO.Handle.hIsReadable3_entry:
_cbwEf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwEg
_cbwEh:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbwEe
_cbwEd:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hIsReadable4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbwEg:
	jmp *-16(%r13)
_cbwEe:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hIsReadable3_entry, .-GHC.IO.Handle.hIsReadable3_entry


==================== Asm code ====================
2018-03-16 16:06:29.32997475 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsReadable3_info
.type GHC.IO.Handle.hIsReadable3_info, @object
GHC.IO.Handle.hIsReadable3_info:
	.quad	GHC.IO.Handle.hIsReadable3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:29.335521185 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsReadable2_closure
.type GHC.IO.Handle.hIsReadable2_closure, @object
GHC.IO.Handle.hIsReadable2_closure:
	.quad	GHC.IO.Handle.hIsReadable2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.336250189 UTC

.section .text
.align 8
sat_sburA_entry:
_cbwEQ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwER
_cbwES:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbwEI_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbwEI
_cbwEJ:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwER:
	jmp *-16(%r13)
	.size sat_sburA_entry, .-sat_sburA_entry


==================== Asm code ====================
2018-03-16 16:06:29.33688931 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sburA_info:
	.quad	sat_sburA_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:29.337638403 UTC

.section .text
.align 8
_cbwEI:
_cbwEI:
	andl $7,%ebx
	cmpq $3,%rbx
	je _cbwEO
_ubwF2:
	cmpq $6,%rbx
	je _cbwEO
_cbwEM:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwEO:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbwEI, .-_cbwEI


==================== Asm code ====================
2018-03-16 16:06:29.338271981 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwEI_info:
	.quad	_cbwEI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.338833628 UTC

.section .data.rel.ro
.align 8
.align 1
ubwFq_srtd:
	.quad	SbuCr_srt+328
	.quad	67
	.quad	36028797018963969
	.quad	4


==================== Asm code ====================
2018-03-16 16:06:29.33955182 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsReadable2_entry
.type GHC.IO.Handle.hIsReadable2_entry, @object
GHC.IO.Handle.hIsReadable2_entry:
_cbwF4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwF5
_cbwF6:
	leaq block_cbwEu_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbwEu
_cbwEv:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwF5:
	leaq GHC.IO.Handle.hIsReadable2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsReadable2_entry, .-GHC.IO.Handle.hIsReadable2_entry


==================== Asm code ====================
2018-03-16 16:06:29.340198809 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsReadable2_info
.type GHC.IO.Handle.hIsReadable2_info, @object
GHC.IO.Handle.hIsReadable2_info:
	.quad	GHC.IO.Handle.hIsReadable2_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934597
	.quad	ubwFq_srtd


==================== Asm code ====================
2018-03-16 16:06:29.340760945 UTC

.section .data.rel.ro
.align 8
.align 1
ubwFr_srtd:
	.quad	SbuCr_srt+328
	.quad	56
	.quad	36028797018963969


==================== Asm code ====================
2018-03-16 16:06:29.341454854 UTC

.section .text
.align 8
_cbwEu:
_cbwEu:
	leaq block_cbwEz_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 39(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbwEz
_cbwEA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwEu, .-_cbwEu


==================== Asm code ====================
2018-03-16 16:06:29.342049565 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwEu_info:
	.quad	_cbwEu
	.quad	0
	.quad	-4294967266
	.quad	ubwFr_srtd


==================== Asm code ====================
2018-03-16 16:06:29.342620519 UTC

.section .data.rel.ro
.align 8
.align 1
ubwFs_srtd:
	.quad	SbuCr_srt+328
	.quad	56
	.quad	36028797018963969


==================== Asm code ====================
2018-03-16 16:06:29.343419833 UTC

.section .text
.align 8
_cbwEz:
_cbwEz:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbwFh
_ubwFn:
	cmpq $2,%rax
	je _cbwFl
_cbwFa:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbwFd
_cbwFc:
	leaq sat_sburA_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rbx,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwFl:
	addq $16,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry@gotpcrel(%rip)
_cbwFh:
	addq $16,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_closedHandle1_entry@gotpcrel(%rip)
_cbwFd:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwEz, .-_cbwEz


==================== Asm code ====================
2018-03-16 16:06:29.344164742 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwEz_info:
	.quad	_cbwEz
	.quad	1
	.quad	-4294967266
	.quad	ubwFs_srtd


==================== Asm code ====================
2018-03-16 16:06:29.350424646 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsReadable1_closure
.type GHC.IO.Handle.hIsReadable1_closure, @object
GHC.IO.Handle.hIsReadable1_closure:
	.quad	GHC.IO.Handle.hIsReadable1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.351003741 UTC

.section .data.rel.ro
.align 8
.align 1
ubwGV_srtd:
	.quad	SbuCr_srt+456
	.quad	52
	.quad	3377699720527873


==================== Asm code ====================
2018-03-16 16:06:29.351794104 UTC

.section .text
.align 8
io_sburM_entry:
_cbwGr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwGv
_cbwGw:
	leaq block_cbwGm_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	leaq GHC.IO.Handle.hIsReadable2_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	leaq GHC.IO.Handle.hIsReadable3_closure(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbwGv:
	jmp *-8(%r13)
	.size io_sburM_entry, .-io_sburM_entry


==================== Asm code ====================
2018-03-16 16:06:29.353019569 UTC

.section .data.rel.ro
.align 8
.align 1
io_sburM_info:
	.quad	io_sburM_entry
	.quad	2
	.quad	-4294967285
	.quad	4294967299
	.quad	ubwGV_srtd


==================== Asm code ====================
2018-03-16 16:06:29.354105314 UTC

.section .text
.align 8
_cbwGm:
_cbwGm:
	leaq block_cbwGo_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbwGo
_cbwGp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwGm, .-_cbwGm


==================== Asm code ====================
2018-03-16 16:06:29.354715609 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwGm_info:
	.quad	_cbwGm
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.355325747 UTC

.section .text
.align 8
_cbwGo:
_cbwGo:
	leaq block_cbwGu_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbwGo, .-_cbwGo


==================== Asm code ====================
2018-03-16 16:06:29.355918854 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwGo_info:
	.quad	_cbwGo
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.356498761 UTC

.section .text
.align 8
_cbwGu:
_cbwGu:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbwGu, .-_cbwGu


==================== Asm code ====================
2018-03-16 16:06:29.35707343 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwGu_info:
	.quad	_cbwGu
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.35760737 UTC

.section .data.rel.ro
.align 8
.align 1
ubwGW_srtd:
	.quad	SbuCr_srt+456
	.quad	53
	.quad	7881299347898369


==================== Asm code ====================
2018-03-16 16:06:29.358341937 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsReadable1_entry
.type GHC.IO.Handle.hIsReadable1_entry, @object
GHC.IO.Handle.hIsReadable1_entry:
_cbwGG:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwGH
_cbwGI:
	leaq block_cbwGa_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbwGa
_cbwGb:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwGH:
	leaq GHC.IO.Handle.hIsReadable1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsReadable1_entry, .-GHC.IO.Handle.hIsReadable1_entry


==================== Asm code ====================
2018-03-16 16:06:29.359017936 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsReadable1_info
.type GHC.IO.Handle.hIsReadable1_info, @object
GHC.IO.Handle.hIsReadable1_info:
	.quad	GHC.IO.Handle.hIsReadable1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934597
	.quad	ubwGW_srtd


==================== Asm code ====================
2018-03-16 16:06:29.359581739 UTC

.section .data.rel.ro
.align 8
.align 1
ubwGX_srtd:
	.quad	SbuCr_srt+456
	.quad	52
	.quad	3377699720527873


==================== Asm code ====================
2018-03-16 16:06:29.360308013 UTC

.section .text
.align 8
_cbwGa:
_cbwGa:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbwGD
_cbwGE:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwGD:
	leaq block_cbwGf_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _cbwGa, .-_cbwGa


==================== Asm code ====================
2018-03-16 16:06:29.360960845 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwGa_info:
	.quad	_cbwGa
	.quad	0
	.quad	-4294967266
	.quad	ubwGX_srtd


==================== Asm code ====================
2018-03-16 16:06:29.361587515 UTC

.section .data.rel.ro
.align 8
.align 1
ubwGY_srtd:
	.quad	SbuCr_srt+456
	.quad	52
	.quad	3377699720527873


==================== Asm code ====================
2018-03-16 16:06:29.362332442 UTC

.section .text
.align 8
_cbwGf:
_cbwGf:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwGM
_cbwGL:
	leaq io_sburM_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbwGQ
_cbwGP:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sburM_entry
_cbwGQ:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbwGM:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbwGf, .-_cbwGf


==================== Asm code ====================
2018-03-16 16:06:29.362971006 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwGf_info:
	.quad	_cbwGf
	.quad	2
	.quad	-4294967266
	.quad	ubwGY_srtd


==================== Asm code ====================
2018-03-16 16:06:29.365188794 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsReadable_closure
.type GHC.IO.Handle.hIsReadable_closure, @object
GHC.IO.Handle.hIsReadable_closure:
	.quad	GHC.IO.Handle.hIsReadable_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.365931947 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsReadable_entry
.type GHC.IO.Handle.hIsReadable_entry, @object
GHC.IO.Handle.hIsReadable_entry:
_cbwHL:
	jmp GHC.IO.Handle.hIsReadable1_entry
	.size GHC.IO.Handle.hIsReadable_entry, .-GHC.IO.Handle.hIsReadable_entry


==================== Asm code ====================
2018-03-16 16:06:29.366495912 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsReadable_info
.type GHC.IO.Handle.hIsReadable_info, @object
GHC.IO.Handle.hIsReadable_info:
	.quad	GHC.IO.Handle.hIsReadable_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbuCr_srt+872


==================== Asm code ====================
2018-03-16 16:06:29.368106018 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hIsClosed4_bytes
.type GHC.IO.Handle.hIsClosed4_bytes, @object
GHC.IO.Handle.hIsClosed4_bytes:
	.asciz "hIsClosed"


==================== Asm code ====================
2018-03-16 16:06:29.370652944 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsClosed3_closure
.type GHC.IO.Handle.hIsClosed3_closure, @object
GHC.IO.Handle.hIsClosed3_closure:
	.quad	GHC.IO.Handle.hIsClosed3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.371450903 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsClosed3_entry
.type GHC.IO.Handle.hIsClosed3_entry, @object
GHC.IO.Handle.hIsClosed3_entry:
_cbwHZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwI0
_cbwI1:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbwHY
_cbwHX:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hIsClosed4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbwI0:
	jmp *-16(%r13)
_cbwHY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hIsClosed3_entry, .-GHC.IO.Handle.hIsClosed3_entry


==================== Asm code ====================
2018-03-16 16:06:29.372130786 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsClosed3_info
.type GHC.IO.Handle.hIsClosed3_info, @object
GHC.IO.Handle.hIsClosed3_info:
	.quad	GHC.IO.Handle.hIsClosed3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:29.375996797 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsClosed2_closure
.type GHC.IO.Handle.hIsClosed2_closure, @object
GHC.IO.Handle.hIsClosed2_closure:
	.quad	GHC.IO.Handle.hIsClosed2_info


==================== Asm code ====================
2018-03-16 16:06:29.376737604 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsClosed2_entry
.type GHC.IO.Handle.hIsClosed2_entry, @object
GHC.IO.Handle.hIsClosed2_entry:
_cbwIh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwIi
_cbwIj:
	leaq block_cbwIe_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbwIe
_cbwIf:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwIi:
	leaq GHC.IO.Handle.hIsClosed2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsClosed2_entry, .-GHC.IO.Handle.hIsClosed2_entry


==================== Asm code ====================
2018-03-16 16:06:29.377748692 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsClosed2_info
.type GHC.IO.Handle.hIsClosed2_info, @object
GHC.IO.Handle.hIsClosed2_info:
	.quad	GHC.IO.Handle.hIsClosed2_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:06:29.378419073 UTC

.section .text
.align 8
_cbwIe:
_cbwIe:
	leaq block_cbwIm_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 39(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbwIm
_cbwIo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwIe, .-_cbwIe


==================== Asm code ====================
2018-03-16 16:06:29.379015258 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwIe_info:
	.quad	_cbwIe
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.379881971 UTC

.section .text
.align 8
_cbwIm:
_cbwIm:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbwIB
_cbwIu:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwIE
_cbwIw:
	movq (,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwIE:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbwIB:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwIE
_cbwID:
	movq (,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbwIm, .-_cbwIm


==================== Asm code ====================
2018-03-16 16:06:29.380661565 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwIm_info:
	.quad	_cbwIm
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.388503977 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsClosed1_closure
.type GHC.IO.Handle.hIsClosed1_closure, @object
GHC.IO.Handle.hIsClosed1_closure:
	.quad	GHC.IO.Handle.hIsClosed1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.389319177 UTC

.section .text
.align 8
io_sbust_entry:
_cbwJs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwJw
_cbwJx:
	leaq block_cbwJn_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	leaq GHC.IO.Handle.hIsClosed2_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	leaq GHC.IO.Handle.hIsClosed3_closure(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbwJw:
	jmp *-8(%r13)
	.size io_sbust_entry, .-io_sbust_entry


==================== Asm code ====================
2018-03-16 16:06:29.390069155 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbust_info:
	.quad	io_sbust_entry
	.quad	2
	.quad	12884901899
	.quad	4294967299
	.quad	SbuCr_srt+880


==================== Asm code ====================
2018-03-16 16:06:29.391323243 UTC

.section .text
.align 8
_cbwJn:
_cbwJn:
	leaq block_cbwJp_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbwJp
_cbwJq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwJn, .-_cbwJn


==================== Asm code ====================
2018-03-16 16:06:29.391985196 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwJn_info:
	.quad	_cbwJn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.392608043 UTC

.section .text
.align 8
_cbwJp:
_cbwJp:
	leaq block_cbwJv_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbwJp, .-_cbwJp


==================== Asm code ====================
2018-03-16 16:06:29.393218869 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwJp_info:
	.quad	_cbwJp
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.394142399 UTC

.section .text
.align 8
_cbwJv:
_cbwJv:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbwJv, .-_cbwJv


==================== Asm code ====================
2018-03-16 16:06:29.394726647 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwJv_info:
	.quad	_cbwJv
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.395429913 UTC

.section .text
.align 8
io_sbusJ_entry:
_cbwJR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwJV
_cbwJW:
	leaq block_cbwJM_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	leaq GHC.IO.Handle.hIsClosed2_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	leaq GHC.IO.Handle.hIsClosed3_closure(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbwJV:
	jmp *-8(%r13)
	.size io_sbusJ_entry, .-io_sbusJ_entry


==================== Asm code ====================
2018-03-16 16:06:29.396116523 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbusJ_info:
	.quad	io_sbusJ_entry
	.quad	2
	.quad	12884901899
	.quad	4294967299
	.quad	SbuCr_srt+880


==================== Asm code ====================
2018-03-16 16:06:29.396772837 UTC

.section .text
.align 8
_cbwJM:
_cbwJM:
	leaq block_cbwJO_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbwJO
_cbwJP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwJM, .-_cbwJM


==================== Asm code ====================
2018-03-16 16:06:29.397400655 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwJM_info:
	.quad	_cbwJM
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.398061898 UTC

.section .text
.align 8
_cbwJO:
_cbwJO:
	leaq block_cbwJU_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbwJO, .-_cbwJO


==================== Asm code ====================
2018-03-16 16:06:29.398625832 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwJO_info:
	.quad	_cbwJO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.399171174 UTC

.section .text
.align 8
_cbwJU:
_cbwJU:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbwJU, .-_cbwJU


==================== Asm code ====================
2018-03-16 16:06:29.399716786 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwJU_info:
	.quad	_cbwJU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.400474252 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsClosed1_entry
.type GHC.IO.Handle.hIsClosed1_entry, @object
GHC.IO.Handle.hIsClosed1_entry:
_cbwK6:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwK7
_cbwK8:
	leaq block_cbwJb_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbwJb
_cbwJc:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwK7:
	leaq GHC.IO.Handle.hIsClosed1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsClosed1_entry, .-GHC.IO.Handle.hIsClosed1_entry


==================== Asm code ====================
2018-03-16 16:06:29.401116633 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsClosed1_info
.type GHC.IO.Handle.hIsClosed1_info, @object
GHC.IO.Handle.hIsClosed1_info:
	.quad	GHC.IO.Handle.hIsClosed1_entry
	.quad	0
	.quad	30064771086
	.quad	8589934597
	.quad	SbuCr_srt+880


==================== Asm code ====================
2018-03-16 16:06:29.401945873 UTC

.section .text
.align 8
_cbwJb:
_cbwJb:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbwK3
_cbwK4:
	leaq block_cbwJF_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_cbwK3:
	leaq block_cbwJg_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _cbwJb, .-_cbwJb


==================== Asm code ====================
2018-03-16 16:06:29.402641774 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwJb_info:
	.quad	_cbwJb
	.quad	0
	.quad	12884901918
	.quad	SbuCr_srt+880


==================== Asm code ====================
2018-03-16 16:06:29.403413767 UTC

.section .text
.align 8
_cbwJg:
_cbwJg:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwKc
_cbwKb:
	leaq io_sbust_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbwKg
_cbwKf:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbust_entry
_cbwKg:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbwKc:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbwJg, .-_cbwJg


==================== Asm code ====================
2018-03-16 16:06:29.404098082 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwJg_info:
	.quad	_cbwJg
	.quad	2
	.quad	12884901918
	.quad	SbuCr_srt+880


==================== Asm code ====================
2018-03-16 16:06:29.404886456 UTC

.section .text
.align 8
_cbwJF:
_cbwJF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwKk
_cbwKj:
	leaq io_sbusJ_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbwKo
_cbwKn:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbusJ_entry
_cbwKo:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbwKk:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbwJF, .-_cbwJF


==================== Asm code ====================
2018-03-16 16:06:29.405941469 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwJF_info:
	.quad	_cbwJF
	.quad	2
	.quad	12884901918
	.quad	SbuCr_srt+880


==================== Asm code ====================
2018-03-16 16:06:29.408197921 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsClosed_closure
.type GHC.IO.Handle.hIsClosed_closure, @object
GHC.IO.Handle.hIsClosed_closure:
	.quad	GHC.IO.Handle.hIsClosed_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.408790743 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsClosed_entry
.type GHC.IO.Handle.hIsClosed_entry, @object
GHC.IO.Handle.hIsClosed_entry:
_cbwLw:
	jmp GHC.IO.Handle.hIsClosed1_entry
	.size GHC.IO.Handle.hIsClosed_entry, .-GHC.IO.Handle.hIsClosed_entry


==================== Asm code ====================
2018-03-16 16:06:29.409443202 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsClosed_info
.type GHC.IO.Handle.hIsClosed_info, @object
GHC.IO.Handle.hIsClosed_info:
	.quad	GHC.IO.Handle.hIsClosed_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbuCr_srt+896


==================== Asm code ====================
2018-03-16 16:06:29.411100535 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hIsOpen4_bytes
.type GHC.IO.Handle.hIsOpen4_bytes, @object
GHC.IO.Handle.hIsOpen4_bytes:
	.asciz "hIsOpen"


==================== Asm code ====================
2018-03-16 16:06:29.413645166 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsOpen3_closure
.type GHC.IO.Handle.hIsOpen3_closure, @object
GHC.IO.Handle.hIsOpen3_closure:
	.quad	GHC.IO.Handle.hIsOpen3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.414478304 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsOpen3_entry
.type GHC.IO.Handle.hIsOpen3_entry, @object
GHC.IO.Handle.hIsOpen3_entry:
_cbwLK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwLL
_cbwLM:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbwLJ
_cbwLI:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hIsOpen4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbwLL:
	jmp *-16(%r13)
_cbwLJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hIsOpen3_entry, .-GHC.IO.Handle.hIsOpen3_entry


==================== Asm code ====================
2018-03-16 16:06:29.415114024 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsOpen3_info
.type GHC.IO.Handle.hIsOpen3_info, @object
GHC.IO.Handle.hIsOpen3_info:
	.quad	GHC.IO.Handle.hIsOpen3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:29.419668519 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsOpen2_closure
.type GHC.IO.Handle.hIsOpen2_closure, @object
GHC.IO.Handle.hIsOpen2_closure:
	.quad	GHC.IO.Handle.hIsOpen2_info


==================== Asm code ====================
2018-03-16 16:06:29.420453541 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsOpen2_entry
.type GHC.IO.Handle.hIsOpen2_entry, @object
GHC.IO.Handle.hIsOpen2_entry:
_cbwM2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwM3
_cbwM4:
	leaq block_cbwLZ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbwLZ
_cbwM0:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwM3:
	leaq GHC.IO.Handle.hIsOpen2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsOpen2_entry, .-GHC.IO.Handle.hIsOpen2_entry


==================== Asm code ====================
2018-03-16 16:06:29.421127034 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsOpen2_info
.type GHC.IO.Handle.hIsOpen2_info, @object
GHC.IO.Handle.hIsOpen2_info:
	.quad	GHC.IO.Handle.hIsOpen2_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:06:29.421952405 UTC

.section .text
.align 8
_cbwLZ:
_cbwLZ:
	leaq block_cbwM7_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 39(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbwM7
_cbwM9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwLZ, .-_cbwLZ


==================== Asm code ====================
2018-03-16 16:06:29.422557869 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwLZ_info:
	.quad	_cbwLZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.423474145 UTC

.section .text
.align 8
_cbwM7:
_cbwM7:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbwMm
_ubwMy:
	cmpq $2,%rcx
	je _cbwMt
_cbwMf:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwMw
_cbwMh:
	movq (,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwMw:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbwMt:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwMw
_cbwMv:
	movq (,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwMm:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwMw
_cbwMo:
	movq (,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbwM7, .-_cbwM7


==================== Asm code ====================
2018-03-16 16:06:29.4248651 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwM7_info:
	.quad	_cbwM7
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.433014558 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsOpen1_closure
.type GHC.IO.Handle.hIsOpen1_closure, @object
GHC.IO.Handle.hIsOpen1_closure:
	.quad	GHC.IO.Handle.hIsOpen1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.433875945 UTC

.section .text
.align 8
io_sbuto_entry:
_cbwNo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwNs
_cbwNt:
	leaq block_cbwNj_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	leaq GHC.IO.Handle.hIsOpen2_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	leaq GHC.IO.Handle.hIsOpen3_closure(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbwNs:
	jmp *-8(%r13)
	.size io_sbuto_entry, .-io_sbuto_entry


==================== Asm code ====================
2018-03-16 16:06:29.434541823 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbuto_info:
	.quad	io_sbuto_entry
	.quad	2
	.quad	21474836491
	.quad	4294967299
	.quad	SbuCr_srt+888


==================== Asm code ====================
2018-03-16 16:06:29.435189007 UTC

.section .text
.align 8
_cbwNj:
_cbwNj:
	leaq block_cbwNl_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbwNl
_cbwNm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwNj, .-_cbwNj


==================== Asm code ====================
2018-03-16 16:06:29.435792377 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwNj_info:
	.quad	_cbwNj
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.43643684 UTC

.section .text
.align 8
_cbwNl:
_cbwNl:
	leaq block_cbwNr_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbwNl, .-_cbwNl


==================== Asm code ====================
2018-03-16 16:06:29.436995494 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwNl_info:
	.quad	_cbwNl
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.437643354 UTC

.section .text
.align 8
_cbwNr:
_cbwNr:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbwNr, .-_cbwNr


==================== Asm code ====================
2018-03-16 16:06:29.438213109 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwNr_info:
	.quad	_cbwNr
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.438931545 UTC

.section .text
.align 8
io_sbutE_entry:
_cbwNN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwNR
_cbwNS:
	leaq block_cbwNI_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%r8
	leaq GHC.IO.Handle.hIsOpen2_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	leaq GHC.IO.Handle.hIsOpen3_closure(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbwNR:
	jmp *-8(%r13)
	.size io_sbutE_entry, .-io_sbutE_entry


==================== Asm code ====================
2018-03-16 16:06:29.439572434 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbutE_info:
	.quad	io_sbutE_entry
	.quad	2
	.quad	21474836491
	.quad	4294967299
	.quad	SbuCr_srt+888


==================== Asm code ====================
2018-03-16 16:06:29.4402377 UTC

.section .text
.align 8
_cbwNI:
_cbwNI:
	leaq block_cbwNK_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbwNK
_cbwNL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwNI, .-_cbwNI


==================== Asm code ====================
2018-03-16 16:06:29.440823971 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwNI_info:
	.quad	_cbwNI
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.441668893 UTC

.section .text
.align 8
_cbwNK:
_cbwNK:
	leaq block_cbwNQ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbwNK, .-_cbwNK


==================== Asm code ====================
2018-03-16 16:06:29.442259614 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwNK_info:
	.quad	_cbwNK
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.442874579 UTC

.section .text
.align 8
_cbwNQ:
_cbwNQ:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbwNQ, .-_cbwNQ


==================== Asm code ====================
2018-03-16 16:06:29.443457532 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwNQ_info:
	.quad	_cbwNQ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.444184813 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsOpen1_entry
.type GHC.IO.Handle.hIsOpen1_entry, @object
GHC.IO.Handle.hIsOpen1_entry:
_cbwO2:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwO3
_cbwO4:
	leaq block_cbwN7_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbwN7
_cbwN8:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwO3:
	leaq GHC.IO.Handle.hIsOpen1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hIsOpen1_entry, .-GHC.IO.Handle.hIsOpen1_entry


==================== Asm code ====================
2018-03-16 16:06:29.444850612 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsOpen1_info
.type GHC.IO.Handle.hIsOpen1_info, @object
GHC.IO.Handle.hIsOpen1_info:
	.quad	GHC.IO.Handle.hIsOpen1_entry
	.quad	0
	.quad	55834574862
	.quad	8589934597
	.quad	SbuCr_srt+888


==================== Asm code ====================
2018-03-16 16:06:29.445604266 UTC

.section .text
.align 8
_cbwN7:
_cbwN7:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbwNZ
_cbwO0:
	leaq block_cbwNB_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_cbwNZ:
	leaq block_cbwNc_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _cbwN7, .-_cbwN7


==================== Asm code ====================
2018-03-16 16:06:29.446254602 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwN7_info:
	.quad	_cbwN7
	.quad	0
	.quad	21474836510
	.quad	SbuCr_srt+888


==================== Asm code ====================
2018-03-16 16:06:29.447015563 UTC

.section .text
.align 8
_cbwNc:
_cbwNc:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwO8
_cbwO7:
	leaq io_sbuto_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbwOc
_cbwOb:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbuto_entry
_cbwOc:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbwO8:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbwNc, .-_cbwNc


==================== Asm code ====================
2018-03-16 16:06:29.447726984 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwNc_info:
	.quad	_cbwNc
	.quad	2
	.quad	21474836510
	.quad	SbuCr_srt+888


==================== Asm code ====================
2018-03-16 16:06:29.448477256 UTC

.section .text
.align 8
_cbwNB:
_cbwNB:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwOg
_cbwOf:
	leaq io_sbutE_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rax
	testq %rbx,%rbx
	je _cbwOk
_cbwOj:
	movq %rax,%rbx
	addq $24,%rbp
	jmp io_sbutE_entry
_cbwOk:
	movq %rax,%rbx
	addq $24,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbwOg:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbwNB, .-_cbwNB


==================== Asm code ====================
2018-03-16 16:06:29.449171184 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwNB_info:
	.quad	_cbwNB
	.quad	2
	.quad	21474836510
	.quad	SbuCr_srt+888


==================== Asm code ====================
2018-03-16 16:06:29.45142171 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hIsOpen_closure
.type GHC.IO.Handle.hIsOpen_closure, @object
GHC.IO.Handle.hIsOpen_closure:
	.quad	GHC.IO.Handle.hIsOpen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.452034408 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hIsOpen_entry
.type GHC.IO.Handle.hIsOpen_entry, @object
GHC.IO.Handle.hIsOpen_entry:
_cbwPs:
	jmp GHC.IO.Handle.hIsOpen1_entry
	.size GHC.IO.Handle.hIsOpen_entry, .-GHC.IO.Handle.hIsOpen_entry


==================== Asm code ====================
2018-03-16 16:06:29.4526066 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hIsOpen_info
.type GHC.IO.Handle.hIsOpen_info, @object
GHC.IO.Handle.hIsOpen_info:
	.quad	GHC.IO.Handle.hIsOpen_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbuCr_srt+912


==================== Asm code ====================
2018-03-16 16:06:29.455559708 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetPosn1_closure
.type GHC.IO.Handle.hGetPosn1_closure, @object
GHC.IO.Handle.hGetPosn1_closure:
	.quad	GHC.IO.Handle.hGetPosn1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.456295542 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetPosn1_entry
.type GHC.IO.Handle.hGetPosn1_entry, @object
GHC.IO.Handle.hGetPosn1_entry:
_cbwPG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwPH
_cbwPI:
	leaq block_cbwPD_info(%rip),%rax
	movq %rax,-16(%rbp)
	leaq GHC.IO.Handle.hGetPosn2_closure+2(%rip),%rdi
	movq %r14,%rsi
	movq %r14,%rax
	leaq GHC.IO.Handle.hGetPosn3_closure(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.wantSeekableHandle1_entry@gotpcrel(%rip)
_cbwPH:
	leaq GHC.IO.Handle.hGetPosn1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hGetPosn1_entry, .-GHC.IO.Handle.hGetPosn1_entry


==================== Asm code ====================
2018-03-16 16:06:29.456965115 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetPosn1_info
.type GHC.IO.Handle.hGetPosn1_info, @object
GHC.IO.Handle.hGetPosn1_info:
	.quad	GHC.IO.Handle.hGetPosn1_entry
	.quad	0
	.quad	64424509454
	.quad	8589934597
	.quad	SbuCr_srt+920


==================== Asm code ====================
2018-03-16 16:06:29.4579823 UTC

.section .text
.align 8
_cbwPD:
_cbwPD:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwPL
_cbwPK:
	leaq GHC.IO.Handle.HandlePosn_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwPL:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwPD, .-_cbwPD


==================== Asm code ====================
2018-03-16 16:06:29.458583425 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwPD_info:
	.quad	_cbwPD
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.461058017 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hGetPosn_closure
.type GHC.IO.Handle.hGetPosn_closure, @object
GHC.IO.Handle.hGetPosn_closure:
	.quad	GHC.IO.Handle.hGetPosn_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.461749069 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hGetPosn_entry
.type GHC.IO.Handle.hGetPosn_entry, @object
GHC.IO.Handle.hGetPosn_entry:
_cbwQ2:
	jmp GHC.IO.Handle.hGetPosn1_entry
	.size GHC.IO.Handle.hGetPosn_entry, .-GHC.IO.Handle.hGetPosn_entry


==================== Asm code ====================
2018-03-16 16:06:29.462359396 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hGetPosn_info
.type GHC.IO.Handle.hGetPosn_info, @object
GHC.IO.Handle.hGetPosn_info:
	.quad	GHC.IO.Handle.hGetPosn_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbuCr_srt+920


==================== Asm code ====================
2018-03-16 16:06:29.463988212 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.hClose3_bytes
.type GHC.IO.Handle.hClose3_bytes, @object
GHC.IO.Handle.hClose3_bytes:
	.asciz "hClose"


==================== Asm code ====================
2018-03-16 16:06:29.466425919 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hClose2_closure
.type GHC.IO.Handle.hClose2_closure, @object
GHC.IO.Handle.hClose2_closure:
	.quad	GHC.IO.Handle.hClose2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.467278653 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hClose2_entry
.type GHC.IO.Handle.hClose2_entry, @object
GHC.IO.Handle.hClose2_entry:
_cbwQg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwQh
_cbwQi:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbwQf
_cbwQe:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.hClose3_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbwQh:
	jmp *-16(%r13)
_cbwQf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.hClose2_entry, .-GHC.IO.Handle.hClose2_entry


==================== Asm code ====================
2018-03-16 16:06:29.467969234 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hClose2_info
.type GHC.IO.Handle.hClose2_info, @object
GHC.IO.Handle.hClose2_info:
	.quad	GHC.IO.Handle.hClose2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:29.474039659 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.$wlvl_closure
.type GHC.IO.Handle.$wlvl_closure, @object
GHC.IO.Handle.$wlvl_closure:
	.quad	GHC.IO.Handle.$wlvl_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.474815422 UTC

.section .text
.align 8
sat_sbuu9_entry:
_cbwQK:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwQL
_cbwQM:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbwQD_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbwQD
_cbwQE:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwQL:
	jmp *-16(%r13)
	.size sat_sbuu9_entry, .-sat_sbuu9_entry


==================== Asm code ====================
2018-03-16 16:06:29.475457661 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbuu9_info:
	.quad	sat_sbuu9_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:06:29.476216373 UTC

.section .text
.align 8
_cbwQD:
_cbwQD:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbwQH
_cbwQI:
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cbwQH:
	movq 8(%rbp),%rax
	leaq block_cbwQP_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cbwQP
_cbwQR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwQD, .-_cbwQD


==================== Asm code ====================
2018-03-16 16:06:29.476839873 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwQD_info:
	.quad	_cbwQD
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.478091368 UTC

.section .text
.align 8
_cbwQP:
_cbwQP:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbwQX
_cbwR4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbwR7
_cbwR6:
	movq 6(%rbx),%rax
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwR7:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbwQX:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbwR7
_cbwQZ:
	movq 7(%rbx),%rax
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbwQP, .-_cbwQP


==================== Asm code ====================
2018-03-16 16:06:29.478795321 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwQP_info:
	.quad	_cbwQP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.479652091 UTC

.section .text
.align 8
sat_sbuub_entry:
_cbwRg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwRh
_cbwRi:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cbwRk
_cbwRj:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	leaq sat_sbuu9_info(%rip),%rdi
	movq %rdi,-96(%r12)
	movq %rax,-80(%r12)
	movq %rbx,-72(%r12)
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq GHC.IO.Exception.IOError_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -62(%r12),%rax
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	leaq GHC.IO.Handle.hClose2_closure(%rip),%rax
	movq %rax,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cbwRk:
	movq $104,904(%r13)
_cbwRh:
	jmp *-16(%r13)
	.size sat_sbuub_entry, .-sat_sbuub_entry


==================== Asm code ====================
2018-03-16 16:06:29.48045133 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbuub_info:
	.quad	sat_sbuub_entry
	.quad	5
	.quad	12884901903
	.quad	SbuCr_srt+952


==================== Asm code ====================
2018-03-16 16:06:29.481159807 UTC

.section .text
.align 8
.globl GHC.IO.Handle.$wlvl_entry
.type GHC.IO.Handle.$wlvl_entry, @object
GHC.IO.Handle.$wlvl_entry:
_cbwRl:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbwRp
_cbwRo:
	leaq sat_sbuub_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-32(%r12)
	movq %rsi,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %r9,(%r12)
	leaq -48(%r12),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
_cbwRp:
	movq $56,904(%r13)
	leaq GHC.IO.Handle.$wlvl_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.$wlvl_entry, .-GHC.IO.Handle.$wlvl_entry


==================== Asm code ====================
2018-03-16 16:06:29.481853733 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.$wlvl_info
.type GHC.IO.Handle.$wlvl_info, @object
GHC.IO.Handle.$wlvl_info:
	.quad	GHC.IO.Handle.$wlvl_entry
	.quad	0
	.quad	30064771086
	.quad	25769803801
	.quad	SbuCr_srt+952


==================== Asm code ====================
2018-03-16 16:06:29.492428352 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hClose1_closure
.type GHC.IO.Handle.hClose1_closure, @object
GHC.IO.Handle.hClose1_closure:
	.quad	GHC.IO.Handle.hClose1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.492942126 UTC

.section .data.rel.ro
.align 8
.align 1
ubwU3_srtd:
	.quad	SbuCr_srt+240
	.quad	94
	.quad	54043195528445953
	.quad	973078528


==================== Asm code ====================
2018-03-16 16:06:29.493764467 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hClose1_entry
.type GHC.IO.Handle.hClose1_entry, @object
GHC.IO.Handle.hClose1_entry:
_cbwSg:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwSh
_cbwSi:
	leaq block_cbwS9_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbwS9
_cbwSa:
	movq (%rbx),%rax
	jmp *(%rax)
_cbwSh:
	leaq GHC.IO.Handle.hClose1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hClose1_entry, .-GHC.IO.Handle.hClose1_entry


==================== Asm code ====================
2018-03-16 16:06:29.494406996 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hClose1_info
.type GHC.IO.Handle.hClose1_info, @object
GHC.IO.Handle.hClose1_info:
	.quad	GHC.IO.Handle.hClose1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934597
	.quad	ubwU3_srtd


==================== Asm code ====================
2018-03-16 16:06:29.494926858 UTC

.section .data.rel.ro
.align 8
.align 1
ubwU4_srtd:
	.quad	SbuCr_srt+240
	.quad	93
	.quad	54043195528445953
	.quad	436207616


==================== Asm code ====================
2018-03-16 16:06:29.495717523 UTC

.section .text
.align 8
_cbwS9:
_cbwS9:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbwSd
_cbwSe:
	leaq block_cbwT4_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq GHC.IO.Handle.Internals.hClose_help1_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r8
	movq 14(%rbx),%rdi
	movq %rbx,%rsi
	leaq GHC.IO.Handle.hClose2_closure(%rip),%r14
	movq 22(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wwithHandle'_entry@gotpcrel(%rip)
_cbwSd:
	leaq block_cbwSl_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq GHC.IO.Handle.Internals.hClose_help1_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r8
	movq 15(%rbx),%rdi
	movq %rbx,%rsi
	leaq GHC.IO.Handle.hClose2_closure(%rip),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.IO.Handle.Internals.$wwithHandle'_entry@gotpcrel(%rip)
	.size _cbwS9, .-_cbwS9


==================== Asm code ====================
2018-03-16 16:06:29.496432032 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwS9_info:
	.quad	_cbwS9
	.quad	0
	.quad	-4294967266
	.quad	ubwU4_srtd


==================== Asm code ====================
2018-03-16 16:06:29.496949924 UTC

.section .data.rel.ro
.align 8
.align 1
ubwU5_srtd:
	.quad	SbuCr_srt+240
	.quad	93
	.quad	1
	.quad	402653184


==================== Asm code ====================
2018-03-16 16:06:29.497611509 UTC

.section .text
.align 8
_cbwSl:
_cbwSl:
	leaq block_cbwSn_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbwSn
_cbwSq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwSl, .-_cbwSl


==================== Asm code ====================
2018-03-16 16:06:29.49818818 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwSl_info:
	.quad	_cbwSl
	.quad	1
	.quad	-4294967266
	.quad	ubwU5_srtd


==================== Asm code ====================
2018-03-16 16:06:29.498720295 UTC

.section .data.rel.ro
.align 8
.align 1
ubwU6_srtd:
	.quad	SbuCr_srt+240
	.quad	93
	.quad	1
	.quad	402653184


==================== Asm code ====================
2018-03-16 16:06:29.499423706 UTC

.section .text
.align 8
_cbwSn:
_cbwSn:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubwTW
_cbwSG:
	leaq block_cbwSz_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbwSz
_cbwSA:
	movq (%rbx),%rax
	jmp *(%rax)
_ubwTW:
	addq $16,%rbp
	jmp _cbwTl
	.size _cbwSn, .-_cbwSn


==================== Asm code ====================
2018-03-16 16:06:29.500036206 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwSn_info:
	.quad	_cbwSn
	.quad	1
	.quad	-4294967266
	.quad	ubwU6_srtd


==================== Asm code ====================
2018-03-16 16:06:29.500572837 UTC

.section .data.rel.ro
.align 8
.align 1
ubwU7_srtd:
	.quad	SbuCr_srt+240
	.quad	93
	.quad	1
	.quad	402653184


==================== Asm code ====================
2018-03-16 16:06:29.501213709 UTC

.section .text
.align 8
_cbwSz:
_cbwSz:
	leaq block_cbwSE_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Exception.$p1Exception_entry@gotpcrel(%rip)
	.size _cbwSz, .-_cbwSz


==================== Asm code ====================
2018-03-16 16:06:29.502072558 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwSz_info:
	.quad	_cbwSz
	.quad	1
	.quad	-4294967266
	.quad	ubwU7_srtd


==================== Asm code ====================
2018-03-16 16:06:29.502572624 UTC

.section .data.rel.ro
.align 8
.align 1
ubwU8_srtd:
	.quad	SbuCr_srt+240
	.quad	93
	.quad	1
	.quad	402653184


==================== Asm code ====================
2018-03-16 16:06:29.503816399 UTC

.section .text
.align 8
_cbwSE:
_cbwSE:
	leaq block_cbwSL_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.IO.Exception.$fExceptionIOException4_closure@gotpcrel(%rip),%rsi
	movq %rbx,%r14
	jmp *Data.Typeable.Internal.sameTypeRep_entry@gotpcrel(%rip)
	.size _cbwSE, .-_cbwSE


==================== Asm code ====================
2018-03-16 16:06:29.504474623 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwSE_info:
	.quad	_cbwSE
	.quad	3
	.quad	-4294967266
	.quad	ubwU8_srtd


==================== Asm code ====================
2018-03-16 16:06:29.505187383 UTC

.section .text
.align 8
_cbwSL:
_cbwSL:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbwSS
_cbwSX:
	leaq block_cbwSV_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_cbwSS:
	movq 16(%rbp),%rbx
	addq $32,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _cbwSL, .-_cbwSL


==================== Asm code ====================
2018-03-16 16:06:29.50584237 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwSL_info:
	.quad	_cbwSL
	.quad	3
	.quad	4294967326
	.quad	SbuCr_srt+968


==================== Asm code ====================
2018-03-16 16:06:29.506466935 UTC

.section .text
.align 8
_cbwSV:
_cbwSV:
	movq 47(%rbx),%r9
	movq 39(%rbx),%r8
	movq 31(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.$wlvl_entry
	.size _cbwSV, .-_cbwSV


==================== Asm code ====================
2018-03-16 16:06:29.507044657 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwSV_info:
	.quad	_cbwSV
	.quad	1
	.quad	4294967326
	.quad	SbuCr_srt+968


==================== Asm code ====================
2018-03-16 16:06:29.507555406 UTC

.section .data.rel.ro
.align 8
.align 1
ubwU9_srtd:
	.quad	SbuCr_srt+240
	.quad	93
	.quad	54043195528445953
	.quad	436207616


==================== Asm code ====================
2018-03-16 16:06:29.508190132 UTC

.section .text
.align 8
_cbwT4:
_cbwT4:
	leaq block_cbwT6_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.IO.Handle.Internals.hClose_help1_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r8
	movq 8(%rbp),%rdi
	movq 16(%rbp),%rsi
	leaq GHC.IO.Handle.hClose2_closure(%rip),%r14
	movq %rbx,8(%rbp)
	jmp *GHC.IO.Handle.Internals.$wwithHandle'_entry@gotpcrel(%rip)
	.size _cbwT4, .-_cbwT4


==================== Asm code ====================
2018-03-16 16:06:29.508760341 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwT4_info:
	.quad	_cbwT4
	.quad	2
	.quad	-4294967266
	.quad	ubwU9_srtd


==================== Asm code ====================
2018-03-16 16:06:29.509312444 UTC

.section .data.rel.ro
.align 8
.align 1
ubwUa_srtd:
	.quad	SbuCr_srt+240
	.quad	93
	.quad	1
	.quad	402653184


==================== Asm code ====================
2018-03-16 16:06:29.510066345 UTC

.section .text
.align 8
_cbwT6:
_cbwT6:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbwTf
_cbwTe:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	movq %rbx,-32(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	leaq block_cbwTa_info(%rip),%rax
	movq %rax,8(%rbp)
	leaq -14(%r12),%r14
	addq $8,%rbp
	jmp *Data.Maybe.catMaybes1_entry@gotpcrel(%rip)
_cbwTf:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwT6, .-_cbwT6


==================== Asm code ====================
2018-03-16 16:06:29.510754779 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwT6_info:
	.quad	_cbwT6
	.quad	2
	.quad	-4294967266
	.quad	ubwUa_srtd


==================== Asm code ====================
2018-03-16 16:06:29.511309954 UTC

.section .data.rel.ro
.align 8
.align 1
ubwUb_srtd:
	.quad	SbuCr_srt+240
	.quad	93
	.quad	1
	.quad	402653184


==================== Asm code ====================
2018-03-16 16:06:29.512020835 UTC

.section .text
.align 8
_cbwTa:
_cbwTa:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubwTV
_cbwTv:
	leaq block_cbwTo_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbwTo
_cbwTp:
	movq (%rbx),%rax
	jmp *(%rax)
_ubwTV:
	addq $16,%rbp
	jmp _cbwTl
	.size _cbwTa, .-_cbwTa


==================== Asm code ====================
2018-03-16 16:06:29.512647288 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwTa_info:
	.quad	_cbwTa
	.quad	1
	.quad	-4294967266
	.quad	ubwUb_srtd


==================== Asm code ====================
2018-03-16 16:06:29.513290001 UTC

.section .text
.align 8
_cbwTl:
_cbwTl:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbwTl, .-_cbwTl


==================== Asm code ====================
2018-03-16 16:06:29.513945619 UTC

.section .data.rel.ro
.align 8
.align 1
ubwUc_srtd:
	.quad	SbuCr_srt+240
	.quad	93
	.quad	1
	.quad	402653184


==================== Asm code ====================
2018-03-16 16:06:29.514610117 UTC

.section .text
.align 8
_cbwTo:
_cbwTo:
	leaq block_cbwTt_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Exception.$p1Exception_entry@gotpcrel(%rip)
	.size _cbwTo, .-_cbwTo


==================== Asm code ====================
2018-03-16 16:06:29.515222491 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwTo_info:
	.quad	_cbwTo
	.quad	1
	.quad	-4294967266
	.quad	ubwUc_srtd


==================== Asm code ====================
2018-03-16 16:06:29.515742119 UTC

.section .data.rel.ro
.align 8
.align 1
ubwUd_srtd:
	.quad	SbuCr_srt+240
	.quad	93
	.quad	1
	.quad	402653184


==================== Asm code ====================
2018-03-16 16:06:29.516387183 UTC

.section .text
.align 8
_cbwTt:
_cbwTt:
	leaq block_cbwTA_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.IO.Exception.$fExceptionIOException4_closure@gotpcrel(%rip),%rsi
	movq %rbx,%r14
	jmp *Data.Typeable.Internal.sameTypeRep_entry@gotpcrel(%rip)
	.size _cbwTt, .-_cbwTt


==================== Asm code ====================
2018-03-16 16:06:29.51698636 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwTt_info:
	.quad	_cbwTt
	.quad	3
	.quad	-4294967266
	.quad	ubwUd_srtd


==================== Asm code ====================
2018-03-16 16:06:29.517731731 UTC

.section .text
.align 8
_cbwTA:
_cbwTA:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbwTH
_cbwTM:
	leaq block_cbwTK_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_cbwTH:
	movq 16(%rbp),%rbx
	addq $32,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _cbwTA, .-_cbwTA


==================== Asm code ====================
2018-03-16 16:06:29.518354144 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwTA_info:
	.quad	_cbwTA
	.quad	3
	.quad	4294967326
	.quad	SbuCr_srt+968


==================== Asm code ====================
2018-03-16 16:06:29.518951084 UTC

.section .text
.align 8
_cbwTK:
_cbwTK:
	movq 47(%rbx),%r9
	movq 39(%rbx),%r8
	movq 31(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.$wlvl_entry
	.size _cbwTK, .-_cbwTK


==================== Asm code ====================
2018-03-16 16:06:29.519522735 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwTK_info:
	.quad	_cbwTK
	.quad	1
	.quad	4294967326
	.quad	SbuCr_srt+968


==================== Asm code ====================
2018-03-16 16:06:29.522090076 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hClose_closure
.type GHC.IO.Handle.hClose_closure, @object
GHC.IO.Handle.hClose_closure:
	.quad	GHC.IO.Handle.hClose_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.52268586 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hClose_entry
.type GHC.IO.Handle.hClose_entry, @object
GHC.IO.Handle.hClose_entry:
_cbwVW:
	jmp GHC.IO.Handle.hClose1_entry
	.size GHC.IO.Handle.hClose_entry, .-GHC.IO.Handle.hClose_entry


==================== Asm code ====================
2018-03-16 16:06:29.523245178 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hClose_info
.type GHC.IO.Handle.hClose_info, @object
GHC.IO.Handle.hClose_info:
	.quad	GHC.IO.Handle.hClose_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbuCr_srt+984


==================== Asm code ====================
2018-03-16 16:06:29.524863071 UTC

.section .data
.align 8
.align 1
lvl28_rbnXa_closure:
	.quad	GHC.Types.C#_con_info
	.quad	123


==================== Asm code ====================
2018-03-16 16:06:29.5264624 UTC

.section .data
.align 8
.align 1
lvl29_rbnXb_closure:
	.quad	GHC.Types.C#_con_info
	.quad	44


==================== Asm code ====================
2018-03-16 16:06:29.528004778 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl30_rbnXc_bytes:
	.asciz "duplex (read-write)"


==================== Asm code ====================
2018-03-16 16:06:29.530654011 UTC

.section .data
.align 8
.align 1
lvl31_rbnXd_closure:
	.quad	lvl31_rbnXd_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.532084298 UTC

.section .text
.align 8
lvl31_rbnXd_entry:
_cbwWc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwWd
_cbwWe:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbwWb
_cbwWa:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl30_rbnXc_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbwWd:
	jmp *-16(%r13)
_cbwWb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl31_rbnXd_entry, .-lvl31_rbnXd_entry


==================== Asm code ====================
2018-03-16 16:06:29.532868578 UTC

.section .data.rel.ro
.align 8
.align 1
lvl31_rbnXd_info:
	.quad	lvl31_rbnXd_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:29.534490906 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl32_rbnXe_bytes:
	.asciz "none"


==================== Asm code ====================
2018-03-16 16:06:29.536897314 UTC

.section .data
.align 8
.align 1
lvl33_rbnXf_closure:
	.quad	lvl33_rbnXf_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.538360427 UTC

.section .text
.align 8
lvl33_rbnXf_entry:
_cbwWu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwWv
_cbwWw:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbwWt
_cbwWs:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl32_rbnXe_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbwWv:
	jmp *-16(%r13)
_cbwWt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl33_rbnXf_entry, .-lvl33_rbnXf_entry


==================== Asm code ====================
2018-03-16 16:06:29.539037292 UTC

.section .data.rel.ro
.align 8
.align 1
lvl33_rbnXf_info:
	.quad	lvl33_rbnXf_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:29.540651914 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl34_rbnXg_bytes:
	.asciz "line"


==================== Asm code ====================
2018-03-16 16:06:29.543130227 UTC

.section .data
.align 8
.align 1
lvl35_rbnXh_closure:
	.quad	lvl35_rbnXh_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.543863129 UTC

.section .text
.align 8
lvl35_rbnXh_entry:
_cbwWM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwWN
_cbwWO:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbwWL
_cbwWK:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl34_rbnXg_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbwWN:
	jmp *-16(%r13)
_cbwWL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl35_rbnXh_entry, .-lvl35_rbnXh_entry


==================== Asm code ====================
2018-03-16 16:06:29.544531693 UTC

.section .data.rel.ro
.align 8
.align 1
lvl35_rbnXh_info:
	.quad	lvl35_rbnXh_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:29.546248137 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl36_rbnXi_bytes:
	.asciz "showHandle"


==================== Asm code ====================
2018-03-16 16:06:29.548568967 UTC

.section .data
.align 8
.align 1
lvl37_rbnXj_closure:
	.quad	lvl37_rbnXj_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.549425174 UTC

.section .text
.align 8
lvl37_rbnXj_entry:
_cbwX4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwX5
_cbwX6:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbwX3
_cbwX2:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl36_rbnXi_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbwX5:
	jmp *-16(%r13)
_cbwX3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl37_rbnXj_entry, .-lvl37_rbnXj_entry


==================== Asm code ====================
2018-03-16 16:06:29.550128109 UTC

.section .data.rel.ro
.align 8
.align 1
lvl37_rbnXj_info:
	.quad	lvl37_rbnXj_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:29.55169007 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl38_rbnXk_bytes:
	.asciz "loc="


==================== Asm code ====================
2018-03-16 16:06:29.553738531 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl39_rbnXl_bytes:
	.asciz "type="


==================== Asm code ====================
2018-03-16 16:06:29.555288824 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl40_rbnXm_bytes:
	.asciz "buffering="


==================== Asm code ====================
2018-03-16 16:06:29.556848684 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl41_rbnXn_bytes:
	.asciz "}"


==================== Asm code ====================
2018-03-16 16:06:29.559406998 UTC

.section .data
.align 8
.align 1
lvl42_rbnXo_closure:
	.quad	lvl42_rbnXo_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.560284687 UTC

.section .text
.align 8
lvl42_rbnXo_entry:
_cbwXp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwXq
_cbwXr:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbwXo
_cbwXn:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl41_rbnXn_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbwXq:
	jmp *-16(%r13)
_cbwXo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl42_rbnXo_entry, .-lvl42_rbnXo_entry


==================== Asm code ====================
2018-03-16 16:06:29.561599736 UTC

.section .data.rel.ro
.align 8
.align 1
lvl42_rbnXo_info:
	.quad	lvl42_rbnXo_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:29.564139794 UTC

.section .data
.align 8
.align 1
lvl43_rbnXp_closure:
	.quad	lvl43_rbnXp_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.564957195 UTC

.section .text
.align 8
lvl43_rbnXp_entry:
_cbwXG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwXH
_cbwXI:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbwXF
_cbwXE:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl42_rbnXo_closure(%rip),%rsi
	leaq lvl33_rbnXf_closure(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_cbwXH:
	jmp *-16(%r13)
_cbwXF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl43_rbnXp_entry, .-lvl43_rbnXp_entry


==================== Asm code ====================
2018-03-16 16:06:29.565720815 UTC

.section .data.rel.ro
.align 8
.align 1
lvl43_rbnXp_info:
	.quad	lvl43_rbnXp_entry
	.quad	0
	.quad	12884901909
	.quad	SbuCr_srt+992


==================== Asm code ====================
2018-03-16 16:06:29.568072677 UTC

.section .data
.align 8
.align 1
lvl44_rbnXq_closure:
	.quad	lvl44_rbnXq_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.568905511 UTC

.section .text
.align 8
lvl44_rbnXq_entry:
_cbwXX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwXY
_cbwXZ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbwXW
_cbwXV:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl42_rbnXo_closure(%rip),%rsi
	leaq lvl35_rbnXh_closure(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_cbwXY:
	jmp *-16(%r13)
_cbwXW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl44_rbnXq_entry, .-lvl44_rbnXq_entry


==================== Asm code ====================
2018-03-16 16:06:29.570065495 UTC

.section .data.rel.ro
.align 8
.align 1
lvl44_rbnXq_info:
	.quad	lvl44_rbnXq_entry
	.quad	0
	.quad	12884901909
	.quad	SbuCr_srt+1000


==================== Asm code ====================
2018-03-16 16:06:29.571627293 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl45_rbnXr_bytes:
	.asciz "block "


==================== Asm code ====================
2018-03-16 16:06:29.573375835 UTC

.section .data
.align 8
.align 1
lvl46_rbnXs_closure:
	.quad	:_con_info
	.quad	GHC.Show.$fShow(,)2_closure
	.quad	lvl42_rbnXo_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.575912099 UTC

.section .data
.align 8
.align 1
lvl47_rbnXt_closure:
	.quad	lvl47_rbnXt_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.576761903 UTC

.section .text
.align 8
lvl47_rbnXt_entry:
_cbwYg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwYh
_cbwYi:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbwYf
_cbwYe:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl42_rbnXo_closure(%rip),%rsi
	movq GHC.IO.Handle.Types.$fShowHandleType11_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_cbwYh:
	jmp *-16(%r13)
_cbwYf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl47_rbnXt_entry, .-lvl47_rbnXt_entry


==================== Asm code ====================
2018-03-16 16:06:29.577543248 UTC

.section .data.rel.ro
.align 8
.align 1
lvl47_rbnXt_info:
	.quad	lvl47_rbnXt_entry
	.quad	0
	.quad	21474836501
	.quad	SbuCr_srt+1000


==================== Asm code ====================
2018-03-16 16:06:29.606723932 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hShow2_closure
.type GHC.IO.Handle.hShow2_closure, @object
GHC.IO.Handle.hShow2_closure:
	.quad	GHC.IO.Handle.hShow2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.60760305 UTC

.section .text
.align 8
sat_sbuvF_entry:
_cbwZw:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbwZC
_cbwZD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbwZo_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *stg_noDuplicate#@gotpcrel(%rip)
_cbwZC:
	jmp *-16(%r13)
	.size sat_sbuvF_entry, .-sat_sbuvF_entry


==================== Asm code ====================
2018-03-16 16:06:29.608313831 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbuvF_info:
	.quad	sat_sbuvF_entry
	.quad	1
	.quad	4294967312
	.quad	SbuCr_srt+1024


==================== Asm code ====================
2018-03-16 16:06:29.609147093 UTC

.section .text
.align 8
_cbwZo:
_cbwZo:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbwZt_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cbwZt
_cbwZu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwZo, .-_cbwZo


==================== Asm code ====================
2018-03-16 16:06:29.609963275 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwZo_info:
	.quad	_cbwZo
	.quad	1
	.quad	4294967326
	.quad	SbuCr_srt+1024


==================== Asm code ====================
2018-03-16 16:06:29.610654025 UTC

.section .text
.align 8
_cbwZt:
_cbwZt:
	leaq block_cbwZz_info(%rip),%rax
	movq %rax,(%rbp)
	leaq lvl46_rbnXs_closure+2(%rip),%rdi
	movq 31(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _cbwZt, .-_cbwZt


==================== Asm code ====================
2018-03-16 16:06:29.611332223 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwZt_info:
	.quad	_cbwZt
	.quad	0
	.quad	4294967326
	.quad	SbuCr_srt+1024


==================== Asm code ====================
2018-03-16 16:06:29.612125045 UTC

.section .text
.align 8
_cbwZz:
_cbwZz:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbwZJ
_cbwZI:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbwZJ:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cbwZz, .-_cbwZz


==================== Asm code ====================
2018-03-16 16:06:29.612841603 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwZz_info:
	.quad	_cbwZz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.613763235 UTC

.section .text
.align 8
sat_sbuvN_entry:
_cbwZU:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbx00
_cbx01:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbwZR_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbwZR
_cbwZS:
	movq (%rbx),%rax
	jmp *(%rax)
_cbx00:
	jmp *-16(%r13)
	.size sat_sbuvN_entry, .-sat_sbuvN_entry


==================== Asm code ====================
2018-03-16 16:06:29.614474159 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbuvN_info:
	.quad	sat_sbuvN_entry
	.quad	1
	.quad	4294967312
	.quad	SbuCr_srt+1024


==================== Asm code ====================
2018-03-16 16:06:29.6152444 UTC

.section .text
.align 8
_cbwZR:
_cbwZR:
	leaq block_cbwZX_info(%rip),%rax
	movq %rax,(%rbp)
	leaq lvl46_rbnXs_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _cbwZR, .-_cbwZR


==================== Asm code ====================
2018-03-16 16:06:29.615921254 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwZR_info:
	.quad	_cbwZR
	.quad	0
	.quad	4294967326
	.quad	SbuCr_srt+1024


==================== Asm code ====================
2018-03-16 16:06:29.616744918 UTC

.section .text
.align 8
_cbwZX:
_cbwZX:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbx05
_cbx04:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbx05:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cbwZX, .-_cbwZX


==================== Asm code ====================
2018-03-16 16:06:29.617606814 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwZX_info:
	.quad	_cbwZX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.618438751 UTC

.section .text
.align 8
sat_sbuvP_entry:
_cbx0c:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbx0d
_cbx0e:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbwZ8_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbwZ8
_cbwZ9:
	movq (%rbx),%rax
	jmp *(%rax)
_cbx0d:
	jmp *-16(%r13)
	.size sat_sbuvP_entry, .-sat_sbuvP_entry


==================== Asm code ====================
2018-03-16 16:06:29.619210067 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbuvP_info:
	.quad	sat_sbuvP_entry
	.quad	2
	.quad	30064771090
	.quad	SbuCr_srt+1024


==================== Asm code ====================
2018-03-16 16:06:29.620118288 UTC

.section .text
.align 8
_cbwZ8:
_cbwZ8:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _ubx0w
_cbx0a:
	leaq block_cbwZf_info(%rip),%rax
	movq %rax,(%rbp)
	movq 5(%rbx),%rbx
	testb $7,%bl
	jne _cbwZf
_cbwZg:
	movq (%rbx),%rax
	jmp *(%rax)
_ubx0w:
	cmpq $2,%rax
	jb _cbx08
_cbx09:
	leaq lvl44_rbnXq_closure(%rip),%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cbx08:
	leaq lvl43_rbnXp_closure(%rip),%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwZ8, .-_cbwZ8


==================== Asm code ====================
2018-03-16 16:06:29.620850284 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwZ8_info:
	.quad	_cbwZ8
	.quad	1
	.quad	30064771102
	.quad	SbuCr_srt+1024


==================== Asm code ====================
2018-03-16 16:06:29.622889973 UTC

.section .text
.align 8
_cbwZf:
_cbwZf:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbx0m
_cbx0r:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbx0u
_cbx0t:
	movq 6(%rbx),%rax
	leaq sat_sbuvN_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Show.$fShow(,)4_closure@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	leaq lvl45_rbnXr_bytes(%rip),%r14
	addq $16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_cbx0u:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbx0m:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbx0u
_cbx0o:
	leaq sat_sbuvF_info(%rip),%rax
	movq %rax,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Show.$fShow(,)4_closure@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	leaq lvl45_rbnXr_bytes(%rip),%r14
	addq $16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
	.size _cbwZf, .-_cbwZf


==================== Asm code ====================
2018-03-16 16:06:29.623864781 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwZf_info:
	.quad	_cbwZf
	.quad	1
	.quad	4294967326
	.quad	SbuCr_srt+1024


==================== Asm code ====================
2018-03-16 16:06:29.624728477 UTC

.section .text
.align 8
karg_sbuvn_entry:
_cbx0z:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbx0A
_cbx0B:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbx0D
_cbx0C:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_sbuvP_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	leaq lvl40_rbnXm_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_cbx0D:
	movq $32,904(%r13)
_cbx0A:
	jmp *-16(%r13)
	.size karg_sbuvn_entry, .-karg_sbuvn_entry


==================== Asm code ====================
2018-03-16 16:06:29.625572674 UTC

.section .data.rel.ro
.align 8
.align 1
karg_sbuvn_info:
	.quad	karg_sbuvn_entry
	.quad	2
	.quad	30064771090
	.quad	SbuCr_srt+1024


==================== Asm code ====================
2018-03-16 16:06:29.626481771 UTC

.section .text
.align 8
sat_sbuvY_entry:
_cbx0L:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cbx0M
_cbx0N:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbx0P
_cbx0O:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	leaq karg_sbuvn_info(%rip),%rsi
	movq %rsi,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rdx,(%r12)
	leaq block_cbx0E_info(%rip),%rcx
	movq %rcx,-40(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	leaq -24(%r12),%rax
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbx0E
_cbx0F:
	movq (%rbx),%rax
	jmp *(%rax)
_cbx0P:
	movq $32,904(%r13)
_cbx0M:
	jmp *-16(%r13)
	.size sat_sbuvY_entry, .-sat_sbuvY_entry


==================== Asm code ====================
2018-03-16 16:06:29.627242113 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbuvY_info:
	.quad	sat_sbuvY_entry
	.quad	4
	.quad	2194728288271
	.quad	SbuCr_srt+1024


==================== Asm code ====================
2018-03-16 16:06:29.628120538 UTC

.section .text
.align 8
_cbx0E:
_cbx0E:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbx0I
_cbx0J:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbx1B
_cbx1A:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl29_rbnXb_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	leaq lvl31_rbnXd_closure(%rip),%r14
	addq $24,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_cbx1B:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbx0I:
	leaq block_cbx0S_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _cbx0S
_cbx0U:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbx0E, .-_cbx0E


==================== Asm code ====================
2018-03-16 16:06:29.628855985 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbx0E_info:
	.quad	_cbx0E
	.quad	2
	.quad	270582939678
	.quad	SbuCr_srt+1048


==================== Asm code ====================
2018-03-16 16:06:29.630273862 UTC

.section .text
.align 8
_cbx0S:
_cbx0S:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $5,%rcx
	jb _ubx1D
_ubx1F:
	cmpq $6,%rcx
	jb _cbx1l
_cbx1s:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbx1v
_cbx1u:
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq lvl29_rbnXb_closure+1(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	movq GHC.IO.Handle.Types.$fShowHandleType1_closure@gotpcrel(%rip),%r14
	addq $24,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_cbx1v:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbx1l:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbx1v
_cbx1n:
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq lvl29_rbnXb_closure+1(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	movq GHC.IO.Handle.Types.$fShowHandleType3_closure@gotpcrel(%rip),%r14
	addq $24,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ubx1D:
	cmpq $4,%rcx
	jb _ubx1E
_cbx1e:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbx1v
_cbx1g:
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq lvl29_rbnXb_closure+1(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	movq GHC.IO.Handle.Types.$fShowHandleType5_closure@gotpcrel(%rip),%r14
	addq $24,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_ubx1E:
	cmpq $3,%rcx
	jb _cbx10
_cbx17:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbx1v
_cbx19:
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq lvl29_rbnXb_closure+1(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	movq GHC.IO.Handle.Types.$fShowHandleType7_closure@gotpcrel(%rip),%r14
	addq $24,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_cbx10:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbx1v
_cbx12:
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq lvl29_rbnXb_closure+1(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	movq GHC.IO.Handle.Types.$fShowHandleType9_closure@gotpcrel(%rip),%r14
	addq $24,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
	.size _cbx0S, .-_cbx0S


==================== Asm code ====================
2018-03-16 16:06:29.631471669 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbx0S_info:
	.quad	_cbx0S
	.quad	130
	.quad	133143986206
	.quad	SbuCr_srt+1048


==================== Asm code ====================
2018-03-16 16:06:29.63226979 UTC

.section .text
.align 8
sat_sbuvZ_entry:
_cbx1I:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbx1J
_cbx1K:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbx1M
_cbx1L:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	leaq sat_sbuvY_info(%rip),%rsi
	movq %rsi,-40(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -40(%r12),%rsi
	leaq lvl39_rbnXl_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_cbx1M:
	movq $48,904(%r13)
_cbx1J:
	jmp *-16(%r13)
	.size sat_sbuvZ_entry, .-sat_sbuvZ_entry


==================== Asm code ====================
2018-03-16 16:06:29.632959103 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbuvZ_info:
	.quad	sat_sbuvZ_entry
	.quad	4
	.quad	2194728288271
	.quad	SbuCr_srt+1024


==================== Asm code ====================
2018-03-16 16:06:29.63389235 UTC

.section .text
.align 8
sat_sbuw1_entry:
_cbx1O:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbx1P
_cbx1Q:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbx1S
_cbx1R:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	leaq sat_sbuvZ_info(%rip),%rdi
	movq %rdi,-64(%r12)
	movq %rcx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq lvl29_rbnXb_closure+1(%rip),%rbx
	movq %rbx,-8(%r12)
	leaq -64(%r12),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_cbx1S:
	movq $72,904(%r13)
_cbx1P:
	jmp *-16(%r13)
	.size sat_sbuw1_entry, .-sat_sbuw1_entry


==================== Asm code ====================
2018-03-16 16:06:29.634673559 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbuw1_info:
	.quad	sat_sbuw1_entry
	.quad	5
	.quad	2194728288271
	.quad	SbuCr_srt+1024


==================== Asm code ====================
2018-03-16 16:06:29.635489938 UTC

.section .text
.align 8
sat_sbuw2_entry:
_cbx1T:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cbx1U
_cbx1V:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbwYE_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbwYE
_cbwYF:
	movq (%rbx),%rax
	jmp *(%rax)
_cbx1U:
	jmp *-16(%r13)
	.size sat_sbuw2_entry, .-sat_sbuw2_entry


==================== Asm code ====================
2018-03-16 16:06:29.636193363 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbuw2_info:
	.quad	sat_sbuw2_entry
	.quad	3
	.quad	4393751543823
	.quad	SbuCr_srt+1024


==================== Asm code ====================
2018-03-16 16:06:29.636911985 UTC

.section .text
.align 8
_cbwYE:
_cbwYE:
	leaq block_cbwYJ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 55(%rbx),%rax
	movq 71(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbwYJ
_cbwYK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbwYE, .-_cbwYE


==================== Asm code ====================
2018-03-16 16:06:29.637591702 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwYE_info:
	.quad	_cbwYE
	.quad	2
	.quad	4393751543838
	.quad	SbuCr_srt+1024


==================== Asm code ====================
2018-03-16 16:06:29.63839426 UTC

.section .text
.align 8
_cbwYJ:
_cbwYJ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbx25
_cbx1Y:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbx21
_cbx20:
	leaq sat_sbuw1_info(%rip),%rax
	movq %rax,-48(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	movq 32(%rbp),%rax
	movq %rax,-24(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -48(%r12),%rsi
	leaq lvl38_rbnXk_bytes(%rip),%r14
	addq $40,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_cbx25:
	leaq lvl47_rbnXt_closure(%rip),%rbx
	addq $40,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cbx21:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbwYJ, .-_cbwYJ


==================== Asm code ====================
2018-03-16 16:06:29.639135552 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbwYJ_info:
	.quad	_cbwYJ
	.quad	4
	.quad	4393751543838
	.quad	SbuCr_srt+1024


==================== Asm code ====================
2018-03-16 16:06:29.639880725 UTC

.section .text
.align 8
act_sbuv2_entry:
_cbx2a:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cbx2e
_cbx2d:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	leaq sat_sbuw2_info(%rip),%rcx
	movq %rcx,-56(%r12)
	movq %rax,-40(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl28_rbnXa_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cbx2e:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size act_sbuv2_entry, .-act_sbuv2_entry


==================== Asm code ====================
2018-03-16 16:06:29.640524373 UTC

.section .data.rel.ro
.align 8
.align 1
act_sbuv2_info:
	.quad	act_sbuv2_entry
	.quad	2
	.quad	4393751543819
	.quad	8589934597
	.quad	SbuCr_srt+1024


==================== Asm code ====================
2018-03-16 16:06:29.641268441 UTC

.section .text
.align 8
sat_sbuwi_entry:
_cbx2z:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbx2A
_cbx2B:
	leaq block_cbx2w_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp act_sbuv2_entry
_cbx2A:
	jmp *-8(%r13)
	.size sat_sbuwi_entry, .-sat_sbuwi_entry


==================== Asm code ====================
2018-03-16 16:06:29.641933689 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbuwi_info:
	.quad	sat_sbuwi_entry
	.quad	1
	.quad	4393751543817
	.quad	8589934597
	.quad	SbuCr_srt+1024


==================== Asm code ====================
2018-03-16 16:06:29.642621456 UTC

.section .text
.align 8
_cbx2w:
_cbx2w:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbx2E
_cbx2D:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbx2E:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbx2w, .-_cbx2w


==================== Asm code ====================
2018-03-16 16:06:29.643240595 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbx2w_info:
	.quad	_cbx2w
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.644001814 UTC

.section .text
.align 8
io_sbuwa_entry:
_cbx2K:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbx2O
_cbx2P:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbx2R
_cbx2Q:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	leaq sat_sbuwi_info(%rip),%rdx
	movq %rdx,-8(%r12)
	movq %rax,(%r12)
	leaq block_cbx2F_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rcx,%rsi
	leaq lvl37_rbnXj_closure(%rip),%r14
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbx2R:
	movq $16,904(%r13)
_cbx2O:
	jmp *-8(%r13)
	.size io_sbuwa_entry, .-io_sbuwa_entry


==================== Asm code ====================
2018-03-16 16:06:29.644730764 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbuwa_info:
	.quad	io_sbuwa_entry
	.quad	3
	.quad	1152358558948392968
	.quad	4294967299
	.quad	SbuCr_srt+888


==================== Asm code ====================
2018-03-16 16:06:29.645845985 UTC

.section .text
.align 8
_cbx2F:
_cbx2F:
	leaq block_cbx2H_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbx2H
_cbx2I:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbx2F, .-_cbx2F


==================== Asm code ====================
2018-03-16 16:06:29.64642579 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbx2F_info:
	.quad	_cbx2F
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.64702699 UTC

.section .text
.align 8
_cbx2H:
_cbx2H:
	leaq block_cbx2N_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbx2H, .-_cbx2H


==================== Asm code ====================
2018-03-16 16:06:29.647590326 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbx2H_info:
	.quad	_cbx2H
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.648183044 UTC

.section .text
.align 8
_cbx2N:
_cbx2N:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbx2N, .-_cbx2N


==================== Asm code ====================
2018-03-16 16:06:29.648732765 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbx2N_info:
	.quad	_cbx2N
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.649459595 UTC

.section .text
.align 8
sat_sbuwF_entry:
_cbx3e:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbx3f
_cbx3g:
	leaq block_cbx3b_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp act_sbuv2_entry
_cbx3f:
	jmp *-8(%r13)
	.size sat_sbuwF_entry, .-sat_sbuwF_entry


==================== Asm code ====================
2018-03-16 16:06:29.650101841 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbuwF_info:
	.quad	sat_sbuwF_entry
	.quad	1
	.quad	4393751543817
	.quad	8589934597
	.quad	SbuCr_srt+1024


==================== Asm code ====================
2018-03-16 16:06:29.650822954 UTC

.section .text
.align 8
_cbx3b:
_cbx3b:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbx3j
_cbx3i:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbx3j:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbx3b, .-_cbx3b


==================== Asm code ====================
2018-03-16 16:06:29.65148301 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbx3b_info:
	.quad	_cbx3b
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.652276275 UTC

.section .text
.align 8
io_sbuwx_entry:
_cbx3p:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbx3t
_cbx3u:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbx3w
_cbx3v:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	leaq sat_sbuwF_info(%rip),%rdx
	movq %rdx,-8(%r12)
	movq %rax,(%r12)
	leaq block_cbx3k_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rcx,%rsi
	leaq lvl37_rbnXj_closure(%rip),%r14
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.$wdo_operation_entry@gotpcrel(%rip)
_cbx3w:
	movq $16,904(%r13)
_cbx3t:
	jmp *-8(%r13)
	.size io_sbuwx_entry, .-io_sbuwx_entry


==================== Asm code ====================
2018-03-16 16:06:29.652960666 UTC

.section .data.rel.ro
.align 8
.align 1
io_sbuwx_info:
	.quad	io_sbuwx_entry
	.quad	3
	.quad	1152358558948392968
	.quad	4294967299
	.quad	SbuCr_srt+888


==================== Asm code ====================
2018-03-16 16:06:29.653950384 UTC

.section .text
.align 8
_cbx3k:
_cbx3k:
	leaq block_cbx3m_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbx3m
_cbx3n:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbx3k, .-_cbx3k


==================== Asm code ====================
2018-03-16 16:06:29.654499317 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbx3k_info:
	.quad	_cbx3k
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.655105401 UTC

.section .text
.align 8
_cbx3m:
_cbx3m:
	leaq block_cbx3s_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbx3m, .-_cbx3m


==================== Asm code ====================
2018-03-16 16:06:29.656327303 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbx3m_info:
	.quad	_cbx3m
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.656993721 UTC

.section .text
.align 8
_cbx3s:
_cbx3s:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbx3s, .-_cbx3s


==================== Asm code ====================
2018-03-16 16:06:29.65768437 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbx3s_info:
	.quad	_cbx3s
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:29.658490112 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hShow2_entry
.type GHC.IO.Handle.hShow2_entry, @object
GHC.IO.Handle.hShow2_entry:
_cbx3G:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbx3H
_cbx3I:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbx3K
_cbx3J:
	leaq act_sbuv2_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq block_cbx2f_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rdi,%rbx
	leaq -14(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbx2f
_cbx2g:
	movq (%rbx),%rax
	jmp *(%rax)
_cbx3K:
	movq $24,904(%r13)
_cbx3H:
	leaq GHC.IO.Handle.hShow2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hShow2_entry, .-GHC.IO.Handle.hShow2_entry


==================== Asm code ====================
2018-03-16 16:06:29.659167448 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hShow2_info
.type GHC.IO.Handle.hShow2_info, @object
GHC.IO.Handle.hShow2_info:
	.quad	GHC.IO.Handle.hShow2_entry
	.quad	0
	.quad	2305280063555239950
	.quad	17179869207
	.quad	SbuCr_srt+888


==================== Asm code ====================
2018-03-16 16:06:29.659881022 UTC

.section .text
.align 8
_cbx2f:
_cbx2f:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbx3D
_cbx3E:
	leaq block_cbx2Z_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_cbx3D:
	leaq block_cbx2k_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _cbx2f, .-_cbx2f


==================== Asm code ====================
2018-03-16 16:06:29.660552835 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbx2f_info:
	.quad	_cbx2f
	.quad	1
	.quad	1152358558948392990
	.quad	SbuCr_srt+888


==================== Asm code ====================
2018-03-16 16:06:29.661366448 UTC

.section .text
.align 8
_cbx2k:
_cbx2k:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbx3O
_cbx3N:
	leaq io_sbuwa_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rax
	testq %rbx,%rbx
	je _cbx3S
_cbx3R:
	movq %rax,%rbx
	addq $32,%rbp
	jmp io_sbuwa_entry
_cbx3S:
	movq %rax,%rbx
	addq $32,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbx3O:
	movq $32,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbx2k, .-_cbx2k


==================== Asm code ====================
2018-03-16 16:06:29.662042553 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbx2k_info:
	.quad	_cbx2k
	.quad	3
	.quad	1152358558948392990
	.quad	SbuCr_srt+888


==================== Asm code ====================
2018-03-16 16:06:29.662829593 UTC

.section .text
.align 8
_cbx2Z:
_cbx2Z:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbx3W
_cbx3V:
	leaq io_sbuwx_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rax
	testq %rbx,%rbx
	je _cbx40
_cbx3Z:
	movq %rax,%rbx
	addq $32,%rbp
	jmp io_sbuwx_entry
_cbx40:
	movq %rax,%rbx
	addq $32,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cbx3W:
	movq $32,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbx2Z, .-_cbx2Z


==================== Asm code ====================
2018-03-16 16:06:29.663576903 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbx2Z_info:
	.quad	_cbx2Z
	.quad	3
	.quad	1152358558948392990
	.quad	SbuCr_srt+888


==================== Asm code ====================
2018-03-16 16:06:29.667143576 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hShow1_closure
.type GHC.IO.Handle.hShow1_closure, @object
GHC.IO.Handle.hShow1_closure:
	.quad	GHC.IO.Handle.hShow1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.667892689 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hShow1_entry
.type GHC.IO.Handle.hShow1_entry, @object
GHC.IO.Handle.hShow1_entry:
_cbx89:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbx8a
_cbx8b:
	leaq block_cbx82_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbx82
_cbx83:
	movq (%rbx),%rax
	jmp *(%rax)
_cbx8a:
	leaq GHC.IO.Handle.hShow1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.hShow1_entry, .-GHC.IO.Handle.hShow1_entry


==================== Asm code ====================
2018-03-16 16:06:29.668527095 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hShow1_info
.type GHC.IO.Handle.hShow1_info, @object
GHC.IO.Handle.hShow1_info:
	.quad	GHC.IO.Handle.hShow1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	SbuCr_srt+1112


==================== Asm code ====================
2018-03-16 16:06:29.669282204 UTC

.section .text
.align 8
_cbx82:
_cbx82:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbx86
_cbx87:
	movq %rbx,%rdi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rsi
	movq 6(%rbx),%r14
	addq $8,%rbp
	jmp GHC.IO.Handle.hShow2_entry
_cbx86:
	movq %rbx,%rdi
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.IO.Handle.hShow2_entry
	.size _cbx82, .-_cbx82


==================== Asm code ====================
2018-03-16 16:06:29.66994357 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbx82_info:
	.quad	_cbx82
	.quad	0
	.quad	4294967326
	.quad	SbuCr_srt+1112


==================== Asm code ====================
2018-03-16 16:06:29.671993611 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.hShow_closure
.type GHC.IO.Handle.hShow_closure, @object
GHC.IO.Handle.hShow_closure:
	.quad	GHC.IO.Handle.hShow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:29.672582441 UTC

.section .text
.align 8
.globl GHC.IO.Handle.hShow_entry
.type GHC.IO.Handle.hShow_entry, @object
GHC.IO.Handle.hShow_entry:
_cbx8B:
	jmp GHC.IO.Handle.hShow1_entry
	.size GHC.IO.Handle.hShow_entry, .-GHC.IO.Handle.hShow_entry


==================== Asm code ====================
2018-03-16 16:06:29.673171128 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.hShow_info
.type GHC.IO.Handle.hShow_info, @object
GHC.IO.Handle.hShow_info:
	.quad	GHC.IO.Handle.hShow_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbuCr_srt+1120


==================== Asm code ====================
2018-03-16 16:06:29.675584708 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.HandlePosn_closure
.type GHC.IO.Handle.HandlePosn_closure, @object
GHC.IO.Handle.HandlePosn_closure:
	.quad	GHC.IO.Handle.HandlePosn_info


==================== Asm code ====================
2018-03-16 16:06:29.676301349 UTC

.section .text
.align 8
GHC.IO.Handle.HandlePosn_entry:
_cbx8N:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbx8R
_cbx8Q:
	leaq GHC.IO.Handle.HandlePosn_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cbx8R:
	movq $24,904(%r13)
	leaq GHC.IO.Handle.HandlePosn_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.HandlePosn_entry, .-GHC.IO.Handle.HandlePosn_entry


==================== Asm code ====================
2018-03-16 16:06:29.676947216 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.IO.Handle.HandlePosn_info:
	.quad	GHC.IO.Handle.HandlePosn_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:06:29.679264185 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
ibx8Z_str:
	.asciz "base:GHC.IO.Handle.HandlePosn"


==================== Asm code ====================
2018-03-16 16:06:29.679868036 UTC

.section .text
.align 8
.globl GHC.IO.Handle.HandlePosn_con_entry
.type GHC.IO.Handle.HandlePosn_con_entry, @object
GHC.IO.Handle.HandlePosn_con_entry:
_cbx8Y:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.HandlePosn_con_entry, .-GHC.IO.Handle.HandlePosn_con_entry


==================== Asm code ====================
2018-03-16 16:06:29.680400372 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.HandlePosn_con_info
.type GHC.IO.Handle.HandlePosn_con_info, @object
GHC.IO.Handle.HandlePosn_con_info:
	.quad	GHC.IO.Handle.HandlePosn_con_entry
	.quad	2
	.quad	4
	.quad	ibx8Z_str


==================== Asm code ====================
2018-03-16 16:06:29.683969242 UTC

.section .data.rel.ro
.align 8
.align 1
SbuCr_srt:
	.quad	GHC.Show.$w$cshowsPrec4_closure
	.quad	GHC.IO.Handle.$w$cshowsPrec_closure
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshowsPrec_closure
	.quad	GHC.IO.Handle.$fShowHandlePosn_$cshow_closure
	.quad	GHC.IO.Handle.$fShowHandlePosn1_closure
	.quad	GHC.IO.Handle.Internals.hLookAhead_1_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle_1_closure
	.quad	GHC.IO.Handle.hLookAhead2_closure
	.quad	GHC.IO.Handle.hLookAhead1_closure
	.quad	GHC.IO.Handle.Internals.wantWritableHandle1_closure
	.quad	GHC.IO.Handle.hFlush2_closure
	.quad	GHC.IO.Handle.hFlush1_closure
	.quad	GHC.IO.Handle.Internals.flushBuffer1_closure
	.quad	GHC.IO.Handle.hFlushAll2_closure
	.quad	GHC.IO.Handle.Internals.$wdo_operation_closure
	.quad	GHC.IO.Handle.hFlushAll3_closure
	.quad	GHC.IO.Handle.hFlushAll1_closure
	.quad	GHC.IO.Handle.Internals.ioe_closedHandle1_closure
	.quad	GHC.IO.Handle.hGetEcho6_closure
	.quad	GHC.IO.Handle.hGetEcho_fun_closure
	.quad	GHC.IO.Handle.hGetEcho5_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	lvl1_rbnWC_closure
	.quad	lvl3_rbnWE_closure
	.quad	ioe_dupHandlesNotCompatible_rbnWF_closure
	.quad	GHC.IO.Encoding.getLocaleEncoding1_closure
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle5_closure
	.quad	dupHandle__rbnWK_closure
	.quad	GHC.IO.failIO1_closure
	.quad	lvl5_rbnWM_closure
	.quad	Data.Typeable.Internal.sameTypeRep_closure
	.quad	dupHandleTo_rbnWN_closure
	.quad	GHC.IO.Handle.Internals.withAllHandles__1_closure
	.quad	GHC.IO.Handle.$whSetNewlineMode_closure
	.quad	GHC.IO.Handle.hSetNewlineMode2_closure
	.quad	GHC.IO.Handle.hSetNewlineMode1_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	GHC.IO.Handle.Internals.flushCharBuffer2_closure
	.quad	lvl11_rbnWT_closure
	.quad	GHC.IO.Handle.hSetBinaryMode1_closure
	.quad	lvl9_rbnWR_closure
	.quad	GHC.IO.Handle.Internals.ioe_semiclosedHandle1_closure
	.quad	GHC.IO.Handle.hIsSeekable2_closure
	.quad	GHC.IO.Handle.hIsSeekable3_closure
	.quad	GHC.IO.Handle.hIsSeekable1_closure
	.quad	GHC.Integer.Type.plusInteger_closure
	.quad	GHC.Integer.Type.minusInteger_closure
	.quad	GHC.IO.Handle.hGetPosn2_closure
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle1_closure
	.quad	GHC.IO.Handle.hGetPosn3_closure
	.quad	GHC.IO.Handle.hTell1_closure
	.quad	lvl14_rbnWW_closure
	.quad	GHC.IO.Handle.Internals.flushBuffer2_closure
	.quad	GHC.IO.Handle.hSeek1_closure
	.quad	lvl13_rbnWV_closure
	.quad	GHC.IO.Handle.hSetPosn1_closure
	.quad	GHC.IO.Handle.hGetEncoding3_closure
	.quad	GHC.IO.Handle.Internals.$wdo_operation_closure
	.quad	GHC.IO.Handle.hGetEncoding1_closure
	.quad	lvl18_rbnX0_closure
	.quad	GHC.IO.Handle.hSetEncoding1_closure
	.quad	lvl16_rbnWY_closure
	.quad	GHC.IO.Handle.Internals.$wioe_bufsiz_closure
	.quad	GHC.IO.Handle.Internals.ioe_closedHandle1_closure
	.quad	GHC.IO.Handle.hSetBuffering1_closure
	.quad	GHC.IO.Handle.hSetBuffering2_closure
	.quad	GHC.IO.Handle.hIsEOF3_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle_1_closure
	.quad	GHC.IO.Handle.hIsEOF1_closure
	.quad	GHC.IO.Handle.FD.stdin_closure
	.quad	GHC.IO.Handle.isEOF1_closure
	.quad	lvl20_rbnX2_closure
	.quad	GHC.IO.Handle.hSetFileSize1_closure
	.quad	GHC.IO.Handle.hFileSize5_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	sat_sbuif_closure
	.quad	GHC.IO.Handle.hFileSize3_closure
	.quad	GHC.IO.Handle.hFileSize4_closure
	.quad	GHC.IO.Handle.hFileSize10_closure
	.quad	GHC.IO.Handle.hFileSize2_closure
	.quad	GHC.IO.Handle.hFileSize8_closure
	.quad	GHC.IO.Handle.hFileSize1_closure
	.quad	lvl21_rbnX3_closure
	.quad	dupHandleTo_rbnWN_closure
	.quad	GHC.IO.Handle.Internals.hClose_help1_closure
	.quad	GHC.IO.Handle.Internals.$wwithHandle'_closure
	.quad	GHC.IO.Handle.Internals.$wwithHandle__'_closure
	.quad	GHC.IO.Handle.hDuplicateTo1_closure
	.quad	lvl25_rbnX7_closure
	.quad	GHC.IO.failIO1_closure
	.quad	lvl27_rbnX9_closure
	.quad	dupHandle__rbnWK_closure
	.quad	lvl7_rbnWP_closure
	.quad	GHC.IO.Handle.hDuplicate1_closure
	.quad	lvl23_rbnX5_closure
	.quad	GHC.IO.Handle.hGetEcho2_closure
	.quad	GHC.IO.Handle.Internals.ioe_closedHandle1_closure
	.quad	GHC.IO.Handle.hGetEcho3_closure
	.quad	GHC.IO.Handle.hGetEcho1_closure
	.quad	GHC.IO.Handle.hSetEcho2_closure
	.quad	GHC.IO.Handle.hSetEcho1_closure
	.quad	GHC.IO.Handle.hGetBuffering2_closure
	.quad	GHC.IO.Handle.hGetBuffering_fun_closure
	.quad	GHC.IO.Handle.hGetBuffering1_closure
	.quad	GHC.IO.Handle.hIsWritable2_closure
	.quad	GHC.IO.Handle.hIsWritable3_closure
	.quad	GHC.IO.Handle.hIsWritable1_closure
	.quad	GHC.IO.Handle.hIsReadable2_closure
	.quad	GHC.IO.Handle.hIsReadable3_closure
	.quad	GHC.IO.Handle.hIsReadable1_closure
	.quad	GHC.IO.Handle.hIsClosed3_closure
	.quad	GHC.IO.Handle.Internals.$wdo_operation_closure
	.quad	GHC.IO.Handle.hIsClosed1_closure
	.quad	GHC.IO.Handle.hIsOpen3_closure
	.quad	GHC.IO.Handle.hIsOpen1_closure
	.quad	GHC.IO.Handle.hGetPosn1_closure
	.quad	GHC.IO.Handle.hGetPosn3_closure
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle1_closure
	.quad	GHC.IO.Handle.hGetPosn2_closure
	.quad	GHC.IO.Handle.hClose2_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	GHC.IO.Handle.$wlvl_closure
	.quad	GHC.IO.Exception.$fExceptionIOException4_closure
	.quad	GHC.IO.Handle.hClose1_closure
	.quad	lvl33_rbnXf_closure
	.quad	lvl42_rbnXo_closure
	.quad	lvl35_rbnXh_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType11_closure
	.quad	lvl46_rbnXs_closure
	.quad	lvl43_rbnXp_closure
	.quad	lvl44_rbnXq_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType1_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType3_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType5_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType7_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType9_closure
	.quad	lvl31_rbnXd_closure
	.quad	lvl47_rbnXt_closure
	.quad	lvl37_rbnXj_closure
	.quad	GHC.IO.Handle.hShow2_closure
	.quad	GHC.IO.Handle.hShow1_closure

