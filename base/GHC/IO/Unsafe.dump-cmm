
==================== Output Cmm ====================
2018-03-16 15:55:01.396827441 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:55:01.397694374 UTC

[section ""data" . GHC.IO.Unsafe.unsafeDupablePerformIO_closure" {
     GHC.IO.Unsafe.unsafeDupablePerformIO_closure:
         const GHC.IO.Unsafe.unsafeDupablePerformIO_info;
 },
 GHC.IO.Unsafe.unsafeDupablePerformIO_entry() //  [R2]
         { info_tbl: [(cnx8,
                       label: GHC.IO.Unsafe.unsafeDupablePerformIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnx8: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cnx9; else goto cnxa;
       cnx9: // global
           R2 = R2;
           R1 = GHC.IO.Unsafe.unsafeDupablePerformIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnxa: // global
           I64[Sp - 8] = block_cnx6_info;
           R1 = R2;
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnx6() //  [R1]
         { info_tbl: [(cnx6,
                       label: block_cnx6_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnx6: // global
           R1 = R1;
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.399013285 UTC

[section ""data" . GHC.IO.Unsafe.unsafeDupableInterleaveIO1_closure" {
     GHC.IO.Unsafe.unsafeDupableInterleaveIO1_closure:
         const GHC.IO.Unsafe.unsafeDupableInterleaveIO1_info;
 },
 sat_snwP_entry() //  [R1]
         { info_tbl: [(cnxm,
                       label: sat_snwP_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnxm: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cnxn; else goto cnxo;
       cnxn: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cnxo: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_cnxk_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 24;
     }
 },
 _cnxk() //  [R1]
         { info_tbl: [(cnxk,
                       label: block_cnxk_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnxk: // global
           R1 = R1;
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 24, res: 0, upd: 24;
     }
 },
 GHC.IO.Unsafe.unsafeDupableInterleaveIO1_entry() //  [R2]
         { info_tbl: [(cnxq,
                       label: GHC.IO.Unsafe.unsafeDupableInterleaveIO1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnxq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cnxu; else goto cnxt;
       cnxu: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.IO.Unsafe.unsafeDupableInterleaveIO1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnxt: // global
           I64[Hp - 16] = sat_snwP_info;
           P64[Hp] = R2;
           R1 = Hp - 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.400250953 UTC

[section ""data" . GHC.IO.Unsafe.unsafeDupableInterleaveIO_closure" {
     GHC.IO.Unsafe.unsafeDupableInterleaveIO_closure:
         const GHC.IO.Unsafe.unsafeDupableInterleaveIO_info;
 },
 GHC.IO.Unsafe.unsafeDupableInterleaveIO_entry() //  [R2]
         { info_tbl: [(cnxz,
                       label: GHC.IO.Unsafe.unsafeDupableInterleaveIO_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnxz: // global
           R2 = R2;
           call GHC.IO.Unsafe.unsafeDupableInterleaveIO1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.401058878 UTC

[section ""data" . GHC.IO.Unsafe.noDuplicate1_closure" {
     GHC.IO.Unsafe.noDuplicate1_closure:
         const GHC.IO.Unsafe.noDuplicate1_info;
 },
 GHC.IO.Unsafe.noDuplicate1_entry() //  []
         { info_tbl: [(cnxI,
                       label: GHC.IO.Unsafe.noDuplicate1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnxI: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cnxJ; else goto cnxK;
       cnxJ: // global
           R1 = GHC.IO.Unsafe.noDuplicate1_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       cnxK: // global
           I64[Sp - 8] = block_cnxG_info;
           Sp = Sp - 8;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 _cnxG() //  []
         { info_tbl: [(cnxG,
                       label: block_cnxG_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnxG: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.402084452 UTC

[section ""data" . GHC.IO.Unsafe.noDuplicate_closure" {
     GHC.IO.Unsafe.noDuplicate_closure:
         const GHC.IO.Unsafe.noDuplicate_info;
 },
 GHC.IO.Unsafe.noDuplicate_entry() //  []
         { info_tbl: [(cnxQ,
                       label: GHC.IO.Unsafe.noDuplicate_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnxQ: // global
           call GHC.IO.Unsafe.noDuplicate1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.403041861 UTC

[section ""data" . unsafeInterleaveIO1_rnwE_closure" {
     unsafeInterleaveIO1_rnwE_closure:
         const unsafeInterleaveIO1_rnwE_info;
 },
 sat_snwW_entry() //  [R1]
         { info_tbl: [(cny4,
                       label: sat_snwW_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cny4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cny5; else goto cny6;
       cny5: // global
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       cny6: // global
           I64[Sp - 16] = block_cny2_info;
           P64[Sp - 8] = P64[R1 + 7];
           Sp = Sp - 16;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 _cny2() //  []
         { info_tbl: [(cny2,
                       label: block_cny2_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cny2: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_v_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 unsafeInterleaveIO1_rnwE_entry() //  [R2]
         { info_tbl: [(cny8,
                       label: unsafeInterleaveIO1_rnwE_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cny8: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cnyc; else goto cnyb;
       cnyc: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = unsafeInterleaveIO1_rnwE_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnyb: // global
           I64[Hp - 8] = sat_snwW_info;
           P64[Hp] = R2;
           R2 = Hp - 7;
           call GHC.IO.Unsafe.unsafeDupableInterleaveIO_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.404239879 UTC

[section ""data" . GHC.IO.Unsafe.unsafeInterleaveIO_closure" {
     GHC.IO.Unsafe.unsafeInterleaveIO_closure:
         const GHC.IO.Unsafe.unsafeInterleaveIO_info;
 },
 GHC.IO.Unsafe.unsafeInterleaveIO_entry() //  [R2]
         { info_tbl: [(cnyh,
                       label: GHC.IO.Unsafe.unsafeInterleaveIO_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnyh: // global
           R2 = R2;
           call unsafeInterleaveIO1_rnwE_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.405136483 UTC

[section ""data" . GHC.IO.Unsafe.unsafePerformIO_closure" {
     GHC.IO.Unsafe.unsafePerformIO_closure:
         const GHC.IO.Unsafe.unsafePerformIO_info;
 },
 GHC.IO.Unsafe.unsafePerformIO_entry() //  [R2]
         { info_tbl: [(cnys,
                       label: GHC.IO.Unsafe.unsafePerformIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnys: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnyt; else goto cnyu;
       cnyt: // global
           R2 = R2;
           R1 = GHC.IO.Unsafe.unsafePerformIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnyu: // global
           I64[Sp - 16] = block_cnyo_info;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 _cnyo() //  []
         { info_tbl: [(cnyo,
                       label: block_cnyo_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnyo: // global
           _snwX::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_cnyq_info;
           R1 = _snwX::P64;
           Sp = Sp + 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnyq() //  [R1]
         { info_tbl: [(cnyq,
                       label: block_cnyq_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnyq: // global
           R1 = R1;
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.406183591 UTC

[section ""cstring" . GHC.IO.Unsafe.$trModule4_bytes" {
     GHC.IO.Unsafe.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.406701455 UTC

[section ""data" . GHC.IO.Unsafe.$trModule3_closure" {
     GHC.IO.Unsafe.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.IO.Unsafe.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.407285203 UTC

[section ""cstring" . GHC.IO.Unsafe.$trModule2_bytes" {
     GHC.IO.Unsafe.$trModule2_bytes:
         I8[] [71,72,67,46,73,79,46,85,110,115,97,102,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.40784026 UTC

[section ""data" . GHC.IO.Unsafe.$trModule1_closure" {
     GHC.IO.Unsafe.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.IO.Unsafe.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.408402896 UTC

[section ""data" . GHC.IO.Unsafe.$trModule_closure" {
     GHC.IO.Unsafe.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.IO.Unsafe.$trModule3_closure+1;
         const GHC.IO.Unsafe.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.408937983 UTC

[section ""relreadonly" . Snyx_srt" { Snyx_srt:
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.409530375 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:55:01.410209268 UTC

[section ""data" . GHC.IO.Unsafe.unsafeDupablePerformIO_closure" {
     GHC.IO.Unsafe.unsafeDupablePerformIO_closure:
         const GHC.IO.Unsafe.unsafeDupablePerformIO_info;
 },
 GHC.IO.Unsafe.unsafeDupablePerformIO_entry() //  [R2]
         { info_tbl: [(cnyE,
                       label: GHC.IO.Unsafe.unsafeDupablePerformIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnyE: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cnyF; else goto cnyG;
       cnyF: // global
           R2 = R2;
           R1 = GHC.IO.Unsafe.unsafeDupablePerformIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnyG: // global
           I64[Sp - 8] = block_cnyC_info;
           R1 = R2;
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnyC() //  [R1]
         { info_tbl: [(cnyC,
                       label: block_cnyC_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnyC: // global
           R1 = R1;
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.411439223 UTC

[section ""data" . GHC.IO.Unsafe.unsafeDupableInterleaveIO1_closure" {
     GHC.IO.Unsafe.unsafeDupableInterleaveIO1_closure:
         const GHC.IO.Unsafe.unsafeDupableInterleaveIO1_info;
 },
 sat_snwP_entry() //  [R1]
         { info_tbl: [(cnyS,
                       label: sat_snwP_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnyS: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cnyT; else goto cnyU;
       cnyT: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cnyU: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_cnyQ_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 24;
     }
 },
 _cnyQ() //  [R1]
         { info_tbl: [(cnyQ,
                       label: block_cnyQ_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnyQ: // global
           R1 = R1;
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 24, res: 0, upd: 24;
     }
 },
 GHC.IO.Unsafe.unsafeDupableInterleaveIO1_entry() //  [R2]
         { info_tbl: [(cnyW,
                       label: GHC.IO.Unsafe.unsafeDupableInterleaveIO1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnyW: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cnz0; else goto cnyZ;
       cnz0: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.IO.Unsafe.unsafeDupableInterleaveIO1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnyZ: // global
           I64[Hp - 16] = sat_snwP_info;
           P64[Hp] = R2;
           R1 = Hp - 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.412630187 UTC

[section ""data" . GHC.IO.Unsafe.unsafeDupableInterleaveIO_closure" {
     GHC.IO.Unsafe.unsafeDupableInterleaveIO_closure:
         const GHC.IO.Unsafe.unsafeDupableInterleaveIO_info;
 },
 GHC.IO.Unsafe.unsafeDupableInterleaveIO_entry() //  [R2]
         { info_tbl: [(cnz5,
                       label: GHC.IO.Unsafe.unsafeDupableInterleaveIO_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnz5: // global
           R2 = R2;
           call GHC.IO.Unsafe.unsafeDupableInterleaveIO1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.413463971 UTC

[section ""data" . GHC.IO.Unsafe.noDuplicate1_closure" {
     GHC.IO.Unsafe.noDuplicate1_closure:
         const GHC.IO.Unsafe.noDuplicate1_info;
 },
 GHC.IO.Unsafe.noDuplicate1_entry() //  []
         { info_tbl: [(cnze,
                       label: GHC.IO.Unsafe.noDuplicate1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnze: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cnzf; else goto cnzg;
       cnzf: // global
           R1 = GHC.IO.Unsafe.noDuplicate1_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       cnzg: // global
           I64[Sp - 8] = block_cnzc_info;
           Sp = Sp - 8;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 _cnzc() //  []
         { info_tbl: [(cnzc,
                       label: block_cnzc_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnzc: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.414409777 UTC

[section ""data" . GHC.IO.Unsafe.noDuplicate_closure" {
     GHC.IO.Unsafe.noDuplicate_closure:
         const GHC.IO.Unsafe.noDuplicate_info;
 },
 GHC.IO.Unsafe.noDuplicate_entry() //  []
         { info_tbl: [(cnzm,
                       label: GHC.IO.Unsafe.noDuplicate_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnzm: // global
           call GHC.IO.Unsafe.noDuplicate1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.415403266 UTC

[section ""data" . unsafeInterleaveIO1_rnwE_closure" {
     unsafeInterleaveIO1_rnwE_closure:
         const unsafeInterleaveIO1_rnwE_info;
 },
 sat_snwW_entry() //  [R1]
         { info_tbl: [(cnzA,
                       label: sat_snwW_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnzA: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnzB; else goto cnzC;
       cnzB: // global
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       cnzC: // global
           I64[Sp - 16] = block_cnzy_info;
           P64[Sp - 8] = P64[R1 + 7];
           Sp = Sp - 16;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 _cnzy() //  []
         { info_tbl: [(cnzy,
                       label: block_cnzy_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnzy: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_v_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 unsafeInterleaveIO1_rnwE_entry() //  [R2]
         { info_tbl: [(cnzE,
                       label: unsafeInterleaveIO1_rnwE_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnzE: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cnzI; else goto cnzH;
       cnzI: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = unsafeInterleaveIO1_rnwE_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnzH: // global
           I64[Hp - 8] = sat_snwW_info;
           P64[Hp] = R2;
           R2 = Hp - 7;
           call GHC.IO.Unsafe.unsafeDupableInterleaveIO_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.4166328 UTC

[section ""data" . GHC.IO.Unsafe.unsafeInterleaveIO_closure" {
     GHC.IO.Unsafe.unsafeInterleaveIO_closure:
         const GHC.IO.Unsafe.unsafeInterleaveIO_info;
 },
 GHC.IO.Unsafe.unsafeInterleaveIO_entry() //  [R2]
         { info_tbl: [(cnzN,
                       label: GHC.IO.Unsafe.unsafeInterleaveIO_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnzN: // global
           R2 = R2;
           call unsafeInterleaveIO1_rnwE_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.41751918 UTC

[section ""data" . GHC.IO.Unsafe.unsafePerformIO_closure" {
     GHC.IO.Unsafe.unsafePerformIO_closure:
         const GHC.IO.Unsafe.unsafePerformIO_info;
 },
 GHC.IO.Unsafe.unsafePerformIO_entry() //  [R2]
         { info_tbl: [(cnzY,
                       label: GHC.IO.Unsafe.unsafePerformIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnzY: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnzZ; else goto cnA0;
       cnzZ: // global
           R2 = R2;
           R1 = GHC.IO.Unsafe.unsafePerformIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnA0: // global
           I64[Sp - 16] = block_cnzU_info;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 _cnzU() //  []
         { info_tbl: [(cnzU,
                       label: block_cnzU_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnzU: // global
           _snwX::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_cnzW_info;
           R1 = _snwX::P64;
           Sp = Sp + 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnzW() //  [R1]
         { info_tbl: [(cnzW,
                       label: block_cnzW_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnzW: // global
           R1 = R1;
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.418555655 UTC

[section ""cstring" . GHC.IO.Unsafe.$trModule4_bytes" {
     GHC.IO.Unsafe.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.419127193 UTC

[section ""data" . GHC.IO.Unsafe.$trModule3_closure" {
     GHC.IO.Unsafe.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.IO.Unsafe.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.419750564 UTC

[section ""cstring" . GHC.IO.Unsafe.$trModule2_bytes" {
     GHC.IO.Unsafe.$trModule2_bytes:
         I8[] [71,72,67,46,73,79,46,85,110,115,97,102,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.420292281 UTC

[section ""data" . GHC.IO.Unsafe.$trModule1_closure" {
     GHC.IO.Unsafe.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.IO.Unsafe.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.420856229 UTC

[section ""data" . GHC.IO.Unsafe.$trModule_closure" {
     GHC.IO.Unsafe.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.IO.Unsafe.$trModule3_closure+1;
         const GHC.IO.Unsafe.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.421620254 UTC

[section ""relreadonly" . Snyx_srt" { Snyx_srt:
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.422373654 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:55:01.423768929 UTC

[section ""data" . GHC.IO.Unsafe.unsafeDupablePerformIO_closure" {
     GHC.IO.Unsafe.unsafeDupablePerformIO_closure:
         const GHC.IO.Unsafe.unsafeDupablePerformIO_info;
 },
 GHC.IO.Unsafe.unsafeDupablePerformIO_entry() //  [R2]
         { info_tbl: [(cnA9,
                       label: GHC.IO.Unsafe.unsafeDupablePerformIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnA9: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cnAa; else goto cnAb;
       cnAa: // global
           R2 = R2;
           R1 = GHC.IO.Unsafe.unsafeDupablePerformIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnAb: // global
           I64[Sp - 8] = block_cnA7_info;
           R1 = R2;
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnA7() //  [R1]
         { info_tbl: [(cnA7,
                       label: block_cnA7_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnA7: // global
           R1 = R1;
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.429921786 UTC

[section ""data" . GHC.IO.Unsafe.unsafeDupableInterleaveIO1_closure" {
     GHC.IO.Unsafe.unsafeDupableInterleaveIO1_closure:
         const GHC.IO.Unsafe.unsafeDupableInterleaveIO1_info;
 },
 sat_snwP_entry() //  [R1]
         { info_tbl: [(cnAv,
                       label: sat_snwP_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnAv: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cnAw; else goto cnAx;
       cnAw: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cnAx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_cnAt_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 24;
     }
 },
 _cnAt() //  [R1]
         { info_tbl: [(cnAt,
                       label: block_cnAt_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnAt: // global
           R1 = R1;
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 24, res: 0, upd: 24;
     }
 },
 GHC.IO.Unsafe.unsafeDupableInterleaveIO1_entry() //  [R2]
         { info_tbl: [(cnAz,
                       label: GHC.IO.Unsafe.unsafeDupableInterleaveIO1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnAz: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cnAD; else goto cnAC;
       cnAD: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.IO.Unsafe.unsafeDupableInterleaveIO1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnAC: // global
           I64[Hp - 16] = sat_snwP_info;
           P64[Hp] = R2;
           R1 = Hp - 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.437029874 UTC

[section ""data" . GHC.IO.Unsafe.unsafeDupableInterleaveIO_closure" {
     GHC.IO.Unsafe.unsafeDupableInterleaveIO_closure:
         const GHC.IO.Unsafe.unsafeDupableInterleaveIO_info;
 },
 GHC.IO.Unsafe.unsafeDupableInterleaveIO_entry() //  [R2]
         { info_tbl: [(cnAU,
                       label: GHC.IO.Unsafe.unsafeDupableInterleaveIO_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnAU: // global
           R2 = R2;
           call GHC.IO.Unsafe.unsafeDupableInterleaveIO1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.440414362 UTC

[section ""data" . GHC.IO.Unsafe.noDuplicate1_closure" {
     GHC.IO.Unsafe.noDuplicate1_closure:
         const GHC.IO.Unsafe.noDuplicate1_info;
 },
 GHC.IO.Unsafe.noDuplicate1_entry() //  []
         { info_tbl: [(cnB7,
                       label: GHC.IO.Unsafe.noDuplicate1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnB7: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cnB8; else goto cnB9;
       cnB8: // global
           R1 = GHC.IO.Unsafe.noDuplicate1_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       cnB9: // global
           I64[Sp - 8] = block_cnB5_info;
           Sp = Sp - 8;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 _cnB5() //  []
         { info_tbl: [(cnB5,
                       label: block_cnB5_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnB5: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.44574492 UTC

[section ""data" . GHC.IO.Unsafe.noDuplicate_closure" {
     GHC.IO.Unsafe.noDuplicate_closure:
         const GHC.IO.Unsafe.noDuplicate_info;
 },
 GHC.IO.Unsafe.noDuplicate_entry() //  []
         { info_tbl: [(cnBo,
                       label: GHC.IO.Unsafe.noDuplicate_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnBo: // global
           call GHC.IO.Unsafe.noDuplicate1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.449205461 UTC

[section ""data" . unsafeInterleaveIO1_rnwE_closure" {
     unsafeInterleaveIO1_rnwE_closure:
         const unsafeInterleaveIO1_rnwE_info;
 },
 sat_snwW_entry() //  [R1]
         { info_tbl: [(cnBG,
                       label: sat_snwW_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnBG: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnBH; else goto cnBI;
       cnBH: // global
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       cnBI: // global
           I64[Sp - 16] = block_cnBE_info;
           P64[Sp - 8] = P64[R1 + 7];
           Sp = Sp - 16;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 _cnBE() //  []
         { info_tbl: [(cnBE,
                       label: block_cnBE_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnBE: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_v_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 unsafeInterleaveIO1_rnwE_entry() //  [R2]
         { info_tbl: [(cnBK,
                       label: unsafeInterleaveIO1_rnwE_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnBK: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cnBO; else goto cnBN;
       cnBO: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = unsafeInterleaveIO1_rnwE_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnBN: // global
           I64[Hp - 8] = sat_snwW_info;
           P64[Hp] = R2;
           R2 = Hp - 7;
           call GHC.IO.Unsafe.unsafeDupableInterleaveIO_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.455933662 UTC

[section ""data" . GHC.IO.Unsafe.unsafeInterleaveIO_closure" {
     GHC.IO.Unsafe.unsafeInterleaveIO_closure:
         const GHC.IO.Unsafe.unsafeInterleaveIO_info;
 },
 GHC.IO.Unsafe.unsafeInterleaveIO_entry() //  [R2]
         { info_tbl: [(cnC5,
                       label: GHC.IO.Unsafe.unsafeInterleaveIO_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnC5: // global
           R2 = R2;
           call unsafeInterleaveIO1_rnwE_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.460237027 UTC

[section ""data" . GHC.IO.Unsafe.unsafePerformIO_closure" {
     GHC.IO.Unsafe.unsafePerformIO_closure:
         const GHC.IO.Unsafe.unsafePerformIO_info;
 },
 GHC.IO.Unsafe.unsafePerformIO_entry() //  [R2]
         { info_tbl: [(cnCk,
                       label: GHC.IO.Unsafe.unsafePerformIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnCk: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnCl; else goto cnCm;
       cnCl: // global
           R2 = R2;
           R1 = GHC.IO.Unsafe.unsafePerformIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnCm: // global
           I64[Sp - 16] = block_cnCg_info;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 _cnCg() //  []
         { info_tbl: [(cnCg,
                       label: block_cnCg_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnCg: // global
           _snwX::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_cnCi_info;
           R1 = _snwX::P64;
           Sp = Sp + 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnCi() //  [R1]
         { info_tbl: [(cnCi,
                       label: block_cnCi_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnCi: // global
           R1 = R1;
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.466455681 UTC

[section ""cstring" . GHC.IO.Unsafe.$trModule4_bytes" {
     GHC.IO.Unsafe.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.468060831 UTC

[section ""data" . GHC.IO.Unsafe.$trModule3_closure" {
     GHC.IO.Unsafe.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.IO.Unsafe.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.469738496 UTC

[section ""cstring" . GHC.IO.Unsafe.$trModule2_bytes" {
     GHC.IO.Unsafe.$trModule2_bytes:
         I8[] [71,72,67,46,73,79,46,85,110,115,97,102,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.471307241 UTC

[section ""data" . GHC.IO.Unsafe.$trModule1_closure" {
     GHC.IO.Unsafe.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.IO.Unsafe.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.47293134 UTC

[section ""data" . GHC.IO.Unsafe.$trModule_closure" {
     GHC.IO.Unsafe.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.IO.Unsafe.$trModule3_closure+1;
         const GHC.IO.Unsafe.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.474650468 UTC

[section ""relreadonly" . Snyx_srt" { Snyx_srt:
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.541422511 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:55:01.542789744 UTC

[section ""data" . GHC.IO.Unsafe.unsafeDupablePerformIO_closure" {
     GHC.IO.Unsafe.unsafeDupablePerformIO_closure:
         const GHC.IO.Unsafe.unsafeDupablePerformIO_info;
 },
 GHC.IO.Unsafe.unsafeDupablePerformIO_entry() //  [R2]
         { info_tbl: [(cnD8,
                       label: GHC.IO.Unsafe.unsafeDupablePerformIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnD8: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cnD9; else goto cnDa;
       cnD9: // global
           R2 = R2;
           R1 = GHC.IO.Unsafe.unsafeDupablePerformIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnDa: // global
           I64[Sp - 8] = block_cnD6_info;
           R1 = R2;
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnD6() //  [R1]
         { info_tbl: [(cnD6,
                       label: block_cnD6_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnD6: // global
           R1 = R1;
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.548299321 UTC

[section ""data" . GHC.IO.Unsafe.unsafeDupableInterleaveIO1_closure" {
     GHC.IO.Unsafe.unsafeDupableInterleaveIO1_closure:
         const GHC.IO.Unsafe.unsafeDupableInterleaveIO1_info;
 },
 sat_snCP_entry() //  [R1]
         { info_tbl: [(cnDv,
                       label: sat_snCP_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnDv: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cnDw; else goto cnDx;
       cnDw: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cnDx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_cnDt_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 24;
     }
 },
 _cnDt() //  [R1]
         { info_tbl: [(cnDt,
                       label: block_cnDt_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnDt: // global
           R1 = R1;
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 24, res: 0, upd: 24;
     }
 },
 GHC.IO.Unsafe.unsafeDupableInterleaveIO1_entry() //  [R2]
         { info_tbl: [(cnDz,
                       label: GHC.IO.Unsafe.unsafeDupableInterleaveIO1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnDz: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cnDD; else goto cnDC;
       cnDD: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.IO.Unsafe.unsafeDupableInterleaveIO1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnDC: // global
           I64[Hp - 16] = sat_snCP_info;
           P64[Hp] = R2;
           R1 = Hp - 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.556140899 UTC

[section ""data" . GHC.IO.Unsafe.unsafeDupableInterleaveIO_closure" {
     GHC.IO.Unsafe.unsafeDupableInterleaveIO_closure:
         const GHC.IO.Unsafe.unsafeDupableInterleaveIO_info;
 },
 GHC.IO.Unsafe.unsafeDupableInterleaveIO_entry() //  [R2]
         { info_tbl: [(cnDX,
                       label: GHC.IO.Unsafe.unsafeDupableInterleaveIO_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnDX: // global
           R2 = R2;
           call GHC.IO.Unsafe.unsafeDupableInterleaveIO1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.559516988 UTC

[section ""data" . GHC.IO.Unsafe.noDuplicate1_closure" {
     GHC.IO.Unsafe.noDuplicate1_closure:
         const GHC.IO.Unsafe.noDuplicate1_info;
 },
 GHC.IO.Unsafe.noDuplicate1_entry() //  []
         { info_tbl: [(cnEa,
                       label: GHC.IO.Unsafe.noDuplicate1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnEa: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cnEb; else goto cnEc;
       cnEb: // global
           R1 = GHC.IO.Unsafe.noDuplicate1_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       cnEc: // global
           I64[Sp - 8] = block_cnE8_info;
           Sp = Sp - 8;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 _cnE8() //  []
         { info_tbl: [(cnE8,
                       label: block_cnE8_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnE8: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.565341751 UTC

[section ""data" . GHC.IO.Unsafe.noDuplicate_closure" {
     GHC.IO.Unsafe.noDuplicate_closure:
         const GHC.IO.Unsafe.noDuplicate_info;
 },
 GHC.IO.Unsafe.noDuplicate_entry() //  []
         { info_tbl: [(cnEt,
                       label: GHC.IO.Unsafe.noDuplicate_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnEt: // global
           call GHC.IO.Unsafe.noDuplicate1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.568780424 UTC

[section ""data" . unsafeInterleaveIO1_rnwE_closure" {
     unsafeInterleaveIO1_rnwE_closure:
         const unsafeInterleaveIO1_rnwE_info;
 },
 sat_snCW_entry() //  [R1]
         { info_tbl: [(cnEL,
                       label: sat_snCW_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnEL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnEM; else goto cnEN;
       cnEM: // global
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       cnEN: // global
           I64[Sp - 16] = block_cnEJ_info;
           P64[Sp - 8] = P64[R1 + 7];
           Sp = Sp - 16;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 _cnEJ() //  []
         { info_tbl: [(cnEJ,
                       label: block_cnEJ_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnEJ: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_v_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 unsafeInterleaveIO1_rnwE_entry() //  [R2]
         { info_tbl: [(cnEP,
                       label: unsafeInterleaveIO1_rnwE_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnEP: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cnET; else goto cnES;
       cnET: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = unsafeInterleaveIO1_rnwE_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnES: // global
           I64[Hp - 8] = sat_snCW_info;
           P64[Hp] = R2;
           R2 = Hp - 7;
           call GHC.IO.Unsafe.unsafeDupableInterleaveIO_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.575954461 UTC

[section ""data" . GHC.IO.Unsafe.unsafeInterleaveIO_closure" {
     GHC.IO.Unsafe.unsafeInterleaveIO_closure:
         const GHC.IO.Unsafe.unsafeInterleaveIO_info;
 },
 GHC.IO.Unsafe.unsafeInterleaveIO_entry() //  [R2]
         { info_tbl: [(cnFc,
                       label: GHC.IO.Unsafe.unsafeInterleaveIO_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnFc: // global
           R2 = R2;
           call unsafeInterleaveIO1_rnwE_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.579487005 UTC

[section ""data" . GHC.IO.Unsafe.unsafePerformIO_closure" {
     GHC.IO.Unsafe.unsafePerformIO_closure:
         const GHC.IO.Unsafe.unsafePerformIO_info;
 },
 GHC.IO.Unsafe.unsafePerformIO_entry() //  [R2]
         { info_tbl: [(cnFr,
                       label: GHC.IO.Unsafe.unsafePerformIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnFr: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnFs; else goto cnFt;
       cnFs: // global
           R2 = R2;
           R1 = GHC.IO.Unsafe.unsafePerformIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnFt: // global
           I64[Sp - 16] = block_cnFn_info;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 _cnFn() //  []
         { info_tbl: [(cnFn,
                       label: block_cnFn_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnFn: // global
           _snCX::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_cnFp_info;
           R1 = _snCX::P64;
           Sp = Sp + 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnFp() //  [R1]
         { info_tbl: [(cnFp,
                       label: block_cnFp_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnFp: // global
           R1 = R1;
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.586134089 UTC

[section ""cstring" . GHC.IO.Unsafe.$trModule4_bytes" {
     GHC.IO.Unsafe.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.58782198 UTC

[section ""data" . GHC.IO.Unsafe.$trModule3_closure" {
     GHC.IO.Unsafe.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.IO.Unsafe.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.589513981 UTC

[section ""cstring" . GHC.IO.Unsafe.$trModule2_bytes" {
     GHC.IO.Unsafe.$trModule2_bytes:
         I8[] [71,72,67,46,73,79,46,85,110,115,97,102,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.591213663 UTC

[section ""data" . GHC.IO.Unsafe.$trModule1_closure" {
     GHC.IO.Unsafe.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.IO.Unsafe.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.592866834 UTC

[section ""data" . GHC.IO.Unsafe.$trModule_closure" {
     GHC.IO.Unsafe.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.IO.Unsafe.$trModule3_closure+1;
         const GHC.IO.Unsafe.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.595462802 UTC

[section ""relreadonly" . SnFO_srt" { SnFO_srt:
 }]

