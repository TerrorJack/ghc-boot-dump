
==================== Asm code ====================
2018-03-16 16:05:55.638471122 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$WFD_closure
.type GHC.IO.FD.$WFD_closure, @object
GHC.IO.FD.$WFD_closure:
	.quad	GHC.IO.FD.$WFD_info


==================== Asm code ====================
2018-03-16 16:05:55.639450454 UTC

.section .text
.align 8
.globl GHC.IO.FD.$WFD_entry
.type GHC.IO.FD.$WFD_entry, @object
GHC.IO.FD.$WFD_entry:
_caZ14:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caZ1d
_caZ1e:
	movq $block_caZ11_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _caZ11
_caZ12:
	movq (%rbx),%rax
	jmp *(%rax)
_caZ1d:
	movl $GHC.IO.FD.$WFD_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$WFD_entry, .-GHC.IO.FD.$WFD_entry


==================== Asm code ====================
2018-03-16 16:05:55.640180077 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$WFD_info
.type GHC.IO.FD.$WFD_info, @object
GHC.IO.FD.$WFD_info:
	.quad	GHC.IO.FD.$WFD_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:05:55.640904124 UTC

.section .text
.align 8
_caZ11:
_caZ11:
	movq $block_caZ17_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _caZ17
_caZ18:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZ11, .-_caZ11


==================== Asm code ====================
2018-03-16 16:05:55.641650656 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZ11_info:
	.quad	_caZ11
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.642428983 UTC

.section .text
.align 8
_caZ17:
_caZ17:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caZ1i
_caZ1h:
	movq 7(%rbx),%rax
	movq $GHC.IO.FD.FD_con_info,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZ1i:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZ17, .-_caZ17


==================== Asm code ====================
2018-03-16 16:05:55.643113939 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZ17_info:
	.quad	_caZ17
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.647913189 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD5_closure
.type GHC.IO.FD.$fBufferedIOFD5_closure, @object
GHC.IO.FD.$fBufferedIOFD5_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD5_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.648749501 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD5_entry
.type GHC.IO.FD.$fBufferedIOFD5_entry, @object
GHC.IO.FD.$fBufferedIOFD5_entry:
_caZ1J:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _caZ1K
_uaZ2j:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _caZ1B
_caZ1K:
	movl $GHC.IO.FD.$fBufferedIOFD5_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fBufferedIOFD5_entry, .-GHC.IO.FD.$fBufferedIOFD5_entry


==================== Asm code ====================
2018-03-16 16:05:55.649618644 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD5_info
.type GHC.IO.FD.$fBufferedIOFD5_info, @object
GHC.IO.FD.$fBufferedIOFD5_info:
	.quad	GHC.IO.FD.$fBufferedIOFD5_entry
	.quad	0
	.quad	12884901902
	.quad	17179869207
	.quad	SaXeV_srt


==================== Asm code ====================
2018-03-16 16:05:55.650417579 UTC

.section .text
.align 8
_caZ1B:
_caZ1B:
	movq $block_caZ1E_info,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	jmp stg_ap_v_fast
	.size _caZ1B, .-_caZ1B


==================== Asm code ====================
2018-03-16 16:05:55.651261112 UTC

.section .text
.align 8
_caZ1E:
_caZ1E:
	movq $block_caZ1G_info,-8(%rbp)
	movq %rbx,%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _caZ1G
_caZ1H:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZ1E, .-_caZ1E


==================== Asm code ====================
2018-03-16 16:05:55.651946179 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZ1E_info:
	.quad	_caZ1E
	.quad	3
	.quad	4294967326
	.quad	SaXeV_srt


==================== Asm code ====================
2018-03-16 16:05:55.652978637 UTC

.section .text
.align 8
_caZ1G:
_caZ1G:
	cmpq $-1,7(%rbx)
	je _caZ2h
_caZ1S:
	movq 8(%rbp),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_uaZ2i:
	cmpq $11,%rax
	jne _caZ21
_caZ2d:
	movq 64(%rsp),%rax
	movq %rax,%rbx
	addq $40,%rbp
	jmp stg_ap_v_fast
_caZ2h:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rbx
	movq 32(%rbp),%rcx
	subq $8,%rsp
	movq %rax,%rdx
	xorl %eax,%eax
	movq %rdx,%r14
	movq %rcx,72(%rsp)
	call __hscore_get_errno
	addq $8,%rsp
	movslq %eax,%rax
	cmpq $4,%rax
	jne _uaZ2i
_caZ27:
	movq %r14,16(%rbp)
	movq %rbx,24(%rbp)
	movq 64(%rsp),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp _caZ1B
_caZ21:
	addq $40,%rbp
	jmp Foreign.C.Error.throwErrno1_entry
	.size _caZ1G, .-_caZ1G


==================== Asm code ====================
2018-03-16 16:05:55.655247669 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZ1G_info:
	.quad	_caZ1G
	.quad	4
	.quad	4294967326
	.quad	SaXeV_srt


==================== Asm code ====================
2018-03-16 16:05:55.657639705 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_raWUX_bytes:
	.asciz "GHC.IO.FD.fdWrite"


==================== Asm code ====================
2018-03-16 16:05:55.661059752 UTC

.section .data
.align 8
.align 1
lvl1_raWUY_closure:
	.quad	lvl1_raWUY_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.662227669 UTC

.section .text
.align 8
lvl1_raWUY_entry:
_caZ2K:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caZ2L
_caZ2M:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caZ2J
_caZ2I:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl_raWUX_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_caZ2L:
	jmp *-16(%r13)
_caZ2J:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl1_raWUY_entry, .-lvl1_raWUY_entry


==================== Asm code ====================
2018-03-16 16:05:55.663174124 UTC

.section .data.rel.ro
.align 8
.align 1
lvl1_raWUY_info:
	.quad	lvl1_raWUY_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:55.66547396 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$fBufferedIOFD9_bytes
.type GHC.IO.FD.$fBufferedIOFD9_bytes, @object
GHC.IO.FD.$fBufferedIOFD9_bytes:
	.asciz "GHC.IO.FD.fdReadNonBlocking"


==================== Asm code ====================
2018-03-16 16:05:55.668815052 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD8_closure
.type GHC.IO.FD.$fBufferedIOFD8_closure, @object
GHC.IO.FD.$fBufferedIOFD8_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.669924962 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD8_entry
.type GHC.IO.FD.$fBufferedIOFD8_entry, @object
GHC.IO.FD.$fBufferedIOFD8_entry:
_caZ31:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caZ32
_caZ33:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caZ30
_caZ2Z:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.FD.$fBufferedIOFD9_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_caZ32:
	jmp *-16(%r13)
_caZ30:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.$fBufferedIOFD8_entry, .-GHC.IO.FD.$fBufferedIOFD8_entry


==================== Asm code ====================
2018-03-16 16:05:55.670877165 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD8_info
.type GHC.IO.FD.$fBufferedIOFD8_info, @object
GHC.IO.FD.$fBufferedIOFD8_info:
	.quad	GHC.IO.FD.$fBufferedIOFD8_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:55.673344575 UTC

.section .data
.align 8
.align 1
lvl2_raWUZ_closure:
	.quad	GHC.Int.I64#_con_info
	.quad	-1


==================== Asm code ====================
2018-03-16 16:05:55.675844692 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD3_closure
.type GHC.IO.FD.$fBufferedIOFD3_closure, @object
GHC.IO.FD.$fBufferedIOFD3_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD3_info


==================== Asm code ====================
2018-03-16 16:05:55.67657971 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD3_entry
.type GHC.IO.FD.$fBufferedIOFD3_entry, @object
GHC.IO.FD.$fBufferedIOFD3_entry:
_caZ3g:
	movl $lvl2_raWUZ_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.FD.$fBufferedIOFD3_entry, .-GHC.IO.FD.$fBufferedIOFD3_entry


==================== Asm code ====================
2018-03-16 16:05:55.677181448 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD3_info
.type GHC.IO.FD.$fBufferedIOFD3_info, @object
GHC.IO.FD.$fBufferedIOFD3_info:
	.quad	GHC.IO.FD.$fBufferedIOFD3_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:55.679129363 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD2_closure
.type GHC.IO.FD.$fBufferedIOFD2_closure, @object
GHC.IO.FD.$fBufferedIOFD2_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.681001926 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD10_closure
.type GHC.IO.FD.$fBufferedIOFD10_closure, @object
GHC.IO.FD.$fBufferedIOFD10_closure:
	.quad	GHC.Types.I#_con_info
	.quad	-1


==================== Asm code ====================
2018-03-16 16:05:55.691474698 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$wreadRawBufferPtrNoBlock_closure
.type GHC.IO.FD.$wreadRawBufferPtrNoBlock_closure, @object
GHC.IO.FD.$wreadRawBufferPtrNoBlock_closure:
	.quad	GHC.IO.FD.$wreadRawBufferPtrNoBlock_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.692246824 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wreadRawBufferPtrNoBlock_slow
.type GHC.IO.FD.$wreadRawBufferPtrNoBlock_slow, @object
GHC.IO.FD.$wreadRawBufferPtrNoBlock_slow:
_caZ3r:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry
	.size GHC.IO.FD.$wreadRawBufferPtrNoBlock_slow, .-GHC.IO.FD.$wreadRawBufferPtrNoBlock_slow


==================== Asm code ====================
2018-03-16 16:05:55.693098647 UTC

.section .text
.align 8
sat_saWVZ_entry:
_caZ3G:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZ3Q
_caZ3P:
	subq $8,%rsp
	leaq 23(%rbx),%rax
	movq 15(%rbx),%rsi
	addq (%rax),%rsi
	movq 7(%rbx),%rdi
	movq 31(%rbx),%rdx
	xorl %eax,%eax
	call ghczuwrapperZC22ZCbaseZCSystemziPosixziInternalsZCread
	addq $8,%rsp
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_caZ3Q:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_saWVZ_entry, .-sat_saWVZ_entry


==================== Asm code ====================
2018-03-16 16:05:55.693811751 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saWVZ_info:
	.quad	sat_saWVZ_entry
	.quad	17179869184
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:55.694886154 UTC

.section .text
.align 8
sat_saWWc_entry:
_caZ4a:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZ4j
_caZ4k:
	movq $block_caZ4g_info,-8(%rbp)
	addq $-8,%rbp
	movq 7(%rbx),%rax
	leaq 23(%rbx),%rcx
	movq 15(%rbx),%rdx
	addq (%rcx),%rdx
	movq 31(%rbx),%rbx
	movq 872(%r13),%rcx
	movq 24(%rcx),%rsi
	movq %rbp,16(%rsi)
	movq 888(%r13),%rsi
	leaq 8(%r12),%rdi
	movq %rdi,8(%rsi)
	leaq 8(%r12),%rdi
	subq (%rsi),%rdi
	movq 104(%rcx),%rsi
	subq %rdi,%rsi
	movq %rsi,104(%rcx)
	subq $8,%rsp
	movq %r13,%rdi
	xorl %esi,%esi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call suspendThread
	addq $8,%rsp
	subq $8,%rsp
	movq 72(%rsp),%rcx
	movq %rbx,%rdx
	movq %r14,%rdi
	movq %rcx,%rsi
	movq %rax,%rbx
	xorl %eax,%eax
	call ghczuwrapperZC21ZCbaseZCSystemziPosixziInternalsZCread
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call resumeThread
	addq $8,%rsp
	movq %rax,%r13
	movq 872(%r13),%rax
	movq 24(%rax),%rcx
	movq 16(%rcx),%rbp
	leaq 192(%rcx),%r15
	movq $0,904(%r13)
	movq 888(%r13),%rcx
	movq 8(%rcx),%rdx
	leaq -8(%rdx),%r12
	movq (%rcx),%rsi
	movslq 48(%rcx),%rcx
	shlq $12,%rcx
	decq %rcx
	movq %rsi,%rdi
	addq %rcx,%rdi
	movq %rdi,856(%r13)
	subq %rsi,%rdx
	movq 104(%rax),%rcx
	addq %rdx,%rcx
	movq %rcx,104(%rax)
	movq (%rbp),%rax
	jmp *(%rax)
_caZ4j:
	jmp *-8(%r13)
	.size sat_saWWc_entry, .-sat_saWWc_entry


==================== Asm code ====================
2018-03-16 16:05:55.695853547 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saWWc_info:
	.quad	sat_saWWc_entry
	.quad	17179869184
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:55.696571023 UTC

.section .text
.align 8
_caZ4g:
_caZ4g:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZ4n
_caZ4m:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZ4n:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _caZ4g, .-_caZ4g


==================== Asm code ====================
2018-03-16 16:05:55.697231903 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZ4g_info:
	.quad	_caZ4g
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.698662757 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry
.type GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry, @object
GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry:
_caZ4B:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _caZ4C
_caZ4D:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _caZ4F
_caZ4E:
	testq %rdi,%rdi
	je _caZ4A
_caZ4z:
	movq $sat_saWVZ_info,-32(%r12)
	movq %rsi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%rbp)
	movq %r14,(%rbp)
	addq $-8,%rbp
	jmp _saWVH
_uaZ5f:
	movq %r14,-40(%rbp)
	movq %rbx,-32(%rbp)
	movq 64(%rsp),%rbx
	movq %rbx,-24(%rbp)
	movq 72(%rsp),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp _caZ41
_caZ4A:
	subq $8,%rsp
	movq %rsi,%rdi
	movq %rsi,%rax
	xorl %esi,%esi
	xorl %edx,%edx
	xorl %ecx,%ecx
	movq %rax,%rbx
	xorl %eax,%eax
	movq %r8,72(%rsp)
	movq %r9,80(%rsp)
	call fdReady
	addq $8,%rsp
	addq $-40,%r12
	movslq %eax,%rax
	testq %rax,%rax
	jne _uaZ5f
_caZ59:
	movl $GHC.IO.FD.$fBufferedIOFD2_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZ4F:
	movq $40,904(%r13)
_caZ4C:
	movl $GHC.IO.FD.$wreadRawBufferPtrNoBlock_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry, .-GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry


==================== Asm code ====================
2018-03-16 16:05:55.699587347 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$wreadRawBufferPtrNoBlock_info
.type GHC.IO.FD.$wreadRawBufferPtrNoBlock_info, @object
GHC.IO.FD.$wreadRawBufferPtrNoBlock_info:
	.quad	GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry
	.quad	0
	.quad	12884901902
	.quad	30064771072
	.quad	SaXeV_srt+8
	.quad	3974
	.quad	GHC.IO.FD.$wreadRawBufferPtrNoBlock_slow


==================== Asm code ====================
2018-03-16 16:05:55.700378521 UTC

.section .text
.align 8
_caZ41:
_caZ41:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _caZ56
_caZ55:
	movq $sat_saWWc_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	movq (%rbp),%rax
	movq %rax,40(%rbp)
	leaq -31(%r12),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp _saWVH
_caZ56:
	movq $40,904(%r13)
	movq $block_caZ40_info,-8(%rbp)
	movq 32(%rbp),%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _caZ41, .-_caZ41


==================== Asm code ====================
2018-03-16 16:05:55.701115458 UTC

.section .text
.align 8
_caZ40:
_caZ40:
	movq %rbx,40(%rbp)
	addq $8,%rbp
	jmp _caZ41
	.size _caZ40, .-_caZ40


==================== Asm code ====================
2018-03-16 16:05:55.701752758 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZ40_info:
	.quad	_caZ40
	.quad	3974
	.quad	4294967326
	.quad	SaXeV_srt+8


==================== Asm code ====================
2018-03-16 16:05:55.702438689 UTC

.section .text
.align 8
_saWVH:
_saWVH:
	movq 8(%rbp),%rax
	movq $block_caZ4J_info,8(%rbp)
	movl $GHC.IO.FD.$fBufferedIOFD3_closure+1,%edi
	movq (%rbp),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.IO.FD.$fBufferedIOFD5_entry
	.size _saWVH, .-_saWVH


==================== Asm code ====================
2018-03-16 16:05:55.703160781 UTC

.section .text
.align 8
_caZ4J:
_caZ4J:
	movq $block_caZ4L_info,(%rbp)
	testb $7,%bl
	jne _caZ4L
_caZ4O:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZ4J, .-_caZ4J


==================== Asm code ====================
2018-03-16 16:05:55.703801048 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZ4J_info:
	.quad	_caZ4J
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.704654331 UTC

.section .text
.align 8
_caZ4L:
_caZ4L:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZ4U
_caZ4T:
	movq 7(%rbx),%rax
	cmpq $-1,%rax
	jne _uaZ5d
_caZ50:
	addq $-16,%r12
	movl $GHC.IO.FD.$fBufferedIOFD2_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_uaZ5d:
	testq %rax,%rax
	jne _caZ4Z
_caZ51:
	addq $-16,%r12
	movl $GHC.IO.FD.$fBufferedIOFD10_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZ4Z:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZ4U:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZ4L, .-_caZ4L


==================== Asm code ====================
2018-03-16 16:05:55.705495023 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZ4L_info:
	.quad	_caZ4L
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.711030587 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.readRawBufferPtrNoBlock1_closure
.type GHC.IO.FD.readRawBufferPtrNoBlock1_closure, @object
GHC.IO.FD.readRawBufferPtrNoBlock1_closure:
	.quad	GHC.IO.FD.readRawBufferPtrNoBlock1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.711825073 UTC

.section .text
.align 8
.globl GHC.IO.FD.readRawBufferPtrNoBlock1_entry
.type GHC.IO.FD.readRawBufferPtrNoBlock1_entry, @object
GHC.IO.FD.readRawBufferPtrNoBlock1_entry:
_caZ6y:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _caZ6M
_caZ6N:
	movq $block_caZ6v_info,-40(%rbp)
	movq %rsi,%rbx
	movq %r14,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _caZ6v
_caZ6w:
	movq (%rbx),%rax
	jmp *(%rax)
_caZ6M:
	movl $GHC.IO.FD.readRawBufferPtrNoBlock1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.readRawBufferPtrNoBlock1_entry, .-GHC.IO.FD.readRawBufferPtrNoBlock1_entry


==================== Asm code ====================
2018-03-16 16:05:55.712525991 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.readRawBufferPtrNoBlock1_info
.type GHC.IO.FD.readRawBufferPtrNoBlock1_info, @object
GHC.IO.FD.readRawBufferPtrNoBlock1_info:
	.quad	GHC.IO.FD.readRawBufferPtrNoBlock1_entry
	.quad	0
	.quad	12884901902
	.quad	25769803801
	.quad	SaXeV_srt+16


==================== Asm code ====================
2018-03-16 16:05:55.713230767 UTC

.section .text
.align 8
_caZ6v:
_caZ6v:
	movq $block_caZ6B_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _caZ6B
_caZ6C:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZ6v, .-_caZ6v


==================== Asm code ====================
2018-03-16 16:05:55.713872088 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZ6v_info:
	.quad	_caZ6v
	.quad	4
	.quad	4294967326
	.quad	SaXeV_srt+16


==================== Asm code ====================
2018-03-16 16:05:55.714541697 UTC

.section .text
.align 8
_caZ6B:
_caZ6B:
	movq $block_caZ6G_info,(%rbp)
	movq 7(%rbx),%rax
	movq 32(%rbp),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _caZ6G
_caZ6H:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZ6B, .-_caZ6B


==================== Asm code ====================
2018-03-16 16:05:55.71512853 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZ6B_info:
	.quad	_caZ6B
	.quad	325
	.quad	4294967326
	.quad	SaXeV_srt+16


==================== Asm code ====================
2018-03-16 16:05:55.715784824 UTC

.section .text
.align 8
_caZ6G:
_caZ6G:
	movq $block_caZ6L_info,(%rbp)
	movq 7(%rbx),%rax
	movq 40(%rbp),%rbx
	movq %rax,40(%rbp)
	testb $7,%bl
	jne _caZ6L
_caZ6R:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZ6G, .-_caZ6G


==================== Asm code ====================
2018-03-16 16:05:55.716374607 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZ6G_info:
	.quad	_caZ6G
	.quad	837
	.quad	4294967326
	.quad	SaXeV_srt+16


==================== Asm code ====================
2018-03-16 16:05:55.717018725 UTC

.section .text
.align 8
_caZ6L:
_caZ6L:
	movq 40(%rbp),%r9
	movq 32(%rbp),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,40(%rbp)
	addq $40,%rbp
	jmp GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry
	.size _caZ6L, .-_caZ6L


==================== Asm code ====================
2018-03-16 16:05:55.71763751 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZ6L_info:
	.quad	_caZ6L
	.quad	1861
	.quad	4294967326
	.quad	SaXeV_srt+16


==================== Asm code ====================
2018-03-16 16:05:55.722113735 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$creadNonBlocking_closure
.type GHC.IO.FD.$w$creadNonBlocking_closure, @object
GHC.IO.FD.$w$creadNonBlocking_closure:
	.quad	GHC.IO.FD.$w$creadNonBlocking_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.722749618 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$creadNonBlocking_slow
.type GHC.IO.FD.$w$creadNonBlocking_slow, @object
GHC.IO.FD.$w$creadNonBlocking_slow:
_caZ7n:
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.FD.$w$creadNonBlocking_entry
	.size GHC.IO.FD.$w$creadNonBlocking_slow, .-GHC.IO.FD.$w$creadNonBlocking_slow


==================== Asm code ====================
2018-03-16 16:05:55.72358938 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$creadNonBlocking_entry
.type GHC.IO.FD.$w$creadNonBlocking_entry, @object
GHC.IO.FD.$w$creadNonBlocking_entry:
_caZ7t:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caZ7y
_caZ7z:
	movq $block_caZ7v_info,-8(%rbp)
	xorl %r9d,%r9d
	movq %r8,%rax
	movq %rdi,%r8
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.IO.FD.$fBufferedIOFD8_closure,%r14d
	movq %rax,-16(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry
_caZ7y:
	movl $GHC.IO.FD.$w$creadNonBlocking_closure,%ebx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
	.size GHC.IO.FD.$w$creadNonBlocking_entry, .-GHC.IO.FD.$w$creadNonBlocking_entry


==================== Asm code ====================
2018-03-16 16:05:55.724324781 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$creadNonBlocking_info
.type GHC.IO.FD.$w$creadNonBlocking_info, @object
GHC.IO.FD.$w$creadNonBlocking_info:
	.quad	GHC.IO.FD.$w$creadNonBlocking_entry
	.quad	0
	.quad	55834574862
	.quad	21474836480
	.quad	SaXeV_srt+16
	.quad	964
	.quad	GHC.IO.FD.$w$creadNonBlocking_slow


==================== Asm code ====================
2018-03-16 16:05:55.725033384 UTC

.section .text
.align 8
_caZ7v:
_caZ7v:
	movq $block_caZ7x_info,(%rbp)
	testb $7,%bl
	jne _caZ7x
_caZ7B:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZ7v, .-_caZ7v


==================== Asm code ====================
2018-03-16 16:05:55.725619241 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZ7v_info:
	.quad	_caZ7v
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.726399096 UTC

.section .text
.align 8
_caZ7x:
_caZ7x:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZ7H
_caZ7G:
	cmpq $-1,7(%rbx)
	je _caZ7N
_caZ7M:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZ7N:
	addq $-16,%r12
	movl $GHC.Base.Nothing_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZ7H:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZ7x, .-_caZ7x


==================== Asm code ====================
2018-03-16 16:05:55.727048091 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZ7x_info:
	.quad	_caZ7x
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.731170594 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD3_closure
.type GHC.IO.FD.$fRawIOFD3_closure, @object
GHC.IO.FD.$fRawIOFD3_closure:
	.quad	GHC.IO.FD.$fRawIOFD3_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.732426976 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fRawIOFD3_entry
.type GHC.IO.FD.$fRawIOFD3_entry, @object
GHC.IO.FD.$fRawIOFD3_entry:
_caZ8c:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _caZ8l
_caZ8m:
	movq $block_caZ89_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _caZ89
_caZ8a:
	movq (%rbx),%rax
	jmp *(%rax)
_caZ8l:
	movl $GHC.IO.FD.$fRawIOFD3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fRawIOFD3_entry, .-GHC.IO.FD.$fRawIOFD3_entry


==================== Asm code ====================
2018-03-16 16:05:55.733084714 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD3_info
.type GHC.IO.FD.$fRawIOFD3_info, @object
GHC.IO.FD.$fRawIOFD3_info:
	.quad	GHC.IO.FD.$fRawIOFD3_entry
	.quad	0
	.quad	12884901902
	.quad	17179869207
	.quad	SaXeV_srt+40


==================== Asm code ====================
2018-03-16 16:05:55.734140202 UTC

.section .text
.align 8
_caZ89:
_caZ89:
	movq $block_caZ8f_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _caZ8f
_caZ8g:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZ89, .-_caZ89


==================== Asm code ====================
2018-03-16 16:05:55.734728482 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZ89_info:
	.quad	_caZ89
	.quad	2
	.quad	4294967326
	.quad	SaXeV_srt+40


==================== Asm code ====================
2018-03-16 16:05:55.735360993 UTC

.section .text
.align 8
_caZ8f:
_caZ8f:
	movq $block_caZ8k_info,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _caZ8k
_caZ8p:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZ8f, .-_caZ8f


==================== Asm code ====================
2018-03-16 16:05:55.735979048 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZ8f_info:
	.quad	_caZ8f
	.quad	195
	.quad	4294967326
	.quad	SaXeV_srt+40


==================== Asm code ====================
2018-03-16 16:05:55.736618435 UTC

.section .text
.align 8
_caZ8k:
_caZ8k:
	movq 7(%rbx),%r8
	movq 24(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.FD.$w$creadNonBlocking_entry
	.size _caZ8k, .-_caZ8k


==================== Asm code ====================
2018-03-16 16:05:55.737199969 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZ8k_info:
	.quad	_caZ8k
	.quad	451
	.quad	4294967326
	.quad	SaXeV_srt+40


==================== Asm code ====================
2018-03-16 16:05:55.738978586 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$fBufferedIOFD4_bytes
.type GHC.IO.FD.$fBufferedIOFD4_bytes, @object
GHC.IO.FD.$fBufferedIOFD4_bytes:
	.asciz "GHC.IO.FD.fdWriteNonBlocking"


==================== Asm code ====================
2018-03-16 16:05:55.741639018 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD_loc_closure
.type GHC.IO.FD.$fBufferedIOFD_loc_closure, @object
GHC.IO.FD.$fBufferedIOFD_loc_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD_loc_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.742482422 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD_loc_entry
.type GHC.IO.FD.$fBufferedIOFD_loc_entry, @object
GHC.IO.FD.$fBufferedIOFD_loc_entry:
_caZ8V:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caZ8W
_caZ8X:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caZ8U
_caZ8T:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.FD.$fBufferedIOFD4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_caZ8W:
	jmp *-16(%r13)
_caZ8U:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.$fBufferedIOFD_loc_entry, .-GHC.IO.FD.$fBufferedIOFD_loc_entry


==================== Asm code ====================
2018-03-16 16:05:55.743209119 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD_loc_info
.type GHC.IO.FD.$fBufferedIOFD_loc_info, @object
GHC.IO.FD.$fBufferedIOFD_loc_info:
	.quad	GHC.IO.FD.$fBufferedIOFD_loc_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:55.746470977 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD14_closure
.type GHC.IO.FD.$fBufferedIOFD14_closure, @object
GHC.IO.FD.$fBufferedIOFD14_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD14_info


==================== Asm code ====================
2018-03-16 16:05:55.747214478 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD14_entry
.type GHC.IO.FD.$fBufferedIOFD14_entry, @object
GHC.IO.FD.$fBufferedIOFD14_entry:
_caZ9c:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZ9d
_caZ9e:
	movq $block_caZ99_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caZ99
_caZ9a:
	movq (%rbx),%rax
	jmp *(%rax)
_caZ9d:
	movl $GHC.IO.FD.$fBufferedIOFD14_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fBufferedIOFD14_entry, .-GHC.IO.FD.$fBufferedIOFD14_entry


==================== Asm code ====================
2018-03-16 16:05:55.747923579 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD14_info
.type GHC.IO.FD.$fBufferedIOFD14_info, @object
GHC.IO.FD.$fBufferedIOFD14_info:
	.quad	GHC.IO.FD.$fBufferedIOFD14_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:05:55.748624873 UTC

.section .text
.align 8
_caZ99:
_caZ99:
	cmpq $-1,7(%rbx)
	je _caZ9l
_caZ9k:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZ9l:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caZ99, .-_caZ99


==================== Asm code ====================
2018-03-16 16:05:55.749283619 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZ99_info:
	.quad	_caZ99
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.750968836 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$fBufferedIOFD13_bytes
.type GHC.IO.FD.$fBufferedIOFD13_bytes, @object
GHC.IO.FD.$fBufferedIOFD13_bytes:
	.asciz "GHC.IO.FD.fdRead"


==================== Asm code ====================
2018-03-16 16:05:55.753677434 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD12_closure
.type GHC.IO.FD.$fBufferedIOFD12_closure, @object
GHC.IO.FD.$fBufferedIOFD12_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD12_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.754526126 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD12_entry
.type GHC.IO.FD.$fBufferedIOFD12_entry, @object
GHC.IO.FD.$fBufferedIOFD12_entry:
_caZ9F:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caZ9G
_caZ9H:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caZ9E
_caZ9D:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.FD.$fBufferedIOFD13_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_caZ9G:
	jmp *-16(%r13)
_caZ9E:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.$fBufferedIOFD12_entry, .-GHC.IO.FD.$fBufferedIOFD12_entry


==================== Asm code ====================
2018-03-16 16:05:55.755296328 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD12_info
.type GHC.IO.FD.$fBufferedIOFD12_info, @object
GHC.IO.FD.$fBufferedIOFD12_info:
	.quad	GHC.IO.FD.$fBufferedIOFD12_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:55.771575782 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$wreadRawBufferPtr_closure
.type GHC.IO.FD.$wreadRawBufferPtr_closure, @object
GHC.IO.FD.$wreadRawBufferPtr_closure:
	.quad	GHC.IO.FD.$wreadRawBufferPtr_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.772327501 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wreadRawBufferPtr_slow
.type GHC.IO.FD.$wreadRawBufferPtr_slow, @object
GHC.IO.FD.$wreadRawBufferPtr_slow:
_caZ9Q:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.FD.$wreadRawBufferPtr_entry
	.size GHC.IO.FD.$wreadRawBufferPtr_slow, .-GHC.IO.FD.$wreadRawBufferPtr_slow


==================== Asm code ====================
2018-03-16 16:05:55.773342156 UTC

.section .text
.align 8
sat_saWXe_entry:
_caZa9:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZaa
_caZab:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZad
_caZac:
	movq 7(%rbx),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call rtsSupportsBoundThreads
	addq $8,%rsp
	testq %rax,%rax
	je _caZa8
_caZa7:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rsi
	movl $GHC.Event.Internal.evtRead_closure,%r14d
	jmp GHC.Event.Thread.threadWaitRead1_entry
_caZad:
	movq $16,904(%r13)
_caZaa:
	jmp *-8(%r13)
_caZa8:
	addq $-16,%r12
	movq $block_caZan_info,-8(%rbp)
	movslq %ebx,%rbx
	addq $-8,%rbp
	jmp stg_waitRead#
	.size sat_saWXe_entry, .-sat_saWXe_entry


==================== Asm code ====================
2018-03-16 16:05:55.774080431 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saWXe_info:
	.quad	sat_saWXe_entry
	.quad	4294967296
	.quad	12884901898
	.quad	4294967299
	.quad	SaXeV_srt+56


==================== Asm code ====================
2018-03-16 16:05:55.774763182 UTC

.section .text
.align 8
_caZan:
_caZan:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caZan, .-_caZan


==================== Asm code ====================
2018-03-16 16:05:55.775380436 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZan_info:
	.quad	_caZan
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.776159485 UTC

.section .text
.align 8
sat_saWXk_entry:
_caZaz:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caZaD
_caZaE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_caZaw_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _caZaw
_caZax:
	movq (%rbx),%rax
	jmp *(%rax)
_caZaD:
	jmp *-16(%r13)
	.size sat_saWXk_entry, .-sat_saWXk_entry


==================== Asm code ====================
2018-03-16 16:05:55.776835923 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saWXk_info:
	.quad	sat_saWXk_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:55.777609638 UTC

.section .text
.align 8
_caZaw:
_caZaw:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZaH
_caZaG:
	movq 7(%rbx),%rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZaH:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZaw, .-_caZaw


==================== Asm code ====================
2018-03-16 16:05:55.778278375 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZaw_info:
	.quad	_caZaw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.779054172 UTC

.section .text
.align 8
sat_saWXt_entry:
_caZaS:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZb2
_caZb1:
	subq $8,%rsp
	leaq 23(%rbx),%rax
	movq 15(%rbx),%rsi
	addq (%rax),%rsi
	movq 7(%rbx),%rdi
	movq 31(%rbx),%rdx
	xorl %eax,%eax
	call ghczuwrapperZC22ZCbaseZCSystemziPosixziInternalsZCread
	addq $8,%rsp
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_caZb2:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_saWXt_entry, .-sat_saWXt_entry


==================== Asm code ====================
2018-03-16 16:05:55.779804838 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saWXt_info:
	.quad	sat_saWXt_entry
	.quad	17179869184
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:55.781788067 UTC

.section .text
.align 8
sat_saWXP_entry:
_caZbt:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZbC
_caZbD:
	movq $block_caZbz_info,-8(%rbp)
	addq $-8,%rbp
	movq 7(%rbx),%rax
	leaq 23(%rbx),%rcx
	movq 15(%rbx),%rdx
	addq (%rcx),%rdx
	movq 31(%rbx),%rbx
	movq 872(%r13),%rcx
	movq 24(%rcx),%rsi
	movq %rbp,16(%rsi)
	movq 888(%r13),%rsi
	leaq 8(%r12),%rdi
	movq %rdi,8(%rsi)
	leaq 8(%r12),%rdi
	subq (%rsi),%rdi
	movq 104(%rcx),%rsi
	subq %rdi,%rsi
	movq %rsi,104(%rcx)
	subq $8,%rsp
	movq %r13,%rdi
	xorl %esi,%esi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call suspendThread
	addq $8,%rsp
	subq $8,%rsp
	movq 72(%rsp),%rcx
	movq %rbx,%rdx
	movq %r14,%rdi
	movq %rcx,%rsi
	movq %rax,%rbx
	xorl %eax,%eax
	call ghczuwrapperZC21ZCbaseZCSystemziPosixziInternalsZCread
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call resumeThread
	addq $8,%rsp
	movq %rax,%r13
	movq 872(%r13),%rax
	movq 24(%rax),%rcx
	movq 16(%rcx),%rbp
	leaq 192(%rcx),%r15
	movq $0,904(%r13)
	movq 888(%r13),%rcx
	movq 8(%rcx),%rdx
	leaq -8(%rdx),%r12
	movq (%rcx),%rsi
	movslq 48(%rcx),%rcx
	shlq $12,%rcx
	decq %rcx
	movq %rsi,%rdi
	addq %rcx,%rdi
	movq %rdi,856(%r13)
	subq %rsi,%rdx
	movq 104(%rax),%rcx
	addq %rdx,%rcx
	movq %rcx,104(%rax)
	movq (%rbp),%rax
	jmp *(%rax)
_caZbC:
	jmp *-8(%r13)
	.size sat_saWXP_entry, .-sat_saWXP_entry


==================== Asm code ====================
2018-03-16 16:05:55.782709289 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saWXP_info:
	.quad	sat_saWXP_entry
	.quad	17179869184
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:55.783431656 UTC

.section .text
.align 8
_caZbz:
_caZbz:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZbG
_caZbF:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZbG:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _caZbz, .-_caZbz


==================== Asm code ====================
2018-03-16 16:05:55.784076321 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZbz_info:
	.quad	_caZbz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.784852634 UTC

.section .text
.align 8
sat_saWXX_entry:
_caZbZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZc9
_caZc8:
	subq $8,%rsp
	leaq 23(%rbx),%rax
	movq 15(%rbx),%rsi
	addq (%rax),%rsi
	movq 7(%rbx),%rdi
	movq 31(%rbx),%rdx
	xorl %eax,%eax
	call ghczuwrapperZC22ZCbaseZCSystemziPosixziInternalsZCread
	addq $8,%rsp
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_caZc9:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_saWXX_entry, .-sat_saWXX_entry


==================== Asm code ====================
2018-03-16 16:05:55.785532416 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saWXX_info:
	.quad	sat_saWXX_entry
	.quad	17179869184
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:55.7865698 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wreadRawBufferPtr_entry
.type GHC.IO.FD.$wreadRawBufferPtr_entry, @object
GHC.IO.FD.$wreadRawBufferPtr_entry:
_caZcd:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _caZce
_caZcf:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _caZch
_caZcg:
	testq %rdi,%rdi
	je _caZcc
_caZcb:
	movq $sat_saWXt_info,-32(%r12)
	movq %rsi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	movq %rsi,-16(%rbp)
	leaq -31(%r12),%rax
	movq %rax,-8(%rbp)
	movq %r14,(%rbp)
	addq $-16,%rbp
	jmp _caZ9X
_caZcc:
	subq $8,%rsp
	movq %rsi,%rdi
	movq %rsi,%rax
	xorl %esi,%esi
	xorl %edx,%edx
	xorl %ecx,%ecx
	movq %rax,%rbx
	xorl %eax,%eax
	movq %r8,72(%rsp)
	movq %r9,80(%rsp)
	call fdReady
	addq $8,%rsp
	addq $-40,%r12
	movslq %eax,%rax
	cmpq $-1,%rax
	jne _caZd2
_caZdd:
	movq $block_caZda_info,-40(%rbp)
	movq %r14,%rax
	movq %rax,-32(%rbp)
	movq %rbx,-24(%rbp)
	movq 64(%rsp),%rax
	movq %rax,-16(%rbp)
	movq 72(%rsp),%rax
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp Foreign.C.Error.throwErrno1_entry
_caZd2:
	movq %r14,-40(%rbp)
	movq %rbx,-32(%rbp)
	movq 64(%rsp),%rbx
	movq %rbx,-24(%rbp)
	movq 72(%rsp),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp _caZbc
_caZch:
	movq $40,904(%r13)
_caZce:
	movl $GHC.IO.FD.$wreadRawBufferPtr_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.FD.$wreadRawBufferPtr_entry, .-GHC.IO.FD.$wreadRawBufferPtr_entry


==================== Asm code ====================
2018-03-16 16:05:55.787519478 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$wreadRawBufferPtr_info
.type GHC.IO.FD.$wreadRawBufferPtr_info, @object
GHC.IO.FD.$wreadRawBufferPtr_info:
	.quad	GHC.IO.FD.$wreadRawBufferPtr_entry
	.quad	0
	.quad	8250632175630
	.quad	30064771072
	.quad	SaXeV_srt
	.quad	3974
	.quad	GHC.IO.FD.$wreadRawBufferPtr_slow


==================== Asm code ====================
2018-03-16 16:05:55.788203827 UTC

.section .text
.align 8
_caZda:
_caZda:
	movq $block_caZdc_info,(%rbp)
	testb $7,%bl
	jne _caZdc
_caZdg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZda, .-_caZda


==================== Asm code ====================
2018-03-16 16:05:55.78882084 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZda_info:
	.quad	_caZda
	.quad	1925
	.quad	30064771102
	.quad	SaXeV_srt+56


==================== Asm code ====================
2018-03-16 16:05:55.789481453 UTC

.section .text
.align 8
_caZdc:
_caZdc:
	movq 8(%rbp),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rax
	movq %rax,8(%rbp)
	movq 24(%rbp),%rax
	movq %rax,16(%rbp)
	movq 32(%rbp),%rax
	movq %rax,24(%rbp)
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	jmp _caZbc
	.size _caZdc, .-_caZdc


==================== Asm code ====================
2018-03-16 16:05:55.790071701 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZdc_info:
	.quad	_caZdc
	.quad	1925
	.quad	30064771102
	.quad	SaXeV_srt+56


==================== Asm code ====================
2018-03-16 16:05:55.790985441 UTC

.section .text
.align 8
_caZbc:
_caZbc:
	addq $16,%r12
	movq 32(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _caZcq
_caZcp:
	testq %rax,%rax
	je _caZcW
_caZcz:
	addq $-16,%r12
	addq $-8,%rbp
	jmp _caZbh
_caZcT:
	addq $-16,%r12
	movq $block_caZbh_info,-8(%rbp)
	movslq %ebx,%rbx
	addq $-8,%rbp
	jmp stg_waitRead#
_caZcW:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call rtsSupportsBoundThreads
	addq $8,%rsp
	testq %rax,%rax
	je _caZcT
_caZcL:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movslq %ebx,%rax
	movq %rax,(%r12)
	movq $block_caZcJ_info,-8(%rbp)
	leaq -7(%r12),%rsi
	movl $GHC.Event.Internal.evtRead_closure,%r14d
	addq $-8,%rbp
	jmp GHC.Event.Thread.threadWaitRead1_entry
_caZcq:
	movq $16,904(%r13)
	movq $block_caZbb_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _caZbc, .-_caZbc


==================== Asm code ====================
2018-03-16 16:05:55.791825854 UTC

.section .text
.align 8
_caZbb:
_caZbb:
	movq %rbx,40(%rbp)
	addq $8,%rbp
	jmp _caZbc
	.size _caZbb, .-_caZbb


==================== Asm code ====================
2018-03-16 16:05:55.792377745 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZbb_info:
	.quad	_caZbb
	.quad	3974
	.quad	30064771102
	.quad	SaXeV_srt+56


==================== Asm code ====================
2018-03-16 16:05:55.792994951 UTC

.section .text
.align 8
_caZcJ:
_caZcJ:
	jmp _caZbh
	.size _caZcJ, .-_caZcJ


==================== Asm code ====================
2018-03-16 16:05:55.793901903 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZcJ_info:
	.quad	_caZcJ
	.quad	3974
	.quad	30064771102
	.quad	SaXeV_srt+56


==================== Asm code ====================
2018-03-16 16:05:55.794850015 UTC

.section .text
.align 8
_caZbh:
_caZbh:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _caZct
_caZcs:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq 24(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 48(%rbp),%rsi
	subq $8,%rsp
	movq %rax,%rdi
	xorl %eax,%eax
	movq %rdi,%r14
	movq %rcx,72(%rsp)
	movq %rdx,80(%rsp)
	movq %rsi,88(%rsp)
	call rtsSupportsBoundThreads
	addq $8,%rsp
	testq %rax,%rax
	je _caZcw
_caZcv:
	movq $sat_saWXP_info,-32(%r12)
	movq %rbx,-24(%r12)
	movq 64(%rsp),%rax
	movq %rax,-16(%r12)
	movq 72(%rsp),%rax
	movq %rax,-8(%r12)
	movq 80(%rsp),%rax
	movq %rax,(%r12)
	movq %r14,48(%rbp)
	movq %rbx,32(%rbp)
	leaq -31(%r12),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp _caZ9X
_caZcw:
	movq $sat_saWXX_info,-32(%r12)
	movq %rbx,-24(%r12)
	movq 64(%rsp),%rax
	movq %rax,-16(%r12)
	movq 72(%rsp),%rax
	movq %rax,-8(%r12)
	movq 80(%rsp),%rax
	movq %rax,(%r12)
	movq %r14,48(%rbp)
	movq %rbx,32(%rbp)
	leaq -31(%r12),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp _caZ9X
_caZct:
	movq $40,904(%r13)
	movq $block_caZbh_info,(%rbp)
	jmp stg_gc_noregs
	.size _caZbh, .-_caZbh


==================== Asm code ====================
2018-03-16 16:05:55.79570651 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZbh_info:
	.quad	_caZbh
	.quad	3974
	.quad	30064771102
	.quad	SaXeV_srt+56


==================== Asm code ====================
2018-03-16 16:05:55.796510093 UTC

.section .text
.align 8
_caZ9X:
_caZ9X:
	addq $16,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _caZck
_caZcj:
	movq $sat_saWXe_info,-8(%r12)
	movq (%rbp),%rbx
	movq %rbx,(%r12)
	movq 16(%rbp),%rbx
	movq $block_caZaq_info,16(%rbp)
	leaq -7(%r12),%r8
	movq %rax,%rdi
	movq %rbx,%rsi
	movl $GHC.IO.FD.$fBufferedIOFD14_closure+1,%r14d
	addq $16,%rbp
	jmp Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry
_caZck:
	movq $16,904(%r13)
	movq $block_caZ9W_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unpt_r1
	.size _caZ9X, .-_caZ9X


==================== Asm code ====================
2018-03-16 16:05:55.79734125 UTC

.section .text
.align 8
_caZ9W:
_caZ9W:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _caZ9X
	.size _caZ9W, .-_caZ9W


==================== Asm code ====================
2018-03-16 16:05:55.797877435 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZ9W_info:
	.quad	_caZ9W
	.quad	195
	.quad	30064771102
	.quad	SaXeV_srt+56


==================== Asm code ====================
2018-03-16 16:05:55.798552538 UTC

.section .text
.align 8
_caZaq:
_caZaq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caZcn
_caZcm:
	movq $sat_saWXk_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZcn:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZaq, .-_caZaq


==================== Asm code ====================
2018-03-16 16:05:55.799233702 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZaq_info:
	.quad	_caZaq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.804207055 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD5_closure
.type GHC.IO.FD.$fRawIOFD5_closure, @object
GHC.IO.FD.$fRawIOFD5_closure:
	.quad	GHC.IO.FD.$fRawIOFD5_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.805483337 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fRawIOFD5_entry
.type GHC.IO.FD.$fRawIOFD5_entry, @object
GHC.IO.FD.$fRawIOFD5_entry:
_caZfo:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _caZfC
_caZfD:
	movq $block_caZfl_info,-40(%rbp)
	movq %rsi,%rbx
	movq %r14,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _caZfl
_caZfm:
	movq (%rbx),%rax
	jmp *(%rax)
_caZfC:
	movl $GHC.IO.FD.$fRawIOFD5_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fRawIOFD5_entry, .-GHC.IO.FD.$fRawIOFD5_entry


==================== Asm code ====================
2018-03-16 16:05:55.806163551 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD5_info
.type GHC.IO.FD.$fRawIOFD5_info, @object
GHC.IO.FD.$fRawIOFD5_info:
	.quad	GHC.IO.FD.$fRawIOFD5_entry
	.quad	0
	.quad	12884901902
	.quad	25769803801
	.quad	SaXeV_srt+80


==================== Asm code ====================
2018-03-16 16:05:55.806894045 UTC

.section .text
.align 8
_caZfl:
_caZfl:
	movq $block_caZfr_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _caZfr
_caZfs:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZfl, .-_caZfl


==================== Asm code ====================
2018-03-16 16:05:55.807558011 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZfl_info:
	.quad	_caZfl
	.quad	4
	.quad	4294967326
	.quad	SaXeV_srt+80


==================== Asm code ====================
2018-03-16 16:05:55.80834217 UTC

.section .text
.align 8
_caZfr:
_caZfr:
	movq $block_caZfw_info,(%rbp)
	movq 7(%rbx),%rax
	movq 32(%rbp),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _caZfw
_caZfx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZfr, .-_caZfr


==================== Asm code ====================
2018-03-16 16:05:55.808952603 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZfr_info:
	.quad	_caZfr
	.quad	325
	.quad	4294967326
	.quad	SaXeV_srt+80


==================== Asm code ====================
2018-03-16 16:05:55.809729904 UTC

.section .text
.align 8
_caZfw:
_caZfw:
	movq $block_caZfB_info,(%rbp)
	movq 7(%rbx),%rax
	movq 40(%rbp),%rbx
	movq %rax,40(%rbp)
	testb $7,%bl
	jne _caZfB
_caZfH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZfw, .-_caZfw


==================== Asm code ====================
2018-03-16 16:05:55.810327699 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZfw_info:
	.quad	_caZfw
	.quad	837
	.quad	4294967326
	.quad	SaXeV_srt+80


==================== Asm code ====================
2018-03-16 16:05:55.811018505 UTC

.section .text
.align 8
_caZfB:
_caZfB:
	movq 40(%rbp),%r9
	movq 32(%rbp),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,40(%rbp)
	addq $40,%rbp
	jmp GHC.IO.FD.$wreadRawBufferPtr_entry
	.size _caZfB, .-_caZfB


==================== Asm code ====================
2018-03-16 16:05:55.81168222 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZfB_info:
	.quad	_caZfB
	.quad	1861
	.quad	4294967326
	.quad	SaXeV_srt+80


==================== Asm code ====================
2018-03-16 16:05:55.815903569 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD4_closure
.type GHC.IO.FD.$fRawIOFD4_closure, @object
GHC.IO.FD.$fRawIOFD4_closure:
	.quad	GHC.IO.FD.$fRawIOFD4_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.816701278 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fRawIOFD4_entry
.type GHC.IO.FD.$fRawIOFD4_entry, @object
GHC.IO.FD.$fRawIOFD4_entry:
_caZgj:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _caZgs
_caZgt:
	movq $block_caZgg_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _caZgg
_caZgh:
	movq (%rbx),%rax
	jmp *(%rax)
_caZgs:
	movl $GHC.IO.FD.$fRawIOFD4_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fRawIOFD4_entry, .-GHC.IO.FD.$fRawIOFD4_entry


==================== Asm code ====================
2018-03-16 16:05:55.81801905 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD4_info
.type GHC.IO.FD.$fRawIOFD4_info, @object
GHC.IO.FD.$fRawIOFD4_info:
	.quad	GHC.IO.FD.$fRawIOFD4_entry
	.quad	0
	.quad	55834574862
	.quad	17179869207
	.quad	SaXeV_srt+80


==================== Asm code ====================
2018-03-16 16:05:55.818709939 UTC

.section .text
.align 8
_caZgg:
_caZgg:
	movq $block_caZgm_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _caZgm
_caZgn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZgg, .-_caZgg


==================== Asm code ====================
2018-03-16 16:05:55.819340071 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZgg_info:
	.quad	_caZgg
	.quad	2
	.quad	21474836510
	.quad	SaXeV_srt+80


==================== Asm code ====================
2018-03-16 16:05:55.820037769 UTC

.section .text
.align 8
_caZgm:
_caZgm:
	movq $block_caZgr_info,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _caZgr
_caZgw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZgm, .-_caZgm


==================== Asm code ====================
2018-03-16 16:05:55.820687575 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZgm_info:
	.quad	_caZgm
	.quad	195
	.quad	21474836510
	.quad	SaXeV_srt+80


==================== Asm code ====================
2018-03-16 16:05:55.82139862 UTC

.section .text
.align 8
_caZgr:
_caZgr:
	xorl %r9d,%r9d
	movq 24(%rbp),%r8
	movq 8(%rbp),%rdi
	movq 16(%rbp),%rsi
	movl $GHC.IO.FD.$fBufferedIOFD12_closure,%r14d
	movq 7(%rbx),%rax
	movq %rax,24(%rbp)
	addq $24,%rbp
	jmp GHC.IO.FD.$wreadRawBufferPtr_entry
	.size _caZgr, .-_caZgr


==================== Asm code ====================
2018-03-16 16:05:55.822051575 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZgr_info:
	.quad	_caZgr
	.quad	451
	.quad	21474836510
	.quad	SaXeV_srt+80


==================== Asm code ====================
2018-03-16 16:05:55.838003614 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$wwriteRawBufferPtr_closure
.type GHC.IO.FD.$wwriteRawBufferPtr_closure, @object
GHC.IO.FD.$wwriteRawBufferPtr_closure:
	.quad	GHC.IO.FD.$wwriteRawBufferPtr_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.838771591 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wwriteRawBufferPtr_slow
.type GHC.IO.FD.$wwriteRawBufferPtr_slow, @object
GHC.IO.FD.$wwriteRawBufferPtr_slow:
_caZgY:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.FD.$wwriteRawBufferPtr_entry
	.size GHC.IO.FD.$wwriteRawBufferPtr_slow, .-GHC.IO.FD.$wwriteRawBufferPtr_slow


==================== Asm code ====================
2018-03-16 16:05:55.839719826 UTC

.section .text
.align 8
sat_saWZ2_entry:
_caZhh:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZhi
_caZhj:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZhl
_caZhk:
	movq 7(%rbx),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call rtsSupportsBoundThreads
	addq $8,%rsp
	testq %rax,%rax
	je _caZhg
_caZhf:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rsi
	movl $GHC.Event.Internal.evtWrite_closure,%r14d
	jmp GHC.Event.Thread.threadWaitRead1_entry
_caZhl:
	movq $16,904(%r13)
_caZhi:
	jmp *-8(%r13)
_caZhg:
	addq $-16,%r12
	movq $block_caZhv_info,-8(%rbp)
	movslq %ebx,%rbx
	addq $-8,%rbp
	jmp stg_waitWrite#
	.size sat_saWZ2_entry, .-sat_saWZ2_entry


==================== Asm code ====================
2018-03-16 16:05:55.84048418 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saWZ2_info:
	.quad	sat_saWZ2_entry
	.quad	4294967296
	.quad	279172874250
	.quad	4294967299
	.quad	SaXeV_srt+64


==================== Asm code ====================
2018-03-16 16:05:55.841124927 UTC

.section .text
.align 8
_caZhv:
_caZhv:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caZhv, .-_caZhv


==================== Asm code ====================
2018-03-16 16:05:55.841906777 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZhv_info:
	.quad	_caZhv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.842643517 UTC

.section .text
.align 8
sat_saWZ9_entry:
_caZhH:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caZhO
_caZhP:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_caZhE_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _caZhE
_caZhF:
	movq (%rbx),%rax
	jmp *(%rax)
_caZhO:
	jmp *-16(%r13)
	.size sat_saWZ9_entry, .-sat_saWZ9_entry


==================== Asm code ====================
2018-03-16 16:05:55.843325157 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saWZ9_info:
	.quad	sat_saWZ9_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:55.844061653 UTC

.section .text
.align 8
_caZhE:
_caZhE:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZhS
_caZhR:
	movq 7(%rbx),%rax
	movslq %eax,%rax
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZhS:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZhE, .-_caZhE


==================== Asm code ====================
2018-03-16 16:05:55.844680433 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZhE_info:
	.quad	_caZhE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.845505539 UTC

.section .text
.align 8
sat_saWZi_entry:
_caZi3:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZid
_caZic:
	subq $8,%rsp
	leaq 23(%rbx),%rax
	movq 15(%rbx),%rsi
	addq (%rax),%rsi
	movq 7(%rbx),%rdi
	movq 31(%rbx),%rdx
	xorl %eax,%eax
	call ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite
	addq $8,%rsp
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_caZid:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_saWZi_entry, .-sat_saWZi_entry


==================== Asm code ====================
2018-03-16 16:05:55.84618083 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saWZi_info:
	.quad	sat_saWZi_entry
	.quad	17179869184
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:55.84725233 UTC

.section .text
.align 8
sat_saWZB_entry:
_caZiz:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZiI
_caZiJ:
	movq $block_caZiF_info,-8(%rbp)
	addq $-8,%rbp
	movq 7(%rbx),%rax
	leaq 23(%rbx),%rcx
	movq 15(%rbx),%rdx
	addq (%rcx),%rdx
	movq 31(%rbx),%rbx
	movq 872(%r13),%rcx
	movq 24(%rcx),%rsi
	movq %rbp,16(%rsi)
	movq 888(%r13),%rsi
	leaq 8(%r12),%rdi
	movq %rdi,8(%rsi)
	leaq 8(%r12),%rdi
	subq (%rsi),%rdi
	movq 104(%rcx),%rsi
	subq %rdi,%rsi
	movq %rsi,104(%rcx)
	subq $8,%rsp
	movq %r13,%rdi
	xorl %esi,%esi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call suspendThread
	addq $8,%rsp
	subq $8,%rsp
	movq 72(%rsp),%rcx
	movq %rbx,%rdx
	movq %r14,%rdi
	movq %rcx,%rsi
	movq %rax,%rbx
	xorl %eax,%eax
	call ghczuwrapperZC19ZCbaseZCSystemziPosixziInternalsZCwrite
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call resumeThread
	addq $8,%rsp
	movq %rax,%r13
	movq 872(%r13),%rax
	movq 24(%rax),%rcx
	movq 16(%rcx),%rbp
	leaq 192(%rcx),%r15
	movq $0,904(%r13)
	movq 888(%r13),%rcx
	movq 8(%rcx),%rdx
	leaq -8(%rdx),%r12
	movq (%rcx),%rsi
	movslq 48(%rcx),%rcx
	shlq $12,%rcx
	decq %rcx
	movq %rsi,%rdi
	addq %rcx,%rdi
	movq %rdi,856(%r13)
	subq %rsi,%rdx
	movq 104(%rax),%rcx
	addq %rdx,%rcx
	movq %rcx,104(%rax)
	movq (%rbp),%rax
	jmp *(%rax)
_caZiI:
	jmp *-8(%r13)
	.size sat_saWZB_entry, .-sat_saWZB_entry


==================== Asm code ====================
2018-03-16 16:05:55.848160404 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saWZB_info:
	.quad	sat_saWZB_entry
	.quad	17179869184
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:55.848915016 UTC

.section .text
.align 8
_caZiF:
_caZiF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZiM
_caZiL:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZiM:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _caZiF, .-_caZiF


==================== Asm code ====================
2018-03-16 16:05:55.849617604 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZiF_info:
	.quad	_caZiF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.850430058 UTC

.section .text
.align 8
sat_saWZJ_entry:
_caZj5:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZjf
_caZje:
	subq $8,%rsp
	leaq 23(%rbx),%rax
	movq 15(%rbx),%rsi
	addq (%rax),%rsi
	movq 7(%rbx),%rdi
	movq 31(%rbx),%rdx
	xorl %eax,%eax
	call ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite
	addq $8,%rsp
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_caZjf:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_saWZJ_entry, .-sat_saWZJ_entry


==================== Asm code ====================
2018-03-16 16:05:55.851169676 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saWZJ_info:
	.quad	sat_saWZJ_entry
	.quad	17179869184
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:55.85234156 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wwriteRawBufferPtr_entry
.type GHC.IO.FD.$wwriteRawBufferPtr_entry, @object
GHC.IO.FD.$wwriteRawBufferPtr_entry:
_caZjj:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _caZjk
_caZjl:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _caZjn
_caZjm:
	testq %rdi,%rdi
	je _caZji
_caZjh:
	movq $sat_saWZi_info,-32(%r12)
	movq %rsi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	movq %rsi,-16(%rbp)
	leaq -31(%r12),%rax
	movq %rax,-8(%rbp)
	movq %r14,(%rbp)
	addq $-16,%rbp
	jmp _caZh5
_uaZkd:
	movq %r14,-32(%rbp)
	movq %rbx,-24(%rbp)
	movq 64(%rsp),%rax
	movq %rax,-16(%rbp)
	movq 72(%rsp),%rax
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp _caZin
_caZji:
	subq $8,%rsp
	movq %rsi,%rdi
	movq %rsi,%rax
	movl $1,%esi
	xorl %edx,%edx
	xorl %ecx,%ecx
	movq %rax,%rbx
	xorl %eax,%eax
	movq %r8,72(%rsp)
	movq %r9,80(%rsp)
	call fdReady
	addq $8,%rsp
	addq $-40,%r12
	movslq %eax,%rax
	testq %rax,%rax
	jne _uaZkd
_uaZkc:
	movq %r14,-40(%rbp)
	movq %rbx,-32(%rbp)
	movq 64(%rsp),%rbx
	movq %rbx,-24(%rbp)
	movq 72(%rsp),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp _caZjM
_caZjn:
	movq $40,904(%r13)
_caZjk:
	movl $GHC.IO.FD.$wwriteRawBufferPtr_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.FD.$wwriteRawBufferPtr_entry, .-GHC.IO.FD.$wwriteRawBufferPtr_entry


==================== Asm code ====================
2018-03-16 16:05:55.853376255 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$wwriteRawBufferPtr_info
.type GHC.IO.FD.$wwriteRawBufferPtr_info, @object
GHC.IO.FD.$wwriteRawBufferPtr_info:
	.quad	GHC.IO.FD.$wwriteRawBufferPtr_entry
	.quad	0
	.quad	837518622734
	.quad	30064771072
	.quad	SaXeV_srt+64
	.quad	3974
	.quad	GHC.IO.FD.$wwriteRawBufferPtr_slow


==================== Asm code ====================
2018-03-16 16:05:55.854817765 UTC

.section .text
.align 8
_caZjM:
_caZjM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZjQ
_caZjP:
	movq (%rbp),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	subq $8,%rsp
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rsi,%r14
	movq %rcx,72(%rsp)
	movq %rdx,80(%rsp)
	call rtsSupportsBoundThreads
	addq $8,%rsp
	testq %rax,%rax
	je _caZk8
_caZk0:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movslq %ebx,%rax
	movq %rax,(%r12)
	movq $block_caZjY_info,-8(%rbp)
	leaq -7(%r12),%rsi
	movl $GHC.Event.Internal.evtWrite_closure,%r14d
	addq $-8,%rbp
	jmp GHC.Event.Thread.threadWaitRead1_entry
_caZk8:
	addq $-16,%r12
	movq $block_caZin_info,(%rbp)
	movq %rbx,%rax
	movslq %ebx,%rbx
	movq %r14,8(%rbp)
	movq %rax,16(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	movq 72(%rsp),%rax
	movq %rax,32(%rbp)
	jmp stg_waitWrite#
_caZjQ:
	movq $16,904(%r13)
	movq $block_caZjK_info,-8(%rbp)
	movq 32(%rbp),%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _caZjM, .-_caZjM


==================== Asm code ====================
2018-03-16 16:05:55.855706056 UTC

.section .text
.align 8
_caZjK:
_caZjK:
	movq %rbx,40(%rbp)
	addq $8,%rbp
	jmp _caZjM
	.size _caZjK, .-_caZjK


==================== Asm code ====================
2018-03-16 16:05:55.856263522 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZjK_info:
	.quad	_caZjK
	.quad	3974
	.quad	287762808862
	.quad	SaXeV_srt+64


==================== Asm code ====================
2018-03-16 16:05:55.856921676 UTC

.section .text
.align 8
_caZjY:
_caZjY:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rbx
	movq %rbx,16(%rbp)
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	movq 32(%rbp),%rax
	movq %rbx,32(%rbp)
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _caZin
	.size _caZjY, .-_caZjY


==================== Asm code ====================
2018-03-16 16:05:55.857657258 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZjY_info:
	.quad	_caZjY
	.quad	3974
	.quad	287762808862
	.quad	SaXeV_srt+64


==================== Asm code ====================
2018-03-16 16:05:55.858583521 UTC

.section .text
.align 8
_caZin:
_caZin:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _caZjw
_caZjv:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq 24(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 40(%rbp),%rsi
	subq $8,%rsp
	movq %rax,%rdi
	xorl %eax,%eax
	movq %rdi,%r14
	movq %rcx,72(%rsp)
	movq %rdx,80(%rsp)
	movq %rsi,88(%rsp)
	call rtsSupportsBoundThreads
	addq $8,%rsp
	testq %rax,%rax
	je _caZjz
_caZjy:
	movq $sat_saWZB_info,-32(%r12)
	movq %rbx,-24(%r12)
	movq 64(%rsp),%rax
	movq %rax,-16(%r12)
	movq 72(%rsp),%rax
	movq %rax,-8(%r12)
	movq 80(%rsp),%rax
	movq %rax,(%r12)
	movq %r14,40(%rbp)
	movq %rbx,24(%rbp)
	leaq -31(%r12),%rax
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp _caZh5
_caZjz:
	movq $sat_saWZJ_info,-32(%r12)
	movq %rbx,-24(%r12)
	movq 64(%rsp),%rax
	movq %rax,-16(%r12)
	movq 72(%rsp),%rax
	movq %rax,-8(%r12)
	movq 80(%rsp),%rax
	movq %rax,(%r12)
	movq %r14,40(%rbp)
	movq %rbx,24(%rbp)
	leaq -31(%r12),%rax
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp _caZh5
_caZjw:
	movq $40,904(%r13)
	movq $block_caZin_info,(%rbp)
	jmp stg_gc_noregs
	.size _caZin, .-_caZin


==================== Asm code ====================
2018-03-16 16:05:55.859398969 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZin_info:
	.quad	_caZin
	.quad	1925
	.quad	287762808862
	.quad	SaXeV_srt+64


==================== Asm code ====================
2018-03-16 16:05:55.860155966 UTC

.section .text
.align 8
_caZh5:
_caZh5:
	addq $16,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _caZjq
_caZjp:
	movq $sat_saWZ2_info,-8(%r12)
	movq (%rbp),%rbx
	movq %rbx,(%r12)
	movq 16(%rbp),%rbx
	movq $block_caZhy_info,16(%rbp)
	leaq -7(%r12),%r8
	movq %rax,%rdi
	movq %rbx,%rsi
	movl $GHC.IO.FD.$fBufferedIOFD14_closure+1,%r14d
	addq $16,%rbp
	jmp Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry
_caZjq:
	movq $16,904(%r13)
	movq $block_caZh4_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unpt_r1
	.size _caZh5, .-_caZh5


==================== Asm code ====================
2018-03-16 16:05:55.860914915 UTC

.section .text
.align 8
_caZh4:
_caZh4:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _caZh5
	.size _caZh4, .-_caZh4


==================== Asm code ====================
2018-03-16 16:05:55.861519283 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZh4_info:
	.quad	_caZh4
	.quad	195
	.quad	287762808862
	.quad	SaXeV_srt+64


==================== Asm code ====================
2018-03-16 16:05:55.862218015 UTC

.section .text
.align 8
_caZhy:
_caZhy:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caZjt
_caZjs:
	movq $sat_saWZ9_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZjt:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZhy, .-_caZhy


==================== Asm code ====================
2018-03-16 16:05:55.862850691 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZhy_info:
	.quad	_caZhy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.867729255 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.writeRawBufferPtr1_closure
.type GHC.IO.FD.writeRawBufferPtr1_closure, @object
GHC.IO.FD.writeRawBufferPtr1_closure:
	.quad	GHC.IO.FD.writeRawBufferPtr1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.868527602 UTC

.section .text
.align 8
.globl GHC.IO.FD.writeRawBufferPtr1_entry
.type GHC.IO.FD.writeRawBufferPtr1_entry, @object
GHC.IO.FD.writeRawBufferPtr1_entry:
_caZm2:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _caZmg
_caZmh:
	movq $block_caZlZ_info,-40(%rbp)
	movq %rsi,%rbx
	movq %r14,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _caZlZ
_caZm0:
	movq (%rbx),%rax
	jmp *(%rax)
_caZmg:
	movl $GHC.IO.FD.writeRawBufferPtr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.writeRawBufferPtr1_entry, .-GHC.IO.FD.writeRawBufferPtr1_entry


==================== Asm code ====================
2018-03-16 16:05:55.86976045 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.writeRawBufferPtr1_info
.type GHC.IO.FD.writeRawBufferPtr1_info, @object
GHC.IO.FD.writeRawBufferPtr1_info:
	.quad	GHC.IO.FD.writeRawBufferPtr1_entry
	.quad	0
	.quad	12884901902
	.quad	25769803801
	.quad	SaXeV_srt+120


==================== Asm code ====================
2018-03-16 16:05:55.870462016 UTC

.section .text
.align 8
_caZlZ:
_caZlZ:
	movq $block_caZm5_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _caZm5
_caZm6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZlZ, .-_caZlZ


==================== Asm code ====================
2018-03-16 16:05:55.871080214 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZlZ_info:
	.quad	_caZlZ
	.quad	4
	.quad	4294967326
	.quad	SaXeV_srt+120


==================== Asm code ====================
2018-03-16 16:05:55.87174955 UTC

.section .text
.align 8
_caZm5:
_caZm5:
	movq $block_caZma_info,(%rbp)
	movq 7(%rbx),%rax
	movq 32(%rbp),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _caZma
_caZmb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZm5, .-_caZm5


==================== Asm code ====================
2018-03-16 16:05:55.872350319 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZm5_info:
	.quad	_caZm5
	.quad	325
	.quad	4294967326
	.quad	SaXeV_srt+120


==================== Asm code ====================
2018-03-16 16:05:55.873106161 UTC

.section .text
.align 8
_caZma:
_caZma:
	movq $block_caZmf_info,(%rbp)
	movq 7(%rbx),%rax
	movq 40(%rbp),%rbx
	movq %rax,40(%rbp)
	testb $7,%bl
	jne _caZmf
_caZml:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZma, .-_caZma


==================== Asm code ====================
2018-03-16 16:05:55.873786877 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZma_info:
	.quad	_caZma
	.quad	837
	.quad	4294967326
	.quad	SaXeV_srt+120


==================== Asm code ====================
2018-03-16 16:05:55.874470622 UTC

.section .text
.align 8
_caZmf:
_caZmf:
	movq 40(%rbp),%r9
	movq 32(%rbp),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,40(%rbp)
	addq $40,%rbp
	jmp GHC.IO.FD.$wwriteRawBufferPtr_entry
	.size _caZmf, .-_caZmf


==================== Asm code ====================
2018-03-16 16:05:55.875128233 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZmf_info:
	.quad	_caZmf
	.quad	1861
	.quad	4294967326
	.quad	SaXeV_srt+120


==================== Asm code ====================
2018-03-16 16:05:55.880314972 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$wfdWrite_closure
.type GHC.IO.FD.$wfdWrite_closure, @object
GHC.IO.FD.$wfdWrite_closure:
	.quad	GHC.IO.FD.$wfdWrite_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.880984218 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wfdWrite_slow
.type GHC.IO.FD.$wfdWrite_slow, @object
GHC.IO.FD.$wfdWrite_slow:
_caZmR:
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.FD.$wfdWrite_entry
	.size GHC.IO.FD.$wfdWrite_slow, .-GHC.IO.FD.$wfdWrite_slow


==================== Asm code ====================
2018-03-16 16:05:55.882051962 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wfdWrite_entry
.type GHC.IO.FD.$wfdWrite_entry, @object
GHC.IO.FD.$wfdWrite_entry:
_caZmX:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _caZn2
_uaZnl:
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp _caZmS
_caZn2:
	movl $GHC.IO.FD.$wfdWrite_closure,%ebx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
	.size GHC.IO.FD.$wfdWrite_entry, .-GHC.IO.FD.$wfdWrite_entry


==================== Asm code ====================
2018-03-16 16:05:55.882710528 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$wfdWrite_info
.type GHC.IO.FD.$wfdWrite_info, @object
GHC.IO.FD.$wfdWrite_info:
	.quad	GHC.IO.FD.$wfdWrite_entry
	.quad	0
	.quad	55834574862
	.quad	21474836480
	.quad	SaXeV_srt+120
	.quad	964
	.quad	GHC.IO.FD.$wfdWrite_slow


==================== Asm code ====================
2018-03-16 16:05:55.883366658 UTC

.section .text
.align 8
_caZmS:
_caZmS:
	movq $block_caZmZ_info,-8(%rbp)
	xorl %r9d,%r9d
	movq 16(%rbp),%r8
	movq 8(%rbp),%rdi
	movq (%rbp),%rsi
	movl $lvl1_raWUY_closure,%r14d
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.FD.$wwriteRawBufferPtr_entry
	.size _caZmS, .-_caZmS


==================== Asm code ====================
2018-03-16 16:05:55.884108294 UTC

.section .text
.align 8
_caZmZ:
_caZmZ:
	movq $block_caZn1_info,(%rbp)
	testb $7,%bl
	jne _caZn1
_caZn5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZmZ, .-_caZmZ


==================== Asm code ====================
2018-03-16 16:05:55.884741456 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZmZ_info:
	.quad	_caZmZ
	.quad	964
	.quad	38654705694
	.quad	SaXeV_srt+120


==================== Asm code ====================
2018-03-16 16:05:55.885537723 UTC

.section .text
.align 8
_caZn1:
_caZn1:
	movq 32(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rax,%rbx
	jge _caZnd
_caZne:
	movq 8(%rbp),%rcx
	movq %rcx,8(%rbp)
	movq 16(%rbp),%rcx
	movq %rcx,16(%rbp)
	movq 24(%rbp),%rcx
	addq %rbx,%rcx
	movq %rcx,24(%rbp)
	subq %rbx,%rax
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp _caZmS
_caZnd:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caZn1, .-_caZn1


==================== Asm code ====================
2018-03-16 16:05:55.886248767 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZn1_info:
	.quad	_caZn1
	.quad	964
	.quad	38654705694
	.quad	SaXeV_srt+120


==================== Asm code ====================
2018-03-16 16:05:55.890315183 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD2_closure
.type GHC.IO.FD.$fRawIOFD2_closure, @object
GHC.IO.FD.$fRawIOFD2_closure:
	.quad	GHC.IO.FD.$fRawIOFD2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.891049589 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fRawIOFD2_entry
.type GHC.IO.FD.$fRawIOFD2_entry, @object
GHC.IO.FD.$fRawIOFD2_entry:
_caZnV:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _caZo4
_caZo5:
	movq $block_caZnS_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _caZnS
_caZnT:
	movq (%rbx),%rax
	jmp *(%rax)
_caZo4:
	movl $GHC.IO.FD.$fRawIOFD2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fRawIOFD2_entry, .-GHC.IO.FD.$fRawIOFD2_entry


==================== Asm code ====================
2018-03-16 16:05:55.891747496 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD2_info
.type GHC.IO.FD.$fRawIOFD2_info, @object
GHC.IO.FD.$fRawIOFD2_info:
	.quad	GHC.IO.FD.$fRawIOFD2_entry
	.quad	0
	.quad	21474836494
	.quad	17179869207
	.quad	SaXeV_srt+136


==================== Asm code ====================
2018-03-16 16:05:55.892501455 UTC

.section .text
.align 8
_caZnS:
_caZnS:
	movq $block_caZnY_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _caZnY
_caZnZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZnS, .-_caZnS


==================== Asm code ====================
2018-03-16 16:05:55.893161303 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZnS_info:
	.quad	_caZnS
	.quad	2
	.quad	4294967326
	.quad	SaXeV_srt+136


==================== Asm code ====================
2018-03-16 16:05:55.893911649 UTC

.section .text
.align 8
_caZnY:
_caZnY:
	movq $block_caZo3_info,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _caZo3
_caZo8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZnY, .-_caZnY


==================== Asm code ====================
2018-03-16 16:05:55.89456316 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZnY_info:
	.quad	_caZnY
	.quad	195
	.quad	4294967326
	.quad	SaXeV_srt+136


==================== Asm code ====================
2018-03-16 16:05:55.895203706 UTC

.section .text
.align 8
_caZo3:
_caZo3:
	movq 7(%rbx),%r8
	movq 24(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.FD.$wfdWrite_entry
	.size _caZo3, .-_caZo3


==================== Asm code ====================
2018-03-16 16:05:55.895825684 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZo3_info:
	.quad	_caZo3
	.quad	451
	.quad	4294967326
	.quad	SaXeV_srt+136


==================== Asm code ====================
2018-03-16 16:05:55.909381024 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$cwriteNonBlocking_closure
.type GHC.IO.FD.$w$cwriteNonBlocking_closure, @object
GHC.IO.FD.$w$cwriteNonBlocking_closure:
	.quad	GHC.IO.FD.$w$cwriteNonBlocking_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.910066493 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cwriteNonBlocking_slow
.type GHC.IO.FD.$w$cwriteNonBlocking_slow, @object
GHC.IO.FD.$w$cwriteNonBlocking_slow:
_caZoy:
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.FD.$w$cwriteNonBlocking_entry
	.size GHC.IO.FD.$w$cwriteNonBlocking_slow, .-GHC.IO.FD.$w$cwriteNonBlocking_slow


==================== Asm code ====================
2018-03-16 16:05:55.910933402 UTC

.section .text
.align 8
sat_saX0O_entry:
_caZoL:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZoV
_caZoU:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 23(%rbx),%rdx
	xorl %eax,%eax
	call ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite
	addq $8,%rsp
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_caZoV:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_saX0O_entry, .-sat_saX0O_entry


==================== Asm code ====================
2018-03-16 16:05:55.911602918 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX0O_info:
	.quad	sat_saX0O_entry
	.quad	12884901888
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:55.912653519 UTC

.section .text
.align 8
sat_saX1e_entry:
_caZpi:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZpr
_caZps:
	movq $block_caZpo_info,-8(%rbp)
	addq $-8,%rbp
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq 872(%r13),%rdx
	movq 24(%rdx),%rsi
	movq %rbp,16(%rsi)
	movq 888(%r13),%rsi
	leaq 8(%r12),%rdi
	movq %rdi,8(%rsi)
	leaq 8(%r12),%rdi
	subq (%rsi),%rdi
	movq 104(%rdx),%rsi
	subq %rdi,%rsi
	movq %rsi,104(%rdx)
	subq $8,%rsp
	movq %r13,%rdi
	xorl %esi,%esi
	movq %rax,%rdx
	xorl %eax,%eax
	movq %rdx,%r14
	movq %rcx,72(%rsp)
	call suspendThread
	addq $8,%rsp
	subq $8,%rsp
	movq 72(%rsp),%rcx
	movq %rbx,%rdx
	movq %r14,%rdi
	movq %rcx,%rsi
	movq %rax,%rbx
	xorl %eax,%eax
	call ghczuwrapperZC19ZCbaseZCSystemziPosixziInternalsZCwrite
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call resumeThread
	addq $8,%rsp
	movq %rax,%r13
	movq 872(%r13),%rax
	movq 24(%rax),%rcx
	movq 16(%rcx),%rbp
	leaq 192(%rcx),%r15
	movq $0,904(%r13)
	movq 888(%r13),%rcx
	movq 8(%rcx),%rdx
	leaq -8(%rdx),%r12
	movq (%rcx),%rsi
	movslq 48(%rcx),%rcx
	shlq $12,%rcx
	decq %rcx
	movq %rsi,%rdi
	addq %rcx,%rdi
	movq %rdi,856(%r13)
	subq %rsi,%rdx
	movq 104(%rax),%rcx
	addq %rdx,%rcx
	movq %rcx,104(%rax)
	movq (%rbp),%rax
	jmp *(%rax)
_caZpr:
	jmp *-8(%r13)
	.size sat_saX1e_entry, .-sat_saX1e_entry


==================== Asm code ====================
2018-03-16 16:05:55.913848827 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX1e_info:
	.quad	sat_saX1e_entry
	.quad	12884901888
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:55.914630839 UTC

.section .text
.align 8
_caZpo:
_caZpo:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZpv
_caZpu:
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZpv:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _caZpo, .-_caZpo


==================== Asm code ====================
2018-03-16 16:05:55.915247786 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZpo_info:
	.quad	_caZpo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.91606812 UTC

.section .text
.align 8
sat_saX1u_entry:
_caZpO:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZpY
_caZpX:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 23(%rbx),%rdx
	xorl %eax,%eax
	call ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite
	addq $8,%rsp
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_caZpY:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_saX1u_entry, .-sat_saX1u_entry


==================== Asm code ====================
2018-03-16 16:05:55.916745524 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX1u_info:
	.quad	sat_saX1u_entry
	.quad	12884901888
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:55.917787455 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cwriteNonBlocking_entry
.type GHC.IO.FD.$w$cwriteNonBlocking_entry, @object
GHC.IO.FD.$w$cwriteNonBlocking_entry:
_caZq2:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _caZq3
_caZq4:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _caZq6
_caZq5:
	testq %rsi,%rsi
	je _caZq1
_caZq0:
	movq $sat_saX0O_info,-24(%r12)
	movq %r14,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	movq $block_caZq7_info,-8(%rbp)
	movl $GHC.IO.FD.$fBufferedIOFD3_closure+1,%edi
	leaq -23(%r12),%rsi
	movl $GHC.IO.FD.$fBufferedIOFD_loc_closure,%r14d
	addq $-8,%rbp
	jmp GHC.IO.FD.$fBufferedIOFD5_entry
_uaZrk:
	movq %r14,-32(%rbp)
	movq %rbx,-24(%rbp)
	movq 64(%rsp),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp _caZp6
_caZq1:
	subq $8,%rsp
	movq %rdi,%rax
	movq %r14,%rdi
	movl $1,%esi
	xorl %edx,%edx
	xorl %ecx,%ecx
	movq %rax,%rbx
	xorl %eax,%eax
	movq %r8,72(%rsp)
	call fdReady
	addq $8,%rsp
	addq $-32,%r12
	movslq %eax,%rax
	testq %rax,%rax
	jne _uaZrk
_caZrf:
	movl $GHC.IO.FD.$fBufferedIOFD2_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_caZq6:
	movq $32,904(%r13)
_caZq3:
	movl $GHC.IO.FD.$w$cwriteNonBlocking_closure,%ebx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
	.size GHC.IO.FD.$w$cwriteNonBlocking_entry, .-GHC.IO.FD.$w$cwriteNonBlocking_entry


==================== Asm code ====================
2018-03-16 16:05:55.918696962 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$cwriteNonBlocking_info
.type GHC.IO.FD.$w$cwriteNonBlocking_info, @object
GHC.IO.FD.$w$cwriteNonBlocking_info:
	.quad	GHC.IO.FD.$w$cwriteNonBlocking_entry
	.quad	0
	.quad	6755403736023054
	.quad	21474836480
	.quad	SaXeV_srt+8
	.quad	964
	.quad	GHC.IO.FD.$w$cwriteNonBlocking_slow


==================== Asm code ====================
2018-03-16 16:05:55.91965357 UTC

.section .text
.align 8
_caZp6:
_caZp6:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _caZqv
_caZqu:
	movq (%rbp),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	subq $8,%rsp
	movq %rax,%rdx
	xorl %eax,%eax
	movq %rdx,%r14
	movq %rcx,72(%rsp)
	call rtsSupportsBoundThreads
	addq $8,%rsp
	testq %rax,%rax
	je _caZqV
_caZqA:
	movq $sat_saX1e_info,-24(%r12)
	movq %r14,-16(%r12)
	movq %rbx,-8(%r12)
	movq 64(%rsp),%rax
	movq %rax,(%r12)
	movq $block_caZqw_info,24(%rbp)
	movl $GHC.IO.FD.$fBufferedIOFD3_closure+1,%edi
	leaq -23(%r12),%rsi
	movl $GHC.IO.FD.$fBufferedIOFD_loc_closure,%r14d
	addq $24,%rbp
	jmp GHC.IO.FD.$fBufferedIOFD5_entry
_caZqV:
	movq $sat_saX1u_info,-24(%r12)
	movq %r14,-16(%r12)
	movq %rbx,-8(%r12)
	movq 64(%rsp),%rax
	movq %rax,(%r12)
	movq $block_caZqS_info,24(%rbp)
	movl $GHC.IO.FD.$fBufferedIOFD3_closure+1,%edi
	leaq -23(%r12),%rsi
	movl $GHC.IO.FD.$fBufferedIOFD_loc_closure,%r14d
	addq $24,%rbp
	jmp GHC.IO.FD.$fBufferedIOFD5_entry
_caZqv:
	movq $32,904(%r13)
	movq $block_caZp5_info,-8(%rbp)
	movq 24(%rbp),%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _caZp6, .-_caZp6


==================== Asm code ====================
2018-03-16 16:05:55.920574912 UTC

.section .text
.align 8
_caZp5:
_caZp5:
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp _caZp6
	.size _caZp5, .-_caZp5


==================== Asm code ====================
2018-03-16 16:05:55.921149792 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZp5_info:
	.quad	_caZp5
	.quad	964
	.quad	4503603922337822
	.quad	SaXeV_srt+8


==================== Asm code ====================
2018-03-16 16:05:55.921876076 UTC

.section .text
.align 8
_caZqS:
_caZqS:
	movq $block_caZqU_info,(%rbp)
	testb $7,%bl
	jne _caZqU
_caZqX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZqS, .-_caZqS


==================== Asm code ====================
2018-03-16 16:05:55.922496914 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZqS_info:
	.quad	_caZqS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.92329012 UTC

.section .text
.align 8
_caZqU:
_caZqU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZr3
_caZr2:
	movq 7(%rbx),%rax
	cmpq $-1,%rax
	jne _caZrb
_uaZrn:
	addq $8,%rbp
	jmp _caZrc
_caZrb:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZr3:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZqU, .-_caZqU


==================== Asm code ====================
2018-03-16 16:05:55.923974479 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZqU_info:
	.quad	_caZqU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.924663833 UTC

.section .text
.align 8
_caZqw:
_caZqw:
	movq $block_caZqy_info,(%rbp)
	testb $7,%bl
	jne _caZqy
_caZqC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZqw, .-_caZqw


==================== Asm code ====================
2018-03-16 16:05:55.925467247 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZqw_info:
	.quad	_caZqw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.92629221 UTC

.section .text
.align 8
_caZqy:
_caZqy:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZqI
_caZqH:
	movq 7(%rbx),%rax
	cmpq $-1,%rax
	jne _caZqQ
_uaZrm:
	addq $8,%rbp
	jmp _caZrc
_caZqQ:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZqI:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZqy, .-_caZqy


==================== Asm code ====================
2018-03-16 16:05:55.927442533 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZqy_info:
	.quad	_caZqy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.928099474 UTC

.section .text
.align 8
_caZq7:
_caZq7:
	movq $block_caZq9_info,(%rbp)
	testb $7,%bl
	jne _caZq9
_caZqb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZq7, .-_caZq7


==================== Asm code ====================
2018-03-16 16:05:55.92867977 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZq7_info:
	.quad	_caZq7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.929442952 UTC

.section .text
.align 8
_caZq9:
_caZq9:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZqh
_caZqg:
	movq 7(%rbx),%rax
	cmpq $-1,%rax
	jne _caZqp
_uaZrj:
	addq $8,%rbp
	jmp _caZrc
_caZqp:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZqh:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZq9, .-_caZq9


==================== Asm code ====================
2018-03-16 16:05:55.930119241 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZq9_info:
	.quad	_caZq9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.930729545 UTC

.section .text
.align 8
_caZrc:
_caZrc:
	addq $-16,%r12
	movl $GHC.IO.FD.$fBufferedIOFD2_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caZrc, .-_caZrc


==================== Asm code ====================
2018-03-16 16:05:55.934899889 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD1_closure
.type GHC.IO.FD.$fRawIOFD1_closure, @object
GHC.IO.FD.$fRawIOFD1_closure:
	.quad	GHC.IO.FD.$fRawIOFD1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.935652717 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fRawIOFD1_entry
.type GHC.IO.FD.$fRawIOFD1_entry, @object
GHC.IO.FD.$fRawIOFD1_entry:
_caZsR:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _caZt0
_caZt1:
	movq $block_caZsO_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _caZsO
_caZsP:
	movq (%rbx),%rax
	jmp *(%rax)
_caZt0:
	movl $GHC.IO.FD.$fRawIOFD1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fRawIOFD1_entry, .-GHC.IO.FD.$fRawIOFD1_entry


==================== Asm code ====================
2018-03-16 16:05:55.93635002 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD1_info
.type GHC.IO.FD.$fRawIOFD1_info, @object
GHC.IO.FD.$fRawIOFD1_info:
	.quad	GHC.IO.FD.$fRawIOFD1_entry
	.quad	0
	.quad	21474836494
	.quad	17179869207
	.quad	SaXeV_srt+160


==================== Asm code ====================
2018-03-16 16:05:55.937106618 UTC

.section .text
.align 8
_caZsO:
_caZsO:
	movq $block_caZsU_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _caZsU
_caZsV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZsO, .-_caZsO


==================== Asm code ====================
2018-03-16 16:05:55.938107562 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZsO_info:
	.quad	_caZsO
	.quad	2
	.quad	4294967326
	.quad	SaXeV_srt+160


==================== Asm code ====================
2018-03-16 16:05:55.938789001 UTC

.section .text
.align 8
_caZsU:
_caZsU:
	movq $block_caZsZ_info,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _caZsZ
_caZt4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZsU, .-_caZsU


==================== Asm code ====================
2018-03-16 16:05:55.939420967 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZsU_info:
	.quad	_caZsU
	.quad	195
	.quad	4294967326
	.quad	SaXeV_srt+160


==================== Asm code ====================
2018-03-16 16:05:55.940097771 UTC

.section .text
.align 8
_caZsZ:
_caZsZ:
	movq 7(%rbx),%r8
	movq 24(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.FD.$w$cwriteNonBlocking_entry
	.size _caZsZ, .-_caZsZ


==================== Asm code ====================
2018-03-16 16:05:55.940685469 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZsZ_info:
	.quad	_caZsZ
	.quad	451
	.quad	4294967326
	.quad	SaXeV_srt+160


==================== Asm code ====================
2018-03-16 16:05:55.942560762 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD_closure
.type GHC.IO.FD.$fRawIOFD_closure, @object
GHC.IO.FD.$fRawIOFD_closure:
	.quad	GHC.IO.Device.C:RawIO_con_info
	.quad	GHC.IO.FD.$fRawIOFD4_closure+4
	.quad	GHC.IO.FD.$fRawIOFD3_closure+4
	.quad	GHC.IO.FD.$fRawIOFD2_closure+4
	.quad	GHC.IO.FD.$fRawIOFD1_closure+4
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.947507293 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_closure
.type GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_closure, @object
GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.948295804 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_entry
.type GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_entry, @object
GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_entry:
_caZtB:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _caZtT
_caZtU:
	movq $block_caZty_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _caZty
_caZtz:
	movq (%rbx),%rax
	jmp *(%rax)
_caZtT:
	movl $GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_entry, .-GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_entry


==================== Asm code ====================
2018-03-16 16:05:55.949013494 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_info
.type GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_info, @object
GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_info:
	.quad	GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_entry
	.quad	0
	.quad	279172874254
	.quad	12884901903
	.quad	SaXeV_srt+136


==================== Asm code ====================
2018-03-16 16:05:55.950193756 UTC

.section .text
.align 8
_caZty:
_caZty:
	movq $block_caZtE_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _caZtE
_caZtF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZty, .-_caZty


==================== Asm code ====================
2018-03-16 16:05:55.951424701 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZty_info:
	.quad	_caZty
	.quad	1
	.quad	4294967326
	.quad	SaXeV_srt+136


==================== Asm code ====================
2018-03-16 16:05:55.952109957 UTC

.section .text
.align 8
_caZtE:
_caZtE:
	movq $block_caZtP_info,(%rbp)
	movq 24(%rbp),%rax
	movq 32(%rbp),%r8
	subq %rax,%r8
	movq 48(%rbp),%rdi
	addq %rax,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.IO.FD.$wfdWrite_entry
	.size _caZtE, .-_caZtE


==================== Asm code ====================
2018-03-16 16:05:55.952733248 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZtE_info:
	.quad	_caZtE
	.quad	2950
	.quad	4294967326
	.quad	SaXeV_srt+136


==================== Asm code ====================
2018-03-16 16:05:55.953495332 UTC

.section .text
.align 8
_caZtP:
_caZtP:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _caZtZ
_caZtY:
	movq 48(%rbp),%rax
	movq 40(%rbp),%rbx
	movq 8(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rbx,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rdx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZtZ:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZtP, .-_caZtP


==================== Asm code ====================
2018-03-16 16:05:55.954146984 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZtP_info:
	.quad	_caZtP
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.95710222 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.fdIsNonBlocking_closure
.type GHC.IO.FD.fdIsNonBlocking_closure, @object
GHC.IO.FD.fdIsNonBlocking_closure:
	.quad	GHC.IO.FD.fdIsNonBlocking_info


==================== Asm code ====================
2018-03-16 16:05:55.957909755 UTC

.section .text
.align 8
.globl GHC.IO.FD.fdIsNonBlocking_entry
.type GHC.IO.FD.fdIsNonBlocking_entry, @object
GHC.IO.FD.fdIsNonBlocking_entry:
_caZus:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZuw
_caZux:
	movq $block_caZup_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caZup
_caZuq:
	movq (%rbx),%rax
	jmp *(%rax)
_caZuw:
	movl $GHC.IO.FD.fdIsNonBlocking_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.fdIsNonBlocking_entry, .-GHC.IO.FD.fdIsNonBlocking_entry


==================== Asm code ====================
2018-03-16 16:05:55.958548455 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.fdIsNonBlocking_info
.type GHC.IO.FD.fdIsNonBlocking_info, @object
GHC.IO.FD.fdIsNonBlocking_info:
	.quad	GHC.IO.FD.fdIsNonBlocking_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:05:55.959242137 UTC

.section .text
.align 8
_caZup:
_caZup:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZuA
_caZuz:
	movq 15(%rbx),%rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZuA:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZup, .-_caZup


==================== Asm code ====================
2018-03-16 16:05:55.959925924 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZup_info:
	.quad	_caZup
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.963211622 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.fdFD_closure
.type GHC.IO.FD.fdFD_closure, @object
GHC.IO.FD.fdFD_closure:
	.quad	GHC.IO.FD.fdFD_info


==================== Asm code ====================
2018-03-16 16:05:55.963959878 UTC

.section .text
.align 8
.globl GHC.IO.FD.fdFD_entry
.type GHC.IO.FD.fdFD_entry, @object
GHC.IO.FD.fdFD_entry:
_caZuT:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZuX
_caZuY:
	movq $block_caZuQ_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caZuQ
_caZuR:
	movq (%rbx),%rax
	jmp *(%rax)
_caZuX:
	movl $GHC.IO.FD.fdFD_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.fdFD_entry, .-GHC.IO.FD.fdFD_entry


==================== Asm code ====================
2018-03-16 16:05:55.964654053 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.fdFD_info
.type GHC.IO.FD.fdFD_info, @object
GHC.IO.FD.fdFD_info:
	.quad	GHC.IO.FD.fdFD_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:05:55.965446693 UTC

.section .text
.align 8
_caZuQ:
_caZuQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZv1
_caZv0:
	movq 7(%rbx),%rax
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZv1:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZuQ, .-_caZuQ


==================== Asm code ====================
2018-03-16 16:05:55.966101026 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZuQ_info:
	.quad	_caZuQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.969440959 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fShowFD_$cshow_closure
.type GHC.IO.FD.$fShowFD_$cshow_closure, @object
GHC.IO.FD.$fShowFD_$cshow_closure:
	.quad	GHC.IO.FD.$fShowFD_$cshow_info


==================== Asm code ====================
2018-03-16 16:05:55.970296574 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fShowFD_$cshow_entry
.type GHC.IO.FD.$fShowFD_$cshow_entry, @object
GHC.IO.FD.$fShowFD_$cshow_entry:
_caZvk:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZvq
_caZvr:
	movq $block_caZvh_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caZvh
_caZvi:
	movq (%rbx),%rax
	jmp *(%rax)
_caZvq:
	movl $GHC.IO.FD.$fShowFD_$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fShowFD_$cshow_entry, .-GHC.IO.FD.$fShowFD_$cshow_entry


==================== Asm code ====================
2018-03-16 16:05:55.970965657 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fShowFD_$cshow_info
.type GHC.IO.FD.$fShowFD_$cshow_info, @object
GHC.IO.FD.$fShowFD_$cshow_info:
	.quad	GHC.IO.FD.$fShowFD_$cshow_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:05:55.971652275 UTC

.section .text
.align 8
_caZvh:
_caZvh:
	movq $block_caZvn_info,(%rbp)
	movl $GHC.Types.[]_closure+1,%edi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Show.$wshowSignedInt_entry
	.size _caZvh, .-_caZvh


==================== Asm code ====================
2018-03-16 16:05:55.97227626 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZvh_info:
	.quad	_caZvh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.972977656 UTC

.section .text
.align 8
_caZvn:
_caZvn:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caZvv
_caZvu:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZvv:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _caZvn, .-_caZvn


==================== Asm code ====================
2018-03-16 16:05:55.973972967 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZvn_info:
	.quad	_caZvn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.977969875 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD15_closure
.type GHC.IO.FD.$fBufferedIOFD15_closure, @object
GHC.IO.FD.$fBufferedIOFD15_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD15_info


==================== Asm code ====================
2018-03-16 16:05:55.978667162 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD15_entry
.type GHC.IO.FD.$fBufferedIOFD15_entry, @object
GHC.IO.FD.$fBufferedIOFD15_entry:
_caZvV:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caZvY
_caZvZ:
	movq $block_caZvO_info,-16(%rbp)
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp stg_newMutVar#
_caZvY:
	movl $GHC.IO.FD.$fBufferedIOFD15_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fBufferedIOFD15_entry, .-GHC.IO.FD.$fBufferedIOFD15_entry


==================== Asm code ====================
2018-03-16 16:05:55.979328868 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD15_info
.type GHC.IO.FD.$fBufferedIOFD15_info, @object
GHC.IO.FD.$fBufferedIOFD15_info:
	.quad	GHC.IO.FD.$fBufferedIOFD15_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:05:55.979967795 UTC

.section .text
.align 8
_caZvO:
_caZvO:
	movq $block_caZvQ_info,-8(%rbp)
	movq %rbx,%rax
	movl $8192,%ebx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_newPinnedByteArray#
	.size _caZvO, .-_caZvO


==================== Asm code ====================
2018-03-16 16:05:55.980564315 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZvO_info:
	.quad	_caZvO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.98132484 UTC

.section .text
.align 8
_caZvQ:
_caZvQ:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _caZw3
_caZw2:
	movq $GHC.ForeignPtr.MallocPtr_con_info,-72(%r12)
	movq %rbx,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	leaq -70(%r12),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	leaq 16(%rbx),%rax
	movq %rax,-24(%r12)
	movq $8192,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZw3:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZvQ, .-_caZvQ


==================== Asm code ====================
2018-03-16 16:05:55.982039415 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZvQ_info:
	.quad	_caZvQ
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.985663643 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD12_closure
.type GHC.IO.FD.$fIODeviceFD12_closure, @object
GHC.IO.FD.$fIODeviceFD12_closure:
	.quad	GHC.IO.FD.$fIODeviceFD12_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.986387531 UTC

.section .text
.align 8
sat_saX2E_entry:
_caZwv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZwz
_caZwA:
	movq $block_caZws_info,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caZws
_caZwt:
	movq (%rbx),%rax
	jmp *(%rax)
_caZwz:
	jmp *-16(%r13)
	.size sat_saX2E_entry, .-sat_saX2E_entry


==================== Asm code ====================
2018-03-16 16:05:55.987046561 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX2E_info:
	.quad	sat_saX2E_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:55.987779008 UTC

.section .text
.align 8
_caZws:
_caZws:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZwD
_caZwC:
	movq 7(%rbx),%rax
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZwD:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZws, .-_caZws


==================== Asm code ====================
2018-03-16 16:05:55.988395235 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZws_info:
	.quad	_caZws
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.989082856 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD12_entry
.type GHC.IO.FD.$fIODeviceFD12_entry, @object
GHC.IO.FD.$fIODeviceFD12_entry:
_caZwF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caZwJ
_caZwI:
	movq $sat_saX2E_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp System.Posix.Internals.fdFileSize1_entry
_caZwJ:
	movq $24,904(%r13)
	movl $GHC.IO.FD.$fIODeviceFD12_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD12_entry, .-GHC.IO.FD.$fIODeviceFD12_entry


==================== Asm code ====================
2018-03-16 16:05:55.989745368 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD12_info
.type GHC.IO.FD.$fIODeviceFD12_info, @object
GHC.IO.FD.$fIODeviceFD12_info:
	.quad	GHC.IO.FD.$fIODeviceFD12_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	SaXeV_srt+192


==================== Asm code ====================
2018-03-16 16:05:55.993853216 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD9_closure
.type GHC.IO.FD.$fIODeviceFD9_closure, @object
GHC.IO.FD.$fIODeviceFD9_closure:
	.quad	GHC.IO.FD.$fIODeviceFD9_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:55.994583428 UTC

.section .text
.align 8
sat_saX2L_entry:
_caZx8:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZxc
_caZxd:
	movq $block_caZx5_info,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caZx5
_caZx6:
	movq (%rbx),%rax
	jmp *(%rax)
_caZxc:
	jmp *-16(%r13)
	.size sat_saX2L_entry, .-sat_saX2L_entry


==================== Asm code ====================
2018-03-16 16:05:55.995271557 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX2L_info:
	.quad	sat_saX2L_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:55.995947859 UTC

.section .text
.align 8
_caZx5:
_caZx5:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZxg
_caZxf:
	movq 7(%rbx),%rax
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZxg:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZx5, .-_caZx5


==================== Asm code ====================
2018-03-16 16:05:55.996614795 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZx5_info:
	.quad	_caZx5
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:55.997379748 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD9_entry
.type GHC.IO.FD.$fIODeviceFD9_entry, @object
GHC.IO.FD.$fIODeviceFD9_entry:
_caZxi:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caZxm
_caZxl:
	movq $sat_saX2L_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp System.Posix.Internals.setEcho1_entry
_caZxm:
	movq $24,904(%r13)
	movl $GHC.IO.FD.$fIODeviceFD9_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD9_entry, .-GHC.IO.FD.$fIODeviceFD9_entry


==================== Asm code ====================
2018-03-16 16:05:55.998085402 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD9_info
.type GHC.IO.FD.$fIODeviceFD9_info, @object
GHC.IO.FD.$fIODeviceFD9_info:
	.quad	GHC.IO.FD.$fIODeviceFD9_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	SaXeV_srt+208


==================== Asm code ====================
2018-03-16 16:05:56.002118598 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD8_closure
.type GHC.IO.FD.$fIODeviceFD8_closure, @object
GHC.IO.FD.$fIODeviceFD8_closure:
	.quad	GHC.IO.FD.$fIODeviceFD8_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.002819514 UTC

.section .text
.align 8
sat_saX2R_entry:
_caZxL:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZxP
_caZxQ:
	movq $block_caZxI_info,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caZxI
_caZxJ:
	movq (%rbx),%rax
	jmp *(%rax)
_caZxP:
	jmp *-16(%r13)
	.size sat_saX2R_entry, .-sat_saX2R_entry


==================== Asm code ====================
2018-03-16 16:05:56.003388867 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX2R_info:
	.quad	sat_saX2R_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:56.004055456 UTC

.section .text
.align 8
_caZxI:
_caZxI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZxT
_caZxS:
	movq 7(%rbx),%rax
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZxT:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZxI, .-_caZxI


==================== Asm code ====================
2018-03-16 16:05:56.004612567 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZxI_info:
	.quad	_caZxI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.005611622 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD8_entry
.type GHC.IO.FD.$fIODeviceFD8_entry, @object
GHC.IO.FD.$fIODeviceFD8_entry:
_caZxV:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caZxZ
_caZxY:
	movq $sat_saX2R_info,-16(%r12)
	movq %r14,(%r12)
	movl $System.Posix.Internals.getEcho2_closure+2,%esi
	leaq -16(%r12),%r14
	jmp System.Posix.Internals.getEcho3_entry
_caZxZ:
	movq $24,904(%r13)
	movl $GHC.IO.FD.$fIODeviceFD8_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD8_entry, .-GHC.IO.FD.$fIODeviceFD8_entry


==================== Asm code ====================
2018-03-16 16:05:56.006206792 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD8_info
.type GHC.IO.FD.$fIODeviceFD8_info, @object
GHC.IO.FD.$fIODeviceFD8_info:
	.quad	GHC.IO.FD.$fIODeviceFD8_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	SaXeV_srt+224


==================== Asm code ====================
2018-03-16 16:05:56.011109125 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD7_closure
.type GHC.IO.FD.$fIODeviceFD7_closure, @object
GHC.IO.FD.$fIODeviceFD7_closure:
	.quad	GHC.IO.FD.$fIODeviceFD7_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.011786829 UTC

.section .text
.align 8
sat_saX30_entry:
_caZys:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caZyt
_caZyu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_caZyl_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _caZyl
_caZym:
	movq (%rbx),%rax
	jmp *(%rax)
_caZyt:
	jmp *-16(%r13)
	.size sat_saX30_entry, .-sat_saX30_entry


==================== Asm code ====================
2018-03-16 16:05:56.012444569 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX30_info:
	.quad	sat_saX30_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:56.013173166 UTC

.section .text
.align 8
_caZyl:
_caZyl:
	andl $7,%ebx
	cmpq $1,%rbx
	je _caZyp
_caZyq:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZyp:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caZyl, .-_caZyl


==================== Asm code ====================
2018-03-16 16:05:56.013838019 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZyl_info:
	.quad	_caZyl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.014568474 UTC

.section .text
.align 8
sat_saX2Y_entry:
_caZyJ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZyN
_caZyO:
	movq $block_caZyG_info,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caZyG
_caZyH:
	movq (%rbx),%rax
	jmp *(%rax)
_caZyN:
	jmp *-16(%r13)
	.size sat_saX2Y_entry, .-sat_saX2Y_entry


==================== Asm code ====================
2018-03-16 16:05:56.015216099 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX2Y_info:
	.quad	sat_saX2Y_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:56.015980635 UTC

.section .text
.align 8
_caZyG:
_caZyG:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZyR
_caZyQ:
	movq 7(%rbx),%rax
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZyR:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZyG, .-_caZyG


==================== Asm code ====================
2018-03-16 16:05:56.016641913 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZyG_info:
	.quad	_caZyG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.017695808 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD7_entry
.type GHC.IO.FD.$fIODeviceFD7_entry, @object
GHC.IO.FD.$fIODeviceFD7_entry:
_caZyT:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _caZyX
_caZyW:
	movq $sat_saX30_info,-40(%r12)
	movq %rsi,-24(%r12)
	movq $sat_saX2Y_info,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp System.Posix.Internals.setCooked1_entry
_caZyX:
	movq $48,904(%r13)
	movl $GHC.IO.FD.$fIODeviceFD7_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD7_entry, .-GHC.IO.FD.$fIODeviceFD7_entry


==================== Asm code ====================
2018-03-16 16:05:56.018308034 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD7_info
.type GHC.IO.FD.$fIODeviceFD7_info, @object
GHC.IO.FD.$fIODeviceFD7_info:
	.quad	GHC.IO.FD.$fIODeviceFD7_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	SaXeV_srt+240


==================== Asm code ====================
2018-03-16 16:05:56.019939805 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$trModule4_bytes
.type GHC.IO.FD.$trModule4_bytes, @object
GHC.IO.FD.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:05:56.021733413 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$trModule3_closure
.type GHC.IO.FD.$trModule3_closure, @object
GHC.IO.FD.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.FD.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:05:56.023478892 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$trModule2_bytes
.type GHC.IO.FD.$trModule2_bytes, @object
GHC.IO.FD.$trModule2_bytes:
	.asciz "GHC.IO.FD"


==================== Asm code ====================
2018-03-16 16:05:56.025652167 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$trModule1_closure
.type GHC.IO.FD.$trModule1_closure, @object
GHC.IO.FD.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.FD.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:05:56.027276802 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$trModule_closure
.type GHC.IO.FD.$trModule_closure, @object
GHC.IO.FD.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.IO.FD.$trModule3_closure+1
	.quad	GHC.IO.FD.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:05:56.028992767 UTC

.section .data
.align 8
.align 1
$krep_raWV0_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcInt_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:05:56.03097421 UTC

.section .data
.align 8
.align 1
$krep1_raWV1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	Foreign.C.Types.$tcCInt_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:05:56.032625667 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$tcFD2_bytes
.type GHC.IO.FD.$tcFD2_bytes, @object
GHC.IO.FD.$tcFD2_bytes:
	.asciz "FD"


==================== Asm code ====================
2018-03-16 16:05:56.034268711 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$tcFD1_closure
.type GHC.IO.FD.$tcFD1_closure, @object
GHC.IO.FD.$tcFD1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.FD.$tcFD2_bytes


==================== Asm code ====================
2018-03-16 16:05:56.036077787 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$tcFD_closure
.type GHC.IO.FD.$tcFD_closure, @object
GHC.IO.FD.$tcFD_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.FD.$trModule_closure+1
	.quad	GHC.IO.FD.$tcFD1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-7607928521190512554
	.quad	-2900453971751795240
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:05:56.037842742 UTC

.section .data
.align 8
.align 1
$krep2_raWV2_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.FD.$tcFD_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:05:56.039535218 UTC

.section .data
.align 8
.align 1
$krep3_raWV3_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_raWV0_closure+1
	.quad	$krep2_raWV2_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:05:56.04176584 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$tc'FD1_closure
.type GHC.IO.FD.$tc'FD1_closure, @object
GHC.IO.FD.$tc'FD1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_raWV1_closure+1
	.quad	$krep3_raWV3_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:05:56.043487492 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$tc'FD3_bytes
.type GHC.IO.FD.$tc'FD3_bytes, @object
GHC.IO.FD.$tc'FD3_bytes:
	.asciz "'FD"


==================== Asm code ====================
2018-03-16 16:05:56.045260304 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$tc'FD2_closure
.type GHC.IO.FD.$tc'FD2_closure, @object
GHC.IO.FD.$tc'FD2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.FD.$tc'FD3_bytes


==================== Asm code ====================
2018-03-16 16:05:56.047572114 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$tc'FD_closure
.type GHC.IO.FD.$tc'FD_closure, @object
GHC.IO.FD.$tc'FD_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.FD.$trModule_closure+1
	.quad	GHC.IO.FD.$tc'FD2_closure+1
	.quad	GHC.IO.FD.$tc'FD1_closure+4
	.quad	9025179437427398028
	.quad	-375740255142937780
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:05:56.051267873 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fShowFD_$cshowsPrec_closure
.type GHC.IO.FD.$fShowFD_$cshowsPrec_closure, @object
GHC.IO.FD.$fShowFD_$cshowsPrec_closure:
	.quad	GHC.IO.FD.$fShowFD_$cshowsPrec_info


==================== Asm code ====================
2018-03-16 16:05:56.052123919 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fShowFD_$cshowsPrec_entry
.type GHC.IO.FD.$fShowFD_$cshowsPrec_entry, @object
GHC.IO.FD.$fShowFD_$cshowsPrec_entry:
_caZzK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caZzQ
_caZzR:
	movq $block_caZzH_info,-16(%rbp)
	movq %rsi,%rbx
	movq %rdi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _caZzH
_caZzI:
	movq (%rbx),%rax
	jmp *(%rax)
_caZzQ:
	movl $GHC.IO.FD.$fShowFD_$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fShowFD_$cshowsPrec_entry, .-GHC.IO.FD.$fShowFD_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:05:56.052768744 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fShowFD_$cshowsPrec_info
.type GHC.IO.FD.$fShowFD_$cshowsPrec_info, @object
GHC.IO.FD.$fShowFD_$cshowsPrec_info:
	.quad	GHC.IO.FD.$fShowFD_$cshowsPrec_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:05:56.053889163 UTC

.section .text
.align 8
_caZzH:
_caZzH:
	movq $block_caZzN_info,(%rbp)
	movl $GHC.Types.[]_closure+1,%edi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Show.$wshowSignedInt_entry
	.size _caZzH, .-_caZzH


==================== Asm code ====================
2018-03-16 16:05:56.054509624 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZzH_info:
	.quad	_caZzH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.055244113 UTC

.section .text
.align 8
_caZzN:
_caZzN:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caZzV
_caZzU:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq 8(%rbp),%rsi
	leaq -14(%r12),%r14
	addq $16,%rbp
	jmp GHC.Base.++_entry
_caZzV:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _caZzN, .-_caZzN


==================== Asm code ====================
2018-03-16 16:05:56.055853239 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZzN_info:
	.quad	_caZzN
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.059004725 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$wlvl_closure
.type GHC.IO.FD.$wlvl_closure, @object
GHC.IO.FD.$wlvl_closure:
	.quad	GHC.IO.FD.$wlvl_info


==================== Asm code ====================
2018-03-16 16:05:56.059753066 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wlvl_entry
.type GHC.IO.FD.$wlvl_entry, @object
GHC.IO.FD.$wlvl_entry:
_caZAg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caZAh
_caZAi:
	movq $block_caZAd_info,-16(%rbp)
	movl $GHC.Types.[]_closure+1,%edi
	movq %rsi,%rax
	movq %r14,%rsi
	xorl %r14d,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
_caZAh:
	movl $GHC.IO.FD.$wlvl_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$wlvl_entry, .-GHC.IO.FD.$wlvl_entry


==================== Asm code ====================
2018-03-16 16:05:56.060403604 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$wlvl_info
.type GHC.IO.FD.$wlvl_info, @object
GHC.IO.FD.$wlvl_info:
	.quad	GHC.IO.FD.$wlvl_entry
	.quad	0
	.quad	14
	.quad	8589934605


==================== Asm code ====================
2018-03-16 16:05:56.061169218 UTC

.section .text
.align 8
_caZAd:
_caZAd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caZAl
_caZAk:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq 8(%rbp),%rsi
	leaq -14(%r12),%r14
	addq $16,%rbp
	jmp GHC.Base.++_entry
_caZAl:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _caZAd, .-_caZAd


==================== Asm code ====================
2018-03-16 16:05:56.061852059 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZAd_info:
	.quad	_caZAd
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.064624679 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fShowFD1_closure
.type GHC.IO.FD.$fShowFD1_closure, @object
GHC.IO.FD.$fShowFD1_closure:
	.quad	GHC.IO.FD.$fShowFD1_info


==================== Asm code ====================
2018-03-16 16:05:56.06576719 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fShowFD1_entry
.type GHC.IO.FD.$fShowFD1_entry, @object
GHC.IO.FD.$fShowFD1_entry:
_caZAB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caZAC
_caZAD:
	movq $block_caZAy_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _caZAy
_caZAz:
	movq (%rbx),%rax
	jmp *(%rax)
_caZAC:
	movl $GHC.IO.FD.$fShowFD1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fShowFD1_entry, .-GHC.IO.FD.$fShowFD1_entry


==================== Asm code ====================
2018-03-16 16:05:56.066470972 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fShowFD1_info
.type GHC.IO.FD.$fShowFD1_info, @object
GHC.IO.FD.$fShowFD1_info:
	.quad	GHC.IO.FD.$fShowFD1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:05:56.067118749 UTC

.section .text
.align 8
_caZAy:
_caZAy:
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.IO.FD.$wlvl_entry
	.size _caZAy, .-_caZAy


==================== Asm code ====================
2018-03-16 16:05:56.06777584 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZAy_info:
	.quad	_caZAy
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.07002673 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fShowFD_$cshowList_closure
.type GHC.IO.FD.$fShowFD_$cshowList_closure, @object
GHC.IO.FD.$fShowFD_$cshowList_closure:
	.quad	GHC.IO.FD.$fShowFD_$cshowList_info


==================== Asm code ====================
2018-03-16 16:05:56.071161484 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fShowFD_$cshowList_entry
.type GHC.IO.FD.$fShowFD_$cshowList_entry, @object
GHC.IO.FD.$fShowFD_$cshowList_entry:
_caZAV:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.IO.FD.$fShowFD1_closure+2,%r14d
	jmp GHC.Show.showList___entry
	.size GHC.IO.FD.$fShowFD_$cshowList_entry, .-GHC.IO.FD.$fShowFD_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:05:56.071760363 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fShowFD_$cshowList_info
.type GHC.IO.FD.$fShowFD_$cshowList_info, @object
GHC.IO.FD.$fShowFD_$cshowList_info:
	.quad	GHC.IO.FD.$fShowFD_$cshowList_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:05:56.073572171 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fShowFD_closure
.type GHC.IO.FD.$fShowFD_closure, @object
GHC.IO.FD.$fShowFD_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.IO.FD.$fShowFD_$cshowsPrec_closure+3
	.quad	GHC.IO.FD.$fShowFD_$cshow_closure+1
	.quad	GHC.IO.FD.$fShowFD_$cshowList_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:05:56.076449418 UTC

.section .data
.align 8
.align 1
output_flags_raWV4_closure:
	.quad	output_flags_raWV4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.077745819 UTC

.section .text
.align 8
output_flags_raWV4_entry:
_caZBd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caZBv
_caZBw:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZBy
_caZBx:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caZB8
_caZB7:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	subq $8,%rsp
	xorl %eax,%eax
	call __hscore_o_noctty
	addq $8,%rsp
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_o_creat
	addq $8,%rsp
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movslq %eax,%rax
	movslq %ebx,%rbx
	orq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZBy:
	movq $16,904(%r13)
_caZBv:
	jmp *-16(%r13)
_caZB8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size output_flags_raWV4_entry, .-output_flags_raWV4_entry


==================== Asm code ====================
2018-03-16 16:05:56.078550285 UTC

.section .data.rel.ro
.align 8
.align 1
output_flags_raWV4_info:
	.quad	output_flags_raWV4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:56.082061194 UTC

.section .data
.align 8
.align 1
write_flags_raWV5_closure:
	.quad	write_flags_raWV5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.082911058 UTC

.section .text
.align 8
write_flags_raWV5_entry:
_caZBT:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caZCd
_caZCe:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caZBP
_caZBO:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_caZBQ_info,-24(%rbp)
	movl $output_flags_raWV4_closure,%ebx
	addq $-24,%rbp
	testb $7,%bl
	jne _caZBQ
_caZBR:
	movq (%rbx),%rax
	jmp *(%rax)
_caZCd:
	jmp *-16(%r13)
_caZBP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size write_flags_raWV5_entry, .-write_flags_raWV5_entry


==================== Asm code ====================
2018-03-16 16:05:56.083618731 UTC

.section .data.rel.ro
.align 8
.align 1
write_flags_raWV5_info:
	.quad	write_flags_raWV5_entry
	.quad	0
	.quad	4294967317
	.quad	SaXeV_srt+256


==================== Asm code ====================
2018-03-16 16:05:56.084384032 UTC

.section .text
.align 8
_caZBQ:
_caZBQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZCh
_caZCg:
	movq 7(%rbx),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_o_wronly
	addq $8,%rsp
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movslq %eax,%rax
	orq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZCh:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZBQ, .-_caZBQ


==================== Asm code ====================
2018-03-16 16:05:56.085058575 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZBQ_info:
	.quad	_caZBQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.088453687 UTC

.section .data
.align 8
.align 1
append_flags_raWV6_closure:
	.quad	append_flags_raWV6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.089341454 UTC

.section .text
.align 8
append_flags_raWV6_entry:
_caZCH:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caZD1
_caZD2:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caZCD
_caZCC:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_caZCE_info,-24(%rbp)
	movl $write_flags_raWV5_closure,%ebx
	addq $-24,%rbp
	testb $7,%bl
	jne _caZCE
_caZCF:
	movq (%rbx),%rax
	jmp *(%rax)
_caZD1:
	jmp *-16(%r13)
_caZCD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size append_flags_raWV6_entry, .-append_flags_raWV6_entry


==================== Asm code ====================
2018-03-16 16:05:56.09013479 UTC

.section .data.rel.ro
.align 8
.align 1
append_flags_raWV6_info:
	.quad	append_flags_raWV6_entry
	.quad	0
	.quad	4294967317
	.quad	SaXeV_srt+264


==================== Asm code ====================
2018-03-16 16:05:56.090913951 UTC

.section .text
.align 8
_caZCE:
_caZCE:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZD5
_caZD4:
	movq 7(%rbx),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_o_append
	addq $8,%rsp
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movslq %eax,%rax
	orq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZD5:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZCE, .-_caZCE


==================== Asm code ====================
2018-03-16 16:05:56.091577444 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZCE_info:
	.quad	_caZCE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.095928781 UTC

.section .data
.align 8
.align 1
rw_flags_raWV7_closure:
	.quad	rw_flags_raWV7_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.09679629 UTC

.section .text
.align 8
rw_flags_raWV7_entry:
_caZDv:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caZDP
_caZDQ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caZDr
_caZDq:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_caZDs_info,-24(%rbp)
	movl $output_flags_raWV4_closure,%ebx
	addq $-24,%rbp
	testb $7,%bl
	jne _caZDs
_caZDt:
	movq (%rbx),%rax
	jmp *(%rax)
_caZDP:
	jmp *-16(%r13)
_caZDr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size rw_flags_raWV7_entry, .-rw_flags_raWV7_entry


==================== Asm code ====================
2018-03-16 16:05:56.097562594 UTC

.section .data.rel.ro
.align 8
.align 1
rw_flags_raWV7_info:
	.quad	rw_flags_raWV7_entry
	.quad	0
	.quad	4294967317
	.quad	SaXeV_srt+256


==================== Asm code ====================
2018-03-16 16:05:56.098278645 UTC

.section .text
.align 8
_caZDs:
_caZDs:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZDT
_caZDS:
	movq 7(%rbx),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_o_rdwr
	addq $8,%rsp
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movslq %eax,%rax
	orq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZDT:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZDs, .-_caZDs


==================== Asm code ====================
2018-03-16 16:05:56.098932426 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZDs_info:
	.quad	_caZDs
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.101879716 UTC

.section .data
.align 8
.align 1
read_flags_raWV8_closure:
	.quad	read_flags_raWV8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.102847849 UTC

.section .text
.align 8
read_flags_raWV8_entry:
_caZEk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caZEC
_caZED:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZEF
_caZEE:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caZEf
_caZEe:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	subq $8,%rsp
	xorl %eax,%eax
	call __hscore_o_noctty
	addq $8,%rsp
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_o_rdonly
	addq $8,%rsp
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movslq %eax,%rax
	movslq %ebx,%rbx
	orq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZEF:
	movq $16,904(%r13)
_caZEC:
	jmp *-16(%r13)
_caZEf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size read_flags_raWV8_entry, .-read_flags_raWV8_entry


==================== Asm code ====================
2018-03-16 16:05:56.103645709 UTC

.section .data.rel.ro
.align 8
.align 1
read_flags_raWV8_info:
	.quad	read_flags_raWV8_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:56.106575464 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD16_closure
.type GHC.IO.FD.$fIODeviceFD16_closure, @object
GHC.IO.FD.$fIODeviceFD16_closure:
	.quad	GHC.IO.FD.$fIODeviceFD16_info


==================== Asm code ====================
2018-03-16 16:05:56.107296696 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD16_entry
.type GHC.IO.FD.$fIODeviceFD16_entry, @object
GHC.IO.FD.$fIODeviceFD16_entry:
_caZEY:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZEZ
_caZF0:
	movq $block_caZEV_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caZEV
_caZEW:
	movq (%rbx),%rax
	jmp *(%rax)
_caZEZ:
	movl $GHC.IO.FD.$fIODeviceFD16_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD16_entry, .-GHC.IO.FD.$fIODeviceFD16_entry


==================== Asm code ====================
2018-03-16 16:05:56.10795909 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD16_info
.type GHC.IO.FD.$fIODeviceFD16_info, @object
GHC.IO.FD.$fIODeviceFD16_info:
	.quad	GHC.IO.FD.$fIODeviceFD16_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:05:56.108689161 UTC

.section .text
.align 8
_caZEV:
_caZEV:
	cmpq $-1,7(%rbx)
	je _caZF7
_caZF6:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZF7:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caZEV, .-_caZEV


==================== Asm code ====================
2018-03-16 16:05:56.109730645 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZEV_info:
	.quad	_caZEV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.111346971 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$fIODeviceFD15_bytes
.type GHC.IO.FD.$fIODeviceFD15_bytes, @object
GHC.IO.FD.$fIODeviceFD15_bytes:
	.asciz "hGetPosn"


==================== Asm code ====================
2018-03-16 16:05:56.113907461 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD14_closure
.type GHC.IO.FD.$fIODeviceFD14_closure, @object
GHC.IO.FD.$fIODeviceFD14_closure:
	.quad	GHC.IO.FD.$fIODeviceFD14_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.114796201 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD14_entry
.type GHC.IO.FD.$fIODeviceFD14_entry, @object
GHC.IO.FD.$fIODeviceFD14_entry:
_caZFr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caZFs
_caZFt:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caZFq
_caZFp:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.FD.$fIODeviceFD15_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_caZFs:
	jmp *-16(%r13)
_caZFq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.$fIODeviceFD14_entry, .-GHC.IO.FD.$fIODeviceFD14_entry


==================== Asm code ====================
2018-03-16 16:05:56.115554673 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD14_info
.type GHC.IO.FD.$fIODeviceFD14_info, @object
GHC.IO.FD.$fIODeviceFD14_info:
	.quad	GHC.IO.FD.$fIODeviceFD14_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:56.120823996 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$ctell_closure
.type GHC.IO.FD.$w$ctell_closure, @object
GHC.IO.FD.$w$ctell_closure:
	.quad	GHC.IO.FD.$w$ctell_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.122040603 UTC

.section .text
.align 8
sat_saX4E_entry:
_caZFN:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZFX
_caZFW:
	subq $8,%rsp
	movq 15(%rbx),%rax
	movslq %eax,%rdx
	movq 7(%rbx),%rdi
	xorl %esi,%esi
	xorl %eax,%eax
	call ghczuwrapperZC23ZCbaseZCSystemziPosixziInternalsZClseek
	addq $8,%rsp
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_caZFX:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_saX4E_entry, .-sat_saX4E_entry


==================== Asm code ====================
2018-03-16 16:05:56.122716977 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX4E_info:
	.quad	sat_saX4E_entry
	.quad	8589934592
	.quad	13
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:56.123415747 UTC

.section .text
.align 8
sat_saX4I_entry:
_caZG4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caZG5
_caZG6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Int.$fIntegralInt64_$ctoInteger_entry
_caZG5:
	jmp *-16(%r13)
	.size sat_saX4I_entry, .-sat_saX4I_entry


==================== Asm code ====================
2018-03-16 16:05:56.124049428 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX4I_info:
	.quad	sat_saX4I_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:56.124816463 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$ctell_entry
.type GHC.IO.FD.$w$ctell_entry, @object
GHC.IO.FD.$w$ctell_entry:
_caZG7:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZG8
_caZG9:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caZGb
_caZGa:
	subq $8,%rsp
	xorl %eax,%eax
	call ghczuwrapperZC2ZCbaseZCSystemziPosixziInternalsZCSEEKzuCUR
	addq $8,%rsp
	movq $sat_saX4E_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rax,(%r12)
	movq $block_caZFY_info,-8(%rbp)
	leaq -15(%r12),%rdi
	movl $GHC.IO.FD.$fIODeviceFD14_closure,%esi
	movl $GHC.IO.FD.$fIODeviceFD16_closure+1,%r14d
	addq $-8,%rbp
	jmp Foreign.C.Error.throwErrnoIfMinus1Retry2_entry
_caZGb:
	movq $24,904(%r13)
_caZG8:
	movl $GHC.IO.FD.$w$ctell_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$w$ctell_entry, .-GHC.IO.FD.$w$ctell_entry


==================== Asm code ====================
2018-03-16 16:05:56.125542829 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$ctell_info
.type GHC.IO.FD.$w$ctell_info, @object
GHC.IO.FD.$w$ctell_info:
	.quad	GHC.IO.FD.$w$ctell_entry
	.quad	0
	.quad	30064771086
	.quad	8589934596
	.quad	SaXeV_srt+272


==================== Asm code ====================
2018-03-16 16:05:56.126256435 UTC

.section .text
.align 8
_caZFY:
_caZFY:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caZGe
_caZGd:
	movq $sat_saX4I_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZGe:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZFY, .-_caZFY


==================== Asm code ====================
2018-03-16 16:05:56.126835609 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZFY_info:
	.quad	_caZFY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.129627726 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD13_closure
.type GHC.IO.FD.$fIODeviceFD13_closure, @object
GHC.IO.FD.$fIODeviceFD13_closure:
	.quad	GHC.IO.FD.$fIODeviceFD13_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.130376784 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD13_entry
.type GHC.IO.FD.$fIODeviceFD13_entry, @object
GHC.IO.FD.$fIODeviceFD13_entry:
_caZGE:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZGF
_caZGG:
	movq $block_caZGB_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caZGB
_caZGC:
	movq (%rbx),%rax
	jmp *(%rax)
_caZGF:
	movl $GHC.IO.FD.$fIODeviceFD13_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD13_entry, .-GHC.IO.FD.$fIODeviceFD13_entry


==================== Asm code ====================
2018-03-16 16:05:56.131011399 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD13_info
.type GHC.IO.FD.$fIODeviceFD13_info, @object
GHC.IO.FD.$fIODeviceFD13_info:
	.quad	GHC.IO.FD.$fIODeviceFD13_entry
	.quad	0
	.quad	21474836494
	.quad	8589934597
	.quad	SaXeV_srt+280


==================== Asm code ====================
2018-03-16 16:05:56.131670782 UTC

.section .text
.align 8
_caZGB:
_caZGB:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.IO.FD.$w$ctell_entry
	.size _caZGB, .-_caZGB


==================== Asm code ====================
2018-03-16 16:05:56.132274758 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZGB_info:
	.quad	_caZGB
	.quad	0
	.quad	4294967326
	.quad	SaXeV_srt+280


==================== Asm code ====================
2018-03-16 16:05:56.134044997 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$fIODeviceFD19_bytes
.type GHC.IO.FD.$fIODeviceFD19_bytes, @object
GHC.IO.FD.$fIODeviceFD19_bytes:
	.asciz "seek"


==================== Asm code ====================
2018-03-16 16:05:56.136540525 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD18_closure
.type GHC.IO.FD.$fIODeviceFD18_closure, @object
GHC.IO.FD.$fIODeviceFD18_closure:
	.quad	GHC.IO.FD.$fIODeviceFD18_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.137388259 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD18_entry
.type GHC.IO.FD.$fIODeviceFD18_entry, @object
GHC.IO.FD.$fIODeviceFD18_entry:
_caZH1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caZH2
_caZH3:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caZH0
_caZGZ:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.FD.$fIODeviceFD19_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_caZH2:
	jmp *-16(%r13)
_caZH0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.$fIODeviceFD18_entry, .-GHC.IO.FD.$fIODeviceFD18_entry


==================== Asm code ====================
2018-03-16 16:05:56.138125497 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD18_info
.type GHC.IO.FD.$fIODeviceFD18_info, @object
GHC.IO.FD.$fIODeviceFD18_info:
	.quad	GHC.IO.FD.$fIODeviceFD18_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:56.144748739 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$cseek_closure
.type GHC.IO.FD.$w$cseek_closure, @object
GHC.IO.FD.$w$cseek_closure:
	.quad	GHC.IO.FD.$w$cseek_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.145582332 UTC

.section .text
.align 8
sat_saX51_entry:
_caZHy:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZHC
_caZHB:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 23(%rbx),%rdx
	xorl %eax,%eax
	call ghczuwrapperZC23ZCbaseZCSystemziPosixziInternalsZClseek
	addq $8,%rsp
	movq $GHC.Int.I64#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_caZHC:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_saX51_entry, .-sat_saX51_entry


==================== Asm code ====================
2018-03-16 16:05:56.146226995 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX51_info:
	.quad	sat_saX51_entry
	.quad	12884901888
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:56.146955134 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cseek_entry
.type GHC.IO.FD.$w$cseek_entry, @object
GHC.IO.FD.$w$cseek_entry:
_caZHD:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caZHE
_caZHF:
	movq $block_caZHf_info,-24(%rbp)
	movq %r14,%rax
	movq %rdi,%r14
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Integer.Type.integerToInt_entry
_caZHE:
	movl $GHC.IO.FD.$w$cseek_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$w$cseek_entry, .-GHC.IO.FD.$w$cseek_entry


==================== Asm code ====================
2018-03-16 16:05:56.147618358 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$cseek_info
.type GHC.IO.FD.$w$cseek_info, @object
GHC.IO.FD.$w$cseek_info:
	.quad	GHC.IO.FD.$w$cseek_entry
	.quad	0
	.quad	210453397518
	.quad	17179869203
	.quad	SaXeV_srt+272


==================== Asm code ====================
2018-03-16 16:05:56.148337355 UTC

.section .text
.align 8
_caZHf:
_caZHf:
	movq $block_caZHG_info,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _caZHG
_caZHO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZHf, .-_caZHf


==================== Asm code ====================
2018-03-16 16:05:56.148981434 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZHf_info:
	.quad	_caZHf
	.quad	66
	.quad	141733920798
	.quad	SaXeV_srt+272


==================== Asm code ====================
2018-03-16 16:05:56.150099071 UTC

.section .text
.align 8
_caZHG:
_caZHG:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _uaZIa
_caZI2:
	subq $8,%rsp
	xorl %eax,%eax
	call ghczuwrapperZC0ZCbaseZCSystemziPosixziInternalsZCSEEKzuEND
	addq $8,%rsp
	movslq %eax,%rax
	movq %rax,(%rbp)
	jmp _caZHm
_uaZIa:
	cmpq $2,%rbx
	jb _caZHU
_caZHY:
	subq $8,%rsp
	xorl %eax,%eax
	call ghczuwrapperZC2ZCbaseZCSystemziPosixziInternalsZCSEEKzuCUR
	addq $8,%rsp
	movslq %eax,%rax
	movq %rax,(%rbp)
	jmp _caZHm
_caZHU:
	subq $8,%rsp
	xorl %eax,%eax
	call ghczuwrapperZC1ZCbaseZCSystemziPosixziInternalsZCSEEKzuSET
	addq $8,%rsp
	movslq %eax,%rax
	movq %rax,(%rbp)
	jmp _caZHm
	.size _caZHG, .-_caZHG


==================== Asm code ====================
2018-03-16 16:05:56.150827734 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZHG_info:
	.quad	_caZHG
	.quad	194
	.quad	141733920798
	.quad	SaXeV_srt+272


==================== Asm code ====================
2018-03-16 16:05:56.151606338 UTC

.section .text
.align 8
_caZHm:
_caZHm:
	addq $32,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _caZHL
_caZHK:
	movq $sat_saX51_info,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	movq $block_caZHI_info,16(%rbp)
	leaq -23(%r12),%rdi
	movl $GHC.IO.FD.$fIODeviceFD18_closure,%esi
	movl $GHC.IO.FD.$fIODeviceFD16_closure+1,%r14d
	addq $16,%rbp
	jmp Foreign.C.Error.throwErrnoIfMinus1Retry2_entry
_caZHL:
	movq $32,904(%r13)
	movq $block_caZHl_info,(%rbp)
	movq %rax,%rbx
	jmp stg_gc_unbx_r1
	.size _caZHm, .-_caZHm


==================== Asm code ====================
2018-03-16 16:05:56.152348523 UTC

.section .text
.align 8
_caZHl:
_caZHl:
	movq %rbx,(%rbp)
	jmp _caZHm
	.size _caZHl, .-_caZHl


==================== Asm code ====================
2018-03-16 16:05:56.152950735 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZHl_info:
	.quad	_caZHl
	.quad	194
	.quad	141733920798
	.quad	SaXeV_srt+272


==================== Asm code ====================
2018-03-16 16:05:56.153613909 UTC

.section .text
.align 8
_caZHI:
_caZHI:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caZHI, .-_caZHI


==================== Asm code ====================
2018-03-16 16:05:56.154174977 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZHI_info:
	.quad	_caZHI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.157292829 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD17_closure
.type GHC.IO.FD.$fIODeviceFD17_closure, @object
GHC.IO.FD.$fIODeviceFD17_closure:
	.quad	GHC.IO.FD.$fIODeviceFD17_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.158101101 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD17_entry
.type GHC.IO.FD.$fIODeviceFD17_entry, @object
GHC.IO.FD.$fIODeviceFD17_entry:
_caZIW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caZIX
_caZIY:
	movq $block_caZIT_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _caZIT
_caZIU:
	movq (%rbx),%rax
	jmp *(%rax)
_caZIX:
	movl $GHC.IO.FD.$fIODeviceFD17_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD17_entry, .-GHC.IO.FD.$fIODeviceFD17_entry


==================== Asm code ====================
2018-03-16 16:05:56.158811052 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD17_info
.type GHC.IO.FD.$fIODeviceFD17_info, @object
GHC.IO.FD.$fIODeviceFD17_info:
	.quad	GHC.IO.FD.$fIODeviceFD17_entry
	.quad	0
	.quad	21474836494
	.quad	17179869207
	.quad	SaXeV_srt+304


==================== Asm code ====================
2018-03-16 16:05:56.159494685 UTC

.section .text
.align 8
_caZIT:
_caZIT:
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $24,%rbp
	jmp GHC.IO.FD.$w$cseek_entry
	.size _caZIT, .-_caZIT


==================== Asm code ====================
2018-03-16 16:05:56.160106856 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZIT_info:
	.quad	_caZIT
	.quad	2
	.quad	4294967326
	.quad	SaXeV_srt+304


==================== Asm code ====================
2018-03-16 16:05:56.161943115 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.stdin_closure
.type GHC.IO.FD.stdin_closure, @object
GHC.IO.FD.stdin_closure:
	.quad	GHC.IO.FD.FD_con_info
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.163748257 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.stdout_closure
.type GHC.IO.FD.stdout_closure, @object
GHC.IO.FD.stdout_closure:
	.quad	GHC.IO.FD.FD_con_info
	.quad	1
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.165576949 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.stderr_closure
.type GHC.IO.FD.stderr_closure, @object
GHC.IO.FD.stderr_closure:
	.quad	GHC.IO.FD.FD_con_info
	.quad	2
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.167697671 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl3_raWV9_bytes:
	.asciz "GHC.IO.FD.setSize"


==================== Asm code ====================
2018-03-16 16:05:56.170942864 UTC

.section .data
.align 8
.align 1
lvl4_raWVa_closure:
	.quad	lvl4_raWVa_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.171777654 UTC

.section .text
.align 8
lvl4_raWVa_entry:
_caZJm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caZJn
_caZJo:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caZJl
_caZJk:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl3_raWV9_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_caZJn:
	jmp *-16(%r13)
_caZJl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl4_raWVa_entry, .-lvl4_raWVa_entry


==================== Asm code ====================
2018-03-16 16:05:56.172447249 UTC

.section .data.rel.ro
.align 8
.align 1
lvl4_raWVa_info:
	.quad	lvl4_raWVa_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:56.174650622 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD11_closure
.type GHC.IO.FD.$fIODeviceFD11_closure, @object
GHC.IO.FD.$fIODeviceFD11_closure:
	.quad	GHC.IO.FD.$fIODeviceFD11_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.1753367 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD11_entry
.type GHC.IO.FD.$fIODeviceFD11_entry, @object
GHC.IO.FD.$fIODeviceFD11_entry:
_caZJC:
	movslq %r14d,%rsi
	movl $lvl4_raWVa_closure,%r14d
	jmp Foreign.C.Error.$wlvl_entry
	.size GHC.IO.FD.$fIODeviceFD11_entry, .-GHC.IO.FD.$fIODeviceFD11_entry


==================== Asm code ====================
2018-03-16 16:05:56.175909842 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD11_info
.type GHC.IO.FD.$fIODeviceFD11_info, @object
GHC.IO.FD.$fIODeviceFD11_info:
	.quad	GHC.IO.FD.$fIODeviceFD11_entry
	.quad	0
	.quad	12884901902
	.quad	8589934596
	.quad	SaXeV_srt+328


==================== Asm code ====================
2018-03-16 16:05:56.179120287 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$wsetSize_closure
.type GHC.IO.FD.$wsetSize_closure, @object
GHC.IO.FD.$wsetSize_closure:
	.quad	GHC.IO.FD.$wsetSize_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.179895452 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wsetSize_entry
.type GHC.IO.FD.$wsetSize_entry, @object
GHC.IO.FD.$wsetSize_entry:
_caZJP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caZJQ
_caZJR:
	movq $block_caZJN_info,-16(%rbp)
	movq %r14,%rax
	movq %rsi,%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.integerToInt_entry
_caZJQ:
	movl $GHC.IO.FD.$wsetSize_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$wsetSize_entry, .-GHC.IO.FD.$wsetSize_entry


==================== Asm code ====================
2018-03-16 16:05:56.180585972 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$wsetSize_info
.type GHC.IO.FD.$wsetSize_info, @object
GHC.IO.FD.$wsetSize_info:
	.quad	GHC.IO.FD.$wsetSize_entry
	.quad	0
	.quad	12884901902
	.quad	12884901901
	.quad	SaXeV_srt+344


==================== Asm code ====================
2018-03-16 16:05:56.181815651 UTC

.section .text
.align 8
_caZJN:
_caZJN:
	subq $8,%rsp
	movq %rbx,%rsi
	movq 8(%rbp),%rdi
	xorl %eax,%eax
	call __hscore_ftruncate
	addq $8,%rsp
	testl %eax,%eax
	je _caZK9
_caZK3:
	subq $8,%rsp
	xorl %eax,%eax
	call __hscore_get_errno
	addq $8,%rsp
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.IO.FD.$fIODeviceFD11_entry
_caZK9:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caZJN, .-_caZJN


==================== Asm code ====================
2018-03-16 16:05:56.182432653 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZJN_info:
	.quad	_caZJN
	.quad	65
	.quad	4294967326
	.quad	SaXeV_srt+352


==================== Asm code ====================
2018-03-16 16:05:56.185303369 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD10_closure
.type GHC.IO.FD.$fIODeviceFD10_closure, @object
GHC.IO.FD.$fIODeviceFD10_closure:
	.quad	GHC.IO.FD.$fIODeviceFD10_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.186047127 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD10_entry
.type GHC.IO.FD.$fIODeviceFD10_entry, @object
GHC.IO.FD.$fIODeviceFD10_entry:
_caZKu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caZKv
_caZKw:
	movq $block_caZKr_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _caZKr
_caZKs:
	movq (%rbx),%rax
	jmp *(%rax)
_caZKv:
	movl $GHC.IO.FD.$fIODeviceFD10_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD10_entry, .-GHC.IO.FD.$fIODeviceFD10_entry


==================== Asm code ====================
2018-03-16 16:05:56.186692135 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD10_info
.type GHC.IO.FD.$fIODeviceFD10_info, @object
GHC.IO.FD.$fIODeviceFD10_info:
	.quad	GHC.IO.FD.$fIODeviceFD10_entry
	.quad	0
	.quad	21474836494
	.quad	12884901903
	.quad	SaXeV_srt+344


==================== Asm code ====================
2018-03-16 16:05:56.187396308 UTC

.section .text
.align 8
_caZKr:
_caZKr:
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.IO.FD.$wsetSize_entry
	.size _caZKr, .-_caZKr


==================== Asm code ====================
2018-03-16 16:05:56.188021246 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZKr_info:
	.quad	_caZKr
	.quad	1
	.quad	4294967326
	.quad	SaXeV_srt+344


==================== Asm code ====================
2018-03-16 16:05:56.19038232 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.writeRawBufferPtr_closure
.type GHC.IO.FD.writeRawBufferPtr_closure, @object
GHC.IO.FD.writeRawBufferPtr_closure:
	.quad	GHC.IO.FD.writeRawBufferPtr_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.19100002 UTC

.section .text
.align 8
.globl GHC.IO.FD.writeRawBufferPtr_entry
.type GHC.IO.FD.writeRawBufferPtr_entry, @object
GHC.IO.FD.writeRawBufferPtr_entry:
_caZKO:
	jmp GHC.IO.FD.writeRawBufferPtr1_entry
	.size GHC.IO.FD.writeRawBufferPtr_entry, .-GHC.IO.FD.writeRawBufferPtr_entry


==================== Asm code ====================
2018-03-16 16:05:56.192039533 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.writeRawBufferPtr_info
.type GHC.IO.FD.writeRawBufferPtr_info, @object
GHC.IO.FD.writeRawBufferPtr_info:
	.quad	GHC.IO.FD.writeRawBufferPtr_entry
	.quad	0
	.quad	4294967310
	.quad	25769803801
	.quad	SaXeV_srt+128


==================== Asm code ====================
2018-03-16 16:05:56.194443202 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.readRawBufferPtrNoBlock_closure
.type GHC.IO.FD.readRawBufferPtrNoBlock_closure, @object
GHC.IO.FD.readRawBufferPtrNoBlock_closure:
	.quad	GHC.IO.FD.readRawBufferPtrNoBlock_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.195060915 UTC

.section .text
.align 8
.globl GHC.IO.FD.readRawBufferPtrNoBlock_entry
.type GHC.IO.FD.readRawBufferPtrNoBlock_entry, @object
GHC.IO.FD.readRawBufferPtrNoBlock_entry:
_caZKZ:
	jmp GHC.IO.FD.readRawBufferPtrNoBlock1_entry
	.size GHC.IO.FD.readRawBufferPtrNoBlock_entry, .-GHC.IO.FD.readRawBufferPtrNoBlock_entry


==================== Asm code ====================
2018-03-16 16:05:56.19562686 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.readRawBufferPtrNoBlock_info
.type GHC.IO.FD.readRawBufferPtrNoBlock_info, @object
GHC.IO.FD.readRawBufferPtrNoBlock_info:
	.quad	GHC.IO.FD.readRawBufferPtrNoBlock_entry
	.quad	0
	.quad	4294967310
	.quad	25769803801
	.quad	SaXeV_srt+368


==================== Asm code ====================
2018-03-16 16:05:56.197818089 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.readRawBufferPtr_closure
.type GHC.IO.FD.readRawBufferPtr_closure, @object
GHC.IO.FD.readRawBufferPtr_closure:
	.quad	GHC.IO.FD.readRawBufferPtr_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.198442564 UTC

.section .text
.align 8
.globl GHC.IO.FD.readRawBufferPtr_entry
.type GHC.IO.FD.readRawBufferPtr_entry, @object
GHC.IO.FD.readRawBufferPtr_entry:
_caZLa:
	jmp GHC.IO.FD.$fRawIOFD5_entry
	.size GHC.IO.FD.readRawBufferPtr_entry, .-GHC.IO.FD.readRawBufferPtr_entry


==================== Asm code ====================
2018-03-16 16:05:56.199029103 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.readRawBufferPtr_info
.type GHC.IO.FD.readRawBufferPtr_info, @object
GHC.IO.FD.readRawBufferPtr_info:
	.quad	GHC.IO.FD.readRawBufferPtr_entry
	.quad	0
	.quad	4294967310
	.quad	25769803801
	.quad	SaXeV_srt+376


==================== Asm code ====================
2018-03-16 16:05:56.204417716 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$cfillReadBuffer0_closure
.type GHC.IO.FD.$w$cfillReadBuffer0_closure, @object
GHC.IO.FD.$w$cfillReadBuffer0_closure:
	.quad	GHC.IO.FD.$w$cfillReadBuffer0_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.205111652 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cfillReadBuffer0_slow
.type GHC.IO.FD.$w$cfillReadBuffer0_slow, @object
GHC.IO.FD.$w$cfillReadBuffer0_slow:
_caZLi:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.FD.$w$cfillReadBuffer0_entry
	.size GHC.IO.FD.$w$cfillReadBuffer0_slow, .-GHC.IO.FD.$w$cfillReadBuffer0_slow


==================== Asm code ====================
2018-03-16 16:05:56.206439032 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cfillReadBuffer0_entry
.type GHC.IO.FD.$w$cfillReadBuffer0_entry, @object
GHC.IO.FD.$w$cfillReadBuffer0_entry:
_caZLo:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _caZLz
_caZLA:
	movq $block_caZLw_info,-32(%rbp)
	movq %r9,%rax
	xorl %r9d,%r9d
	movq 16(%rbp),%rbx
	movq %r8,%rcx
	movq %rdi,%r8
	addq %rbx,%r8
	movq %rdi,%rdx
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.IO.FD.$fBufferedIOFD8_closure,%r14d
	movq (%rbp),%r10
	subq %rbx,%r10
	movq %r10,-40(%rbp)
	movq %rdx,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry
_caZLz:
	movl $GHC.IO.FD.$w$cfillReadBuffer0_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.FD.$w$cfillReadBuffer0_entry, .-GHC.IO.FD.$w$cfillReadBuffer0_entry


==================== Asm code ====================
2018-03-16 16:05:56.207167555 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$cfillReadBuffer0_info
.type GHC.IO.FD.$w$cfillReadBuffer0_info, @object
GHC.IO.FD.$w$cfillReadBuffer0_info:
	.quad	GHC.IO.FD.$w$cfillReadBuffer0_entry
	.quad	0
	.quad	30064771086
	.quad	38654705664
	.quad	SaXeV_srt+384
	.quad	14792
	.quad	GHC.IO.FD.$w$cfillReadBuffer0_slow


==================== Asm code ====================
2018-03-16 16:05:56.207875768 UTC

.section .text
.align 8
_caZLw:
_caZLw:
	movq $block_caZLy_info,(%rbp)
	testb $7,%bl
	jne _caZLy
_caZLC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZLw, .-_caZLw


==================== Asm code ====================
2018-03-16 16:05:56.208488348 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZLw_info:
	.quad	_caZLw
	.quad	3654
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.209512522 UTC

.section .text
.align 8
_caZLy:
_caZLy:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _caZLI
_caZLH:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq 48(%rbp),%r8
	movq 7(%rbx),%r9
	cmpq $-1,%r9
	je _caZLY
_caZLT:
	movq $GHC.IO.Buffer.Buffer_con_info,-88(%r12)
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rax,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	addq %r9,%r8
	movq %r8,-40(%r12)
	movq $GHC.Base.Just_con_info,-32(%r12)
	movq %rbx,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -30(%r12),%rax
	movq %rax,-8(%r12)
	leaq -87(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZLY:
	movq $GHC.IO.Buffer.Buffer_con_info,-88(%r12)
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rax,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq $(,)_con_info,-32(%r12)
	movq $GHC.Base.Nothing_closure+1,-24(%r12)
	leaq -87(%r12),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	addq $-16,%r12
	movq %rax,%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZLI:
	movq $96,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZLy, .-_caZLy


==================== Asm code ====================
2018-03-16 16:05:56.210430977 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZLy_info:
	.quad	_caZLy
	.quad	3654
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.214289391 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD7_closure
.type GHC.IO.FD.$fBufferedIOFD7_closure, @object
GHC.IO.FD.$fBufferedIOFD7_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD7_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.215054748 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD7_entry
.type GHC.IO.FD.$fBufferedIOFD7_entry, @object
GHC.IO.FD.$fBufferedIOFD7_entry:
_caZMv:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caZMz
_caZMA:
	movq $block_caZMs_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _caZMs
_caZMt:
	movq (%rbx),%rax
	jmp *(%rax)
_caZMz:
	movl $GHC.IO.FD.$fBufferedIOFD7_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fBufferedIOFD7_entry, .-GHC.IO.FD.$fBufferedIOFD7_entry


==================== Asm code ====================
2018-03-16 16:05:56.21625025 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD7_info
.type GHC.IO.FD.$fBufferedIOFD7_info, @object
GHC.IO.FD.$fBufferedIOFD7_info:
	.quad	GHC.IO.FD.$fBufferedIOFD7_entry
	.quad	0
	.quad	38654705678
	.quad	12884901903
	.quad	SaXeV_srt+384


==================== Asm code ====================
2018-03-16 16:05:56.216932109 UTC

.section .text
.align 8
_caZMs:
_caZMs:
	movq $block_caZMy_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _caZMy
_caZMC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZMs, .-_caZMs


==================== Asm code ====================
2018-03-16 16:05:56.21794088 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZMs_info:
	.quad	_caZMs
	.quad	1
	.quad	4294967326
	.quad	SaXeV_srt+384


==================== Asm code ====================
2018-03-16 16:05:56.218579781 UTC

.section .text
.align 8
_caZMy:
_caZMy:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,(%rbp)
	movq 39(%rbx),%rax
	movq %rax,8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,16(%rbp)
	jmp GHC.IO.FD.$w$cfillReadBuffer0_entry
	.size _caZMy, .-_caZMy


==================== Asm code ====================
2018-03-16 16:05:56.21918359 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZMy_info:
	.quad	_caZMy
	.quad	194
	.quad	4294967326
	.quad	SaXeV_srt+384


==================== Asm code ====================
2018-03-16 16:05:56.225734784 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$cflushWriteBuffer0_closure
.type GHC.IO.FD.$w$cflushWriteBuffer0_closure, @object
GHC.IO.FD.$w$cflushWriteBuffer0_closure:
	.quad	GHC.IO.FD.$w$cflushWriteBuffer0_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.226404575 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cflushWriteBuffer0_slow
.type GHC.IO.FD.$w$cflushWriteBuffer0_slow, @object
GHC.IO.FD.$w$cflushWriteBuffer0_slow:
_caZN0:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.FD.$w$cflushWriteBuffer0_entry
	.size GHC.IO.FD.$w$cflushWriteBuffer0_slow, .-GHC.IO.FD.$w$cflushWriteBuffer0_slow


==================== Asm code ====================
2018-03-16 16:05:56.227247932 UTC

.section .text
.align 8
sat_saX6L_entry:
_caZNk:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _caZNl
_caZNm:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_caZNh_info,-72(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 64(%rbx),%r8
	movq 32(%rbx),%rbx
	movq %rdx,-64(%rbp)
	movq %rax,-56(%rbp)
	movq %rcx,-48(%rbp)
	movq %rsi,-40(%rbp)
	movq %rdi,-32(%rbp)
	movq %r8,-24(%rbp)
	addq $-72,%rbp
	testb $7,%bl
	jne _caZNh
_caZNi:
	movq (%rbx),%rax
	jmp *(%rax)
_caZNl:
	jmp *-16(%r13)
	.size sat_saX6L_entry, .-sat_saX6L_entry


==================== Asm code ====================
2018-03-16 16:05:56.227951439 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX6L_info:
	.quad	sat_saX6L_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:05:56.228828493 UTC

.section .text
.align 8
_caZNh:
_caZNh:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _caZNr
_caZNq:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 48(%rbp),%rdi
	addq $7,%rbx
	movq 40(%rbp),%r8
	addq (%rbx),%r8
	cmpq %rdi,%r8
	je _caZND
_caZNA:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZND:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZNr:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZNh, .-_caZNh


==================== Asm code ====================
2018-03-16 16:05:56.229883566 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZNh_info:
	.quad	_caZNh
	.quad	3654
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.230668967 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cflushWriteBuffer0_entry
.type GHC.IO.FD.$w$cflushWriteBuffer0_entry, @object
GHC.IO.FD.$w$cflushWriteBuffer0_entry:
_caZNF:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _caZNH
_caZNI:
	movq $block_caZNa_info,-32(%rbp)
	movq 8(%rbp),%rax
	movq %r8,%rbx
	movq 16(%rbp),%r8
	subq %rax,%r8
	movq %rdi,%rcx
	addq %rax,%rdi
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.IO.FD.$w$cwriteNonBlocking_entry
_caZNH:
	movl $GHC.IO.FD.$w$cflushWriteBuffer0_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.FD.$w$cflushWriteBuffer0_entry, .-GHC.IO.FD.$w$cflushWriteBuffer0_entry


==================== Asm code ====================
2018-03-16 16:05:56.231391531 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$cflushWriteBuffer0_info
.type GHC.IO.FD.$w$cflushWriteBuffer0_info, @object
GHC.IO.FD.$w$cflushWriteBuffer0_info:
	.quad	GHC.IO.FD.$w$cflushWriteBuffer0_entry
	.quad	0
	.quad	12884901902
	.quad	38654705664
	.quad	SaXeV_srt+416
	.quad	14792
	.quad	GHC.IO.FD.$w$cflushWriteBuffer0_slow


==================== Asm code ====================
2018-03-16 16:05:56.232185182 UTC

.section .text
.align 8
_caZNa:
_caZNa:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _caZNL
_caZNK:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq 48(%rbp),%r8
	movq $sat_saX6L_info,-88(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZNL:
	movq $96,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZNa, .-_caZNa


==================== Asm code ====================
2018-03-16 16:05:56.232950857 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZNa_info:
	.quad	_caZNa
	.quad	3654
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.236747446 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD1_closure
.type GHC.IO.FD.$fBufferedIOFD1_closure, @object
GHC.IO.FD.$fBufferedIOFD1_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.237560983 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD1_entry
.type GHC.IO.FD.$fBufferedIOFD1_entry, @object
GHC.IO.FD.$fBufferedIOFD1_entry:
_caZOj:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caZOn
_caZOo:
	movq $block_caZOg_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _caZOg
_caZOh:
	movq (%rbx),%rax
	jmp *(%rax)
_caZOn:
	movl $GHC.IO.FD.$fBufferedIOFD1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fBufferedIOFD1_entry, .-GHC.IO.FD.$fBufferedIOFD1_entry


==================== Asm code ====================
2018-03-16 16:05:56.238273441 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD1_info
.type GHC.IO.FD.$fBufferedIOFD1_info, @object
GHC.IO.FD.$fBufferedIOFD1_info:
	.quad	GHC.IO.FD.$fBufferedIOFD1_entry
	.quad	0
	.quad	21474836494
	.quad	12884901903
	.quad	SaXeV_srt+416


==================== Asm code ====================
2018-03-16 16:05:56.239021202 UTC

.section .text
.align 8
_caZOg:
_caZOg:
	movq $block_caZOm_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _caZOm
_caZOq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZOg, .-_caZOg


==================== Asm code ====================
2018-03-16 16:05:56.240145093 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZOg_info:
	.quad	_caZOg
	.quad	1
	.quad	4294967326
	.quad	SaXeV_srt+416


==================== Asm code ====================
2018-03-16 16:05:56.24081527 UTC

.section .text
.align 8
_caZOm:
_caZOm:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,(%rbp)
	movq 39(%rbx),%rax
	movq %rax,8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,16(%rbp)
	jmp GHC.IO.FD.$w$cflushWriteBuffer0_entry
	.size _caZOm, .-_caZOm


==================== Asm code ====================
2018-03-16 16:05:56.24166651 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZOm_info:
	.quad	_caZOm
	.quad	194
	.quad	4294967326
	.quad	SaXeV_srt+416


==================== Asm code ====================
2018-03-16 16:05:56.245348442 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD21_closure
.type GHC.IO.FD.$fIODeviceFD21_closure, @object
GHC.IO.FD.$fIODeviceFD21_closure:
	.quad	GHC.IO.FD.$fIODeviceFD21_info


==================== Asm code ====================
2018-03-16 16:05:56.246137196 UTC

.section .text
.align 8
sat_saX7a_entry:
_caZP7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caZP8
_caZPj:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testl %eax,%eax
	je _caZP6
_caZP5:
	movl $GHC.Types.True_closure+2,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZP8:
	jmp *-16(%r13)
_caZP6:
	movl $GHC.Types.False_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_saX7a_entry, .-sat_saX7a_entry


==================== Asm code ====================
2018-03-16 16:05:56.246846659 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX7a_info:
	.quad	sat_saX7a_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:05:56.247570952 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD21_entry
.type GHC.IO.FD.$fIODeviceFD21_entry, @object
GHC.IO.FD.$fIODeviceFD21_entry:
_caZPk:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZPl
_caZPm:
	movq $block_caZOR_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caZOR
_caZOS:
	movq (%rbx),%rax
	jmp *(%rax)
_caZPl:
	movl $GHC.IO.FD.$fIODeviceFD21_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD21_entry, .-GHC.IO.FD.$fIODeviceFD21_entry


==================== Asm code ====================
2018-03-16 16:05:56.248220045 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD21_info
.type GHC.IO.FD.$fIODeviceFD21_info, @object
GHC.IO.FD.$fIODeviceFD21_info:
	.quad	GHC.IO.FD.$fIODeviceFD21_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:56.248959717 UTC

.section .text
.align 8
_caZOR:
_caZOR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caZPp
_caZPo:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call isatty
	addq $8,%rsp
	movq $sat_saX7a_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZPp:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZOR, .-_caZOR


==================== Asm code ====================
2018-03-16 16:05:56.249615123 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZOR_info:
	.quad	_caZOR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.252392496 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD25_closure
.type GHC.IO.FD.$fIODeviceFD25_closure, @object
GHC.IO.FD.$fIODeviceFD25_closure:
	.quad	GHC.IO.FD.$fIODeviceFD25_info


==================== Asm code ====================
2018-03-16 16:05:56.253103023 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD25_entry
.type GHC.IO.FD.$fIODeviceFD25_entry, @object
GHC.IO.FD.$fIODeviceFD25_entry:
_caZPP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZPQ
_caZPR:
	movq $block_caZPM_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caZPM
_caZPN:
	movq (%rbx),%rax
	jmp *(%rax)
_caZPQ:
	movl $GHC.IO.FD.$fIODeviceFD25_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD25_entry, .-GHC.IO.FD.$fIODeviceFD25_entry


==================== Asm code ====================
2018-03-16 16:05:56.254037838 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD25_info
.type GHC.IO.FD.$fIODeviceFD25_info, @object
GHC.IO.FD.$fIODeviceFD25_info:
	.quad	GHC.IO.FD.$fIODeviceFD25_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:05:56.254702033 UTC

.section .text
.align 8
_caZPM:
_caZPM:
	cmpq $-1,7(%rbx)
	je _caZPY
_caZPX:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZPY:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caZPM, .-_caZPM


==================== Asm code ====================
2018-03-16 16:05:56.255341837 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZPM_info:
	.quad	_caZPM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.256998709 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$fIODeviceFD29_bytes
.type GHC.IO.FD.$fIODeviceFD29_bytes, @object
GHC.IO.FD.$fIODeviceFD29_bytes:
	.asciz "GHC.IO.FD.ready"


==================== Asm code ====================
2018-03-16 16:05:56.259725163 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD28_closure
.type GHC.IO.FD.$fIODeviceFD28_closure, @object
GHC.IO.FD.$fIODeviceFD28_closure:
	.quad	GHC.IO.FD.$fIODeviceFD28_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.260600958 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD28_entry
.type GHC.IO.FD.$fIODeviceFD28_entry, @object
GHC.IO.FD.$fIODeviceFD28_entry:
_caZQi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caZQj
_caZQk:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caZQh
_caZQg:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.FD.$fIODeviceFD29_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_caZQj:
	jmp *-16(%r13)
_caZQh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.$fIODeviceFD28_entry, .-GHC.IO.FD.$fIODeviceFD28_entry


==================== Asm code ====================
2018-03-16 16:05:56.261376643 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD28_info
.type GHC.IO.FD.$fIODeviceFD28_info, @object
GHC.IO.FD.$fIODeviceFD28_info:
	.quad	GHC.IO.FD.$fIODeviceFD28_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:56.270105959 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$cready_closure
.type GHC.IO.FD.$w$cready_closure, @object
GHC.IO.FD.$w$cready_closure:
	.quad	GHC.IO.FD.$w$cready_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.271211296 UTC

.section .text
.align 8
sat_saX7u_entry:
_caZQI:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZQY
_caZQZ:
	movq $block_caZQS_info,-8(%rbp)
	addq $-8,%rbp
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movzbl %cl,%ecx
	movq 15(%rbx),%rbx
	movq 872(%r13),%rdx
	movq 24(%rdx),%rsi
	movq %rbp,16(%rsi)
	movq 888(%r13),%rsi
	leaq 8(%r12),%rdi
	movq %rdi,8(%rsi)
	leaq 8(%r12),%rdi
	subq (%rsi),%rdi
	movq 104(%rdx),%rsi
	subq %rdi,%rsi
	movq %rsi,104(%rdx)
	subq $8,%rsp
	movq %r13,%rdi
	xorl %esi,%esi
	movq %rax,%rdx
	xorl %eax,%eax
	movq %rdx,%r14
	movq %rcx,72(%rsp)
	call suspendThread
	addq $8,%rsp
	subq $8,%rsp
	movq 72(%rsp),%rcx
	movq %rbx,%rdx
	movq %r14,%rdi
	movq %rcx,%rsi
	xorl %ecx,%ecx
	movq %rax,%rbx
	xorl %eax,%eax
	call fdReady
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call resumeThread
	addq $8,%rsp
	movq %rax,%r13
	movq 872(%r13),%rax
	movq 24(%rax),%rcx
	movq 16(%rcx),%rbp
	leaq 192(%rcx),%r15
	movq $0,904(%r13)
	movq 888(%r13),%rcx
	movq 8(%rcx),%rdx
	leaq -8(%rdx),%r12
	movq (%rcx),%rsi
	movslq 48(%rcx),%rcx
	shlq $12,%rcx
	decq %rcx
	movq %rsi,%rdi
	addq %rcx,%rdi
	movq %rdi,856(%r13)
	subq %rsi,%rdx
	movq 104(%rax),%rcx
	addq %rdx,%rcx
	movq %rcx,104(%rax)
	movq (%rbp),%rax
	jmp *(%rax)
_caZQY:
	jmp *-8(%r13)
	.size sat_saX7u_entry, .-sat_saX7u_entry


==================== Asm code ====================
2018-03-16 16:05:56.272074566 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX7u_info:
	.quad	sat_saX7u_entry
	.quad	12884901888
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:56.272805387 UTC

.section .text
.align 8
_caZQS:
_caZQS:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZR2
_caZR1:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZR2:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _caZQS, .-_caZQS


==================== Asm code ====================
2018-03-16 16:05:56.273491487 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZQS_info:
	.quad	_caZQS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.274281923 UTC

.section .text
.align 8
sat_saX7B_entry:
_caZRm:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caZRn
_caZRo:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_caZRj_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _caZRj
_caZRk:
	movq (%rbx),%rax
	jmp *(%rax)
_caZRn:
	jmp *-16(%r13)
	.size sat_saX7B_entry, .-sat_saX7B_entry


==================== Asm code ====================
2018-03-16 16:05:56.274952503 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX7B_info:
	.quad	sat_saX7B_entry
	.quad	1
	.quad	4294967312
	.quad	SaXeV_srt+440


==================== Asm code ====================
2018-03-16 16:05:56.275731453 UTC

.section .text
.align 8
_caZRj:
_caZRj:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _uaZRx
_caZRv:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_uaZRx:
	cmpq $1,%rax
	jne _caZRu
_caZRw:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZRu:
	movl $GHC.Enum.$fEnumBool1_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZRj, .-_caZRj


==================== Asm code ====================
2018-03-16 16:05:56.276412657 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZRj_info:
	.quad	_caZRj
	.quad	0
	.quad	4294967326
	.quad	SaXeV_srt+440


==================== Asm code ====================
2018-03-16 16:05:56.27721372 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cready_entry
.type GHC.IO.FD.$w$cready_entry, @object
GHC.IO.FD.$w$cready_entry:
_caZRG:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caZRH
_caZRI:
	movq $block_caZRz_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _caZRz
_caZRA:
	movq (%rbx),%rax
	jmp *(%rax)
_caZRH:
	movl $GHC.IO.FD.$w$cready_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$w$cready_entry, .-GHC.IO.FD.$w$cready_entry


==================== Asm code ====================
2018-03-16 16:05:56.2781335 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$cready_info
.type GHC.IO.FD.$w$cready_info, @object
GHC.IO.FD.$w$cready_info:
	.quad	GHC.IO.FD.$w$cready_entry
	.quad	0
	.quad	63050399078154254
	.quad	17179869202
	.quad	SaXeV_srt+272


==================== Asm code ====================
2018-03-16 16:05:56.278813321 UTC

.section .text
.align 8
_caZRz:
_caZRz:
	andl $7,%ebx
	cmpq $1,%rbx
	je _caZRD
_caZRE:
	movq $1,(%rbp)
	jmp _caZQz
_caZRD:
	movq $0,(%rbp)
	jmp _caZQz
	.size _caZRz, .-_caZRz


==================== Asm code ====================
2018-03-16 16:05:56.279455623 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZRz_info:
	.quad	_caZRz
	.quad	194
	.quad	45036000568672286
	.quad	SaXeV_srt+272


==================== Asm code ====================
2018-03-16 16:05:56.28026177 UTC

.section .text
.align 8
_caZQz:
_caZQz:
	addq $32,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _caZRL
_caZRK:
	movq $sat_saX7u_info,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	movq $block_caZRd_info,16(%rbp)
	leaq -23(%r12),%rdi
	movl $GHC.IO.FD.$fIODeviceFD28_closure,%esi
	movl $GHC.IO.FD.$fIODeviceFD25_closure+1,%r14d
	addq $16,%rbp
	jmp Foreign.C.Error.throwErrnoIfMinus1Retry2_entry
_caZRL:
	movq $32,904(%r13)
	movq $block_caZQy_info,(%rbp)
	movq %rax,%rbx
	jmp stg_gc_unbx_r1
	.size _caZQz, .-_caZQz


==================== Asm code ====================
2018-03-16 16:05:56.281016139 UTC

.section .text
.align 8
_caZQy:
_caZQy:
	movq %rbx,(%rbp)
	jmp _caZQz
	.size _caZQy, .-_caZQy


==================== Asm code ====================
2018-03-16 16:05:56.281612378 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZQy_info:
	.quad	_caZQy
	.quad	194
	.quad	45036000568672286
	.quad	SaXeV_srt+272


==================== Asm code ====================
2018-03-16 16:05:56.282332663 UTC

.section .text
.align 8
_caZRd:
_caZRd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caZRO
_caZRN:
	movq $sat_saX7B_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZRO:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZRd, .-_caZRd


==================== Asm code ====================
2018-03-16 16:05:56.28300027 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZRd_info:
	.quad	_caZRd
	.quad	0
	.quad	4294967326
	.quad	SaXeV_srt+440


==================== Asm code ====================
2018-03-16 16:05:56.286722171 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD27_closure
.type GHC.IO.FD.$fIODeviceFD27_closure, @object
GHC.IO.FD.$fIODeviceFD27_closure:
	.quad	GHC.IO.FD.$fIODeviceFD27_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.287510484 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD27_entry
.type GHC.IO.FD.$fIODeviceFD27_entry, @object
GHC.IO.FD.$fIODeviceFD27_entry:
_caZT7:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caZTb
_caZTc:
	movq $block_caZT4_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _caZT4
_caZT5:
	movq (%rbx),%rax
	jmp *(%rax)
_caZTb:
	movl $GHC.IO.FD.$fIODeviceFD27_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD27_entry, .-GHC.IO.FD.$fIODeviceFD27_entry


==================== Asm code ====================
2018-03-16 16:05:56.288690316 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD27_info
.type GHC.IO.FD.$fIODeviceFD27_info, @object
GHC.IO.FD.$fIODeviceFD27_info:
	.quad	GHC.IO.FD.$fIODeviceFD27_entry
	.quad	0
	.quad	21474836494
	.quad	17179869207
	.quad	SaXeV_srt+448


==================== Asm code ====================
2018-03-16 16:05:56.289545245 UTC

.section .text
.align 8
_caZT4:
_caZT4:
	movq $block_caZTa_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _caZTa
_caZTe:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZT4, .-_caZT4


==================== Asm code ====================
2018-03-16 16:05:56.290142705 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZT4_info:
	.quad	_caZT4
	.quad	2
	.quad	4294967326
	.quad	SaXeV_srt+448


==================== Asm code ====================
2018-03-16 16:05:56.290773896 UTC

.section .text
.align 8
_caZTa:
_caZTa:
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.FD.$w$cready_entry
	.size _caZTa, .-_caZTa


==================== Asm code ====================
2018-03-16 16:05:56.291355733 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZTa_info:
	.quad	_caZTa
	.quad	130
	.quad	4294967326
	.quad	SaXeV_srt+448


==================== Asm code ====================
2018-03-16 16:05:56.296600599 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.setNonBlockingMode1_closure
.type GHC.IO.FD.setNonBlockingMode1_closure, @object
GHC.IO.FD.setNonBlockingMode1_closure:
	.quad	GHC.IO.FD.setNonBlockingMode1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.297371216 UTC

.section .text
.align 8
sat_saX7W_entry:
_caZTU:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _caZTV
_caZTW:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_caZTN_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _caZTN
_caZTO:
	movq (%rbx),%rax
	jmp *(%rax)
_caZTV:
	jmp *-16(%r13)
	.size sat_saX7W_entry, .-sat_saX7W_entry


==================== Asm code ====================
2018-03-16 16:05:56.298051735 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX7W_info:
	.quad	sat_saX7W_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:05:56.298898465 UTC

.section .text
.align 8
_caZTN:
_caZTN:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _caZTR
_caZTS:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caZU8
_caZU7:
	movq $GHC.IO.FD.FD_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq $1,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZU8:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_caZTR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caZU8
_caZU1:
	movq $GHC.IO.FD.FD_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq $0,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caZTN, .-_caZTN


==================== Asm code ====================
2018-03-16 16:05:56.299649996 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZTN_info:
	.quad	_caZTN
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.300391088 UTC

.section .text
.align 8
.globl GHC.IO.FD.setNonBlockingMode1_entry
.type GHC.IO.FD.setNonBlockingMode1_entry, @object
GHC.IO.FD.setNonBlockingMode1_entry:
_caZUa:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caZUb
_caZUc:
	movq $block_caZTC_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _caZTC
_caZTD:
	movq (%rbx),%rax
	jmp *(%rax)
_caZUb:
	movl $GHC.IO.FD.setNonBlockingMode1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.setNonBlockingMode1_entry, .-GHC.IO.FD.setNonBlockingMode1_entry


==================== Asm code ====================
2018-03-16 16:05:56.30104179 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.setNonBlockingMode1_info
.type GHC.IO.FD.setNonBlockingMode1_info, @object
GHC.IO.FD.setNonBlockingMode1_info:
	.quad	GHC.IO.FD.setNonBlockingMode1_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	SaXeV_srt+472


==================== Asm code ====================
2018-03-16 16:05:56.301940517 UTC

.section .text
.align 8
_caZTC:
_caZTC:
	movq $block_caZTH_info,-8(%rbp)
	movq 8(%rbp),%rsi
	movq 7(%rbx),%rax
	movq %rax,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp System.Posix.Internals.$wsetNonBlockingFD_entry
	.size _caZTC, .-_caZTC


==================== Asm code ====================
2018-03-16 16:05:56.302562032 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZTC_info:
	.quad	_caZTC
	.quad	1
	.quad	4294967326
	.quad	SaXeV_srt+472


==================== Asm code ====================
2018-03-16 16:05:56.303237711 UTC

.section .text
.align 8
_caZTH:
_caZTH:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _caZUg
_caZUf:
	movq $sat_saX7W_info,-24(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -24(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZUg:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZTH, .-_caZTH


==================== Asm code ====================
2018-03-16 16:05:56.303913237 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZTH_info:
	.quad	_caZTH
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.306214385 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.setNonBlockingMode_closure
.type GHC.IO.FD.setNonBlockingMode_closure, @object
GHC.IO.FD.setNonBlockingMode_closure:
	.quad	GHC.IO.FD.setNonBlockingMode_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.306848768 UTC

.section .text
.align 8
.globl GHC.IO.FD.setNonBlockingMode_entry
.type GHC.IO.FD.setNonBlockingMode_entry, @object
GHC.IO.FD.setNonBlockingMode_entry:
_caZUN:
	jmp GHC.IO.FD.setNonBlockingMode1_entry
	.size GHC.IO.FD.setNonBlockingMode_entry, .-GHC.IO.FD.setNonBlockingMode_entry


==================== Asm code ====================
2018-03-16 16:05:56.307431269 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.setNonBlockingMode_info
.type GHC.IO.FD.setNonBlockingMode_info, @object
GHC.IO.FD.setNonBlockingMode_info:
	.quad	GHC.IO.FD.setNonBlockingMode_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SaXeV_srt+480


==================== Asm code ====================
2018-03-16 16:05:56.30913 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl5_raWVb_bytes:
	.asciz "GHC.IO.FD.dup2"


==================== Asm code ====================
2018-03-16 16:05:56.312233649 UTC

.section .data
.align 8
.align 1
lvl6_raWVc_closure:
	.quad	lvl6_raWVc_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.313112029 UTC

.section .text
.align 8
lvl6_raWVc_entry:
_caZV1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caZV2
_caZV3:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caZV0
_caZUZ:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl5_raWVb_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_caZV2:
	jmp *-16(%r13)
_caZV0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl6_raWVc_entry, .-lvl6_raWVc_entry


==================== Asm code ====================
2018-03-16 16:05:56.314128394 UTC

.section .data.rel.ro
.align 8
.align 1
lvl6_raWVc_info:
	.quad	lvl6_raWVc_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:56.316378329 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD2_closure
.type GHC.IO.FD.$fIODeviceFD2_closure, @object
GHC.IO.FD.$fIODeviceFD2_closure:
	.quad	GHC.IO.FD.$fIODeviceFD2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.317020312 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD2_entry
.type GHC.IO.FD.$fIODeviceFD2_entry, @object
GHC.IO.FD.$fIODeviceFD2_entry:
_caZVh:
	movslq %r14d,%rsi
	movl $lvl6_raWVc_closure,%r14d
	jmp Foreign.C.Error.$wlvl_entry
	.size GHC.IO.FD.$fIODeviceFD2_entry, .-GHC.IO.FD.$fIODeviceFD2_entry


==================== Asm code ====================
2018-03-16 16:05:56.31767595 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD2_info
.type GHC.IO.FD.$fIODeviceFD2_info, @object
GHC.IO.FD.$fIODeviceFD2_info:
	.quad	GHC.IO.FD.$fIODeviceFD2_entry
	.quad	0
	.quad	4503603922337806
	.quad	8589934596
	.quad	SaXeV_srt+328


==================== Asm code ====================
2018-03-16 16:05:56.321427703 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$cdup2_closure
.type GHC.IO.FD.$w$cdup2_closure, @object
GHC.IO.FD.$w$cdup2_closure:
	.quad	GHC.IO.FD.$w$cdup2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.322307379 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cdup2_entry
.type GHC.IO.FD.$w$cdup2_entry, @object
GHC.IO.FD.$w$cdup2_entry:
_caZVA:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _caZVB
_caZVC:
	movq %rdi,%rax
	subq $8,%rsp
	movq %rsi,%rbx
	movq %rdi,%rsi
	movq %r14,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call dup2
	addq $8,%rsp
	movslq %eax,%rax
	cmpq $-1,%rax
	jne _uaZVR
_caZVz:
	subq $8,%rsp
	xorl %eax,%eax
	call __hscore_get_errno
	addq $8,%rsp
	movq %rax,%r14
	jmp GHC.IO.FD.$fIODeviceFD2_entry
_uaZVR:
	movq %rbx,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp _caZVF
_caZVB:
	movl $GHC.IO.FD.$w$cdup2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$w$cdup2_entry, .-GHC.IO.FD.$w$cdup2_entry


==================== Asm code ====================
2018-03-16 16:05:56.323070329 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$cdup2_info
.type GHC.IO.FD.$w$cdup2_info, @object
GHC.IO.FD.$w$cdup2_info:
	.quad	GHC.IO.FD.$w$cdup2_entry
	.quad	0
	.quad	12884901902
	.quad	17179869200
	.quad	SaXeV_srt+496


==================== Asm code ====================
2018-03-16 16:05:56.323846469 UTC

.section .text
.align 8
_caZVF:
_caZVF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caZVK
_caZVJ:
	movq $GHC.IO.FD.FD_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZVK:
	movq $24,904(%r13)
	movq $block_caZVE_info,-8(%rbp)
	movq 16(%rbp),%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _caZVF, .-_caZVF


==================== Asm code ====================
2018-03-16 16:05:56.324594831 UTC

.section .text
.align 8
_caZVE:
_caZVE:
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp _caZVF
	.size _caZVE, .-_caZVE


==================== Asm code ====================
2018-03-16 16:05:56.325206057 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZVE_info:
	.quad	_caZVE
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.328595343 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD1_closure
.type GHC.IO.FD.$fIODeviceFD1_closure, @object
GHC.IO.FD.$fIODeviceFD1_closure:
	.quad	GHC.IO.FD.$fIODeviceFD1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.329693475 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD1_entry
.type GHC.IO.FD.$fIODeviceFD1_entry, @object
GHC.IO.FD.$fIODeviceFD1_entry:
_caZWg:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caZWk
_caZWl:
	movq $block_caZWd_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _caZWd
_caZWe:
	movq (%rbx),%rax
	jmp *(%rax)
_caZWk:
	movl $GHC.IO.FD.$fIODeviceFD1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD1_entry, .-GHC.IO.FD.$fIODeviceFD1_entry


==================== Asm code ====================
2018-03-16 16:05:56.330379419 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD1_info
.type GHC.IO.FD.$fIODeviceFD1_info, @object
GHC.IO.FD.$fIODeviceFD1_info:
	.quad	GHC.IO.FD.$fIODeviceFD1_entry
	.quad	0
	.quad	21474836494
	.quad	12884901903
	.quad	SaXeV_srt+496


==================== Asm code ====================
2018-03-16 16:05:56.33115824 UTC

.section .text
.align 8
_caZWd:
_caZWd:
	movq $block_caZWj_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _caZWj
_caZWn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZWd, .-_caZWd


==================== Asm code ====================
2018-03-16 16:05:56.33177803 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZWd_info:
	.quad	_caZWd
	.quad	1
	.quad	4294967326
	.quad	SaXeV_srt+496


==================== Asm code ====================
2018-03-16 16:05:56.332466719 UTC

.section .text
.align 8
_caZWj:
_caZWj:
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.FD.$w$cdup2_entry
	.size _caZWj, .-_caZWj


==================== Asm code ====================
2018-03-16 16:05:56.333101573 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZWj_info:
	.quad	_caZWj
	.quad	194
	.quad	4294967326
	.quad	SaXeV_srt+496


==================== Asm code ====================
2018-03-16 16:05:56.334885824 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$fIODeviceFD5_bytes
.type GHC.IO.FD.$fIODeviceFD5_bytes, @object
GHC.IO.FD.$fIODeviceFD5_bytes:
	.asciz "GHC.IO.FD.dup"


==================== Asm code ====================
2018-03-16 16:05:56.337976108 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD4_closure
.type GHC.IO.FD.$fIODeviceFD4_closure, @object
GHC.IO.FD.$fIODeviceFD4_closure:
	.quad	GHC.IO.FD.$fIODeviceFD4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.338801378 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD4_entry
.type GHC.IO.FD.$fIODeviceFD4_entry, @object
GHC.IO.FD.$fIODeviceFD4_entry:
_caZWO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caZWP
_caZWQ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caZWN
_caZWM:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.FD.$fIODeviceFD5_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_caZWP:
	jmp *-16(%r13)
_caZWN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.$fIODeviceFD4_entry, .-GHC.IO.FD.$fIODeviceFD4_entry


==================== Asm code ====================
2018-03-16 16:05:56.339520594 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD4_info
.type GHC.IO.FD.$fIODeviceFD4_info, @object
GHC.IO.FD.$fIODeviceFD4_info:
	.quad	GHC.IO.FD.$fIODeviceFD4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:56.345117219 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$cdup_closure
.type GHC.IO.FD.$w$cdup_closure, @object
GHC.IO.FD.$w$cdup_closure:
	.quad	GHC.IO.FD.$w$cdup_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.345941595 UTC

.section .text
.align 8
sat_saX8C_entry:
_caZXk:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _caZXo
_caZXp:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_caZXh_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _caZXh
_caZXi:
	movq (%rbx),%rax
	jmp *(%rax)
_caZXo:
	jmp *-16(%r13)
	.size sat_saX8C_entry, .-sat_saX8C_entry


==================== Asm code ====================
2018-03-16 16:05:56.346596742 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX8C_info:
	.quad	sat_saX8C_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:05:56.34731167 UTC

.section .text
.align 8
_caZXh:
_caZXh:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caZXs
_caZXr:
	movq 7(%rbx),%rax
	movq $GHC.IO.FD.FD_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZXs:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZXh, .-_caZXh


==================== Asm code ====================
2018-03-16 16:05:56.347923062 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZXh_info:
	.quad	_caZXh
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.348791396 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cdup_entry
.type GHC.IO.FD.$w$cdup_entry, @object
GHC.IO.FD.$w$cdup_entry:
_caZXx:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caZXy
_caZXz:
	subq $8,%rsp
	movq %r14,%rdi
	xorl %eax,%eax
	movq %rsi,%rbx
	call dup
	addq $8,%rsp
	movslq %eax,%rax
	cmpq $-1,%rax
	jne _uaZXL
_caZXw:
	movq $block_caZXb_info,-16(%rbp)
	movl $GHC.IO.FD.$fIODeviceFD4_closure,%r14d
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp Foreign.C.Error.throwErrno1_entry
_uaZXL:
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp _caZXB
_caZXy:
	movl $GHC.IO.FD.$w$cdup_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$w$cdup_entry, .-GHC.IO.FD.$w$cdup_entry


==================== Asm code ====================
2018-03-16 16:05:56.349863111 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$cdup_info
.type GHC.IO.FD.$w$cdup_info, @object
GHC.IO.FD.$w$cdup_info:
	.quad	GHC.IO.FD.$w$cdup_entry
	.quad	0
	.quad	30064771086
	.quad	12884901900
	.quad	SaXeV_srt+520


==================== Asm code ====================
2018-03-16 16:05:56.350655199 UTC

.section .text
.align 8
_caZXB:
_caZXB:
	addq $24,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _caZXG
_caZXF:
	movq $GHC.IO.FD.FD_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZXG:
	movq $24,904(%r13)
	movq $block_caZXA_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _caZXB, .-_caZXB


==================== Asm code ====================
2018-03-16 16:05:56.351389879 UTC

.section .text
.align 8
_caZXA:
_caZXA:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _caZXB
	.size _caZXA, .-_caZXA


==================== Asm code ====================
2018-03-16 16:05:56.351924315 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZXA_info:
	.quad	_caZXA
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.352650762 UTC

.section .text
.align 8
_caZXb:
_caZXb:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _caZXK
_caZXJ:
	movq $sat_saX8C_info,-24(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -24(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZXK:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZXb, .-_caZXb


==================== Asm code ====================
2018-03-16 16:05:56.353337126 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZXb_info:
	.quad	_caZXb
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.356287792 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD3_closure
.type GHC.IO.FD.$fIODeviceFD3_closure, @object
GHC.IO.FD.$fIODeviceFD3_closure:
	.quad	GHC.IO.FD.$fIODeviceFD3_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.35706234 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD3_entry
.type GHC.IO.FD.$fIODeviceFD3_entry, @object
GHC.IO.FD.$fIODeviceFD3_entry:
_caZYn:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZYo
_caZYp:
	movq $block_caZYk_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caZYk
_caZYl:
	movq (%rbx),%rax
	jmp *(%rax)
_caZYo:
	movl $GHC.IO.FD.$fIODeviceFD3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD3_entry, .-GHC.IO.FD.$fIODeviceFD3_entry


==================== Asm code ====================
2018-03-16 16:05:56.357803605 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD3_info
.type GHC.IO.FD.$fIODeviceFD3_info, @object
GHC.IO.FD.$fIODeviceFD3_info:
	.quad	GHC.IO.FD.$fIODeviceFD3_entry
	.quad	0
	.quad	38654705678
	.quad	8589934597
	.quad	SaXeV_srt+520


==================== Asm code ====================
2018-03-16 16:05:56.358474107 UTC

.section .text
.align 8
_caZYk:
_caZYk:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.IO.FD.$w$cdup_entry
	.size _caZYk, .-_caZYk


==================== Asm code ====================
2018-03-16 16:05:56.359102043 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZYk_info:
	.quad	_caZYk
	.quad	0
	.quad	4294967326
	.quad	SaXeV_srt+520


==================== Asm code ====================
2018-03-16 16:05:56.364218912 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD6_closure
.type GHC.IO.FD.$fIODeviceFD6_closure, @object
GHC.IO.FD.$fIODeviceFD6_closure:
	.quad	GHC.IO.FD.$fIODeviceFD6_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.364919921 UTC

.section .text
.align 8
sat_saX8N_entry:
_caZYO:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZYS
_caZYT:
	movq $block_caZYL_info,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caZYL
_caZYM:
	movq (%rbx),%rax
	jmp *(%rax)
_caZYS:
	jmp *-16(%r13)
	.size sat_saX8N_entry, .-sat_saX8N_entry


==================== Asm code ====================
2018-03-16 16:05:56.365602555 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX8N_info:
	.quad	sat_saX8N_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:56.366307347 UTC

.section .text
.align 8
_caZYL:
_caZYL:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZYW
_caZYV:
	movq 7(%rbx),%rax
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZYW:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZYL, .-_caZYL


==================== Asm code ====================
2018-03-16 16:05:56.366974138 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZYL_info:
	.quad	_caZYL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.367739752 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD6_entry
.type GHC.IO.FD.$fIODeviceFD6_entry, @object
GHC.IO.FD.$fIODeviceFD6_entry:
_caZZ3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZZ4
_caZZ5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caZZ7
_caZZ6:
	movq $sat_saX8N_info,-16(%r12)
	movq %r14,(%r12)
	movq $block_caZYY_info,-8(%rbp)
	leaq -16(%r12),%r14
	addq $-8,%rbp
	jmp System.Posix.Internals.fdStat1_entry
_caZZ7:
	movq $24,904(%r13)
_caZZ4:
	movl $GHC.IO.FD.$fIODeviceFD6_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD6_entry, .-GHC.IO.FD.$fIODeviceFD6_entry


==================== Asm code ====================
2018-03-16 16:05:56.368459711 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD6_info
.type GHC.IO.FD.$fIODeviceFD6_info, @object
GHC.IO.FD.$fIODeviceFD6_info:
	.quad	GHC.IO.FD.$fIODeviceFD6_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	SaXeV_srt+552


==================== Asm code ====================
2018-03-16 16:05:56.369128509 UTC

.section .text
.align 8
_caZYY:
_caZYY:
	movq $block_caZZ0_info,(%rbp)
	testb $7,%bl
	jne _caZZ0
_caZZ1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZYY, .-_caZYY


==================== Asm code ====================
2018-03-16 16:05:56.369735531 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZYY_info:
	.quad	_caZYY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.370378546 UTC

.section .text
.align 8
_caZZ0:
_caZZ0:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caZZ0, .-_caZZ0


==================== Asm code ====================
2018-03-16 16:05:56.370957734 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZZ0_info:
	.quad	_caZZ0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.377166923 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD20_closure
.type GHC.IO.FD.$fIODeviceFD20_closure, @object
GHC.IO.FD.$fIODeviceFD20_closure:
	.quad	GHC.IO.FD.$fIODeviceFD20_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.377981147 UTC

.section .text
.align 8
sat_saX90_entry:
_caZZK:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caZZO
_caZZP:
	movq $block_caZZH_info,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caZZH
_caZZI:
	movq (%rbx),%rax
	jmp *(%rax)
_caZZO:
	jmp *-16(%r13)
	.size sat_saX90_entry, .-sat_saX90_entry


==================== Asm code ====================
2018-03-16 16:05:56.378641024 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX90_info:
	.quad	sat_saX90_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:56.379375748 UTC

.section .text
.align 8
_caZZH:
_caZZH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caZZS
_caZZR:
	movq 7(%rbx),%rax
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caZZS:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZZH, .-_caZZH


==================== Asm code ====================
2018-03-16 16:05:56.380071621 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZZH_info:
	.quad	_caZZH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.380846091 UTC

.section .text
.align 8
sat_saX99_entry:
_cb00d:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb00e
_cb00f:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cb005_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cb005
_cb006:
	movq (%rbx),%rax
	jmp *(%rax)
_cb00e:
	jmp *-16(%r13)
	.size sat_saX99_entry, .-sat_saX99_entry


==================== Asm code ====================
2018-03-16 16:05:56.381599471 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX99_info:
	.quad	sat_saX99_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:56.382414658 UTC

.section .text
.align 8
_cb005:
_cb005:
	andl $7,%ebx
	cmpq $3,%rbx
	je _cb00b
_ub00p:
	cmpq $4,%rbx
	je _cb00b
_cb009:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb00b:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb005, .-_cb005


==================== Asm code ====================
2018-03-16 16:05:56.383141099 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb005_info:
	.quad	_cb005
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.383960844 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD20_entry
.type GHC.IO.FD.$fIODeviceFD20_entry, @object
GHC.IO.FD.$fIODeviceFD20_entry:
_cb00r:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb00s
_cb00t:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb00v
_cb00u:
	movq $sat_saX90_info,-16(%r12)
	movq %r14,(%r12)
	movq $block_caZZU_info,-8(%rbp)
	leaq -16(%r12),%r14
	addq $-8,%rbp
	jmp System.Posix.Internals.fdStat1_entry
_cb00v:
	movq $24,904(%r13)
_cb00s:
	movl $GHC.IO.FD.$fIODeviceFD20_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD20_entry, .-GHC.IO.FD.$fIODeviceFD20_entry


==================== Asm code ====================
2018-03-16 16:05:56.385196857 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD20_info
.type GHC.IO.FD.$fIODeviceFD20_info, @object
GHC.IO.FD.$fIODeviceFD20_info:
	.quad	GHC.IO.FD.$fIODeviceFD20_entry
	.quad	0
	.quad	21474836494
	.quad	8589934597
	.quad	SaXeV_srt+552


==================== Asm code ====================
2018-03-16 16:05:56.386158414 UTC

.section .text
.align 8
_caZZU:
_caZZU:
	movq $block_caZZW_info,(%rbp)
	testb $7,%bl
	jne _caZZW
_caZZX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caZZU, .-_caZZU


==================== Asm code ====================
2018-03-16 16:05:56.38674823 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZZU_info:
	.quad	_caZZU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.387471977 UTC

.section .text
.align 8
_caZZW:
_caZZW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb00z
_cb00y:
	movq 7(%rbx),%rax
	movq $sat_saX99_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb00z:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caZZW, .-_caZZW


==================== Asm code ====================
2018-03-16 16:05:56.388130113 UTC

.section .data.rel.ro
.align 8
.align 1
block_caZZW_info:
	.quad	_caZZW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.391083443 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.release1_closure
.type GHC.IO.FD.release1_closure, @object
GHC.IO.FD.release1_closure:
	.quad	GHC.IO.FD.release1_info


==================== Asm code ====================
2018-03-16 16:05:56.391875677 UTC

.section .text
.align 8
.globl GHC.IO.FD.release1_entry
.type GHC.IO.FD.release1_entry, @object
GHC.IO.FD.release1_entry:
_cb01f:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb01g
_cb01h:
	movq $block_cb01c_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb01c
_cb01d:
	movq (%rbx),%rax
	jmp *(%rax)
_cb01g:
	movl $GHC.IO.FD.release1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.release1_entry, .-GHC.IO.FD.release1_entry


==================== Asm code ====================
2018-03-16 16:05:56.392568868 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.release1_info
.type GHC.IO.FD.release1_info, @object
GHC.IO.FD.release1_info:
	.quad	GHC.IO.FD.release1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:56.39333538 UTC

.section .text
.align 8
_cb01c:
_cb01c:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call unlockFile
	addq $8,%rsp
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rcx
	jmp *(%rcx)
	.size _cb01c, .-_cb01c


==================== Asm code ====================
2018-03-16 16:05:56.393960715 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb01c_info:
	.quad	_cb01c
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.396036369 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.release_closure
.type GHC.IO.FD.release_closure, @object
GHC.IO.FD.release_closure:
	.quad	GHC.IO.FD.release_info


==================== Asm code ====================
2018-03-16 16:05:56.396696554 UTC

.section .text
.align 8
.globl GHC.IO.FD.release_entry
.type GHC.IO.FD.release_entry, @object
GHC.IO.FD.release_entry:
_cb01C:
	jmp GHC.IO.FD.release1_entry
	.size GHC.IO.FD.release_entry, .-GHC.IO.FD.release_entry


==================== Asm code ====================
2018-03-16 16:05:56.39730235 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.release_info
.type GHC.IO.FD.release_info, @object
GHC.IO.FD.release_info:
	.quad	GHC.IO.FD.release_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:56.399038952 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$fIODeviceFD24_bytes
.type GHC.IO.FD.$fIODeviceFD24_bytes, @object
GHC.IO.FD.$fIODeviceFD24_bytes:
	.asciz "GHC.IO.FD.close"


==================== Asm code ====================
2018-03-16 16:05:56.401514937 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD23_closure
.type GHC.IO.FD.$fIODeviceFD23_closure, @object
GHC.IO.FD.$fIODeviceFD23_closure:
	.quad	GHC.IO.FD.$fIODeviceFD23_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.402331702 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD23_entry
.type GHC.IO.FD.$fIODeviceFD23_entry, @object
GHC.IO.FD.$fIODeviceFD23_entry:
_cb01Q:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb01R
_cb01S:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cb01P
_cb01O:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.FD.$fIODeviceFD24_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cb01R:
	jmp *-16(%r13)
_cb01P:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.$fIODeviceFD23_entry, .-GHC.IO.FD.$fIODeviceFD23_entry


==================== Asm code ====================
2018-03-16 16:05:56.403072841 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD23_info
.type GHC.IO.FD.$fIODeviceFD23_info, @object
GHC.IO.FD.$fIODeviceFD23_info:
	.quad	GHC.IO.FD.$fIODeviceFD23_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:56.407179452 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$wclose_closure
.type GHC.IO.FD.$wclose_closure, @object
GHC.IO.FD.$wclose_closure:
	.quad	GHC.IO.FD.$wclose_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.408443079 UTC

.section .text
.align 8
sat_saX9t_entry:
_cb02b:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb02m
_cb02l:
	subq $8,%rsp
	movq 7(%rbx),%rax
	movslq %eax,%rdi
	xorl %eax,%eax
	call close
	addq $8,%rsp
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cb02m:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_saX9t_entry, .-sat_saX9t_entry


==================== Asm code ====================
2018-03-16 16:05:56.409114778 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX9t_info:
	.quad	sat_saX9t_entry
	.quad	4294967296
	.quad	10
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:56.409923113 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wclose_entry
.type GHC.IO.FD.$wclose_entry, @object
GHC.IO.FD.$wclose_entry:
_cb02p:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb02q
_cb02r:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb02t
_cb02s:
	movq $sat_saX9t_info,-8(%r12)
	movq %r14,(%r12)
	movq $block_cb02n_info,-8(%rbp)
	leaq -7(%r12),%rdi
	movl $GHC.IO.FD.$fIODeviceFD23_closure,%esi
	movl $GHC.IO.FD.$fIODeviceFD25_closure+1,%r14d
	addq $-8,%rbp
	jmp Foreign.C.Error.throwErrnoIfMinus1Retry2_entry
_cb02t:
	movq $16,904(%r13)
_cb02q:
	movl $GHC.IO.FD.$wclose_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$wclose_entry, .-GHC.IO.FD.$wclose_entry


==================== Asm code ====================
2018-03-16 16:05:56.410682387 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$wclose_info
.type GHC.IO.FD.$wclose_info, @object
GHC.IO.FD.$wclose_info:
	.quad	GHC.IO.FD.$wclose_entry
	.quad	0
	.quad	30064771086
	.quad	8589934596
	.quad	SaXeV_srt+576


==================== Asm code ====================
2018-03-16 16:05:56.411327756 UTC

.section .text
.align 8
_cb02n:
_cb02n:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb02n, .-_cb02n


==================== Asm code ====================
2018-03-16 16:05:56.411908377 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb02n_info:
	.quad	_cb02n
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.414692509 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD26_closure
.type GHC.IO.FD.$fIODeviceFD26_closure, @object
GHC.IO.FD.$fIODeviceFD26_closure:
	.quad	GHC.IO.FD.$fIODeviceFD26_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.415437923 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD26_entry
.type GHC.IO.FD.$fIODeviceFD26_entry, @object
GHC.IO.FD.$fIODeviceFD26_entry:
_cb02R:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb02S
_cb02T:
	movq $block_cb02O_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb02O
_cb02P:
	movq (%rbx),%rax
	jmp *(%rax)
_cb02S:
	movl $GHC.IO.FD.$fIODeviceFD26_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD26_entry, .-GHC.IO.FD.$fIODeviceFD26_entry


==================== Asm code ====================
2018-03-16 16:05:56.416127013 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD26_info
.type GHC.IO.FD.$fIODeviceFD26_info, @object
GHC.IO.FD.$fIODeviceFD26_info:
	.quad	GHC.IO.FD.$fIODeviceFD26_entry
	.quad	0
	.quad	21474836494
	.quad	8589934597
	.quad	SaXeV_srt+584


==================== Asm code ====================
2018-03-16 16:05:56.416787418 UTC

.section .text
.align 8
_cb02O:
_cb02O:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.IO.FD.$wclose_entry
	.size _cb02O, .-_cb02O


==================== Asm code ====================
2018-03-16 16:05:56.417853594 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb02O_info:
	.quad	_cb02O
	.quad	0
	.quad	4294967326
	.quad	SaXeV_srt+584


==================== Asm code ====================
2018-03-16 16:05:56.422149455 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$cclose_closure
.type GHC.IO.FD.$w$cclose_closure, @object
GHC.IO.FD.$w$cclose_closure:
	.quad	GHC.IO.FD.$w$cclose_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.422966714 UTC

.section .text
.align 8
sat_saX9W_entry:
_cb03o:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb03z
_cb03y:
	subq $8,%rsp
	movq 7(%rbx),%rax
	movslq %eax,%rdi
	xorl %eax,%eax
	call close
	addq $8,%rsp
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cb03z:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_saX9W_entry, .-sat_saX9W_entry


==================== Asm code ====================
2018-03-16 16:05:56.423686944 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saX9W_info:
	.quad	sat_saX9W_entry
	.quad	4294967296
	.quad	10
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:56.424627327 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cclose_entry
.type GHC.IO.FD.$w$cclose_entry, @object
GHC.IO.FD.$w$cclose_entry:
_cb03D:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb03E
_cb03F:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb03H
_cb03G:
	subq $8,%rsp
	movq %r14,%rdi
	xorl %eax,%eax
	call unlockFile
	addq $8,%rsp
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call rtsSupportsBoundThreads
	addq $8,%rsp
	testq %rax,%rax
	je _cb03C
_cb03B:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movslq %r14d,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rsi
	movl $GHC.IO.FD.$fIODeviceFD26_closure+2,%r14d
	jmp GHC.Event.Thread.closeFdWith1_entry
_cb03H:
	movq $16,904(%r13)
_cb03E:
	movl $GHC.IO.FD.$w$cclose_closure,%ebx
	jmp *-8(%r13)
_cb03C:
	movq $sat_saX9W_info,-8(%r12)
	movq %r14,(%r12)
	movq $block_cb03M_info,-8(%rbp)
	leaq -7(%r12),%rdi
	movl $GHC.IO.FD.$fIODeviceFD23_closure,%esi
	movl $GHC.IO.FD.$fIODeviceFD25_closure+1,%r14d
	addq $-8,%rbp
	jmp Foreign.C.Error.throwErrnoIfMinus1Retry2_entry
	.size GHC.IO.FD.$w$cclose_entry, .-GHC.IO.FD.$w$cclose_entry


==================== Asm code ====================
2018-03-16 16:05:56.425507798 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$cclose_info
.type GHC.IO.FD.$w$cclose_info, @object
GHC.IO.FD.$w$cclose_info:
	.quad	GHC.IO.FD.$w$cclose_entry
	.quad	0
	.quad	261993005070
	.quad	8589934596
	.quad	SaXeV_srt+576


==================== Asm code ====================
2018-03-16 16:05:56.426187238 UTC

.section .text
.align 8
_cb03M:
_cb03M:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb03M, .-_cb03M


==================== Asm code ====================
2018-03-16 16:05:56.426793152 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb03M_info:
	.quad	_cb03M
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.429868082 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD22_closure
.type GHC.IO.FD.$fIODeviceFD22_closure, @object
GHC.IO.FD.$fIODeviceFD22_closure:
	.quad	GHC.IO.FD.$fIODeviceFD22_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.430616759 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD22_entry
.type GHC.IO.FD.$fIODeviceFD22_entry, @object
GHC.IO.FD.$fIODeviceFD22_entry:
_cb04c:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb04d
_cb04e:
	movq $block_cb049_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb049
_cb04a:
	movq (%rbx),%rax
	jmp *(%rax)
_cb04d:
	movl $GHC.IO.FD.$fIODeviceFD22_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD22_entry, .-GHC.IO.FD.$fIODeviceFD22_entry


==================== Asm code ====================
2018-03-16 16:05:56.431286127 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD22_info
.type GHC.IO.FD.$fIODeviceFD22_info, @object
GHC.IO.FD.$fIODeviceFD22_info:
	.quad	GHC.IO.FD.$fIODeviceFD22_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	SaXeV_srt+616


==================== Asm code ====================
2018-03-16 16:05:56.43241536 UTC

.section .text
.align 8
_cb049:
_cb049:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.IO.FD.$w$cclose_entry
	.size _cb049, .-_cb049


==================== Asm code ====================
2018-03-16 16:05:56.432952202 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb049_info:
	.quad	_cb049
	.quad	0
	.quad	4294967326
	.quad	SaXeV_srt+616


==================== Asm code ====================
2018-03-16 16:05:56.434892944 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD_closure
.type GHC.IO.FD.$fIODeviceFD_closure, @object
GHC.IO.FD.$fIODeviceFD_closure:
	.quad	GHC.IO.Device.C:IODevice_con_info
	.quad	GHC.IO.FD.$fIODeviceFD27_closure+4
	.quad	GHC.IO.FD.$fIODeviceFD22_closure+2
	.quad	GHC.IO.FD.$fIODeviceFD21_closure+2
	.quad	GHC.IO.FD.$fIODeviceFD20_closure+2
	.quad	GHC.IO.FD.$fIODeviceFD17_closure+4
	.quad	GHC.IO.FD.$fIODeviceFD13_closure+2
	.quad	GHC.IO.FD.$fIODeviceFD12_closure+2
	.quad	GHC.IO.FD.$fIODeviceFD10_closure+3
	.quad	GHC.IO.FD.$fIODeviceFD9_closure+3
	.quad	GHC.IO.FD.$fIODeviceFD8_closure+2
	.quad	GHC.IO.FD.$fIODeviceFD7_closure+3
	.quad	GHC.IO.FD.$fIODeviceFD6_closure+2
	.quad	GHC.IO.FD.$fIODeviceFD3_closure+2
	.quad	GHC.IO.FD.$fIODeviceFD1_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.436590054 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.mkFD7_bytes
.type GHC.IO.FD.mkFD7_bytes, @object
GHC.IO.FD.mkFD7_bytes:
	.asciz "openFile"


==================== Asm code ====================
2018-03-16 16:05:56.439091285 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.mkFD6_closure
.type GHC.IO.FD.mkFD6_closure, @object
GHC.IO.FD.mkFD6_closure:
	.quad	GHC.IO.FD.mkFD6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.439952421 UTC

.section .text
.align 8
.globl GHC.IO.FD.mkFD6_entry
.type GHC.IO.FD.mkFD6_entry, @object
GHC.IO.FD.mkFD6_entry:
_cb04A:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb04B
_cb04C:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cb04z
_cb04y:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.FD.mkFD7_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cb04B:
	jmp *-16(%r13)
_cb04z:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.mkFD6_entry, .-GHC.IO.FD.mkFD6_entry


==================== Asm code ====================
2018-03-16 16:05:56.440620095 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.mkFD6_info
.type GHC.IO.FD.mkFD6_info, @object
GHC.IO.FD.mkFD6_info:
	.quad	GHC.IO.FD.mkFD6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:56.442488445 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.mkFD11_bytes
.type GHC.IO.FD.mkFD11_bytes, @object
GHC.IO.FD.mkFD11_bytes:
	.asciz "is a directory"


==================== Asm code ====================
2018-03-16 16:05:56.444973398 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.mkFD10_closure
.type GHC.IO.FD.mkFD10_closure, @object
GHC.IO.FD.mkFD10_closure:
	.quad	GHC.IO.FD.mkFD10_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.445795501 UTC

.section .text
.align 8
.globl GHC.IO.FD.mkFD10_entry
.type GHC.IO.FD.mkFD10_entry, @object
GHC.IO.FD.mkFD10_entry:
_cb04R:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb04S
_cb04T:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cb04Q
_cb04P:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.FD.mkFD11_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cb04S:
	jmp *-16(%r13)
_cb04Q:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.mkFD10_entry, .-GHC.IO.FD.mkFD10_entry


==================== Asm code ====================
2018-03-16 16:05:56.446452132 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.mkFD10_info
.type GHC.IO.FD.mkFD10_info, @object
GHC.IO.FD.mkFD10_info:
	.quad	GHC.IO.FD.mkFD10_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:56.448294963 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.mkFD9_closure
.type GHC.IO.FD.mkFD9_closure, @object
GHC.IO.FD.mkFD9_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.InappropriateType_closure+1
	.quad	GHC.IO.FD.mkFD6_closure
	.quad	GHC.IO.FD.mkFD10_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.450872087 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.mkFD8_closure
.type GHC.IO.FD.mkFD8_closure, @object
GHC.IO.FD.mkFD8_closure:
	.quad	GHC.IO.FD.mkFD8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.451770115 UTC

.section .text
.align 8
.globl GHC.IO.FD.mkFD8_entry
.type GHC.IO.FD.mkFD8_entry, @object
GHC.IO.FD.mkFD8_entry:
_cb058:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb059
_cb05a:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cb057
_cb056:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.FD.mkFD9_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_cb059:
	jmp *-16(%r13)
_cb057:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.mkFD8_entry, .-GHC.IO.FD.mkFD8_entry


==================== Asm code ====================
2018-03-16 16:05:56.452508313 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.mkFD8_info
.type GHC.IO.FD.mkFD8_info, @object
GHC.IO.FD.mkFD8_info:
	.quad	GHC.IO.FD.mkFD8_entry
	.quad	0
	.quad	12884901909
	.quad	SaXeV_srt+632


==================== Asm code ====================
2018-03-16 16:05:56.454599332 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.mkFD5_bytes
.type GHC.IO.FD.mkFD5_bytes, @object
GHC.IO.FD.mkFD5_bytes:
	.asciz "file is locked"


==================== Asm code ====================
2018-03-16 16:05:56.45761582 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.mkFD4_closure
.type GHC.IO.FD.mkFD4_closure, @object
GHC.IO.FD.mkFD4_closure:
	.quad	GHC.IO.FD.mkFD4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.458405396 UTC

.section .text
.align 8
.globl GHC.IO.FD.mkFD4_entry
.type GHC.IO.FD.mkFD4_entry, @object
GHC.IO.FD.mkFD4_entry:
_cb05p:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb05q
_cb05r:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cb05o
_cb05n:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.FD.mkFD5_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cb05q:
	jmp *-16(%r13)
_cb05o:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.mkFD4_entry, .-GHC.IO.FD.mkFD4_entry


==================== Asm code ====================
2018-03-16 16:05:56.45906192 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.mkFD4_info
.type GHC.IO.FD.mkFD4_info, @object
GHC.IO.FD.mkFD4_info:
	.quad	GHC.IO.FD.mkFD4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:56.460804352 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.mkFD3_closure
.type GHC.IO.FD.mkFD3_closure, @object
GHC.IO.FD.mkFD3_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.ResourceBusy_closure+1
	.quad	GHC.IO.FD.mkFD6_closure
	.quad	GHC.IO.FD.mkFD4_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.463360227 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.mkFD2_closure
.type GHC.IO.FD.mkFD2_closure, @object
GHC.IO.FD.mkFD2_closure:
	.quad	GHC.IO.FD.mkFD2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.4642189 UTC

.section .text
.align 8
.globl GHC.IO.FD.mkFD2_entry
.type GHC.IO.FD.mkFD2_entry, @object
GHC.IO.FD.mkFD2_entry:
_cb05G:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb05H
_cb05I:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cb05F
_cb05E:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.FD.mkFD3_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_cb05H:
	jmp *-16(%r13)
_cb05F:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.mkFD2_entry, .-GHC.IO.FD.mkFD2_entry


==================== Asm code ====================
2018-03-16 16:05:56.464912841 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.mkFD2_info
.type GHC.IO.FD.mkFD2_info, @object
GHC.IO.FD.mkFD2_info:
	.quad	GHC.IO.FD.mkFD2_entry
	.quad	0
	.quad	21474836501
	.quad	SaXeV_srt+632


==================== Asm code ====================
2018-03-16 16:05:56.480116675 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$wmkFD_closure
.type GHC.IO.FD.$wmkFD_closure, @object
GHC.IO.FD.$wmkFD_closure:
	.quad	GHC.IO.FD.$wmkFD_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.480987988 UTC

.section .text
.align 8
sat_saXaj_entry:
_cb06b:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cb06c
_cb06d:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cb068_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cb068
_cb069:
	movq (%rbx),%rax
	jmp *(%rax)
_cb06c:
	jmp *-16(%r13)
	.size sat_saXaj_entry, .-sat_saXaj_entry


==================== Asm code ====================
2018-03-16 16:05:56.481692214 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saXaj_info:
	.quad	sat_saXaj_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:05:56.482373868 UTC

.section .text
.align 8
_cb068:
_cb068:
	movq $block_cb06g_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cb06g
_cb06i:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb068, .-_cb068


==================== Asm code ====================
2018-03-16 16:05:56.482950937 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb068_info:
	.quad	_cb068
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.483790837 UTC

.section .text
.align 8
_cb06g:
_cb06g:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cb06o
_cb06v:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb06y
_cb06x:
	movq $GHC.IO.FD.FD_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq $1,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb06y:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_cb06o:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb06y
_cb06q:
	movq $GHC.IO.FD.FD_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq $0,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb06g, .-_cb06g


==================== Asm code ====================
2018-03-16 16:05:56.484477032 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb06g_info:
	.quad	_cb06g
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.485208349 UTC

.section .text
.align 8
sat_saXaG_entry:
_cb07B:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cb07C
_cb07D:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cb07u_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cb07u
_cb07v:
	movq (%rbx),%rax
	jmp *(%rax)
_cb07C:
	jmp *-16(%r13)
	.size sat_saXaG_entry, .-sat_saXaG_entry


==================== Asm code ====================
2018-03-16 16:05:56.485885581 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saXaG_info:
	.quad	sat_saXaG_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:05:56.486685608 UTC

.section .text
.align 8
_cb07u:
_cb07u:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cb07y
_cb07z:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb07P
_cb07O:
	movq $GHC.IO.FD.FD_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq $1,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb07P:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_cb07y:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb07P
_cb07I:
	movq $GHC.IO.FD.FD_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq $0,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb07u, .-_cb07u


==================== Asm code ====================
2018-03-16 16:05:56.48739341 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb07u_info:
	.quad	_cb07u
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.488138182 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wmkFD_entry
.type GHC.IO.FD.$wmkFD_entry, @object
GHC.IO.FD.$wmkFD_entry:
_cb07Y:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cb07Z
_cb080:
	movq $block_cb07R_info,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cb07R
_cb07S:
	movq (%rbx),%rax
	jmp *(%rax)
_cb07Z:
	movl $GHC.IO.FD.$wmkFD_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$wmkFD_entry, .-GHC.IO.FD.$wmkFD_entry


==================== Asm code ====================
2018-03-16 16:05:56.488868585 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$wmkFD_info
.type GHC.IO.FD.$wmkFD_info, @object
GHC.IO.FD.$wmkFD_info:
	.quad	GHC.IO.FD.$wmkFD_entry
	.quad	0
	.quad	246294899589134
	.quad	21474836504
	.quad	SaXeV_srt+552


==================== Asm code ====================
2018-03-16 16:05:56.489667734 UTC

.section .text
.align 8
_cb07R:
_cb07R:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cb07V
_cb07W:
	movq $block_cb095_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cb095
_cb097:
	movq (%rbx),%rax
	jmp *(%rax)
_cb07V:
	movq $block_cb08T_info,(%rbp)
	movq 8(%rbp),%r14
	jmp System.Posix.Internals.fdStat1_entry
	.size _cb07R, .-_cb07R


==================== Asm code ====================
2018-03-16 16:05:56.4903241 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb07R_info:
	.quad	_cb07R
	.quad	3
	.quad	211110527500318
	.quad	SaXeV_srt+552


==================== Asm code ====================
2018-03-16 16:05:56.490989707 UTC

.section .text
.align 8
_cb08T:
_cb08T:
	movq $block_cb08V_info,(%rbp)
	testb $7,%bl
	jne _cb08V
_cb08Y:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb08T, .-_cb08T


==================== Asm code ====================
2018-03-16 16:05:56.491527919 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb08T_info:
	.quad	_cb08T
	.quad	3
	.quad	12884901918
	.quad	SaXeV_srt+664


==================== Asm code ====================
2018-03-16 16:05:56.492170605 UTC

.section .text
.align 8
_cb08V:
_cb08V:
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 23(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp _saXaa
	.size _cb08V, .-_cb08V


==================== Asm code ====================
2018-03-16 16:05:56.492781885 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb08V_info:
	.quad	_cb08V
	.quad	3
	.quad	12884901918
	.quad	SaXeV_srt+664


==================== Asm code ====================
2018-03-16 16:05:56.493450994 UTC

.section .text
.align 8
_cb095:
_cb095:
	movq 15(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 23(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp _saXaa
	.size _cb095, .-_cb095


==================== Asm code ====================
2018-03-16 16:05:56.494031292 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb095_info:
	.quad	_cb095
	.quad	3
	.quad	12884901918
	.quad	SaXeV_srt+664


==================== Asm code ====================
2018-03-16 16:05:56.494800435 UTC

.section .text
.align 8
_saXaa:
_saXaa:
	movq $block_cb05Z_info,-8(%rbp)
	movq 16(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb05Z
_cb060:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _saXaa, .-_saXaa


==================== Asm code ====================
2018-03-16 16:05:56.49575957 UTC

.section .text
.align 8
_cb05Z:
_cb05Z:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cb08a
_ub09k:
	movq 32(%rbp),%rcx
	cmpq $3,%rax
	je _cb08c
_cb084:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cb087
_cb086:
	movq $sat_saXaj_info,-48(%r12)
	movq %rcx,-32(%r12)
	movq 48(%rbp),%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb08a:
	movl $GHC.IO.FD.mkFD8_closure,%ebx
	addq $56,%rbp
	jmp stg_raiseIO#
_cb087:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_cb08c:
	movq $block_cb06F_info,(%rbp)
	movq %rcx,%rbx
	testb $7,%bl
	jne _cb06F
_cb06G:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb05Z, .-_cb05Z


==================== Asm code ====================
2018-03-16 16:05:56.496541517 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb05Z_info:
	.quad	_cb05Z
	.quad	262
	.quad	12884901918
	.quad	SaXeV_srt+664


==================== Asm code ====================
2018-03-16 16:05:56.497271459 UTC

.section .text
.align 8
_cb06F:
_cb06F:
	movq 8(%rbp),%rax
	movq $block_cb06K_info,8(%rbp)
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,32(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _cb06K
_cb06L:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb06F, .-_cb06F


==================== Asm code ====================
2018-03-16 16:05:56.497913096 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb06F_info:
	.quad	_cb06F
	.quad	774
	.quad	4294967326
	.quad	SaXeV_srt+664


==================== Asm code ====================
2018-03-16 16:05:56.498689584 UTC

.section .text
.align 8
_cb06K:
_cb06K:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _saXar
_saXar:
	movq $block_cb06X_info,8(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _cb06X
_cb06Y:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb06K, .-_cb06K


==================== Asm code ====================
2018-03-16 16:05:56.499337001 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb06K_info:
	.quad	_cb06K
	.quad	389
	.quad	4294967326
	.quad	SaXeV_srt+664


==================== Asm code ====================
2018-03-16 16:05:56.500059852 UTC

.section .text
.align 8
_cb06X:
_cb06X:
	movq 24(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _saXaw
_saXaw:
	movq $block_cb08h_info,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,24(%rbp)
	testb $7,%bl
	jne _cb08h
_cb08w:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb06X, .-_cb06X


==================== Asm code ====================
2018-03-16 16:05:56.50070582 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb06X_info:
	.quad	_cb06X
	.quad	196
	.quad	4294967326
	.quad	SaXeV_srt+664


==================== Asm code ====================
2018-03-16 16:05:56.50157924 UTC

.section .text
.align 8
_cb08h:
_cb08h:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 24(%rbp),%rdx
	andl $7,%ebx
	cmpq $1,%rbx
	je _cb08G
_cb08C:
	movl $1,%ebx
_saXay:
	subq $8,%rsp
	movq %rcx,%rsi
	movq %rbx,%rcx
	movq %rax,%rdi
	xorl %eax,%eax
	call lockFile
	addq $8,%rsp
	movslq %eax,%rax
	cmpq $-1,%rax
	jne _ub09n
_cb08s:
	movl $GHC.IO.FD.mkFD2_closure,%ebx
	addq $40,%rbp
	jmp stg_raiseIO#
_ub09n:
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp _cb07o
_cb08G:
	xorl %ebx,%ebx
	jmp _saXay
	.size _cb08h, .-_cb08h


==================== Asm code ====================
2018-03-16 16:05:56.502322432 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb08h_info:
	.quad	_cb08h
	.quad	452
	.quad	4294967326
	.quad	SaXeV_srt+664


==================== Asm code ====================
2018-03-16 16:05:56.503065789 UTC

.section .text
.align 8
_cb07o:
_cb07o:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cb08p
_cb08o:
	movq $sat_saXaG_info,-48(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq (%rbp),%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	movq $GHC.IO.Device.RegularFile_closure+3,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb08p:
	movq $56,904(%r13)
	movq $block_cb07n_info,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _cb07o, .-_cb07o


==================== Asm code ====================
2018-03-16 16:05:56.504349126 UTC

.section .text
.align 8
_cb07n:
_cb07n:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _cb07o
	.size _cb07n, .-_cb07n


==================== Asm code ====================
2018-03-16 16:05:56.504923842 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb07n_info:
	.quad	_cb07n
	.quad	195
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.507474433 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.mkFD1_closure
.type GHC.IO.FD.mkFD1_closure, @object
GHC.IO.FD.mkFD1_closure:
	.quad	GHC.IO.FD.mkFD1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.508063699 UTC

.section .text
.align 8
.globl GHC.IO.FD.mkFD1_entry
.type GHC.IO.FD.mkFD1_entry, @object
GHC.IO.FD.mkFD1_entry:
_cb0bd:
	movq %r9,%r8
	jmp GHC.IO.FD.$wmkFD_entry
	.size GHC.IO.FD.mkFD1_entry, .-GHC.IO.FD.mkFD1_entry


==================== Asm code ====================
2018-03-16 16:05:56.508623383 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.mkFD1_info
.type GHC.IO.FD.mkFD1_info, @object
GHC.IO.FD.mkFD1_info:
	.quad	GHC.IO.FD.mkFD1_entry
	.quad	0
	.quad	4294967310
	.quad	25769803801
	.quad	SaXeV_srt+656


==================== Asm code ====================
2018-03-16 16:05:56.510893183 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.mkFD_closure
.type GHC.IO.FD.mkFD_closure, @object
GHC.IO.FD.mkFD_closure:
	.quad	GHC.IO.FD.mkFD_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.511545942 UTC

.section .text
.align 8
.globl GHC.IO.FD.mkFD_entry
.type GHC.IO.FD.mkFD_entry, @object
GHC.IO.FD.mkFD_entry:
_cb0bo:
	jmp GHC.IO.FD.mkFD1_entry
	.size GHC.IO.FD.mkFD_entry, .-GHC.IO.FD.mkFD_entry


==================== Asm code ====================
2018-03-16 16:05:56.51210627 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.mkFD_info
.type GHC.IO.FD.mkFD_info, @object
GHC.IO.FD.mkFD_info:
	.quad	GHC.IO.FD.mkFD_entry
	.quad	0
	.quad	4294967310
	.quad	25769803801
	.quad	SaXeV_srt+680


==================== Asm code ====================
2018-03-16 16:05:56.536225273 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.openFile1_closure
.type GHC.IO.FD.openFile1_closure, @object
GHC.IO.FD.openFile1_closure:
	.quad	GHC.IO.FD.openFile1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.537439617 UTC

.section .text
.align 8
sat_saXbr_entry:
_cb0c3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0c6
_cb0c7:
	movq $block_cb0bZ_info,-8(%rbp)
	addq $-8,%rbp
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq 872(%r13),%rcx
	movq 24(%rcx),%rdx
	movq %rbp,16(%rdx)
	movq 888(%r13),%rdx
	leaq 8(%r12),%rsi
	movq %rsi,8(%rdx)
	leaq 8(%r12),%rsi
	subq (%rdx),%rsi
	movq 104(%rcx),%rdx
	subq %rsi,%rdx
	movq %rdx,104(%rcx)
	subq $8,%rsp
	movq %r13,%rdi
	xorl %esi,%esi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call suspendThread
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rsi
	movq %r14,%rdi
	movl $438,%edx
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_open
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call resumeThread
	addq $8,%rsp
	movq %rax,%r13
	movq 872(%r13),%rax
	movq 24(%rax),%rcx
	movq 16(%rcx),%rbp
	leaq 192(%rcx),%r15
	movq $0,904(%r13)
	movq 888(%r13),%rcx
	movq 8(%rcx),%rdx
	leaq -8(%rdx),%r12
	movq (%rcx),%rsi
	movslq 48(%rcx),%rcx
	shlq $12,%rcx
	decq %rcx
	movq %rsi,%rdi
	addq %rcx,%rdi
	movq %rdi,856(%r13)
	subq %rsi,%rdx
	movq 104(%rax),%rcx
	addq %rdx,%rcx
	movq %rcx,104(%rax)
	movq (%rbp),%rax
	jmp *(%rax)
_cb0c6:
	jmp *-8(%r13)
	.size sat_saXbr_entry, .-sat_saXbr_entry


==================== Asm code ====================
2018-03-16 16:05:56.538303361 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saXbr_info:
	.quad	sat_saXbr_entry
	.quad	8589934592
	.quad	13
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:56.538999743 UTC

.section .text
.align 8
_cb0bZ:
_cb0bZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb0ca
_cb0c9:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb0ca:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cb0bZ, .-_cb0bZ


==================== Asm code ====================
2018-03-16 16:05:56.539615063 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0bZ_info:
	.quad	_cb0bZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.540436381 UTC

.section .text
.align 8
sat_saXbI_entry:
_cb0cF:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0cG
_cb0cH:
	movq $block_cb0cC_info,-24(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 7(%rbx),%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cb0cC
_cb0cD:
	movq (%rbx),%rax
	jmp *(%rax)
_cb0cG:
	jmp *-8(%r13)
	.size sat_saXbI_entry, .-sat_saXbI_entry


==================== Asm code ====================
2018-03-16 16:05:56.541116444 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saXbI_info:
	.quad	sat_saXbI_entry
	.quad	3
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:56.541869523 UTC

.section .text
.align 8
_cb0cC:
_cb0cC:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	subq $8,%rsp
	movq 7(%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	call close
	addq $8,%rsp
	movq %r14,%rsi
	movq %rbx,%r14
	addq $24,%rbp
	jmp GHC.IO.throwIO1_entry
	.size _cb0cC, .-_cb0cC


==================== Asm code ====================
2018-03-16 16:05:56.542468369 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0cC_info:
	.quad	_cb0cC
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.543260771 UTC

.section .text
.align 8
sat_saXbJ_entry:
_cb0cO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0cP
_cb0cQ:
	movq $block_cb0cs_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cb0cs
_cb0ct:
	movq (%rbx),%rax
	jmp *(%rax)
_cb0cP:
	jmp *-8(%r13)
	.size sat_saXbJ_entry, .-sat_saXbJ_entry


==================== Asm code ====================
2018-03-16 16:05:56.543915619 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saXbJ_info:
	.quad	sat_saXbJ_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:05:56.544703581 UTC

.section .text
.align 8
_cb0cs:
_cb0cs:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cb0cT
_cb0cS:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_saXbI_info,-24(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -23(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb0cT:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cb0cs, .-_cb0cs


==================== Asm code ====================
2018-03-16 16:05:56.545399906 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0cs_info:
	.quad	_cb0cs
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.546031902 UTC

.section .text
.align 8
sat_saXbw_entry:
_cb0d0:
	movq 15(%rbx),%r8
	movl $GHC.Base.Nothing_closure+1,%edi
	movq 7(%rbx),%rsi
	movq 23(%rbx),%r14
	jmp GHC.IO.FD.$wmkFD_entry
	.size sat_saXbw_entry, .-sat_saXbw_entry


==================== Asm code ====================
2018-03-16 16:05:56.546631561 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saXbw_info:
	.quad	sat_saXbw_entry
	.quad	3
	.quad	4294967304
	.quad	4294967299
	.quad	SaXeV_srt+656


==================== Asm code ====================
2018-03-16 16:05:56.547234356 UTC

.section .data.rel.ro
.align 8
.align 1
ub0hD_srtd:
	.quad	SaXeV_srt+264
	.quad	57
	.quad	135673137797793793


==================== Asm code ====================
2018-03-16 16:05:56.548042001 UTC

.section .text
.align 8
sat_saXcZ_entry:
_cb0d3:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0d4
_cb0d5:
	movq $block_cb0bG_info,-24(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cb0bG
_cb0bH:
	movq (%rbx),%rax
	jmp *(%rax)
_cb0d4:
	jmp *-8(%r13)
	.size sat_saXcZ_entry, .-sat_saXcZ_entry


==================== Asm code ====================
2018-03-16 16:05:56.54883281 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saXcZ_info:
	.quad	sat_saXcZ_entry
	.quad	2
	.quad	-4294967285
	.quad	8589934597
	.quad	ub0hD_srtd


==================== Asm code ====================
2018-03-16 16:05:56.549494851 UTC

.section .data.rel.ro
.align 8
.align 1
ub0hE_srtd:
	.quad	SaXeV_srt+264
	.quad	57
	.quad	135673137797793793


==================== Asm code ====================
2018-03-16 16:05:56.550233855 UTC

.section .text
.align 8
_cb0bG:
_cb0bG:
	movq $block_cb0d6_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cb0d6
_cb0ec:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0bG, .-_cb0bG


==================== Asm code ====================
2018-03-16 16:05:56.550904373 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0bG_info:
	.quad	_cb0bG
	.quad	2
	.quad	-4294967266
	.quad	ub0hE_srtd


==================== Asm code ====================
2018-03-16 16:05:56.552086675 UTC

.section .data.rel.ro
.align 8
.align 1
ub0hF_srtd:
	.quad	SaXeV_srt+264
	.quad	57
	.quad	135673137797793793


==================== Asm code ====================
2018-03-16 16:05:56.552836382 UTC

.section .text
.align 8
_cb0d6:
_cb0d6:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cb0ej
_cb0f5:
	movq $block_cb0f3_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cb0f3
_cb0f6:
	movq (%rbx),%rax
	jmp *(%rax)
_cb0ej:
	movq $block_cb0eg_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cb0eg
_cb0ek:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0d6, .-_cb0d6


==================== Asm code ====================
2018-03-16 16:05:56.553563154 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0d6_info:
	.quad	_cb0d6
	.quad	67
	.quad	-4294967266
	.quad	ub0hF_srtd


==================== Asm code ====================
2018-03-16 16:05:56.554095433 UTC

.section .data.rel.ro
.align 8
.align 1
ub0hG_srtd:
	.quad	SaXeV_srt+264
	.quad	57
	.quad	135673137797793793


==================== Asm code ====================
2018-03-16 16:05:56.5549731 UTC

.section .text
.align 8
_cb0eg:
_cb0eg:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ub0gN
_ub0gO:
	cmpq $4,%rbx
	jb _cb0eL
_cb0eV:
	movq $block_cb0eT_info,(%rbp)
	movl $rw_flags_raWV7_closure,%ebx
	testb $7,%bl
	jne _cb0eT
_cb0eW:
	movq (%rbx),%rax
	jmp *(%rax)
_cb0eL:
	movq $block_cb0eJ_info,(%rbp)
	movl $append_flags_raWV6_closure,%ebx
	testb $7,%bl
	jne _cb0eJ
_cb0eM:
	movq (%rbx),%rax
	jmp *(%rax)
_ub0gN:
	cmpq $2,%rbx
	jb _cb0er
_cb0eB:
	movq $block_cb0ez_info,(%rbp)
	movl $write_flags_raWV5_closure,%ebx
	testb $7,%bl
	jne _cb0ez
_cb0eC:
	movq (%rbx),%rax
	jmp *(%rax)
_cb0er:
	movq $block_cb0eo_info,(%rbp)
	movl $read_flags_raWV8_closure,%ebx
	testb $7,%bl
	jne _cb0eo
_cb0es:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0eg, .-_cb0eg


==================== Asm code ====================
2018-03-16 16:05:56.555690203 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0eg_info:
	.quad	_cb0eg
	.quad	67
	.quad	-4294967266
	.quad	ub0hG_srtd


==================== Asm code ====================
2018-03-16 16:05:56.556268328 UTC

.section .data.rel.ro
.align 8
.align 1
ub0hH_srtd:
	.quad	SaXeV_srt+352
	.quad	43
	.quad	4673998159873


==================== Asm code ====================
2018-03-16 16:05:56.556857358 UTC

.section .text
.align 8
_cb0eo:
_cb0eo:
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	jmp _cb0bO
	.size _cb0eo, .-_cb0eo


==================== Asm code ====================
2018-03-16 16:05:56.557450406 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0eo_info:
	.quad	_cb0eo
	.quad	67
	.quad	-4294967266
	.quad	ub0hH_srtd


==================== Asm code ====================
2018-03-16 16:05:56.558015032 UTC

.section .data.rel.ro
.align 8
.align 1
ub0hI_srtd:
	.quad	SaXeV_srt+352
	.quad	43
	.quad	4673998159873


==================== Asm code ====================
2018-03-16 16:05:56.558601933 UTC

.section .text
.align 8
_cb0ez:
_cb0ez:
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	jmp _cb0bO
	.size _cb0ez, .-_cb0ez


==================== Asm code ====================
2018-03-16 16:05:56.559197707 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0ez_info:
	.quad	_cb0ez
	.quad	67
	.quad	-4294967266
	.quad	ub0hI_srtd


==================== Asm code ====================
2018-03-16 16:05:56.559818454 UTC

.section .data.rel.ro
.align 8
.align 1
ub0hJ_srtd:
	.quad	SaXeV_srt+352
	.quad	43
	.quad	4673998159873


==================== Asm code ====================
2018-03-16 16:05:56.560407485 UTC

.section .text
.align 8
_cb0eJ:
_cb0eJ:
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	jmp _cb0bO
	.size _cb0eJ, .-_cb0eJ


==================== Asm code ====================
2018-03-16 16:05:56.560966647 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0eJ_info:
	.quad	_cb0eJ
	.quad	67
	.quad	-4294967266
	.quad	ub0hJ_srtd


==================== Asm code ====================
2018-03-16 16:05:56.561884149 UTC

.section .data.rel.ro
.align 8
.align 1
ub0hK_srtd:
	.quad	SaXeV_srt+352
	.quad	43
	.quad	4673998159873


==================== Asm code ====================
2018-03-16 16:05:56.562555188 UTC

.section .text
.align 8
_cb0eT:
_cb0eT:
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	jmp _cb0bO
	.size _cb0eT, .-_cb0eT


==================== Asm code ====================
2018-03-16 16:05:56.563108219 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0eT_info:
	.quad	_cb0eT
	.quad	67
	.quad	-4294967266
	.quad	ub0hK_srtd


==================== Asm code ====================
2018-03-16 16:05:56.563677689 UTC

.section .data.rel.ro
.align 8
.align 1
ub0hL_srtd:
	.quad	SaXeV_srt+264
	.quad	57
	.quad	135673137797793793


==================== Asm code ====================
2018-03-16 16:05:56.564535857 UTC

.section .text
.align 8
_cb0f3:
_cb0f3:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ub0gP
_ub0gQ:
	cmpq $4,%rbx
	jb _cb0fx
_cb0fH:
	movq $block_cb0fF_info,(%rbp)
	movl $rw_flags_raWV7_closure,%ebx
	testb $7,%bl
	jne _cb0fF
_cb0fI:
	movq (%rbx),%rax
	jmp *(%rax)
_cb0fx:
	movq $block_cb0fv_info,(%rbp)
	movl $append_flags_raWV6_closure,%ebx
	testb $7,%bl
	jne _cb0fv
_cb0fy:
	movq (%rbx),%rax
	jmp *(%rax)
_ub0gP:
	cmpq $2,%rbx
	jb _cb0fd
_cb0fn:
	movq $block_cb0fl_info,(%rbp)
	movl $write_flags_raWV5_closure,%ebx
	testb $7,%bl
	jne _cb0fl
_cb0fo:
	movq (%rbx),%rax
	jmp *(%rax)
_cb0fd:
	movq $block_cb0fa_info,(%rbp)
	movl $read_flags_raWV8_closure,%ebx
	testb $7,%bl
	jne _cb0fa
_cb0fe:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0f3, .-_cb0f3


==================== Asm code ====================
2018-03-16 16:05:56.565377224 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0f3_info:
	.quad	_cb0f3
	.quad	67
	.quad	-4294967266
	.quad	ub0hL_srtd


==================== Asm code ====================
2018-03-16 16:05:56.565958105 UTC

.section .data.rel.ro
.align 8
.align 1
ub0hM_srtd:
	.quad	SaXeV_srt+352
	.quad	43
	.quad	4673998159873


==================== Asm code ====================
2018-03-16 16:05:56.56662786 UTC

.section .text
.align 8
_cb0fa:
_cb0fa:
	movq 7(%rbx),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_o_nonblock
	addq $8,%rsp
	movslq %eax,%rax
	orq %rax,%rbx
	movq %rbx,(%rbp)
	jmp _cb0bO
	.size _cb0fa, .-_cb0fa


==================== Asm code ====================
2018-03-16 16:05:56.567249409 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0fa_info:
	.quad	_cb0fa
	.quad	67
	.quad	-4294967266
	.quad	ub0hM_srtd


==================== Asm code ====================
2018-03-16 16:05:56.567816264 UTC

.section .data.rel.ro
.align 8
.align 1
ub0hN_srtd:
	.quad	SaXeV_srt+352
	.quad	43
	.quad	4673998159873


==================== Asm code ====================
2018-03-16 16:05:56.56847858 UTC

.section .text
.align 8
_cb0fl:
_cb0fl:
	movq 7(%rbx),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_o_nonblock
	addq $8,%rsp
	movslq %eax,%rax
	orq %rax,%rbx
	movq %rbx,(%rbp)
	jmp _cb0bO
	.size _cb0fl, .-_cb0fl


==================== Asm code ====================
2018-03-16 16:05:56.569102067 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0fl_info:
	.quad	_cb0fl
	.quad	67
	.quad	-4294967266
	.quad	ub0hN_srtd


==================== Asm code ====================
2018-03-16 16:05:56.569736663 UTC

.section .data.rel.ro
.align 8
.align 1
ub0hO_srtd:
	.quad	SaXeV_srt+352
	.quad	43
	.quad	4673998159873


==================== Asm code ====================
2018-03-16 16:05:56.570426905 UTC

.section .text
.align 8
_cb0fv:
_cb0fv:
	movq 7(%rbx),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_o_nonblock
	addq $8,%rsp
	movslq %eax,%rax
	orq %rax,%rbx
	movq %rbx,(%rbp)
	jmp _cb0bO
	.size _cb0fv, .-_cb0fv


==================== Asm code ====================
2018-03-16 16:05:56.571056799 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0fv_info:
	.quad	_cb0fv
	.quad	67
	.quad	-4294967266
	.quad	ub0hO_srtd


==================== Asm code ====================
2018-03-16 16:05:56.571630902 UTC

.section .data.rel.ro
.align 8
.align 1
ub0hP_srtd:
	.quad	SaXeV_srt+352
	.quad	43
	.quad	4673998159873


==================== Asm code ====================
2018-03-16 16:05:56.572326082 UTC

.section .text
.align 8
_cb0fF:
_cb0fF:
	movq 7(%rbx),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_o_nonblock
	addq $8,%rsp
	movslq %eax,%rax
	orq %rax,%rbx
	movq %rbx,(%rbp)
	jmp _cb0bO
	.size _cb0fF, .-_cb0fF


==================== Asm code ====================
2018-03-16 16:05:56.572924575 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0fF_info:
	.quad	_cb0fF
	.quad	67
	.quad	-4294967266
	.quad	ub0hP_srtd


==================== Asm code ====================
2018-03-16 16:05:56.574082275 UTC

.section .text
.align 8
_cb0bO:
_cb0bO:
	addq $24,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cb0dd
_cb0dc:
	movq $sat_saXbr_info,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	movq $block_cb0cl_info,8(%rbp)
	leaq -15(%r12),%rdi
	movl $GHC.IO.FD.mkFD6_closure,%esi
	movl $GHC.IO.FD.$fIODeviceFD25_closure+1,%r14d
	addq $8,%rbp
	jmp Foreign.C.Error.throwErrnoIfMinus1Retry2_entry
_cb0dd:
	movq $24,904(%r13)
	movq $block_cb0bN_info,(%rbp)
	movq %rax,%rbx
	jmp stg_gc_unbx_r1
	.size _cb0bO, .-_cb0bO


==================== Asm code ====================
2018-03-16 16:05:56.575307086 UTC

.section .data.rel.ro
.align 8
.align 1
ub0hQ_srtd:
	.quad	SaXeV_srt+352
	.quad	43
	.quad	4673998159873


==================== Asm code ====================
2018-03-16 16:05:56.575900435 UTC

.section .text
.align 8
_cb0bN:
_cb0bN:
	movq %rbx,(%rbp)
	jmp _cb0bO
	.size _cb0bN, .-_cb0bN


==================== Asm code ====================
2018-03-16 16:05:56.576477421 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0bN_info:
	.quad	_cb0bN
	.quad	67
	.quad	-4294967266
	.quad	ub0hQ_srtd


==================== Asm code ====================
2018-03-16 16:05:56.577056614 UTC

.section .data.rel.ro
.align 8
.align 1
ub0hR_srtd:
	.quad	SaXeV_srt+352
	.quad	39
	.quad	274877906945


==================== Asm code ====================
2018-03-16 16:05:56.57783366 UTC

.section .text
.align 8
_cb0cl:
_cb0cl:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cb0dg
_cb0df:
	movq $sat_saXbJ_info,-40(%r12)
	movq %rbx,-32(%r12)
	movq $sat_saXbw_info,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq $block_cb0d8_info,(%rbp)
	leaq -39(%r12),%r14
	leaq -23(%r12),%rbx
	jmp stg_catch#
_cb0dg:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cb0cl, .-_cb0cl


==================== Asm code ====================
2018-03-16 16:05:56.578489719 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0cl_info:
	.quad	_cb0cl
	.quad	2
	.quad	-4294967266
	.quad	ub0hR_srtd


==================== Asm code ====================
2018-03-16 16:05:56.579155509 UTC

.section .text
.align 8
_cb0d8:
_cb0d8:
	movq $block_cb0da_info,(%rbp)
	movq %rbx,%rax
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cb0da
_cb0di:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0d8, .-_cb0d8


==================== Asm code ====================
2018-03-16 16:05:56.579756509 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0d8_info:
	.quad	_cb0d8
	.quad	130
	.quad	4294967326
	.quad	SaXeV_srt+720


==================== Asm code ====================
2018-03-16 16:05:56.580452717 UTC

.section .text
.align 8
_cb0da:
_cb0da:
	movq $block_cb0dm_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cb0dm
_cb0do:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0da, .-_cb0da


==================== Asm code ====================
2018-03-16 16:05:56.581080391 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0da_info:
	.quad	_cb0da
	.quad	2
	.quad	4294967326
	.quad	SaXeV_srt+720


==================== Asm code ====================
2018-03-16 16:05:56.581873945 UTC

.section .text
.align 8
_cb0dm:
_cb0dm:
	andl $7,%ebx
	cmpq $2,%rbx
	je _cb0dz
_ub0h0:
	addq $24,%rbp
	jmp _cb0dG
_cb0dz:
	movq 8(%rbp),%rax
	movq $block_cb0dx_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cb0dx
_cb0dA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0dm, .-_cb0dm


==================== Asm code ====================
2018-03-16 16:05:56.582549079 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0dm_info:
	.quad	_cb0dm
	.quad	3
	.quad	4294967326
	.quad	SaXeV_srt+720


==================== Asm code ====================
2018-03-16 16:05:56.583327249 UTC

.section .text
.align 8
_cb0dx:
_cb0dx:
	andl $7,%ebx
	cmpq $3,%rbx
	je _cb0dL
_ub0h1:
	addq $16,%rbp
	jmp _cb0dG
_cb0dL:
	movq $block_cb0dJ_info,16(%rbp)
	movq 8(%rbp),%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cb0dJ
_cb0dM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0dx, .-_cb0dx


==================== Asm code ====================
2018-03-16 16:05:56.584006636 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0dx_info:
	.quad	_cb0dx
	.quad	2
	.quad	4294967326
	.quad	SaXeV_srt+720


==================== Asm code ====================
2018-03-16 16:05:56.584823718 UTC

.section .text
.align 8
_cb0dJ:
_cb0dJ:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %esi,%esi
	xorl %eax,%eax
	call __hscore_ftruncate
	addq $8,%rsp
	movslq %eax,%rax
	testq %rax,%rax
	je _ub0h2
_cb0dZ:
	subq $8,%rsp
	xorl %eax,%eax
	call __hscore_get_errno
	addq $8,%rsp
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.IO.FD.$fIODeviceFD11_entry
_ub0h2:
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp _cb0e5
	.size _cb0dJ, .-_cb0dJ


==================== Asm code ====================
2018-03-16 16:05:56.585862458 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0dJ_info:
	.quad	_cb0dJ
	.quad	0
	.quad	4294967326
	.quad	SaXeV_srt+720


==================== Asm code ====================
2018-03-16 16:05:56.586624285 UTC

.section .text
.align 8
_cb0e5:
_cb0e5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb0eb
_cb0ea:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq $GHC.IO.Device.RegularFile_closure+3,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb0eb:
	movq $24,904(%r13)
	movq (%rbp),%rax
	movq $block_cb0e4_info,(%rbp)
	movq %rax,%rbx
	jmp stg_gc_unbx_r1
	.size _cb0e5, .-_cb0e5


==================== Asm code ====================
2018-03-16 16:05:56.587371851 UTC

.section .text
.align 8
_cb0e4:
_cb0e4:
	movq %rbx,(%rbp)
	jmp _cb0e5
	.size _cb0e4, .-_cb0e4


==================== Asm code ====================
2018-03-16 16:05:56.587985281 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0e4_info:
	.quad	_cb0e4
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.588686243 UTC

.section .text
.align 8
_cb0dG:
_cb0dG:
	movq (%rbp),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb0dG, .-_cb0dG


==================== Asm code ====================
2018-03-16 16:05:56.589343243 UTC

.section .data.rel.ro
.align 8
.align 1
ub0hS_srtd:
	.quad	SaXeV_srt+264
	.quad	60
	.quad	1144479454328782849


==================== Asm code ====================
2018-03-16 16:05:56.590128796 UTC

.section .text
.align 8
.globl GHC.IO.FD.openFile1_entry
.type GHC.IO.FD.openFile1_entry, @object
GHC.IO.FD.openFile1_entry:
_cb0hx:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0hy
_cb0hz:
	movq $block_cb0bz_info,-32(%rbp)
	movl $GHC.IO.Encoding.getFileSystemEncoding_closure,%ebx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp stg_ap_v_fast
_cb0hy:
	movl $GHC.IO.FD.openFile1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.openFile1_entry, .-GHC.IO.FD.openFile1_entry


==================== Asm code ====================
2018-03-16 16:05:56.590836061 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.openFile1_info
.type GHC.IO.FD.openFile1_info, @object
GHC.IO.FD.openFile1_info:
	.quad	GHC.IO.FD.openFile1_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869207
	.quad	ub0hS_srtd


==================== Asm code ====================
2018-03-16 16:05:56.591453281 UTC

.section .data.rel.ro
.align 8
.align 1
ub0hT_srtd:
	.quad	SaXeV_srt+264
	.quad	58
	.quad	279788325873647617


==================== Asm code ====================
2018-03-16 16:05:56.592236198 UTC

.section .text
.align 8
_cb0bz:
_cb0bz:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb0hC
_cb0hB:
	movq $sat_saXcZ_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rdi
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $32,%rbp
	jmp GHC.Foreign.charIsRepresentable3_entry
_cb0hC:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cb0bz, .-_cb0bz


==================== Asm code ====================
2018-03-16 16:05:56.592933905 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0bz_info:
	.quad	_cb0bz
	.quad	3
	.quad	-4294967266
	.quad	ub0hT_srtd


==================== Asm code ====================
2018-03-16 16:05:56.595421664 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.openFile_closure
.type GHC.IO.FD.openFile_closure, @object
GHC.IO.FD.openFile_closure:
	.quad	GHC.IO.FD.openFile_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.596081762 UTC

.section .text
.align 8
.globl GHC.IO.FD.openFile_entry
.type GHC.IO.FD.openFile_entry, @object
GHC.IO.FD.openFile_entry:
_cb0l1:
	jmp GHC.IO.FD.openFile1_entry
	.size GHC.IO.FD.openFile_entry, .-GHC.IO.FD.openFile_entry


==================== Asm code ====================
2018-03-16 16:05:56.596714343 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.openFile_info
.type GHC.IO.FD.openFile_info, @object
GHC.IO.FD.openFile_info:
	.quad	GHC.IO.FD.openFile_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	SaXeV_srt+736


==================== Asm code ====================
2018-03-16 16:05:56.603586875 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$cfillReadBuffer_closure
.type GHC.IO.FD.$w$cfillReadBuffer_closure, @object
GHC.IO.FD.$w$cfillReadBuffer_closure:
	.quad	GHC.IO.FD.$w$cfillReadBuffer_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.604269232 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cfillReadBuffer_slow
.type GHC.IO.FD.$w$cfillReadBuffer_slow, @object
GHC.IO.FD.$w$cfillReadBuffer_slow:
_cb0l9:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.FD.$w$cfillReadBuffer_entry
	.size GHC.IO.FD.$w$cfillReadBuffer_slow, .-GHC.IO.FD.$w$cfillReadBuffer_slow


==================== Asm code ====================
2018-03-16 16:05:56.605143374 UTC

.section .text
.align 8
sat_saXdj_entry:
_cb0lw:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0lD
_cb0lE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cb0lt_info,-72(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 64(%rbx),%r8
	movq 32(%rbx),%rbx
	movq %rdx,-64(%rbp)
	movq %rax,-56(%rbp)
	movq %rcx,-48(%rbp)
	movq %rsi,-40(%rbp)
	movq %rdi,-32(%rbp)
	movq %r8,-24(%rbp)
	addq $-72,%rbp
	testb $7,%bl
	jne _cb0lt
_cb0lu:
	movq (%rbx),%rax
	jmp *(%rax)
_cb0lD:
	jmp *-16(%r13)
	.size sat_saXdj_entry, .-sat_saXdj_entry


==================== Asm code ====================
2018-03-16 16:05:56.605893202 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saXdj_info:
	.quad	sat_saXdj_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:05:56.606649854 UTC

.section .text
.align 8
_cb0lt:
_cb0lt:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cb0lH
_cb0lG:
	leaq 7(%rbx),%rax
	movq 48(%rbp),%rbx
	addq (%rax),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb0lH:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cb0lt, .-_cb0lt


==================== Asm code ====================
2018-03-16 16:05:56.607360231 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0lt_info:
	.quad	_cb0lt
	.quad	3654
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.608230894 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cfillReadBuffer_entry
.type GHC.IO.FD.$w$cfillReadBuffer_entry, @object
GHC.IO.FD.$w$cfillReadBuffer_entry:
_cb0lJ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0lL
_cb0lM:
	movq $block_cb0lm_info,-32(%rbp)
	movq %r9,%rax
	xorl %r9d,%r9d
	movq 16(%rbp),%rbx
	movq %r8,%rcx
	movq %rdi,%r8
	addq %rbx,%r8
	movq %rdi,%rdx
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.IO.FD.$fBufferedIOFD12_closure,%r14d
	movq (%rbp),%r10
	subq %rbx,%r10
	movq %r10,-40(%rbp)
	movq %rdx,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.IO.FD.$wreadRawBufferPtr_entry
_cb0lL:
	movl $GHC.IO.FD.$w$cfillReadBuffer_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.FD.$w$cfillReadBuffer_entry, .-GHC.IO.FD.$w$cfillReadBuffer_entry


==================== Asm code ====================
2018-03-16 16:05:56.609013016 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$cfillReadBuffer_info
.type GHC.IO.FD.$w$cfillReadBuffer_info, @object
GHC.IO.FD.$w$cfillReadBuffer_info:
	.quad	GHC.IO.FD.$w$cfillReadBuffer_entry
	.quad	0
	.quad	30064771086
	.quad	38654705664
	.quad	SaXeV_srt+744
	.quad	14792
	.quad	GHC.IO.FD.$w$cfillReadBuffer_slow


==================== Asm code ====================
2018-03-16 16:05:56.609849729 UTC

.section .text
.align 8
_cb0lm:
_cb0lm:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cb0lP
_cb0lO:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq 48(%rbp),%r8
	movq $sat_saXdj_info,-88(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb0lP:
	movq $96,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cb0lm, .-_cb0lm


==================== Asm code ====================
2018-03-16 16:05:56.610590058 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0lm_info:
	.quad	_cb0lm
	.quad	3654
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.614801833 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD11_closure
.type GHC.IO.FD.$fBufferedIOFD11_closure, @object
GHC.IO.FD.$fBufferedIOFD11_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD11_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.615589009 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD11_entry
.type GHC.IO.FD.$fBufferedIOFD11_entry, @object
GHC.IO.FD.$fBufferedIOFD11_entry:
_cb0ms:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0mw
_cb0mx:
	movq $block_cb0mp_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cb0mp
_cb0mq:
	movq (%rbx),%rax
	jmp *(%rax)
_cb0mw:
	movl $GHC.IO.FD.$fBufferedIOFD11_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fBufferedIOFD11_entry, .-GHC.IO.FD.$fBufferedIOFD11_entry


==================== Asm code ====================
2018-03-16 16:05:56.616309635 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD11_info
.type GHC.IO.FD.$fBufferedIOFD11_info, @object
GHC.IO.FD.$fBufferedIOFD11_info:
	.quad	GHC.IO.FD.$fBufferedIOFD11_entry
	.quad	0
	.quad	38654705678
	.quad	12884901903
	.quad	SaXeV_srt+744


==================== Asm code ====================
2018-03-16 16:05:56.617090328 UTC

.section .text
.align 8
_cb0mp:
_cb0mp:
	movq $block_cb0mv_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cb0mv
_cb0mz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0mp, .-_cb0mp


==================== Asm code ====================
2018-03-16 16:05:56.617778745 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0mp_info:
	.quad	_cb0mp
	.quad	1
	.quad	4294967326
	.quad	SaXeV_srt+744


==================== Asm code ====================
2018-03-16 16:05:56.618520493 UTC

.section .text
.align 8
_cb0mv:
_cb0mv:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,(%rbp)
	movq 39(%rbx),%rax
	movq %rax,8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,16(%rbp)
	jmp GHC.IO.FD.$w$cfillReadBuffer_entry
	.size _cb0mv, .-_cb0mv


==================== Asm code ====================
2018-03-16 16:05:56.619234248 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0mv_info:
	.quad	_cb0mv
	.quad	194
	.quad	4294967326
	.quad	SaXeV_srt+744


==================== Asm code ====================
2018-03-16 16:05:56.623862027 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD6_closure
.type GHC.IO.FD.$fBufferedIOFD6_closure, @object
GHC.IO.FD.$fBufferedIOFD6_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD6_info


==================== Asm code ====================
2018-03-16 16:05:56.624640325 UTC

.section .text
.align 8
sat_saXdI_entry:
_cb0n7:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0nb
_cb0nc:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cb0n4_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cb0n4
_cb0n5:
	movq (%rbx),%rax
	jmp *(%rax)
_cb0nb:
	jmp *-16(%r13)
	.size sat_saXdI_entry, .-sat_saXdI_entry


==================== Asm code ====================
2018-03-16 16:05:56.625318548 UTC

.section .data.rel.ro
.align 8
.align 1
sat_saXdI_info:
	.quad	sat_saXdI_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:56.626043515 UTC

.section .text
.align 8
_cb0n4:
_cb0n4:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cb0nf
_cb0ne:
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 31(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq $GHC.IO.Buffer.WriteBuffer_closure+2,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb0nf:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cb0n4, .-_cb0n4


==================== Asm code ====================
2018-03-16 16:05:56.62672589 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0n4_info:
	.quad	_cb0n4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:56.627443135 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD6_entry
.type GHC.IO.FD.$fBufferedIOFD6_entry, @object
GHC.IO.FD.$fBufferedIOFD6_entry:
_cb0nh:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb0nl
_cb0nk:
	movq $sat_saXdI_info,-16(%r12)
	movq %rsi,(%r12)
	leaq -16(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cb0nl:
	movq $24,904(%r13)
	movl $GHC.IO.FD.$fBufferedIOFD6_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fBufferedIOFD6_entry, .-GHC.IO.FD.$fBufferedIOFD6_entry


==================== Asm code ====================
2018-03-16 16:05:56.628111353 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD6_info
.type GHC.IO.FD.$fBufferedIOFD6_info, @object
GHC.IO.FD.$fBufferedIOFD6_info:
	.quad	GHC.IO.FD.$fBufferedIOFD6_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:05:56.630017269 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD_closure
.type GHC.IO.FD.$fBufferedIOFD_closure, @object
GHC.IO.FD.$fBufferedIOFD_closure:
	.quad	GHC.IO.BufferedIO.C:BufferedIO_con_info
	.quad	GHC.IO.FD.$fBufferedIOFD15_closure+3
	.quad	GHC.IO.FD.$fBufferedIOFD11_closure+3
	.quad	GHC.IO.FD.$fBufferedIOFD7_closure+3
	.quad	GHC.IO.FD.$fBufferedIOFD6_closure+3
	.quad	GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_closure+3
	.quad	GHC.IO.FD.$fBufferedIOFD1_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:56.632523009 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.FD_closure
.type GHC.IO.FD.FD_closure, @object
GHC.IO.FD.FD_closure:
	.quad	GHC.IO.FD.FD_info


==================== Asm code ====================
2018-03-16 16:05:56.633788048 UTC

.section .text
.align 8
GHC.IO.FD.FD_entry:
_cb0nG:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb0nK
_cb0nJ:
	movq $GHC.IO.FD.FD_con_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cb0nK:
	movq $24,904(%r13)
	movl $GHC.IO.FD.FD_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.FD.FD_entry, .-GHC.IO.FD.FD_entry


==================== Asm code ====================
2018-03-16 16:05:56.634428523 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.IO.FD.FD_info:
	.quad	GHC.IO.FD.FD_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 16:05:56.636392915 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
iaZ0W_str:
	.asciz "base:GHC.IO.FD.FD"


==================== Asm code ====================
2018-03-16 16:05:56.637000987 UTC

.section .text
.align 8
.globl GHC.IO.FD.FD_con_entry
.type GHC.IO.FD.FD_con_entry, @object
GHC.IO.FD.FD_con_entry:
_cb0nQ:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.FD.FD_con_entry, .-GHC.IO.FD.FD_con_entry


==================== Asm code ====================
2018-03-16 16:05:56.637639724 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.FD_con_info
.type GHC.IO.FD.FD_con_info, @object
GHC.IO.FD.FD_con_info:
	.quad	GHC.IO.FD.FD_con_entry
	.quad	8589934592
	.quad	6
	.quad	iaZ0W_str


==================== Asm code ====================
2018-03-16 16:05:56.640791561 UTC

.section .data.rel.ro
.align 8
.align 1
SaXeV_srt:
	.quad	Foreign.C.Error.throwErrno1_closure
	.quad	GHC.IO.FD.$fBufferedIOFD5_closure
	.quad	GHC.IO.FD.$wreadRawBufferPtrNoBlock_closure
	.quad	GHC.IO.FD.readRawBufferPtrNoBlock1_closure
	.quad	GHC.IO.FD.$fBufferedIOFD8_closure
	.quad	GHC.IO.FD.$w$creadNonBlocking_closure
	.quad	GHC.IO.FD.$fRawIOFD3_closure
	.quad	GHC.Event.Internal.evtRead_closure
	.quad	GHC.Event.Thread.threadWaitRead1_closure
	.quad	Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure
	.quad	GHC.IO.FD.$wreadRawBufferPtr_closure
	.quad	GHC.IO.FD.$fRawIOFD5_closure
	.quad	GHC.IO.FD.$fBufferedIOFD12_closure
	.quad	GHC.IO.FD.$fRawIOFD4_closure
	.quad	GHC.Event.Internal.evtWrite_closure
	.quad	GHC.IO.FD.$wwriteRawBufferPtr_closure
	.quad	GHC.IO.FD.writeRawBufferPtr1_closure
	.quad	GHC.IO.FD.$wfdWrite_closure
	.quad	lvl1_raWUY_closure
	.quad	GHC.IO.FD.$fRawIOFD2_closure
	.quad	GHC.IO.FD.$w$cwriteNonBlocking_closure
	.quad	GHC.IO.FD.$fBufferedIOFD_loc_closure
	.quad	GHC.IO.FD.$fRawIOFD1_closure
	.quad	GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_closure
	.quad	System.Posix.Internals.fdFileSize1_closure
	.quad	GHC.IO.FD.$fIODeviceFD12_closure
	.quad	System.Posix.Internals.setEcho1_closure
	.quad	GHC.IO.FD.$fIODeviceFD9_closure
	.quad	System.Posix.Internals.getEcho3_closure
	.quad	GHC.IO.FD.$fIODeviceFD8_closure
	.quad	System.Posix.Internals.setCooked1_closure
	.quad	GHC.IO.FD.$fIODeviceFD7_closure
	.quad	output_flags_raWV4_closure
	.quad	write_flags_raWV5_closure
	.quad	Foreign.C.Error.throwErrnoIfMinus1Retry2_closure
	.quad	GHC.IO.FD.$w$ctell_closure
	.quad	GHC.IO.FD.$fIODeviceFD14_closure
	.quad	GHC.IO.FD.$fIODeviceFD13_closure
	.quad	GHC.IO.FD.$w$cseek_closure
	.quad	GHC.IO.FD.$fIODeviceFD18_closure
	.quad	GHC.IO.FD.$fIODeviceFD17_closure
	.quad	Foreign.C.Error.$wlvl_closure
	.quad	lvl4_raWVa_closure
	.quad	GHC.IO.FD.$wsetSize_closure
	.quad	GHC.IO.FD.$fIODeviceFD11_closure
	.quad	GHC.IO.FD.$fIODeviceFD10_closure
	.quad	GHC.IO.FD.readRawBufferPtrNoBlock1_closure
	.quad	GHC.IO.FD.$fRawIOFD5_closure
	.quad	GHC.IO.FD.$w$cfillReadBuffer0_closure
	.quad	GHC.IO.FD.$fBufferedIOFD8_closure
	.quad	GHC.IO.FD.$wreadRawBufferPtrNoBlock_closure
	.quad	GHC.IO.FD.$fBufferedIOFD7_closure
	.quad	GHC.IO.FD.$w$cflushWriteBuffer0_closure
	.quad	GHC.IO.FD.$w$cwriteNonBlocking_closure
	.quad	GHC.IO.FD.$fBufferedIOFD1_closure
	.quad	GHC.Enum.$fEnumBool1_closure
	.quad	GHC.IO.FD.$w$cready_closure
	.quad	GHC.IO.FD.$fIODeviceFD28_closure
	.quad	GHC.IO.FD.$fIODeviceFD27_closure
	.quad	System.Posix.Internals.$wsetNonBlockingFD_closure
	.quad	GHC.IO.FD.setNonBlockingMode1_closure
	.quad	lvl6_raWVc_closure
	.quad	GHC.IO.FD.$w$cdup2_closure
	.quad	GHC.IO.FD.$fIODeviceFD2_closure
	.quad	GHC.IO.FD.$fIODeviceFD1_closure
	.quad	GHC.IO.FD.$w$cdup_closure
	.quad	GHC.IO.FD.$fIODeviceFD4_closure
	.quad	Foreign.C.Error.throwErrno1_closure
	.quad	GHC.IO.FD.$fIODeviceFD3_closure
	.quad	System.Posix.Internals.fdStat1_closure
	.quad	GHC.IO.FD.$fIODeviceFD6_closure
	.quad	GHC.IO.FD.$fIODeviceFD20_closure
	.quad	GHC.IO.FD.$fIODeviceFD23_closure
	.quad	GHC.IO.FD.$wclose_closure
	.quad	Foreign.C.Error.throwErrnoIfMinus1Retry2_closure
	.quad	GHC.IO.FD.$fIODeviceFD26_closure
	.quad	GHC.Event.Thread.closeFdWith1_closure
	.quad	GHC.IO.FD.$w$cclose_closure
	.quad	GHC.IO.FD.$fIODeviceFD22_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	GHC.IO.FD.mkFD9_closure
	.quad	GHC.IO.FD.mkFD3_closure
	.quad	GHC.IO.FD.$wmkFD_closure
	.quad	GHC.IO.FD.mkFD2_closure
	.quad	GHC.IO.FD.mkFD8_closure
	.quad	GHC.IO.FD.mkFD1_closure
	.quad	GHC.IO.FD.mkFD6_closure
	.quad	append_flags_raWV6_closure
	.quad	rw_flags_raWV7_closure
	.quad	read_flags_raWV8_closure
	.quad	GHC.IO.FD.$fIODeviceFD11_closure
	.quad	GHC.IO.Encoding.getFileSystemEncoding_closure
	.quad	GHC.IO.FD.openFile1_closure
	.quad	GHC.IO.FD.$w$cfillReadBuffer_closure
	.quad	GHC.IO.FD.$fBufferedIOFD12_closure
	.quad	GHC.IO.FD.$wreadRawBufferPtr_closure
	.quad	GHC.IO.FD.$fBufferedIOFD11_closure


==================== Asm code ====================
2018-03-16 16:06:00.332367374 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$WFD_closure
.type GHC.IO.FD.$WFD_closure, @object
GHC.IO.FD.$WFD_closure:
	.quad	GHC.IO.FD.$WFD_info


==================== Asm code ====================
2018-03-16 16:06:00.333236716 UTC

.section .text
.align 8
.globl GHC.IO.FD.$WFD_entry
.type GHC.IO.FD.$WFD_entry, @object
GHC.IO.FD.$WFD_entry:
_cb0Gz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0GI
_cb0GJ:
	leaq block_cb0Gw_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cb0Gw
_cb0Gx:
	movq (%rbx),%rax
	jmp *(%rax)
_cb0GI:
	leaq GHC.IO.FD.$WFD_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$WFD_entry, .-GHC.IO.FD.$WFD_entry


==================== Asm code ====================
2018-03-16 16:06:00.333916492 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$WFD_info
.type GHC.IO.FD.$WFD_info, @object
GHC.IO.FD.$WFD_info:
	.quad	GHC.IO.FD.$WFD_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:06:00.334600923 UTC

.section .text
.align 8
_cb0Gw:
_cb0Gw:
	leaq block_cb0GC_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cb0GC
_cb0GD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0Gw, .-_cb0Gw


==================== Asm code ====================
2018-03-16 16:06:00.335167128 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Gw_info:
	.quad	_cb0Gw
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.335848412 UTC

.section .text
.align 8
_cb0GC:
_cb0GC:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb0GN
_cb0GM:
	movq 7(%rbx),%rax
	leaq GHC.IO.FD.FD_con_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb0GN:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb0GC, .-_cb0GC


==================== Asm code ====================
2018-03-16 16:06:00.336484433 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0GC_info:
	.quad	_cb0GC
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.34270706 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD5_closure
.type GHC.IO.FD.$fBufferedIOFD5_closure, @object
GHC.IO.FD.$fBufferedIOFD5_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD5_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.34342482 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD5_entry
.type GHC.IO.FD.$fBufferedIOFD5_entry, @object
GHC.IO.FD.$fBufferedIOFD5_entry:
_cb0Hh:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0Hi
_ub0HR:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _cb0H9
_cb0Hi:
	leaq GHC.IO.FD.$fBufferedIOFD5_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fBufferedIOFD5_entry, .-GHC.IO.FD.$fBufferedIOFD5_entry


==================== Asm code ====================
2018-03-16 16:06:00.34404032 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD5_info
.type GHC.IO.FD.$fBufferedIOFD5_info, @object
GHC.IO.FD.$fBufferedIOFD5_info:
	.quad	GHC.IO.FD.$fBufferedIOFD5_entry
	.quad	0
	.quad	12884901902
	.quad	17179869207
	.quad	Sb0HW_srt


==================== Asm code ====================
2018-03-16 16:06:00.344648445 UTC

.section .text
.align 8
_cb0H9:
_cb0H9:
	leaq block_cb0Hc_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cb0H9, .-_cb0H9


==================== Asm code ====================
2018-03-16 16:06:00.345404962 UTC

.section .text
.align 8
_cb0Hc:
_cb0Hc:
	leaq block_cb0He_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cb0He
_cb0Hf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0Hc, .-_cb0Hc


==================== Asm code ====================
2018-03-16 16:06:00.346017909 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Hc_info:
	.quad	_cb0Hc
	.quad	3
	.quad	4294967326
	.quad	Sb0HW_srt


==================== Asm code ====================
2018-03-16 16:06:00.346904774 UTC

.section .text
.align 8
_cb0He:
_cb0He:
	cmpq $-1,7(%rbx)
	je _cb0HP
_cb0Hq:
	movq 8(%rbp),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ub0HQ:
	cmpq $11,%rax
	jne _cb0Hz
_cb0HL:
	movq 64(%rsp),%rax
	movq %rax,%rbx
	addq $40,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_cb0HP:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rbx
	movq 32(%rbp),%rcx
	subq $8,%rsp
	movq %rax,%rdx
	xorl %eax,%eax
	movq %rdx,%r14
	movq %rcx,72(%rsp)
	call __hscore_get_errno@plt
	addq $8,%rsp
	movslq %eax,%rax
	cmpq $4,%rax
	jne _ub0HQ
_cb0HF:
	movq %r14,16(%rbp)
	movq %rbx,24(%rbp)
	movq 64(%rsp),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp _cb0H9
_cb0Hz:
	addq $40,%rbp
	jmp *Foreign.C.Error.throwErrno1_entry@gotpcrel(%rip)
	.size _cb0He, .-_cb0He


==================== Asm code ====================
2018-03-16 16:06:00.347652058 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0He_info:
	.quad	_cb0He
	.quad	4
	.quad	4294967326
	.quad	Sb0HW_srt


==================== Asm code ====================
2018-03-16 16:06:00.349523179 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_raWUX_bytes:
	.asciz "GHC.IO.FD.fdWrite"


==================== Asm code ====================
2018-03-16 16:06:00.352069567 UTC

.section .data
.align 8
.align 1
lvl1_raWUY_closure:
	.quad	lvl1_raWUY_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.353289227 UTC

.section .text
.align 8
lvl1_raWUY_entry:
_cb0Il:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0Im
_cb0In:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb0Ik
_cb0Ij:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl_raWUX_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cb0Im:
	jmp *-16(%r13)
_cb0Ik:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl1_raWUY_entry, .-lvl1_raWUY_entry


==================== Asm code ====================
2018-03-16 16:06:00.354018538 UTC

.section .data.rel.ro
.align 8
.align 1
lvl1_raWUY_info:
	.quad	lvl1_raWUY_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:00.355708365 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$fBufferedIOFD9_bytes
.type GHC.IO.FD.$fBufferedIOFD9_bytes, @object
GHC.IO.FD.$fBufferedIOFD9_bytes:
	.asciz "GHC.IO.FD.fdReadNonBlocking"


==================== Asm code ====================
2018-03-16 16:06:00.358134261 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD8_closure
.type GHC.IO.FD.$fBufferedIOFD8_closure, @object
GHC.IO.FD.$fBufferedIOFD8_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.358946874 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD8_entry
.type GHC.IO.FD.$fBufferedIOFD8_entry, @object
GHC.IO.FD.$fBufferedIOFD8_entry:
_cb0ID:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0IE
_cb0IF:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb0IC
_cb0IB:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.FD.$fBufferedIOFD9_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cb0IE:
	jmp *-16(%r13)
_cb0IC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.$fBufferedIOFD8_entry, .-GHC.IO.FD.$fBufferedIOFD8_entry


==================== Asm code ====================
2018-03-16 16:06:00.359656112 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD8_info
.type GHC.IO.FD.$fBufferedIOFD8_info, @object
GHC.IO.FD.$fBufferedIOFD8_info:
	.quad	GHC.IO.FD.$fBufferedIOFD8_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:00.361452828 UTC

.section .data
.align 8
.align 1
lvl2_raWUZ_closure:
	.quad	GHC.Int.I64#_con_info
	.quad	-1


==================== Asm code ====================
2018-03-16 16:06:00.363507715 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD3_closure
.type GHC.IO.FD.$fBufferedIOFD3_closure, @object
GHC.IO.FD.$fBufferedIOFD3_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD3_info


==================== Asm code ====================
2018-03-16 16:06:00.364083632 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD3_entry
.type GHC.IO.FD.$fBufferedIOFD3_entry, @object
GHC.IO.FD.$fBufferedIOFD3_entry:
_cb0IT:
	leaq lvl2_raWUZ_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.FD.$fBufferedIOFD3_entry, .-GHC.IO.FD.$fBufferedIOFD3_entry


==================== Asm code ====================
2018-03-16 16:06:00.364666359 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD3_info
.type GHC.IO.FD.$fBufferedIOFD3_info, @object
GHC.IO.FD.$fBufferedIOFD3_info:
	.quad	GHC.IO.FD.$fBufferedIOFD3_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:00.36721942 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD2_closure
.type GHC.IO.FD.$fBufferedIOFD2_closure, @object
GHC.IO.FD.$fBufferedIOFD2_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.368792172 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD10_closure
.type GHC.IO.FD.$fBufferedIOFD10_closure, @object
GHC.IO.FD.$fBufferedIOFD10_closure:
	.quad	GHC.Types.I#_con_info
	.quad	-1


==================== Asm code ====================
2018-03-16 16:06:00.378699303 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$wreadRawBufferPtrNoBlock_closure
.type GHC.IO.FD.$wreadRawBufferPtrNoBlock_closure, @object
GHC.IO.FD.$wreadRawBufferPtrNoBlock_closure:
	.quad	GHC.IO.FD.$wreadRawBufferPtrNoBlock_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.379407204 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wreadRawBufferPtrNoBlock_slow
.type GHC.IO.FD.$wreadRawBufferPtrNoBlock_slow, @object
GHC.IO.FD.$wreadRawBufferPtrNoBlock_slow:
_cb0J4:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry
	.size GHC.IO.FD.$wreadRawBufferPtrNoBlock_slow, .-GHC.IO.FD.$wreadRawBufferPtrNoBlock_slow


==================== Asm code ====================
2018-03-16 16:06:00.380238509 UTC

.section .text
.align 8
sat_sb0oI_entry:
_cb0Jj:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb0Jt
_cb0Js:
	subq $8,%rsp
	leaq 23(%rbx),%rax
	movq 15(%rbx),%rsi
	addq (%rax),%rsi
	movq 7(%rbx),%rdi
	movq 31(%rbx),%rdx
	xorl %eax,%eax
	call ghczuwrapperZC22ZCbaseZCSystemziPosixziInternalsZCread@plt
	addq $8,%rsp
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cb0Jt:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_sb0oI_entry, .-sat_sb0oI_entry


==================== Asm code ====================
2018-03-16 16:06:00.380912834 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0oI_info:
	.quad	sat_sb0oI_entry
	.quad	17179869184
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:00.382477509 UTC

.section .text
.align 8
sat_sb0oV_entry:
_cb0JN:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0JW
_cb0JX:
	leaq block_cb0JT_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	movq 7(%rbx),%rax
	leaq 23(%rbx),%rcx
	movq 15(%rbx),%rdx
	addq (%rcx),%rdx
	movq 31(%rbx),%rbx
	movq 872(%r13),%rcx
	movq 24(%rcx),%rsi
	movq %rbp,16(%rsi)
	movq 888(%r13),%rsi
	leaq 8(%r12),%rdi
	movq %rdi,8(%rsi)
	leaq 8(%r12),%rdi
	subq (%rsi),%rdi
	movq 104(%rcx),%rsi
	subq %rdi,%rsi
	movq %rsi,104(%rcx)
	subq $8,%rsp
	movq %r13,%rdi
	xorl %esi,%esi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call suspendThread@plt
	addq $8,%rsp
	subq $8,%rsp
	movq 72(%rsp),%rcx
	movq %rbx,%rdx
	movq %r14,%rdi
	movq %rcx,%rsi
	movq %rax,%rbx
	xorl %eax,%eax
	call ghczuwrapperZC21ZCbaseZCSystemziPosixziInternalsZCread@plt
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call resumeThread@plt
	addq $8,%rsp
	movq %rax,%r13
	movq 872(%r13),%rax
	movq 24(%rax),%rcx
	movq 16(%rcx),%rbp
	leaq 192(%rcx),%r15
	movq $0,904(%r13)
	movq 888(%r13),%rcx
	movq 8(%rcx),%rdx
	leaq -8(%rdx),%r12
	movq (%rcx),%rsi
	movslq 48(%rcx),%rcx
	shlq $12,%rcx
	decq %rcx
	movq %rsi,%rdi
	addq %rcx,%rdi
	movq %rdi,856(%r13)
	subq %rsi,%rdx
	movq 104(%rax),%rcx
	addq %rdx,%rcx
	movq %rcx,104(%rax)
	movq (%rbp),%rax
	jmp *(%rax)
_cb0JW:
	jmp *-8(%r13)
	.size sat_sb0oV_entry, .-sat_sb0oV_entry


==================== Asm code ====================
2018-03-16 16:06:00.383399523 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0oV_info:
	.quad	sat_sb0oV_entry
	.quad	17179869184
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:00.384110403 UTC

.section .text
.align 8
_cb0JT:
_cb0JT:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb0K0
_cb0JZ:
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb0K0:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cb0JT, .-_cb0JT


==================== Asm code ====================
2018-03-16 16:06:00.384716948 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0JT_info:
	.quad	_cb0JT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.385739505 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry
.type GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry, @object
GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry:
_cb0Ke:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0Kf
_cb0Kg:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cb0Ki
_cb0Kh:
	testq %rdi,%rdi
	je _cb0Kd
_cb0Kc:
	leaq sat_sb0oI_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %rsi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%rbp)
	movq %r14,(%rbp)
	addq $-8,%rbp
	jmp _sb0oq
_ub0KS:
	movq %r14,-40(%rbp)
	movq %rbx,-32(%rbp)
	movq 64(%rsp),%rbx
	movq %rbx,-24(%rbp)
	movq 72(%rsp),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp _cb0JE
_cb0Kd:
	subq $8,%rsp
	movq %rsi,%rdi
	movq %rsi,%rax
	xorl %esi,%esi
	xorl %edx,%edx
	xorl %ecx,%ecx
	movq %rax,%rbx
	xorl %eax,%eax
	movq %r8,72(%rsp)
	movq %r9,80(%rsp)
	call fdReady@plt
	addq $8,%rsp
	addq $-40,%r12
	movslq %eax,%rax
	testq %rax,%rax
	jne _ub0KS
_cb0KM:
	leaq GHC.IO.FD.$fBufferedIOFD2_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb0Ki:
	movq $40,904(%r13)
_cb0Kf:
	leaq GHC.IO.FD.$wreadRawBufferPtrNoBlock_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry, .-GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry


==================== Asm code ====================
2018-03-16 16:06:00.38665652 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$wreadRawBufferPtrNoBlock_info
.type GHC.IO.FD.$wreadRawBufferPtrNoBlock_info, @object
GHC.IO.FD.$wreadRawBufferPtrNoBlock_info:
	.quad	GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry
	.quad	0
	.quad	12884901902
	.quad	30064771072
	.quad	Sb0HW_srt+8
	.quad	3974
	.quad	GHC.IO.FD.$wreadRawBufferPtrNoBlock_slow


==================== Asm code ====================
2018-03-16 16:06:00.387431872 UTC

.section .text
.align 8
_cb0JE:
_cb0JE:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cb0KJ
_cb0KI:
	leaq sat_sb0oV_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	movq (%rbp),%rax
	movq %rax,40(%rbp)
	leaq -31(%r12),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp _sb0oq
_cb0KJ:
	movq $40,904(%r13)
	leaq block_cb0JD_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 32(%rbp),%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cb0JE, .-_cb0JE


==================== Asm code ====================
2018-03-16 16:06:00.388242222 UTC

.section .text
.align 8
_cb0JD:
_cb0JD:
	movq %rbx,40(%rbp)
	addq $8,%rbp
	jmp _cb0JE
	.size _cb0JD, .-_cb0JD


==================== Asm code ====================
2018-03-16 16:06:00.388809947 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0JD_info:
	.quad	_cb0JD
	.quad	3974
	.quad	4294967326
	.quad	Sb0HW_srt+8


==================== Asm code ====================
2018-03-16 16:06:00.389759558 UTC

.section .text
.align 8
_sb0oq:
_sb0oq:
	movq 8(%rbp),%rax
	leaq block_cb0Km_info(%rip),%rbx
	movq %rbx,8(%rbp)
	leaq GHC.IO.FD.$fBufferedIOFD3_closure+1(%rip),%rdi
	movq (%rbp),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.IO.FD.$fBufferedIOFD5_entry
	.size _sb0oq, .-_sb0oq


==================== Asm code ====================
2018-03-16 16:06:00.390468612 UTC

.section .text
.align 8
_cb0Km:
_cb0Km:
	leaq block_cb0Ko_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cb0Ko
_cb0Kr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0Km, .-_cb0Km


==================== Asm code ====================
2018-03-16 16:06:00.391097457 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Km_info:
	.quad	_cb0Km
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.392335225 UTC

.section .text
.align 8
_cb0Ko:
_cb0Ko:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb0Kx
_cb0Kw:
	movq 7(%rbx),%rax
	cmpq $-1,%rax
	jne _ub0KQ
_cb0KD:
	addq $-16,%r12
	leaq GHC.IO.FD.$fBufferedIOFD2_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ub0KQ:
	testq %rax,%rax
	jne _cb0KC
_cb0KE:
	addq $-16,%r12
	leaq GHC.IO.FD.$fBufferedIOFD10_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb0KC:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb0Kx:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb0Ko, .-_cb0Ko


==================== Asm code ====================
2018-03-16 16:06:00.393074891 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Ko_info:
	.quad	_cb0Ko
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.397922068 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.readRawBufferPtrNoBlock1_closure
.type GHC.IO.FD.readRawBufferPtrNoBlock1_closure, @object
GHC.IO.FD.readRawBufferPtrNoBlock1_closure:
	.quad	GHC.IO.FD.readRawBufferPtrNoBlock1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.398714592 UTC

.section .text
.align 8
.globl GHC.IO.FD.readRawBufferPtrNoBlock1_entry
.type GHC.IO.FD.readRawBufferPtrNoBlock1_entry, @object
GHC.IO.FD.readRawBufferPtrNoBlock1_entry:
_cb0Mk:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0My
_cb0Mz:
	leaq block_cb0Mh_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rsi,%rbx
	movq %r14,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cb0Mh
_cb0Mi:
	movq (%rbx),%rax
	jmp *(%rax)
_cb0My:
	leaq GHC.IO.FD.readRawBufferPtrNoBlock1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.readRawBufferPtrNoBlock1_entry, .-GHC.IO.FD.readRawBufferPtrNoBlock1_entry


==================== Asm code ====================
2018-03-16 16:06:00.399367836 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.readRawBufferPtrNoBlock1_info
.type GHC.IO.FD.readRawBufferPtrNoBlock1_info, @object
GHC.IO.FD.readRawBufferPtrNoBlock1_info:
	.quad	GHC.IO.FD.readRawBufferPtrNoBlock1_entry
	.quad	0
	.quad	12884901902
	.quad	25769803801
	.quad	Sb0HW_srt+16


==================== Asm code ====================
2018-03-16 16:06:00.400111541 UTC

.section .text
.align 8
_cb0Mh:
_cb0Mh:
	leaq block_cb0Mn_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cb0Mn
_cb0Mo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0Mh, .-_cb0Mh


==================== Asm code ====================
2018-03-16 16:06:00.400765609 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Mh_info:
	.quad	_cb0Mh
	.quad	4
	.quad	4294967326
	.quad	Sb0HW_srt+16


==================== Asm code ====================
2018-03-16 16:06:00.401515118 UTC

.section .text
.align 8
_cb0Mn:
_cb0Mn:
	leaq block_cb0Ms_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 32(%rbp),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _cb0Ms
_cb0Mt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0Mn, .-_cb0Mn


==================== Asm code ====================
2018-03-16 16:06:00.402072599 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Mn_info:
	.quad	_cb0Mn
	.quad	325
	.quad	4294967326
	.quad	Sb0HW_srt+16


==================== Asm code ====================
2018-03-16 16:06:00.402755124 UTC

.section .text
.align 8
_cb0Ms:
_cb0Ms:
	leaq block_cb0Mx_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 40(%rbp),%rbx
	movq %rax,40(%rbp)
	testb $7,%bl
	jne _cb0Mx
_cb0MD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0Ms, .-_cb0Ms


==================== Asm code ====================
2018-03-16 16:06:00.403320109 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Ms_info:
	.quad	_cb0Ms
	.quad	837
	.quad	4294967326
	.quad	Sb0HW_srt+16


==================== Asm code ====================
2018-03-16 16:06:00.404020281 UTC

.section .text
.align 8
_cb0Mx:
_cb0Mx:
	movq 40(%rbp),%r9
	movq 32(%rbp),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,40(%rbp)
	addq $40,%rbp
	jmp GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry
	.size _cb0Mx, .-_cb0Mx


==================== Asm code ====================
2018-03-16 16:06:00.404635075 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Mx_info:
	.quad	_cb0Mx
	.quad	1861
	.quad	4294967326
	.quad	Sb0HW_srt+16


==================== Asm code ====================
2018-03-16 16:06:00.409259883 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$creadNonBlocking_closure
.type GHC.IO.FD.$w$creadNonBlocking_closure, @object
GHC.IO.FD.$w$creadNonBlocking_closure:
	.quad	GHC.IO.FD.$w$creadNonBlocking_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.409904552 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$creadNonBlocking_slow
.type GHC.IO.FD.$w$creadNonBlocking_slow, @object
GHC.IO.FD.$w$creadNonBlocking_slow:
_cb0Nd:
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.FD.$w$creadNonBlocking_entry
	.size GHC.IO.FD.$w$creadNonBlocking_slow, .-GHC.IO.FD.$w$creadNonBlocking_slow


==================== Asm code ====================
2018-03-16 16:06:00.410712377 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$creadNonBlocking_entry
.type GHC.IO.FD.$w$creadNonBlocking_entry, @object
GHC.IO.FD.$w$creadNonBlocking_entry:
_cb0Nj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0No
_cb0Np:
	leaq block_cb0Nl_info(%rip),%rax
	movq %rax,-8(%rbp)
	xorl %r9d,%r9d
	movq %r8,%rax
	movq %rdi,%r8
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.IO.FD.$fBufferedIOFD8_closure(%rip),%r14
	movq %rax,-16(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry
_cb0No:
	leaq GHC.IO.FD.$w$creadNonBlocking_closure(%rip),%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
	.size GHC.IO.FD.$w$creadNonBlocking_entry, .-GHC.IO.FD.$w$creadNonBlocking_entry


==================== Asm code ====================
2018-03-16 16:06:00.411412656 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$creadNonBlocking_info
.type GHC.IO.FD.$w$creadNonBlocking_info, @object
GHC.IO.FD.$w$creadNonBlocking_info:
	.quad	GHC.IO.FD.$w$creadNonBlocking_entry
	.quad	0
	.quad	55834574862
	.quad	21474836480
	.quad	Sb0HW_srt+16
	.quad	964
	.quad	GHC.IO.FD.$w$creadNonBlocking_slow


==================== Asm code ====================
2018-03-16 16:06:00.412077875 UTC

.section .text
.align 8
_cb0Nl:
_cb0Nl:
	leaq block_cb0Nn_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cb0Nn
_cb0Nr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0Nl, .-_cb0Nl


==================== Asm code ====================
2018-03-16 16:06:00.412641495 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Nl_info:
	.quad	_cb0Nl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.41366907 UTC

.section .text
.align 8
_cb0Nn:
_cb0Nn:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb0Nx
_cb0Nw:
	cmpq $-1,7(%rbx)
	je _cb0ND
_cb0NC:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb0ND:
	addq $-16,%r12
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb0Nx:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb0Nn, .-_cb0Nn


==================== Asm code ====================
2018-03-16 16:06:00.414306913 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Nn_info:
	.quad	_cb0Nn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.418298616 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD3_closure
.type GHC.IO.FD.$fRawIOFD3_closure, @object
GHC.IO.FD.$fRawIOFD3_closure:
	.quad	GHC.IO.FD.$fRawIOFD3_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.419415942 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fRawIOFD3_entry
.type GHC.IO.FD.$fRawIOFD3_entry, @object
GHC.IO.FD.$fRawIOFD3_entry:
_cb0O6:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0Of
_cb0Og:
	leaq block_cb0O3_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cb0O3
_cb0O4:
	movq (%rbx),%rax
	jmp *(%rax)
_cb0Of:
	leaq GHC.IO.FD.$fRawIOFD3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fRawIOFD3_entry, .-GHC.IO.FD.$fRawIOFD3_entry


==================== Asm code ====================
2018-03-16 16:06:00.420078361 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD3_info
.type GHC.IO.FD.$fRawIOFD3_info, @object
GHC.IO.FD.$fRawIOFD3_info:
	.quad	GHC.IO.FD.$fRawIOFD3_entry
	.quad	0
	.quad	12884901902
	.quad	17179869207
	.quad	Sb0HW_srt+40


==================== Asm code ====================
2018-03-16 16:06:00.420848713 UTC

.section .text
.align 8
_cb0O3:
_cb0O3:
	leaq block_cb0O9_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cb0O9
_cb0Oa:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0O3, .-_cb0O3


==================== Asm code ====================
2018-03-16 16:06:00.421717954 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0O3_info:
	.quad	_cb0O3
	.quad	2
	.quad	4294967326
	.quad	Sb0HW_srt+40


==================== Asm code ====================
2018-03-16 16:06:00.422426866 UTC

.section .text
.align 8
_cb0O9:
_cb0O9:
	leaq block_cb0Oe_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _cb0Oe
_cb0Oj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0O9, .-_cb0O9


==================== Asm code ====================
2018-03-16 16:06:00.42303751 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0O9_info:
	.quad	_cb0O9
	.quad	195
	.quad	4294967326
	.quad	Sb0HW_srt+40


==================== Asm code ====================
2018-03-16 16:06:00.423637082 UTC

.section .text
.align 8
_cb0Oe:
_cb0Oe:
	movq 7(%rbx),%r8
	movq 24(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.FD.$w$creadNonBlocking_entry
	.size _cb0Oe, .-_cb0Oe


==================== Asm code ====================
2018-03-16 16:06:00.424231708 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Oe_info:
	.quad	_cb0Oe
	.quad	451
	.quad	4294967326
	.quad	Sb0HW_srt+40


==================== Asm code ====================
2018-03-16 16:06:00.425912257 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$fBufferedIOFD4_bytes
.type GHC.IO.FD.$fBufferedIOFD4_bytes, @object
GHC.IO.FD.$fBufferedIOFD4_bytes:
	.asciz "GHC.IO.FD.fdWriteNonBlocking"


==================== Asm code ====================
2018-03-16 16:06:00.428505231 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD_loc_closure
.type GHC.IO.FD.$fBufferedIOFD_loc_closure, @object
GHC.IO.FD.$fBufferedIOFD_loc_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD_loc_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.429371884 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD_loc_entry
.type GHC.IO.FD.$fBufferedIOFD_loc_entry, @object
GHC.IO.FD.$fBufferedIOFD_loc_entry:
_cb0OS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0OT
_cb0OU:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb0OR
_cb0OQ:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.FD.$fBufferedIOFD4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cb0OT:
	jmp *-16(%r13)
_cb0OR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.$fBufferedIOFD_loc_entry, .-GHC.IO.FD.$fBufferedIOFD_loc_entry


==================== Asm code ====================
2018-03-16 16:06:00.430368267 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD_loc_info
.type GHC.IO.FD.$fBufferedIOFD_loc_info, @object
GHC.IO.FD.$fBufferedIOFD_loc_info:
	.quad	GHC.IO.FD.$fBufferedIOFD_loc_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:00.434377769 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD14_closure
.type GHC.IO.FD.$fBufferedIOFD14_closure, @object
GHC.IO.FD.$fBufferedIOFD14_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD14_info


==================== Asm code ====================
2018-03-16 16:06:00.435125494 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD14_entry
.type GHC.IO.FD.$fBufferedIOFD14_entry, @object
GHC.IO.FD.$fBufferedIOFD14_entry:
_cb0Pa:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0Pb
_cb0Pc:
	leaq block_cb0P7_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb0P7
_cb0P8:
	movq (%rbx),%rax
	jmp *(%rax)
_cb0Pb:
	leaq GHC.IO.FD.$fBufferedIOFD14_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fBufferedIOFD14_entry, .-GHC.IO.FD.$fBufferedIOFD14_entry


==================== Asm code ====================
2018-03-16 16:06:00.435791011 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD14_info
.type GHC.IO.FD.$fBufferedIOFD14_info, @object
GHC.IO.FD.$fBufferedIOFD14_info:
	.quad	GHC.IO.FD.$fBufferedIOFD14_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:06:00.436493843 UTC

.section .text
.align 8
_cb0P7:
_cb0P7:
	cmpq $-1,7(%rbx)
	je _cb0Pj
_cb0Pi:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb0Pj:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb0P7, .-_cb0P7


==================== Asm code ====================
2018-03-16 16:06:00.437105676 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0P7_info:
	.quad	_cb0P7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.438725296 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$fBufferedIOFD13_bytes
.type GHC.IO.FD.$fBufferedIOFD13_bytes, @object
GHC.IO.FD.$fBufferedIOFD13_bytes:
	.asciz "GHC.IO.FD.fdRead"


==================== Asm code ====================
2018-03-16 16:06:00.441233183 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD12_closure
.type GHC.IO.FD.$fBufferedIOFD12_closure, @object
GHC.IO.FD.$fBufferedIOFD12_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD12_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.442101016 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD12_entry
.type GHC.IO.FD.$fBufferedIOFD12_entry, @object
GHC.IO.FD.$fBufferedIOFD12_entry:
_cb0PG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0PH
_cb0PI:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb0PF
_cb0PE:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.FD.$fBufferedIOFD13_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cb0PH:
	jmp *-16(%r13)
_cb0PF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.$fBufferedIOFD12_entry, .-GHC.IO.FD.$fBufferedIOFD12_entry


==================== Asm code ====================
2018-03-16 16:06:00.442813291 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD12_info
.type GHC.IO.FD.$fBufferedIOFD12_info, @object
GHC.IO.FD.$fBufferedIOFD12_info:
	.quad	GHC.IO.FD.$fBufferedIOFD12_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:00.459742371 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$wreadRawBufferPtr_closure
.type GHC.IO.FD.$wreadRawBufferPtr_closure, @object
GHC.IO.FD.$wreadRawBufferPtr_closure:
	.quad	GHC.IO.FD.$wreadRawBufferPtr_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.460456299 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wreadRawBufferPtr_slow
.type GHC.IO.FD.$wreadRawBufferPtr_slow, @object
GHC.IO.FD.$wreadRawBufferPtr_slow:
_cb0PS:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.FD.$wreadRawBufferPtr_entry
	.size GHC.IO.FD.$wreadRawBufferPtr_slow, .-GHC.IO.FD.$wreadRawBufferPtr_slow


==================== Asm code ====================
2018-03-16 16:06:00.461460273 UTC

.section .text
.align 8
sat_sb0pX_entry:
_cb0Qb:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0Qc
_cb0Qd:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb0Qf
_cb0Qe:
	movq 7(%rbx),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call rtsSupportsBoundThreads@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb0Qa
_cb0Q9:
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rsi
	movq GHC.Event.Internal.evtRead_closure@gotpcrel(%rip),%r14
	jmp *GHC.Event.Thread.threadWaitRead1_entry@gotpcrel(%rip)
_cb0Qf:
	movq $16,904(%r13)
_cb0Qc:
	jmp *-8(%r13)
_cb0Qa:
	addq $-16,%r12
	leaq block_cb0Qp_info(%rip),%rax
	movq %rax,-8(%rbp)
	movslq %ebx,%rbx
	addq $-8,%rbp
	jmp *stg_waitRead#@gotpcrel(%rip)
	.size sat_sb0pX_entry, .-sat_sb0pX_entry


==================== Asm code ====================
2018-03-16 16:06:00.462179837 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0pX_info:
	.quad	sat_sb0pX_entry
	.quad	4294967296
	.quad	12884901898
	.quad	4294967299
	.quad	Sb0HW_srt+56


==================== Asm code ====================
2018-03-16 16:06:00.462802058 UTC

.section .text
.align 8
_cb0Qp:
_cb0Qp:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb0Qp, .-_cb0Qp


==================== Asm code ====================
2018-03-16 16:06:00.463365173 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Qp_info:
	.quad	_cb0Qp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.464062871 UTC

.section .text
.align 8
sat_sb0q3_entry:
_cb0QB:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0QF
_cb0QG:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cb0Qy_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cb0Qy
_cb0Qz:
	movq (%rbx),%rax
	jmp *(%rax)
_cb0QF:
	jmp *-16(%r13)
	.size sat_sb0q3_entry, .-sat_sb0q3_entry


==================== Asm code ====================
2018-03-16 16:06:00.464715001 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0q3_info:
	.quad	sat_sb0q3_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:00.465460537 UTC

.section .text
.align 8
_cb0Qy:
_cb0Qy:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb0QJ
_cb0QI:
	movq 7(%rbx),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb0QJ:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb0Qy, .-_cb0Qy


==================== Asm code ====================
2018-03-16 16:06:00.466089803 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Qy_info:
	.quad	_cb0Qy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.466858185 UTC

.section .text
.align 8
sat_sb0qc_entry:
_cb0QU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb0R4
_cb0R3:
	subq $8,%rsp
	leaq 23(%rbx),%rax
	movq 15(%rbx),%rsi
	addq (%rax),%rsi
	movq 7(%rbx),%rdi
	movq 31(%rbx),%rdx
	xorl %eax,%eax
	call ghczuwrapperZC22ZCbaseZCSystemziPosixziInternalsZCread@plt
	addq $8,%rsp
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cb0R4:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_sb0qc_entry, .-sat_sb0qc_entry


==================== Asm code ====================
2018-03-16 16:06:00.467529301 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0qc_info:
	.quad	sat_sb0qc_entry
	.quad	17179869184
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:00.468549629 UTC

.section .text
.align 8
sat_sb0qy_entry:
_cb0Rv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0RE
_cb0RF:
	leaq block_cb0RB_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	movq 7(%rbx),%rax
	leaq 23(%rbx),%rcx
	movq 15(%rbx),%rdx
	addq (%rcx),%rdx
	movq 31(%rbx),%rbx
	movq 872(%r13),%rcx
	movq 24(%rcx),%rsi
	movq %rbp,16(%rsi)
	movq 888(%r13),%rsi
	leaq 8(%r12),%rdi
	movq %rdi,8(%rsi)
	leaq 8(%r12),%rdi
	subq (%rsi),%rdi
	movq 104(%rcx),%rsi
	subq %rdi,%rsi
	movq %rsi,104(%rcx)
	subq $8,%rsp
	movq %r13,%rdi
	xorl %esi,%esi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call suspendThread@plt
	addq $8,%rsp
	subq $8,%rsp
	movq 72(%rsp),%rcx
	movq %rbx,%rdx
	movq %r14,%rdi
	movq %rcx,%rsi
	movq %rax,%rbx
	xorl %eax,%eax
	call ghczuwrapperZC21ZCbaseZCSystemziPosixziInternalsZCread@plt
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call resumeThread@plt
	addq $8,%rsp
	movq %rax,%r13
	movq 872(%r13),%rax
	movq 24(%rax),%rcx
	movq 16(%rcx),%rbp
	leaq 192(%rcx),%r15
	movq $0,904(%r13)
	movq 888(%r13),%rcx
	movq 8(%rcx),%rdx
	leaq -8(%rdx),%r12
	movq (%rcx),%rsi
	movslq 48(%rcx),%rcx
	shlq $12,%rcx
	decq %rcx
	movq %rsi,%rdi
	addq %rcx,%rdi
	movq %rdi,856(%r13)
	subq %rsi,%rdx
	movq 104(%rax),%rcx
	addq %rdx,%rcx
	movq %rcx,104(%rax)
	movq (%rbp),%rax
	jmp *(%rax)
_cb0RE:
	jmp *-8(%r13)
	.size sat_sb0qy_entry, .-sat_sb0qy_entry


==================== Asm code ====================
2018-03-16 16:06:00.469848895 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0qy_info:
	.quad	sat_sb0qy_entry
	.quad	17179869184
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:00.470586856 UTC

.section .text
.align 8
_cb0RB:
_cb0RB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb0RI
_cb0RH:
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb0RI:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cb0RB, .-_cb0RB


==================== Asm code ====================
2018-03-16 16:06:00.471173761 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0RB_info:
	.quad	_cb0RB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.471939639 UTC

.section .text
.align 8
sat_sb0qG_entry:
_cb0S1:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb0Sb
_cb0Sa:
	subq $8,%rsp
	leaq 23(%rbx),%rax
	movq 15(%rbx),%rsi
	addq (%rax),%rsi
	movq 7(%rbx),%rdi
	movq 31(%rbx),%rdx
	xorl %eax,%eax
	call ghczuwrapperZC22ZCbaseZCSystemziPosixziInternalsZCread@plt
	addq $8,%rsp
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cb0Sb:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_sb0qG_entry, .-sat_sb0qG_entry


==================== Asm code ====================
2018-03-16 16:06:00.473046951 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0qG_info:
	.quad	sat_sb0qG_entry
	.quad	17179869184
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:00.474161035 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wreadRawBufferPtr_entry
.type GHC.IO.FD.$wreadRawBufferPtr_entry, @object
GHC.IO.FD.$wreadRawBufferPtr_entry:
_cb0Sf:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0Sg
_cb0Sh:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cb0Sj
_cb0Si:
	testq %rdi,%rdi
	je _cb0Se
_cb0Sd:
	leaq sat_sb0qc_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %rsi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	movq %rsi,-16(%rbp)
	leaq -31(%r12),%rax
	movq %rax,-8(%rbp)
	movq %r14,(%rbp)
	addq $-16,%rbp
	jmp _cb0PZ
_cb0Se:
	subq $8,%rsp
	movq %rsi,%rdi
	movq %rsi,%rax
	xorl %esi,%esi
	xorl %edx,%edx
	xorl %ecx,%ecx
	movq %rax,%rbx
	xorl %eax,%eax
	movq %r8,72(%rsp)
	movq %r9,80(%rsp)
	call fdReady@plt
	addq $8,%rsp
	addq $-40,%r12
	movslq %eax,%rax
	cmpq $-1,%rax
	jne _cb0T4
_cb0Tf:
	leaq block_cb0Tc_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r14,%rax
	movq %rax,-32(%rbp)
	movq %rbx,-24(%rbp)
	movq 64(%rsp),%rax
	movq %rax,-16(%rbp)
	movq 72(%rsp),%rax
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp *Foreign.C.Error.throwErrno1_entry@gotpcrel(%rip)
_cb0T4:
	movq %r14,-40(%rbp)
	movq %rbx,-32(%rbp)
	movq 64(%rsp),%rbx
	movq %rbx,-24(%rbp)
	movq 72(%rsp),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp _cb0Re
_cb0Sj:
	movq $40,904(%r13)
_cb0Sg:
	leaq GHC.IO.FD.$wreadRawBufferPtr_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.FD.$wreadRawBufferPtr_entry, .-GHC.IO.FD.$wreadRawBufferPtr_entry


==================== Asm code ====================
2018-03-16 16:06:00.475101559 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$wreadRawBufferPtr_info
.type GHC.IO.FD.$wreadRawBufferPtr_info, @object
GHC.IO.FD.$wreadRawBufferPtr_info:
	.quad	GHC.IO.FD.$wreadRawBufferPtr_entry
	.quad	0
	.quad	8250632175630
	.quad	30064771072
	.quad	Sb0HW_srt
	.quad	3974
	.quad	GHC.IO.FD.$wreadRawBufferPtr_slow


==================== Asm code ====================
2018-03-16 16:06:00.475826198 UTC

.section .text
.align 8
_cb0Tc:
_cb0Tc:
	leaq block_cb0Te_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cb0Te
_cb0Ti:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0Tc, .-_cb0Tc


==================== Asm code ====================
2018-03-16 16:06:00.476397267 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Tc_info:
	.quad	_cb0Tc
	.quad	1925
	.quad	30064771102
	.quad	Sb0HW_srt+56


==================== Asm code ====================
2018-03-16 16:06:00.477044296 UTC

.section .text
.align 8
_cb0Te:
_cb0Te:
	movq 8(%rbp),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rax
	movq %rax,8(%rbp)
	movq 24(%rbp),%rax
	movq %rax,16(%rbp)
	movq 32(%rbp),%rax
	movq %rax,24(%rbp)
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	jmp _cb0Re
	.size _cb0Te, .-_cb0Te


==================== Asm code ====================
2018-03-16 16:06:00.477675855 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Te_info:
	.quad	_cb0Te
	.quad	1925
	.quad	30064771102
	.quad	Sb0HW_srt+56


==================== Asm code ====================
2018-03-16 16:06:00.478547664 UTC

.section .text
.align 8
_cb0Re:
_cb0Re:
	addq $16,%r12
	movq 32(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cb0Ss
_cb0Sr:
	testq %rax,%rax
	je _cb0SY
_cb0SB:
	addq $-16,%r12
	addq $-8,%rbp
	jmp _cb0Rj
_cb0SV:
	addq $-16,%r12
	leaq block_cb0Rj_info(%rip),%rax
	movq %rax,-8(%rbp)
	movslq %ebx,%rbx
	addq $-8,%rbp
	jmp *stg_waitRead#@gotpcrel(%rip)
_cb0SY:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call rtsSupportsBoundThreads@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb0SV
_cb0SN:
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq block_cb0SL_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -7(%r12),%rsi
	movq GHC.Event.Internal.evtRead_closure@gotpcrel(%rip),%r14
	addq $-8,%rbp
	jmp *GHC.Event.Thread.threadWaitRead1_entry@gotpcrel(%rip)
_cb0Ss:
	movq $16,904(%r13)
	leaq block_cb0Rd_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cb0Re, .-_cb0Re


==================== Asm code ====================
2018-03-16 16:06:00.479380832 UTC

.section .text
.align 8
_cb0Rd:
_cb0Rd:
	movq %rbx,40(%rbp)
	addq $8,%rbp
	jmp _cb0Re
	.size _cb0Rd, .-_cb0Rd


==================== Asm code ====================
2018-03-16 16:06:00.479899632 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Rd_info:
	.quad	_cb0Rd
	.quad	3974
	.quad	30064771102
	.quad	Sb0HW_srt+56


==================== Asm code ====================
2018-03-16 16:06:00.480435403 UTC

.section .text
.align 8
_cb0SL:
_cb0SL:
	jmp _cb0Rj
	.size _cb0SL, .-_cb0SL


==================== Asm code ====================
2018-03-16 16:06:00.481006256 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0SL_info:
	.quad	_cb0SL
	.quad	3974
	.quad	30064771102
	.quad	Sb0HW_srt+56


==================== Asm code ====================
2018-03-16 16:06:00.482274191 UTC

.section .text
.align 8
_cb0Rj:
_cb0Rj:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cb0Sv
_cb0Su:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq 24(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 48(%rbp),%rsi
	subq $8,%rsp
	movq %rax,%rdi
	xorl %eax,%eax
	movq %rdi,%r14
	movq %rcx,72(%rsp)
	movq %rdx,80(%rsp)
	movq %rsi,88(%rsp)
	call rtsSupportsBoundThreads@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb0Sy
_cb0Sx:
	leaq sat_sb0qy_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 64(%rsp),%rax
	movq %rax,-16(%r12)
	movq 72(%rsp),%rax
	movq %rax,-8(%r12)
	movq 80(%rsp),%rax
	movq %rax,(%r12)
	movq %r14,48(%rbp)
	movq %rbx,32(%rbp)
	leaq -31(%r12),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp _cb0PZ
_cb0Sy:
	leaq sat_sb0qG_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 64(%rsp),%rax
	movq %rax,-16(%r12)
	movq 72(%rsp),%rax
	movq %rax,-8(%r12)
	movq 80(%rsp),%rax
	movq %rax,(%r12)
	movq %r14,48(%rbp)
	movq %rbx,32(%rbp)
	leaq -31(%r12),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp _cb0PZ
_cb0Sv:
	movq $40,904(%r13)
	leaq block_cb0Rj_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cb0Rj, .-_cb0Rj


==================== Asm code ====================
2018-03-16 16:06:00.483165875 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Rj_info:
	.quad	_cb0Rj
	.quad	3974
	.quad	30064771102
	.quad	Sb0HW_srt+56


==================== Asm code ====================
2018-03-16 16:06:00.483900887 UTC

.section .text
.align 8
_cb0PZ:
_cb0PZ:
	addq $16,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cb0Sm
_cb0Sl:
	leaq sat_sb0pX_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq (%rbp),%rbx
	movq %rbx,(%r12)
	movq 16(%rbp),%rbx
	leaq block_cb0Qs_info(%rip),%rcx
	movq %rcx,16(%rbp)
	leaq -7(%r12),%r8
	movq %rax,%rdi
	movq %rbx,%rsi
	leaq GHC.IO.FD.$fBufferedIOFD14_closure+1(%rip),%r14
	addq $16,%rbp
	jmp *Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry@gotpcrel(%rip)
_cb0Sm:
	movq $16,904(%r13)
	leaq block_cb0PY_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb0PZ, .-_cb0PZ


==================== Asm code ====================
2018-03-16 16:06:00.484676064 UTC

.section .text
.align 8
_cb0PY:
_cb0PY:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _cb0PZ
	.size _cb0PY, .-_cb0PY


==================== Asm code ====================
2018-03-16 16:06:00.485235723 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0PY_info:
	.quad	_cb0PY
	.quad	195
	.quad	30064771102
	.quad	Sb0HW_srt+56


==================== Asm code ====================
2018-03-16 16:06:00.486256452 UTC

.section .text
.align 8
_cb0Qs:
_cb0Qs:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb0Sp
_cb0So:
	leaq sat_sb0q3_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb0Sp:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb0Qs, .-_cb0Qs


==================== Asm code ====================
2018-03-16 16:06:00.486855428 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Qs_info:
	.quad	_cb0Qs
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.491763196 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD5_closure
.type GHC.IO.FD.$fRawIOFD5_closure, @object
GHC.IO.FD.$fRawIOFD5_closure:
	.quad	GHC.IO.FD.$fRawIOFD5_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.492579282 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fRawIOFD5_entry
.type GHC.IO.FD.$fRawIOFD5_entry, @object
GHC.IO.FD.$fRawIOFD5_entry:
_cb0VO:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0W2
_cb0W3:
	leaq block_cb0VL_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rsi,%rbx
	movq %r14,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cb0VL
_cb0VM:
	movq (%rbx),%rax
	jmp *(%rax)
_cb0W2:
	leaq GHC.IO.FD.$fRawIOFD5_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fRawIOFD5_entry, .-GHC.IO.FD.$fRawIOFD5_entry


==================== Asm code ====================
2018-03-16 16:06:00.493306069 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD5_info
.type GHC.IO.FD.$fRawIOFD5_info, @object
GHC.IO.FD.$fRawIOFD5_info:
	.quad	GHC.IO.FD.$fRawIOFD5_entry
	.quad	0
	.quad	12884901902
	.quad	25769803801
	.quad	Sb0HW_srt+80


==================== Asm code ====================
2018-03-16 16:06:00.494052717 UTC

.section .text
.align 8
_cb0VL:
_cb0VL:
	leaq block_cb0VR_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cb0VR
_cb0VS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0VL, .-_cb0VL


==================== Asm code ====================
2018-03-16 16:06:00.494673717 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0VL_info:
	.quad	_cb0VL
	.quad	4
	.quad	4294967326
	.quad	Sb0HW_srt+80


==================== Asm code ====================
2018-03-16 16:06:00.495424085 UTC

.section .text
.align 8
_cb0VR:
_cb0VR:
	leaq block_cb0VW_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 32(%rbp),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _cb0VW
_cb0VX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0VR, .-_cb0VR


==================== Asm code ====================
2018-03-16 16:06:00.496067309 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0VR_info:
	.quad	_cb0VR
	.quad	325
	.quad	4294967326
	.quad	Sb0HW_srt+80


==================== Asm code ====================
2018-03-16 16:06:00.496781595 UTC

.section .text
.align 8
_cb0VW:
_cb0VW:
	leaq block_cb0W1_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 40(%rbp),%rbx
	movq %rax,40(%rbp)
	testb $7,%bl
	jne _cb0W1
_cb0W7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0VW, .-_cb0VW


==================== Asm code ====================
2018-03-16 16:06:00.497592931 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0VW_info:
	.quad	_cb0VW
	.quad	837
	.quad	4294967326
	.quad	Sb0HW_srt+80


==================== Asm code ====================
2018-03-16 16:06:00.498262091 UTC

.section .text
.align 8
_cb0W1:
_cb0W1:
	movq 40(%rbp),%r9
	movq 32(%rbp),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,40(%rbp)
	addq $40,%rbp
	jmp GHC.IO.FD.$wreadRawBufferPtr_entry
	.size _cb0W1, .-_cb0W1


==================== Asm code ====================
2018-03-16 16:06:00.49924295 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0W1_info:
	.quad	_cb0W1
	.quad	1861
	.quad	4294967326
	.quad	Sb0HW_srt+80


==================== Asm code ====================
2018-03-16 16:06:00.503206592 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD4_closure
.type GHC.IO.FD.$fRawIOFD4_closure, @object
GHC.IO.FD.$fRawIOFD4_closure:
	.quad	GHC.IO.FD.$fRawIOFD4_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.503914892 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fRawIOFD4_entry
.type GHC.IO.FD.$fRawIOFD4_entry, @object
GHC.IO.FD.$fRawIOFD4_entry:
_cb0WN:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0WW
_cb0WX:
	leaq block_cb0WK_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cb0WK
_cb0WL:
	movq (%rbx),%rax
	jmp *(%rax)
_cb0WW:
	leaq GHC.IO.FD.$fRawIOFD4_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fRawIOFD4_entry, .-GHC.IO.FD.$fRawIOFD4_entry


==================== Asm code ====================
2018-03-16 16:06:00.504576077 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD4_info
.type GHC.IO.FD.$fRawIOFD4_info, @object
GHC.IO.FD.$fRawIOFD4_info:
	.quad	GHC.IO.FD.$fRawIOFD4_entry
	.quad	0
	.quad	55834574862
	.quad	17179869207
	.quad	Sb0HW_srt+80


==================== Asm code ====================
2018-03-16 16:06:00.505311401 UTC

.section .text
.align 8
_cb0WK:
_cb0WK:
	leaq block_cb0WQ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cb0WQ
_cb0WR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0WK, .-_cb0WK


==================== Asm code ====================
2018-03-16 16:06:00.505945286 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0WK_info:
	.quad	_cb0WK
	.quad	2
	.quad	21474836510
	.quad	Sb0HW_srt+80


==================== Asm code ====================
2018-03-16 16:06:00.506670241 UTC

.section .text
.align 8
_cb0WQ:
_cb0WQ:
	leaq block_cb0WV_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _cb0WV
_cb0X0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb0WQ, .-_cb0WQ


==================== Asm code ====================
2018-03-16 16:06:00.507313075 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0WQ_info:
	.quad	_cb0WQ
	.quad	195
	.quad	21474836510
	.quad	Sb0HW_srt+80


==================== Asm code ====================
2018-03-16 16:06:00.50796328 UTC

.section .text
.align 8
_cb0WV:
_cb0WV:
	xorl %r9d,%r9d
	movq 24(%rbp),%r8
	movq 8(%rbp),%rdi
	movq 16(%rbp),%rsi
	leaq GHC.IO.FD.$fBufferedIOFD12_closure(%rip),%r14
	movq 7(%rbx),%rax
	movq %rax,24(%rbp)
	addq $24,%rbp
	jmp GHC.IO.FD.$wreadRawBufferPtr_entry
	.size _cb0WV, .-_cb0WV


==================== Asm code ====================
2018-03-16 16:06:00.508575749 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0WV_info:
	.quad	_cb0WV
	.quad	451
	.quad	21474836510
	.quad	Sb0HW_srt+80


==================== Asm code ====================
2018-03-16 16:06:00.524284419 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$wwriteRawBufferPtr_closure
.type GHC.IO.FD.$wwriteRawBufferPtr_closure, @object
GHC.IO.FD.$wwriteRawBufferPtr_closure:
	.quad	GHC.IO.FD.$wwriteRawBufferPtr_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.525489658 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wwriteRawBufferPtr_slow
.type GHC.IO.FD.$wwriteRawBufferPtr_slow, @object
GHC.IO.FD.$wwriteRawBufferPtr_slow:
_cb0Xv:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.FD.$wwriteRawBufferPtr_entry
	.size GHC.IO.FD.$wwriteRawBufferPtr_slow, .-GHC.IO.FD.$wwriteRawBufferPtr_slow


==================== Asm code ====================
2018-03-16 16:06:00.52644213 UTC

.section .text
.align 8
sat_sb0rL_entry:
_cb0XO:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0XP
_cb0XQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb0XS
_cb0XR:
	movq 7(%rbx),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call rtsSupportsBoundThreads@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb0XN
_cb0XM:
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rsi
	movq GHC.Event.Internal.evtWrite_closure@gotpcrel(%rip),%r14
	jmp *GHC.Event.Thread.threadWaitRead1_entry@gotpcrel(%rip)
_cb0XS:
	movq $16,904(%r13)
_cb0XP:
	jmp *-8(%r13)
_cb0XN:
	addq $-16,%r12
	leaq block_cb0Y2_info(%rip),%rax
	movq %rax,-8(%rbp)
	movslq %ebx,%rbx
	addq $-8,%rbp
	jmp *stg_waitWrite#@gotpcrel(%rip)
	.size sat_sb0rL_entry, .-sat_sb0rL_entry


==================== Asm code ====================
2018-03-16 16:06:00.527177848 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0rL_info:
	.quad	sat_sb0rL_entry
	.quad	4294967296
	.quad	279172874250
	.quad	4294967299
	.quad	Sb0HW_srt+64


==================== Asm code ====================
2018-03-16 16:06:00.527817495 UTC

.section .text
.align 8
_cb0Y2:
_cb0Y2:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb0Y2, .-_cb0Y2


==================== Asm code ====================
2018-03-16 16:06:00.528346856 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Y2_info:
	.quad	_cb0Y2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.529068432 UTC

.section .text
.align 8
sat_sb0rS_entry:
_cb0Ye:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0Yl
_cb0Ym:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cb0Yb_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cb0Yb
_cb0Yc:
	movq (%rbx),%rax
	jmp *(%rax)
_cb0Yl:
	jmp *-16(%r13)
	.size sat_sb0rS_entry, .-sat_sb0rS_entry


==================== Asm code ====================
2018-03-16 16:06:00.529711145 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0rS_info:
	.quad	sat_sb0rS_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:00.530404512 UTC

.section .text
.align 8
_cb0Yb:
_cb0Yb:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb0Yp
_cb0Yo:
	movq 7(%rbx),%rax
	movslq %eax,%rax
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb0Yp:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb0Yb, .-_cb0Yb


==================== Asm code ====================
2018-03-16 16:06:00.530998596 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Yb_info:
	.quad	_cb0Yb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.531753915 UTC

.section .text
.align 8
sat_sb0s1_entry:
_cb0YA:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb0YK
_cb0YJ:
	subq $8,%rsp
	leaq 23(%rbx),%rax
	movq 15(%rbx),%rsi
	addq (%rax),%rsi
	movq 7(%rbx),%rdi
	movq 31(%rbx),%rdx
	xorl %eax,%eax
	call ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite@plt
	addq $8,%rsp
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cb0YK:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_sb0s1_entry, .-sat_sb0s1_entry


==================== Asm code ====================
2018-03-16 16:06:00.532467726 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0s1_info:
	.quad	sat_sb0s1_entry
	.quad	17179869184
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:00.533572697 UTC

.section .text
.align 8
sat_sb0sk_entry:
_cb0Z6:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0Zf
_cb0Zg:
	leaq block_cb0Zc_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	movq 7(%rbx),%rax
	leaq 23(%rbx),%rcx
	movq 15(%rbx),%rdx
	addq (%rcx),%rdx
	movq 31(%rbx),%rbx
	movq 872(%r13),%rcx
	movq 24(%rcx),%rsi
	movq %rbp,16(%rsi)
	movq 888(%r13),%rsi
	leaq 8(%r12),%rdi
	movq %rdi,8(%rsi)
	leaq 8(%r12),%rdi
	subq (%rsi),%rdi
	movq 104(%rcx),%rsi
	subq %rdi,%rsi
	movq %rsi,104(%rcx)
	subq $8,%rsp
	movq %r13,%rdi
	xorl %esi,%esi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call suspendThread@plt
	addq $8,%rsp
	subq $8,%rsp
	movq 72(%rsp),%rcx
	movq %rbx,%rdx
	movq %r14,%rdi
	movq %rcx,%rsi
	movq %rax,%rbx
	xorl %eax,%eax
	call ghczuwrapperZC19ZCbaseZCSystemziPosixziInternalsZCwrite@plt
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call resumeThread@plt
	addq $8,%rsp
	movq %rax,%r13
	movq 872(%r13),%rax
	movq 24(%rax),%rcx
	movq 16(%rcx),%rbp
	leaq 192(%rcx),%r15
	movq $0,904(%r13)
	movq 888(%r13),%rcx
	movq 8(%rcx),%rdx
	leaq -8(%rdx),%r12
	movq (%rcx),%rsi
	movslq 48(%rcx),%rcx
	shlq $12,%rcx
	decq %rcx
	movq %rsi,%rdi
	addq %rcx,%rdi
	movq %rdi,856(%r13)
	subq %rsi,%rdx
	movq 104(%rax),%rcx
	addq %rdx,%rcx
	movq %rcx,104(%rax)
	movq (%rbp),%rax
	jmp *(%rax)
_cb0Zf:
	jmp *-8(%r13)
	.size sat_sb0sk_entry, .-sat_sb0sk_entry


==================== Asm code ====================
2018-03-16 16:06:00.53451009 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0sk_info:
	.quad	sat_sb0sk_entry
	.quad	17179869184
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:00.535223672 UTC

.section .text
.align 8
_cb0Zc:
_cb0Zc:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb0Zj
_cb0Zi:
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb0Zj:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cb0Zc, .-_cb0Zc


==================== Asm code ====================
2018-03-16 16:06:00.53587458 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Zc_info:
	.quad	_cb0Zc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.536633782 UTC

.section .text
.align 8
sat_sb0ss_entry:
_cb0ZC:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb0ZM
_cb0ZL:
	subq $8,%rsp
	leaq 23(%rbx),%rax
	movq 15(%rbx),%rsi
	addq (%rax),%rsi
	movq 7(%rbx),%rdi
	movq 31(%rbx),%rdx
	xorl %eax,%eax
	call ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite@plt
	addq $8,%rsp
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cb0ZM:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_sb0ss_entry, .-sat_sb0ss_entry


==================== Asm code ====================
2018-03-16 16:06:00.537414235 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0ss_info:
	.quad	sat_sb0ss_entry
	.quad	17179869184
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:00.538822985 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wwriteRawBufferPtr_entry
.type GHC.IO.FD.$wwriteRawBufferPtr_entry, @object
GHC.IO.FD.$wwriteRawBufferPtr_entry:
_cb0ZQ:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cb0ZR
_cb0ZS:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cb0ZU
_cb0ZT:
	testq %rdi,%rdi
	je _cb0ZP
_cb0ZO:
	leaq sat_sb0s1_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %rsi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	movq %rsi,-16(%rbp)
	leaq -31(%r12),%rax
	movq %rax,-8(%rbp)
	movq %r14,(%rbp)
	addq $-16,%rbp
	jmp _cb0XC
_ub10K:
	movq %r14,-32(%rbp)
	movq %rbx,-24(%rbp)
	movq 64(%rsp),%rax
	movq %rax,-16(%rbp)
	movq 72(%rsp),%rax
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp _cb0YU
_cb0ZP:
	subq $8,%rsp
	movq %rsi,%rdi
	movq %rsi,%rax
	movl $1,%esi
	xorl %edx,%edx
	xorl %ecx,%ecx
	movq %rax,%rbx
	xorl %eax,%eax
	movq %r8,72(%rsp)
	movq %r9,80(%rsp)
	call fdReady@plt
	addq $8,%rsp
	addq $-40,%r12
	movslq %eax,%rax
	testq %rax,%rax
	jne _ub10K
_ub10J:
	movq %r14,-40(%rbp)
	movq %rbx,-32(%rbp)
	movq 64(%rsp),%rbx
	movq %rbx,-24(%rbp)
	movq 72(%rsp),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp _cb10j
_cb0ZU:
	movq $40,904(%r13)
_cb0ZR:
	leaq GHC.IO.FD.$wwriteRawBufferPtr_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.FD.$wwriteRawBufferPtr_entry, .-GHC.IO.FD.$wwriteRawBufferPtr_entry


==================== Asm code ====================
2018-03-16 16:06:00.539752426 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$wwriteRawBufferPtr_info
.type GHC.IO.FD.$wwriteRawBufferPtr_info, @object
GHC.IO.FD.$wwriteRawBufferPtr_info:
	.quad	GHC.IO.FD.$wwriteRawBufferPtr_entry
	.quad	0
	.quad	837518622734
	.quad	30064771072
	.quad	Sb0HW_srt+64
	.quad	3974
	.quad	GHC.IO.FD.$wwriteRawBufferPtr_slow


==================== Asm code ====================
2018-03-16 16:06:00.540705107 UTC

.section .text
.align 8
_cb10j:
_cb10j:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb10n
_cb10m:
	movq (%rbp),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	subq $8,%rsp
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rsi,%r14
	movq %rcx,72(%rsp)
	movq %rdx,80(%rsp)
	call rtsSupportsBoundThreads@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb10F
_cb10x:
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq block_cb10v_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -7(%r12),%rsi
	movq GHC.Event.Internal.evtWrite_closure@gotpcrel(%rip),%r14
	addq $-8,%rbp
	jmp *GHC.Event.Thread.threadWaitRead1_entry@gotpcrel(%rip)
_cb10F:
	addq $-16,%r12
	leaq block_cb0YU_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movslq %ebx,%rbx
	movq %r14,8(%rbp)
	movq %rax,16(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	movq 72(%rsp),%rax
	movq %rax,32(%rbp)
	jmp *stg_waitWrite#@gotpcrel(%rip)
_cb10n:
	movq $16,904(%r13)
	leaq block_cb10h_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 32(%rbp),%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cb10j, .-_cb10j


==================== Asm code ====================
2018-03-16 16:06:00.541652215 UTC

.section .text
.align 8
_cb10h:
_cb10h:
	movq %rbx,40(%rbp)
	addq $8,%rbp
	jmp _cb10j
	.size _cb10h, .-_cb10h


==================== Asm code ====================
2018-03-16 16:06:00.542224692 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb10h_info:
	.quad	_cb10h
	.quad	3974
	.quad	287762808862
	.quad	Sb0HW_srt+64


==================== Asm code ====================
2018-03-16 16:06:00.542880259 UTC

.section .text
.align 8
_cb10v:
_cb10v:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rbx
	movq %rbx,16(%rbp)
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	movq 32(%rbp),%rax
	movq %rbx,32(%rbp)
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _cb0YU
	.size _cb10v, .-_cb10v


==================== Asm code ====================
2018-03-16 16:06:00.54343902 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb10v_info:
	.quad	_cb10v
	.quad	3974
	.quad	287762808862
	.quad	Sb0HW_srt+64


==================== Asm code ====================
2018-03-16 16:06:00.544341381 UTC

.section .text
.align 8
_cb0YU:
_cb0YU:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cb103
_cb102:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq 24(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 40(%rbp),%rsi
	subq $8,%rsp
	movq %rax,%rdi
	xorl %eax,%eax
	movq %rdi,%r14
	movq %rcx,72(%rsp)
	movq %rdx,80(%rsp)
	movq %rsi,88(%rsp)
	call rtsSupportsBoundThreads@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb106
_cb105:
	leaq sat_sb0sk_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 64(%rsp),%rax
	movq %rax,-16(%r12)
	movq 72(%rsp),%rax
	movq %rax,-8(%r12)
	movq 80(%rsp),%rax
	movq %rax,(%r12)
	movq %r14,40(%rbp)
	movq %rbx,24(%rbp)
	leaq -31(%r12),%rax
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp _cb0XC
_cb106:
	leaq sat_sb0ss_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 64(%rsp),%rax
	movq %rax,-16(%r12)
	movq 72(%rsp),%rax
	movq %rax,-8(%r12)
	movq 80(%rsp),%rax
	movq %rax,(%r12)
	movq %r14,40(%rbp)
	movq %rbx,24(%rbp)
	leaq -31(%r12),%rax
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp _cb0XC
_cb103:
	movq $40,904(%r13)
	leaq block_cb0YU_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cb0YU, .-_cb0YU


==================== Asm code ====================
2018-03-16 16:06:00.545194479 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0YU_info:
	.quad	_cb0YU
	.quad	1925
	.quad	287762808862
	.quad	Sb0HW_srt+64


==================== Asm code ====================
2018-03-16 16:06:00.546049286 UTC

.section .text
.align 8
_cb0XC:
_cb0XC:
	addq $16,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cb0ZX
_cb0ZW:
	leaq sat_sb0rL_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq (%rbp),%rbx
	movq %rbx,(%r12)
	movq 16(%rbp),%rbx
	leaq block_cb0Y5_info(%rip),%rcx
	movq %rcx,16(%rbp)
	leaq -7(%r12),%r8
	movq %rax,%rdi
	movq %rbx,%rsi
	leaq GHC.IO.FD.$fBufferedIOFD14_closure+1(%rip),%r14
	addq $16,%rbp
	jmp *Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry@gotpcrel(%rip)
_cb0ZX:
	movq $16,904(%r13)
	leaq block_cb0XB_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb0XC, .-_cb0XC


==================== Asm code ====================
2018-03-16 16:06:00.546799571 UTC

.section .text
.align 8
_cb0XB:
_cb0XB:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _cb0XC
	.size _cb0XB, .-_cb0XB


==================== Asm code ====================
2018-03-16 16:06:00.547392977 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0XB_info:
	.quad	_cb0XB
	.quad	195
	.quad	287762808862
	.quad	Sb0HW_srt+64


==================== Asm code ====================
2018-03-16 16:06:00.548109979 UTC

.section .text
.align 8
_cb0Y5:
_cb0Y5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb100
_cb0ZZ:
	leaq sat_sb0rS_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb100:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb0Y5, .-_cb0Y5


==================== Asm code ====================
2018-03-16 16:06:00.548724988 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb0Y5_info:
	.quad	_cb0Y5
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.554026973 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.writeRawBufferPtr1_closure
.type GHC.IO.FD.writeRawBufferPtr1_closure, @object
GHC.IO.FD.writeRawBufferPtr1_closure:
	.quad	GHC.IO.FD.writeRawBufferPtr1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.554814562 UTC

.section .text
.align 8
.globl GHC.IO.FD.writeRawBufferPtr1_entry
.type GHC.IO.FD.writeRawBufferPtr1_entry, @object
GHC.IO.FD.writeRawBufferPtr1_entry:
_cb12V:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cb139
_cb13a:
	leaq block_cb12S_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rsi,%rbx
	movq %r14,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cb12S
_cb12T:
	movq (%rbx),%rax
	jmp *(%rax)
_cb139:
	leaq GHC.IO.FD.writeRawBufferPtr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.writeRawBufferPtr1_entry, .-GHC.IO.FD.writeRawBufferPtr1_entry


==================== Asm code ====================
2018-03-16 16:06:00.555497927 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.writeRawBufferPtr1_info
.type GHC.IO.FD.writeRawBufferPtr1_info, @object
GHC.IO.FD.writeRawBufferPtr1_info:
	.quad	GHC.IO.FD.writeRawBufferPtr1_entry
	.quad	0
	.quad	12884901902
	.quad	25769803801
	.quad	Sb0HW_srt+120


==================== Asm code ====================
2018-03-16 16:06:00.55617557 UTC

.section .text
.align 8
_cb12S:
_cb12S:
	leaq block_cb12Y_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cb12Y
_cb12Z:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb12S, .-_cb12S


==================== Asm code ====================
2018-03-16 16:06:00.556746517 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb12S_info:
	.quad	_cb12S
	.quad	4
	.quad	4294967326
	.quad	Sb0HW_srt+120


==================== Asm code ====================
2018-03-16 16:06:00.557838657 UTC

.section .text
.align 8
_cb12Y:
_cb12Y:
	leaq block_cb133_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 32(%rbp),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _cb133
_cb134:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb12Y, .-_cb12Y


==================== Asm code ====================
2018-03-16 16:06:00.5584523 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb12Y_info:
	.quad	_cb12Y
	.quad	325
	.quad	4294967326
	.quad	Sb0HW_srt+120


==================== Asm code ====================
2018-03-16 16:06:00.559114917 UTC

.section .text
.align 8
_cb133:
_cb133:
	leaq block_cb138_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 40(%rbp),%rbx
	movq %rax,40(%rbp)
	testb $7,%bl
	jne _cb138
_cb13e:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb133, .-_cb133


==================== Asm code ====================
2018-03-16 16:06:00.559714622 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb133_info:
	.quad	_cb133
	.quad	837
	.quad	4294967326
	.quad	Sb0HW_srt+120


==================== Asm code ====================
2018-03-16 16:06:00.560366322 UTC

.section .text
.align 8
_cb138:
_cb138:
	movq 40(%rbp),%r9
	movq 32(%rbp),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,40(%rbp)
	addq $40,%rbp
	jmp GHC.IO.FD.$wwriteRawBufferPtr_entry
	.size _cb138, .-_cb138


==================== Asm code ====================
2018-03-16 16:06:00.560998839 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb138_info:
	.quad	_cb138
	.quad	1861
	.quad	4294967326
	.quad	Sb0HW_srt+120


==================== Asm code ====================
2018-03-16 16:06:00.566029303 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$wfdWrite_closure
.type GHC.IO.FD.$wfdWrite_closure, @object
GHC.IO.FD.$wfdWrite_closure:
	.quad	GHC.IO.FD.$wfdWrite_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.566690122 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wfdWrite_slow
.type GHC.IO.FD.$wfdWrite_slow, @object
GHC.IO.FD.$wfdWrite_slow:
_cb13O:
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.FD.$wfdWrite_entry
	.size GHC.IO.FD.$wfdWrite_slow, .-GHC.IO.FD.$wfdWrite_slow


==================== Asm code ====================
2018-03-16 16:06:00.567435796 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wfdWrite_entry
.type GHC.IO.FD.$wfdWrite_entry, @object
GHC.IO.FD.$wfdWrite_entry:
_cb13U:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cb13Z
_ub14i:
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp _cb13P
_cb13Z:
	leaq GHC.IO.FD.$wfdWrite_closure(%rip),%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
	.size GHC.IO.FD.$wfdWrite_entry, .-GHC.IO.FD.$wfdWrite_entry


==================== Asm code ====================
2018-03-16 16:06:00.568121259 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$wfdWrite_info
.type GHC.IO.FD.$wfdWrite_info, @object
GHC.IO.FD.$wfdWrite_info:
	.quad	GHC.IO.FD.$wfdWrite_entry
	.quad	0
	.quad	55834574862
	.quad	21474836480
	.quad	Sb0HW_srt+120
	.quad	964
	.quad	GHC.IO.FD.$wfdWrite_slow


==================== Asm code ====================
2018-03-16 16:06:00.568829698 UTC

.section .text
.align 8
_cb13P:
_cb13P:
	leaq block_cb13W_info(%rip),%rax
	movq %rax,-8(%rbp)
	xorl %r9d,%r9d
	movq 16(%rbp),%r8
	movq 8(%rbp),%rdi
	movq (%rbp),%rsi
	leaq lvl1_raWUY_closure(%rip),%r14
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.FD.$wwriteRawBufferPtr_entry
	.size _cb13P, .-_cb13P


==================== Asm code ====================
2018-03-16 16:06:00.569633924 UTC

.section .text
.align 8
_cb13W:
_cb13W:
	leaq block_cb13Y_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cb13Y
_cb142:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb13W, .-_cb13W


==================== Asm code ====================
2018-03-16 16:06:00.570237922 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb13W_info:
	.quad	_cb13W
	.quad	964
	.quad	38654705694
	.quad	Sb0HW_srt+120


==================== Asm code ====================
2018-03-16 16:06:00.571016222 UTC

.section .text
.align 8
_cb13Y:
_cb13Y:
	movq 32(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rax,%rbx
	jge _cb14a
_cb14b:
	movq 8(%rbp),%rcx
	movq %rcx,8(%rbp)
	movq 16(%rbp),%rcx
	movq %rcx,16(%rbp)
	movq 24(%rbp),%rcx
	addq %rbx,%rcx
	movq %rcx,24(%rbp)
	subq %rbx,%rax
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp _cb13P
_cb14a:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb13Y, .-_cb13Y


==================== Asm code ====================
2018-03-16 16:06:00.571672318 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb13Y_info:
	.quad	_cb13Y
	.quad	964
	.quad	38654705694
	.quad	Sb0HW_srt+120


==================== Asm code ====================
2018-03-16 16:06:00.57624011 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD2_closure
.type GHC.IO.FD.$fRawIOFD2_closure, @object
GHC.IO.FD.$fRawIOFD2_closure:
	.quad	GHC.IO.FD.$fRawIOFD2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.57700668 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fRawIOFD2_entry
.type GHC.IO.FD.$fRawIOFD2_entry, @object
GHC.IO.FD.$fRawIOFD2_entry:
_cb14V:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cb154
_cb155:
	leaq block_cb14S_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cb14S
_cb14T:
	movq (%rbx),%rax
	jmp *(%rax)
_cb154:
	leaq GHC.IO.FD.$fRawIOFD2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fRawIOFD2_entry, .-GHC.IO.FD.$fRawIOFD2_entry


==================== Asm code ====================
2018-03-16 16:06:00.578056932 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD2_info
.type GHC.IO.FD.$fRawIOFD2_info, @object
GHC.IO.FD.$fRawIOFD2_info:
	.quad	GHC.IO.FD.$fRawIOFD2_entry
	.quad	0
	.quad	21474836494
	.quad	17179869207
	.quad	Sb0HW_srt+136


==================== Asm code ====================
2018-03-16 16:06:00.57881031 UTC

.section .text
.align 8
_cb14S:
_cb14S:
	leaq block_cb14Y_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cb14Y
_cb14Z:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb14S, .-_cb14S


==================== Asm code ====================
2018-03-16 16:06:00.579461187 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb14S_info:
	.quad	_cb14S
	.quad	2
	.quad	4294967326
	.quad	Sb0HW_srt+136


==================== Asm code ====================
2018-03-16 16:06:00.580132682 UTC

.section .text
.align 8
_cb14Y:
_cb14Y:
	leaq block_cb153_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _cb153
_cb158:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb14Y, .-_cb14Y


==================== Asm code ====================
2018-03-16 16:06:00.580740824 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb14Y_info:
	.quad	_cb14Y
	.quad	195
	.quad	4294967326
	.quad	Sb0HW_srt+136


==================== Asm code ====================
2018-03-16 16:06:00.581403946 UTC

.section .text
.align 8
_cb153:
_cb153:
	movq 7(%rbx),%r8
	movq 24(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.FD.$wfdWrite_entry
	.size _cb153, .-_cb153


==================== Asm code ====================
2018-03-16 16:06:00.581927557 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb153_info:
	.quad	_cb153
	.quad	451
	.quad	4294967326
	.quad	Sb0HW_srt+136


==================== Asm code ====================
2018-03-16 16:06:00.594988838 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$cwriteNonBlocking_closure
.type GHC.IO.FD.$w$cwriteNonBlocking_closure, @object
GHC.IO.FD.$w$cwriteNonBlocking_closure:
	.quad	GHC.IO.FD.$w$cwriteNonBlocking_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.595714043 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cwriteNonBlocking_slow
.type GHC.IO.FD.$w$cwriteNonBlocking_slow, @object
GHC.IO.FD.$w$cwriteNonBlocking_slow:
_cb15B:
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.FD.$w$cwriteNonBlocking_entry
	.size GHC.IO.FD.$w$cwriteNonBlocking_slow, .-GHC.IO.FD.$w$cwriteNonBlocking_slow


==================== Asm code ====================
2018-03-16 16:06:00.596552809 UTC

.section .text
.align 8
sat_sb0tx_entry:
_cb15O:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb15Y
_cb15X:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 23(%rbx),%rdx
	xorl %eax,%eax
	call ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite@plt
	addq $8,%rsp
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cb15Y:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_sb0tx_entry, .-sat_sb0tx_entry


==================== Asm code ====================
2018-03-16 16:06:00.597210463 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0tx_info:
	.quad	sat_sb0tx_entry
	.quad	12884901888
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:00.598490416 UTC

.section .text
.align 8
sat_sb0tX_entry:
_cb16l:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb16u
_cb16v:
	leaq block_cb16r_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq 872(%r13),%rdx
	movq 24(%rdx),%rsi
	movq %rbp,16(%rsi)
	movq 888(%r13),%rsi
	leaq 8(%r12),%rdi
	movq %rdi,8(%rsi)
	leaq 8(%r12),%rdi
	subq (%rsi),%rdi
	movq 104(%rdx),%rsi
	subq %rdi,%rsi
	movq %rsi,104(%rdx)
	subq $8,%rsp
	movq %r13,%rdi
	xorl %esi,%esi
	movq %rax,%rdx
	xorl %eax,%eax
	movq %rdx,%r14
	movq %rcx,72(%rsp)
	call suspendThread@plt
	addq $8,%rsp
	subq $8,%rsp
	movq 72(%rsp),%rcx
	movq %rbx,%rdx
	movq %r14,%rdi
	movq %rcx,%rsi
	movq %rax,%rbx
	xorl %eax,%eax
	call ghczuwrapperZC19ZCbaseZCSystemziPosixziInternalsZCwrite@plt
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call resumeThread@plt
	addq $8,%rsp
	movq %rax,%r13
	movq 872(%r13),%rax
	movq 24(%rax),%rcx
	movq 16(%rcx),%rbp
	leaq 192(%rcx),%r15
	movq $0,904(%r13)
	movq 888(%r13),%rcx
	movq 8(%rcx),%rdx
	leaq -8(%rdx),%r12
	movq (%rcx),%rsi
	movslq 48(%rcx),%rcx
	shlq $12,%rcx
	decq %rcx
	movq %rsi,%rdi
	addq %rcx,%rdi
	movq %rdi,856(%r13)
	subq %rsi,%rdx
	movq 104(%rax),%rcx
	addq %rdx,%rcx
	movq %rcx,104(%rax)
	movq (%rbp),%rax
	jmp *(%rax)
_cb16u:
	jmp *-8(%r13)
	.size sat_sb0tX_entry, .-sat_sb0tX_entry


==================== Asm code ====================
2018-03-16 16:06:00.599381763 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0tX_info:
	.quad	sat_sb0tX_entry
	.quad	12884901888
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:00.600093557 UTC

.section .text
.align 8
_cb16r:
_cb16r:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb16y
_cb16x:
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb16y:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cb16r, .-_cb16r


==================== Asm code ====================
2018-03-16 16:06:00.600726737 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb16r_info:
	.quad	_cb16r
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.601605011 UTC

.section .text
.align 8
sat_sb0ud_entry:
_cb16R:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb171
_cb170:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 23(%rbx),%rdx
	xorl %eax,%eax
	call ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite@plt
	addq $8,%rsp
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cb171:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_sb0ud_entry, .-sat_sb0ud_entry


==================== Asm code ====================
2018-03-16 16:06:00.602268324 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0ud_info:
	.quad	sat_sb0ud_entry
	.quad	12884901888
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:00.603291191 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cwriteNonBlocking_entry
.type GHC.IO.FD.$w$cwriteNonBlocking_entry, @object
GHC.IO.FD.$w$cwriteNonBlocking_entry:
_cb175:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cb176
_cb177:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cb179
_cb178:
	testq %rsi,%rsi
	je _cb174
_cb173:
	leaq sat_sb0tx_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	leaq block_cb17a_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.IO.FD.$fBufferedIOFD3_closure+1(%rip),%rdi
	leaq -23(%r12),%rsi
	leaq GHC.IO.FD.$fBufferedIOFD_loc_closure(%rip),%r14
	addq $-8,%rbp
	jmp GHC.IO.FD.$fBufferedIOFD5_entry
_ub18n:
	movq %r14,-32(%rbp)
	movq %rbx,-24(%rbp)
	movq 64(%rsp),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp _cb169
_cb174:
	subq $8,%rsp
	movq %rdi,%rax
	movq %r14,%rdi
	movl $1,%esi
	xorl %edx,%edx
	xorl %ecx,%ecx
	movq %rax,%rbx
	xorl %eax,%eax
	movq %r8,72(%rsp)
	call fdReady@plt
	addq $8,%rsp
	addq $-32,%r12
	movslq %eax,%rax
	testq %rax,%rax
	jne _ub18n
_cb18i:
	leaq GHC.IO.FD.$fBufferedIOFD2_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cb179:
	movq $32,904(%r13)
_cb176:
	leaq GHC.IO.FD.$w$cwriteNonBlocking_closure(%rip),%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
	.size GHC.IO.FD.$w$cwriteNonBlocking_entry, .-GHC.IO.FD.$w$cwriteNonBlocking_entry


==================== Asm code ====================
2018-03-16 16:06:00.604668014 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$cwriteNonBlocking_info
.type GHC.IO.FD.$w$cwriteNonBlocking_info, @object
GHC.IO.FD.$w$cwriteNonBlocking_info:
	.quad	GHC.IO.FD.$w$cwriteNonBlocking_entry
	.quad	0
	.quad	6755403736023054
	.quad	21474836480
	.quad	Sb0HW_srt+8
	.quad	964
	.quad	GHC.IO.FD.$w$cwriteNonBlocking_slow


==================== Asm code ====================
2018-03-16 16:06:00.605706605 UTC

.section .text
.align 8
_cb169:
_cb169:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cb17y
_cb17x:
	movq (%rbp),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	subq $8,%rsp
	movq %rax,%rdx
	xorl %eax,%eax
	movq %rdx,%r14
	movq %rcx,72(%rsp)
	call rtsSupportsBoundThreads@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb17Y
_cb17D:
	leaq sat_sb0tX_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-16(%r12)
	movq %rbx,-8(%r12)
	movq 64(%rsp),%rax
	movq %rax,(%r12)
	leaq block_cb17z_info(%rip),%rax
	movq %rax,24(%rbp)
	leaq GHC.IO.FD.$fBufferedIOFD3_closure+1(%rip),%rdi
	leaq -23(%r12),%rsi
	leaq GHC.IO.FD.$fBufferedIOFD_loc_closure(%rip),%r14
	addq $24,%rbp
	jmp GHC.IO.FD.$fBufferedIOFD5_entry
_cb17Y:
	leaq sat_sb0ud_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-16(%r12)
	movq %rbx,-8(%r12)
	movq 64(%rsp),%rax
	movq %rax,(%r12)
	leaq block_cb17V_info(%rip),%rax
	movq %rax,24(%rbp)
	leaq GHC.IO.FD.$fBufferedIOFD3_closure+1(%rip),%rdi
	leaq -23(%r12),%rsi
	leaq GHC.IO.FD.$fBufferedIOFD_loc_closure(%rip),%r14
	addq $24,%rbp
	jmp GHC.IO.FD.$fBufferedIOFD5_entry
_cb17y:
	movq $32,904(%r13)
	leaq block_cb168_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cb169, .-_cb169


==================== Asm code ====================
2018-03-16 16:06:00.606601911 UTC

.section .text
.align 8
_cb168:
_cb168:
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp _cb169
	.size _cb168, .-_cb168


==================== Asm code ====================
2018-03-16 16:06:00.607167121 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb168_info:
	.quad	_cb168
	.quad	964
	.quad	4503603922337822
	.quad	Sb0HW_srt+8


==================== Asm code ====================
2018-03-16 16:06:00.607834978 UTC

.section .text
.align 8
_cb17V:
_cb17V:
	leaq block_cb17X_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cb17X
_cb180:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb17V, .-_cb17V


==================== Asm code ====================
2018-03-16 16:06:00.60839268 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb17V_info:
	.quad	_cb17V
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.609124671 UTC

.section .text
.align 8
_cb17X:
_cb17X:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb186
_cb185:
	movq 7(%rbx),%rax
	cmpq $-1,%rax
	jne _cb18e
_ub18q:
	addq $8,%rbp
	jmp _cb18f
_cb18e:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb186:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb17X, .-_cb17X


==================== Asm code ====================
2018-03-16 16:06:00.609911893 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb17X_info:
	.quad	_cb17X
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.610592504 UTC

.section .text
.align 8
_cb17z:
_cb17z:
	leaq block_cb17B_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cb17B
_cb17F:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb17z, .-_cb17z


==================== Asm code ====================
2018-03-16 16:06:00.611202666 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb17z_info:
	.quad	_cb17z
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.611940972 UTC

.section .text
.align 8
_cb17B:
_cb17B:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb17L
_cb17K:
	movq 7(%rbx),%rax
	cmpq $-1,%rax
	jne _cb17T
_ub18p:
	addq $8,%rbp
	jmp _cb18f
_cb17T:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb17L:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb17B, .-_cb17B


==================== Asm code ====================
2018-03-16 16:06:00.612574125 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb17B_info:
	.quad	_cb17B
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.613223849 UTC

.section .text
.align 8
_cb17a:
_cb17a:
	leaq block_cb17c_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cb17c
_cb17e:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb17a, .-_cb17a


==================== Asm code ====================
2018-03-16 16:06:00.613948052 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb17a_info:
	.quad	_cb17a
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.614697395 UTC

.section .text
.align 8
_cb17c:
_cb17c:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb17k
_cb17j:
	movq 7(%rbx),%rax
	cmpq $-1,%rax
	jne _cb17s
_ub18m:
	addq $8,%rbp
	jmp _cb18f
_cb17s:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb17k:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb17c, .-_cb17c


==================== Asm code ====================
2018-03-16 16:06:00.615375065 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb17c_info:
	.quad	_cb17c
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.615985804 UTC

.section .text
.align 8
_cb18f:
_cb18f:
	addq $-16,%r12
	leaq GHC.IO.FD.$fBufferedIOFD2_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb18f, .-_cb18f


==================== Asm code ====================
2018-03-16 16:06:00.620428317 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD1_closure
.type GHC.IO.FD.$fRawIOFD1_closure, @object
GHC.IO.FD.$fRawIOFD1_closure:
	.quad	GHC.IO.FD.$fRawIOFD1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.621204206 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fRawIOFD1_entry
.type GHC.IO.FD.$fRawIOFD1_entry, @object
GHC.IO.FD.$fRawIOFD1_entry:
_cb1ab:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1ak
_cb1al:
	leaq block_cb1a8_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cb1a8
_cb1a9:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1ak:
	leaq GHC.IO.FD.$fRawIOFD1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fRawIOFD1_entry, .-GHC.IO.FD.$fRawIOFD1_entry


==================== Asm code ====================
2018-03-16 16:06:00.621944762 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD1_info
.type GHC.IO.FD.$fRawIOFD1_info, @object
GHC.IO.FD.$fRawIOFD1_info:
	.quad	GHC.IO.FD.$fRawIOFD1_entry
	.quad	0
	.quad	21474836494
	.quad	17179869207
	.quad	Sb0HW_srt+160


==================== Asm code ====================
2018-03-16 16:06:00.622689823 UTC

.section .text
.align 8
_cb1a8:
_cb1a8:
	leaq block_cb1ae_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1ae
_cb1af:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1a8, .-_cb1a8


==================== Asm code ====================
2018-03-16 16:06:00.623316634 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1a8_info:
	.quad	_cb1a8
	.quad	2
	.quad	4294967326
	.quad	Sb0HW_srt+160


==================== Asm code ====================
2018-03-16 16:06:00.624030542 UTC

.section .text
.align 8
_cb1ae:
_cb1ae:
	leaq block_cb1aj_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _cb1aj
_cb1ao:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1ae, .-_cb1ae


==================== Asm code ====================
2018-03-16 16:06:00.624649074 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1ae_info:
	.quad	_cb1ae
	.quad	195
	.quad	4294967326
	.quad	Sb0HW_srt+160


==================== Asm code ====================
2018-03-16 16:06:00.625382971 UTC

.section .text
.align 8
_cb1aj:
_cb1aj:
	movq 7(%rbx),%r8
	movq 24(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.FD.$w$cwriteNonBlocking_entry
	.size _cb1aj, .-_cb1aj


==================== Asm code ====================
2018-03-16 16:06:00.625970611 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1aj_info:
	.quad	_cb1aj
	.quad	451
	.quad	4294967326
	.quad	Sb0HW_srt+160


==================== Asm code ====================
2018-03-16 16:06:00.627791752 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fRawIOFD_closure
.type GHC.IO.FD.$fRawIOFD_closure, @object
GHC.IO.FD.$fRawIOFD_closure:
	.quad	GHC.IO.Device.C:RawIO_con_info
	.quad	GHC.IO.FD.$fRawIOFD4_closure+4
	.quad	GHC.IO.FD.$fRawIOFD3_closure+4
	.quad	GHC.IO.FD.$fRawIOFD2_closure+4
	.quad	GHC.IO.FD.$fRawIOFD1_closure+4
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.632813398 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_closure
.type GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_closure, @object
GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.633629518 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_entry
.type GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_entry, @object
GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_entry:
_cb1aY:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1bg
_cb1bh:
	leaq block_cb1aV_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cb1aV
_cb1aW:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1bg:
	leaq GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_entry, .-GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_entry


==================== Asm code ====================
2018-03-16 16:06:00.634313208 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_info
.type GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_info, @object
GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_info:
	.quad	GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_entry
	.quad	0
	.quad	279172874254
	.quad	12884901903
	.quad	Sb0HW_srt+136


==================== Asm code ====================
2018-03-16 16:06:00.635068084 UTC

.section .text
.align 8
_cb1aV:
_cb1aV:
	leaq block_cb1b1_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cb1b1
_cb1b2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1aV, .-_cb1aV


==================== Asm code ====================
2018-03-16 16:06:00.635754365 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1aV_info:
	.quad	_cb1aV
	.quad	1
	.quad	4294967326
	.quad	Sb0HW_srt+136


==================== Asm code ====================
2018-03-16 16:06:00.636427579 UTC

.section .text
.align 8
_cb1b1:
_cb1b1:
	leaq block_cb1bc_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rax
	movq 32(%rbp),%r8
	subq %rax,%r8
	movq 48(%rbp),%rdi
	addq %rax,%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.IO.FD.$wfdWrite_entry
	.size _cb1b1, .-_cb1b1


==================== Asm code ====================
2018-03-16 16:06:00.637061912 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1b1_info:
	.quad	_cb1b1
	.quad	2950
	.quad	4294967326
	.quad	Sb0HW_srt+136


==================== Asm code ====================
2018-03-16 16:06:00.638101023 UTC

.section .text
.align 8
_cb1bc:
_cb1bc:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cb1bm
_cb1bl:
	movq 48(%rbp),%rax
	movq 40(%rbp),%rbx
	movq 8(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rsi
	movq %rsi,-48(%r12)
	movq %rbx,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rdx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1bm:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1bc, .-_cb1bc


==================== Asm code ====================
2018-03-16 16:06:00.638816404 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1bc_info:
	.quad	_cb1bc
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.641870169 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.fdIsNonBlocking_closure
.type GHC.IO.FD.fdIsNonBlocking_closure, @object
GHC.IO.FD.fdIsNonBlocking_closure:
	.quad	GHC.IO.FD.fdIsNonBlocking_info


==================== Asm code ====================
2018-03-16 16:06:00.642982396 UTC

.section .text
.align 8
.globl GHC.IO.FD.fdIsNonBlocking_entry
.type GHC.IO.FD.fdIsNonBlocking_entry, @object
GHC.IO.FD.fdIsNonBlocking_entry:
_cb1bT:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1bX
_cb1bY:
	leaq block_cb1bQ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1bQ
_cb1bR:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1bX:
	leaq GHC.IO.FD.fdIsNonBlocking_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.fdIsNonBlocking_entry, .-GHC.IO.FD.fdIsNonBlocking_entry


==================== Asm code ====================
2018-03-16 16:06:00.6435799 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.fdIsNonBlocking_info
.type GHC.IO.FD.fdIsNonBlocking_info, @object
GHC.IO.FD.fdIsNonBlocking_info:
	.quad	GHC.IO.FD.fdIsNonBlocking_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:06:00.644257988 UTC

.section .text
.align 8
_cb1bQ:
_cb1bQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb1c1
_cb1c0:
	movq 15(%rbx),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1c1:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1bQ, .-_cb1bQ


==================== Asm code ====================
2018-03-16 16:06:00.644913838 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1bQ_info:
	.quad	_cb1bQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.647755739 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.fdFD_closure
.type GHC.IO.FD.fdFD_closure, @object
GHC.IO.FD.fdFD_closure:
	.quad	GHC.IO.FD.fdFD_info


==================== Asm code ====================
2018-03-16 16:06:00.648531529 UTC

.section .text
.align 8
.globl GHC.IO.FD.fdFD_entry
.type GHC.IO.FD.fdFD_entry, @object
GHC.IO.FD.fdFD_entry:
_cb1cm:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1cq
_cb1cr:
	leaq block_cb1cj_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1cj
_cb1ck:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1cq:
	leaq GHC.IO.FD.fdFD_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.fdFD_entry, .-GHC.IO.FD.fdFD_entry


==================== Asm code ====================
2018-03-16 16:06:00.649181276 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.fdFD_info
.type GHC.IO.FD.fdFD_info, @object
GHC.IO.FD.fdFD_info:
	.quad	GHC.IO.FD.fdFD_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:06:00.649980082 UTC

.section .text
.align 8
_cb1cj:
_cb1cj:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb1cu
_cb1ct:
	movq 7(%rbx),%rax
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1cu:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1cj, .-_cb1cj


==================== Asm code ====================
2018-03-16 16:06:00.650605144 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1cj_info:
	.quad	_cb1cj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.654013282 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fShowFD_$cshow_closure
.type GHC.IO.FD.$fShowFD_$cshow_closure, @object
GHC.IO.FD.$fShowFD_$cshow_closure:
	.quad	GHC.IO.FD.$fShowFD_$cshow_info


==================== Asm code ====================
2018-03-16 16:06:00.654782501 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fShowFD_$cshow_entry
.type GHC.IO.FD.$fShowFD_$cshow_entry, @object
GHC.IO.FD.$fShowFD_$cshow_entry:
_cb1cP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1cV
_cb1cW:
	leaq block_cb1cM_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1cM
_cb1cN:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1cV:
	leaq GHC.IO.FD.$fShowFD_$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fShowFD_$cshow_entry, .-GHC.IO.FD.$fShowFD_$cshow_entry


==================== Asm code ====================
2018-03-16 16:06:00.655835412 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fShowFD_$cshow_info
.type GHC.IO.FD.$fShowFD_$cshow_info, @object
GHC.IO.FD.$fShowFD_$cshow_info:
	.quad	GHC.IO.FD.$fShowFD_$cshow_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:06:00.656493031 UTC

.section .text
.align 8
_cb1cM:
_cb1cM:
	leaq block_cb1cS_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _cb1cM, .-_cb1cM


==================== Asm code ====================
2018-03-16 16:06:00.657094435 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1cM_info:
	.quad	_cb1cM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.658131903 UTC

.section .text
.align 8
_cb1cS:
_cb1cS:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1d0
_cb1cZ:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1d0:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cb1cS, .-_cb1cS


==================== Asm code ====================
2018-03-16 16:06:00.658755827 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1cS_info:
	.quad	_cb1cS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.662133098 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD15_closure
.type GHC.IO.FD.$fBufferedIOFD15_closure, @object
GHC.IO.FD.$fBufferedIOFD15_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD15_info


==================== Asm code ====================
2018-03-16 16:06:00.662891241 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD15_entry
.type GHC.IO.FD.$fBufferedIOFD15_entry, @object
GHC.IO.FD.$fBufferedIOFD15_entry:
_cb1du:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1dx
_cb1dy:
	leaq block_cb1dn_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
_cb1dx:
	leaq GHC.IO.FD.$fBufferedIOFD15_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fBufferedIOFD15_entry, .-GHC.IO.FD.$fBufferedIOFD15_entry


==================== Asm code ====================
2018-03-16 16:06:00.663603617 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD15_info
.type GHC.IO.FD.$fBufferedIOFD15_info, @object
GHC.IO.FD.$fBufferedIOFD15_info:
	.quad	GHC.IO.FD.$fBufferedIOFD15_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:06:00.664269073 UTC

.section .text
.align 8
_cb1dn:
_cb1dn:
	leaq block_cb1dp_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movl $8192,%ebx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_newPinnedByteArray#@gotpcrel(%rip)
	.size _cb1dn, .-_cb1dn


==================== Asm code ====================
2018-03-16 16:06:00.664876178 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1dn_info:
	.quad	_cb1dn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.665675586 UTC

.section .text
.align 8
_cb1dp:
_cb1dp:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cb1dC
_cb1dB:
	movq GHC.ForeignPtr.MallocPtr_con_info@gotpcrel(%rip),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -70(%r12),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	leaq 16(%rbx),%rax
	movq %rax,-24(%r12)
	movq $8192,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1dC:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1dp, .-_cb1dp


==================== Asm code ====================
2018-03-16 16:06:00.66638026 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1dp_info:
	.quad	_cb1dp
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.670280527 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD12_closure
.type GHC.IO.FD.$fIODeviceFD12_closure, @object
GHC.IO.FD.$fIODeviceFD12_closure:
	.quad	GHC.IO.FD.$fIODeviceFD12_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.671019358 UTC

.section .text
.align 8
sat_sb0vn_entry:
_cb1e9:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1ed
_cb1ee:
	leaq block_cb1e6_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1e6
_cb1e7:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1ed:
	jmp *-16(%r13)
	.size sat_sb0vn_entry, .-sat_sb0vn_entry


==================== Asm code ====================
2018-03-16 16:06:00.671646378 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0vn_info:
	.quad	sat_sb0vn_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:00.67233825 UTC

.section .text
.align 8
_cb1e6:
_cb1e6:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb1eh
_cb1eg:
	movq 7(%rbx),%rax
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1eh:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1e6, .-_cb1e6


==================== Asm code ====================
2018-03-16 16:06:00.672917493 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1e6_info:
	.quad	_cb1e6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.674164034 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD12_entry
.type GHC.IO.FD.$fIODeviceFD12_entry, @object
GHC.IO.FD.$fIODeviceFD12_entry:
_cb1ej:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1en
_cb1em:
	leaq sat_sb0vn_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp *System.Posix.Internals.fdFileSize1_entry@gotpcrel(%rip)
_cb1en:
	movq $24,904(%r13)
	leaq GHC.IO.FD.$fIODeviceFD12_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD12_entry, .-GHC.IO.FD.$fIODeviceFD12_entry


==================== Asm code ====================
2018-03-16 16:06:00.674803138 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD12_info
.type GHC.IO.FD.$fIODeviceFD12_info, @object
GHC.IO.FD.$fIODeviceFD12_info:
	.quad	GHC.IO.FD.$fIODeviceFD12_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	Sb0HW_srt+192


==================== Asm code ====================
2018-03-16 16:06:00.67852928 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD9_closure
.type GHC.IO.FD.$fIODeviceFD9_closure, @object
GHC.IO.FD.$fIODeviceFD9_closure:
	.quad	GHC.IO.FD.$fIODeviceFD9_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.679228464 UTC

.section .text
.align 8
sat_sb0vu_entry:
_cb1eP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1eT
_cb1eU:
	leaq block_cb1eM_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1eM
_cb1eN:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1eT:
	jmp *-16(%r13)
	.size sat_sb0vu_entry, .-sat_sb0vu_entry


==================== Asm code ====================
2018-03-16 16:06:00.679875565 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0vu_info:
	.quad	sat_sb0vu_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:00.680643265 UTC

.section .text
.align 8
_cb1eM:
_cb1eM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb1eX
_cb1eW:
	movq 7(%rbx),%rax
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1eX:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1eM, .-_cb1eM


==================== Asm code ====================
2018-03-16 16:06:00.681358156 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1eM_info:
	.quad	_cb1eM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.682406647 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD9_entry
.type GHC.IO.FD.$fIODeviceFD9_entry, @object
GHC.IO.FD.$fIODeviceFD9_entry:
_cb1eZ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1f3
_cb1f2:
	leaq sat_sb0vu_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	jmp *System.Posix.Internals.setEcho1_entry@gotpcrel(%rip)
_cb1f3:
	movq $24,904(%r13)
	leaq GHC.IO.FD.$fIODeviceFD9_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD9_entry, .-GHC.IO.FD.$fIODeviceFD9_entry


==================== Asm code ====================
2018-03-16 16:06:00.683063019 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD9_info
.type GHC.IO.FD.$fIODeviceFD9_info, @object
GHC.IO.FD.$fIODeviceFD9_info:
	.quad	GHC.IO.FD.$fIODeviceFD9_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	Sb0HW_srt+208


==================== Asm code ====================
2018-03-16 16:06:00.686597263 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD8_closure
.type GHC.IO.FD.$fIODeviceFD8_closure, @object
GHC.IO.FD.$fIODeviceFD8_closure:
	.quad	GHC.IO.FD.$fIODeviceFD8_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.687320834 UTC

.section .text
.align 8
sat_sb0vA_entry:
_cb1fv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1fz
_cb1fA:
	leaq block_cb1fs_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1fs
_cb1ft:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1fz:
	jmp *-16(%r13)
	.size sat_sb0vA_entry, .-sat_sb0vA_entry


==================== Asm code ====================
2018-03-16 16:06:00.687920427 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0vA_info:
	.quad	sat_sb0vA_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:00.688617765 UTC

.section .text
.align 8
_cb1fs:
_cb1fs:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb1fD
_cb1fC:
	movq 7(%rbx),%rax
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1fD:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1fs, .-_cb1fs


==================== Asm code ====================
2018-03-16 16:06:00.689298913 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1fs_info:
	.quad	_cb1fs
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.690048687 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD8_entry
.type GHC.IO.FD.$fIODeviceFD8_entry, @object
GHC.IO.FD.$fIODeviceFD8_entry:
_cb1fF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1fJ
_cb1fI:
	leaq sat_sb0vA_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	movq System.Posix.Internals.getEcho2_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rsi
	leaq -16(%r12),%r14
	jmp *System.Posix.Internals.getEcho3_entry@gotpcrel(%rip)
_cb1fJ:
	movq $24,904(%r13)
	leaq GHC.IO.FD.$fIODeviceFD8_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD8_entry, .-GHC.IO.FD.$fIODeviceFD8_entry


==================== Asm code ====================
2018-03-16 16:06:00.690762183 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD8_info
.type GHC.IO.FD.$fIODeviceFD8_info, @object
GHC.IO.FD.$fIODeviceFD8_info:
	.quad	GHC.IO.FD.$fIODeviceFD8_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	Sb0HW_srt+224


==================== Asm code ====================
2018-03-16 16:06:00.69640639 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD7_closure
.type GHC.IO.FD.$fIODeviceFD7_closure, @object
GHC.IO.FD.$fIODeviceFD7_closure:
	.quad	GHC.IO.FD.$fIODeviceFD7_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.697178041 UTC

.section .text
.align 8
sat_sb0vJ_entry:
_cb1gg:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1gh
_cb1gi:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cb1g9_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cb1g9
_cb1ga:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1gh:
	jmp *-16(%r13)
	.size sat_sb0vJ_entry, .-sat_sb0vJ_entry


==================== Asm code ====================
2018-03-16 16:06:00.697834216 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0vJ_info:
	.quad	sat_sb0vJ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:00.698549019 UTC

.section .text
.align 8
_cb1g9:
_cb1g9:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cb1gd
_cb1ge:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1gd:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb1g9, .-_cb1g9


==================== Asm code ====================
2018-03-16 16:06:00.699204463 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1g9_info:
	.quad	_cb1g9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.699905351 UTC

.section .text
.align 8
sat_sb0vH_entry:
_cb1gx:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1gB
_cb1gC:
	leaq block_cb1gu_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1gu
_cb1gv:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1gB:
	jmp *-16(%r13)
	.size sat_sb0vH_entry, .-sat_sb0vH_entry


==================== Asm code ====================
2018-03-16 16:06:00.700539537 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0vH_info:
	.quad	sat_sb0vH_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:00.70173772 UTC

.section .text
.align 8
_cb1gu:
_cb1gu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb1gF
_cb1gE:
	movq 7(%rbx),%rax
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1gF:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1gu, .-_cb1gu


==================== Asm code ====================
2018-03-16 16:06:00.702363405 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1gu_info:
	.quad	_cb1gu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.70314727 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD7_entry
.type GHC.IO.FD.$fIODeviceFD7_entry, @object
GHC.IO.FD.$fIODeviceFD7_entry:
_cb1gH:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cb1gL
_cb1gK:
	leaq sat_sb0vJ_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rsi,-24(%r12)
	leaq sat_sb0vH_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	jmp *System.Posix.Internals.setCooked1_entry@gotpcrel(%rip)
_cb1gL:
	movq $48,904(%r13)
	leaq GHC.IO.FD.$fIODeviceFD7_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD7_entry, .-GHC.IO.FD.$fIODeviceFD7_entry


==================== Asm code ====================
2018-03-16 16:06:00.703862396 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD7_info
.type GHC.IO.FD.$fIODeviceFD7_info, @object
GHC.IO.FD.$fIODeviceFD7_info:
	.quad	GHC.IO.FD.$fIODeviceFD7_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	Sb0HW_srt+240


==================== Asm code ====================
2018-03-16 16:06:00.705621235 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$trModule4_bytes
.type GHC.IO.FD.$trModule4_bytes, @object
GHC.IO.FD.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:06:00.707365165 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$trModule3_closure
.type GHC.IO.FD.$trModule3_closure, @object
GHC.IO.FD.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.FD.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:06:00.709586994 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$trModule2_bytes
.type GHC.IO.FD.$trModule2_bytes, @object
GHC.IO.FD.$trModule2_bytes:
	.asciz "GHC.IO.FD"


==================== Asm code ====================
2018-03-16 16:06:00.711213546 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$trModule1_closure
.type GHC.IO.FD.$trModule1_closure, @object
GHC.IO.FD.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.FD.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:06:00.713314591 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$trModule_closure
.type GHC.IO.FD.$trModule_closure, @object
GHC.IO.FD.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.IO.FD.$trModule3_closure+1
	.quad	GHC.IO.FD.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:00.715247694 UTC

.section .data
.align 8
.align 1
$krep_raWV0_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcInt_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:00.717163432 UTC

.section .data
.align 8
.align 1
$krep1_raWV1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	Foreign.C.Types.$tcCInt_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:00.719001953 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$tcFD2_bytes
.type GHC.IO.FD.$tcFD2_bytes, @object
GHC.IO.FD.$tcFD2_bytes:
	.asciz "FD"


==================== Asm code ====================
2018-03-16 16:06:00.721203846 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$tcFD1_closure
.type GHC.IO.FD.$tcFD1_closure, @object
GHC.IO.FD.$tcFD1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.FD.$tcFD2_bytes


==================== Asm code ====================
2018-03-16 16:06:00.72307822 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$tcFD_closure
.type GHC.IO.FD.$tcFD_closure, @object
GHC.IO.FD.$tcFD_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.FD.$trModule_closure+1
	.quad	GHC.IO.FD.$tcFD1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-7607928521190512554
	.quad	-2900453971751795240
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:00.724869939 UTC

.section .data
.align 8
.align 1
$krep2_raWV2_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.FD.$tcFD_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:00.72681646 UTC

.section .data
.align 8
.align 1
$krep3_raWV3_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_raWV0_closure+1
	.quad	$krep2_raWV2_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:00.72867377 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$tc'FD1_closure
.type GHC.IO.FD.$tc'FD1_closure, @object
GHC.IO.FD.$tc'FD1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_raWV1_closure+1
	.quad	$krep3_raWV3_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:00.730934633 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$tc'FD3_bytes
.type GHC.IO.FD.$tc'FD3_bytes, @object
GHC.IO.FD.$tc'FD3_bytes:
	.asciz "'FD"


==================== Asm code ====================
2018-03-16 16:06:00.73372238 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$tc'FD2_closure
.type GHC.IO.FD.$tc'FD2_closure, @object
GHC.IO.FD.$tc'FD2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.FD.$tc'FD3_bytes


==================== Asm code ====================
2018-03-16 16:06:00.735521376 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$tc'FD_closure
.type GHC.IO.FD.$tc'FD_closure, @object
GHC.IO.FD.$tc'FD_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.FD.$trModule_closure+1
	.quad	GHC.IO.FD.$tc'FD2_closure+1
	.quad	GHC.IO.FD.$tc'FD1_closure+4
	.quad	9025179437427398028
	.quad	-375740255142937780
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:00.739126388 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fShowFD_$cshowsPrec_closure
.type GHC.IO.FD.$fShowFD_$cshowsPrec_closure, @object
GHC.IO.FD.$fShowFD_$cshowsPrec_closure:
	.quad	GHC.IO.FD.$fShowFD_$cshowsPrec_info


==================== Asm code ====================
2018-03-16 16:06:00.739909722 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fShowFD_$cshowsPrec_entry
.type GHC.IO.FD.$fShowFD_$cshowsPrec_entry, @object
GHC.IO.FD.$fShowFD_$cshowsPrec_entry:
_cb1hG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1hM
_cb1hN:
	leaq block_cb1hD_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %rdi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cb1hD
_cb1hE:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1hM:
	leaq GHC.IO.FD.$fShowFD_$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fShowFD_$cshowsPrec_entry, .-GHC.IO.FD.$fShowFD_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:06:00.740560382 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fShowFD_$cshowsPrec_info
.type GHC.IO.FD.$fShowFD_$cshowsPrec_info, @object
GHC.IO.FD.$fShowFD_$cshowsPrec_info:
	.quad	GHC.IO.FD.$fShowFD_$cshowsPrec_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:06:00.741285304 UTC

.section .text
.align 8
_cb1hD:
_cb1hD:
	leaq block_cb1hJ_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _cb1hD, .-_cb1hD


==================== Asm code ====================
2018-03-16 16:06:00.741912627 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1hD_info:
	.quad	_cb1hD
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.742638573 UTC

.section .text
.align 8
_cb1hJ:
_cb1hJ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1hR
_cb1hQ:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq 8(%rbp),%rsi
	leaq -14(%r12),%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_cb1hR:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cb1hJ, .-_cb1hJ


==================== Asm code ====================
2018-03-16 16:06:00.743305726 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1hJ_info:
	.quad	_cb1hJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.746796574 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$wlvl_closure
.type GHC.IO.FD.$wlvl_closure, @object
GHC.IO.FD.$wlvl_closure:
	.quad	GHC.IO.FD.$wlvl_info


==================== Asm code ====================
2018-03-16 16:06:00.747547617 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wlvl_entry
.type GHC.IO.FD.$wlvl_entry, @object
GHC.IO.FD.$wlvl_entry:
_cb1ig:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1ih
_cb1ii:
	leaq block_cb1id_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq %rsi,%rax
	movq %r14,%rsi
	xorl %r14d,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
_cb1ih:
	leaq GHC.IO.FD.$wlvl_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$wlvl_entry, .-GHC.IO.FD.$wlvl_entry


==================== Asm code ====================
2018-03-16 16:06:00.748252339 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$wlvl_info
.type GHC.IO.FD.$wlvl_info, @object
GHC.IO.FD.$wlvl_info:
	.quad	GHC.IO.FD.$wlvl_entry
	.quad	0
	.quad	14
	.quad	8589934605


==================== Asm code ====================
2018-03-16 16:06:00.748950486 UTC

.section .text
.align 8
_cb1id:
_cb1id:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1il
_cb1ik:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq 8(%rbp),%rsi
	leaq -14(%r12),%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_cb1il:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cb1id, .-_cb1id


==================== Asm code ====================
2018-03-16 16:06:00.749602576 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1id_info:
	.quad	_cb1id
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.752220515 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fShowFD1_closure
.type GHC.IO.FD.$fShowFD1_closure, @object
GHC.IO.FD.$fShowFD1_closure:
	.quad	GHC.IO.FD.$fShowFD1_info


==================== Asm code ====================
2018-03-16 16:06:00.752956979 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fShowFD1_entry
.type GHC.IO.FD.$fShowFD1_entry, @object
GHC.IO.FD.$fShowFD1_entry:
_cb1iE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1iF
_cb1iG:
	leaq block_cb1iB_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cb1iB
_cb1iC:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1iF:
	leaq GHC.IO.FD.$fShowFD1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fShowFD1_entry, .-GHC.IO.FD.$fShowFD1_entry


==================== Asm code ====================
2018-03-16 16:06:00.753758894 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fShowFD1_info
.type GHC.IO.FD.$fShowFD1_info, @object
GHC.IO.FD.$fShowFD1_info:
	.quad	GHC.IO.FD.$fShowFD1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:06:00.754430755 UTC

.section .text
.align 8
_cb1iB:
_cb1iB:
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.IO.FD.$wlvl_entry
	.size _cb1iB, .-_cb1iB


==================== Asm code ====================
2018-03-16 16:06:00.755033334 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1iB_info:
	.quad	_cb1iB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.757126448 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fShowFD_$cshowList_closure
.type GHC.IO.FD.$fShowFD_$cshowList_closure, @object
GHC.IO.FD.$fShowFD_$cshowList_closure:
	.quad	GHC.IO.FD.$fShowFD_$cshowList_info


==================== Asm code ====================
2018-03-16 16:06:00.757785537 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fShowFD_$cshowList_entry
.type GHC.IO.FD.$fShowFD_$cshowList_entry, @object
GHC.IO.FD.$fShowFD_$cshowList_entry:
_cb1iZ:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.IO.FD.$fShowFD1_closure+2(%rip),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
	.size GHC.IO.FD.$fShowFD_$cshowList_entry, .-GHC.IO.FD.$fShowFD_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:06:00.758744094 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fShowFD_$cshowList_info
.type GHC.IO.FD.$fShowFD_$cshowList_info, @object
GHC.IO.FD.$fShowFD_$cshowList_info:
	.quad	GHC.IO.FD.$fShowFD_$cshowList_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:06:00.760427076 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fShowFD_closure
.type GHC.IO.FD.$fShowFD_closure, @object
GHC.IO.FD.$fShowFD_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.IO.FD.$fShowFD_$cshowsPrec_closure+3
	.quad	GHC.IO.FD.$fShowFD_$cshow_closure+1
	.quad	GHC.IO.FD.$fShowFD_$cshowList_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:00.763424268 UTC

.section .data
.align 8
.align 1
output_flags_raWV4_closure:
	.quad	output_flags_raWV4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.764445386 UTC

.section .text
.align 8
output_flags_raWV4_entry:
_cb1jh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1jz
_cb1jA:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb1jC
_cb1jB:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb1jc
_cb1jb:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	subq $8,%rsp
	xorl %eax,%eax
	call __hscore_o_noctty@plt
	addq $8,%rsp
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_o_creat@plt
	addq $8,%rsp
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movslq %eax,%rax
	movslq %ebx,%rbx
	orq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1jC:
	movq $16,904(%r13)
_cb1jz:
	jmp *-16(%r13)
_cb1jc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size output_flags_raWV4_entry, .-output_flags_raWV4_entry


==================== Asm code ====================
2018-03-16 16:06:00.765809068 UTC

.section .data.rel.ro
.align 8
.align 1
output_flags_raWV4_info:
	.quad	output_flags_raWV4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:00.769184264 UTC

.section .data
.align 8
.align 1
write_flags_raWV5_closure:
	.quad	write_flags_raWV5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.769960783 UTC

.section .text
.align 8
write_flags_raWV5_entry:
_cb1jZ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1kj
_cb1kk:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb1jV
_cb1jU:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_cb1jW_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq output_flags_raWV4_closure(%rip),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cb1jW
_cb1jX:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1kj:
	jmp *-16(%r13)
_cb1jV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size write_flags_raWV5_entry, .-write_flags_raWV5_entry


==================== Asm code ====================
2018-03-16 16:06:00.770713513 UTC

.section .data.rel.ro
.align 8
.align 1
write_flags_raWV5_info:
	.quad	write_flags_raWV5_entry
	.quad	0
	.quad	4294967317
	.quad	Sb0HW_srt+256


==================== Asm code ====================
2018-03-16 16:06:00.77152565 UTC

.section .text
.align 8
_cb1jW:
_cb1jW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb1kn
_cb1km:
	movq 7(%rbx),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_o_wronly@plt
	addq $8,%rsp
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movslq %eax,%rax
	orq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1kn:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1jW, .-_cb1jW


==================== Asm code ====================
2018-03-16 16:06:00.772590857 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1jW_info:
	.quad	_cb1jW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.77593924 UTC

.section .data
.align 8
.align 1
append_flags_raWV6_closure:
	.quad	append_flags_raWV6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.776731936 UTC

.section .text
.align 8
append_flags_raWV6_entry:
_cb1kQ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1la
_cb1lb:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb1kM
_cb1kL:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_cb1kN_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq write_flags_raWV5_closure(%rip),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cb1kN
_cb1kO:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1la:
	jmp *-16(%r13)
_cb1kM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size append_flags_raWV6_entry, .-append_flags_raWV6_entry


==================== Asm code ====================
2018-03-16 16:06:00.777790784 UTC

.section .data.rel.ro
.align 8
.align 1
append_flags_raWV6_info:
	.quad	append_flags_raWV6_entry
	.quad	0
	.quad	4294967317
	.quad	Sb0HW_srt+264


==================== Asm code ====================
2018-03-16 16:06:00.778500943 UTC

.section .text
.align 8
_cb1kN:
_cb1kN:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb1le
_cb1ld:
	movq 7(%rbx),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_o_append@plt
	addq $8,%rsp
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movslq %eax,%rax
	orq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1le:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1kN, .-_cb1kN


==================== Asm code ====================
2018-03-16 16:06:00.779157028 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1kN_info:
	.quad	_cb1kN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.782587079 UTC

.section .data
.align 8
.align 1
rw_flags_raWV7_closure:
	.quad	rw_flags_raWV7_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.783422907 UTC

.section .text
.align 8
rw_flags_raWV7_entry:
_cb1lH:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1m1
_cb1m2:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb1lD
_cb1lC:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_cb1lE_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq output_flags_raWV4_closure(%rip),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cb1lE
_cb1lF:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1m1:
	jmp *-16(%r13)
_cb1lD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size rw_flags_raWV7_entry, .-rw_flags_raWV7_entry


==================== Asm code ====================
2018-03-16 16:06:00.78418517 UTC

.section .data.rel.ro
.align 8
.align 1
rw_flags_raWV7_info:
	.quad	rw_flags_raWV7_entry
	.quad	0
	.quad	4294967317
	.quad	Sb0HW_srt+256


==================== Asm code ====================
2018-03-16 16:06:00.785344857 UTC

.section .text
.align 8
_cb1lE:
_cb1lE:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb1m5
_cb1m4:
	movq 7(%rbx),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_o_rdwr@plt
	addq $8,%rsp
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movslq %eax,%rax
	orq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1m5:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1lE, .-_cb1lE


==================== Asm code ====================
2018-03-16 16:06:00.786005698 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1lE_info:
	.quad	_cb1lE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.788766625 UTC

.section .data
.align 8
.align 1
read_flags_raWV8_closure:
	.quad	read_flags_raWV8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.789940511 UTC

.section .text
.align 8
read_flags_raWV8_entry:
_cb1mz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1mR
_cb1mS:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb1mU
_cb1mT:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb1mu
_cb1mt:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	subq $8,%rsp
	xorl %eax,%eax
	call __hscore_o_noctty@plt
	addq $8,%rsp
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_o_rdonly@plt
	addq $8,%rsp
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movslq %eax,%rax
	movslq %ebx,%rbx
	orq %rax,%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1mU:
	movq $16,904(%r13)
_cb1mR:
	jmp *-16(%r13)
_cb1mu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size read_flags_raWV8_entry, .-read_flags_raWV8_entry


==================== Asm code ====================
2018-03-16 16:06:00.790726029 UTC

.section .data.rel.ro
.align 8
.align 1
read_flags_raWV8_info:
	.quad	read_flags_raWV8_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:00.793620314 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD16_closure
.type GHC.IO.FD.$fIODeviceFD16_closure, @object
GHC.IO.FD.$fIODeviceFD16_closure:
	.quad	GHC.IO.FD.$fIODeviceFD16_info


==================== Asm code ====================
2018-03-16 16:06:00.794407134 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD16_entry
.type GHC.IO.FD.$fIODeviceFD16_entry, @object
GHC.IO.FD.$fIODeviceFD16_entry:
_cb1nf:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1ng
_cb1nh:
	leaq block_cb1nc_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1nc
_cb1nd:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1ng:
	leaq GHC.IO.FD.$fIODeviceFD16_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD16_entry, .-GHC.IO.FD.$fIODeviceFD16_entry


==================== Asm code ====================
2018-03-16 16:06:00.795079835 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD16_info
.type GHC.IO.FD.$fIODeviceFD16_info, @object
GHC.IO.FD.$fIODeviceFD16_info:
	.quad	GHC.IO.FD.$fIODeviceFD16_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:06:00.795812911 UTC

.section .text
.align 8
_cb1nc:
_cb1nc:
	cmpq $-1,7(%rbx)
	je _cb1no
_cb1nn:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1no:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb1nc, .-_cb1nc


==================== Asm code ====================
2018-03-16 16:06:00.796494556 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1nc_info:
	.quad	_cb1nc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.798798585 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$fIODeviceFD15_bytes
.type GHC.IO.FD.$fIODeviceFD15_bytes, @object
GHC.IO.FD.$fIODeviceFD15_bytes:
	.asciz "hGetPosn"


==================== Asm code ====================
2018-03-16 16:06:00.801171447 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD14_closure
.type GHC.IO.FD.$fIODeviceFD14_closure, @object
GHC.IO.FD.$fIODeviceFD14_closure:
	.quad	GHC.IO.FD.$fIODeviceFD14_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.8019992 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD14_entry
.type GHC.IO.FD.$fIODeviceFD14_entry, @object
GHC.IO.FD.$fIODeviceFD14_entry:
_cb1nL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1nM
_cb1nN:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb1nK
_cb1nJ:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.FD.$fIODeviceFD15_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cb1nM:
	jmp *-16(%r13)
_cb1nK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.$fIODeviceFD14_entry, .-GHC.IO.FD.$fIODeviceFD14_entry


==================== Asm code ====================
2018-03-16 16:06:00.802653107 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD14_info
.type GHC.IO.FD.$fIODeviceFD14_info, @object
GHC.IO.FD.$fIODeviceFD14_info:
	.quad	GHC.IO.FD.$fIODeviceFD14_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:00.807388694 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$ctell_closure
.type GHC.IO.FD.$w$ctell_closure, @object
GHC.IO.FD.$w$ctell_closure:
	.quad	GHC.IO.FD.$w$ctell_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.808189304 UTC

.section .text
.align 8
sat_sb0xn_entry:
_cb1o8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb1oi
_cb1oh:
	subq $8,%rsp
	movq 15(%rbx),%rax
	movslq %eax,%rdx
	movq 7(%rbx),%rdi
	xorl %esi,%esi
	xorl %eax,%eax
	call ghczuwrapperZC23ZCbaseZCSystemziPosixziInternalsZClseek@plt
	addq $8,%rsp
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cb1oi:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_sb0xn_entry, .-sat_sb0xn_entry


==================== Asm code ====================
2018-03-16 16:06:00.808888382 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0xn_info:
	.quad	sat_sb0xn_entry
	.quad	8589934592
	.quad	13
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:00.809587802 UTC

.section .text
.align 8
sat_sb0xr_entry:
_cb1op:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1oq
_cb1or:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Int.$fIntegralInt64_$ctoInteger_entry@gotpcrel(%rip)
_cb1oq:
	jmp *-16(%r13)
	.size sat_sb0xr_entry, .-sat_sb0xr_entry


==================== Asm code ====================
2018-03-16 16:06:00.810210115 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0xr_info:
	.quad	sat_sb0xr_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:00.811418522 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$ctell_entry
.type GHC.IO.FD.$w$ctell_entry, @object
GHC.IO.FD.$w$ctell_entry:
_cb1os:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1ot
_cb1ou:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1ow
_cb1ov:
	subq $8,%rsp
	xorl %eax,%eax
	call ghczuwrapperZC2ZCbaseZCSystemziPosixziInternalsZCSEEKzuCUR@plt
	addq $8,%rsp
	leaq sat_sb0xn_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %r14,-8(%r12)
	movq %rax,(%r12)
	leaq block_cb1oj_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -15(%r12),%rdi
	leaq GHC.IO.FD.$fIODeviceFD14_closure(%rip),%rsi
	leaq GHC.IO.FD.$fIODeviceFD16_closure+1(%rip),%r14
	addq $-8,%rbp
	jmp *Foreign.C.Error.throwErrnoIfMinus1Retry2_entry@gotpcrel(%rip)
_cb1ow:
	movq $24,904(%r13)
_cb1ot:
	leaq GHC.IO.FD.$w$ctell_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$w$ctell_entry, .-GHC.IO.FD.$w$ctell_entry


==================== Asm code ====================
2018-03-16 16:06:00.812171395 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$ctell_info
.type GHC.IO.FD.$w$ctell_info, @object
GHC.IO.FD.$w$ctell_info:
	.quad	GHC.IO.FD.$w$ctell_entry
	.quad	0
	.quad	30064771086
	.quad	8589934596
	.quad	Sb0HW_srt+272


==================== Asm code ====================
2018-03-16 16:06:00.812856349 UTC

.section .text
.align 8
_cb1oj:
_cb1oj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1oz
_cb1oy:
	leaq sat_sb0xr_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1oz:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1oj, .-_cb1oj


==================== Asm code ====================
2018-03-16 16:06:00.81368412 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1oj_info:
	.quad	_cb1oj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.816362007 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD13_closure
.type GHC.IO.FD.$fIODeviceFD13_closure, @object
GHC.IO.FD.$fIODeviceFD13_closure:
	.quad	GHC.IO.FD.$fIODeviceFD13_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.81709384 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD13_entry
.type GHC.IO.FD.$fIODeviceFD13_entry, @object
GHC.IO.FD.$fIODeviceFD13_entry:
_cb1p4:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1p5
_cb1p6:
	leaq block_cb1p1_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1p1
_cb1p2:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1p5:
	leaq GHC.IO.FD.$fIODeviceFD13_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD13_entry, .-GHC.IO.FD.$fIODeviceFD13_entry


==================== Asm code ====================
2018-03-16 16:06:00.817726662 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD13_info
.type GHC.IO.FD.$fIODeviceFD13_info, @object
GHC.IO.FD.$fIODeviceFD13_info:
	.quad	GHC.IO.FD.$fIODeviceFD13_entry
	.quad	0
	.quad	21474836494
	.quad	8589934597
	.quad	Sb0HW_srt+280


==================== Asm code ====================
2018-03-16 16:06:00.818371662 UTC

.section .text
.align 8
_cb1p1:
_cb1p1:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.IO.FD.$w$ctell_entry
	.size _cb1p1, .-_cb1p1


==================== Asm code ====================
2018-03-16 16:06:00.818901803 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1p1_info:
	.quad	_cb1p1
	.quad	0
	.quad	4294967326
	.quad	Sb0HW_srt+280


==================== Asm code ====================
2018-03-16 16:06:00.820698814 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$fIODeviceFD19_bytes
.type GHC.IO.FD.$fIODeviceFD19_bytes, @object
GHC.IO.FD.$fIODeviceFD19_bytes:
	.asciz "seek"


==================== Asm code ====================
2018-03-16 16:06:00.823151849 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD18_closure
.type GHC.IO.FD.$fIODeviceFD18_closure, @object
GHC.IO.FD.$fIODeviceFD18_closure:
	.quad	GHC.IO.FD.$fIODeviceFD18_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.824318658 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD18_entry
.type GHC.IO.FD.$fIODeviceFD18_entry, @object
GHC.IO.FD.$fIODeviceFD18_entry:
_cb1ps:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1pt
_cb1pu:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb1pr
_cb1pq:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.FD.$fIODeviceFD19_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cb1pt:
	jmp *-16(%r13)
_cb1pr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.$fIODeviceFD18_entry, .-GHC.IO.FD.$fIODeviceFD18_entry


==================== Asm code ====================
2018-03-16 16:06:00.824991672 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD18_info
.type GHC.IO.FD.$fIODeviceFD18_info, @object
GHC.IO.FD.$fIODeviceFD18_info:
	.quad	GHC.IO.FD.$fIODeviceFD18_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:00.830862902 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$cseek_closure
.type GHC.IO.FD.$w$cseek_closure, @object
GHC.IO.FD.$w$cseek_closure:
	.quad	GHC.IO.FD.$w$cseek_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.831666514 UTC

.section .text
.align 8
sat_sb0xK_entry:
_cb1q0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb1q4
_cb1q3:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 23(%rbx),%rdx
	xorl %eax,%eax
	call ghczuwrapperZC23ZCbaseZCSystemziPosixziInternalsZClseek@plt
	addq $8,%rsp
	movq GHC.Int.I64#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cb1q4:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_sb0xK_entry, .-sat_sb0xK_entry


==================== Asm code ====================
2018-03-16 16:06:00.832354079 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0xK_info:
	.quad	sat_sb0xK_entry
	.quad	12884901888
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:00.833121362 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cseek_entry
.type GHC.IO.FD.$w$cseek_entry, @object
GHC.IO.FD.$w$cseek_entry:
_cb1q5:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1q6
_cb1q7:
	leaq block_cb1pH_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rax
	movq %rdi,%r14
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
_cb1q6:
	leaq GHC.IO.FD.$w$cseek_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$w$cseek_entry, .-GHC.IO.FD.$w$cseek_entry


==================== Asm code ====================
2018-03-16 16:06:00.833810224 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$cseek_info
.type GHC.IO.FD.$w$cseek_info, @object
GHC.IO.FD.$w$cseek_info:
	.quad	GHC.IO.FD.$w$cseek_entry
	.quad	0
	.quad	210453397518
	.quad	17179869203
	.quad	Sb0HW_srt+272


==================== Asm code ====================
2018-03-16 16:06:00.834481187 UTC

.section .text
.align 8
_cb1pH:
_cb1pH:
	leaq block_cb1q8_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cb1q8
_cb1qg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1pH, .-_cb1pH


==================== Asm code ====================
2018-03-16 16:06:00.835113256 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1pH_info:
	.quad	_cb1pH
	.quad	66
	.quad	141733920798
	.quad	Sb0HW_srt+272


==================== Asm code ====================
2018-03-16 16:06:00.835954876 UTC

.section .text
.align 8
_cb1q8:
_cb1q8:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ub1qC
_cb1qu:
	subq $8,%rsp
	xorl %eax,%eax
	call ghczuwrapperZC0ZCbaseZCSystemziPosixziInternalsZCSEEKzuEND@plt
	addq $8,%rsp
	movslq %eax,%rax
	movq %rax,(%rbp)
	jmp _cb1pO
_ub1qC:
	cmpq $2,%rbx
	jb _cb1qm
_cb1qq:
	subq $8,%rsp
	xorl %eax,%eax
	call ghczuwrapperZC2ZCbaseZCSystemziPosixziInternalsZCSEEKzuCUR@plt
	addq $8,%rsp
	movslq %eax,%rax
	movq %rax,(%rbp)
	jmp _cb1pO
_cb1qm:
	subq $8,%rsp
	xorl %eax,%eax
	call ghczuwrapperZC1ZCbaseZCSystemziPosixziInternalsZCSEEKzuSET@plt
	addq $8,%rsp
	movslq %eax,%rax
	movq %rax,(%rbp)
	jmp _cb1pO
	.size _cb1q8, .-_cb1q8


==================== Asm code ====================
2018-03-16 16:06:00.837002358 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1q8_info:
	.quad	_cb1q8
	.quad	194
	.quad	141733920798
	.quad	Sb0HW_srt+272


==================== Asm code ====================
2018-03-16 16:06:00.838133851 UTC

.section .text
.align 8
_cb1pO:
_cb1pO:
	addq $32,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cb1qd
_cb1qc:
	leaq sat_sb0xK_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq block_cb1qa_info(%rip),%rax
	movq %rax,16(%rbp)
	leaq -23(%r12),%rdi
	leaq GHC.IO.FD.$fIODeviceFD18_closure(%rip),%rsi
	leaq GHC.IO.FD.$fIODeviceFD16_closure+1(%rip),%r14
	addq $16,%rbp
	jmp *Foreign.C.Error.throwErrnoIfMinus1Retry2_entry@gotpcrel(%rip)
_cb1qd:
	movq $32,904(%r13)
	leaq block_cb1pN_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cb1pO, .-_cb1pO


==================== Asm code ====================
2018-03-16 16:06:00.838925288 UTC

.section .text
.align 8
_cb1pN:
_cb1pN:
	movq %rbx,(%rbp)
	jmp _cb1pO
	.size _cb1pN, .-_cb1pN


==================== Asm code ====================
2018-03-16 16:06:00.839427881 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1pN_info:
	.quad	_cb1pN
	.quad	194
	.quad	141733920798
	.quad	Sb0HW_srt+272


==================== Asm code ====================
2018-03-16 16:06:00.840065186 UTC

.section .text
.align 8
_cb1qa:
_cb1qa:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb1qa, .-_cb1qa


==================== Asm code ====================
2018-03-16 16:06:00.840620166 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1qa_info:
	.quad	_cb1qa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.843588413 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD17_closure
.type GHC.IO.FD.$fIODeviceFD17_closure, @object
GHC.IO.FD.$fIODeviceFD17_closure:
	.quad	GHC.IO.FD.$fIODeviceFD17_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.844337791 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD17_entry
.type GHC.IO.FD.$fIODeviceFD17_entry, @object
GHC.IO.FD.$fIODeviceFD17_entry:
_cb1rv:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1rw
_cb1rx:
	leaq block_cb1rs_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cb1rs
_cb1rt:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1rw:
	leaq GHC.IO.FD.$fIODeviceFD17_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD17_entry, .-GHC.IO.FD.$fIODeviceFD17_entry


==================== Asm code ====================
2018-03-16 16:06:00.845046508 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD17_info
.type GHC.IO.FD.$fIODeviceFD17_info, @object
GHC.IO.FD.$fIODeviceFD17_info:
	.quad	GHC.IO.FD.$fIODeviceFD17_entry
	.quad	0
	.quad	21474836494
	.quad	17179869207
	.quad	Sb0HW_srt+304


==================== Asm code ====================
2018-03-16 16:06:00.845742806 UTC

.section .text
.align 8
_cb1rs:
_cb1rs:
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $24,%rbp
	jmp GHC.IO.FD.$w$cseek_entry
	.size _cb1rs, .-_cb1rs


==================== Asm code ====================
2018-03-16 16:06:00.846331395 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1rs_info:
	.quad	_cb1rs
	.quad	2
	.quad	4294967326
	.quad	Sb0HW_srt+304


==================== Asm code ====================
2018-03-16 16:06:00.848105548 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.stdin_closure
.type GHC.IO.FD.stdin_closure, @object
GHC.IO.FD.stdin_closure:
	.quad	GHC.IO.FD.FD_con_info
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.850375882 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.stdout_closure
.type GHC.IO.FD.stdout_closure, @object
GHC.IO.FD.stdout_closure:
	.quad	GHC.IO.FD.FD_con_info
	.quad	1
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.852051504 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.stderr_closure
.type GHC.IO.FD.stderr_closure, @object
GHC.IO.FD.stderr_closure:
	.quad	GHC.IO.FD.FD_con_info
	.quad	2
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.853665681 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl3_raWV9_bytes:
	.asciz "GHC.IO.FD.setSize"


==================== Asm code ====================
2018-03-16 16:06:00.856082382 UTC

.section .data
.align 8
.align 1
lvl4_raWVa_closure:
	.quad	lvl4_raWVa_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.85694465 UTC

.section .text
.align 8
lvl4_raWVa_entry:
_cb1rW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1rX
_cb1rY:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb1rV
_cb1rU:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl3_raWV9_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cb1rX:
	jmp *-16(%r13)
_cb1rV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl4_raWVa_entry, .-lvl4_raWVa_entry


==================== Asm code ====================
2018-03-16 16:06:00.858010782 UTC

.section .data.rel.ro
.align 8
.align 1
lvl4_raWVa_info:
	.quad	lvl4_raWVa_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:00.860262984 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD11_closure
.type GHC.IO.FD.$fIODeviceFD11_closure, @object
GHC.IO.FD.$fIODeviceFD11_closure:
	.quad	GHC.IO.FD.$fIODeviceFD11_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.860877598 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD11_entry
.type GHC.IO.FD.$fIODeviceFD11_entry, @object
GHC.IO.FD.$fIODeviceFD11_entry:
_cb1sd:
	movslq %r14d,%rsi
	leaq lvl4_raWVa_closure(%rip),%r14
	jmp *Foreign.C.Error.$wlvl_entry@gotpcrel(%rip)
	.size GHC.IO.FD.$fIODeviceFD11_entry, .-GHC.IO.FD.$fIODeviceFD11_entry


==================== Asm code ====================
2018-03-16 16:06:00.86150247 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD11_info
.type GHC.IO.FD.$fIODeviceFD11_info, @object
GHC.IO.FD.$fIODeviceFD11_info:
	.quad	GHC.IO.FD.$fIODeviceFD11_entry
	.quad	0
	.quad	12884901902
	.quad	8589934596
	.quad	Sb0HW_srt+328


==================== Asm code ====================
2018-03-16 16:06:00.864920459 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$wsetSize_closure
.type GHC.IO.FD.$wsetSize_closure, @object
GHC.IO.FD.$wsetSize_closure:
	.quad	GHC.IO.FD.$wsetSize_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.865908817 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wsetSize_entry
.type GHC.IO.FD.$wsetSize_entry, @object
GHC.IO.FD.$wsetSize_entry:
_cb1sq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1sr
_cb1ss:
	leaq block_cb1so_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq %rsi,%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
_cb1sr:
	leaq GHC.IO.FD.$wsetSize_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$wsetSize_entry, .-GHC.IO.FD.$wsetSize_entry


==================== Asm code ====================
2018-03-16 16:06:00.866607866 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$wsetSize_info
.type GHC.IO.FD.$wsetSize_info, @object
GHC.IO.FD.$wsetSize_info:
	.quad	GHC.IO.FD.$wsetSize_entry
	.quad	0
	.quad	12884901902
	.quad	12884901901
	.quad	Sb0HW_srt+344


==================== Asm code ====================
2018-03-16 16:06:00.867381517 UTC

.section .text
.align 8
_cb1so:
_cb1so:
	subq $8,%rsp
	movq %rbx,%rsi
	movq 8(%rbp),%rdi
	xorl %eax,%eax
	call __hscore_ftruncate@plt
	addq $8,%rsp
	testl %eax,%eax
	je _cb1sK
_cb1sE:
	subq $8,%rsp
	xorl %eax,%eax
	call __hscore_get_errno@plt
	addq $8,%rsp
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.IO.FD.$fIODeviceFD11_entry
_cb1sK:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb1so, .-_cb1so


==================== Asm code ====================
2018-03-16 16:06:00.868024388 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1so_info:
	.quad	_cb1so
	.quad	65
	.quad	4294967326
	.quad	Sb0HW_srt+352


==================== Asm code ====================
2018-03-16 16:06:00.870887116 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD10_closure
.type GHC.IO.FD.$fIODeviceFD10_closure, @object
GHC.IO.FD.$fIODeviceFD10_closure:
	.quad	GHC.IO.FD.$fIODeviceFD10_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.871725358 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD10_entry
.type GHC.IO.FD.$fIODeviceFD10_entry, @object
GHC.IO.FD.$fIODeviceFD10_entry:
_cb1t7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1t8
_cb1t9:
	leaq block_cb1t4_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cb1t4
_cb1t5:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1t8:
	leaq GHC.IO.FD.$fIODeviceFD10_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD10_entry, .-GHC.IO.FD.$fIODeviceFD10_entry


==================== Asm code ====================
2018-03-16 16:06:00.87246151 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD10_info
.type GHC.IO.FD.$fIODeviceFD10_info, @object
GHC.IO.FD.$fIODeviceFD10_info:
	.quad	GHC.IO.FD.$fIODeviceFD10_entry
	.quad	0
	.quad	21474836494
	.quad	12884901903
	.quad	Sb0HW_srt+344


==================== Asm code ====================
2018-03-16 16:06:00.87314618 UTC

.section .text
.align 8
_cb1t4:
_cb1t4:
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.IO.FD.$wsetSize_entry
	.size _cb1t4, .-_cb1t4


==================== Asm code ====================
2018-03-16 16:06:00.873747971 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1t4_info:
	.quad	_cb1t4
	.quad	1
	.quad	4294967326
	.quad	Sb0HW_srt+344


==================== Asm code ====================
2018-03-16 16:06:00.876326018 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.writeRawBufferPtr_closure
.type GHC.IO.FD.writeRawBufferPtr_closure, @object
GHC.IO.FD.writeRawBufferPtr_closure:
	.quad	GHC.IO.FD.writeRawBufferPtr_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.876895114 UTC

.section .text
.align 8
.globl GHC.IO.FD.writeRawBufferPtr_entry
.type GHC.IO.FD.writeRawBufferPtr_entry, @object
GHC.IO.FD.writeRawBufferPtr_entry:
_cb1ts:
	jmp GHC.IO.FD.writeRawBufferPtr1_entry
	.size GHC.IO.FD.writeRawBufferPtr_entry, .-GHC.IO.FD.writeRawBufferPtr_entry


==================== Asm code ====================
2018-03-16 16:06:00.877680554 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.writeRawBufferPtr_info
.type GHC.IO.FD.writeRawBufferPtr_info, @object
GHC.IO.FD.writeRawBufferPtr_info:
	.quad	GHC.IO.FD.writeRawBufferPtr_entry
	.quad	0
	.quad	4294967310
	.quad	25769803801
	.quad	Sb0HW_srt+128


==================== Asm code ====================
2018-03-16 16:06:00.87992768 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.readRawBufferPtrNoBlock_closure
.type GHC.IO.FD.readRawBufferPtrNoBlock_closure, @object
GHC.IO.FD.readRawBufferPtrNoBlock_closure:
	.quad	GHC.IO.FD.readRawBufferPtrNoBlock_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.880479786 UTC

.section .text
.align 8
.globl GHC.IO.FD.readRawBufferPtrNoBlock_entry
.type GHC.IO.FD.readRawBufferPtrNoBlock_entry, @object
GHC.IO.FD.readRawBufferPtrNoBlock_entry:
_cb1tD:
	jmp GHC.IO.FD.readRawBufferPtrNoBlock1_entry
	.size GHC.IO.FD.readRawBufferPtrNoBlock_entry, .-GHC.IO.FD.readRawBufferPtrNoBlock_entry


==================== Asm code ====================
2018-03-16 16:06:00.881031514 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.readRawBufferPtrNoBlock_info
.type GHC.IO.FD.readRawBufferPtrNoBlock_info, @object
GHC.IO.FD.readRawBufferPtrNoBlock_info:
	.quad	GHC.IO.FD.readRawBufferPtrNoBlock_entry
	.quad	0
	.quad	4294967310
	.quad	25769803801
	.quad	Sb0HW_srt+368


==================== Asm code ====================
2018-03-16 16:06:00.883235606 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.readRawBufferPtr_closure
.type GHC.IO.FD.readRawBufferPtr_closure, @object
GHC.IO.FD.readRawBufferPtr_closure:
	.quad	GHC.IO.FD.readRawBufferPtr_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.883877925 UTC

.section .text
.align 8
.globl GHC.IO.FD.readRawBufferPtr_entry
.type GHC.IO.FD.readRawBufferPtr_entry, @object
GHC.IO.FD.readRawBufferPtr_entry:
_cb1tO:
	jmp GHC.IO.FD.$fRawIOFD5_entry
	.size GHC.IO.FD.readRawBufferPtr_entry, .-GHC.IO.FD.readRawBufferPtr_entry


==================== Asm code ====================
2018-03-16 16:06:00.88445638 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.readRawBufferPtr_info
.type GHC.IO.FD.readRawBufferPtr_info, @object
GHC.IO.FD.readRawBufferPtr_info:
	.quad	GHC.IO.FD.readRawBufferPtr_entry
	.quad	0
	.quad	4294967310
	.quad	25769803801
	.quad	Sb0HW_srt+376


==================== Asm code ====================
2018-03-16 16:06:00.890541353 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$cfillReadBuffer0_closure
.type GHC.IO.FD.$w$cfillReadBuffer0_closure, @object
GHC.IO.FD.$w$cfillReadBuffer0_closure:
	.quad	GHC.IO.FD.$w$cfillReadBuffer0_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.891237094 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cfillReadBuffer0_slow
.type GHC.IO.FD.$w$cfillReadBuffer0_slow, @object
GHC.IO.FD.$w$cfillReadBuffer0_slow:
_cb1tW:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.FD.$w$cfillReadBuffer0_entry
	.size GHC.IO.FD.$w$cfillReadBuffer0_slow, .-GHC.IO.FD.$w$cfillReadBuffer0_slow


==================== Asm code ====================
2018-03-16 16:06:00.892163055 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cfillReadBuffer0_entry
.type GHC.IO.FD.$w$cfillReadBuffer0_entry, @object
GHC.IO.FD.$w$cfillReadBuffer0_entry:
_cb1u2:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1ud
_cb1ue:
	leaq block_cb1ua_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r9,%rax
	xorl %r9d,%r9d
	movq 16(%rbp),%rbx
	movq %r8,%rcx
	movq %rdi,%r8
	addq %rbx,%r8
	movq %rdi,%rdx
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.IO.FD.$fBufferedIOFD8_closure(%rip),%r14
	movq (%rbp),%r10
	subq %rbx,%r10
	movq %r10,-40(%rbp)
	movq %rdx,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry
_cb1ud:
	leaq GHC.IO.FD.$w$cfillReadBuffer0_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.FD.$w$cfillReadBuffer0_entry, .-GHC.IO.FD.$w$cfillReadBuffer0_entry


==================== Asm code ====================
2018-03-16 16:06:00.892888195 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$cfillReadBuffer0_info
.type GHC.IO.FD.$w$cfillReadBuffer0_info, @object
GHC.IO.FD.$w$cfillReadBuffer0_info:
	.quad	GHC.IO.FD.$w$cfillReadBuffer0_entry
	.quad	0
	.quad	30064771086
	.quad	38654705664
	.quad	Sb0HW_srt+384
	.quad	14792
	.quad	GHC.IO.FD.$w$cfillReadBuffer0_slow


==================== Asm code ====================
2018-03-16 16:06:00.893576751 UTC

.section .text
.align 8
_cb1ua:
_cb1ua:
	leaq block_cb1uc_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cb1uc
_cb1ug:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1ua, .-_cb1ua


==================== Asm code ====================
2018-03-16 16:06:00.894214832 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1ua_info:
	.quad	_cb1ua
	.quad	3654
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.895114209 UTC

.section .text
.align 8
_cb1uc:
_cb1uc:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cb1um
_cb1ul:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq 48(%rbp),%r8
	movq 7(%rbx),%r9
	cmpq $-1,%r9
	je _cb1uC
_cb1ux:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r10
	movq %r10,-88(%r12)
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rax,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	addq %r9,%r8
	movq %r8,-40(%r12)
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -30(%r12),%rax
	movq %rax,-8(%r12)
	leaq -87(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1uC:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r9
	movq %r9,-88(%r12)
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rax,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%r12)
	leaq -87(%r12),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	addq $-16,%r12
	movq %rax,%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1um:
	movq $96,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1uc, .-_cb1uc


==================== Asm code ====================
2018-03-16 16:06:00.896075395 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1uc_info:
	.quad	_cb1uc
	.quad	3654
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.900045496 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD7_closure
.type GHC.IO.FD.$fBufferedIOFD7_closure, @object
GHC.IO.FD.$fBufferedIOFD7_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD7_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.901152721 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD7_entry
.type GHC.IO.FD.$fBufferedIOFD7_entry, @object
GHC.IO.FD.$fBufferedIOFD7_entry:
_cb1vi:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1vm
_cb1vn:
	leaq block_cb1vf_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cb1vf
_cb1vg:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1vm:
	leaq GHC.IO.FD.$fBufferedIOFD7_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fBufferedIOFD7_entry, .-GHC.IO.FD.$fBufferedIOFD7_entry


==================== Asm code ====================
2018-03-16 16:06:00.901876997 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD7_info
.type GHC.IO.FD.$fBufferedIOFD7_info, @object
GHC.IO.FD.$fBufferedIOFD7_info:
	.quad	GHC.IO.FD.$fBufferedIOFD7_entry
	.quad	0
	.quad	38654705678
	.quad	12884901903
	.quad	Sb0HW_srt+384


==================== Asm code ====================
2018-03-16 16:06:00.902617768 UTC

.section .text
.align 8
_cb1vf:
_cb1vf:
	leaq block_cb1vl_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1vl
_cb1vp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1vf, .-_cb1vf


==================== Asm code ====================
2018-03-16 16:06:00.903221423 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1vf_info:
	.quad	_cb1vf
	.quad	1
	.quad	4294967326
	.quad	Sb0HW_srt+384


==================== Asm code ====================
2018-03-16 16:06:00.90384127 UTC

.section .text
.align 8
_cb1vl:
_cb1vl:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,(%rbp)
	movq 39(%rbx),%rax
	movq %rax,8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,16(%rbp)
	jmp GHC.IO.FD.$w$cfillReadBuffer0_entry
	.size _cb1vl, .-_cb1vl


==================== Asm code ====================
2018-03-16 16:06:00.904431555 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1vl_info:
	.quad	_cb1vl
	.quad	194
	.quad	4294967326
	.quad	Sb0HW_srt+384


==================== Asm code ====================
2018-03-16 16:06:00.911065697 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$cflushWriteBuffer0_closure
.type GHC.IO.FD.$w$cflushWriteBuffer0_closure, @object
GHC.IO.FD.$w$cflushWriteBuffer0_closure:
	.quad	GHC.IO.FD.$w$cflushWriteBuffer0_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.911756895 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cflushWriteBuffer0_slow
.type GHC.IO.FD.$w$cflushWriteBuffer0_slow, @object
GHC.IO.FD.$w$cflushWriteBuffer0_slow:
_cb1vP:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.FD.$w$cflushWriteBuffer0_entry
	.size GHC.IO.FD.$w$cflushWriteBuffer0_slow, .-GHC.IO.FD.$w$cflushWriteBuffer0_slow


==================== Asm code ====================
2018-03-16 16:06:00.912613745 UTC

.section .text
.align 8
sat_sb0zu_entry:
_cb1w9:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1wa
_cb1wb:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cb1w6_info(%rip),%rax
	movq %rax,-72(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 64(%rbx),%r8
	movq 32(%rbx),%rbx
	movq %rdx,-64(%rbp)
	movq %rax,-56(%rbp)
	movq %rcx,-48(%rbp)
	movq %rsi,-40(%rbp)
	movq %rdi,-32(%rbp)
	movq %r8,-24(%rbp)
	addq $-72,%rbp
	testb $7,%bl
	jne _cb1w6
_cb1w7:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1wa:
	jmp *-16(%r13)
	.size sat_sb0zu_entry, .-sat_sb0zu_entry


==================== Asm code ====================
2018-03-16 16:06:00.913953744 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0zu_info:
	.quad	sat_sb0zu_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:06:00.914804457 UTC

.section .text
.align 8
_cb1w6:
_cb1w6:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cb1wg
_cb1wf:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 48(%rbp),%rdi
	addq $7,%rbx
	movq 40(%rbp),%r8
	addq (%rbx),%r8
	cmpq %rdi,%r8
	je _cb1ws
_cb1wp:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1ws:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1wg:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1w6, .-_cb1w6


==================== Asm code ====================
2018-03-16 16:06:00.915595927 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1w6_info:
	.quad	_cb1w6
	.quad	3654
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.916382053 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cflushWriteBuffer0_entry
.type GHC.IO.FD.$w$cflushWriteBuffer0_entry, @object
GHC.IO.FD.$w$cflushWriteBuffer0_entry:
_cb1wu:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1ww
_cb1wx:
	leaq block_cb1vZ_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 8(%rbp),%rax
	movq %r8,%rbx
	movq 16(%rbp),%r8
	subq %rax,%r8
	movq %rdi,%rcx
	addq %rax,%rdi
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.IO.FD.$w$cwriteNonBlocking_entry
_cb1ww:
	leaq GHC.IO.FD.$w$cflushWriteBuffer0_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.FD.$w$cflushWriteBuffer0_entry, .-GHC.IO.FD.$w$cflushWriteBuffer0_entry


==================== Asm code ====================
2018-03-16 16:06:00.917091991 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$cflushWriteBuffer0_info
.type GHC.IO.FD.$w$cflushWriteBuffer0_info, @object
GHC.IO.FD.$w$cflushWriteBuffer0_info:
	.quad	GHC.IO.FD.$w$cflushWriteBuffer0_entry
	.quad	0
	.quad	12884901902
	.quad	38654705664
	.quad	Sb0HW_srt+416
	.quad	14792
	.quad	GHC.IO.FD.$w$cflushWriteBuffer0_slow


==================== Asm code ====================
2018-03-16 16:06:00.917898686 UTC

.section .text
.align 8
_cb1vZ:
_cb1vZ:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cb1wA
_cb1wz:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq 48(%rbp),%r8
	leaq sat_sb0zu_info(%rip),%r9
	movq %r9,-88(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1wA:
	movq $96,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1vZ, .-_cb1vZ


==================== Asm code ====================
2018-03-16 16:06:00.918644085 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1vZ_info:
	.quad	_cb1vZ
	.quad	3654
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.922200274 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD1_closure
.type GHC.IO.FD.$fBufferedIOFD1_closure, @object
GHC.IO.FD.$fBufferedIOFD1_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.922978028 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD1_entry
.type GHC.IO.FD.$fBufferedIOFD1_entry, @object
GHC.IO.FD.$fBufferedIOFD1_entry:
_cb1xf:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1xj
_cb1xk:
	leaq block_cb1xc_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cb1xc
_cb1xd:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1xj:
	leaq GHC.IO.FD.$fBufferedIOFD1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fBufferedIOFD1_entry, .-GHC.IO.FD.$fBufferedIOFD1_entry


==================== Asm code ====================
2018-03-16 16:06:00.923643012 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD1_info
.type GHC.IO.FD.$fBufferedIOFD1_info, @object
GHC.IO.FD.$fBufferedIOFD1_info:
	.quad	GHC.IO.FD.$fBufferedIOFD1_entry
	.quad	0
	.quad	21474836494
	.quad	12884901903
	.quad	Sb0HW_srt+416


==================== Asm code ====================
2018-03-16 16:06:00.924387059 UTC

.section .text
.align 8
_cb1xc:
_cb1xc:
	leaq block_cb1xi_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1xi
_cb1xm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1xc, .-_cb1xc


==================== Asm code ====================
2018-03-16 16:06:00.925077933 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1xc_info:
	.quad	_cb1xc
	.quad	1
	.quad	4294967326
	.quad	Sb0HW_srt+416


==================== Asm code ====================
2018-03-16 16:06:00.92579721 UTC

.section .text
.align 8
_cb1xi:
_cb1xi:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,(%rbp)
	movq 39(%rbx),%rax
	movq %rax,8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,16(%rbp)
	jmp GHC.IO.FD.$w$cflushWriteBuffer0_entry
	.size _cb1xi, .-_cb1xi


==================== Asm code ====================
2018-03-16 16:06:00.926760007 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1xi_info:
	.quad	_cb1xi
	.quad	194
	.quad	4294967326
	.quad	Sb0HW_srt+416


==================== Asm code ====================
2018-03-16 16:06:00.93067225 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD21_closure
.type GHC.IO.FD.$fIODeviceFD21_closure, @object
GHC.IO.FD.$fIODeviceFD21_closure:
	.quad	GHC.IO.FD.$fIODeviceFD21_info


==================== Asm code ====================
2018-03-16 16:06:00.931447679 UTC

.section .text
.align 8
sat_sb0zT_entry:
_cb1y5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1y6
_cb1yh:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testl %eax,%eax
	je _cb1y4
_cb1y3:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1y6:
	jmp *-16(%r13)
_cb1y4:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_sb0zT_entry, .-sat_sb0zT_entry


==================== Asm code ====================
2018-03-16 16:06:00.932158529 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0zT_info:
	.quad	sat_sb0zT_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:06:00.932880979 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD21_entry
.type GHC.IO.FD.$fIODeviceFD21_entry, @object
GHC.IO.FD.$fIODeviceFD21_entry:
_cb1yi:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1yj
_cb1yk:
	leaq block_cb1xP_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1xP
_cb1xQ:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1yj:
	leaq GHC.IO.FD.$fIODeviceFD21_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD21_entry, .-GHC.IO.FD.$fIODeviceFD21_entry


==================== Asm code ====================
2018-03-16 16:06:00.933581587 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD21_info
.type GHC.IO.FD.$fIODeviceFD21_info, @object
GHC.IO.FD.$fIODeviceFD21_info:
	.quad	GHC.IO.FD.$fIODeviceFD21_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:06:00.934387879 UTC

.section .text
.align 8
_cb1xP:
_cb1xP:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1yn
_cb1ym:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call isatty@plt
	addq $8,%rsp
	leaq sat_sb0zT_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1yn:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1xP, .-_cb1xP


==================== Asm code ====================
2018-03-16 16:06:00.935077784 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1xP_info:
	.quad	_cb1xP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.937944795 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD25_closure
.type GHC.IO.FD.$fIODeviceFD25_closure, @object
GHC.IO.FD.$fIODeviceFD25_closure:
	.quad	GHC.IO.FD.$fIODeviceFD25_info


==================== Asm code ====================
2018-03-16 16:06:00.938687445 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD25_entry
.type GHC.IO.FD.$fIODeviceFD25_entry, @object
GHC.IO.FD.$fIODeviceFD25_entry:
_cb1yS:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1yT
_cb1yU:
	leaq block_cb1yP_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1yP
_cb1yQ:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1yT:
	leaq GHC.IO.FD.$fIODeviceFD25_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD25_entry, .-GHC.IO.FD.$fIODeviceFD25_entry


==================== Asm code ====================
2018-03-16 16:06:00.939700285 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD25_info
.type GHC.IO.FD.$fIODeviceFD25_info, @object
GHC.IO.FD.$fIODeviceFD25_info:
	.quad	GHC.IO.FD.$fIODeviceFD25_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:06:00.940432844 UTC

.section .text
.align 8
_cb1yP:
_cb1yP:
	cmpq $-1,7(%rbx)
	je _cb1z1
_cb1z0:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1z1:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb1yP, .-_cb1yP


==================== Asm code ====================
2018-03-16 16:06:00.941068603 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1yP_info:
	.quad	_cb1yP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.943097652 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$fIODeviceFD29_bytes
.type GHC.IO.FD.$fIODeviceFD29_bytes, @object
GHC.IO.FD.$fIODeviceFD29_bytes:
	.asciz "GHC.IO.FD.ready"


==================== Asm code ====================
2018-03-16 16:06:00.945601183 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD28_closure
.type GHC.IO.FD.$fIODeviceFD28_closure, @object
GHC.IO.FD.$fIODeviceFD28_closure:
	.quad	GHC.IO.FD.$fIODeviceFD28_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.946452277 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD28_entry
.type GHC.IO.FD.$fIODeviceFD28_entry, @object
GHC.IO.FD.$fIODeviceFD28_entry:
_cb1zo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1zp
_cb1zq:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb1zn
_cb1zm:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.FD.$fIODeviceFD29_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cb1zp:
	jmp *-16(%r13)
_cb1zn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.$fIODeviceFD28_entry, .-GHC.IO.FD.$fIODeviceFD28_entry


==================== Asm code ====================
2018-03-16 16:06:00.947158945 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD28_info
.type GHC.IO.FD.$fIODeviceFD28_info, @object
GHC.IO.FD.$fIODeviceFD28_info:
	.quad	GHC.IO.FD.$fIODeviceFD28_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:00.955944094 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$cready_closure
.type GHC.IO.FD.$w$cready_closure, @object
GHC.IO.FD.$w$cready_closure:
	.quad	GHC.IO.FD.$w$cready_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.957054695 UTC

.section .text
.align 8
sat_sb0Ad_entry:
_cb1zP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1A5
_cb1A6:
	leaq block_cb1zZ_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movzbl %cl,%ecx
	movq 15(%rbx),%rbx
	movq 872(%r13),%rdx
	movq 24(%rdx),%rsi
	movq %rbp,16(%rsi)
	movq 888(%r13),%rsi
	leaq 8(%r12),%rdi
	movq %rdi,8(%rsi)
	leaq 8(%r12),%rdi
	subq (%rsi),%rdi
	movq 104(%rdx),%rsi
	subq %rdi,%rsi
	movq %rsi,104(%rdx)
	subq $8,%rsp
	movq %r13,%rdi
	xorl %esi,%esi
	movq %rax,%rdx
	xorl %eax,%eax
	movq %rdx,%r14
	movq %rcx,72(%rsp)
	call suspendThread@plt
	addq $8,%rsp
	subq $8,%rsp
	movq 72(%rsp),%rcx
	movq %rbx,%rdx
	movq %r14,%rdi
	movq %rcx,%rsi
	xorl %ecx,%ecx
	movq %rax,%rbx
	xorl %eax,%eax
	call fdReady@plt
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call resumeThread@plt
	addq $8,%rsp
	movq %rax,%r13
	movq 872(%r13),%rax
	movq 24(%rax),%rcx
	movq 16(%rcx),%rbp
	leaq 192(%rcx),%r15
	movq $0,904(%r13)
	movq 888(%r13),%rcx
	movq 8(%rcx),%rdx
	leaq -8(%rdx),%r12
	movq (%rcx),%rsi
	movslq 48(%rcx),%rcx
	shlq $12,%rcx
	decq %rcx
	movq %rsi,%rdi
	addq %rcx,%rdi
	movq %rdi,856(%r13)
	subq %rsi,%rdx
	movq 104(%rax),%rcx
	addq %rdx,%rcx
	movq %rcx,104(%rax)
	movq (%rbp),%rax
	jmp *(%rax)
_cb1A5:
	jmp *-8(%r13)
	.size sat_sb0Ad_entry, .-sat_sb0Ad_entry


==================== Asm code ====================
2018-03-16 16:06:00.957956521 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0Ad_info:
	.quad	sat_sb0Ad_entry
	.quad	12884901888
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:00.958688906 UTC

.section .text
.align 8
_cb1zZ:
_cb1zZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb1A9
_cb1A8:
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1A9:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cb1zZ, .-_cb1zZ


==================== Asm code ====================
2018-03-16 16:06:00.959332366 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1zZ_info:
	.quad	_cb1zZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.960068386 UTC

.section .text
.align 8
sat_sb0Ak_entry:
_cb1At:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1Au
_cb1Av:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cb1Aq_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cb1Aq
_cb1Ar:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1Au:
	jmp *-16(%r13)
	.size sat_sb0Ak_entry, .-sat_sb0Ak_entry


==================== Asm code ====================
2018-03-16 16:06:00.960721197 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0Ak_info:
	.quad	sat_sb0Ak_entry
	.quad	1
	.quad	4294967312
	.quad	Sb0HW_srt+440


==================== Asm code ====================
2018-03-16 16:06:00.961501798 UTC

.section .text
.align 8
_cb1Aq:
_cb1Aq:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _ub1AE
_cb1AC:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ub1AE:
	cmpq $1,%rax
	jne _cb1AB
_cb1AD:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1AB:
	movq GHC.Enum.$fEnumBool1_closure@gotpcrel(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1Aq, .-_cb1Aq


==================== Asm code ====================
2018-03-16 16:06:00.962201813 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Aq_info:
	.quad	_cb1Aq
	.quad	0
	.quad	4294967326
	.quad	Sb0HW_srt+440


==================== Asm code ====================
2018-03-16 16:06:00.96301983 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cready_entry
.type GHC.IO.FD.$w$cready_entry, @object
GHC.IO.FD.$w$cready_entry:
_cb1AN:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1AO
_cb1AP:
	leaq block_cb1AG_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cb1AG
_cb1AH:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1AO:
	leaq GHC.IO.FD.$w$cready_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$w$cready_entry, .-GHC.IO.FD.$w$cready_entry


==================== Asm code ====================
2018-03-16 16:06:00.963670168 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$cready_info
.type GHC.IO.FD.$w$cready_info, @object
GHC.IO.FD.$w$cready_info:
	.quad	GHC.IO.FD.$w$cready_entry
	.quad	0
	.quad	63050399078154254
	.quad	17179869202
	.quad	Sb0HW_srt+272


==================== Asm code ====================
2018-03-16 16:06:00.964354421 UTC

.section .text
.align 8
_cb1AG:
_cb1AG:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cb1AK
_cb1AL:
	movq $1,(%rbp)
	jmp _cb1zG
_cb1AK:
	movq $0,(%rbp)
	jmp _cb1zG
	.size _cb1AG, .-_cb1AG


==================== Asm code ====================
2018-03-16 16:06:00.965311792 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1AG_info:
	.quad	_cb1AG
	.quad	194
	.quad	45036000568672286
	.quad	Sb0HW_srt+272


==================== Asm code ====================
2018-03-16 16:06:00.966058485 UTC

.section .text
.align 8
_cb1zG:
_cb1zG:
	addq $32,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cb1AS
_cb1AR:
	leaq sat_sb0Ad_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq block_cb1Ak_info(%rip),%rax
	movq %rax,16(%rbp)
	leaq -23(%r12),%rdi
	leaq GHC.IO.FD.$fIODeviceFD28_closure(%rip),%rsi
	leaq GHC.IO.FD.$fIODeviceFD25_closure+1(%rip),%r14
	addq $16,%rbp
	jmp *Foreign.C.Error.throwErrnoIfMinus1Retry2_entry@gotpcrel(%rip)
_cb1AS:
	movq $32,904(%r13)
	leaq block_cb1zF_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cb1zG, .-_cb1zG


==================== Asm code ====================
2018-03-16 16:06:00.966756239 UTC

.section .text
.align 8
_cb1zF:
_cb1zF:
	movq %rbx,(%rbp)
	jmp _cb1zG
	.size _cb1zF, .-_cb1zF


==================== Asm code ====================
2018-03-16 16:06:00.967296724 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1zF_info:
	.quad	_cb1zF
	.quad	194
	.quad	45036000568672286
	.quad	Sb0HW_srt+272


==================== Asm code ====================
2018-03-16 16:06:00.967958481 UTC

.section .text
.align 8
_cb1Ak:
_cb1Ak:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1AV
_cb1AU:
	leaq sat_sb0Ak_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1AV:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1Ak, .-_cb1Ak


==================== Asm code ====================
2018-03-16 16:06:00.968556667 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Ak_info:
	.quad	_cb1Ak
	.quad	0
	.quad	4294967326
	.quad	Sb0HW_srt+440


==================== Asm code ====================
2018-03-16 16:06:00.972028755 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD27_closure
.type GHC.IO.FD.$fIODeviceFD27_closure, @object
GHC.IO.FD.$fIODeviceFD27_closure:
	.quad	GHC.IO.FD.$fIODeviceFD27_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.972784784 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD27_entry
.type GHC.IO.FD.$fIODeviceFD27_entry, @object
GHC.IO.FD.$fIODeviceFD27_entry:
_cb1Cp:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1Ct
_cb1Cu:
	leaq block_cb1Cm_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cb1Cm
_cb1Cn:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1Ct:
	leaq GHC.IO.FD.$fIODeviceFD27_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD27_entry, .-GHC.IO.FD.$fIODeviceFD27_entry


==================== Asm code ====================
2018-03-16 16:06:00.973494445 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD27_info
.type GHC.IO.FD.$fIODeviceFD27_info, @object
GHC.IO.FD.$fIODeviceFD27_info:
	.quad	GHC.IO.FD.$fIODeviceFD27_entry
	.quad	0
	.quad	21474836494
	.quad	17179869207
	.quad	Sb0HW_srt+448


==================== Asm code ====================
2018-03-16 16:06:00.974182239 UTC

.section .text
.align 8
_cb1Cm:
_cb1Cm:
	leaq block_cb1Cs_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cb1Cs
_cb1Cw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1Cm, .-_cb1Cm


==================== Asm code ====================
2018-03-16 16:06:00.974845053 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Cm_info:
	.quad	_cb1Cm
	.quad	2
	.quad	4294967326
	.quad	Sb0HW_srt+448


==================== Asm code ====================
2018-03-16 16:06:00.975488755 UTC

.section .text
.align 8
_cb1Cs:
_cb1Cs:
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.FD.$w$cready_entry
	.size _cb1Cs, .-_cb1Cs


==================== Asm code ====================
2018-03-16 16:06:00.976049542 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Cs_info:
	.quad	_cb1Cs
	.quad	130
	.quad	4294967326
	.quad	Sb0HW_srt+448


==================== Asm code ====================
2018-03-16 16:06:00.981509905 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.setNonBlockingMode1_closure
.type GHC.IO.FD.setNonBlockingMode1_closure, @object
GHC.IO.FD.setNonBlockingMode1_closure:
	.quad	GHC.IO.FD.setNonBlockingMode1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.98224688 UTC

.section .text
.align 8
sat_sb0AF_entry:
_cb1De:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1Df
_cb1Dg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cb1D7_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cb1D7
_cb1D8:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1Df:
	jmp *-16(%r13)
	.size sat_sb0AF_entry, .-sat_sb0AF_entry


==================== Asm code ====================
2018-03-16 16:06:00.982843978 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0AF_info:
	.quad	sat_sb0AF_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:00.983676279 UTC

.section .text
.align 8
_cb1D7:
_cb1D7:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cb1Db
_cb1Dc:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1Ds
_cb1Dr:
	leaq GHC.IO.FD.FD_con_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq $1,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1Ds:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cb1Db:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1Ds
_cb1Dl:
	leaq GHC.IO.FD.FD_con_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq $0,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb1D7, .-_cb1D7


==================== Asm code ====================
2018-03-16 16:06:00.984382759 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1D7_info:
	.quad	_cb1D7
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.985094967 UTC

.section .text
.align 8
.globl GHC.IO.FD.setNonBlockingMode1_entry
.type GHC.IO.FD.setNonBlockingMode1_entry, @object
GHC.IO.FD.setNonBlockingMode1_entry:
_cb1Du:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1Dv
_cb1Dw:
	leaq block_cb1CW_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cb1CW
_cb1CX:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1Dv:
	leaq GHC.IO.FD.setNonBlockingMode1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.setNonBlockingMode1_entry, .-GHC.IO.FD.setNonBlockingMode1_entry


==================== Asm code ====================
2018-03-16 16:06:00.98622394 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.setNonBlockingMode1_info
.type GHC.IO.FD.setNonBlockingMode1_info, @object
GHC.IO.FD.setNonBlockingMode1_info:
	.quad	GHC.IO.FD.setNonBlockingMode1_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	Sb0HW_srt+472


==================== Asm code ====================
2018-03-16 16:06:00.986896698 UTC

.section .text
.align 8
_cb1CW:
_cb1CW:
	leaq block_cb1D1_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rsi
	movq 7(%rbx),%rax
	movq %rax,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *System.Posix.Internals.$wsetNonBlockingFD_entry@gotpcrel(%rip)
	.size _cb1CW, .-_cb1CW


==================== Asm code ====================
2018-03-16 16:06:00.987513774 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1CW_info:
	.quad	_cb1CW
	.quad	1
	.quad	4294967326
	.quad	Sb0HW_srt+472


==================== Asm code ====================
2018-03-16 16:06:00.988208818 UTC

.section .text
.align 8
_cb1D1:
_cb1D1:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cb1DA
_cb1Dz:
	leaq sat_sb0AF_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -24(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1DA:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1D1, .-_cb1D1


==================== Asm code ====================
2018-03-16 16:06:00.98887366 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1D1_info:
	.quad	_cb1D1
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:00.99178583 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.setNonBlockingMode_closure
.type GHC.IO.FD.setNonBlockingMode_closure, @object
GHC.IO.FD.setNonBlockingMode_closure:
	.quad	GHC.IO.FD.setNonBlockingMode_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.99235876 UTC

.section .text
.align 8
.globl GHC.IO.FD.setNonBlockingMode_entry
.type GHC.IO.FD.setNonBlockingMode_entry, @object
GHC.IO.FD.setNonBlockingMode_entry:
_cb1Ee:
	jmp GHC.IO.FD.setNonBlockingMode1_entry
	.size GHC.IO.FD.setNonBlockingMode_entry, .-GHC.IO.FD.setNonBlockingMode_entry


==================== Asm code ====================
2018-03-16 16:06:00.992873244 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.setNonBlockingMode_info
.type GHC.IO.FD.setNonBlockingMode_info, @object
GHC.IO.FD.setNonBlockingMode_info:
	.quad	GHC.IO.FD.setNonBlockingMode_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	Sb0HW_srt+480


==================== Asm code ====================
2018-03-16 16:06:00.994479511 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl5_raWVb_bytes:
	.asciz "GHC.IO.FD.dup2"


==================== Asm code ====================
2018-03-16 16:06:00.996861677 UTC

.section .data
.align 8
.align 1
lvl6_raWVc_closure:
	.quad	lvl6_raWVc_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:00.997660451 UTC

.section .text
.align 8
lvl6_raWVc_entry:
_cb1Es:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1Et
_cb1Eu:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb1Er
_cb1Eq:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl5_raWVb_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cb1Et:
	jmp *-16(%r13)
_cb1Er:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl6_raWVc_entry, .-lvl6_raWVc_entry


==================== Asm code ====================
2018-03-16 16:06:00.998337936 UTC

.section .data.rel.ro
.align 8
.align 1
lvl6_raWVc_info:
	.quad	lvl6_raWVc_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:01.000440785 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD2_closure
.type GHC.IO.FD.$fIODeviceFD2_closure, @object
GHC.IO.FD.$fIODeviceFD2_closure:
	.quad	GHC.IO.FD.$fIODeviceFD2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.001054373 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD2_entry
.type GHC.IO.FD.$fIODeviceFD2_entry, @object
GHC.IO.FD.$fIODeviceFD2_entry:
_cb1EJ:
	movslq %r14d,%rsi
	leaq lvl6_raWVc_closure(%rip),%r14
	jmp *Foreign.C.Error.$wlvl_entry@gotpcrel(%rip)
	.size GHC.IO.FD.$fIODeviceFD2_entry, .-GHC.IO.FD.$fIODeviceFD2_entry


==================== Asm code ====================
2018-03-16 16:06:01.001781642 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD2_info
.type GHC.IO.FD.$fIODeviceFD2_info, @object
GHC.IO.FD.$fIODeviceFD2_info:
	.quad	GHC.IO.FD.$fIODeviceFD2_entry
	.quad	0
	.quad	4503603922337806
	.quad	8589934596
	.quad	Sb0HW_srt+328


==================== Asm code ====================
2018-03-16 16:06:01.005829794 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$cdup2_closure
.type GHC.IO.FD.$w$cdup2_closure, @object
GHC.IO.FD.$w$cdup2_closure:
	.quad	GHC.IO.FD.$w$cdup2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.00669056 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cdup2_entry
.type GHC.IO.FD.$w$cdup2_entry, @object
GHC.IO.FD.$w$cdup2_entry:
_cb1F2:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1F3
_cb1F4:
	movq %rdi,%rax
	subq $8,%rsp
	movq %rsi,%rbx
	movq %rdi,%rsi
	movq %r14,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call dup2@plt
	addq $8,%rsp
	movslq %eax,%rax
	cmpq $-1,%rax
	jne _ub1Fj
_cb1F1:
	subq $8,%rsp
	xorl %eax,%eax
	call __hscore_get_errno@plt
	addq $8,%rsp
	movq %rax,%r14
	jmp GHC.IO.FD.$fIODeviceFD2_entry
_ub1Fj:
	movq %rbx,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp _cb1F7
_cb1F3:
	leaq GHC.IO.FD.$w$cdup2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$w$cdup2_entry, .-GHC.IO.FD.$w$cdup2_entry


==================== Asm code ====================
2018-03-16 16:06:01.007345482 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$cdup2_info
.type GHC.IO.FD.$w$cdup2_info, @object
GHC.IO.FD.$w$cdup2_info:
	.quad	GHC.IO.FD.$w$cdup2_entry
	.quad	0
	.quad	12884901902
	.quad	17179869200
	.quad	Sb0HW_srt+496


==================== Asm code ====================
2018-03-16 16:06:01.008072398 UTC

.section .text
.align 8
_cb1F7:
_cb1F7:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1Fc
_cb1Fb:
	leaq GHC.IO.FD.FD_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1Fc:
	movq $24,904(%r13)
	leaq block_cb1F6_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbp),%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cb1F7, .-_cb1F7


==================== Asm code ====================
2018-03-16 16:06:01.008771672 UTC

.section .text
.align 8
_cb1F6:
_cb1F6:
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp _cb1F7
	.size _cb1F6, .-_cb1F6


==================== Asm code ====================
2018-03-16 16:06:01.009268294 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1F6_info:
	.quad	_cb1F6
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.012407421 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD1_closure
.type GHC.IO.FD.$fIODeviceFD1_closure, @object
GHC.IO.FD.$fIODeviceFD1_closure:
	.quad	GHC.IO.FD.$fIODeviceFD1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.013183819 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD1_entry
.type GHC.IO.FD.$fIODeviceFD1_entry, @object
GHC.IO.FD.$fIODeviceFD1_entry:
_cb1FK:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1FO
_cb1FP:
	leaq block_cb1FH_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cb1FH
_cb1FI:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1FO:
	leaq GHC.IO.FD.$fIODeviceFD1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD1_entry, .-GHC.IO.FD.$fIODeviceFD1_entry


==================== Asm code ====================
2018-03-16 16:06:01.013921358 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD1_info
.type GHC.IO.FD.$fIODeviceFD1_info, @object
GHC.IO.FD.$fIODeviceFD1_info:
	.quad	GHC.IO.FD.$fIODeviceFD1_entry
	.quad	0
	.quad	21474836494
	.quad	12884901903
	.quad	Sb0HW_srt+496


==================== Asm code ====================
2018-03-16 16:06:01.014652627 UTC

.section .text
.align 8
_cb1FH:
_cb1FH:
	leaq block_cb1FN_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1FN
_cb1FR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1FH, .-_cb1FH


==================== Asm code ====================
2018-03-16 16:06:01.015273736 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1FH_info:
	.quad	_cb1FH
	.quad	1
	.quad	4294967326
	.quad	Sb0HW_srt+496


==================== Asm code ====================
2018-03-16 16:06:01.015907305 UTC

.section .text
.align 8
_cb1FN:
_cb1FN:
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.FD.$w$cdup2_entry
	.size _cb1FN, .-_cb1FN


==================== Asm code ====================
2018-03-16 16:06:01.016475332 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1FN_info:
	.quad	_cb1FN
	.quad	194
	.quad	4294967326
	.quad	Sb0HW_srt+496


==================== Asm code ====================
2018-03-16 16:06:01.018851262 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$fIODeviceFD5_bytes
.type GHC.IO.FD.$fIODeviceFD5_bytes, @object
GHC.IO.FD.$fIODeviceFD5_bytes:
	.asciz "GHC.IO.FD.dup"


==================== Asm code ====================
2018-03-16 16:06:01.021383944 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD4_closure
.type GHC.IO.FD.$fIODeviceFD4_closure, @object
GHC.IO.FD.$fIODeviceFD4_closure:
	.quad	GHC.IO.FD.$fIODeviceFD4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.022197739 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD4_entry
.type GHC.IO.FD.$fIODeviceFD4_entry, @object
GHC.IO.FD.$fIODeviceFD4_entry:
_cb1Gk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1Gl
_cb1Gm:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb1Gj
_cb1Gi:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.FD.$fIODeviceFD5_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cb1Gl:
	jmp *-16(%r13)
_cb1Gj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.$fIODeviceFD4_entry, .-GHC.IO.FD.$fIODeviceFD4_entry


==================== Asm code ====================
2018-03-16 16:06:01.022889962 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD4_info
.type GHC.IO.FD.$fIODeviceFD4_info, @object
GHC.IO.FD.$fIODeviceFD4_info:
	.quad	GHC.IO.FD.$fIODeviceFD4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:01.028825758 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$cdup_closure
.type GHC.IO.FD.$w$cdup_closure, @object
GHC.IO.FD.$w$cdup_closure:
	.quad	GHC.IO.FD.$w$cdup_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.029626003 UTC

.section .text
.align 8
sat_sb0Bl_entry:
_cb1GR:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1GV
_cb1GW:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cb1GO_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cb1GO
_cb1GP:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1GV:
	jmp *-16(%r13)
	.size sat_sb0Bl_entry, .-sat_sb0Bl_entry


==================== Asm code ====================
2018-03-16 16:06:01.030298982 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0Bl_info:
	.quad	sat_sb0Bl_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:01.031415439 UTC

.section .text
.align 8
_cb1GO:
_cb1GO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1GZ
_cb1GY:
	movq 7(%rbx),%rax
	leaq GHC.IO.FD.FD_con_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1GZ:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1GO, .-_cb1GO


==================== Asm code ====================
2018-03-16 16:06:01.032091254 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1GO_info:
	.quad	_cb1GO
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.032890683 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cdup_entry
.type GHC.IO.FD.$w$cdup_entry, @object
GHC.IO.FD.$w$cdup_entry:
_cb1H4:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1H5
_cb1H6:
	subq $8,%rsp
	movq %r14,%rdi
	xorl %eax,%eax
	movq %rsi,%rbx
	call dup@plt
	addq $8,%rsp
	movslq %eax,%rax
	cmpq $-1,%rax
	jne _ub1Hi
_cb1H3:
	leaq block_cb1GI_info(%rip),%rax
	movq %rax,-16(%rbp)
	leaq GHC.IO.FD.$fIODeviceFD4_closure(%rip),%r14
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp *Foreign.C.Error.throwErrno1_entry@gotpcrel(%rip)
_ub1Hi:
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp _cb1H8
_cb1H5:
	leaq GHC.IO.FD.$w$cdup_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$w$cdup_entry, .-GHC.IO.FD.$w$cdup_entry


==================== Asm code ====================
2018-03-16 16:06:01.033851053 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$cdup_info
.type GHC.IO.FD.$w$cdup_info, @object
GHC.IO.FD.$w$cdup_info:
	.quad	GHC.IO.FD.$w$cdup_entry
	.quad	0
	.quad	30064771086
	.quad	12884901900
	.quad	Sb0HW_srt+520


==================== Asm code ====================
2018-03-16 16:06:01.034560689 UTC

.section .text
.align 8
_cb1H8:
_cb1H8:
	addq $24,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cb1Hd
_cb1Hc:
	leaq GHC.IO.FD.FD_con_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1Hd:
	movq $24,904(%r13)
	leaq block_cb1H7_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cb1H8, .-_cb1H8


==================== Asm code ====================
2018-03-16 16:06:01.035295432 UTC

.section .text
.align 8
_cb1H7:
_cb1H7:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _cb1H8
	.size _cb1H7, .-_cb1H7


==================== Asm code ====================
2018-03-16 16:06:01.035831533 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1H7_info:
	.quad	_cb1H7
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.0365331 UTC

.section .text
.align 8
_cb1GI:
_cb1GI:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cb1Hh
_cb1Hg:
	leaq sat_sb0Bl_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -24(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1Hh:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1GI, .-_cb1GI


==================== Asm code ====================
2018-03-16 16:06:01.037162464 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1GI_info:
	.quad	_cb1GI
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.039979257 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD3_closure
.type GHC.IO.FD.$fIODeviceFD3_closure, @object
GHC.IO.FD.$fIODeviceFD3_closure:
	.quad	GHC.IO.FD.$fIODeviceFD3_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.040764712 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD3_entry
.type GHC.IO.FD.$fIODeviceFD3_entry, @object
GHC.IO.FD.$fIODeviceFD3_entry:
_cb1I1:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1I2
_cb1I3:
	leaq block_cb1HY_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1HY
_cb1HZ:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1I2:
	leaq GHC.IO.FD.$fIODeviceFD3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD3_entry, .-GHC.IO.FD.$fIODeviceFD3_entry


==================== Asm code ====================
2018-03-16 16:06:01.041458737 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD3_info
.type GHC.IO.FD.$fIODeviceFD3_info, @object
GHC.IO.FD.$fIODeviceFD3_info:
	.quad	GHC.IO.FD.$fIODeviceFD3_entry
	.quad	0
	.quad	38654705678
	.quad	8589934597
	.quad	Sb0HW_srt+520


==================== Asm code ====================
2018-03-16 16:06:01.042142377 UTC

.section .text
.align 8
_cb1HY:
_cb1HY:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.IO.FD.$w$cdup_entry
	.size _cb1HY, .-_cb1HY


==================== Asm code ====================
2018-03-16 16:06:01.042739782 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1HY_info:
	.quad	_cb1HY
	.quad	0
	.quad	4294967326
	.quad	Sb0HW_srt+520


==================== Asm code ====================
2018-03-16 16:06:01.047618066 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD6_closure
.type GHC.IO.FD.$fIODeviceFD6_closure, @object
GHC.IO.FD.$fIODeviceFD6_closure:
	.quad	GHC.IO.FD.$fIODeviceFD6_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.048320998 UTC

.section .text
.align 8
sat_sb0Bw_entry:
_cb1It:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1Ix
_cb1Iy:
	leaq block_cb1Iq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1Iq
_cb1Ir:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1Ix:
	jmp *-16(%r13)
	.size sat_sb0Bw_entry, .-sat_sb0Bw_entry


==================== Asm code ====================
2018-03-16 16:06:01.048944204 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0Bw_info:
	.quad	sat_sb0Bw_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:01.049620576 UTC

.section .text
.align 8
_cb1Iq:
_cb1Iq:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb1IB
_cb1IA:
	movq 7(%rbx),%rax
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1IB:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1Iq, .-_cb1Iq


==================== Asm code ====================
2018-03-16 16:06:01.050233018 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Iq_info:
	.quad	_cb1Iq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.050967019 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD6_entry
.type GHC.IO.FD.$fIODeviceFD6_entry, @object
GHC.IO.FD.$fIODeviceFD6_entry:
_cb1II:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1IJ
_cb1IK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1IM
_cb1IL:
	leaq sat_sb0Bw_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq block_cb1ID_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -16(%r12),%r14
	addq $-8,%rbp
	jmp *System.Posix.Internals.fdStat1_entry@gotpcrel(%rip)
_cb1IM:
	movq $24,904(%r13)
_cb1IJ:
	leaq GHC.IO.FD.$fIODeviceFD6_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD6_entry, .-GHC.IO.FD.$fIODeviceFD6_entry


==================== Asm code ====================
2018-03-16 16:06:01.051682289 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD6_info
.type GHC.IO.FD.$fIODeviceFD6_info, @object
GHC.IO.FD.$fIODeviceFD6_info:
	.quad	GHC.IO.FD.$fIODeviceFD6_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	Sb0HW_srt+552


==================== Asm code ====================
2018-03-16 16:06:01.052370287 UTC

.section .text
.align 8
_cb1ID:
_cb1ID:
	leaq block_cb1IF_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cb1IF
_cb1IG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1ID, .-_cb1ID


==================== Asm code ====================
2018-03-16 16:06:01.052986176 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1ID_info:
	.quad	_cb1ID
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.05361347 UTC

.section .text
.align 8
_cb1IF:
_cb1IF:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb1IF, .-_cb1IF


==================== Asm code ====================
2018-03-16 16:06:01.054225036 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1IF_info:
	.quad	_cb1IF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.060482325 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD20_closure
.type GHC.IO.FD.$fIODeviceFD20_closure, @object
GHC.IO.FD.$fIODeviceFD20_closure:
	.quad	GHC.IO.FD.$fIODeviceFD20_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.061235988 UTC

.section .text
.align 8
sat_sb0BJ_entry:
_cb1Ju:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1Jy
_cb1Jz:
	leaq block_cb1Jr_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1Jr
_cb1Js:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1Jy:
	jmp *-16(%r13)
	.size sat_sb0BJ_entry, .-sat_sb0BJ_entry


==================== Asm code ====================
2018-03-16 16:06:01.062218658 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0BJ_info:
	.quad	sat_sb0BJ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:01.062905379 UTC

.section .text
.align 8
_cb1Jr:
_cb1Jr:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb1JC
_cb1JB:
	movq 7(%rbx),%rax
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1JC:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1Jr, .-_cb1Jr


==================== Asm code ====================
2018-03-16 16:06:01.06356168 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Jr_info:
	.quad	_cb1Jr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.06430719 UTC

.section .text
.align 8
sat_sb0BS_entry:
_cb1JX:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1JY
_cb1JZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cb1JP_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cb1JP
_cb1JQ:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1JY:
	jmp *-16(%r13)
	.size sat_sb0BS_entry, .-sat_sb0BS_entry


==================== Asm code ====================
2018-03-16 16:06:01.064963548 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0BS_info:
	.quad	sat_sb0BS_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:01.066083064 UTC

.section .text
.align 8
_cb1JP:
_cb1JP:
	andl $7,%ebx
	cmpq $3,%rbx
	je _cb1JV
_ub1K9:
	cmpq $4,%rbx
	je _cb1JV
_cb1JT:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1JV:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb1JP, .-_cb1JP


==================== Asm code ====================
2018-03-16 16:06:01.066746098 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1JP_info:
	.quad	_cb1JP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.067456559 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD20_entry
.type GHC.IO.FD.$fIODeviceFD20_entry, @object
GHC.IO.FD.$fIODeviceFD20_entry:
_cb1Kb:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1Kc
_cb1Kd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1Kf
_cb1Ke:
	leaq sat_sb0BJ_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq block_cb1JE_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -16(%r12),%r14
	addq $-8,%rbp
	jmp *System.Posix.Internals.fdStat1_entry@gotpcrel(%rip)
_cb1Kf:
	movq $24,904(%r13)
_cb1Kc:
	leaq GHC.IO.FD.$fIODeviceFD20_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD20_entry, .-GHC.IO.FD.$fIODeviceFD20_entry


==================== Asm code ====================
2018-03-16 16:06:01.068189658 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD20_info
.type GHC.IO.FD.$fIODeviceFD20_info, @object
GHC.IO.FD.$fIODeviceFD20_info:
	.quad	GHC.IO.FD.$fIODeviceFD20_entry
	.quad	0
	.quad	21474836494
	.quad	8589934597
	.quad	Sb0HW_srt+552


==================== Asm code ====================
2018-03-16 16:06:01.068879451 UTC

.section .text
.align 8
_cb1JE:
_cb1JE:
	leaq block_cb1JG_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cb1JG
_cb1JH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1JE, .-_cb1JE


==================== Asm code ====================
2018-03-16 16:06:01.069530258 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1JE_info:
	.quad	_cb1JE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.070259835 UTC

.section .text
.align 8
_cb1JG:
_cb1JG:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1Kj
_cb1Ki:
	movq 7(%rbx),%rax
	leaq sat_sb0BS_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1Kj:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1JG, .-_cb1JG


==================== Asm code ====================
2018-03-16 16:06:01.071255456 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1JG_info:
	.quad	_cb1JG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.07413113 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.release1_closure
.type GHC.IO.FD.release1_closure, @object
GHC.IO.FD.release1_closure:
	.quad	GHC.IO.FD.release1_info


==================== Asm code ====================
2018-03-16 16:06:01.074871288 UTC

.section .text
.align 8
.globl GHC.IO.FD.release1_entry
.type GHC.IO.FD.release1_entry, @object
GHC.IO.FD.release1_entry:
_cb1L9:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1La
_cb1Lb:
	leaq block_cb1L6_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1L6
_cb1L7:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1La:
	leaq GHC.IO.FD.release1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.release1_entry, .-GHC.IO.FD.release1_entry


==================== Asm code ====================
2018-03-16 16:06:01.075537113 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.release1_info
.type GHC.IO.FD.release1_info, @object
GHC.IO.FD.release1_info:
	.quad	GHC.IO.FD.release1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:06:01.076225795 UTC

.section .text
.align 8
_cb1L6:
_cb1L6:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call unlockFile@plt
	addq $8,%rsp
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rbx
	incq %rbx
	addq $8,%rbp
	movq (%rbp),%rcx
	jmp *(%rcx)
	.size _cb1L6, .-_cb1L6


==================== Asm code ====================
2018-03-16 16:06:01.07677348 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1L6_info:
	.quad	_cb1L6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.078964647 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.release_closure
.type GHC.IO.FD.release_closure, @object
GHC.IO.FD.release_closure:
	.quad	GHC.IO.FD.release_info


==================== Asm code ====================
2018-03-16 16:06:01.079625004 UTC

.section .text
.align 8
.globl GHC.IO.FD.release_entry
.type GHC.IO.FD.release_entry, @object
GHC.IO.FD.release_entry:
_cb1Ly:
	jmp GHC.IO.FD.release1_entry
	.size GHC.IO.FD.release_entry, .-GHC.IO.FD.release_entry


==================== Asm code ====================
2018-03-16 16:06:01.080211644 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.release_info
.type GHC.IO.FD.release_info, @object
GHC.IO.FD.release_info:
	.quad	GHC.IO.FD.release_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:06:01.081899087 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.$fIODeviceFD24_bytes
.type GHC.IO.FD.$fIODeviceFD24_bytes, @object
GHC.IO.FD.$fIODeviceFD24_bytes:
	.asciz "GHC.IO.FD.close"


==================== Asm code ====================
2018-03-16 16:06:01.084771985 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD23_closure
.type GHC.IO.FD.$fIODeviceFD23_closure, @object
GHC.IO.FD.$fIODeviceFD23_closure:
	.quad	GHC.IO.FD.$fIODeviceFD23_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.085601705 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD23_entry
.type GHC.IO.FD.$fIODeviceFD23_entry, @object
GHC.IO.FD.$fIODeviceFD23_entry:
_cb1LM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1LN
_cb1LO:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb1LL
_cb1LK:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.FD.$fIODeviceFD24_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cb1LN:
	jmp *-16(%r13)
_cb1LL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.$fIODeviceFD23_entry, .-GHC.IO.FD.$fIODeviceFD23_entry


==================== Asm code ====================
2018-03-16 16:06:01.086281259 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD23_info
.type GHC.IO.FD.$fIODeviceFD23_info, @object
GHC.IO.FD.$fIODeviceFD23_info:
	.quad	GHC.IO.FD.$fIODeviceFD23_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:01.089850304 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$wclose_closure
.type GHC.IO.FD.$wclose_closure, @object
GHC.IO.FD.$wclose_closure:
	.quad	GHC.IO.FD.$wclose_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.0906031 UTC

.section .text
.align 8
sat_sb0Cc_entry:
_cb1M8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb1Mj
_cb1Mi:
	subq $8,%rsp
	movq 7(%rbx),%rax
	movslq %eax,%rdi
	xorl %eax,%eax
	call close@plt
	addq $8,%rsp
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cb1Mj:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_sb0Cc_entry, .-sat_sb0Cc_entry


==================== Asm code ====================
2018-03-16 16:06:01.091222039 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0Cc_info:
	.quad	sat_sb0Cc_entry
	.quad	4294967296
	.quad	10
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:01.091962781 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wclose_entry
.type GHC.IO.FD.$wclose_entry, @object
GHC.IO.FD.$wclose_entry:
_cb1Mm:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1Mn
_cb1Mo:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb1Mq
_cb1Mp:
	leaq sat_sb0Cc_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq block_cb1Mk_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -7(%r12),%rdi
	leaq GHC.IO.FD.$fIODeviceFD23_closure(%rip),%rsi
	leaq GHC.IO.FD.$fIODeviceFD25_closure+1(%rip),%r14
	addq $-8,%rbp
	jmp *Foreign.C.Error.throwErrnoIfMinus1Retry2_entry@gotpcrel(%rip)
_cb1Mq:
	movq $16,904(%r13)
_cb1Mn:
	leaq GHC.IO.FD.$wclose_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$wclose_entry, .-GHC.IO.FD.$wclose_entry


==================== Asm code ====================
2018-03-16 16:06:01.092705346 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$wclose_info
.type GHC.IO.FD.$wclose_info, @object
GHC.IO.FD.$wclose_info:
	.quad	GHC.IO.FD.$wclose_entry
	.quad	0
	.quad	30064771086
	.quad	8589934596
	.quad	Sb0HW_srt+576


==================== Asm code ====================
2018-03-16 16:06:01.093732005 UTC

.section .text
.align 8
_cb1Mk:
_cb1Mk:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb1Mk, .-_cb1Mk


==================== Asm code ====================
2018-03-16 16:06:01.094265001 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Mk_info:
	.quad	_cb1Mk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.097406552 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD26_closure
.type GHC.IO.FD.$fIODeviceFD26_closure, @object
GHC.IO.FD.$fIODeviceFD26_closure:
	.quad	GHC.IO.FD.$fIODeviceFD26_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.09812332 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD26_entry
.type GHC.IO.FD.$fIODeviceFD26_entry, @object
GHC.IO.FD.$fIODeviceFD26_entry:
_cb1MS:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1MT
_cb1MU:
	leaq block_cb1MP_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1MP
_cb1MQ:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1MT:
	leaq GHC.IO.FD.$fIODeviceFD26_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD26_entry, .-GHC.IO.FD.$fIODeviceFD26_entry


==================== Asm code ====================
2018-03-16 16:06:01.098779434 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD26_info
.type GHC.IO.FD.$fIODeviceFD26_info, @object
GHC.IO.FD.$fIODeviceFD26_info:
	.quad	GHC.IO.FD.$fIODeviceFD26_entry
	.quad	0
	.quad	21474836494
	.quad	8589934597
	.quad	Sb0HW_srt+584


==================== Asm code ====================
2018-03-16 16:06:01.099375707 UTC

.section .text
.align 8
_cb1MP:
_cb1MP:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.IO.FD.$wclose_entry
	.size _cb1MP, .-_cb1MP


==================== Asm code ====================
2018-03-16 16:06:01.099979872 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1MP_info:
	.quad	_cb1MP
	.quad	0
	.quad	4294967326
	.quad	Sb0HW_srt+584


==================== Asm code ====================
2018-03-16 16:06:01.104362894 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$cclose_closure
.type GHC.IO.FD.$w$cclose_closure, @object
GHC.IO.FD.$w$cclose_closure:
	.quad	GHC.IO.FD.$w$cclose_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.105137904 UTC

.section .text
.align 8
sat_sb0CF_entry:
_cb1Nq:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb1NB
_cb1NA:
	subq $8,%rsp
	movq 7(%rbx),%rax
	movslq %eax,%rdi
	xorl %eax,%eax
	call close@plt
	addq $8,%rsp
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cb1NB:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_sb0CF_entry, .-sat_sb0CF_entry


==================== Asm code ====================
2018-03-16 16:06:01.105844397 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0CF_info:
	.quad	sat_sb0CF_entry
	.quad	4294967296
	.quad	10
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:01.106793712 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cclose_entry
.type GHC.IO.FD.$w$cclose_entry, @object
GHC.IO.FD.$w$cclose_entry:
_cb1NF:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1NG
_cb1NH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb1NJ
_cb1NI:
	subq $8,%rsp
	movq %r14,%rdi
	xorl %eax,%eax
	call unlockFile@plt
	addq $8,%rsp
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call rtsSupportsBoundThreads@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb1NE
_cb1ND:
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movslq %r14d,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rsi
	leaq GHC.IO.FD.$fIODeviceFD26_closure+2(%rip),%r14
	jmp *GHC.Event.Thread.closeFdWith1_entry@gotpcrel(%rip)
_cb1NJ:
	movq $16,904(%r13)
_cb1NG:
	leaq GHC.IO.FD.$w$cclose_closure(%rip),%rbx
	jmp *-8(%r13)
_cb1NE:
	leaq sat_sb0CF_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq block_cb1NO_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -7(%r12),%rdi
	leaq GHC.IO.FD.$fIODeviceFD23_closure(%rip),%rsi
	leaq GHC.IO.FD.$fIODeviceFD25_closure+1(%rip),%r14
	addq $-8,%rbp
	jmp *Foreign.C.Error.throwErrnoIfMinus1Retry2_entry@gotpcrel(%rip)
	.size GHC.IO.FD.$w$cclose_entry, .-GHC.IO.FD.$w$cclose_entry


==================== Asm code ====================
2018-03-16 16:06:01.107636586 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$cclose_info
.type GHC.IO.FD.$w$cclose_info, @object
GHC.IO.FD.$w$cclose_info:
	.quad	GHC.IO.FD.$w$cclose_entry
	.quad	0
	.quad	261993005070
	.quad	8589934596
	.quad	Sb0HW_srt+576


==================== Asm code ====================
2018-03-16 16:06:01.108290229 UTC

.section .text
.align 8
_cb1NO:
_cb1NO:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb1NO, .-_cb1NO


==================== Asm code ====================
2018-03-16 16:06:01.108890352 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1NO_info:
	.quad	_cb1NO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.112174817 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD22_closure
.type GHC.IO.FD.$fIODeviceFD22_closure, @object
GHC.IO.FD.$fIODeviceFD22_closure:
	.quad	GHC.IO.FD.$fIODeviceFD22_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.112918274 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fIODeviceFD22_entry
.type GHC.IO.FD.$fIODeviceFD22_entry, @object
GHC.IO.FD.$fIODeviceFD22_entry:
_cb1Oj:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1Ok
_cb1Ol:
	leaq block_cb1Og_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1Og
_cb1Oh:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1Ok:
	leaq GHC.IO.FD.$fIODeviceFD22_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fIODeviceFD22_entry, .-GHC.IO.FD.$fIODeviceFD22_entry


==================== Asm code ====================
2018-03-16 16:06:01.113617851 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD22_info
.type GHC.IO.FD.$fIODeviceFD22_info, @object
GHC.IO.FD.$fIODeviceFD22_info:
	.quad	GHC.IO.FD.$fIODeviceFD22_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	Sb0HW_srt+616


==================== Asm code ====================
2018-03-16 16:06:01.114264886 UTC

.section .text
.align 8
_cb1Og:
_cb1Og:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.IO.FD.$w$cclose_entry
	.size _cb1Og, .-_cb1Og


==================== Asm code ====================
2018-03-16 16:06:01.1148 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Og_info:
	.quad	_cb1Og
	.quad	0
	.quad	4294967326
	.quad	Sb0HW_srt+616


==================== Asm code ====================
2018-03-16 16:06:01.11657591 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fIODeviceFD_closure
.type GHC.IO.FD.$fIODeviceFD_closure, @object
GHC.IO.FD.$fIODeviceFD_closure:
	.quad	GHC.IO.Device.C:IODevice_con_info
	.quad	GHC.IO.FD.$fIODeviceFD27_closure+4
	.quad	GHC.IO.FD.$fIODeviceFD22_closure+2
	.quad	GHC.IO.FD.$fIODeviceFD21_closure+2
	.quad	GHC.IO.FD.$fIODeviceFD20_closure+2
	.quad	GHC.IO.FD.$fIODeviceFD17_closure+4
	.quad	GHC.IO.FD.$fIODeviceFD13_closure+2
	.quad	GHC.IO.FD.$fIODeviceFD12_closure+2
	.quad	GHC.IO.FD.$fIODeviceFD10_closure+3
	.quad	GHC.IO.FD.$fIODeviceFD9_closure+3
	.quad	GHC.IO.FD.$fIODeviceFD8_closure+2
	.quad	GHC.IO.FD.$fIODeviceFD7_closure+3
	.quad	GHC.IO.FD.$fIODeviceFD6_closure+2
	.quad	GHC.IO.FD.$fIODeviceFD3_closure+2
	.quad	GHC.IO.FD.$fIODeviceFD1_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.11834906 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.mkFD7_bytes
.type GHC.IO.FD.mkFD7_bytes, @object
GHC.IO.FD.mkFD7_bytes:
	.asciz "openFile"


==================== Asm code ====================
2018-03-16 16:06:01.120816393 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.mkFD6_closure
.type GHC.IO.FD.mkFD6_closure, @object
GHC.IO.FD.mkFD6_closure:
	.quad	GHC.IO.FD.mkFD6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.121656784 UTC

.section .text
.align 8
.globl GHC.IO.FD.mkFD6_entry
.type GHC.IO.FD.mkFD6_entry, @object
GHC.IO.FD.mkFD6_entry:
_cb1OI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1OJ
_cb1OK:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb1OH
_cb1OG:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.FD.mkFD7_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cb1OJ:
	jmp *-16(%r13)
_cb1OH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.mkFD6_entry, .-GHC.IO.FD.mkFD6_entry


==================== Asm code ====================
2018-03-16 16:06:01.122356685 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.mkFD6_info
.type GHC.IO.FD.mkFD6_info, @object
GHC.IO.FD.mkFD6_info:
	.quad	GHC.IO.FD.mkFD6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:01.124297142 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.mkFD11_bytes
.type GHC.IO.FD.mkFD11_bytes, @object
GHC.IO.FD.mkFD11_bytes:
	.asciz "is a directory"


==================== Asm code ====================
2018-03-16 16:06:01.126797172 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.mkFD10_closure
.type GHC.IO.FD.mkFD10_closure, @object
GHC.IO.FD.mkFD10_closure:
	.quad	GHC.IO.FD.mkFD10_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.127552403 UTC

.section .text
.align 8
.globl GHC.IO.FD.mkFD10_entry
.type GHC.IO.FD.mkFD10_entry, @object
GHC.IO.FD.mkFD10_entry:
_cb1P0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1P1
_cb1P2:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb1OZ
_cb1OY:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.FD.mkFD11_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cb1P1:
	jmp *-16(%r13)
_cb1OZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.mkFD10_entry, .-GHC.IO.FD.mkFD10_entry


==================== Asm code ====================
2018-03-16 16:06:01.128234761 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.mkFD10_info
.type GHC.IO.FD.mkFD10_info, @object
GHC.IO.FD.mkFD10_info:
	.quad	GHC.IO.FD.mkFD10_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:01.130090873 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.mkFD9_closure
.type GHC.IO.FD.mkFD9_closure, @object
GHC.IO.FD.mkFD9_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.InappropriateType_closure+1
	.quad	GHC.IO.FD.mkFD6_closure
	.quad	GHC.IO.FD.mkFD10_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.132690459 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.mkFD8_closure
.type GHC.IO.FD.mkFD8_closure, @object
GHC.IO.FD.mkFD8_closure:
	.quad	GHC.IO.FD.mkFD8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.133995965 UTC

.section .text
.align 8
.globl GHC.IO.FD.mkFD8_entry
.type GHC.IO.FD.mkFD8_entry, @object
GHC.IO.FD.mkFD8_entry:
_cb1Pi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1Pj
_cb1Pk:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb1Ph
_cb1Pg:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.FD.mkFD9_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cb1Pj:
	jmp *-16(%r13)
_cb1Ph:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.mkFD8_entry, .-GHC.IO.FD.mkFD8_entry


==================== Asm code ====================
2018-03-16 16:06:01.134691368 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.mkFD8_info
.type GHC.IO.FD.mkFD8_info, @object
GHC.IO.FD.mkFD8_info:
	.quad	GHC.IO.FD.mkFD8_entry
	.quad	0
	.quad	12884901909
	.quad	Sb0HW_srt+632


==================== Asm code ====================
2018-03-16 16:06:01.136695913 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.FD.mkFD5_bytes
.type GHC.IO.FD.mkFD5_bytes, @object
GHC.IO.FD.mkFD5_bytes:
	.asciz "file is locked"


==================== Asm code ====================
2018-03-16 16:06:01.139085481 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.mkFD4_closure
.type GHC.IO.FD.mkFD4_closure, @object
GHC.IO.FD.mkFD4_closure:
	.quad	GHC.IO.FD.mkFD4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.139882077 UTC

.section .text
.align 8
.globl GHC.IO.FD.mkFD4_entry
.type GHC.IO.FD.mkFD4_entry, @object
GHC.IO.FD.mkFD4_entry:
_cb1PA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1PB
_cb1PC:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb1Pz
_cb1Py:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.FD.mkFD5_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cb1PB:
	jmp *-16(%r13)
_cb1Pz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.mkFD4_entry, .-GHC.IO.FD.mkFD4_entry


==================== Asm code ====================
2018-03-16 16:06:01.140572032 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.mkFD4_info
.type GHC.IO.FD.mkFD4_info, @object
GHC.IO.FD.mkFD4_info:
	.quad	GHC.IO.FD.mkFD4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:01.142608586 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.mkFD3_closure
.type GHC.IO.FD.mkFD3_closure, @object
GHC.IO.FD.mkFD3_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.ResourceBusy_closure+1
	.quad	GHC.IO.FD.mkFD6_closure
	.quad	GHC.IO.FD.mkFD4_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.145122769 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.mkFD2_closure
.type GHC.IO.FD.mkFD2_closure, @object
GHC.IO.FD.mkFD2_closure:
	.quad	GHC.IO.FD.mkFD2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.145992016 UTC

.section .text
.align 8
.globl GHC.IO.FD.mkFD2_entry
.type GHC.IO.FD.mkFD2_entry, @object
GHC.IO.FD.mkFD2_entry:
_cb1PS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1PT
_cb1PU:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cb1PR
_cb1PQ:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.FD.mkFD3_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cb1PT:
	jmp *-16(%r13)
_cb1PR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.FD.mkFD2_entry, .-GHC.IO.FD.mkFD2_entry


==================== Asm code ====================
2018-03-16 16:06:01.146695398 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.mkFD2_info
.type GHC.IO.FD.mkFD2_info, @object
GHC.IO.FD.mkFD2_info:
	.quad	GHC.IO.FD.mkFD2_entry
	.quad	0
	.quad	21474836501
	.quad	Sb0HW_srt+632


==================== Asm code ====================
2018-03-16 16:06:01.161565515 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$wmkFD_closure
.type GHC.IO.FD.$wmkFD_closure, @object
GHC.IO.FD.$wmkFD_closure:
	.quad	GHC.IO.FD.$wmkFD_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.162408387 UTC

.section .text
.align 8
sat_sb0D2_entry:
_cb1Qo:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1Qp
_cb1Qq:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cb1Ql_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cb1Ql
_cb1Qm:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1Qp:
	jmp *-16(%r13)
	.size sat_sb0D2_entry, .-sat_sb0D2_entry


==================== Asm code ====================
2018-03-16 16:06:01.163091066 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0D2_info:
	.quad	sat_sb0D2_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:06:01.163744866 UTC

.section .text
.align 8
_cb1Ql:
_cb1Ql:
	leaq block_cb1Qt_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cb1Qt
_cb1Qv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1Ql, .-_cb1Ql


==================== Asm code ====================
2018-03-16 16:06:01.16432757 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Ql_info:
	.quad	_cb1Ql
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.165125083 UTC

.section .text
.align 8
_cb1Qt:
_cb1Qt:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cb1QB
_cb1QI:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1QL
_cb1QK:
	leaq GHC.IO.FD.FD_con_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq $1,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1QL:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cb1QB:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1QL
_cb1QD:
	leaq GHC.IO.FD.FD_con_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq $0,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb1Qt, .-_cb1Qt


==================== Asm code ====================
2018-03-16 16:06:01.165883273 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Qt_info:
	.quad	_cb1Qt
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.166569193 UTC

.section .text
.align 8
sat_sb0Dp_entry:
_cb1RO:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1RP
_cb1RQ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cb1RH_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cb1RH
_cb1RI:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1RP:
	jmp *-16(%r13)
	.size sat_sb0Dp_entry, .-sat_sb0Dp_entry


==================== Asm code ====================
2018-03-16 16:06:01.167217021 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0Dp_info:
	.quad	sat_sb0Dp_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:01.168034676 UTC

.section .text
.align 8
_cb1RH:
_cb1RH:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cb1RL
_cb1RM:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1S2
_cb1S1:
	leaq GHC.IO.FD.FD_con_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq $1,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1S2:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cb1RL:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1S2
_cb1RV:
	leaq GHC.IO.FD.FD_con_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq $0,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb1RH, .-_cb1RH


==================== Asm code ====================
2018-03-16 16:06:01.168761858 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1RH_info:
	.quad	_cb1RH
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.169525061 UTC

.section .text
.align 8
.globl GHC.IO.FD.$wmkFD_entry
.type GHC.IO.FD.$wmkFD_entry, @object
GHC.IO.FD.$wmkFD_entry:
_cb1Sb:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1Sc
_cb1Sd:
	leaq block_cb1S4_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cb1S4
_cb1S5:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1Sc:
	leaq GHC.IO.FD.$wmkFD_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$wmkFD_entry, .-GHC.IO.FD.$wmkFD_entry


==================== Asm code ====================
2018-03-16 16:06:01.170244445 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$wmkFD_info
.type GHC.IO.FD.$wmkFD_info, @object
GHC.IO.FD.$wmkFD_info:
	.quad	GHC.IO.FD.$wmkFD_entry
	.quad	0
	.quad	246294899589134
	.quad	21474836504
	.quad	Sb0HW_srt+552


==================== Asm code ====================
2018-03-16 16:06:01.171018059 UTC

.section .text
.align 8
_cb1S4:
_cb1S4:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cb1S8
_cb1S9:
	leaq block_cb1Ti_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cb1Ti
_cb1Tk:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1S8:
	leaq block_cb1T6_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	jmp *System.Posix.Internals.fdStat1_entry@gotpcrel(%rip)
	.size _cb1S4, .-_cb1S4


==================== Asm code ====================
2018-03-16 16:06:01.171693079 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1S4_info:
	.quad	_cb1S4
	.quad	3
	.quad	211110527500318
	.quad	Sb0HW_srt+552


==================== Asm code ====================
2018-03-16 16:06:01.172390365 UTC

.section .text
.align 8
_cb1T6:
_cb1T6:
	leaq block_cb1T8_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cb1T8
_cb1Tb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1T6, .-_cb1T6


==================== Asm code ====================
2018-03-16 16:06:01.173000866 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1T6_info:
	.quad	_cb1T6
	.quad	3
	.quad	12884901918
	.quad	Sb0HW_srt+664


==================== Asm code ====================
2018-03-16 16:06:01.174310086 UTC

.section .text
.align 8
_cb1T8:
_cb1T8:
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 23(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp _sb0CT
	.size _cb1T8, .-_cb1T8


==================== Asm code ====================
2018-03-16 16:06:01.174888445 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1T8_info:
	.quad	_cb1T8
	.quad	3
	.quad	12884901918
	.quad	Sb0HW_srt+664


==================== Asm code ====================
2018-03-16 16:06:01.175508491 UTC

.section .text
.align 8
_cb1Ti:
_cb1Ti:
	movq 15(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 23(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp _sb0CT
	.size _cb1Ti, .-_cb1Ti


==================== Asm code ====================
2018-03-16 16:06:01.176081998 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Ti_info:
	.quad	_cb1Ti
	.quad	3
	.quad	12884901918
	.quad	Sb0HW_srt+664


==================== Asm code ====================
2018-03-16 16:06:01.176727348 UTC

.section .text
.align 8
_sb0CT:
_sb0CT:
	leaq block_cb1Qc_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1Qc
_cb1Qd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sb0CT, .-_sb0CT


==================== Asm code ====================
2018-03-16 16:06:01.177650089 UTC

.section .text
.align 8
_cb1Qc:
_cb1Qc:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cb1Sn
_ub1Tx:
	movq 32(%rbp),%rcx
	cmpq $3,%rax
	je _cb1Sp
_cb1Sh:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cb1Sk
_cb1Sj:
	leaq sat_sb0D2_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %rcx,-32(%r12)
	movq 48(%rbp),%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1Sn:
	leaq GHC.IO.FD.mkFD8_closure(%rip),%rbx
	addq $56,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_cb1Sk:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cb1Sp:
	leaq block_cb1QS_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rcx,%rbx
	testb $7,%bl
	jne _cb1QS
_cb1QT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1Qc, .-_cb1Qc


==================== Asm code ====================
2018-03-16 16:06:01.178432155 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Qc_info:
	.quad	_cb1Qc
	.quad	262
	.quad	12884901918
	.quad	Sb0HW_srt+664


==================== Asm code ====================
2018-03-16 16:06:01.179111897 UTC

.section .text
.align 8
_cb1QS:
_cb1QS:
	movq 8(%rbp),%rax
	leaq block_cb1QX_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,32(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _cb1QX
_cb1QY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1QS, .-_cb1QS


==================== Asm code ====================
2018-03-16 16:06:01.179704249 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1QS_info:
	.quad	_cb1QS
	.quad	774
	.quad	4294967326
	.quad	Sb0HW_srt+664


==================== Asm code ====================
2018-03-16 16:06:01.180413454 UTC

.section .text
.align 8
_cb1QX:
_cb1QX:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _sb0Da
_sb0Da:
	leaq block_cb1Ra_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _cb1Ra
_cb1Rb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1QX, .-_cb1QX


==================== Asm code ====================
2018-03-16 16:06:01.181106694 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1QX_info:
	.quad	_cb1QX
	.quad	389
	.quad	4294967326
	.quad	Sb0HW_srt+664


==================== Asm code ====================
2018-03-16 16:06:01.182228243 UTC

.section .text
.align 8
_cb1Ra:
_cb1Ra:
	movq 24(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _sb0Df
_sb0Df:
	leaq block_cb1Su_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,24(%rbp)
	testb $7,%bl
	jne _cb1Su
_cb1SJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1Ra, .-_cb1Ra


==================== Asm code ====================
2018-03-16 16:06:01.182868343 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Ra_info:
	.quad	_cb1Ra
	.quad	196
	.quad	4294967326
	.quad	Sb0HW_srt+664


==================== Asm code ====================
2018-03-16 16:06:01.183805209 UTC

.section .text
.align 8
_cb1Su:
_cb1Su:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 24(%rbp),%rdx
	andl $7,%ebx
	cmpq $1,%rbx
	je _cb1ST
_cb1SP:
	movl $1,%ebx
_sb0Dh:
	subq $8,%rsp
	movq %rcx,%rsi
	movq %rbx,%rcx
	movq %rax,%rdi
	xorl %eax,%eax
	call lockFile@plt
	addq $8,%rsp
	movslq %eax,%rax
	cmpq $-1,%rax
	jne _ub1TA
_cb1SF:
	leaq GHC.IO.FD.mkFD2_closure(%rip),%rbx
	addq $40,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_ub1TA:
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp _cb1RB
_cb1ST:
	xorl %ebx,%ebx
	jmp _sb0Dh
	.size _cb1Su, .-_cb1Su


==================== Asm code ====================
2018-03-16 16:06:01.184548929 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Su_info:
	.quad	_cb1Su
	.quad	452
	.quad	4294967326
	.quad	Sb0HW_srt+664


==================== Asm code ====================
2018-03-16 16:06:01.185391406 UTC

.section .text
.align 8
_cb1RB:
_cb1RB:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cb1SC
_cb1SB:
	leaq sat_sb0Dp_info(%rip),%rax
	movq %rax,-48(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq (%rbp),%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	movq GHC.IO.Device.RegularFile_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1SC:
	movq $56,904(%r13)
	leaq block_cb1RA_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cb1RB, .-_cb1RB


==================== Asm code ====================
2018-03-16 16:06:01.186214568 UTC

.section .text
.align 8
_cb1RA:
_cb1RA:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _cb1RB
	.size _cb1RA, .-_cb1RA


==================== Asm code ====================
2018-03-16 16:06:01.187138145 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1RA_info:
	.quad	_cb1RA
	.quad	195
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.189407888 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.mkFD1_closure
.type GHC.IO.FD.mkFD1_closure, @object
GHC.IO.FD.mkFD1_closure:
	.quad	GHC.IO.FD.mkFD1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.190024832 UTC

.section .text
.align 8
.globl GHC.IO.FD.mkFD1_entry
.type GHC.IO.FD.mkFD1_entry, @object
GHC.IO.FD.mkFD1_entry:
_cb1VP:
	movq %r9,%r8
	jmp GHC.IO.FD.$wmkFD_entry
	.size GHC.IO.FD.mkFD1_entry, .-GHC.IO.FD.mkFD1_entry


==================== Asm code ====================
2018-03-16 16:06:01.190584159 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.mkFD1_info
.type GHC.IO.FD.mkFD1_info, @object
GHC.IO.FD.mkFD1_info:
	.quad	GHC.IO.FD.mkFD1_entry
	.quad	0
	.quad	4294967310
	.quad	25769803801
	.quad	Sb0HW_srt+656


==================== Asm code ====================
2018-03-16 16:06:01.192724464 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.mkFD_closure
.type GHC.IO.FD.mkFD_closure, @object
GHC.IO.FD.mkFD_closure:
	.quad	GHC.IO.FD.mkFD_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.193352895 UTC

.section .text
.align 8
.globl GHC.IO.FD.mkFD_entry
.type GHC.IO.FD.mkFD_entry, @object
GHC.IO.FD.mkFD_entry:
_cb1W0:
	jmp GHC.IO.FD.mkFD1_entry
	.size GHC.IO.FD.mkFD_entry, .-GHC.IO.FD.mkFD_entry


==================== Asm code ====================
2018-03-16 16:06:01.193938417 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.mkFD_info
.type GHC.IO.FD.mkFD_info, @object
GHC.IO.FD.mkFD_info:
	.quad	GHC.IO.FD.mkFD_entry
	.quad	0
	.quad	4294967310
	.quad	25769803801
	.quad	Sb0HW_srt+680


==================== Asm code ====================
2018-03-16 16:06:01.218431724 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.openFile1_closure
.type GHC.IO.FD.openFile1_closure, @object
GHC.IO.FD.openFile1_closure:
	.quad	GHC.IO.FD.openFile1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.219648976 UTC

.section .text
.align 8
sat_sb0Ea_entry:
_cb1WF:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1WI
_cb1WJ:
	leaq block_cb1WB_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq 872(%r13),%rcx
	movq 24(%rcx),%rdx
	movq %rbp,16(%rdx)
	movq 888(%r13),%rdx
	leaq 8(%r12),%rsi
	movq %rsi,8(%rdx)
	leaq 8(%r12),%rsi
	subq (%rdx),%rsi
	movq 104(%rcx),%rdx
	subq %rsi,%rdx
	movq %rdx,104(%rcx)
	subq $8,%rsp
	movq %r13,%rdi
	xorl %esi,%esi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call suspendThread@plt
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rsi
	movq %r14,%rdi
	movl $438,%edx
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_open@plt
	addq $8,%rsp
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call resumeThread@plt
	addq $8,%rsp
	movq %rax,%r13
	movq 872(%r13),%rax
	movq 24(%rax),%rcx
	movq 16(%rcx),%rbp
	leaq 192(%rcx),%r15
	movq $0,904(%r13)
	movq 888(%r13),%rcx
	movq 8(%rcx),%rdx
	leaq -8(%rdx),%r12
	movq (%rcx),%rsi
	movslq 48(%rcx),%rcx
	shlq $12,%rcx
	decq %rcx
	movq %rsi,%rdi
	addq %rcx,%rdi
	movq %rdi,856(%r13)
	subq %rsi,%rdx
	movq 104(%rax),%rcx
	addq %rdx,%rcx
	movq %rcx,104(%rax)
	movq (%rbp),%rax
	jmp *(%rax)
_cb1WI:
	jmp *-8(%r13)
	.size sat_sb0Ea_entry, .-sat_sb0Ea_entry


==================== Asm code ====================
2018-03-16 16:06:01.220491782 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0Ea_info:
	.quad	sat_sb0Ea_entry
	.quad	8589934592
	.quad	13
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:01.221233835 UTC

.section .text
.align 8
_cb1WB:
_cb1WB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cb1WM
_cb1WL:
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movslq %ebx,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1WM:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cb1WB, .-_cb1WB


==================== Asm code ====================
2018-03-16 16:06:01.221914557 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1WB_info:
	.quad	_cb1WB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.222652254 UTC

.section .text
.align 8
sat_sb0Er_entry:
_cb1Xh:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1Xi
_cb1Xj:
	leaq block_cb1Xe_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 7(%rbx),%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cb1Xe
_cb1Xf:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1Xi:
	jmp *-8(%r13)
	.size sat_sb0Er_entry, .-sat_sb0Er_entry


==================== Asm code ====================
2018-03-16 16:06:01.223331439 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0Er_info:
	.quad	sat_sb0Er_entry
	.quad	3
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:01.224045001 UTC

.section .text
.align 8
_cb1Xe:
_cb1Xe:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	subq $8,%rsp
	movq 7(%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	call close@plt
	addq $8,%rsp
	movq %r14,%rsi
	movq %rbx,%r14
	addq $24,%rbp
	jmp *GHC.IO.throwIO1_entry@gotpcrel(%rip)
	.size _cb1Xe, .-_cb1Xe


==================== Asm code ====================
2018-03-16 16:06:01.224675011 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Xe_info:
	.quad	_cb1Xe
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.225456257 UTC

.section .text
.align 8
sat_sb0Es_entry:
_cb1Xq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1Xr
_cb1Xs:
	leaq block_cb1X4_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cb1X4
_cb1X5:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1Xr:
	jmp *-8(%r13)
	.size sat_sb0Es_entry, .-sat_sb0Es_entry


==================== Asm code ====================
2018-03-16 16:06:01.226500636 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0Es_info:
	.quad	sat_sb0Es_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:06:01.227209818 UTC

.section .text
.align 8
_cb1X4:
_cb1X4:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cb1Xv
_cb1Xu:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sb0Er_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -23(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1Xv:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1X4, .-_cb1X4


==================== Asm code ====================
2018-03-16 16:06:01.22786343 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1X4_info:
	.quad	_cb1X4
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.228531515 UTC

.section .text
.align 8
sat_sb0Ef_entry:
_cb1XC:
	movq 15(%rbx),%r8
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 7(%rbx),%rsi
	movq 23(%rbx),%r14
	jmp GHC.IO.FD.$wmkFD_entry
	.size sat_sb0Ef_entry, .-sat_sb0Ef_entry


==================== Asm code ====================
2018-03-16 16:06:01.229122615 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0Ef_info:
	.quad	sat_sb0Ef_entry
	.quad	3
	.quad	4294967304
	.quad	4294967299
	.quad	Sb0HW_srt+656


==================== Asm code ====================
2018-03-16 16:06:01.229698207 UTC

.section .data.rel.ro
.align 8
.align 1
ub22f_srtd:
	.quad	Sb0HW_srt+264
	.quad	57
	.quad	135673137797793793


==================== Asm code ====================
2018-03-16 16:06:01.230443605 UTC

.section .text
.align 8
sat_sb0FI_entry:
_cb1XF:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cb1XG
_cb1XH:
	leaq block_cb1Wi_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cb1Wi
_cb1Wj:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1XG:
	jmp *-8(%r13)
	.size sat_sb0FI_entry, .-sat_sb0FI_entry


==================== Asm code ====================
2018-03-16 16:06:01.231082944 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0FI_info:
	.quad	sat_sb0FI_entry
	.quad	2
	.quad	-4294967285
	.quad	8589934597
	.quad	ub22f_srtd


==================== Asm code ====================
2018-03-16 16:06:01.231621785 UTC

.section .data.rel.ro
.align 8
.align 1
ub22g_srtd:
	.quad	Sb0HW_srt+264
	.quad	57
	.quad	135673137797793793


==================== Asm code ====================
2018-03-16 16:06:01.232330198 UTC

.section .text
.align 8
_cb1Wi:
_cb1Wi:
	leaq block_cb1XI_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1XI
_cb1YO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1Wi, .-_cb1Wi


==================== Asm code ====================
2018-03-16 16:06:01.232929122 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Wi_info:
	.quad	_cb1Wi
	.quad	2
	.quad	-4294967266
	.quad	ub22g_srtd


==================== Asm code ====================
2018-03-16 16:06:01.233552282 UTC

.section .data.rel.ro
.align 8
.align 1
ub22h_srtd:
	.quad	Sb0HW_srt+264
	.quad	57
	.quad	135673137797793793


==================== Asm code ====================
2018-03-16 16:06:01.234332132 UTC

.section .text
.align 8
_cb1XI:
_cb1XI:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cb1YV
_cb1ZH:
	leaq block_cb1ZF_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cb1ZF
_cb1ZI:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1YV:
	leaq block_cb1YS_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cb1YS
_cb1YW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1XI, .-_cb1XI


==================== Asm code ====================
2018-03-16 16:06:01.23502491 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1XI_info:
	.quad	_cb1XI
	.quad	67
	.quad	-4294967266
	.quad	ub22h_srtd


==================== Asm code ====================
2018-03-16 16:06:01.235588735 UTC

.section .data.rel.ro
.align 8
.align 1
ub22i_srtd:
	.quad	Sb0HW_srt+264
	.quad	57
	.quad	135673137797793793


==================== Asm code ====================
2018-03-16 16:06:01.236492365 UTC

.section .text
.align 8
_cb1YS:
_cb1YS:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ub21p
_ub21q:
	cmpq $4,%rbx
	jb _cb1Zn
_cb1Zx:
	leaq block_cb1Zv_info(%rip),%rax
	movq %rax,(%rbp)
	leaq rw_flags_raWV7_closure(%rip),%rbx
	testb $7,%bl
	jne _cb1Zv
_cb1Zy:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1Zn:
	leaq block_cb1Zl_info(%rip),%rax
	movq %rax,(%rbp)
	leaq append_flags_raWV6_closure(%rip),%rbx
	testb $7,%bl
	jne _cb1Zl
_cb1Zo:
	movq (%rbx),%rax
	jmp *(%rax)
_ub21p:
	cmpq $2,%rbx
	jb _cb1Z3
_cb1Zd:
	leaq block_cb1Zb_info(%rip),%rax
	movq %rax,(%rbp)
	leaq write_flags_raWV5_closure(%rip),%rbx
	testb $7,%bl
	jne _cb1Zb
_cb1Ze:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1Z3:
	leaq block_cb1Z0_info(%rip),%rax
	movq %rax,(%rbp)
	leaq read_flags_raWV8_closure(%rip),%rbx
	testb $7,%bl
	jne _cb1Z0
_cb1Z4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1YS, .-_cb1YS


==================== Asm code ====================
2018-03-16 16:06:01.237303515 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1YS_info:
	.quad	_cb1YS
	.quad	67
	.quad	-4294967266
	.quad	ub22i_srtd


==================== Asm code ====================
2018-03-16 16:06:01.237841022 UTC

.section .data.rel.ro
.align 8
.align 1
ub22j_srtd:
	.quad	Sb0HW_srt+352
	.quad	43
	.quad	4673998159873


==================== Asm code ====================
2018-03-16 16:06:01.23879203 UTC

.section .text
.align 8
_cb1Z0:
_cb1Z0:
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	jmp _cb1Wq
	.size _cb1Z0, .-_cb1Z0


==================== Asm code ====================
2018-03-16 16:06:01.239315102 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Z0_info:
	.quad	_cb1Z0
	.quad	67
	.quad	-4294967266
	.quad	ub22j_srtd


==================== Asm code ====================
2018-03-16 16:06:01.23986412 UTC

.section .data.rel.ro
.align 8
.align 1
ub22k_srtd:
	.quad	Sb0HW_srt+352
	.quad	43
	.quad	4673998159873


==================== Asm code ====================
2018-03-16 16:06:01.240447869 UTC

.section .text
.align 8
_cb1Zb:
_cb1Zb:
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	jmp _cb1Wq
	.size _cb1Zb, .-_cb1Zb


==================== Asm code ====================
2018-03-16 16:06:01.241035242 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Zb_info:
	.quad	_cb1Zb
	.quad	67
	.quad	-4294967266
	.quad	ub22k_srtd


==================== Asm code ====================
2018-03-16 16:06:01.242083905 UTC

.section .data.rel.ro
.align 8
.align 1
ub22l_srtd:
	.quad	Sb0HW_srt+352
	.quad	43
	.quad	4673998159873


==================== Asm code ====================
2018-03-16 16:06:01.242714511 UTC

.section .text
.align 8
_cb1Zl:
_cb1Zl:
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	jmp _cb1Wq
	.size _cb1Zl, .-_cb1Zl


==================== Asm code ====================
2018-03-16 16:06:01.243289106 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Zl_info:
	.quad	_cb1Zl
	.quad	67
	.quad	-4294967266
	.quad	ub22l_srtd


==================== Asm code ====================
2018-03-16 16:06:01.243807293 UTC

.section .data.rel.ro
.align 8
.align 1
ub22m_srtd:
	.quad	Sb0HW_srt+352
	.quad	43
	.quad	4673998159873


==================== Asm code ====================
2018-03-16 16:06:01.244398446 UTC

.section .text
.align 8
_cb1Zv:
_cb1Zv:
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	jmp _cb1Wq
	.size _cb1Zv, .-_cb1Zv


==================== Asm code ====================
2018-03-16 16:06:01.244967508 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Zv_info:
	.quad	_cb1Zv
	.quad	67
	.quad	-4294967266
	.quad	ub22m_srtd


==================== Asm code ====================
2018-03-16 16:06:01.245538568 UTC

.section .data.rel.ro
.align 8
.align 1
ub22n_srtd:
	.quad	Sb0HW_srt+264
	.quad	57
	.quad	135673137797793793


==================== Asm code ====================
2018-03-16 16:06:01.246454008 UTC

.section .text
.align 8
_cb1ZF:
_cb1ZF:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ub21r
_ub21s:
	cmpq $4,%rbx
	jb _cb209
_cb20j:
	leaq block_cb20h_info(%rip),%rax
	movq %rax,(%rbp)
	leaq rw_flags_raWV7_closure(%rip),%rbx
	testb $7,%bl
	jne _cb20h
_cb20k:
	movq (%rbx),%rax
	jmp *(%rax)
_cb209:
	leaq block_cb207_info(%rip),%rax
	movq %rax,(%rbp)
	leaq append_flags_raWV6_closure(%rip),%rbx
	testb $7,%bl
	jne _cb207
_cb20a:
	movq (%rbx),%rax
	jmp *(%rax)
_ub21r:
	cmpq $2,%rbx
	jb _cb1ZP
_cb1ZZ:
	leaq block_cb1ZX_info(%rip),%rax
	movq %rax,(%rbp)
	leaq write_flags_raWV5_closure(%rip),%rbx
	testb $7,%bl
	jne _cb1ZX
_cb200:
	movq (%rbx),%rax
	jmp *(%rax)
_cb1ZP:
	leaq block_cb1ZM_info(%rip),%rax
	movq %rax,(%rbp)
	leaq read_flags_raWV8_closure(%rip),%rbx
	testb $7,%bl
	jne _cb1ZM
_cb1ZQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1ZF, .-_cb1ZF


==================== Asm code ====================
2018-03-16 16:06:01.247246769 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1ZF_info:
	.quad	_cb1ZF
	.quad	67
	.quad	-4294967266
	.quad	ub22n_srtd


==================== Asm code ====================
2018-03-16 16:06:01.247878317 UTC

.section .data.rel.ro
.align 8
.align 1
ub22o_srtd:
	.quad	Sb0HW_srt+352
	.quad	43
	.quad	4673998159873


==================== Asm code ====================
2018-03-16 16:06:01.248580139 UTC

.section .text
.align 8
_cb1ZM:
_cb1ZM:
	movq 7(%rbx),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_o_nonblock@plt
	addq $8,%rsp
	movslq %eax,%rax
	orq %rax,%rbx
	movq %rbx,(%rbp)
	jmp _cb1Wq
	.size _cb1ZM, .-_cb1ZM


==================== Asm code ====================
2018-03-16 16:06:01.249190326 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1ZM_info:
	.quad	_cb1ZM
	.quad	67
	.quad	-4294967266
	.quad	ub22o_srtd


==================== Asm code ====================
2018-03-16 16:06:01.249978786 UTC

.section .data.rel.ro
.align 8
.align 1
ub22p_srtd:
	.quad	Sb0HW_srt+352
	.quad	43
	.quad	4673998159873


==================== Asm code ====================
2018-03-16 16:06:01.250618993 UTC

.section .text
.align 8
_cb1ZX:
_cb1ZX:
	movq 7(%rbx),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_o_nonblock@plt
	addq $8,%rsp
	movslq %eax,%rax
	orq %rax,%rbx
	movq %rbx,(%rbp)
	jmp _cb1Wq
	.size _cb1ZX, .-_cb1ZX


==================== Asm code ====================
2018-03-16 16:06:01.251584297 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1ZX_info:
	.quad	_cb1ZX
	.quad	67
	.quad	-4294967266
	.quad	ub22p_srtd


==================== Asm code ====================
2018-03-16 16:06:01.252127166 UTC

.section .data.rel.ro
.align 8
.align 1
ub22q_srtd:
	.quad	Sb0HW_srt+352
	.quad	43
	.quad	4673998159873


==================== Asm code ====================
2018-03-16 16:06:01.25278833 UTC

.section .text
.align 8
_cb207:
_cb207:
	movq 7(%rbx),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_o_nonblock@plt
	addq $8,%rsp
	movslq %eax,%rax
	orq %rax,%rbx
	movq %rbx,(%rbp)
	jmp _cb1Wq
	.size _cb207, .-_cb207


==================== Asm code ====================
2018-03-16 16:06:01.253372823 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb207_info:
	.quad	_cb207
	.quad	67
	.quad	-4294967266
	.quad	ub22q_srtd


==================== Asm code ====================
2018-03-16 16:06:01.253898891 UTC

.section .data.rel.ro
.align 8
.align 1
ub22r_srtd:
	.quad	Sb0HW_srt+352
	.quad	43
	.quad	4673998159873


==================== Asm code ====================
2018-03-16 16:06:01.254557634 UTC

.section .text
.align 8
_cb20h:
_cb20h:
	movq 7(%rbx),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_o_nonblock@plt
	addq $8,%rsp
	movslq %eax,%rax
	orq %rax,%rbx
	movq %rbx,(%rbp)
	jmp _cb1Wq
	.size _cb20h, .-_cb20h


==================== Asm code ====================
2018-03-16 16:06:01.255147023 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb20h_info:
	.quad	_cb20h
	.quad	67
	.quad	-4294967266
	.quad	ub22r_srtd


==================== Asm code ====================
2018-03-16 16:06:01.255926686 UTC

.section .text
.align 8
_cb1Wq:
_cb1Wq:
	addq $24,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cb1XP
_cb1XO:
	leaq sat_sb0Ea_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq block_cb1WX_info(%rip),%rax
	movq %rax,8(%rbp)
	leaq -15(%r12),%rdi
	leaq GHC.IO.FD.mkFD6_closure(%rip),%rsi
	leaq GHC.IO.FD.$fIODeviceFD25_closure+1(%rip),%r14
	addq $8,%rbp
	jmp *Foreign.C.Error.throwErrnoIfMinus1Retry2_entry@gotpcrel(%rip)
_cb1XP:
	movq $24,904(%r13)
	leaq block_cb1Wp_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cb1Wq, .-_cb1Wq


==================== Asm code ====================
2018-03-16 16:06:01.256630601 UTC

.section .data.rel.ro
.align 8
.align 1
ub22s_srtd:
	.quad	Sb0HW_srt+352
	.quad	43
	.quad	4673998159873


==================== Asm code ====================
2018-03-16 16:06:01.257278836 UTC

.section .text
.align 8
_cb1Wp:
_cb1Wp:
	movq %rbx,(%rbp)
	jmp _cb1Wq
	.size _cb1Wp, .-_cb1Wp


==================== Asm code ====================
2018-03-16 16:06:01.257805579 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Wp_info:
	.quad	_cb1Wp
	.quad	67
	.quad	-4294967266
	.quad	ub22s_srtd


==================== Asm code ====================
2018-03-16 16:06:01.258373981 UTC

.section .data.rel.ro
.align 8
.align 1
ub22t_srtd:
	.quad	Sb0HW_srt+352
	.quad	39
	.quad	274877906945


==================== Asm code ====================
2018-03-16 16:06:01.25915941 UTC

.section .text
.align 8
_cb1WX:
_cb1WX:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cb1XS
_cb1XR:
	leaq sat_sb0Es_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rbx,-32(%r12)
	leaq sat_sb0Ef_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq block_cb1XK_info(%rip),%rax
	movq %rax,(%rbp)
	leaq -39(%r12),%r14
	leaq -23(%r12),%rbx
	jmp *stg_catch#@gotpcrel(%rip)
_cb1XS:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1WX, .-_cb1WX


==================== Asm code ====================
2018-03-16 16:06:01.259850544 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1WX_info:
	.quad	_cb1WX
	.quad	2
	.quad	-4294967266
	.quad	ub22t_srtd


==================== Asm code ====================
2018-03-16 16:06:01.260534937 UTC

.section .text
.align 8
_cb1XK:
_cb1XK:
	leaq block_cb1XM_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cb1XM
_cb1XU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1XK, .-_cb1XK


==================== Asm code ====================
2018-03-16 16:06:01.261129311 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1XK_info:
	.quad	_cb1XK
	.quad	130
	.quad	4294967326
	.quad	Sb0HW_srt+720


==================== Asm code ====================
2018-03-16 16:06:01.262166228 UTC

.section .text
.align 8
_cb1XM:
_cb1XM:
	leaq block_cb1XY_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cb1XY
_cb1Y0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1XM, .-_cb1XM


==================== Asm code ====================
2018-03-16 16:06:01.26278288 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1XM_info:
	.quad	_cb1XM
	.quad	2
	.quad	4294967326
	.quad	Sb0HW_srt+720


==================== Asm code ====================
2018-03-16 16:06:01.263843681 UTC

.section .text
.align 8
_cb1XY:
_cb1XY:
	andl $7,%ebx
	cmpq $2,%rbx
	je _cb1Yb
_ub21C:
	addq $24,%rbp
	jmp _cb1Yi
_cb1Yb:
	movq 8(%rbp),%rax
	leaq block_cb1Y9_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cb1Y9
_cb1Yc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1XY, .-_cb1XY


==================== Asm code ====================
2018-03-16 16:06:01.264443115 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1XY_info:
	.quad	_cb1XY
	.quad	3
	.quad	4294967326
	.quad	Sb0HW_srt+720


==================== Asm code ====================
2018-03-16 16:06:01.265161125 UTC

.section .text
.align 8
_cb1Y9:
_cb1Y9:
	andl $7,%ebx
	cmpq $3,%rbx
	je _cb1Yn
_ub21D:
	addq $16,%rbp
	jmp _cb1Yi
_cb1Yn:
	leaq block_cb1Yl_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cb1Yl
_cb1Yo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb1Y9, .-_cb1Y9


==================== Asm code ====================
2018-03-16 16:06:01.265772954 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Y9_info:
	.quad	_cb1Y9
	.quad	2
	.quad	4294967326
	.quad	Sb0HW_srt+720


==================== Asm code ====================
2018-03-16 16:06:01.266506815 UTC

.section .text
.align 8
_cb1Yl:
_cb1Yl:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %esi,%esi
	xorl %eax,%eax
	call __hscore_ftruncate@plt
	addq $8,%rsp
	movslq %eax,%rax
	testq %rax,%rax
	je _ub21E
_cb1YB:
	subq $8,%rsp
	xorl %eax,%eax
	call __hscore_get_errno@plt
	addq $8,%rsp
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.IO.FD.$fIODeviceFD11_entry
_ub21E:
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp _cb1YH
	.size _cb1Yl, .-_cb1Yl


==================== Asm code ====================
2018-03-16 16:06:01.267186808 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Yl_info:
	.quad	_cb1Yl
	.quad	0
	.quad	4294967326
	.quad	Sb0HW_srt+720


==================== Asm code ====================
2018-03-16 16:06:01.267950639 UTC

.section .text
.align 8
_cb1YH:
_cb1YH:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb1YN
_cb1YM:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq GHC.IO.Device.RegularFile_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb1YN:
	movq $24,904(%r13)
	movq (%rbp),%rax
	leaq block_cb1YG_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cb1YH, .-_cb1YH


==================== Asm code ====================
2018-03-16 16:06:01.268681512 UTC

.section .text
.align 8
_cb1YG:
_cb1YG:
	movq %rbx,(%rbp)
	jmp _cb1YH
	.size _cb1YG, .-_cb1YG


==================== Asm code ====================
2018-03-16 16:06:01.269219895 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1YG_info:
	.quad	_cb1YG
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.269842349 UTC

.section .text
.align 8
_cb1Yi:
_cb1Yi:
	movq (%rbp),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cb1Yi, .-_cb1Yi


==================== Asm code ====================
2018-03-16 16:06:01.27039107 UTC

.section .data.rel.ro
.align 8
.align 1
ub22u_srtd:
	.quad	Sb0HW_srt+264
	.quad	60
	.quad	1144479454328782849


==================== Asm code ====================
2018-03-16 16:06:01.271098414 UTC

.section .text
.align 8
.globl GHC.IO.FD.openFile1_entry
.type GHC.IO.FD.openFile1_entry, @object
GHC.IO.FD.openFile1_entry:
_cb229:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cb22a
_cb22b:
	leaq block_cb1Wb_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq GHC.IO.Encoding.getFileSystemEncoding_closure@gotpcrel(%rip),%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_cb22a:
	leaq GHC.IO.FD.openFile1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.openFile1_entry, .-GHC.IO.FD.openFile1_entry


==================== Asm code ====================
2018-03-16 16:06:01.271767369 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.openFile1_info
.type GHC.IO.FD.openFile1_info, @object
GHC.IO.FD.openFile1_info:
	.quad	GHC.IO.FD.openFile1_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869207
	.quad	ub22u_srtd


==================== Asm code ====================
2018-03-16 16:06:01.272353876 UTC

.section .data.rel.ro
.align 8
.align 1
ub22v_srtd:
	.quad	Sb0HW_srt+264
	.quad	58
	.quad	279788325873647617


==================== Asm code ====================
2018-03-16 16:06:01.273123212 UTC

.section .text
.align 8
_cb1Wb:
_cb1Wb:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb22e
_cb22d:
	leaq sat_sb0FI_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rdi
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $32,%rbp
	jmp *GHC.Foreign.charIsRepresentable3_entry@gotpcrel(%rip)
_cb22e:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb1Wb, .-_cb1Wb


==================== Asm code ====================
2018-03-16 16:06:01.274243047 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb1Wb_info:
	.quad	_cb1Wb
	.quad	3
	.quad	-4294967266
	.quad	ub22v_srtd


==================== Asm code ====================
2018-03-16 16:06:01.27696016 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.openFile_closure
.type GHC.IO.FD.openFile_closure, @object
GHC.IO.FD.openFile_closure:
	.quad	GHC.IO.FD.openFile_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.277590708 UTC

.section .text
.align 8
.globl GHC.IO.FD.openFile_entry
.type GHC.IO.FD.openFile_entry, @object
GHC.IO.FD.openFile_entry:
_cb26b:
	jmp GHC.IO.FD.openFile1_entry
	.size GHC.IO.FD.openFile_entry, .-GHC.IO.FD.openFile_entry


==================== Asm code ====================
2018-03-16 16:06:01.278144967 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.openFile_info
.type GHC.IO.FD.openFile_info, @object
GHC.IO.FD.openFile_info:
	.quad	GHC.IO.FD.openFile_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	Sb0HW_srt+736


==================== Asm code ====================
2018-03-16 16:06:01.284281648 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$w$cfillReadBuffer_closure
.type GHC.IO.FD.$w$cfillReadBuffer_closure, @object
GHC.IO.FD.$w$cfillReadBuffer_closure:
	.quad	GHC.IO.FD.$w$cfillReadBuffer_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.2849843 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cfillReadBuffer_slow
.type GHC.IO.FD.$w$cfillReadBuffer_slow, @object
GHC.IO.FD.$w$cfillReadBuffer_slow:
_cb26j:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.FD.$w$cfillReadBuffer_entry
	.size GHC.IO.FD.$w$cfillReadBuffer_slow, .-GHC.IO.FD.$w$cfillReadBuffer_slow


==================== Asm code ====================
2018-03-16 16:06:01.286271571 UTC

.section .text
.align 8
sat_sb0G2_entry:
_cb26G:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cb26N
_cb26O:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cb26D_info(%rip),%rax
	movq %rax,-72(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 64(%rbx),%r8
	movq 32(%rbx),%rbx
	movq %rdx,-64(%rbp)
	movq %rax,-56(%rbp)
	movq %rcx,-48(%rbp)
	movq %rsi,-40(%rbp)
	movq %rdi,-32(%rbp)
	movq %r8,-24(%rbp)
	addq $-72,%rbp
	testb $7,%bl
	jne _cb26D
_cb26E:
	movq (%rbx),%rax
	jmp *(%rax)
_cb26N:
	jmp *-16(%r13)
	.size sat_sb0G2_entry, .-sat_sb0G2_entry


==================== Asm code ====================
2018-03-16 16:06:01.287019362 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0G2_info:
	.quad	sat_sb0G2_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:06:01.287826291 UTC

.section .text
.align 8
_cb26D:
_cb26D:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cb26R
_cb26Q:
	leaq 7(%rbx),%rax
	movq 48(%rbp),%rbx
	addq (%rax),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb26R:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb26D, .-_cb26D


==================== Asm code ====================
2018-03-16 16:06:01.288573906 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb26D_info:
	.quad	_cb26D
	.quad	3654
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.289841961 UTC

.section .text
.align 8
.globl GHC.IO.FD.$w$cfillReadBuffer_entry
.type GHC.IO.FD.$w$cfillReadBuffer_entry, @object
GHC.IO.FD.$w$cfillReadBuffer_entry:
_cb26T:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cb26V
_cb26W:
	leaq block_cb26w_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r9,%rax
	xorl %r9d,%r9d
	movq 16(%rbp),%rbx
	movq %r8,%rcx
	movq %rdi,%r8
	addq %rbx,%r8
	movq %rdi,%rdx
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.IO.FD.$fBufferedIOFD12_closure(%rip),%r14
	movq (%rbp),%r10
	subq %rbx,%r10
	movq %r10,-40(%rbp)
	movq %rdx,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.IO.FD.$wreadRawBufferPtr_entry
_cb26V:
	leaq GHC.IO.FD.$w$cfillReadBuffer_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.FD.$w$cfillReadBuffer_entry, .-GHC.IO.FD.$w$cfillReadBuffer_entry


==================== Asm code ====================
2018-03-16 16:06:01.290616233 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$w$cfillReadBuffer_info
.type GHC.IO.FD.$w$cfillReadBuffer_info, @object
GHC.IO.FD.$w$cfillReadBuffer_info:
	.quad	GHC.IO.FD.$w$cfillReadBuffer_entry
	.quad	0
	.quad	30064771086
	.quad	38654705664
	.quad	Sb0HW_srt+744
	.quad	14792
	.quad	GHC.IO.FD.$w$cfillReadBuffer_slow


==================== Asm code ====================
2018-03-16 16:06:01.291427292 UTC

.section .text
.align 8
_cb26w:
_cb26w:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cb26Z
_cb26Y:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq 48(%rbp),%r8
	leaq sat_sb0G2_info(%rip),%r9
	movq %r9,-88(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb26Z:
	movq $96,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb26w, .-_cb26w


==================== Asm code ====================
2018-03-16 16:06:01.292136203 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb26w_info:
	.quad	_cb26w
	.quad	3654
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.295717514 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD11_closure
.type GHC.IO.FD.$fBufferedIOFD11_closure, @object
GHC.IO.FD.$fBufferedIOFD11_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD11_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.296522808 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD11_entry
.type GHC.IO.FD.$fBufferedIOFD11_entry, @object
GHC.IO.FD.$fBufferedIOFD11_entry:
_cb27I:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb27M
_cb27N:
	leaq block_cb27F_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cb27F
_cb27G:
	movq (%rbx),%rax
	jmp *(%rax)
_cb27M:
	leaq GHC.IO.FD.$fBufferedIOFD11_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fBufferedIOFD11_entry, .-GHC.IO.FD.$fBufferedIOFD11_entry


==================== Asm code ====================
2018-03-16 16:06:01.297218137 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD11_info
.type GHC.IO.FD.$fBufferedIOFD11_info, @object
GHC.IO.FD.$fBufferedIOFD11_info:
	.quad	GHC.IO.FD.$fBufferedIOFD11_entry
	.quad	0
	.quad	38654705678
	.quad	12884901903
	.quad	Sb0HW_srt+744


==================== Asm code ====================
2018-03-16 16:06:01.298227789 UTC

.section .text
.align 8
_cb27F:
_cb27F:
	leaq block_cb27L_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cb27L
_cb27P:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb27F, .-_cb27F


==================== Asm code ====================
2018-03-16 16:06:01.298898834 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb27F_info:
	.quad	_cb27F
	.quad	1
	.quad	4294967326
	.quad	Sb0HW_srt+744


==================== Asm code ====================
2018-03-16 16:06:01.299601785 UTC

.section .text
.align 8
_cb27L:
_cb27L:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,(%rbp)
	movq 39(%rbx),%rax
	movq %rax,8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,16(%rbp)
	jmp GHC.IO.FD.$w$cfillReadBuffer_entry
	.size _cb27L, .-_cb27L


==================== Asm code ====================
2018-03-16 16:06:01.300229675 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb27L_info:
	.quad	_cb27L
	.quad	194
	.quad	4294967326
	.quad	Sb0HW_srt+744


==================== Asm code ====================
2018-03-16 16:06:01.304466211 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD6_closure
.type GHC.IO.FD.$fBufferedIOFD6_closure, @object
GHC.IO.FD.$fBufferedIOFD6_closure:
	.quad	GHC.IO.FD.$fBufferedIOFD6_info


==================== Asm code ====================
2018-03-16 16:06:01.305222062 UTC

.section .text
.align 8
sat_sb0Gr_entry:
_cb28p:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb28t
_cb28u:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cb28m_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cb28m
_cb28n:
	movq (%rbx),%rax
	jmp *(%rax)
_cb28t:
	jmp *-16(%r13)
	.size sat_sb0Gr_entry, .-sat_sb0Gr_entry


==================== Asm code ====================
2018-03-16 16:06:01.306194181 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb0Gr_info:
	.quad	sat_sb0Gr_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:01.306994896 UTC

.section .text
.align 8
_cb28m:
_cb28m:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cb28x
_cb28w:
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 31(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-48(%r12)
	movq %rax,-40(%r12)
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb28x:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cb28m, .-_cb28m


==================== Asm code ====================
2018-03-16 16:06:01.307683554 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb28m_info:
	.quad	_cb28m
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:01.308368832 UTC

.section .text
.align 8
.globl GHC.IO.FD.$fBufferedIOFD6_entry
.type GHC.IO.FD.$fBufferedIOFD6_entry, @object
GHC.IO.FD.$fBufferedIOFD6_entry:
_cb28z:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb28D
_cb28C:
	leaq sat_sb0Gr_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rsi,(%r12)
	leaq -16(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cb28D:
	movq $24,904(%r13)
	leaq GHC.IO.FD.$fBufferedIOFD6_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.$fBufferedIOFD6_entry, .-GHC.IO.FD.$fBufferedIOFD6_entry


==================== Asm code ====================
2018-03-16 16:06:01.308984575 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD6_info
.type GHC.IO.FD.$fBufferedIOFD6_info, @object
GHC.IO.FD.$fBufferedIOFD6_info:
	.quad	GHC.IO.FD.$fBufferedIOFD6_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:06:01.310883584 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.$fBufferedIOFD_closure
.type GHC.IO.FD.$fBufferedIOFD_closure, @object
GHC.IO.FD.$fBufferedIOFD_closure:
	.quad	GHC.IO.BufferedIO.C:BufferedIO_con_info
	.quad	GHC.IO.FD.$fBufferedIOFD15_closure+3
	.quad	GHC.IO.FD.$fBufferedIOFD11_closure+3
	.quad	GHC.IO.FD.$fBufferedIOFD7_closure+3
	.quad	GHC.IO.FD.$fBufferedIOFD6_closure+3
	.quad	GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_closure+3
	.quad	GHC.IO.FD.$fBufferedIOFD1_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:01.313599735 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.FD.FD_closure
.type GHC.IO.FD.FD_closure, @object
GHC.IO.FD.FD_closure:
	.quad	GHC.IO.FD.FD_info


==================== Asm code ====================
2018-03-16 16:06:01.314367446 UTC

.section .text
.align 8
GHC.IO.FD.FD_entry:
_cb294:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb298
_cb297:
	leaq GHC.IO.FD.FD_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cb298:
	movq $24,904(%r13)
	leaq GHC.IO.FD.FD_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.FD.FD_entry, .-GHC.IO.FD.FD_entry


==================== Asm code ====================
2018-03-16 16:06:01.315057532 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.IO.FD.FD_info:
	.quad	GHC.IO.FD.FD_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 16:06:01.317658189 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
ib29g_str:
	.asciz "base:GHC.IO.FD.FD"


==================== Asm code ====================
2018-03-16 16:06:01.318281647 UTC

.section .text
.align 8
.globl GHC.IO.FD.FD_con_entry
.type GHC.IO.FD.FD_con_entry, @object
GHC.IO.FD.FD_con_entry:
_cb29f:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.FD.FD_con_entry, .-GHC.IO.FD.FD_con_entry


==================== Asm code ====================
2018-03-16 16:06:01.318885727 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.FD.FD_con_info
.type GHC.IO.FD.FD_con_info, @object
GHC.IO.FD.FD_con_info:
	.quad	GHC.IO.FD.FD_con_entry
	.quad	8589934592
	.quad	6
	.quad	ib29g_str


==================== Asm code ====================
2018-03-16 16:06:01.321771133 UTC

.section .data.rel.ro
.align 8
.align 1
Sb0HW_srt:
	.quad	Foreign.C.Error.throwErrno1_closure
	.quad	GHC.IO.FD.$fBufferedIOFD5_closure
	.quad	GHC.IO.FD.$wreadRawBufferPtrNoBlock_closure
	.quad	GHC.IO.FD.readRawBufferPtrNoBlock1_closure
	.quad	GHC.IO.FD.$fBufferedIOFD8_closure
	.quad	GHC.IO.FD.$w$creadNonBlocking_closure
	.quad	GHC.IO.FD.$fRawIOFD3_closure
	.quad	GHC.Event.Internal.evtRead_closure
	.quad	GHC.Event.Thread.threadWaitRead1_closure
	.quad	Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure
	.quad	GHC.IO.FD.$wreadRawBufferPtr_closure
	.quad	GHC.IO.FD.$fRawIOFD5_closure
	.quad	GHC.IO.FD.$fBufferedIOFD12_closure
	.quad	GHC.IO.FD.$fRawIOFD4_closure
	.quad	GHC.Event.Internal.evtWrite_closure
	.quad	GHC.IO.FD.$wwriteRawBufferPtr_closure
	.quad	GHC.IO.FD.writeRawBufferPtr1_closure
	.quad	GHC.IO.FD.$wfdWrite_closure
	.quad	lvl1_raWUY_closure
	.quad	GHC.IO.FD.$fRawIOFD2_closure
	.quad	GHC.IO.FD.$w$cwriteNonBlocking_closure
	.quad	GHC.IO.FD.$fBufferedIOFD_loc_closure
	.quad	GHC.IO.FD.$fRawIOFD1_closure
	.quad	GHC.IO.FD.$fBufferedIOFD_$swriteBuf1_closure
	.quad	System.Posix.Internals.fdFileSize1_closure
	.quad	GHC.IO.FD.$fIODeviceFD12_closure
	.quad	System.Posix.Internals.setEcho1_closure
	.quad	GHC.IO.FD.$fIODeviceFD9_closure
	.quad	System.Posix.Internals.getEcho3_closure
	.quad	GHC.IO.FD.$fIODeviceFD8_closure
	.quad	System.Posix.Internals.setCooked1_closure
	.quad	GHC.IO.FD.$fIODeviceFD7_closure
	.quad	output_flags_raWV4_closure
	.quad	write_flags_raWV5_closure
	.quad	Foreign.C.Error.throwErrnoIfMinus1Retry2_closure
	.quad	GHC.IO.FD.$w$ctell_closure
	.quad	GHC.IO.FD.$fIODeviceFD14_closure
	.quad	GHC.IO.FD.$fIODeviceFD13_closure
	.quad	GHC.IO.FD.$w$cseek_closure
	.quad	GHC.IO.FD.$fIODeviceFD18_closure
	.quad	GHC.IO.FD.$fIODeviceFD17_closure
	.quad	Foreign.C.Error.$wlvl_closure
	.quad	lvl4_raWVa_closure
	.quad	GHC.IO.FD.$wsetSize_closure
	.quad	GHC.IO.FD.$fIODeviceFD11_closure
	.quad	GHC.IO.FD.$fIODeviceFD10_closure
	.quad	GHC.IO.FD.readRawBufferPtrNoBlock1_closure
	.quad	GHC.IO.FD.$fRawIOFD5_closure
	.quad	GHC.IO.FD.$w$cfillReadBuffer0_closure
	.quad	GHC.IO.FD.$fBufferedIOFD8_closure
	.quad	GHC.IO.FD.$wreadRawBufferPtrNoBlock_closure
	.quad	GHC.IO.FD.$fBufferedIOFD7_closure
	.quad	GHC.IO.FD.$w$cflushWriteBuffer0_closure
	.quad	GHC.IO.FD.$w$cwriteNonBlocking_closure
	.quad	GHC.IO.FD.$fBufferedIOFD1_closure
	.quad	GHC.Enum.$fEnumBool1_closure
	.quad	GHC.IO.FD.$w$cready_closure
	.quad	GHC.IO.FD.$fIODeviceFD28_closure
	.quad	GHC.IO.FD.$fIODeviceFD27_closure
	.quad	System.Posix.Internals.$wsetNonBlockingFD_closure
	.quad	GHC.IO.FD.setNonBlockingMode1_closure
	.quad	lvl6_raWVc_closure
	.quad	GHC.IO.FD.$w$cdup2_closure
	.quad	GHC.IO.FD.$fIODeviceFD2_closure
	.quad	GHC.IO.FD.$fIODeviceFD1_closure
	.quad	GHC.IO.FD.$w$cdup_closure
	.quad	GHC.IO.FD.$fIODeviceFD4_closure
	.quad	Foreign.C.Error.throwErrno1_closure
	.quad	GHC.IO.FD.$fIODeviceFD3_closure
	.quad	System.Posix.Internals.fdStat1_closure
	.quad	GHC.IO.FD.$fIODeviceFD6_closure
	.quad	GHC.IO.FD.$fIODeviceFD20_closure
	.quad	GHC.IO.FD.$fIODeviceFD23_closure
	.quad	GHC.IO.FD.$wclose_closure
	.quad	Foreign.C.Error.throwErrnoIfMinus1Retry2_closure
	.quad	GHC.IO.FD.$fIODeviceFD26_closure
	.quad	GHC.Event.Thread.closeFdWith1_closure
	.quad	GHC.IO.FD.$w$cclose_closure
	.quad	GHC.IO.FD.$fIODeviceFD22_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	GHC.IO.FD.mkFD9_closure
	.quad	GHC.IO.FD.mkFD3_closure
	.quad	GHC.IO.FD.$wmkFD_closure
	.quad	GHC.IO.FD.mkFD2_closure
	.quad	GHC.IO.FD.mkFD8_closure
	.quad	GHC.IO.FD.mkFD1_closure
	.quad	GHC.IO.FD.mkFD6_closure
	.quad	append_flags_raWV6_closure
	.quad	rw_flags_raWV7_closure
	.quad	read_flags_raWV8_closure
	.quad	GHC.IO.FD.$fIODeviceFD11_closure
	.quad	GHC.IO.Encoding.getFileSystemEncoding_closure
	.quad	GHC.IO.FD.openFile1_closure
	.quad	GHC.IO.FD.$w$cfillReadBuffer_closure
	.quad	GHC.IO.FD.$fBufferedIOFD12_closure
	.quad	GHC.IO.FD.$wreadRawBufferPtr_closure
	.quad	GHC.IO.FD.$fBufferedIOFD11_closure

