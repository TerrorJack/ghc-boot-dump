
==================== Tidy Core ====================
2018-03-16 16:02:55.097192204 UTC

Result size of Tidy Core
  = {terms: 986, types: 1,299, coercions: 156, joins: 0/3}

-- RHS size: {terms: 25, types: 19, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$WBuffer [InlPrag=INLINE[2]]
  :: forall e.
     RawBuffer e -> BufferState -> Int -> Int -> Int -> Buffer e
[GblId[DataConWrapper],
 Arity=5,
 Caf=NoCafRefs,
 Str=<S,U><L,U><S,U><S,U><S,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=5,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ e_a7NzD)
                 (dt_a7NCc [Occ=Once!] :: RawBuffer e_a7NzD[sk:1])
                 (dt_a7NCd [Occ=Once] :: BufferState)
                 (dt_a7NCe [Occ=Once!] :: Int)
                 (dt_a7NCf [Occ=Once!] :: Int)
                 (dt_a7NCg [Occ=Once!] :: Int) ->
                 case dt_a7NCc of
                 { GHC.ForeignPtr.ForeignPtr dt_a7NCh [Occ=Once]
                                             dt_a7NCi [Occ=Once] ->
                 case dt_a7NCe of { I# dt_a7NCj [Occ=Once] ->
                 case dt_a7NCf of { I# dt_a7NCk [Occ=Once] ->
                 case dt_a7NCg of { I# dt_a7NCl [Occ=Once] ->
                 GHC.IO.Buffer.Buffer
                   @ e_a7NzD dt_a7NCh dt_a7NCi dt_a7NCd dt_a7NCj dt_a7NCk dt_a7NCl
                 }
                 }
                 }
                 }}]
GHC.IO.Buffer.$WBuffer
  = \ (@ e_a7NzD)
      (dt_a7NCc [Occ=Once!] :: RawBuffer e_a7NzD[sk:1])
      (dt_a7NCd [Occ=Once] :: BufferState)
      (dt_a7NCe [Occ=Once!] :: Int)
      (dt_a7NCf [Occ=Once!] :: Int)
      (dt_a7NCg [Occ=Once!] :: Int) ->
      case dt_a7NCc of
      { GHC.ForeignPtr.ForeignPtr dt_a7NCh [Occ=Once]
                                  dt_a7NCi [Occ=Once] ->
      case dt_a7NCe of { I# dt_a7NCj [Occ=Once] ->
      case dt_a7NCf of { I# dt_a7NCk [Occ=Once] ->
      case dt_a7NCg of { I# dt_a7NCl [Occ=Once] ->
      GHC.IO.Buffer.Buffer
        @ e_a7NzD dt_a7NCh dt_a7NCi dt_a7NCd dt_a7NCj dt_a7NCk dt_a7NCl
      }
      }
      }
      }

-- RHS size: {terms: 18, types: 5, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$fEqBufferState_$c==
  :: BufferState -> BufferState -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_d7NSw [Occ=Once!] :: BufferState)
                 (ds1_d7NSx [Occ=Once*!] :: BufferState) ->
                 case ds_d7NSw of {
                   ReadBuffer ->
                     case ds1_d7NSx of {
                       ReadBuffer -> GHC.Types.True;
                       WriteBuffer -> GHC.Types.False
                     };
                   WriteBuffer ->
                     case ds1_d7NSx of {
                       ReadBuffer -> GHC.Types.False;
                       WriteBuffer -> GHC.Types.True
                     }
                 }}]
GHC.IO.Buffer.$fEqBufferState_$c==
  = \ (ds_d7NSw :: BufferState) (ds1_d7NSx :: BufferState) ->
      case ds_d7NSw of {
        ReadBuffer ->
          case ds1_d7NSx of {
            ReadBuffer -> GHC.Types.True;
            WriteBuffer -> GHC.Types.False
          };
        WriteBuffer ->
          case ds1_d7NSx of {
            ReadBuffer -> GHC.Types.False;
            WriteBuffer -> GHC.Types.True
          }
      }

-- RHS size: {terms: 18, types: 5, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$fEqBufferState_$c/= [InlPrag=INLINE (sat-args=2)]
  :: BufferState -> BufferState -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (x_a22b [Occ=Once!] :: BufferState)
                 (y_a22c [Occ=Once*!] :: BufferState) ->
                 case x_a22b of {
                   ReadBuffer ->
                     case y_a22c of {
                       ReadBuffer -> GHC.Types.False;
                       WriteBuffer -> GHC.Types.True
                     };
                   WriteBuffer ->
                     case y_a22c of {
                       ReadBuffer -> GHC.Types.True;
                       WriteBuffer -> GHC.Types.False
                     }
                 }}]
GHC.IO.Buffer.$fEqBufferState_$c/=
  = \ (eta_B2 :: BufferState) (eta1_B1 :: BufferState) ->
      case eta_B2 of {
        ReadBuffer ->
          case eta1_B1 of {
            ReadBuffer -> GHC.Types.False;
            WriteBuffer -> GHC.Types.True
          };
        WriteBuffer ->
          case eta1_B1 of {
            ReadBuffer -> GHC.Types.True;
            WriteBuffer -> GHC.Types.False
          }
      }

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$fEqBufferState [InlPrag=NOUSERINLINE CONLIKE]
  :: Eq BufferState
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ ->
       GHC.Classes.C:Eq TYPE: BufferState
                        GHC.IO.Buffer.$fEqBufferState_$c==
                        GHC.IO.Buffer.$fEqBufferState_$c/=]
GHC.IO.Buffer.$fEqBufferState
  = GHC.Classes.C:Eq
      @ BufferState
      GHC.IO.Buffer.$fEqBufferState_$c==
      GHC.IO.Buffer.$fEqBufferState_$c/=

-- RHS size: {terms: 7, types: 12, coercions: 0, joins: 0/0}
bufR :: forall e. Buffer e -> Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLS),1*U(A,A,A,A,A,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ e_a7NCu) (ds_d7NSp [Occ=Once!] :: Buffer e_a7NCu) ->
                 case ds_d7NSp of
                 { Buffer _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                          _ [Occ=Dead] dt4_d7NUl [Occ=Once] ->
                 GHC.Types.I# dt4_d7NUl
                 }}]
bufR
  = \ (@ e_a7NCu) (ds_d7NSp :: Buffer e_a7NCu) ->
      case ds_d7NSp of
      { Buffer dt_d7NUh dt1_d7NUi ds1_d7NSr dt2_d7NUj dt3_d7NUk
               dt4_d7NUl ->
      GHC.Types.I# dt4_d7NUl
      }

-- RHS size: {terms: 7, types: 12, coercions: 0, joins: 0/0}
bufL :: forall e. Buffer e -> Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSL),1*U(A,A,A,A,U,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ e_a7NCs) (ds_d7NSi [Occ=Once!] :: Buffer e_a7NCs) ->
                 case ds_d7NSi of
                 { Buffer _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                          dt3_d7NUf [Occ=Once] _ [Occ=Dead] ->
                 GHC.Types.I# dt3_d7NUf
                 }}]
bufL
  = \ (@ e_a7NCs) (ds_d7NSi :: Buffer e_a7NCs) ->
      case ds_d7NSi of
      { Buffer dt_d7NUc dt1_d7NUd ds1_d7NSk dt2_d7NUe dt3_d7NUf
               dt4_d7NUg ->
      GHC.Types.I# dt3_d7NUf
      }

-- RHS size: {terms: 7, types: 12, coercions: 0, joins: 0/0}
bufSize :: forall e. Buffer e -> Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLL),1*U(A,A,A,U,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ e_a7NCq) (ds_d7NSb [Occ=Once!] :: Buffer e_a7NCq) ->
                 case ds_d7NSb of
                 { Buffer _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                          dt2_d7NU9 [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                 GHC.Types.I# dt2_d7NU9
                 }}]
bufSize
  = \ (@ e_a7NCq) (ds_d7NSb :: Buffer e_a7NCq) ->
      case ds_d7NSb of
      { Buffer dt_d7NU7 dt1_d7NU8 ds1_d7NSd dt2_d7NU9 dt3_d7NUa
               dt4_d7NUb ->
      GHC.Types.I# dt2_d7NU9
      }

-- RHS size: {terms: 6, types: 12, coercions: 0, joins: 0/0}
bufState :: forall e. Buffer e -> BufferState
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ e_a7NCo) (ds_d7NS4 [Occ=Once!] :: Buffer e_a7NCo) ->
                 case ds_d7NS4 of
                 { Buffer _ [Occ=Dead] _ [Occ=Dead] ds1_d7NS6 [Occ=Once]
                          _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
                 ds1_d7NS6
                 }}]
bufState
  = \ (@ e_a7NCo) (ds_d7NS4 :: Buffer e_a7NCo) ->
      case ds_d7NS4 of
      { Buffer dt_d7NU2 dt1_d7NU3 ds1_d7NS6 dt2_d7NU4 dt3_d7NU5
               dt4_d7NU6 ->
      ds1_d7NS6
      }

-- RHS size: {terms: 8, types: 13, coercions: 0, joins: 0/0}
bufRaw :: forall e. Buffer e -> RawBuffer e
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLLLLL),1*U(U,U,A,A,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ e_a7NCm) (ds_d7NRX [Occ=Once!] :: Buffer e_a7NCm) ->
                 case ds_d7NRX of
                 { Buffer dt_d7NTX [Occ=Once] dt1_d7NTY [Occ=Once] _ [Occ=Dead]
                          _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
                 GHC.ForeignPtr.ForeignPtr @ e_a7NCm dt_d7NTX dt1_d7NTY
                 }}]
bufRaw
  = \ (@ e_a7NCm) (ds_d7NRX :: Buffer e_a7NCm) ->
      case ds_d7NRX of
      { Buffer dt_d7NTX dt1_d7NTY ds1_d7NRZ dt2_d7NTZ dt3_d7NU0
               dt4_d7NU1 ->
      GHC.ForeignPtr.ForeignPtr @ e_a7NCm dt_d7NTX dt1_d7NTY
      }

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
charSize :: Int
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
charSize = GHC.Types.I# 4#

-- RHS size: {terms: 22, types: 43, coercions: 2, joins: 0/0}
GHC.IO.Buffer.withBuffer1
  :: forall e a.
     Buffer e
     -> (Ptr e -> IO a) -> State# RealWorld -> (# State# RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U(U,U,A,A,A,A)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ e_a7NKM)
                 (@ a_a7NKN)
                 (ds_d7NRe [Occ=Once!] :: Buffer e_a7NKM)
                 (f_a7NAm [Occ=Once!] :: Ptr e_a7NKM -> IO a_a7NKN)
                 (eta_B1 [Occ=Once] :: State# RealWorld) ->
                 case ds_d7NRe of
                 { Buffer dt_d7NTS [Occ=Once] dt1_d7NTT [Occ=Once] _ [Occ=Dead]
                          _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
                 case ((f_a7NAm (GHC.Ptr.Ptr @ e_a7NKM dt_d7NTS))
                       `cast` (GHC.Types.N:IO[0] <a_a7NKN>_R
                               :: (IO a_a7NKN :: *)
                                  ~R# (State# RealWorld -> (# State# RealWorld, a_a7NKN #) :: *)))
                        eta_B1
                 of
                 { (# ipv_i7IAy [Occ=Once], ipv1_i7IAz [Occ=Once] #) ->
                 case touch#
                        @ 'LiftedRep
                        @ GHC.ForeignPtr.ForeignPtrContents
                        dt1_d7NTT
                        ipv_i7IAy
                 of s'_a7ILd
                 { __DEFAULT ->
                 (# s'_a7ILd, ipv1_i7IAz #)
                 }
                 }
                 }}]
GHC.IO.Buffer.withBuffer1
  = \ (@ e_a7NKM)
      (@ a_a7NKN)
      (ds_d7NRe :: Buffer e_a7NKM)
      (f_a7NAm :: Ptr e_a7NKM -> IO a_a7NKN)
      (eta_B1 :: State# RealWorld) ->
      case ds_d7NRe of
      { Buffer dt_d7NTS dt1_d7NTT ds1_d7NRr dt2_d7NTU dt3_d7NTV
               dt4_d7NTW ->
      case ((f_a7NAm (GHC.Ptr.Ptr @ e_a7NKM dt_d7NTS))
            `cast` (GHC.Types.N:IO[0] <a_a7NKN>_R
                    :: (IO a_a7NKN :: *)
                       ~R# (State# RealWorld -> (# State# RealWorld, a_a7NKN #) :: *)))
             eta_B1
      of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      case touch#
             @ 'LiftedRep
             @ GHC.ForeignPtr.ForeignPtrContents
             dt1_d7NTT
             ipv_i7IAy
      of s'_a7ILd
      { __DEFAULT ->
      (# s'_a7ILd, ipv1_i7IAz #)
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 17, joins: 0/0}
withBuffer :: forall e a. Buffer e -> (Ptr e -> IO a) -> IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U(U,U,A,A,A,A)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.Buffer.withBuffer1
               `cast` (forall (e :: <*>_N) (a :: <*>_N).
                       <Buffer e>_R
                       ->_R <Ptr e -> IO a>_R
                       ->_R Sym (GHC.Types.N:IO[0] <a>_R)
                       :: (forall e a.
                           Buffer e
                           -> (Ptr e -> IO a)
                           -> State# RealWorld
                           -> (# State# RealWorld, a #) :: *)
                          ~R# (forall e a. Buffer e -> (Ptr e -> IO a) -> IO a :: *))}]
withBuffer
  = GHC.IO.Buffer.withBuffer1
    `cast` (forall (e :: <*>_N) (a :: <*>_N).
            <Buffer e>_R
            ->_R <Ptr e -> IO a>_R
            ->_R Sym (GHC.Types.N:IO[0] <a>_R)
            :: (forall e a.
                Buffer e
                -> (Ptr e -> IO a)
                -> State# RealWorld
                -> (# State# RealWorld, a #) :: *)
               ~R# (forall e a. Buffer e -> (Ptr e -> IO a) -> IO a :: *))

-- RHS size: {terms: 22, types: 39, coercions: 2, joins: 0/0}
GHC.IO.Buffer.withRawBuffer1
  :: forall e a.
     RawBuffer e
     -> (Ptr e -> IO a) -> State# RealWorld -> (# State# RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U(U,U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ e_a7NJW)
                 (@ a_a7NJX)
                 (raw_a7NAn :: RawBuffer e_a7NJW)
                 (f_a7NAo [Occ=Once!] :: Ptr e_a7NJW -> IO a_a7NJX)
                 (s_i7IAv [Occ=Once] :: State# RealWorld) ->
                 case ((f_a7NAo
                          (GHC.ForeignPtr.unsafeForeignPtrToPtr @ e_a7NJW raw_a7NAn))
                       `cast` (GHC.Types.N:IO[0] <a_a7NJX>_R
                               :: (IO a_a7NJX :: *)
                                  ~R# (State# RealWorld -> (# State# RealWorld, a_a7NJX #) :: *)))
                        s_i7IAv
                 of
                 { (# ipv_i7IAy [Occ=Once], ipv1_i7IAz [Occ=Once] #) ->
                 case raw_a7NAn of
                 { GHC.ForeignPtr.ForeignPtr _ [Occ=Dead] r_a7ILa [Occ=Once] ->
                 case touch#
                        @ 'LiftedRep @ GHC.ForeignPtr.ForeignPtrContents r_a7ILa ipv_i7IAy
                 of s'_a7ILd
                 { __DEFAULT ->
                 (# s'_a7ILd, ipv1_i7IAz #)
                 }
                 }
                 }}]
GHC.IO.Buffer.withRawBuffer1
  = \ (@ e_a7NJW)
      (@ a_a7NJX)
      (raw_a7NAn :: RawBuffer e_a7NJW)
      (f_a7NAo :: Ptr e_a7NJW -> IO a_a7NJX)
      (s_i7IAv :: State# RealWorld) ->
      case ((f_a7NAo
               (GHC.ForeignPtr.unsafeForeignPtrToPtr @ e_a7NJW raw_a7NAn))
            `cast` (GHC.Types.N:IO[0] <a_a7NJX>_R
                    :: (IO a_a7NJX :: *)
                       ~R# (State# RealWorld -> (# State# RealWorld, a_a7NJX #) :: *)))
             s_i7IAv
      of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      case raw_a7NAn of { GHC.ForeignPtr.ForeignPtr ds2_d7J4I r_a7ILa ->
      case touch#
             @ 'LiftedRep @ GHC.ForeignPtr.ForeignPtrContents r_a7ILa ipv_i7IAy
      of s'_a7ILd
      { __DEFAULT ->
      (# s'_a7ILd, ipv1_i7IAz #)
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 17, joins: 0/0}
withRawBuffer :: forall e a. RawBuffer e -> (Ptr e -> IO a) -> IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U(U,U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.Buffer.withRawBuffer1
               `cast` (forall (e :: <*>_N) (a :: <*>_N).
                       <RawBuffer e>_R
                       ->_R <Ptr e -> IO a>_R
                       ->_R Sym (GHC.Types.N:IO[0] <a>_R)
                       :: (forall e a.
                           RawBuffer e
                           -> (Ptr e -> IO a)
                           -> State# RealWorld
                           -> (# State# RealWorld, a #) :: *)
                          ~R# (forall e a. RawBuffer e -> (Ptr e -> IO a) -> IO a :: *))}]
withRawBuffer
  = GHC.IO.Buffer.withRawBuffer1
    `cast` (forall (e :: <*>_N) (a :: <*>_N).
            <RawBuffer e>_R
            ->_R <Ptr e -> IO a>_R
            ->_R Sym (GHC.Types.N:IO[0] <a>_R)
            :: (forall e a.
                RawBuffer e
                -> (Ptr e -> IO a)
                -> State# RealWorld
                -> (# State# RealWorld, a #) :: *)
               ~R# (forall e a. RawBuffer e -> (Ptr e -> IO a) -> IO a :: *))

-- RHS size: {terms: 9, types: 13, coercions: 0, joins: 0/0}
isEmptyBuffer :: forall e. Buffer e -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSS),1*U(A,A,A,A,U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ e_a7NJR) (ds_d7NPY [Occ=Once!] :: Buffer e_a7NJR) ->
                 case ds_d7NPY of
                 { Buffer _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                          dt3_d7NTG [Occ=Once] dt4_d7NTH [Occ=Once] ->
                 tagToEnum# @ Bool (==# dt3_d7NTG dt4_d7NTH)
                 }}]
isEmptyBuffer
  = \ (@ e_a7NJR) (ds_d7NPY :: Buffer e_a7NJR) ->
      case ds_d7NPY of
      { Buffer dt_d7NTD dt1_d7NTE ds1_d7NQa dt2_d7NTF dt3_d7NTG
               dt4_d7NTH ->
      tagToEnum# @ Bool (==# dt3_d7NTG dt4_d7NTH)
      }

-- RHS size: {terms: 9, types: 13, coercions: 0, joins: 0/0}
isFullBuffer :: forall e. Buffer e -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLS),1*U(A,A,A,U,A,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ e_a7NJJ) (ds_d7NPC [Occ=Once!] :: Buffer e_a7NJJ) ->
                 case ds_d7NPC of
                 { Buffer _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                          dt2_d7NTA [Occ=Once] _ [Occ=Dead] dt4_d7NTC [Occ=Once] ->
                 tagToEnum# @ Bool (==# dt2_d7NTA dt4_d7NTC)
                 }}]
isFullBuffer
  = \ (@ e_a7NJJ) (ds_d7NPC :: Buffer e_a7NJJ) ->
      case ds_d7NPC of
      { Buffer dt_d7NTy dt1_d7NTz ds1_d7NPS dt2_d7NTA dt3_d7NTB
               dt4_d7NTC ->
      tagToEnum# @ Bool (==# dt2_d7NTA dt4_d7NTC)
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
isFullCharBuffer :: forall e. Buffer e -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLS),1*U(A,A,A,U,A,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= isFullBuffer}]
isFullCharBuffer = isFullBuffer

-- RHS size: {terms: 11, types: 13, coercions: 0, joins: 0/0}
isWriteBuffer :: forall e. Buffer e -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ e_a7NJE) (buf_a7NAt [Occ=Once!] :: Buffer e_a7NJE) ->
                 case buf_a7NAt of
                 { Buffer _ [Occ=Dead] _ [Occ=Dead] ds_d7NS6 [Occ=Once!]
                          _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
                 case ds_d7NS6 of {
                   ReadBuffer -> GHC.Types.False;
                   WriteBuffer -> GHC.Types.True
                 }
                 }}]
isWriteBuffer
  = \ (@ e_a7NJE) (buf_a7NAt :: Buffer e_a7NJE) ->
      case buf_a7NAt of
      { Buffer dt_d7NU2 dt1_d7NU3 ds_d7NS6 dt2_d7NU4 dt3_d7NU5
               dt4_d7NU6 ->
      case ds_d7NS6 of {
        ReadBuffer -> GHC.Types.False;
        WriteBuffer -> GHC.Types.True
      }
      }

-- RHS size: {terms: 29, types: 18, coercions: 0, joins: 0/0}
bufferAdjustL :: forall e. Int -> Buffer e -> Buffer e
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(SLLSLS),1*U(U,U,U,U,A,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ e_a7NJd)
                 (l_a7NAB [Occ=Once!] :: Int)
                 (buf_a7NAC [Occ=Once!] :: Buffer e_a7NJd) ->
                 case buf_a7NAC of
                 { Buffer dt_d7NT4 [Occ=Once*] dt1_d7NT5 [Occ=Once*]
                          ds_d7NOs [Occ=Once*] dt2_d7NT6 [Occ=Once*] _ [Occ=Dead]
                          dt4_d7NT8 ->
                 case l_a7NAB of { I# x_a22G ->
                 case ==# x_a22G dt4_d7NT8 of {
                   __DEFAULT ->
                     GHC.IO.Buffer.Buffer
                       @ e_a7NJd dt_d7NT4 dt1_d7NT5 ds_d7NOs dt2_d7NT6 x_a22G dt4_d7NT8;
                   1# ->
                     GHC.IO.Buffer.Buffer
                       @ e_a7NJd dt_d7NT4 dt1_d7NT5 ds_d7NOs dt2_d7NT6 0# 0#
                 }
                 }
                 }}]
bufferAdjustL
  = \ (@ e_a7NJd) (l_a7NAB :: Int) (buf_a7NAC :: Buffer e_a7NJd) ->
      case buf_a7NAC of
      { Buffer dt_d7NT4 dt1_d7NT5 ds_d7NOs dt2_d7NT6 dt3_d7NT7
               dt4_d7NT8 ->
      case l_a7NAB of { I# x_a22G ->
      case ==# x_a22G dt4_d7NT8 of {
        __DEFAULT ->
          GHC.IO.Buffer.Buffer
            @ e_a7NJd dt_d7NT4 dt1_d7NT5 ds_d7NOs dt2_d7NT6 x_a22G dt4_d7NT8;
        1# ->
          GHC.IO.Buffer.Buffer
            @ e_a7NJd dt_d7NT4 dt1_d7NT5 ds_d7NOs dt2_d7NT6 0# 0#
      }
      }
      }

-- RHS size: {terms: 17, types: 13, coercions: 0, joins: 0/0}
emptyBuffer
  :: forall e. RawBuffer e -> Int -> BufferState -> Buffer e
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><L,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ e_a7NIO)
                 (raw_a7NAH [Occ=Once!] :: RawBuffer e_a7NIO)
                 (sz_a7NAI [Occ=Once!] :: Int)
                 (state_a7NAJ [Occ=Once] :: BufferState) ->
                 case raw_a7NAH of
                 { GHC.ForeignPtr.ForeignPtr dt1_a7NCh [Occ=Once]
                                             dt2_a7NCi [Occ=Once] ->
                 case sz_a7NAI of { I# dt4_a7NCj [Occ=Once] ->
                 GHC.IO.Buffer.Buffer
                   @ e_a7NIO dt1_a7NCh dt2_a7NCi state_a7NAJ dt4_a7NCj 0# 0#
                 }
                 }}]
emptyBuffer
  = \ (@ e_a7NIO)
      (raw_a7NAH :: RawBuffer e_a7NIO)
      (sz_a7NAI :: Int)
      (state_a7NAJ :: BufferState) ->
      case raw_a7NAH of
      { GHC.ForeignPtr.ForeignPtr dt1_a7NCh dt2_a7NCi ->
      case sz_a7NAI of { I# dt4_a7NCj ->
      GHC.IO.Buffer.Buffer
        @ e_a7NIO dt1_a7NCh dt2_a7NCi state_a7NAJ dt4_a7NCj 0# 0#
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.summaryBuffer5 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.Buffer.summaryBuffer5 = "buf"#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.summaryBuffer4 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.Buffer.summaryBuffer4 = "("#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.summaryBuffer3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.Buffer.summaryBuffer3 = "-"#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.summaryBuffer2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.Buffer.summaryBuffer2 = ")"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.summaryBuffer1 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.Buffer.summaryBuffer1
  = unpackCString# GHC.IO.Buffer.summaryBuffer2

-- RHS size: {terms: 41, types: 41, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$wsummaryBuffer [InlPrag=NOUSERINLINE[0]]
  :: forall a. Int# -> Int# -> Int# -> String
[GblId,
 Arity=3,
 Str=<L,U><L,U><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0 0] 360 0}]
GHC.IO.Buffer.$wsummaryBuffer
  = \ (@ a_s7OtB)
      (ww_s7OtI :: Int#)
      (ww1_s7OtJ :: Int#)
      (ww2_s7OtK :: Int#) ->
      unpackAppendCString#
        GHC.IO.Buffer.summaryBuffer5
        (case GHC.Show.$wshowSignedInt 0# ww_s7OtI (GHC.Types.[] @ Char) of
         { (# ww5_i7NVe, ww6_i7NVf #) ->
         ++
           @ Char
           (GHC.Types.: @ Char ww5_i7NVe ww6_i7NVf)
           (unpackAppendCString#
              GHC.IO.Buffer.summaryBuffer4
              (case GHC.Show.$wshowSignedInt 0# ww1_s7OtJ (GHC.Types.[] @ Char)
               of
               { (# ww7_X7NXm, ww8_X7NXo #) ->
               ++
                 @ Char
                 (GHC.Types.: @ Char ww7_X7NXm ww8_X7NXo)
                 (unpackAppendCString#
                    GHC.IO.Buffer.summaryBuffer3
                    (case GHC.Show.$wshowSignedInt 0# ww2_s7OtK (GHC.Types.[] @ Char)
                     of
                     { (# ww10_X7NXt, ww11_X7NXv #) ->
                     ++
                       @ Char
                       (GHC.Types.: @ Char ww10_X7NXt ww11_X7NXv)
                       GHC.IO.Buffer.summaryBuffer1
                     }))
               }))
         })

-- RHS size: {terms: 9, types: 13, coercions: 0, joins: 0/0}
summaryBuffer [InlPrag=NOUSERINLINE[0]]
  :: forall a. Buffer a -> String
[GblId,
 Arity=1,
 Str=<S(LLLSSS),1*U(A,A,A,U,U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_s7OtB) (w_s7OtC [Occ=Once!] :: Buffer a_s7OtB) ->
                 case w_s7OtC of
                 { Buffer _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                          ww4_s7OtI [Occ=Once] ww5_s7OtJ [Occ=Once] ww6_s7OtK [Occ=Once] ->
                 GHC.IO.Buffer.$wsummaryBuffer
                   @ a_s7OtB ww4_s7OtI ww5_s7OtJ ww6_s7OtK
                 }}]
summaryBuffer
  = \ (@ a_s7OtB) (w_s7OtC :: Buffer a_s7OtB) ->
      case w_s7OtC of
      { Buffer ww1_s7OtF ww2_s7OtG ww3_s7OtH ww4_s7OtI ww5_s7OtJ
               ww6_s7OtK ->
      GHC.IO.Buffer.$wsummaryBuffer
        @ a_s7OtB ww4_s7OtI ww5_s7OtJ ww6_s7OtK
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$trModule4 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.Buffer.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$trModule3 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.Buffer.$trModule3
  = GHC.Types.TrNameS GHC.IO.Buffer.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$trModule2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.IO.Buffer.$trModule2 = "GHC.IO.Buffer"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$trModule1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.Buffer.$trModule1
  = GHC.Types.TrNameS GHC.IO.Buffer.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$trModule :: Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.IO.Buffer.$trModule
  = GHC.Types.Module
      GHC.IO.Buffer.$trModule3 GHC.IO.Buffer.$trModule1

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_r7OJJ :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep_r7OJJ
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcInt (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$krep1_r7OJK :: KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep1_r7OJK = GHC.Types.KindRepVar 0#

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep2_r7OJL :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep2_r7OJL
  = GHC.Types.: @ KindRep $krep1_r7OJK (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep3_r7OJM :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep3_r7OJM
  = GHC.Types.KindRepTyConApp
      GHC.ForeignPtr.$tcForeignPtr $krep2_r7OJL

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$tcBufferState2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.IO.Buffer.$tcBufferState2 = "BufferState"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$tcBufferState1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.Buffer.$tcBufferState1
  = GHC.Types.TrNameS GHC.IO.Buffer.$tcBufferState2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$tcBufferState :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.IO.Buffer.$tcBufferState
  = GHC.Types.TyCon
      15354245406219544442##
      3075510984364124805##
      GHC.IO.Buffer.$trModule
      GHC.IO.Buffer.$tcBufferState1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$tc'ReadBuffer1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
GHC.IO.Buffer.$tc'ReadBuffer1
  = GHC.Types.KindRepTyConApp
      GHC.IO.Buffer.$tcBufferState (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$tc'ReadBuffer3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.IO.Buffer.$tc'ReadBuffer3 = "'ReadBuffer"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$tc'ReadBuffer2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.Buffer.$tc'ReadBuffer2
  = GHC.Types.TrNameS GHC.IO.Buffer.$tc'ReadBuffer3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$tc'ReadBuffer :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.IO.Buffer.$tc'ReadBuffer
  = GHC.Types.TyCon
      18127629064171759490##
      12249378994783130540##
      GHC.IO.Buffer.$trModule
      GHC.IO.Buffer.$tc'ReadBuffer2
      0#
      GHC.IO.Buffer.$tc'ReadBuffer1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$tc'WriteBuffer2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.IO.Buffer.$tc'WriteBuffer2 = "'WriteBuffer"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$tc'WriteBuffer1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.Buffer.$tc'WriteBuffer1
  = GHC.Types.TrNameS GHC.IO.Buffer.$tc'WriteBuffer2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$tc'WriteBuffer :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.IO.Buffer.$tc'WriteBuffer
  = GHC.Types.TyCon
      17535537923682101798##
      5353421715631386637##
      GHC.IO.Buffer.$trModule
      GHC.IO.Buffer.$tc'WriteBuffer1
      0#
      GHC.IO.Buffer.$tc'ReadBuffer1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$tcBuffer2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.IO.Buffer.$tcBuffer2 = "Buffer"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$tcBuffer1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.Buffer.$tcBuffer1
  = GHC.Types.TrNameS GHC.IO.Buffer.$tcBuffer2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$tcBuffer :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.IO.Buffer.$tcBuffer
  = GHC.Types.TyCon
      18372445388029251215##
      8106905342043791875##
      GHC.IO.Buffer.$trModule
      GHC.IO.Buffer.$tcBuffer1
      0#
      GHC.Types.krep$*Arr*

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep4_r7OJN :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep4_r7OJN
  = GHC.Types.KindRepTyConApp GHC.IO.Buffer.$tcBuffer $krep2_r7OJL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep5_r7OJO :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep5_r7OJO = GHC.Types.KindRepFun $krep_r7OJJ $krep4_r7OJN

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep6_r7OJP :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep6_r7OJP = GHC.Types.KindRepFun $krep_r7OJJ $krep5_r7OJO

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep7_r7OJQ :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep7_r7OJQ = GHC.Types.KindRepFun $krep_r7OJJ $krep6_r7OJP

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep8_r7OJR :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep8_r7OJR
  = GHC.Types.KindRepFun GHC.IO.Buffer.$tc'ReadBuffer1 $krep7_r7OJQ

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$tc'Buffer1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.IO.Buffer.$tc'Buffer1
  = GHC.Types.KindRepFun $krep3_r7OJM $krep8_r7OJR

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$tc'Buffer3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.IO.Buffer.$tc'Buffer3 = "'Buffer"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$tc'Buffer2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.Buffer.$tc'Buffer2
  = GHC.Types.TrNameS GHC.IO.Buffer.$tc'Buffer3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$tc'Buffer :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.IO.Buffer.$tc'Buffer
  = GHC.Types.TyCon
      6953290879310668230##
      8839152842293094522##
      GHC.IO.Buffer.$trModule
      GHC.IO.Buffer.$tc'Buffer2
      1#
      GHC.IO.Buffer.$tc'Buffer1

-- RHS size: {terms: 30, types: 28, coercions: 0, joins: 0/0}
GHC.IO.Buffer.writeWord8Buf1
  :: RawBuffer Word8
     -> Int -> Word8 -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (arr_a7NA0 [Occ=Once!] :: RawBuffer Word8)
                 (ix_a7NA1 [Occ=Once!] :: Int)
                 (w_a7NA2 [Occ=Once!] :: Word8)
                 (s_i7IAv [Occ=Once] :: State# RealWorld) ->
                 case arr_a7NA0 of
                 { GHC.ForeignPtr.ForeignPtr fo_a7ILe [Occ=Once]
                                             ds1_d7J4y [Occ=Once] ->
                 case ix_a7NA1 of { I# d_i7NW2 [Occ=Once] ->
                 case w_a7NA2 of { W8# x_i7NW6 [Occ=Once] ->
                 case writeWord8OffAddr#
                        @ RealWorld (plusAddr# fo_a7ILe d_i7NW2) 0# x_i7NW6 s_i7IAv
                 of s2_i7NW8
                 { __DEFAULT ->
                 case touch#
                        @ 'LiftedRep @ GHC.ForeignPtr.ForeignPtrContents ds1_d7J4y s2_i7NW8
                 of s'_a7ILd
                 { __DEFAULT ->
                 (# s'_a7ILd, GHC.Tuple.() #)
                 }
                 }
                 }
                 }
                 }}]
GHC.IO.Buffer.writeWord8Buf1
  = \ (arr_a7NA0 :: RawBuffer Word8)
      (ix_a7NA1 :: Int)
      (w_a7NA2 :: Word8)
      (s_i7IAv :: State# RealWorld) ->
      case arr_a7NA0 of { GHC.ForeignPtr.ForeignPtr fo_a7ILe ds1_d7J4y ->
      case ix_a7NA1 of { I# d_i7NW2 ->
      case w_a7NA2 of { W8# x_i7NW6 ->
      case writeWord8OffAddr#
             @ RealWorld (plusAddr# fo_a7ILe d_i7NW2) 0# x_i7NW6 s_i7IAv
      of s2_i7NW8
      { __DEFAULT ->
      case touch#
             @ 'LiftedRep @ GHC.ForeignPtr.ForeignPtrContents ds1_d7J4y s2_i7NW8
      of s'_a7ILd
      { __DEFAULT ->
      (# s'_a7ILd, GHC.Tuple.() #)
      }
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 10, joins: 0/0}
writeWord8Buf :: RawBuffer Word8 -> Int -> Word8 -> IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.Buffer.writeWord8Buf1
               `cast` (<RawBuffer Word8>_R
                       ->_R <Int>_R
                       ->_R <Word8>_R
                       ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (RawBuffer Word8
                           -> Int
                           -> Word8
                           -> State# RealWorld
                           -> (# State# RealWorld, () #) :: *)
                          ~R# (RawBuffer Word8 -> Int -> Word8 -> IO () :: *))}]
writeWord8Buf
  = GHC.IO.Buffer.writeWord8Buf1
    `cast` (<RawBuffer Word8>_R
            ->_R <Int>_R
            ->_R <Word8>_R
            ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (RawBuffer Word8
                -> Int
                -> Word8
                -> State# RealWorld
                -> (# State# RealWorld, () #) :: *)
               ~R# (RawBuffer Word8 -> Int -> Word8 -> IO () :: *))

-- RHS size: {terms: 26, types: 34, coercions: 0, joins: 0/0}
GHC.IO.Buffer.readWord8Buf1
  :: RawBuffer Word8
     -> Int -> State# RealWorld -> (# State# RealWorld, Word8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (arr_a7NzX [Occ=Once!] :: RawBuffer Word8)
                 (ix_a7NzY [Occ=Once!] :: Int)
                 (s_i7IAv [Occ=Once] :: State# RealWorld) ->
                 case arr_a7NzX of
                 { GHC.ForeignPtr.ForeignPtr fo_a7ILe [Occ=Once]
                                             ds1_d7J4y [Occ=Once] ->
                 case ix_a7NzY of { I# d_i7NWr [Occ=Once] ->
                 case readWord8OffAddr#
                        @ RealWorld (plusAddr# fo_a7ILe d_i7NWr) 0# s_i7IAv
                 of
                 { (# ipv_i7NWv [Occ=Once], ipv1_i7NWw [Occ=Once] #) ->
                 case touch#
                        @ 'LiftedRep
                        @ GHC.ForeignPtr.ForeignPtrContents
                        ds1_d7J4y
                        ipv_i7NWv
                 of s'_a7ILd
                 { __DEFAULT ->
                 (# s'_a7ILd, GHC.Word.W8# ipv1_i7NWw #)
                 }
                 }
                 }
                 }}]
GHC.IO.Buffer.readWord8Buf1
  = \ (arr_a7NzX :: RawBuffer Word8)
      (ix_a7NzY :: Int)
      (s_i7IAv :: State# RealWorld) ->
      case arr_a7NzX of { GHC.ForeignPtr.ForeignPtr fo_a7ILe ds1_d7J4y ->
      case ix_a7NzY of { I# d_i7NWr ->
      case readWord8OffAddr#
             @ RealWorld (plusAddr# fo_a7ILe d_i7NWr) 0# s_i7IAv
      of
      { (# ipv_i7NWv, ipv1_i7NWw #) ->
      case touch#
             @ 'LiftedRep
             @ GHC.ForeignPtr.ForeignPtrContents
             ds1_d7J4y
             ipv_i7NWv
      of s'_a7ILd
      { __DEFAULT ->
      (# s'_a7ILd, GHC.Word.W8# ipv1_i7NWw #)
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 8, joins: 0/0}
readWord8Buf :: RawBuffer Word8 -> Int -> IO Word8
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.Buffer.readWord8Buf1
               `cast` (<RawBuffer Word8>_R
                       ->_R <Int>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Word8>_R)
                       :: (RawBuffer Word8
                           -> Int -> State# RealWorld -> (# State# RealWorld, Word8 #) :: *)
                          ~R# (RawBuffer Word8 -> Int -> IO Word8 :: *))}]
readWord8Buf
  = GHC.IO.Buffer.readWord8Buf1
    `cast` (<RawBuffer Word8>_R
            ->_R <Int>_R
            ->_R Sym (GHC.Types.N:IO[0] <Word8>_R)
            :: (RawBuffer Word8
                -> Int -> State# RealWorld -> (# State# RealWorld, Word8 #) :: *)
               ~R# (RawBuffer Word8 -> Int -> IO Word8 :: *))

-- RHS size: {terms: 18, types: 16, coercions: 0, joins: 0/0}
bufferAdd :: forall e. Int -> Buffer e -> Buffer e
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(SLLSSS),1*U(U,U,U,U,U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ e_a7NJ5)
                 (i_a7NAE [Occ=Once!] :: Int)
                 (buf_a7NAF [Occ=Once!] :: Buffer e_a7NJ5) ->
                 case buf_a7NAF of
                 { Buffer dt_d7NSU [Occ=Once] dt1_d7NSV [Occ=Once]
                          ds_d7NNE [Occ=Once] dt2_d7NSW [Occ=Once] dt3_d7NSX [Occ=Once]
                          dt4_d7NSY [Occ=Once] ->
                 case i_a7NAE of { I# y_i7MX5 [Occ=Once] ->
                 GHC.IO.Buffer.Buffer
                   @ e_a7NJ5
                   dt_d7NSU
                   dt1_d7NSV
                   ds_d7NNE
                   dt2_d7NSW
                   dt3_d7NSX
                   (+# dt4_d7NSY y_i7MX5)
                 }
                 }}]
bufferAdd
  = \ (@ e_a7NJ5) (i_a7NAE :: Int) (buf_a7NAF :: Buffer e_a7NJ5) ->
      case buf_a7NAF of
      { Buffer dt_d7NSU dt1_d7NSV ds_d7NNE dt2_d7NSW dt3_d7NSX
               dt4_d7NSY ->
      case i_a7NAE of { I# y_i7MX5 ->
      GHC.IO.Buffer.Buffer
        @ e_a7NJ5
        dt_d7NSU
        dt1_d7NSV
        ds_d7NNE
        dt2_d7NSW
        dt3_d7NSX
        (+# dt4_d7NSY y_i7MX5)
      }
      }

-- RHS size: {terms: 33, types: 19, coercions: 0, joins: 0/1}
bufferRemove :: forall e. Int -> Buffer e -> Buffer e
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(SLLSSS),1*U(U,U,U,U,U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ e_a7NJo)
                 (i_a7NAy [Occ=Once!] :: Int)
                 (buf_a7NAz [Occ=Once!] :: Buffer e_a7NJo) ->
                 case buf_a7NAz of
                 { Buffer dt_d7NTj [Occ=Once*] dt1_d7NTk [Occ=Once*]
                          ds_d7NOM [Occ=Once*] dt2_d7NTl [Occ=Once*] dt3_d7NTm [Occ=Once]
                          dt4_d7NTn ->
                 case i_a7NAy of { I# y_i7MX5 [Occ=Once] ->
                 let {
                   x_a22G :: Int#
                   [LclId]
                   x_a22G = +# dt3_d7NTm y_i7MX5 } in
                 case ==# x_a22G dt4_d7NTn of {
                   __DEFAULT ->
                     GHC.IO.Buffer.Buffer
                       @ e_a7NJo dt_d7NTj dt1_d7NTk ds_d7NOM dt2_d7NTl x_a22G dt4_d7NTn;
                   1# ->
                     GHC.IO.Buffer.Buffer
                       @ e_a7NJo dt_d7NTj dt1_d7NTk ds_d7NOM dt2_d7NTl 0# 0#
                 }
                 }
                 }}]
bufferRemove
  = \ (@ e_a7NJo) (i_a7NAy :: Int) (buf_a7NAz :: Buffer e_a7NJo) ->
      case buf_a7NAz of
      { Buffer dt_d7NTj dt1_d7NTk ds_d7NOM dt2_d7NTl dt3_d7NTm
               dt4_d7NTn ->
      case i_a7NAy of { I# y_i7MX5 ->
      let {
        x_a22G [Dmd=<S,U>] :: Int#
        [LclId]
        x_a22G = +# dt3_d7NTm y_i7MX5 } in
      case ==# x_a22G dt4_d7NTn of {
        __DEFAULT ->
          GHC.IO.Buffer.Buffer
            @ e_a7NJo dt_d7NTj dt1_d7NTk ds_d7NOM dt2_d7NTl x_a22G dt4_d7NTn;
        1# ->
          GHC.IO.Buffer.Buffer
            @ e_a7NJo dt_d7NTj dt1_d7NTk ds_d7NOM dt2_d7NTl 0# 0#
      }
      }
      }

-- RHS size: {terms: 9, types: 12, coercions: 0, joins: 0/0}
bufferAvailable :: forall e. Buffer e -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLS),1*U(A,A,A,U,A,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ e_a7NJu) (ds_d7NOR [Occ=Once!] :: Buffer e_a7NJu) ->
                 case ds_d7NOR of
                 { Buffer _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                          dt2_d7NTq [Occ=Once] _ [Occ=Dead] dt4_d7NTs [Occ=Once] ->
                 GHC.Types.I# (-# dt2_d7NTq dt4_d7NTs)
                 }}]
bufferAvailable
  = \ (@ e_a7NJu) (ds_d7NOR :: Buffer e_a7NJu) ->
      case ds_d7NOR of
      { Buffer dt_d7NTo dt1_d7NTp ds1_d7NP7 dt2_d7NTq dt3_d7NTr
               dt4_d7NTs ->
      GHC.Types.I# (-# dt2_d7NTq dt4_d7NTs)
      }

-- RHS size: {terms: 9, types: 12, coercions: 0, joins: 0/0}
bufferElems :: forall e. Buffer e -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSS),1*U(A,A,A,A,U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ e_a7NJz) (ds_d7NPc [Occ=Once!] :: Buffer e_a7NJz) ->
                 case ds_d7NPc of
                 { Buffer _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                          dt3_d7NTw [Occ=Once] dt4_d7NTx [Occ=Once] ->
                 GHC.Types.I# (-# dt4_d7NTx dt3_d7NTw)
                 }}]
bufferElems
  = \ (@ e_a7NJz) (ds_d7NPc :: Buffer e_a7NJz) ->
      case ds_d7NPc of
      { Buffer dt_d7NTt dt1_d7NTu ds1_d7NPs dt2_d7NTv dt3_d7NTw
               dt4_d7NTx ->
      GHC.Types.I# (-# dt4_d7NTx dt3_d7NTw)
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_r7OJS :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl_r7OJS = "buffer invariant violation: "#

-- RHS size: {terms: 11, types: 9, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: forall a. Int# -> Int# -> Int# -> IO ()
[GblId, Arity=3, Str=<B,U><B,U><B,U>x, Unf=OtherCon []]
GHC.IO.Buffer.$wlvl
  = \ (@ a_s7OtN)
      (ww_s7OtU :: Int#)
      (ww1_s7OtV :: Int#)
      (ww2_s7OtW :: Int#) ->
      errorWithoutStackTrace
        @ 'LiftedRep
        @ (IO ())
        (unpackAppendCString#
           lvl_r7OJS
           (GHC.IO.Buffer.$wsummaryBuffer
              @ a_s7OtN ww_s7OtU ww1_s7OtV ww2_s7OtW))

-- RHS size: {terms: 7, types: 5, coercions: 0, joins: 0/0}
GHC.IO.Buffer.checkBuffer2 :: forall a. Int# -> Int# -> IO ()
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []]
GHC.IO.Buffer.checkBuffer2
  = \ (@ a_s7OtZ) (ww_s7Ou7 :: Int#) (ww1_s7Ou9 :: Int#) ->
      GHC.IO.Buffer.$wlvl @ a_s7OtZ ww_s7Ou7 0# ww1_s7Ou9

-- RHS size: {terms: 104, types: 67, coercions: 0, joins: 0/0}
GHC.IO.Buffer.$wcheckBuffer [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     BufferState
     -> Int#
     -> Int#
     -> Int#
     -> State# RealWorld
     -> (# State# RealWorld, () #)
[GblId,
 Arity=5,
 Str=<S,1*U><S,U><S,U><S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [121 0 70 30 0] 476 120}]
GHC.IO.Buffer.$wcheckBuffer
  = \ (@ a_s7OtZ)
      (ww_s7Ou6 :: BufferState)
      (ww1_s7Ou7 :: Int#)
      (ww2_s7Ou8 :: Int#)
      (ww3_s7Ou9 :: Int#)
      (w_s7Ou1 :: State# RealWorld) ->
      case ># ww1_s7Ou7 0# of {
        __DEFAULT ->
          case GHC.IO.Buffer.$wlvl @ a_s7OtZ ww1_s7Ou7 ww2_s7Ou8 ww3_s7Ou9
          of wild_00 {
          };
        1# ->
          case <=# ww2_s7Ou8 ww3_s7Ou9 of {
            __DEFAULT ->
              case GHC.IO.Buffer.$wlvl @ a_s7OtZ ww1_s7Ou7 ww2_s7Ou8 ww3_s7Ou9
              of wild_00 {
              };
            1# ->
              case <=# ww3_s7Ou9 ww1_s7Ou7 of {
                __DEFAULT ->
                  case GHC.IO.Buffer.$wlvl @ a_s7OtZ ww1_s7Ou7 ww2_s7Ou8 ww3_s7Ou9
                  of wild_00 {
                  };
                1# ->
                  case /=# ww2_s7Ou8 ww3_s7Ou9 of {
                    __DEFAULT ->
                      case ww_s7Ou6 of {
                        ReadBuffer ->
                          case ww2_s7Ou8 of wild1_X3m {
                            __DEFAULT ->
                              case GHC.IO.Buffer.$wlvl @ a_s7OtZ ww1_s7Ou7 wild1_X3m ww3_s7Ou9
                              of wild2_00 {
                              };
                            0# ->
                              case ww3_s7Ou9 of wild2_X3p {
                                __DEFAULT ->
                                  case GHC.IO.Buffer.checkBuffer2 @ a_s7OtZ ww1_s7Ou7 wild2_X3p
                                  of wild3_00 {
                                  };
                                0# -> (# w_s7Ou1, GHC.Tuple.() #)
                              }
                          };
                        WriteBuffer ->
                          case <# ww3_s7Ou9 ww1_s7Ou7 of {
                            __DEFAULT ->
                              case GHC.IO.Buffer.$wlvl @ a_s7OtZ ww1_s7Ou7 ww2_s7Ou8 ww3_s7Ou9
                              of wild1_00 {
                              };
                            1# -> (# w_s7Ou1, GHC.Tuple.() #)
                          }
                      };
                    1# ->
                      case ww_s7Ou6 of {
                        ReadBuffer -> (# w_s7Ou1, GHC.Tuple.() #);
                        WriteBuffer ->
                          case <# ww3_s7Ou9 ww1_s7Ou7 of {
                            __DEFAULT ->
                              case GHC.IO.Buffer.$wlvl @ a_s7OtZ ww1_s7Ou7 ww2_s7Ou8 ww3_s7Ou9
                              of wild1_00 {
                              };
                            1# -> (# w_s7Ou1, GHC.Tuple.() #)
                          }
                      }
                  }
              }
          }
      }

-- RHS size: {terms: 12, types: 15, coercions: 0, joins: 0/0}
GHC.IO.Buffer.checkBuffer1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Buffer a -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(LLSSSS),1*U(A,A,1*U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_s7OtZ)
                 (w_s7Ou0 [Occ=Once!] :: Buffer a_s7OtZ)
                 (w1_s7Ou1 [Occ=Once] :: State# RealWorld) ->
                 case w_s7Ou0 of
                 { Buffer _ [Occ=Dead] _ [Occ=Dead] ww3_s7Ou6 [Occ=Once]
                          ww4_s7Ou7 [Occ=Once] ww5_s7Ou8 [Occ=Once] ww6_s7Ou9 [Occ=Once] ->
                 GHC.IO.Buffer.$wcheckBuffer
                   @ a_s7OtZ ww3_s7Ou6 ww4_s7Ou7 ww5_s7Ou8 ww6_s7Ou9 w1_s7Ou1
                 }}]
GHC.IO.Buffer.checkBuffer1
  = \ (@ a_s7OtZ)
      (w_s7Ou0 :: Buffer a_s7OtZ)
      (w1_s7Ou1 :: State# RealWorld) ->
      case w_s7Ou0 of
      { Buffer ww1_s7Ou4 ww2_s7Ou5 ww3_s7Ou6 ww4_s7Ou7 ww5_s7Ou8
               ww6_s7Ou9 ->
      GHC.IO.Buffer.$wcheckBuffer
        @ a_s7OtZ ww3_s7Ou6 ww4_s7Ou7 ww5_s7Ou8 ww6_s7Ou9 w1_s7Ou1
      }

-- RHS size: {terms: 1, types: 0, coercions: 9, joins: 0/0}
checkBuffer :: forall a. Buffer a -> IO ()
[GblId,
 Arity=2,
 Str=<S(LLSSSS),1*U(A,A,1*U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.Buffer.checkBuffer1
               `cast` (forall (a :: <*>_N).
                       <Buffer a>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (forall a.
                           Buffer a -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                          ~R# (forall a. Buffer a -> IO () :: *))}]
checkBuffer
  = GHC.IO.Buffer.checkBuffer1
    `cast` (forall (a :: <*>_N).
            <Buffer a>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (forall a.
                Buffer a -> State# RealWorld -> (# State# RealWorld, () #) :: *)
               ~R# (forall a. Buffer a -> IO () :: *))

-- RHS size: {terms: 41, types: 57, coercions: 5, joins: 0/0}
GHC.IO.Buffer.newBuffer1
  :: forall e.
     Int
     -> Int
     -> BufferState
     -> State# RealWorld
     -> (# State# RealWorld, Buffer e #)
[GblId,
 Arity=4,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ e_a7NIR)
                 (bytes_a7NAO [Occ=Once!] :: Int)
                 (sz_a7NAP [Occ=Once!] :: Int)
                 (state_a7NAQ [Occ=Once] :: BufferState)
                 (s_i7IAv [Occ=Once] :: State# RealWorld) ->
                 case bytes_a7NAO of { I# x_alN9 ->
                 case <# x_alN9 0# of {
                   __DEFAULT ->
                     case newMutVar#
                            @ GHC.ForeignPtr.Finalizers
                            @ RealWorld
                            GHC.ForeignPtr.NoFinalizers
                            s_i7IAv
                     of
                     { (# ipv_i7IAN [Occ=Once], ipv1_i7IAO [Occ=Once] #) ->
                     case newPinnedByteArray# @ RealWorld x_alN9 ipv_i7IAN of
                     { (# ipv2_s7Jhx [Occ=Once], ipv3_s7Jhy #) ->
                     (# ipv2_s7Jhx,
                        case sz_a7NAP of { I# dt1_a7NCj [Occ=Once] ->
                        GHC.IO.Buffer.Buffer
                          @ e_a7NIR
                          (byteArrayContents#
                             (ipv3_s7Jhy
                              `cast` (UnsafeCo representational (MutableByteArray#
                                                                   RealWorld) ByteArray#
                                      :: (MutableByteArray# RealWorld :: TYPE 'UnliftedRep)
                                         ~R# (ByteArray# :: TYPE 'UnliftedRep))))
                          (GHC.ForeignPtr.MallocPtr ipv3_s7Jhy ipv1_i7IAO)
                          state_a7NAQ
                          dt1_a7NCj
                          0#
                          0#
                        } #)
                     }
                     };
                   1# -> case GHC.ForeignPtr.mallocForeignPtrBytes2 of { }
                 }
                 }}]
GHC.IO.Buffer.newBuffer1
  = \ (@ e_a7NIR)
      (bytes_a7NAO :: Int)
      (sz_a7NAP :: Int)
      (state_a7NAQ :: BufferState)
      (s_i7IAv :: State# RealWorld) ->
      case bytes_a7NAO of { I# x_alN9 ->
      case <# x_alN9 0# of {
        __DEFAULT ->
          case newMutVar#
                 @ GHC.ForeignPtr.Finalizers
                 @ RealWorld
                 GHC.ForeignPtr.NoFinalizers
                 s_i7IAv
          of
          { (# ipv_i7IAN, ipv1_i7IAO #) ->
          case newPinnedByteArray# @ RealWorld x_alN9 ipv_i7IAN of
          { (# ipv2_s7Jhx, ipv3_s7Jhy #) ->
          (# ipv2_s7Jhx,
             case sz_a7NAP of { I# dt1_a7NCj ->
             GHC.IO.Buffer.Buffer
               @ e_a7NIR
               (byteArrayContents#
                  (ipv3_s7Jhy
                   `cast` (UnsafeCo representational (MutableByteArray#
                                                        RealWorld) ByteArray#
                           :: (MutableByteArray# RealWorld :: TYPE 'UnliftedRep)
                              ~R# (ByteArray# :: TYPE 'UnliftedRep))))
               (GHC.ForeignPtr.MallocPtr ipv3_s7Jhy ipv1_i7IAO)
               state_a7NAQ
               dt1_a7NCj
               0#
               0#
             } #)
          }
          };
        1# -> case GHC.ForeignPtr.mallocForeignPtrBytes2 of wild1_00 { }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 13, joins: 0/0}
newBuffer :: forall e. Int -> Int -> BufferState -> IO (Buffer e)
[GblId,
 Arity=4,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.Buffer.newBuffer1
               `cast` (forall (e :: <*>_N).
                       <Int>_R
                       ->_R <Int>_R
                       ->_R <BufferState>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Buffer e>_R)
                       :: (forall e.
                           Int
                           -> Int
                           -> BufferState
                           -> State# RealWorld
                           -> (# State# RealWorld, Buffer e #) :: *)
                          ~R# (forall e. Int -> Int -> BufferState -> IO (Buffer e) :: *))}]
newBuffer
  = GHC.IO.Buffer.newBuffer1
    `cast` (forall (e :: <*>_N).
            <Int>_R
            ->_R <Int>_R
            ->_R <BufferState>_R
            ->_R Sym (GHC.Types.N:IO[0] <Buffer e>_R)
            :: (forall e.
                Int
                -> Int
                -> BufferState
                -> State# RealWorld
                -> (# State# RealWorld, Buffer e #) :: *)
               ~R# (forall e. Int -> Int -> BufferState -> IO (Buffer e) :: *))

-- RHS size: {terms: 6, types: 3, coercions: 0, joins: 0/0}
GHC.IO.Buffer.newByteBuffer1
  :: Int
     -> BufferState
     -> State# RealWorld
     -> (# State# RealWorld, Buffer Word8 #)
[GblId,
 Arity=3,
 Str=<L,U(U)><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (c_a7NAK :: Int) (st_a7NAL [Occ=Once] :: BufferState) ->
                 GHC.IO.Buffer.newBuffer1 @ Word8 c_a7NAK c_a7NAK st_a7NAL}]
GHC.IO.Buffer.newByteBuffer1
  = \ (c_a7NAK :: Int) (st_a7NAL :: BufferState) ->
      GHC.IO.Buffer.newBuffer1 @ Word8 c_a7NAK c_a7NAK st_a7NAL

-- RHS size: {terms: 1, types: 0, coercions: 8, joins: 0/0}
newByteBuffer :: Int -> BufferState -> IO (Buffer Word8)
[GblId,
 Arity=3,
 Str=<L,U(U)><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.Buffer.newByteBuffer1
               `cast` (<Int>_R
                       ->_R <BufferState>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Buffer Word8>_R)
                       :: (Int
                           -> BufferState
                           -> State# RealWorld
                           -> (# State# RealWorld, Buffer Word8 #) :: *)
                          ~R# (Int -> BufferState -> IO (Buffer Word8) :: *))}]
newByteBuffer
  = GHC.IO.Buffer.newByteBuffer1
    `cast` (<Int>_R
            ->_R <BufferState>_R
            ->_R Sym (GHC.Types.N:IO[0] <Buffer Word8>_R)
            :: (Int
                -> BufferState
                -> State# RealWorld
                -> (# State# RealWorld, Buffer Word8 #) :: *)
               ~R# (Int -> BufferState -> IO (Buffer Word8) :: *))

-- RHS size: {terms: 40, types: 53, coercions: 5, joins: 0/1}
GHC.IO.Buffer.newCharBuffer1
  :: Int
     -> BufferState
     -> State# RealWorld
     -> (# State# RealWorld, Buffer Char #)
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (c_a7NAM [Occ=Once!] :: Int)
                 (st_a7NAN [Occ=Once] :: BufferState)
                 (s_i7IAv [Occ=Once] :: State# RealWorld) ->
                 case c_a7NAM of { I# x_i7MWL ->
                 let {
                   x1_alN9 :: Int#
                   [LclId]
                   x1_alN9 = *# x_i7MWL 4# } in
                 case <# x1_alN9 0# of {
                   __DEFAULT ->
                     case newMutVar#
                            @ GHC.ForeignPtr.Finalizers
                            @ RealWorld
                            GHC.ForeignPtr.NoFinalizers
                            s_i7IAv
                     of
                     { (# ipv_i7IAN [Occ=Once], ipv1_i7IAO [Occ=Once] #) ->
                     case newPinnedByteArray# @ RealWorld x1_alN9 ipv_i7IAN of
                     { (# ipv2_s7Jhx [Occ=Once], ipv3_s7Jhy #) ->
                     (# ipv2_s7Jhx,
                        GHC.IO.Buffer.Buffer
                          @ Char
                          (byteArrayContents#
                             (ipv3_s7Jhy
                              `cast` (UnsafeCo representational (MutableByteArray#
                                                                   RealWorld) ByteArray#
                                      :: (MutableByteArray# RealWorld :: TYPE 'UnliftedRep)
                                         ~R# (ByteArray# :: TYPE 'UnliftedRep))))
                          (GHC.ForeignPtr.MallocPtr ipv3_s7Jhy ipv1_i7IAO)
                          st_a7NAN
                          x_i7MWL
                          0#
                          0# #)
                     }
                     };
                   1# -> case GHC.ForeignPtr.mallocForeignPtrBytes2 of { }
                 }
                 }}]
GHC.IO.Buffer.newCharBuffer1
  = \ (c_a7NAM :: Int)
      (st_a7NAN :: BufferState)
      (s_i7IAv :: State# RealWorld) ->
      case c_a7NAM of { I# x_i7MWL ->
      let {
        x1_alN9 [Dmd=<S,U>] :: Int#
        [LclId]
        x1_alN9 = *# x_i7MWL 4# } in
      case <# x1_alN9 0# of {
        __DEFAULT ->
          case newMutVar#
                 @ GHC.ForeignPtr.Finalizers
                 @ RealWorld
                 GHC.ForeignPtr.NoFinalizers
                 s_i7IAv
          of
          { (# ipv_i7IAN, ipv1_i7IAO #) ->
          case newPinnedByteArray# @ RealWorld x1_alN9 ipv_i7IAN of
          { (# ipv2_s7Jhx, ipv3_s7Jhy #) ->
          (# ipv2_s7Jhx,
             GHC.IO.Buffer.Buffer
               @ Char
               (byteArrayContents#
                  (ipv3_s7Jhy
                   `cast` (UnsafeCo representational (MutableByteArray#
                                                        RealWorld) ByteArray#
                           :: (MutableByteArray# RealWorld :: TYPE 'UnliftedRep)
                              ~R# (ByteArray# :: TYPE 'UnliftedRep))))
               (GHC.ForeignPtr.MallocPtr ipv3_s7Jhy ipv1_i7IAO)
               st_a7NAN
               x_i7MWL
               0#
               0# #)
          }
          };
        1# -> case GHC.ForeignPtr.mallocForeignPtrBytes2 of wild1_00 { }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 8, joins: 0/0}
newCharBuffer :: Int -> BufferState -> IO CharBuffer
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.Buffer.newCharBuffer1
               `cast` (<Int>_R
                       ->_R <BufferState>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Buffer Char>_R)
                       :: (Int
                           -> BufferState
                           -> State# RealWorld
                           -> (# State# RealWorld, Buffer Char #) :: *)
                          ~R# (Int -> BufferState -> IO (Buffer Char) :: *))}]
newCharBuffer
  = GHC.IO.Buffer.newCharBuffer1
    `cast` (<Int>_R
            ->_R <BufferState>_R
            ->_R Sym (GHC.Types.N:IO[0] <Buffer Char>_R)
            :: (Int
                -> BufferState
                -> State# RealWorld
                -> (# State# RealWorld, Buffer Char #) :: *)
               ~R# (Int -> BufferState -> IO (Buffer Char) :: *))

-- RHS size: {terms: 33, types: 37, coercions: 0, joins: 0/1}
GHC.IO.Buffer.slideContents1
  :: Buffer Word8
     -> State# RealWorld -> (# State# RealWorld, Buffer Word8 #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (buf_a7NAS [Occ=Once!] :: Buffer Word8)
                 (eta_B1 [Occ=Once] :: State# RealWorld) ->
                 case buf_a7NAS of
                 { Buffer dt_d7NTI dt1_d7NTJ ds_d7NR9 [Occ=Once]
                          dt2_d7NTK [Occ=Once] dt3_d7NTL dt4_d7NTM [Occ=Once] ->
                 let {
                   elems_s7Ob9 :: Int#
                   [LclId]
                   elems_s7Ob9 = -# dt4_d7NTM dt3_d7NTL } in
                 case {__pkg_ccall base-4.11.0.0 Addr#
                           -> Addr#
                           -> Word#
                           -> State# RealWorld
                           -> (# State# RealWorld, Addr# #)}_d7NSN
                        dt_d7NTI
                        (plusAddr# dt_d7NTI dt3_d7NTL)
                        (int2Word# elems_s7Ob9)
                        eta_B1
                 of
                 { (# ds1_d7NSL [Occ=Once], _ [Occ=Dead] #) ->
                 case touch#
                        @ 'LiftedRep
                        @ GHC.ForeignPtr.ForeignPtrContents
                        dt1_d7NTJ
                        ds1_d7NSL
                 of s'_a7ILd
                 { __DEFAULT ->
                 (# s'_a7ILd,
                    GHC.IO.Buffer.Buffer
                      @ Word8 dt_d7NTI dt1_d7NTJ ds_d7NR9 dt2_d7NTK 0# elems_s7Ob9 #)
                 }
                 }
                 }}]
GHC.IO.Buffer.slideContents1
  = \ (buf_a7NAS :: Buffer Word8) (eta_B1 :: State# RealWorld) ->
      case buf_a7NAS of
      { Buffer dt_d7NTI dt1_d7NTJ ds_d7NR9 dt2_d7NTK dt3_d7NTL
               dt4_d7NTM ->
      let {
        elems_s7Ob9 [Dmd=<S,U>] :: Int#
        [LclId]
        elems_s7Ob9 = -# dt4_d7NTM dt3_d7NTL } in
      case {__pkg_ccall base-4.11.0.0 Addr#
                           -> Addr#
                           -> Word#
                           -> State# RealWorld
                           -> (# State# RealWorld, Addr# #)}_d7NSN
             dt_d7NTI
             (plusAddr# dt_d7NTI dt3_d7NTL)
             (int2Word# elems_s7Ob9)
             eta_B1
      of
      { (# ds1_d7NSL, ds2_d7NSK #) ->
      case touch#
             @ 'LiftedRep
             @ GHC.ForeignPtr.ForeignPtrContents
             dt1_d7NTJ
             ds1_d7NSL
      of s'_a7ILd
      { __DEFAULT ->
      (# s'_a7ILd,
         GHC.IO.Buffer.Buffer
           @ Word8 dt_d7NTI dt1_d7NTJ ds_d7NR9 dt2_d7NTK 0# elems_s7Ob9 #)
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 7, joins: 0/0}
slideContents :: Buffer Word8 -> IO (Buffer Word8)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.Buffer.slideContents1
               `cast` (<Buffer Word8>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Buffer Word8>_R)
                       :: (Buffer Word8
                           -> State# RealWorld -> (# State# RealWorld, Buffer Word8 #) :: *)
                          ~R# (Buffer Word8 -> IO (Buffer Word8) :: *))}]
slideContents
  = GHC.IO.Buffer.slideContents1
    `cast` (<Buffer Word8>_R
            ->_R Sym (GHC.Types.N:IO[0] <Buffer Word8>_R)
            :: (Buffer Word8
                -> State# RealWorld -> (# State# RealWorld, Buffer Word8 #) :: *)
               ~R# (Buffer Word8 -> IO (Buffer Word8) :: *))

-- RHS size: {terms: 26, types: 23, coercions: 0, joins: 0/0}
writeCharBufPtr1_r7OJT
  :: Ptr CharBufElem
     -> Int -> Char -> State# RealWorld -> (# State# RealWorld, Int #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []]
writeCharBufPtr1_r7OJT
  = \ (p_a7NAi :: Ptr CharBufElem)
      (ix_a7NAj :: Int)
      (ch_a7NAk :: Char)
      (s_i7JiH :: State# RealWorld) ->
      case p_a7NAi of { Ptr a_i7O55 ->
      case ix_a7NAj of { I# i_i7O59 ->
      case ch_a7NAk of { C# x_i7O5d ->
      case writeWideCharOffAddr#
             @ RealWorld a_i7O55 i_i7O59 x_i7O5d s_i7JiH
      of s2_i7O5f
      { __DEFAULT ->
      (# s2_i7O5f, GHC.Types.I# (+# i_i7O59 1#) #)
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 10, joins: 0/0}
writeCharBufPtr [InlPrag=INLINE (sat-args=3)]
  :: Ptr CharBufElem -> Int -> Char -> IO Int
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=False,boring_ok=False)
         Tmpl= (\ (p_X7NCH [Occ=Once!] :: Ptr CharBufElem)
                  (ix_X7NCJ [Occ=Once!] :: Int)
                  (ch_X7NCL [Occ=Once!] :: Char)
                  (s_i7JiH [Occ=Once] :: State# RealWorld) ->
                  case p_X7NCH of { Ptr a_i7O55 [Occ=Once] ->
                  case ix_X7NCJ of { I# i_i7O59 ->
                  case ch_X7NCL of { C# x_i7O5d [Occ=Once] ->
                  case writeWideCharOffAddr#
                         @ RealWorld a_i7O55 i_i7O59 x_i7O5d s_i7JiH
                  of s2_i7O5f
                  { __DEFAULT ->
                  (# s2_i7O5f, GHC.Types.I# (+# i_i7O59 1#) #)
                  }
                  }
                  }
                  })
               `cast` (<Ptr CharBufElem>_R
                       ->_R <Int>_R
                       ->_R <Char>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Int>_R)
                       :: (Ptr CharBufElem
                           -> Int
                           -> Char
                           -> State# RealWorld
                           -> (# State# RealWorld, Int #) :: *)
                          ~R# (Ptr CharBufElem -> Int -> Char -> IO Int :: *))}]
writeCharBufPtr
  = writeCharBufPtr1_r7OJT
    `cast` (<Ptr CharBufElem>_R
            ->_R <Int>_R
            ->_R <Char>_R
            ->_R Sym (GHC.Types.N:IO[0] <Int>_R)
            :: (Ptr CharBufElem
                -> Int
                -> Char
                -> State# RealWorld
                -> (# State# RealWorld, Int #) :: *)
               ~R# (Ptr CharBufElem -> Int -> Char -> IO Int :: *))

-- RHS size: {terms: 31, types: 27, coercions: 0, joins: 0/0}
writeCharBuf1_r7OJU
  :: RawCharBuffer
     -> Int -> Char -> State# RealWorld -> (# State# RealWorld, Int #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []]
writeCharBuf1_r7OJU
  = \ (arr_a7NAb :: RawCharBuffer)
      (ix_a7NAc :: Int)
      (c_a7NAd :: Char)
      (s_i7IAv :: State# RealWorld) ->
      case arr_a7NAb of { GHC.ForeignPtr.ForeignPtr fo_a7ILe ds1_d7J4y ->
      case ix_a7NAc of { I# i_i7O59 ->
      case c_a7NAd of { C# x_i7O5d ->
      case writeWideCharOffAddr#
             @ RealWorld fo_a7ILe i_i7O59 x_i7O5d s_i7IAv
      of s2_i7O5f
      { __DEFAULT ->
      case touch#
             @ 'LiftedRep @ GHC.ForeignPtr.ForeignPtrContents ds1_d7J4y s2_i7O5f
      of s'_a7ILd
      { __DEFAULT ->
      (# s'_a7ILd, GHC.Types.I# (+# i_i7O59 1#) #)
      }
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 9, joins: 0/0}
writeCharBuf [InlPrag=INLINE (sat-args=3)]
  :: RawCharBuffer -> Int -> Char -> IO Int
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=False,boring_ok=False)
         Tmpl= (\ (arr_X7NCF [Occ=Once!] :: RawCharBuffer)
                  (ix_X7NCH [Occ=Once!] :: Int)
                  (c_X7NCJ [Occ=Once!] :: Char)
                  (s_i7IAv [Occ=Once] :: State# RealWorld) ->
                  case arr_X7NCF of
                  { GHC.ForeignPtr.ForeignPtr fo_a7ILe [Occ=Once]
                                              ds1_d7J4y [Occ=Once] ->
                  case ix_X7NCH of { I# i_i7O59 ->
                  case c_X7NCJ of { C# x_i7O5d [Occ=Once] ->
                  case writeWideCharOffAddr#
                         @ RealWorld fo_a7ILe i_i7O59 x_i7O5d s_i7IAv
                  of s2_i7O5f
                  { __DEFAULT ->
                  case touch#
                         @ 'LiftedRep @ GHC.ForeignPtr.ForeignPtrContents ds1_d7J4y s2_i7O5f
                  of s'_a7ILd
                  { __DEFAULT ->
                  (# s'_a7ILd, GHC.Types.I# (+# i_i7O59 1#) #)
                  }
                  }
                  }
                  }
                  })
               `cast` (<RawCharBuffer>_R
                       ->_R <Int>_R
                       ->_R <Char>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Int>_R)
                       :: (RawCharBuffer
                           -> Int
                           -> Char
                           -> State# RealWorld
                           -> (# State# RealWorld, Int #) :: *)
                          ~R# (RawCharBuffer -> Int -> Char -> IO Int :: *))}]
writeCharBuf
  = writeCharBuf1_r7OJU
    `cast` (<RawCharBuffer>_R
            ->_R <Int>_R
            ->_R <Char>_R
            ->_R Sym (GHC.Types.N:IO[0] <Int>_R)
            :: (RawCharBuffer
                -> Int
                -> Char
                -> State# RealWorld
                -> (# State# RealWorld, Int #) :: *)
               ~R# (RawCharBuffer -> Int -> Char -> IO Int :: *))

-- RHS size: {terms: 24, types: 33, coercions: 0, joins: 0/0}
readCharBufPtr1_r7OJV
  :: Ptr CharBufElem
     -> Int -> State# RealWorld -> (# State# RealWorld, (Char, Int) #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []]
readCharBufPtr1_r7OJV
  = \ (p_a7NAf :: Ptr CharBufElem)
      (ix_a7NAg :: Int)
      (s_i7IAv :: State# RealWorld) ->
      case p_a7NAf of { Ptr a_i7O5U ->
      case ix_a7NAg of { I# i_i7O5Y ->
      case readWideCharOffAddr# @ RealWorld a_i7O5U i_i7O5Y s_i7IAv of
      { (# ipv_i7O62, ipv1_i7O63 #) ->
      (# ipv_i7O62,
         (GHC.Types.C# ipv1_i7O63, GHC.Types.I# (+# i_i7O5Y 1#)) #)
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 10, joins: 0/0}
readCharBufPtr [InlPrag=INLINE (sat-args=2)]
  :: Ptr CharBufElem -> Int -> IO (Char, Int)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= (\ (p_X7NCN [Occ=Once!] :: Ptr CharBufElem)
                  (ix_X7NCP [Occ=Once!] :: Int)
                  (s_i7IAv [Occ=Once] :: State# RealWorld) ->
                  case p_X7NCN of { Ptr a_i7O5U [Occ=Once] ->
                  case ix_X7NCP of { I# i_i7O5Y ->
                  case readWideCharOffAddr# @ RealWorld a_i7O5U i_i7O5Y s_i7IAv of
                  { (# ipv_i7O62 [Occ=Once], ipv1_i7O63 [Occ=Once] #) ->
                  (# ipv_i7O62,
                     (GHC.Types.C# ipv1_i7O63, GHC.Types.I# (+# i_i7O5Y 1#)) #)
                  }
                  }
                  })
               `cast` (<Ptr CharBufElem>_R
                       ->_R <Int>_R
                       ->_R Sym (GHC.Types.N:IO[0] <(Char, Int)>_R)
                       :: (Ptr CharBufElem
                           -> Int
                           -> State# RealWorld
                           -> (# State# RealWorld, (Char, Int) #) :: *)
                          ~R# (Ptr CharBufElem -> Int -> IO (Char, Int) :: *))}]
readCharBufPtr
  = readCharBufPtr1_r7OJV
    `cast` (<Ptr CharBufElem>_R
            ->_R <Int>_R
            ->_R Sym (GHC.Types.N:IO[0] <(Char, Int)>_R)
            :: (Ptr CharBufElem
                -> Int
                -> State# RealWorld
                -> (# State# RealWorld, (Char, Int) #) :: *)
               ~R# (Ptr CharBufElem -> Int -> IO (Char, Int) :: *))

-- RHS size: {terms: 29, types: 37, coercions: 0, joins: 0/0}
readCharBuf1_r7OJW
  :: RawCharBuffer
     -> Int -> State# RealWorld -> (# State# RealWorld, (Char, Int) #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []]
readCharBuf1_r7OJW
  = \ (arr_a7NA8 :: RawCharBuffer)
      (ix_a7NA9 :: Int)
      (s_i7IAv :: State# RealWorld) ->
      case arr_a7NA8 of { GHC.ForeignPtr.ForeignPtr fo_a7ILe ds1_d7J4y ->
      case ix_a7NA9 of { I# i_i7O5Y ->
      case readWideCharOffAddr# @ RealWorld fo_a7ILe i_i7O5Y s_i7IAv of
      { (# ipv_i7O62, ipv1_i7O63 #) ->
      case touch#
             @ 'LiftedRep
             @ GHC.ForeignPtr.ForeignPtrContents
             ds1_d7J4y
             ipv_i7O62
      of s'_a7ILd
      { __DEFAULT ->
      (# s'_a7ILd,
         (GHC.Types.C# ipv1_i7O63, GHC.Types.I# (+# i_i7O5Y 1#)) #)
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 9, joins: 0/0}
readCharBuf [InlPrag=INLINE (sat-args=2)]
  :: RawCharBuffer -> Int -> IO (Char, Int)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= (\ (arr_X7NCK [Occ=Once!] :: RawCharBuffer)
                  (ix_X7NCM [Occ=Once!] :: Int)
                  (s_i7IAv [Occ=Once] :: State# RealWorld) ->
                  case arr_X7NCK of
                  { GHC.ForeignPtr.ForeignPtr fo_a7ILe [Occ=Once]
                                              ds1_d7J4y [Occ=Once] ->
                  case ix_X7NCM of { I# i_i7O5Y ->
                  case readWideCharOffAddr# @ RealWorld fo_a7ILe i_i7O5Y s_i7IAv of
                  { (# ipv_i7O62 [Occ=Once], ipv1_i7O63 [Occ=Once] #) ->
                  case touch#
                         @ 'LiftedRep
                         @ GHC.ForeignPtr.ForeignPtrContents
                         ds1_d7J4y
                         ipv_i7O62
                  of s'_a7ILd
                  { __DEFAULT ->
                  (# s'_a7ILd,
                     (GHC.Types.C# ipv1_i7O63, GHC.Types.I# (+# i_i7O5Y 1#)) #)
                  }
                  }
                  }
                  })
               `cast` (<RawCharBuffer>_R
                       ->_R <Int>_R
                       ->_R Sym (GHC.Types.N:IO[0] <(Char, Int)>_R)
                       :: (RawCharBuffer
                           -> Int
                           -> State# RealWorld
                           -> (# State# RealWorld, (Char, Int) #) :: *)
                          ~R# (RawCharBuffer -> Int -> IO (Char, Int) :: *))}]
readCharBuf
  = readCharBuf1_r7OJW
    `cast` (<RawCharBuffer>_R
            ->_R <Int>_R
            ->_R Sym (GHC.Types.N:IO[0] <(Char, Int)>_R)
            :: (RawCharBuffer
                -> Int
                -> State# RealWorld
                -> (# State# RealWorld, (Char, Int) #) :: *)
               ~R# (RawCharBuffer -> Int -> IO (Char, Int) :: *))

-- RHS size: {terms: 24, types: 33, coercions: 0, joins: 0/0}
GHC.IO.Buffer.peekCharBuf1
  :: RawCharBuffer
     -> Int -> State# RealWorld -> (# State# RealWorld, Char #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (arr_a7NA4 [Occ=Once!] :: RawCharBuffer)
                 (ix_a7NA5 [Occ=Once!] :: Int)
                 (s_i7IAv [Occ=Once] :: State# RealWorld) ->
                 case arr_a7NA4 of
                 { GHC.ForeignPtr.ForeignPtr fo_a7ILe [Occ=Once]
                                             ds1_d7J4y [Occ=Once] ->
                 case ix_a7NA5 of { I# i_i7O5Y [Occ=Once] ->
                 case readWideCharOffAddr# @ RealWorld fo_a7ILe i_i7O5Y s_i7IAv of
                 { (# ipv_i7O62 [Occ=Once], ipv1_i7O63 [Occ=Once] #) ->
                 case touch#
                        @ 'LiftedRep
                        @ GHC.ForeignPtr.ForeignPtrContents
                        ds1_d7J4y
                        ipv_i7O62
                 of s'_a7ILd
                 { __DEFAULT ->
                 (# s'_a7ILd, GHC.Types.C# ipv1_i7O63 #)
                 }
                 }
                 }
                 }}]
GHC.IO.Buffer.peekCharBuf1
  = \ (arr_a7NA4 :: RawCharBuffer)
      (ix_a7NA5 :: Int)
      (s_i7IAv :: State# RealWorld) ->
      case arr_a7NA4 of { GHC.ForeignPtr.ForeignPtr fo_a7ILe ds1_d7J4y ->
      case ix_a7NA5 of { I# i_i7O5Y ->
      case readWideCharOffAddr# @ RealWorld fo_a7ILe i_i7O5Y s_i7IAv of
      { (# ipv_i7O62, ipv1_i7O63 #) ->
      case touch#
             @ 'LiftedRep
             @ GHC.ForeignPtr.ForeignPtrContents
             ds1_d7J4y
             ipv_i7O62
      of s'_a7ILd
      { __DEFAULT ->
      (# s'_a7ILd, GHC.Types.C# ipv1_i7O63 #)
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 7, joins: 0/0}
peekCharBuf :: RawCharBuffer -> Int -> IO Char
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.Buffer.peekCharBuf1
               `cast` (<RawCharBuffer>_R
                       ->_R <Int>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Char>_R)
                       :: (RawCharBuffer
                           -> Int -> State# RealWorld -> (# State# RealWorld, Char #) :: *)
                          ~R# (RawCharBuffer -> Int -> IO Char :: *))}]
peekCharBuf
  = GHC.IO.Buffer.peekCharBuf1
    `cast` (<RawCharBuffer>_R
            ->_R <Int>_R
            ->_R Sym (GHC.Types.N:IO[0] <Char>_R)
            :: (RawCharBuffer
                -> Int -> State# RealWorld -> (# State# RealWorld, Char #) :: *)
               ~R# (RawCharBuffer -> Int -> IO Char :: *))


