
==================== Pre unarise: ====================
2018-03-16 16:02:55.15388759 UTC

GHC.IO.Buffer.$WBuffer [InlPrag=INLINE[2]]
  :: forall e.
     GHC.IO.Buffer.RawBuffer e
     -> GHC.IO.Buffer.BufferState
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.IO.Buffer.Buffer e
[GblId[DataConWrapper],
 Arity=5,
 Caf=NoCafRefs,
 Str=<S,U><L,U><S,U><S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_s7OJY dt_s7OJZ dt_s7OK0 dt_s7OK1 dt_s7OK2]
        case dt_s7OJY of {
          GHC.ForeignPtr.ForeignPtr dt_s7OK4 [Occ=Once]
                                    dt_s7OK5 [Occ=Once] ->
              case dt_s7OK0 of {
                GHC.Types.I# dt_s7OK7 [Occ=Once] ->
                    case dt_s7OK1 of {
                      GHC.Types.I# dt_s7OK9 [Occ=Once] ->
                          case dt_s7OK2 of {
                            GHC.Types.I# dt_s7OKb [Occ=Once] ->
                                GHC.IO.Buffer.Buffer [dt_s7OK4
                                                      dt_s7OK5
                                                      dt_s7OJZ
                                                      dt_s7OK7
                                                      dt_s7OK9
                                                      dt_s7OKb];
                          };
                    };
              };
        };

GHC.IO.Buffer.$fEqBufferState_$c==
  :: GHC.IO.Buffer.BufferState
     -> GHC.IO.Buffer.BufferState -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_s7OKc ds1_s7OKd]
        case ds_s7OKc of {
          GHC.IO.Buffer.ReadBuffer ->
              case ds1_s7OKd of {
                GHC.IO.Buffer.ReadBuffer -> GHC.Types.True [];
                GHC.IO.Buffer.WriteBuffer -> GHC.Types.False [];
              };
          GHC.IO.Buffer.WriteBuffer ->
              case ds1_s7OKd of {
                GHC.IO.Buffer.ReadBuffer -> GHC.Types.False [];
                GHC.IO.Buffer.WriteBuffer -> GHC.Types.True [];
              };
        };

GHC.IO.Buffer.$fEqBufferState_$c/= [InlPrag=INLINE (sat-args=2)]
  :: GHC.IO.Buffer.BufferState
     -> GHC.IO.Buffer.BufferState -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [eta_s7OKh eta1_s7OKi]
        case eta_s7OKh of {
          GHC.IO.Buffer.ReadBuffer ->
              case eta1_s7OKi of {
                GHC.IO.Buffer.ReadBuffer -> GHC.Types.False [];
                GHC.IO.Buffer.WriteBuffer -> GHC.Types.True [];
              };
          GHC.IO.Buffer.WriteBuffer ->
              case eta1_s7OKi of {
                GHC.IO.Buffer.ReadBuffer -> GHC.Types.True [];
                GHC.IO.Buffer.WriteBuffer -> GHC.Types.False [];
              };
        };

GHC.IO.Buffer.$fEqBufferState [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.IO.Buffer.BufferState
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.IO.Buffer.$fEqBufferState_$c==
                                     GHC.IO.Buffer.$fEqBufferState_$c/=];

GHC.IO.Buffer.bufR
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLS),1*U(A,A,A,A,A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7OKm]
        case ds_s7OKm of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt4_s7OKt [Occ=Once] ->
              GHC.Types.I# [dt4_s7OKt];
        };

GHC.IO.Buffer.bufL
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSL),1*U(A,A,A,A,U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7OKu]
        case ds_s7OKu of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt3_s7OKA [Occ=Once]
                               _ [Occ=Dead] ->
              GHC.Types.I# [dt3_s7OKA];
        };

GHC.IO.Buffer.bufSize
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLL),1*U(A,A,A,U,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7OKC]
        case ds_s7OKC of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt2_s7OKH [Occ=Once]
                               _ [Occ=Dead]
                               _ [Occ=Dead] ->
              GHC.Types.I# [dt2_s7OKH];
        };

GHC.IO.Buffer.bufState
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.IO.Buffer.BufferState
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [ds_s7OKK]
        case ds_s7OKK of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               ds1_s7OKO [Occ=Once]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead] ->
              ds1_s7OKO;
        };

GHC.IO.Buffer.bufRaw
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.IO.Buffer.RawBuffer e
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLLLLL),1*U(U,U,A,A,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7OKS]
        case ds_s7OKS of {
          GHC.IO.Buffer.Buffer dt_s7OKU [Occ=Once]
                               dt1_s7OKV [Occ=Once]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead] ->
              GHC.ForeignPtr.ForeignPtr [dt_s7OKU dt1_s7OKV];
        };

GHC.IO.Buffer.charSize :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [4#];

GHC.IO.Buffer.withBuffer1
  :: forall e a.
     GHC.IO.Buffer.Buffer e
     -> (GHC.Ptr.Ptr e -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U(U,U,A,A,A,A)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s7OL0 f_s7OL1 eta_s7OL2]
        case ds_s7OL0 of {
          GHC.IO.Buffer.Buffer dt_s7OL4 [Occ=Once]
                               dt1_s7OL5 [Occ=Once]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead] ->
              let {
                sat_s7OLa [Occ=Once] :: GHC.Ptr.Ptr e_a7NKM
                [LclId] =
                    CCCS GHC.Ptr.Ptr! [dt_s7OL4];
              } in 
                case f_s7OL1 sat_s7OLa eta_s7OL2 of {
                  (#,#) ipv_s7OLc [Occ=Once] ipv1_s7OLd [Occ=Once] ->
                      case touch# [dt1_s7OL5 ipv_s7OLc] of s'_s7OLe {
                        __DEFAULT -> (#,#) [s'_s7OLe ipv1_s7OLd];
                      };
                };
        };

GHC.IO.Buffer.withBuffer
  :: forall e a.
     GHC.IO.Buffer.Buffer e
     -> (GHC.Ptr.Ptr e -> GHC.Types.IO a) -> GHC.Types.IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U(U,U,A,A,A,A)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.IO.Buffer.withBuffer1 eta_B3 eta_B2 eta_B1;

GHC.IO.Buffer.withRawBuffer1
  :: forall e a.
     GHC.IO.Buffer.RawBuffer e
     -> (GHC.Ptr.Ptr e -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U(U,U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [raw_s7OLf f_s7OLg s_s7OLh]
        let {
          sat_s7OLi [Occ=Once] :: GHC.Ptr.Ptr e_a7NJW
          [LclId] =
              [raw_s7OLf] \u [] GHC.ForeignPtr.unsafeForeignPtrToPtr raw_s7OLf;
        } in 
          case f_s7OLg sat_s7OLi s_s7OLh of {
            (#,#) ipv_s7OLk [Occ=Once] ipv1_s7OLl [Occ=Once] ->
                case raw_s7OLf of {
                  GHC.ForeignPtr.ForeignPtr _ [Occ=Dead] r_s7OLo [Occ=Once] ->
                      case touch# [r_s7OLo ipv_s7OLk] of s'_s7OLp {
                        __DEFAULT -> (#,#) [s'_s7OLp ipv1_s7OLl];
                      };
                };
          };

GHC.IO.Buffer.withRawBuffer
  :: forall e a.
     GHC.IO.Buffer.RawBuffer e
     -> (GHC.Ptr.Ptr e -> GHC.Types.IO a) -> GHC.Types.IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U(U,U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.IO.Buffer.withRawBuffer1 eta_B3 eta_B2 eta_B1;

GHC.IO.Buffer.isEmptyBuffer
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSS),1*U(A,A,A,A,U,U)>,
 Unf=OtherCon []] =
    [] \r [ds_s7OLq]
        case ds_s7OLq of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt3_s7OLw [Occ=Once]
                               dt4_s7OLx [Occ=Once] ->
              case ==# [dt3_s7OLw dt4_s7OLx] of sat_s7OLy {
                __DEFAULT -> tagToEnum# [sat_s7OLy];
              };
        };

GHC.IO.Buffer.isFullBuffer
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLS),1*U(A,A,A,U,A,U)>,
 Unf=OtherCon []] =
    [] \r [ds_s7OLz]
        case ds_s7OLz of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt2_s7OLE [Occ=Once]
                               _ [Occ=Dead]
                               dt4_s7OLG [Occ=Once] ->
              case ==# [dt2_s7OLE dt4_s7OLG] of sat_s7OLH {
                __DEFAULT -> tagToEnum# [sat_s7OLH];
              };
        };

GHC.IO.Buffer.isFullCharBuffer
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLS),1*U(A,A,A,U,A,U)>,
 Unf=OtherCon []] =
    [] \r [eta_B1] GHC.IO.Buffer.isFullBuffer eta_B1;

GHC.IO.Buffer.isWriteBuffer
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [buf_s7OLI]
        case buf_s7OLI of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               ds_s7OLM [Occ=Once!]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead] ->
              case ds_s7OLM of {
                GHC.IO.Buffer.ReadBuffer -> GHC.Types.False [];
                GHC.IO.Buffer.WriteBuffer -> GHC.Types.True [];
              };
        };

GHC.IO.Buffer.bufferAdjustL
  :: forall e.
     GHC.Types.Int -> GHC.IO.Buffer.Buffer e -> GHC.IO.Buffer.Buffer e
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(SLLSLS),1*U(U,U,U,U,A,U)>m,
 Unf=OtherCon []] =
    [] \r [l_s7OLR buf_s7OLS]
        case buf_s7OLS of {
          GHC.IO.Buffer.Buffer dt_s7OLU [Occ=Once*]
                               dt1_s7OLV [Occ=Once*]
                               ds_s7OLW [Occ=Once*]
                               dt2_s7OLX [Occ=Once*]
                               _ [Occ=Dead]
                               dt4_s7OLZ ->
              case l_s7OLR of {
                GHC.Types.I# x_s7OM1 ->
                    case ==# [x_s7OM1 dt4_s7OLZ] of {
                      __DEFAULT ->
                          GHC.IO.Buffer.Buffer [dt_s7OLU
                                                dt1_s7OLV
                                                ds_s7OLW
                                                dt2_s7OLX
                                                x_s7OM1
                                                dt4_s7OLZ];
                      1# ->
                          GHC.IO.Buffer.Buffer [dt_s7OLU dt1_s7OLV ds_s7OLW dt2_s7OLX 0# 0#];
                    };
              };
        };

GHC.IO.Buffer.emptyBuffer
  :: forall e.
     GHC.IO.Buffer.RawBuffer e
     -> GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.IO.Buffer.Buffer e
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><L,U>m,
 Unf=OtherCon []] =
    [] \r [raw_s7OM3 sz_s7OM4 state_s7OM5]
        case raw_s7OM3 of {
          GHC.ForeignPtr.ForeignPtr dt1_s7OM7 [Occ=Once]
                                    dt2_s7OM8 [Occ=Once] ->
              case sz_s7OM4 of {
                GHC.Types.I# dt4_s7OMa [Occ=Once] ->
                    GHC.IO.Buffer.Buffer [dt1_s7OM7
                                          dt2_s7OM8
                                          state_s7OM5
                                          dt4_s7OMa
                                          0#
                                          0#];
              };
        };

GHC.IO.Buffer.summaryBuffer5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "buf"#;

GHC.IO.Buffer.summaryBuffer4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "("#;

GHC.IO.Buffer.summaryBuffer3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "-"#;

GHC.IO.Buffer.summaryBuffer2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    ")"#;

GHC.IO.Buffer.summaryBuffer1 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Buffer.summaryBuffer2;

GHC.IO.Buffer.$wsummaryBuffer [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Base.String
[GblId, Arity=3, Str=<L,U><L,U><L,U>, Unf=OtherCon []] =
    [] \r [ww_s7OMb ww1_s7OMc ww2_s7OMd]
        let {
          sat_s7OMu [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [ww_s7OMb ww1_s7OMc ww2_s7OMd] \u []
                  case GHC.Show.$wshowSignedInt 0# ww_s7OMb GHC.Types.[] of {
                    (#,#) ww5_s7OMf [Occ=Once] ww6_s7OMg [Occ=Once] ->
                        let {
                          sat_s7OMt [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                          [LclId] =
                              [ww1_s7OMc ww2_s7OMd] \s []
                                  let {
                                    sat_s7OMs [Occ=Once] :: [GHC.Types.Char]
                                    [LclId] =
                                        [ww1_s7OMc ww2_s7OMd] \u []
                                            case
                                                GHC.Show.$wshowSignedInt 0# ww1_s7OMc GHC.Types.[]
                                            of
                                            { (#,#) ww7_s7OMj [Occ=Once] ww8_s7OMk [Occ=Once] ->
                                                  let {
                                                    sat_s7OMr [Occ=Once, Dmd=<L,1*U>]
                                                      :: [GHC.Types.Char]
                                                    [LclId] =
                                                        [ww2_s7OMd] \s []
                                                            let {
                                                              sat_s7OMq [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId] =
                                                                  [ww2_s7OMd] \u []
                                                                      case
                                                                          GHC.Show.$wshowSignedInt
                                                                              0#
                                                                              ww2_s7OMd
                                                                              GHC.Types.[]
                                                                      of
                                                                      { (#,#) ww10_s7OMn [Occ=Once]
                                                                              ww11_s7OMo [Occ=Once] ->
                                                                            let {
                                                                              sat_s7OMp [Occ=Once]
                                                                                :: [GHC.Types.Char]
                                                                              [LclId] =
                                                                                  CCCS :! [ww10_s7OMn
                                                                                           ww11_s7OMo];
                                                                            } in 
                                                                              GHC.Base.++
                                                                                  sat_s7OMp
                                                                                  GHC.IO.Buffer.summaryBuffer1;
                                                                      };
                                                            } in 
                                                              GHC.CString.unpackAppendCString#
                                                                  GHC.IO.Buffer.summaryBuffer3
                                                                  sat_s7OMq; } in
                                                  let {
                                                    sat_s7OMl [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId] =
                                                        CCCS :! [ww7_s7OMj ww8_s7OMk];
                                                  } in  GHC.Base.++ sat_s7OMl sat_s7OMr;
                                            };
                                  } in 
                                    GHC.CString.unpackAppendCString#
                                        GHC.IO.Buffer.summaryBuffer4 sat_s7OMs; } in
                        let {
                          sat_s7OMh [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              CCCS :! [ww5_s7OMf ww6_s7OMg];
                        } in  GHC.Base.++ sat_s7OMh sat_s7OMt;
                  };
        } in 
          GHC.CString.unpackAppendCString#
              GHC.IO.Buffer.summaryBuffer5 sat_s7OMu;

GHC.IO.Buffer.summaryBuffer [InlPrag=NOUSERINLINE[0]]
  :: forall a. GHC.IO.Buffer.Buffer a -> GHC.Base.String
[GblId,
 Arity=1,
 Str=<S(LLLSSS),1*U(A,A,A,U,U,U)>,
 Unf=OtherCon []] =
    [] \r [w_s7OMv]
        case w_s7OMv of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               ww4_s7OMA [Occ=Once]
                               ww5_s7OMB [Occ=Once]
                               ww6_s7OMC [Occ=Once] ->
              GHC.IO.Buffer.$wsummaryBuffer ww4_s7OMA ww5_s7OMB ww6_s7OMC;
        };

GHC.IO.Buffer.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.IO.Buffer.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$trModule4];

GHC.IO.Buffer.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.Buffer"#;

GHC.IO.Buffer.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$trModule2];

GHC.IO.Buffer.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.IO.Buffer.$trModule3
                                     GHC.IO.Buffer.$trModule1];

$krep_r7OJJ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcInt
                                              GHC.Types.[]];

$krep1_r7OJK :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

$krep2_r7OJL :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep1_r7OJK GHC.Types.[]];

$krep3_r7OJM :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.ForeignPtr.$tcForeignPtr
                                              $krep2_r7OJL];

GHC.IO.Buffer.$tcBufferState2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "BufferState"#;

GHC.IO.Buffer.$tcBufferState1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$tcBufferState2];

GHC.IO.Buffer.$tcBufferState :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15354245406219544442##
                                    3075510984364124805##
                                    GHC.IO.Buffer.$trModule
                                    GHC.IO.Buffer.$tcBufferState1
                                    0#
                                    GHC.Types.krep$*];

GHC.IO.Buffer.$tc'ReadBuffer1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.IO.Buffer.$tcBufferState
                                              GHC.Types.[]];

GHC.IO.Buffer.$tc'ReadBuffer3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ReadBuffer"#;

GHC.IO.Buffer.$tc'ReadBuffer2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$tc'ReadBuffer3];

GHC.IO.Buffer.$tc'ReadBuffer :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [18127629064171759490##
                                    12249378994783130540##
                                    GHC.IO.Buffer.$trModule
                                    GHC.IO.Buffer.$tc'ReadBuffer2
                                    0#
                                    GHC.IO.Buffer.$tc'ReadBuffer1];

GHC.IO.Buffer.$tc'WriteBuffer2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'WriteBuffer"#;

GHC.IO.Buffer.$tc'WriteBuffer1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$tc'WriteBuffer2];

GHC.IO.Buffer.$tc'WriteBuffer :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17535537923682101798##
                                    5353421715631386637##
                                    GHC.IO.Buffer.$trModule
                                    GHC.IO.Buffer.$tc'WriteBuffer1
                                    0#
                                    GHC.IO.Buffer.$tc'ReadBuffer1];

GHC.IO.Buffer.$tcBuffer2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Buffer"#;

GHC.IO.Buffer.$tcBuffer1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$tcBuffer2];

GHC.IO.Buffer.$tcBuffer :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [18372445388029251215##
                                    8106905342043791875##
                                    GHC.IO.Buffer.$trModule
                                    GHC.IO.Buffer.$tcBuffer1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep4_r7OJN :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.IO.Buffer.$tcBuffer
                                              $krep2_r7OJL];

$krep5_r7OJO :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r7OJJ $krep4_r7OJN];

$krep6_r7OJP :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r7OJJ $krep5_r7OJO];

$krep7_r7OJQ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r7OJJ $krep6_r7OJP];

$krep8_r7OJR :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [GHC.IO.Buffer.$tc'ReadBuffer1
                                         $krep7_r7OJQ];

GHC.IO.Buffer.$tc'Buffer1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r7OJM $krep8_r7OJR];

GHC.IO.Buffer.$tc'Buffer3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Buffer"#;

GHC.IO.Buffer.$tc'Buffer2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$tc'Buffer3];

GHC.IO.Buffer.$tc'Buffer :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6953290879310668230##
                                    8839152842293094522##
                                    GHC.IO.Buffer.$trModule
                                    GHC.IO.Buffer.$tc'Buffer2
                                    1#
                                    GHC.IO.Buffer.$tc'Buffer1];

GHC.IO.Buffer.writeWord8Buf1
  :: GHC.IO.Buffer.RawBuffer GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [arr_s7OMD ix_s7OME w_s7OMF s_s7OMG]
        case arr_s7OMD of {
          GHC.ForeignPtr.ForeignPtr fo_s7OMI [Occ=Once]
                                    ds1_s7OMJ [Occ=Once] ->
              case ix_s7OME of {
                GHC.Types.I# d_s7OML [Occ=Once] ->
                    case w_s7OMF of {
                      GHC.Word.W8# x_s7OMN [Occ=Once] ->
                          case plusAddr# [fo_s7OMI d_s7OML] of sat_s7OMO {
                            __DEFAULT ->
                                case
                                    writeWord8OffAddr# [sat_s7OMO 0# x_s7OMN s_s7OMG]
                                of
                                s2_s7OMP
                                { __DEFAULT ->
                                      case touch# [ds1_s7OMJ s2_s7OMP] of s'_s7OMQ {
                                        __DEFAULT -> (#,#) [s'_s7OMQ GHC.Tuple.()];
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.writeWord8Buf
  :: GHC.IO.Buffer.RawBuffer GHC.Word.Word8
     -> GHC.Types.Int -> GHC.Word.Word8 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Buffer.writeWord8Buf1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.Buffer.readWord8Buf1
  :: GHC.IO.Buffer.RawBuffer GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Word.Word8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [arr_s7OMR ix_s7OMS s_s7OMT]
        case arr_s7OMR of {
          GHC.ForeignPtr.ForeignPtr fo_s7OMV [Occ=Once]
                                    ds1_s7OMW [Occ=Once] ->
              case ix_s7OMS of {
                GHC.Types.I# d_s7OMY [Occ=Once] ->
                    case plusAddr# [fo_s7OMV d_s7OMY] of sat_s7OMZ {
                      __DEFAULT ->
                          case readWord8OffAddr# [sat_s7OMZ 0# s_s7OMT] of {
                            (#,#) ipv_s7ON1 [Occ=Once] ipv1_s7ON2 [Occ=Once] ->
                                case touch# [ds1_s7OMW ipv_s7ON1] of s'_s7ON3 {
                                  __DEFAULT ->
                                      let {
                                        sat_s7ON4 [Occ=Once] :: GHC.Word.Word8
                                        [LclId] =
                                            CCCS GHC.Word.W8#! [ipv1_s7ON2];
                                      } in  (#,#) [s'_s7ON3 sat_s7ON4];
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.readWord8Buf
  :: GHC.IO.Buffer.RawBuffer GHC.Word.Word8
     -> GHC.Types.Int -> GHC.Types.IO GHC.Word.Word8
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.IO.Buffer.readWord8Buf1 eta_B3 eta_B2 eta_B1;

GHC.IO.Buffer.bufferAdd
  :: forall e.
     GHC.Types.Int -> GHC.IO.Buffer.Buffer e -> GHC.IO.Buffer.Buffer e
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(SLLSSS),1*U(U,U,U,U,U,U)>m,
 Unf=OtherCon []] =
    [] \r [i_s7ON5 buf_s7ON6]
        case buf_s7ON6 of {
          GHC.IO.Buffer.Buffer dt_s7ON8 [Occ=Once]
                               dt1_s7ON9 [Occ=Once]
                               ds_s7ONa [Occ=Once]
                               dt2_s7ONb [Occ=Once]
                               dt3_s7ONc [Occ=Once]
                               dt4_s7ONd [Occ=Once] ->
              case i_s7ON5 of {
                GHC.Types.I# y_s7ONf [Occ=Once] ->
                    case +# [dt4_s7ONd y_s7ONf] of sat_s7ONg {
                      __DEFAULT ->
                          GHC.IO.Buffer.Buffer [dt_s7ON8
                                                dt1_s7ON9
                                                ds_s7ONa
                                                dt2_s7ONb
                                                dt3_s7ONc
                                                sat_s7ONg];
                    };
              };
        };

GHC.IO.Buffer.bufferRemove
  :: forall e.
     GHC.Types.Int -> GHC.IO.Buffer.Buffer e -> GHC.IO.Buffer.Buffer e
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(SLLSSS),1*U(U,U,U,U,U,U)>m,
 Unf=OtherCon []] =
    [] \r [i_s7ONh buf_s7ONi]
        case buf_s7ONi of {
          GHC.IO.Buffer.Buffer dt_s7ONk [Occ=Once*]
                               dt1_s7ONl [Occ=Once*]
                               ds_s7ONm [Occ=Once*]
                               dt2_s7ONn [Occ=Once*]
                               dt3_s7ONo [Occ=Once]
                               dt4_s7ONp ->
              case i_s7ONh of {
                GHC.Types.I# y_s7ONr [Occ=Once] ->
                    case +# [dt3_s7ONo y_s7ONr] of x_s7ONs [Dmd=<S,U>] {
                      __DEFAULT ->
                          case ==# [x_s7ONs dt4_s7ONp] of {
                            __DEFAULT ->
                                GHC.IO.Buffer.Buffer [dt_s7ONk
                                                      dt1_s7ONl
                                                      ds_s7ONm
                                                      dt2_s7ONn
                                                      x_s7ONs
                                                      dt4_s7ONp];
                            1# ->
                                GHC.IO.Buffer.Buffer [dt_s7ONk dt1_s7ONl ds_s7ONm dt2_s7ONn 0# 0#];
                          };
                    };
              };
        };

GHC.IO.Buffer.bufferAvailable
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLS),1*U(A,A,A,U,A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7ONu]
        case ds_s7ONu of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt2_s7ONz [Occ=Once]
                               _ [Occ=Dead]
                               dt4_s7ONB [Occ=Once] ->
              case -# [dt2_s7ONz dt4_s7ONB] of sat_s7ONC {
                __DEFAULT -> GHC.Types.I# [sat_s7ONC];
              };
        };

GHC.IO.Buffer.bufferElems
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSS),1*U(A,A,A,A,U,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7OND]
        case ds_s7OND of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt3_s7ONJ [Occ=Once]
                               dt4_s7ONK [Occ=Once] ->
              case -# [dt4_s7ONK dt3_s7ONJ] of sat_s7ONL {
                __DEFAULT -> GHC.Types.I# [sat_s7ONL];
              };
        };

lvl_r7OJS :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "buffer invariant violation: "#;

GHC.IO.Buffer.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Types.IO ()
[GblId, Arity=3, Str=<B,U><B,U><B,U>x, Unf=OtherCon []] =
    [] \r [ww_s7ONM ww1_s7ONN ww2_s7ONO]
        let {
          sat_s7ONP [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [ww_s7ONM ww1_s7ONN ww2_s7ONO] \u []
                  GHC.IO.Buffer.$wsummaryBuffer ww_s7ONM ww1_s7ONN ww2_s7ONO;
        } in 
          case
              GHC.CString.unpackAppendCString# lvl_r7OJS sat_s7ONP
          of
          sat_s7ONQ
          { __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_s7ONQ;
          };

GHC.IO.Buffer.checkBuffer2
  :: forall a. GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Types.IO ()
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [ww_s7ONR ww1_s7ONS]
        GHC.IO.Buffer.$wlvl ww_s7ONR 0# ww1_s7ONS;

GHC.IO.Buffer.$wcheckBuffer [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=5,
 Str=<S,1*U><S,U><S,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_s7ONT ww1_s7ONU ww2_s7ONV ww3_s7ONW w_s7ONX]
        case ># [ww1_s7ONU 0#] of {
          __DEFAULT -> GHC.IO.Buffer.$wlvl ww1_s7ONU ww2_s7ONV ww3_s7ONW;
          1# ->
              case <=# [ww2_s7ONV ww3_s7ONW] of {
                __DEFAULT -> GHC.IO.Buffer.$wlvl ww1_s7ONU ww2_s7ONV ww3_s7ONW;
                1# ->
                    case <=# [ww3_s7ONW ww1_s7ONU] of {
                      __DEFAULT -> GHC.IO.Buffer.$wlvl ww1_s7ONU ww2_s7ONV ww3_s7ONW;
                      1# ->
                          case /=# [ww2_s7ONV ww3_s7ONW] of {
                            __DEFAULT ->
                                case ww_s7ONT of {
                                  GHC.IO.Buffer.ReadBuffer ->
                                      case ww2_s7ONV of wild1_s7OO6 {
                                        __DEFAULT ->
                                            GHC.IO.Buffer.$wlvl ww1_s7ONU wild1_s7OO6 ww3_s7ONW;
                                        0# ->
                                            case ww3_s7ONW of wild2_s7OO8 {
                                              __DEFAULT ->
                                                  GHC.IO.Buffer.checkBuffer2 ww1_s7ONU wild2_s7OO8;
                                              0# -> (#,#) [w_s7ONX GHC.Tuple.()];
                                            };
                                      };
                                  GHC.IO.Buffer.WriteBuffer ->
                                      case <# [ww3_s7ONW ww1_s7ONU] of {
                                        __DEFAULT ->
                                            GHC.IO.Buffer.$wlvl ww1_s7ONU ww2_s7ONV ww3_s7ONW;
                                        1# -> (#,#) [w_s7ONX GHC.Tuple.()];
                                      };
                                };
                            1# ->
                                case ww_s7ONT of {
                                  GHC.IO.Buffer.ReadBuffer -> (#,#) [w_s7ONX GHC.Tuple.()];
                                  GHC.IO.Buffer.WriteBuffer ->
                                      case <# [ww3_s7ONW ww1_s7ONU] of {
                                        __DEFAULT ->
                                            GHC.IO.Buffer.$wlvl ww1_s7ONU ww2_s7ONV ww3_s7ONW;
                                        1# -> (#,#) [w_s7ONX GHC.Tuple.()];
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.checkBuffer1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Buffer.Buffer a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(LLSSSS),1*U(A,A,1*U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s7OOf w1_s7OOg]
        case w_s7OOf of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               ww3_s7OOk [Occ=Once]
                               ww4_s7OOl [Occ=Once]
                               ww5_s7OOm [Occ=Once]
                               ww6_s7OOn [Occ=Once] ->
              GHC.IO.Buffer.$wcheckBuffer
                  ww3_s7OOk ww4_s7OOl ww5_s7OOm ww6_s7OOn w1_s7OOg;
        };

GHC.IO.Buffer.checkBuffer
  :: forall a. GHC.IO.Buffer.Buffer a -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<S(LLSSSS),1*U(A,A,1*U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.IO.Buffer.checkBuffer1 eta_B2 eta_B1;

GHC.IO.Buffer.newBuffer1
  :: forall e.
     GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.Buffer.Buffer e #)
[GblId,
 Arity=4,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [bytes_s7OOo sz_s7OOp state_s7OOq s_s7OOr]
        case bytes_s7OOo of {
          GHC.Types.I# x_s7OOt ->
              case <# [x_s7OOt 0#] of {
                __DEFAULT ->
                    case newMutVar# [GHC.ForeignPtr.NoFinalizers s_s7OOr] of {
                      (#,#) ipv_s7OOw [Occ=Once] ipv1_s7OOx [Occ=Once] ->
                          case newPinnedByteArray# [x_s7OOt ipv_s7OOw] of {
                            (#,#) ipv2_s7OOz [Occ=Once] ipv3_s7OOA ->
                                let {
                                  sat_s7OOF [Occ=Once] :: GHC.IO.Buffer.Buffer e_a7NIR
                                  [LclId] =
                                      [sz_s7OOp state_s7OOq ipv1_s7OOx ipv3_s7OOA] \u []
                                          case sz_s7OOp of {
                                            GHC.Types.I# dt1_s7OOC [Occ=Once] ->
                                                let {
                                                  sat_s7OOE [Occ=Once]
                                                    :: GHC.ForeignPtr.ForeignPtrContents
                                                  [LclId] =
                                                      CCCS GHC.ForeignPtr.MallocPtr! [ipv3_s7OOA
                                                                                      ipv1_s7OOx];
                                                } in 
                                                  case
                                                      byteArrayContents# [ipv3_s7OOA]
                                                  of
                                                  sat_s7OOD
                                                  { __DEFAULT ->
                                                        GHC.IO.Buffer.Buffer [sat_s7OOD
                                                                              sat_s7OOE
                                                                              state_s7OOq
                                                                              dt1_s7OOC
                                                                              0#
                                                                              0#];
                                                  };
                                          };
                                } in  (#,#) [ipv2_s7OOz sat_s7OOF];
                          };
                    };
                1# -> GHC.ForeignPtr.mallocForeignPtrBytes2;
              };
        };

GHC.IO.Buffer.newBuffer
  :: forall e.
     GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Types.IO (GHC.IO.Buffer.Buffer e)
[GblId,
 Arity=4,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Buffer.newBuffer1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.Buffer.newByteBuffer1
  :: GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Word.Word8 #)
[GblId, Arity=3, Str=<L,U(U)><L,U>, Unf=OtherCon []] =
    [] \r [c_s7OOH st_s7OOI eta_B1]
        GHC.IO.Buffer.newBuffer1 c_s7OOH c_s7OOH st_s7OOI eta_B1;

GHC.IO.Buffer.newByteBuffer
  :: GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Types.IO (GHC.IO.Buffer.Buffer GHC.Word.Word8)
[GblId, Arity=3, Str=<L,U(U)><L,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.IO.Buffer.newByteBuffer1 eta_B3 eta_B2 eta_B1;

GHC.IO.Buffer.newCharBuffer1
  :: GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Types.Char #)
[GblId, Arity=3, Str=<S(S),1*U(U)><L,U><S,U>, Unf=OtherCon []] =
    [] \r [c_s7OOJ st_s7OOK s_s7OOL]
        case c_s7OOJ of {
          GHC.Types.I# x_s7OON ->
              case *# [x_s7OON 4#] of x1_s7OOO [Dmd=<S,U>] {
                __DEFAULT ->
                    case <# [x1_s7OOO 0#] of {
                      __DEFAULT ->
                          case newMutVar# [GHC.ForeignPtr.NoFinalizers s_s7OOL] of {
                            (#,#) ipv_s7OOR [Occ=Once] ipv1_s7OOS [Occ=Once] ->
                                case newPinnedByteArray# [x1_s7OOO ipv_s7OOR] of {
                                  (#,#) ipv2_s7OOU [Occ=Once] ipv3_s7OOV ->
                                      let {
                                        sat_s7OOX [Occ=Once] :: GHC.ForeignPtr.ForeignPtrContents
                                        [LclId] =
                                            CCCS GHC.ForeignPtr.MallocPtr! [ipv3_s7OOV ipv1_s7OOS];
                                      } in 
                                        case byteArrayContents# [ipv3_s7OOV] of sat_s7OOW {
                                          __DEFAULT ->
                                              let {
                                                sat_s7OOY [Occ=Once]
                                                  :: GHC.IO.Buffer.Buffer GHC.Types.Char
                                                [LclId] =
                                                    CCCS GHC.IO.Buffer.Buffer! [sat_s7OOW
                                                                                sat_s7OOX
                                                                                st_s7OOK
                                                                                x_s7OON
                                                                                0#
                                                                                0#];
                                              } in  (#,#) [ipv2_s7OOU sat_s7OOY];
                                        };
                                };
                          };
                      1# -> GHC.ForeignPtr.mallocForeignPtrBytes2;
                    };
              };
        };

GHC.IO.Buffer.newCharBuffer
  :: GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Types.IO GHC.IO.Buffer.CharBuffer
[GblId, Arity=3, Str=<S(S),1*U(U)><L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.IO.Buffer.newCharBuffer1 eta_B3 eta_B2 eta_B1;

GHC.IO.Buffer.slideContents1
  :: GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Word.Word8 #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [buf_s7OP0 eta_s7OP1]
        case buf_s7OP0 of {
          GHC.IO.Buffer.Buffer dt_s7OP3
                               dt1_s7OP4
                               ds_s7OP5 [Occ=Once]
                               dt2_s7OP6 [Occ=Once]
                               dt3_s7OP7
                               dt4_s7OP8 [Occ=Once] ->
              case -# [dt4_s7OP8 dt3_s7OP7] of elems_s7OP9 [Dmd=<S,U>] {
                __DEFAULT ->
                    case int2Word# [elems_s7OP9] of sat_s7OPc {
                      __DEFAULT ->
                          case plusAddr# [dt_s7OP3 dt3_s7OP7] of sat_s7OPb {
                            __DEFAULT ->
                                case
                                    __pkg_ccall base-4.11.0.0 [dt_s7OP3
                                                               sat_s7OPb
                                                               sat_s7OPc
                                                               eta_s7OP1]
                                of
                                { (#,#) ds1_s7OPe [Occ=Once] _ [Occ=Dead] ->
                                      case touch# [dt1_s7OP4 ds1_s7OPe] of s'_s7OPg {
                                        __DEFAULT ->
                                            let {
                                              sat_s7OPh [Occ=Once]
                                                :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                              [LclId] =
                                                  CCCS GHC.IO.Buffer.Buffer! [dt_s7OP3
                                                                              dt1_s7OP4
                                                                              ds_s7OP5
                                                                              dt2_s7OP6
                                                                              0#
                                                                              elems_s7OP9];
                                            } in  (#,#) [s'_s7OPg sat_s7OPh];
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.slideContents
  :: GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Types.IO (GHC.IO.Buffer.Buffer GHC.Word.Word8)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.IO.Buffer.slideContents1 eta_B2 eta_B1;

writeCharBufPtr1_r7OJT
  :: GHC.Ptr.Ptr GHC.IO.Buffer.CharBufElem
     -> GHC.Types.Int
     -> GHC.Types.Char
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [p_s7OPi ix_s7OPj ch_s7OPk s_s7OPl]
        case p_s7OPi of {
          GHC.Ptr.Ptr a_s7OPn [Occ=Once] ->
              case ix_s7OPj of {
                GHC.Types.I# i_s7OPp ->
                    case ch_s7OPk of {
                      GHC.Types.C# x_s7OPr [Occ=Once] ->
                          case
                              writeWideCharOffAddr# [a_s7OPn i_s7OPp x_s7OPr s_s7OPl]
                          of
                          s2_s7OPs
                          { __DEFAULT ->
                                case +# [i_s7OPp 1#] of sat_s7OPt {
                                  __DEFAULT ->
                                      let {
                                        sat_s7OPu [Occ=Once] :: GHC.Types.Int
                                        [LclId] =
                                            CCCS GHC.Types.I#! [sat_s7OPt];
                                      } in  (#,#) [s2_s7OPs sat_s7OPu];
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.writeCharBufPtr [InlPrag=INLINE (sat-args=3)]
  :: GHC.Ptr.Ptr GHC.IO.Buffer.CharBufElem
     -> GHC.Types.Int -> GHC.Types.Char -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        writeCharBufPtr1_r7OJT eta_B4 eta_B3 eta_B2 eta_B1;

writeCharBuf1_r7OJU
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int
     -> GHC.Types.Char
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [arr_s7OPv ix_s7OPw c_s7OPx s_s7OPy]
        case arr_s7OPv of {
          GHC.ForeignPtr.ForeignPtr fo_s7OPA [Occ=Once]
                                    ds1_s7OPB [Occ=Once] ->
              case ix_s7OPw of {
                GHC.Types.I# i_s7OPD ->
                    case c_s7OPx of {
                      GHC.Types.C# x_s7OPF [Occ=Once] ->
                          case
                              writeWideCharOffAddr# [fo_s7OPA i_s7OPD x_s7OPF s_s7OPy]
                          of
                          s2_s7OPG
                          { __DEFAULT ->
                                case touch# [ds1_s7OPB s2_s7OPG] of s'_s7OPH {
                                  __DEFAULT ->
                                      case +# [i_s7OPD 1#] of sat_s7OPI {
                                        __DEFAULT ->
                                            let {
                                              sat_s7OPJ [Occ=Once] :: GHC.Types.Int
                                              [LclId] =
                                                  CCCS GHC.Types.I#! [sat_s7OPI];
                                            } in  (#,#) [s'_s7OPH sat_s7OPJ];
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.writeCharBuf [InlPrag=INLINE (sat-args=3)]
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int -> GHC.Types.Char -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        writeCharBuf1_r7OJU eta_B4 eta_B3 eta_B2 eta_B1;

readCharBufPtr1_r7OJV
  :: GHC.Ptr.Ptr GHC.IO.Buffer.CharBufElem
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Char, GHC.Types.Int) #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [p_s7OPK ix_s7OPL s_s7OPM]
        case p_s7OPK of {
          GHC.Ptr.Ptr a_s7OPO [Occ=Once] ->
              case ix_s7OPL of {
                GHC.Types.I# i_s7OPQ ->
                    case readWideCharOffAddr# [a_s7OPO i_s7OPQ s_s7OPM] of {
                      (#,#) ipv_s7OPS [Occ=Once] ipv1_s7OPT [Occ=Once] ->
                          case +# [i_s7OPQ 1#] of sat_s7OPV {
                            __DEFAULT ->
                                let {
                                  sat_s7OPW [Occ=Once] :: GHC.Types.Int
                                  [LclId] =
                                      CCCS GHC.Types.I#! [sat_s7OPV]; } in
                                let {
                                  sat_s7OPU [Occ=Once] :: GHC.Types.Char
                                  [LclId] =
                                      CCCS GHC.Types.C#! [ipv1_s7OPT]; } in
                                let {
                                  sat_s7OPX [Occ=Once] :: (GHC.Types.Char, GHC.Types.Int)
                                  [LclId] =
                                      CCCS (,)! [sat_s7OPU sat_s7OPW];
                                } in  (#,#) [ipv_s7OPS sat_s7OPX];
                          };
                    };
              };
        };

GHC.IO.Buffer.readCharBufPtr [InlPrag=INLINE (sat-args=2)]
  :: GHC.Ptr.Ptr GHC.IO.Buffer.CharBufElem
     -> GHC.Types.Int -> GHC.Types.IO (GHC.Types.Char, GHC.Types.Int)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        readCharBufPtr1_r7OJV eta_B3 eta_B2 eta_B1;

readCharBuf1_r7OJW
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Char, GHC.Types.Int) #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [arr_s7OPY ix_s7OPZ s_s7OQ0]
        case arr_s7OPY of {
          GHC.ForeignPtr.ForeignPtr fo_s7OQ2 [Occ=Once]
                                    ds1_s7OQ3 [Occ=Once] ->
              case ix_s7OPZ of {
                GHC.Types.I# i_s7OQ5 ->
                    case readWideCharOffAddr# [fo_s7OQ2 i_s7OQ5 s_s7OQ0] of {
                      (#,#) ipv_s7OQ7 [Occ=Once] ipv1_s7OQ8 [Occ=Once] ->
                          case touch# [ds1_s7OQ3 ipv_s7OQ7] of s'_s7OQ9 {
                            __DEFAULT ->
                                case +# [i_s7OQ5 1#] of sat_s7OQb {
                                  __DEFAULT ->
                                      let {
                                        sat_s7OQc [Occ=Once] :: GHC.Types.Int
                                        [LclId] =
                                            CCCS GHC.Types.I#! [sat_s7OQb]; } in
                                      let {
                                        sat_s7OQa [Occ=Once] :: GHC.Types.Char
                                        [LclId] =
                                            CCCS GHC.Types.C#! [ipv1_s7OQ8]; } in
                                      let {
                                        sat_s7OQd [Occ=Once] :: (GHC.Types.Char, GHC.Types.Int)
                                        [LclId] =
                                            CCCS (,)! [sat_s7OQa sat_s7OQc];
                                      } in  (#,#) [s'_s7OQ9 sat_s7OQd];
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.readCharBuf [InlPrag=INLINE (sat-args=2)]
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int -> GHC.Types.IO (GHC.Types.Char, GHC.Types.Int)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        readCharBuf1_r7OJW eta_B3 eta_B2 eta_B1;

GHC.IO.Buffer.peekCharBuf1
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [arr_s7OQe ix_s7OQf s_s7OQg]
        case arr_s7OQe of {
          GHC.ForeignPtr.ForeignPtr fo_s7OQi [Occ=Once]
                                    ds1_s7OQj [Occ=Once] ->
              case ix_s7OQf of {
                GHC.Types.I# i_s7OQl [Occ=Once] ->
                    case readWideCharOffAddr# [fo_s7OQi i_s7OQl s_s7OQg] of {
                      (#,#) ipv_s7OQn [Occ=Once] ipv1_s7OQo [Occ=Once] ->
                          case touch# [ds1_s7OQj ipv_s7OQn] of s'_s7OQp {
                            __DEFAULT ->
                                let {
                                  sat_s7OQq [Occ=Once] :: GHC.Types.Char
                                  [LclId] =
                                      CCCS GHC.Types.C#! [ipv1_s7OQo];
                                } in  (#,#) [s'_s7OQp sat_s7OQq];
                          };
                    };
              };
        };

GHC.IO.Buffer.peekCharBuf
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Char
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.IO.Buffer.peekCharBuf1 eta_B3 eta_B2 eta_B1;

GHC.IO.Buffer.ReadBuffer :: GHC.IO.Buffer.BufferState
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Buffer.ReadBuffer! [];

GHC.IO.Buffer.WriteBuffer :: GHC.IO.Buffer.BufferState
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Buffer.WriteBuffer! [];

GHC.IO.Buffer.Buffer
  :: forall e.
     GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.IO.Buffer.Buffer e
[GblId[DataCon],
 Arity=6,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Buffer.Buffer [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1];


==================== STG syntax: ====================
2018-03-16 16:02:55.183276117 UTC

GHC.IO.Buffer.$WBuffer [InlPrag=INLINE[2]]
  :: forall e.
     GHC.IO.Buffer.RawBuffer e
     -> GHC.IO.Buffer.BufferState
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.IO.Buffer.Buffer e
[GblId[DataConWrapper],
 Arity=5,
 Caf=NoCafRefs,
 Str=<S,U><L,U><S,U><S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_s7OJY dt_s7OJZ dt_s7OK0 dt_s7OK1 dt_s7OK2]
        case dt_s7OJY of {
          GHC.ForeignPtr.ForeignPtr dt_s7OK4 [Occ=Once]
                                    dt_s7OK5 [Occ=Once] ->
              case dt_s7OK0 of {
                GHC.Types.I# dt_s7OK7 [Occ=Once] ->
                    case dt_s7OK1 of {
                      GHC.Types.I# dt_s7OK9 [Occ=Once] ->
                          case dt_s7OK2 of {
                            GHC.Types.I# dt_s7OKb [Occ=Once] ->
                                GHC.IO.Buffer.Buffer [dt_s7OK4
                                                      dt_s7OK5
                                                      dt_s7OJZ
                                                      dt_s7OK7
                                                      dt_s7OK9
                                                      dt_s7OKb];
                          };
                    };
              };
        };

GHC.IO.Buffer.$fEqBufferState_$c==
  :: GHC.IO.Buffer.BufferState
     -> GHC.IO.Buffer.BufferState -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_s7OKc ds1_s7OKd]
        case ds_s7OKc of {
          GHC.IO.Buffer.ReadBuffer ->
              case ds1_s7OKd of {
                GHC.IO.Buffer.ReadBuffer -> GHC.Types.True [];
                GHC.IO.Buffer.WriteBuffer -> GHC.Types.False [];
              };
          GHC.IO.Buffer.WriteBuffer ->
              case ds1_s7OKd of {
                GHC.IO.Buffer.ReadBuffer -> GHC.Types.False [];
                GHC.IO.Buffer.WriteBuffer -> GHC.Types.True [];
              };
        };

GHC.IO.Buffer.$fEqBufferState_$c/= [InlPrag=INLINE (sat-args=2)]
  :: GHC.IO.Buffer.BufferState
     -> GHC.IO.Buffer.BufferState -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [eta_s7OKh eta1_s7OKi]
        case eta_s7OKh of {
          GHC.IO.Buffer.ReadBuffer ->
              case eta1_s7OKi of {
                GHC.IO.Buffer.ReadBuffer -> GHC.Types.False [];
                GHC.IO.Buffer.WriteBuffer -> GHC.Types.True [];
              };
          GHC.IO.Buffer.WriteBuffer ->
              case eta1_s7OKi of {
                GHC.IO.Buffer.ReadBuffer -> GHC.Types.True [];
                GHC.IO.Buffer.WriteBuffer -> GHC.Types.False [];
              };
        };

GHC.IO.Buffer.$fEqBufferState [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.IO.Buffer.BufferState
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.IO.Buffer.$fEqBufferState_$c==
                                     GHC.IO.Buffer.$fEqBufferState_$c/=];

GHC.IO.Buffer.bufR
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLS),1*U(A,A,A,A,A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7OKm]
        case ds_s7OKm of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt4_s7OKt [Occ=Once] ->
              GHC.Types.I# [dt4_s7OKt];
        };

GHC.IO.Buffer.bufL
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSL),1*U(A,A,A,A,U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7OKu]
        case ds_s7OKu of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt3_s7OKA [Occ=Once]
                               _ [Occ=Dead] ->
              GHC.Types.I# [dt3_s7OKA];
        };

GHC.IO.Buffer.bufSize
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLL),1*U(A,A,A,U,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7OKC]
        case ds_s7OKC of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt2_s7OKH [Occ=Once]
                               _ [Occ=Dead]
                               _ [Occ=Dead] ->
              GHC.Types.I# [dt2_s7OKH];
        };

GHC.IO.Buffer.bufState
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.IO.Buffer.BufferState
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [ds_s7OKK]
        case ds_s7OKK of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               ds1_s7OKO [Occ=Once]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead] ->
              ds1_s7OKO;
        };

GHC.IO.Buffer.bufRaw
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.IO.Buffer.RawBuffer e
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLLLLL),1*U(U,U,A,A,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7OKS]
        case ds_s7OKS of {
          GHC.IO.Buffer.Buffer dt_s7OKU [Occ=Once]
                               dt1_s7OKV [Occ=Once]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead] ->
              GHC.ForeignPtr.ForeignPtr [dt_s7OKU dt1_s7OKV];
        };

GHC.IO.Buffer.charSize :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [4#];

GHC.IO.Buffer.withBuffer1
  :: forall e a.
     GHC.IO.Buffer.Buffer e
     -> (GHC.Ptr.Ptr e -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U(U,U,A,A,A,A)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s7OL0 f_s7OL1 void_0E]
        case ds_s7OL0 of {
          GHC.IO.Buffer.Buffer dt_s7OL4 [Occ=Once]
                               dt1_s7OL5 [Occ=Once]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead] ->
              let {
                sat_s7OLa [Occ=Once] :: GHC.Ptr.Ptr e_a7NKM
                [LclId] =
                    CCCS GHC.Ptr.Ptr! [dt_s7OL4];
              } in 
                case f_s7OL1 sat_s7OLa GHC.Prim.void# of {
                  Unit# ipv1_s7OLd [Occ=Once] ->
                      case touch# [dt1_s7OL5 GHC.Prim.void#] of s'_s7OLe {
                        (##) -> Unit# [ipv1_s7OLd];
                      };
                };
        };

GHC.IO.Buffer.withBuffer
  :: forall e a.
     GHC.IO.Buffer.Buffer e
     -> (GHC.Ptr.Ptr e -> GHC.Types.IO a) -> GHC.Types.IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U(U,U,A,A,A,A)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.IO.Buffer.withBuffer1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Buffer.withRawBuffer1
  :: forall e a.
     GHC.IO.Buffer.RawBuffer e
     -> (GHC.Ptr.Ptr e -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U(U,U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [raw_s7OLf f_s7OLg void_0E]
        let {
          sat_s7OLi [Occ=Once] :: GHC.Ptr.Ptr e_a7NJW
          [LclId] =
              [raw_s7OLf] \u [] GHC.ForeignPtr.unsafeForeignPtrToPtr raw_s7OLf;
        } in 
          case f_s7OLg sat_s7OLi GHC.Prim.void# of {
            Unit# ipv1_s7OLl [Occ=Once] ->
                case raw_s7OLf of {
                  GHC.ForeignPtr.ForeignPtr _ [Occ=Dead] r_s7OLo [Occ=Once] ->
                      case touch# [r_s7OLo GHC.Prim.void#] of s'_s7OLp {
                        (##) -> Unit# [ipv1_s7OLl];
                      };
                };
          };

GHC.IO.Buffer.withRawBuffer
  :: forall e a.
     GHC.IO.Buffer.RawBuffer e
     -> (GHC.Ptr.Ptr e -> GHC.Types.IO a) -> GHC.Types.IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U(U,U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.IO.Buffer.withRawBuffer1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Buffer.isEmptyBuffer
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSS),1*U(A,A,A,A,U,U)>,
 Unf=OtherCon []] =
    [] \r [ds_s7OLq]
        case ds_s7OLq of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt3_s7OLw [Occ=Once]
                               dt4_s7OLx [Occ=Once] ->
              case ==# [dt3_s7OLw dt4_s7OLx] of sat_s7OLy {
                __DEFAULT -> tagToEnum# [sat_s7OLy];
              };
        };

GHC.IO.Buffer.isFullBuffer
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLS),1*U(A,A,A,U,A,U)>,
 Unf=OtherCon []] =
    [] \r [ds_s7OLz]
        case ds_s7OLz of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt2_s7OLE [Occ=Once]
                               _ [Occ=Dead]
                               dt4_s7OLG [Occ=Once] ->
              case ==# [dt2_s7OLE dt4_s7OLG] of sat_s7OLH {
                __DEFAULT -> tagToEnum# [sat_s7OLH];
              };
        };

GHC.IO.Buffer.isFullCharBuffer
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLS),1*U(A,A,A,U,A,U)>,
 Unf=OtherCon []] =
    [] \r [eta_B1] GHC.IO.Buffer.isFullBuffer eta_B1;

GHC.IO.Buffer.isWriteBuffer
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [buf_s7OLI]
        case buf_s7OLI of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               ds_s7OLM [Occ=Once!]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead] ->
              case ds_s7OLM of {
                GHC.IO.Buffer.ReadBuffer -> GHC.Types.False [];
                GHC.IO.Buffer.WriteBuffer -> GHC.Types.True [];
              };
        };

GHC.IO.Buffer.bufferAdjustL
  :: forall e.
     GHC.Types.Int -> GHC.IO.Buffer.Buffer e -> GHC.IO.Buffer.Buffer e
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(SLLSLS),1*U(U,U,U,U,A,U)>m,
 Unf=OtherCon []] =
    [] \r [l_s7OLR buf_s7OLS]
        case buf_s7OLS of {
          GHC.IO.Buffer.Buffer dt_s7OLU [Occ=Once*]
                               dt1_s7OLV [Occ=Once*]
                               ds_s7OLW [Occ=Once*]
                               dt2_s7OLX [Occ=Once*]
                               _ [Occ=Dead]
                               dt4_s7OLZ ->
              case l_s7OLR of {
                GHC.Types.I# x_s7OM1 ->
                    case ==# [x_s7OM1 dt4_s7OLZ] of {
                      __DEFAULT ->
                          GHC.IO.Buffer.Buffer [dt_s7OLU
                                                dt1_s7OLV
                                                ds_s7OLW
                                                dt2_s7OLX
                                                x_s7OM1
                                                dt4_s7OLZ];
                      1# ->
                          GHC.IO.Buffer.Buffer [dt_s7OLU dt1_s7OLV ds_s7OLW dt2_s7OLX 0# 0#];
                    };
              };
        };

GHC.IO.Buffer.emptyBuffer
  :: forall e.
     GHC.IO.Buffer.RawBuffer e
     -> GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.IO.Buffer.Buffer e
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><L,U>m,
 Unf=OtherCon []] =
    [] \r [raw_s7OM3 sz_s7OM4 state_s7OM5]
        case raw_s7OM3 of {
          GHC.ForeignPtr.ForeignPtr dt1_s7OM7 [Occ=Once]
                                    dt2_s7OM8 [Occ=Once] ->
              case sz_s7OM4 of {
                GHC.Types.I# dt4_s7OMa [Occ=Once] ->
                    GHC.IO.Buffer.Buffer [dt1_s7OM7
                                          dt2_s7OM8
                                          state_s7OM5
                                          dt4_s7OMa
                                          0#
                                          0#];
              };
        };

GHC.IO.Buffer.summaryBuffer5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "buf"#;

GHC.IO.Buffer.summaryBuffer4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "("#;

GHC.IO.Buffer.summaryBuffer3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "-"#;

GHC.IO.Buffer.summaryBuffer2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    ")"#;

GHC.IO.Buffer.summaryBuffer1 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Buffer.summaryBuffer2;

GHC.IO.Buffer.$wsummaryBuffer [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Base.String
[GblId, Arity=3, Str=<L,U><L,U><L,U>, Unf=OtherCon []] =
    [] \r [ww_s7OMb ww1_s7OMc ww2_s7OMd]
        let {
          sat_s7OMu [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [ww_s7OMb ww1_s7OMc ww2_s7OMd] \u []
                  case GHC.Show.$wshowSignedInt 0# ww_s7OMb GHC.Types.[] of {
                    (#,#) ww5_s7OMf [Occ=Once] ww6_s7OMg [Occ=Once] ->
                        let {
                          sat_s7OMt [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                          [LclId] =
                              [ww1_s7OMc ww2_s7OMd] \s []
                                  let {
                                    sat_s7OMs [Occ=Once] :: [GHC.Types.Char]
                                    [LclId] =
                                        [ww1_s7OMc ww2_s7OMd] \u []
                                            case
                                                GHC.Show.$wshowSignedInt 0# ww1_s7OMc GHC.Types.[]
                                            of
                                            { (#,#) ww7_s7OMj [Occ=Once] ww8_s7OMk [Occ=Once] ->
                                                  let {
                                                    sat_s7OMr [Occ=Once, Dmd=<L,1*U>]
                                                      :: [GHC.Types.Char]
                                                    [LclId] =
                                                        [ww2_s7OMd] \s []
                                                            let {
                                                              sat_s7OMq [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId] =
                                                                  [ww2_s7OMd] \u []
                                                                      case
                                                                          GHC.Show.$wshowSignedInt
                                                                              0#
                                                                              ww2_s7OMd
                                                                              GHC.Types.[]
                                                                      of
                                                                      { (#,#) ww10_s7OMn [Occ=Once]
                                                                              ww11_s7OMo [Occ=Once] ->
                                                                            let {
                                                                              sat_s7OMp [Occ=Once]
                                                                                :: [GHC.Types.Char]
                                                                              [LclId] =
                                                                                  CCCS :! [ww10_s7OMn
                                                                                           ww11_s7OMo];
                                                                            } in 
                                                                              GHC.Base.++
                                                                                  sat_s7OMp
                                                                                  GHC.IO.Buffer.summaryBuffer1;
                                                                      };
                                                            } in 
                                                              GHC.CString.unpackAppendCString#
                                                                  GHC.IO.Buffer.summaryBuffer3
                                                                  sat_s7OMq; } in
                                                  let {
                                                    sat_s7OMl [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId] =
                                                        CCCS :! [ww7_s7OMj ww8_s7OMk];
                                                  } in  GHC.Base.++ sat_s7OMl sat_s7OMr;
                                            };
                                  } in 
                                    GHC.CString.unpackAppendCString#
                                        GHC.IO.Buffer.summaryBuffer4 sat_s7OMs; } in
                        let {
                          sat_s7OMh [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              CCCS :! [ww5_s7OMf ww6_s7OMg];
                        } in  GHC.Base.++ sat_s7OMh sat_s7OMt;
                  };
        } in 
          GHC.CString.unpackAppendCString#
              GHC.IO.Buffer.summaryBuffer5 sat_s7OMu;

GHC.IO.Buffer.summaryBuffer [InlPrag=NOUSERINLINE[0]]
  :: forall a. GHC.IO.Buffer.Buffer a -> GHC.Base.String
[GblId,
 Arity=1,
 Str=<S(LLLSSS),1*U(A,A,A,U,U,U)>,
 Unf=OtherCon []] =
    [] \r [w_s7OMv]
        case w_s7OMv of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               ww4_s7OMA [Occ=Once]
                               ww5_s7OMB [Occ=Once]
                               ww6_s7OMC [Occ=Once] ->
              GHC.IO.Buffer.$wsummaryBuffer ww4_s7OMA ww5_s7OMB ww6_s7OMC;
        };

GHC.IO.Buffer.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.IO.Buffer.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$trModule4];

GHC.IO.Buffer.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.Buffer"#;

GHC.IO.Buffer.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$trModule2];

GHC.IO.Buffer.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.IO.Buffer.$trModule3
                                     GHC.IO.Buffer.$trModule1];

$krep_r7OJJ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcInt
                                              GHC.Types.[]];

$krep1_r7OJK :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

$krep2_r7OJL :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep1_r7OJK GHC.Types.[]];

$krep3_r7OJM :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.ForeignPtr.$tcForeignPtr
                                              $krep2_r7OJL];

GHC.IO.Buffer.$tcBufferState2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "BufferState"#;

GHC.IO.Buffer.$tcBufferState1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$tcBufferState2];

GHC.IO.Buffer.$tcBufferState :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15354245406219544442##
                                    3075510984364124805##
                                    GHC.IO.Buffer.$trModule
                                    GHC.IO.Buffer.$tcBufferState1
                                    0#
                                    GHC.Types.krep$*];

GHC.IO.Buffer.$tc'ReadBuffer1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.IO.Buffer.$tcBufferState
                                              GHC.Types.[]];

GHC.IO.Buffer.$tc'ReadBuffer3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ReadBuffer"#;

GHC.IO.Buffer.$tc'ReadBuffer2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$tc'ReadBuffer3];

GHC.IO.Buffer.$tc'ReadBuffer :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [18127629064171759490##
                                    12249378994783130540##
                                    GHC.IO.Buffer.$trModule
                                    GHC.IO.Buffer.$tc'ReadBuffer2
                                    0#
                                    GHC.IO.Buffer.$tc'ReadBuffer1];

GHC.IO.Buffer.$tc'WriteBuffer2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'WriteBuffer"#;

GHC.IO.Buffer.$tc'WriteBuffer1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$tc'WriteBuffer2];

GHC.IO.Buffer.$tc'WriteBuffer :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17535537923682101798##
                                    5353421715631386637##
                                    GHC.IO.Buffer.$trModule
                                    GHC.IO.Buffer.$tc'WriteBuffer1
                                    0#
                                    GHC.IO.Buffer.$tc'ReadBuffer1];

GHC.IO.Buffer.$tcBuffer2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Buffer"#;

GHC.IO.Buffer.$tcBuffer1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$tcBuffer2];

GHC.IO.Buffer.$tcBuffer :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [18372445388029251215##
                                    8106905342043791875##
                                    GHC.IO.Buffer.$trModule
                                    GHC.IO.Buffer.$tcBuffer1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep4_r7OJN :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.IO.Buffer.$tcBuffer
                                              $krep2_r7OJL];

$krep5_r7OJO :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r7OJJ $krep4_r7OJN];

$krep6_r7OJP :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r7OJJ $krep5_r7OJO];

$krep7_r7OJQ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r7OJJ $krep6_r7OJP];

$krep8_r7OJR :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [GHC.IO.Buffer.$tc'ReadBuffer1
                                         $krep7_r7OJQ];

GHC.IO.Buffer.$tc'Buffer1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r7OJM $krep8_r7OJR];

GHC.IO.Buffer.$tc'Buffer3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Buffer"#;

GHC.IO.Buffer.$tc'Buffer2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$tc'Buffer3];

GHC.IO.Buffer.$tc'Buffer :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6953290879310668230##
                                    8839152842293094522##
                                    GHC.IO.Buffer.$trModule
                                    GHC.IO.Buffer.$tc'Buffer2
                                    1#
                                    GHC.IO.Buffer.$tc'Buffer1];

GHC.IO.Buffer.writeWord8Buf1
  :: GHC.IO.Buffer.RawBuffer GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [arr_s7OMD ix_s7OME w_s7OMF void_0E]
        case arr_s7OMD of {
          GHC.ForeignPtr.ForeignPtr fo_s7OMI [Occ=Once]
                                    ds1_s7OMJ [Occ=Once] ->
              case ix_s7OME of {
                GHC.Types.I# d_s7OML [Occ=Once] ->
                    case w_s7OMF of {
                      GHC.Word.W8# x_s7OMN [Occ=Once] ->
                          case plusAddr# [fo_s7OMI d_s7OML] of sat_s7OMO {
                            __DEFAULT ->
                                case
                                    writeWord8OffAddr# [sat_s7OMO 0# x_s7OMN GHC.Prim.void#]
                                of
                                s2_s7OMP
                                { (##) ->
                                      case touch# [ds1_s7OMJ GHC.Prim.void#] of s'_s7OMQ {
                                        (##) -> Unit# [GHC.Tuple.()];
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.writeWord8Buf
  :: GHC.IO.Buffer.RawBuffer GHC.Word.Word8
     -> GHC.Types.Int -> GHC.Word.Word8 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.Buffer.writeWord8Buf1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Buffer.readWord8Buf1
  :: GHC.IO.Buffer.RawBuffer GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Word.Word8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [arr_s7OMR ix_s7OMS void_0E]
        case arr_s7OMR of {
          GHC.ForeignPtr.ForeignPtr fo_s7OMV [Occ=Once]
                                    ds1_s7OMW [Occ=Once] ->
              case ix_s7OMS of {
                GHC.Types.I# d_s7OMY [Occ=Once] ->
                    case plusAddr# [fo_s7OMV d_s7OMY] of sat_s7OMZ {
                      __DEFAULT ->
                          case readWord8OffAddr# [sat_s7OMZ 0# GHC.Prim.void#] of {
                            Unit# ipv1_s7ON2 [Occ=Once] ->
                                case touch# [ds1_s7OMW GHC.Prim.void#] of s'_s7ON3 {
                                  (##) ->
                                      let {
                                        sat_s7ON4 [Occ=Once] :: GHC.Word.Word8
                                        [LclId] =
                                            CCCS GHC.Word.W8#! [ipv1_s7ON2];
                                      } in  Unit# [sat_s7ON4];
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.readWord8Buf
  :: GHC.IO.Buffer.RawBuffer GHC.Word.Word8
     -> GHC.Types.Int -> GHC.Types.IO GHC.Word.Word8
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.IO.Buffer.readWord8Buf1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Buffer.bufferAdd
  :: forall e.
     GHC.Types.Int -> GHC.IO.Buffer.Buffer e -> GHC.IO.Buffer.Buffer e
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(SLLSSS),1*U(U,U,U,U,U,U)>m,
 Unf=OtherCon []] =
    [] \r [i_s7ON5 buf_s7ON6]
        case buf_s7ON6 of {
          GHC.IO.Buffer.Buffer dt_s7ON8 [Occ=Once]
                               dt1_s7ON9 [Occ=Once]
                               ds_s7ONa [Occ=Once]
                               dt2_s7ONb [Occ=Once]
                               dt3_s7ONc [Occ=Once]
                               dt4_s7ONd [Occ=Once] ->
              case i_s7ON5 of {
                GHC.Types.I# y_s7ONf [Occ=Once] ->
                    case +# [dt4_s7ONd y_s7ONf] of sat_s7ONg {
                      __DEFAULT ->
                          GHC.IO.Buffer.Buffer [dt_s7ON8
                                                dt1_s7ON9
                                                ds_s7ONa
                                                dt2_s7ONb
                                                dt3_s7ONc
                                                sat_s7ONg];
                    };
              };
        };

GHC.IO.Buffer.bufferRemove
  :: forall e.
     GHC.Types.Int -> GHC.IO.Buffer.Buffer e -> GHC.IO.Buffer.Buffer e
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(SLLSSS),1*U(U,U,U,U,U,U)>m,
 Unf=OtherCon []] =
    [] \r [i_s7ONh buf_s7ONi]
        case buf_s7ONi of {
          GHC.IO.Buffer.Buffer dt_s7ONk [Occ=Once*]
                               dt1_s7ONl [Occ=Once*]
                               ds_s7ONm [Occ=Once*]
                               dt2_s7ONn [Occ=Once*]
                               dt3_s7ONo [Occ=Once]
                               dt4_s7ONp ->
              case i_s7ONh of {
                GHC.Types.I# y_s7ONr [Occ=Once] ->
                    case +# [dt3_s7ONo y_s7ONr] of x_s7ONs [Dmd=<S,U>] {
                      __DEFAULT ->
                          case ==# [x_s7ONs dt4_s7ONp] of {
                            __DEFAULT ->
                                GHC.IO.Buffer.Buffer [dt_s7ONk
                                                      dt1_s7ONl
                                                      ds_s7ONm
                                                      dt2_s7ONn
                                                      x_s7ONs
                                                      dt4_s7ONp];
                            1# ->
                                GHC.IO.Buffer.Buffer [dt_s7ONk dt1_s7ONl ds_s7ONm dt2_s7ONn 0# 0#];
                          };
                    };
              };
        };

GHC.IO.Buffer.bufferAvailable
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLS),1*U(A,A,A,U,A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7ONu]
        case ds_s7ONu of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt2_s7ONz [Occ=Once]
                               _ [Occ=Dead]
                               dt4_s7ONB [Occ=Once] ->
              case -# [dt2_s7ONz dt4_s7ONB] of sat_s7ONC {
                __DEFAULT -> GHC.Types.I# [sat_s7ONC];
              };
        };

GHC.IO.Buffer.bufferElems
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSS),1*U(A,A,A,A,U,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7OND]
        case ds_s7OND of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt3_s7ONJ [Occ=Once]
                               dt4_s7ONK [Occ=Once] ->
              case -# [dt4_s7ONK dt3_s7ONJ] of sat_s7ONL {
                __DEFAULT -> GHC.Types.I# [sat_s7ONL];
              };
        };

lvl_r7OJS :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "buffer invariant violation: "#;

GHC.IO.Buffer.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Types.IO ()
[GblId, Arity=3, Str=<B,U><B,U><B,U>x, Unf=OtherCon []] =
    [] \r [ww_s7ONM ww1_s7ONN ww2_s7ONO]
        let {
          sat_s7ONP [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [ww_s7ONM ww1_s7ONN ww2_s7ONO] \u []
                  GHC.IO.Buffer.$wsummaryBuffer ww_s7ONM ww1_s7ONN ww2_s7ONO;
        } in 
          case
              GHC.CString.unpackAppendCString# lvl_r7OJS sat_s7ONP
          of
          sat_s7ONQ
          { __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_s7ONQ;
          };

GHC.IO.Buffer.checkBuffer2
  :: forall a. GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Types.IO ()
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [ww_s7ONR ww1_s7ONS]
        GHC.IO.Buffer.$wlvl ww_s7ONR 0# ww1_s7ONS;

GHC.IO.Buffer.$wcheckBuffer [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=5,
 Str=<S,1*U><S,U><S,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_s7ONT ww1_s7ONU ww2_s7ONV ww3_s7ONW void_0E]
        case ># [ww1_s7ONU 0#] of {
          __DEFAULT -> GHC.IO.Buffer.$wlvl ww1_s7ONU ww2_s7ONV ww3_s7ONW;
          1# ->
              case <=# [ww2_s7ONV ww3_s7ONW] of {
                __DEFAULT -> GHC.IO.Buffer.$wlvl ww1_s7ONU ww2_s7ONV ww3_s7ONW;
                1# ->
                    case <=# [ww3_s7ONW ww1_s7ONU] of {
                      __DEFAULT -> GHC.IO.Buffer.$wlvl ww1_s7ONU ww2_s7ONV ww3_s7ONW;
                      1# ->
                          case /=# [ww2_s7ONV ww3_s7ONW] of {
                            __DEFAULT ->
                                case ww_s7ONT of {
                                  GHC.IO.Buffer.ReadBuffer ->
                                      case ww2_s7ONV of wild1_s7OO6 {
                                        __DEFAULT ->
                                            GHC.IO.Buffer.$wlvl ww1_s7ONU wild1_s7OO6 ww3_s7ONW;
                                        0# ->
                                            case ww3_s7ONW of wild2_s7OO8 {
                                              __DEFAULT ->
                                                  GHC.IO.Buffer.checkBuffer2 ww1_s7ONU wild2_s7OO8;
                                              0# -> Unit# [GHC.Tuple.()];
                                            };
                                      };
                                  GHC.IO.Buffer.WriteBuffer ->
                                      case <# [ww3_s7ONW ww1_s7ONU] of {
                                        __DEFAULT ->
                                            GHC.IO.Buffer.$wlvl ww1_s7ONU ww2_s7ONV ww3_s7ONW;
                                        1# -> Unit# [GHC.Tuple.()];
                                      };
                                };
                            1# ->
                                case ww_s7ONT of {
                                  GHC.IO.Buffer.ReadBuffer -> Unit# [GHC.Tuple.()];
                                  GHC.IO.Buffer.WriteBuffer ->
                                      case <# [ww3_s7ONW ww1_s7ONU] of {
                                        __DEFAULT ->
                                            GHC.IO.Buffer.$wlvl ww1_s7ONU ww2_s7ONV ww3_s7ONW;
                                        1# -> Unit# [GHC.Tuple.()];
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.checkBuffer1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Buffer.Buffer a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(LLSSSS),1*U(A,A,1*U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s7OOf void_0E]
        case w_s7OOf of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               ww3_s7OOk [Occ=Once]
                               ww4_s7OOl [Occ=Once]
                               ww5_s7OOm [Occ=Once]
                               ww6_s7OOn [Occ=Once] ->
              GHC.IO.Buffer.$wcheckBuffer
                  ww3_s7OOk ww4_s7OOl ww5_s7OOm ww6_s7OOn GHC.Prim.void#;
        };

GHC.IO.Buffer.checkBuffer
  :: forall a. GHC.IO.Buffer.Buffer a -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<S(LLSSSS),1*U(A,A,1*U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.IO.Buffer.checkBuffer1 eta_B2 GHC.Prim.void#;

GHC.IO.Buffer.newBuffer1
  :: forall e.
     GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.Buffer.Buffer e #)
[GblId,
 Arity=4,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [bytes_s7OOo sz_s7OOp state_s7OOq void_0E]
        case bytes_s7OOo of {
          GHC.Types.I# x_s7OOt ->
              case <# [x_s7OOt 0#] of {
                __DEFAULT ->
                    case newMutVar# [GHC.ForeignPtr.NoFinalizers GHC.Prim.void#] of {
                      Unit# ipv1_s7OOx [Occ=Once] ->
                          case newPinnedByteArray# [x_s7OOt GHC.Prim.void#] of {
                            Unit# ipv3_s7OOA ->
                                let {
                                  sat_s7OOF [Occ=Once] :: GHC.IO.Buffer.Buffer e_a7NIR
                                  [LclId] =
                                      [sz_s7OOp state_s7OOq ipv1_s7OOx ipv3_s7OOA] \u []
                                          case sz_s7OOp of {
                                            GHC.Types.I# dt1_s7OOC [Occ=Once] ->
                                                let {
                                                  sat_s7OOE [Occ=Once]
                                                    :: GHC.ForeignPtr.ForeignPtrContents
                                                  [LclId] =
                                                      CCCS GHC.ForeignPtr.MallocPtr! [ipv3_s7OOA
                                                                                      ipv1_s7OOx];
                                                } in 
                                                  case
                                                      byteArrayContents# [ipv3_s7OOA]
                                                  of
                                                  sat_s7OOD
                                                  { __DEFAULT ->
                                                        GHC.IO.Buffer.Buffer [sat_s7OOD
                                                                              sat_s7OOE
                                                                              state_s7OOq
                                                                              dt1_s7OOC
                                                                              0#
                                                                              0#];
                                                  };
                                          };
                                } in  Unit# [sat_s7OOF];
                          };
                    };
                1# -> GHC.ForeignPtr.mallocForeignPtrBytes2;
              };
        };

GHC.IO.Buffer.newBuffer
  :: forall e.
     GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Types.IO (GHC.IO.Buffer.Buffer e)
[GblId,
 Arity=4,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.Buffer.newBuffer1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Buffer.newByteBuffer1
  :: GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Word.Word8 #)
[GblId, Arity=3, Str=<L,U(U)><L,U>, Unf=OtherCon []] =
    [] \r [c_s7OOH st_s7OOI void_0E]
        GHC.IO.Buffer.newBuffer1 c_s7OOH c_s7OOH st_s7OOI GHC.Prim.void#;

GHC.IO.Buffer.newByteBuffer
  :: GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Types.IO (GHC.IO.Buffer.Buffer GHC.Word.Word8)
[GblId, Arity=3, Str=<L,U(U)><L,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.IO.Buffer.newByteBuffer1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Buffer.newCharBuffer1
  :: GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Types.Char #)
[GblId, Arity=3, Str=<S(S),1*U(U)><L,U><S,U>, Unf=OtherCon []] =
    [] \r [c_s7OOJ st_s7OOK void_0E]
        case c_s7OOJ of {
          GHC.Types.I# x_s7OON ->
              case *# [x_s7OON 4#] of x1_s7OOO [Dmd=<S,U>] {
                __DEFAULT ->
                    case <# [x1_s7OOO 0#] of {
                      __DEFAULT ->
                          case newMutVar# [GHC.ForeignPtr.NoFinalizers GHC.Prim.void#] of {
                            Unit# ipv1_s7OOS [Occ=Once] ->
                                case newPinnedByteArray# [x1_s7OOO GHC.Prim.void#] of {
                                  Unit# ipv3_s7OOV ->
                                      let {
                                        sat_s7OOX [Occ=Once] :: GHC.ForeignPtr.ForeignPtrContents
                                        [LclId] =
                                            CCCS GHC.ForeignPtr.MallocPtr! [ipv3_s7OOV ipv1_s7OOS];
                                      } in 
                                        case byteArrayContents# [ipv3_s7OOV] of sat_s7OOW {
                                          __DEFAULT ->
                                              let {
                                                sat_s7OOY [Occ=Once]
                                                  :: GHC.IO.Buffer.Buffer GHC.Types.Char
                                                [LclId] =
                                                    CCCS GHC.IO.Buffer.Buffer! [sat_s7OOW
                                                                                sat_s7OOX
                                                                                st_s7OOK
                                                                                x_s7OON
                                                                                0#
                                                                                0#];
                                              } in  Unit# [sat_s7OOY];
                                        };
                                };
                          };
                      1# -> GHC.ForeignPtr.mallocForeignPtrBytes2;
                    };
              };
        };

GHC.IO.Buffer.newCharBuffer
  :: GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Types.IO GHC.IO.Buffer.CharBuffer
[GblId, Arity=3, Str=<S(S),1*U(U)><L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.IO.Buffer.newCharBuffer1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Buffer.slideContents1
  :: GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Word.Word8 #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [buf_s7OP0 void_0E]
        case buf_s7OP0 of {
          GHC.IO.Buffer.Buffer dt_s7OP3
                               dt1_s7OP4
                               ds_s7OP5 [Occ=Once]
                               dt2_s7OP6 [Occ=Once]
                               dt3_s7OP7
                               dt4_s7OP8 [Occ=Once] ->
              case -# [dt4_s7OP8 dt3_s7OP7] of elems_s7OP9 [Dmd=<S,U>] {
                __DEFAULT ->
                    case int2Word# [elems_s7OP9] of sat_s7OPc {
                      __DEFAULT ->
                          case plusAddr# [dt_s7OP3 dt3_s7OP7] of sat_s7OPb {
                            __DEFAULT ->
                                case
                                    __pkg_ccall base-4.11.0.0 [dt_s7OP3
                                                               sat_s7OPb
                                                               sat_s7OPc
                                                               GHC.Prim.void#]
                                of
                                { Unit# _ [Occ=Dead] ->
                                      case touch# [dt1_s7OP4 GHC.Prim.void#] of s'_s7OPg {
                                        (##) ->
                                            let {
                                              sat_s7OPh [Occ=Once]
                                                :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                              [LclId] =
                                                  CCCS GHC.IO.Buffer.Buffer! [dt_s7OP3
                                                                              dt1_s7OP4
                                                                              ds_s7OP5
                                                                              dt2_s7OP6
                                                                              0#
                                                                              elems_s7OP9];
                                            } in  Unit# [sat_s7OPh];
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.slideContents
  :: GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Types.IO (GHC.IO.Buffer.Buffer GHC.Word.Word8)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.IO.Buffer.slideContents1 eta_B2 GHC.Prim.void#;

writeCharBufPtr1_r7OJT
  :: GHC.Ptr.Ptr GHC.IO.Buffer.CharBufElem
     -> GHC.Types.Int
     -> GHC.Types.Char
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [p_s7OPi ix_s7OPj ch_s7OPk void_0E]
        case p_s7OPi of {
          GHC.Ptr.Ptr a_s7OPn [Occ=Once] ->
              case ix_s7OPj of {
                GHC.Types.I# i_s7OPp ->
                    case ch_s7OPk of {
                      GHC.Types.C# x_s7OPr [Occ=Once] ->
                          case
                              writeWideCharOffAddr# [a_s7OPn i_s7OPp x_s7OPr GHC.Prim.void#]
                          of
                          s2_s7OPs
                          { (##) ->
                                case +# [i_s7OPp 1#] of sat_s7OPt {
                                  __DEFAULT ->
                                      let {
                                        sat_s7OPu [Occ=Once] :: GHC.Types.Int
                                        [LclId] =
                                            CCCS GHC.Types.I#! [sat_s7OPt];
                                      } in  Unit# [sat_s7OPu];
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.writeCharBufPtr [InlPrag=INLINE (sat-args=3)]
  :: GHC.Ptr.Ptr GHC.IO.Buffer.CharBufElem
     -> GHC.Types.Int -> GHC.Types.Char -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        writeCharBufPtr1_r7OJT eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

writeCharBuf1_r7OJU
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int
     -> GHC.Types.Char
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [arr_s7OPv ix_s7OPw c_s7OPx void_0E]
        case arr_s7OPv of {
          GHC.ForeignPtr.ForeignPtr fo_s7OPA [Occ=Once]
                                    ds1_s7OPB [Occ=Once] ->
              case ix_s7OPw of {
                GHC.Types.I# i_s7OPD ->
                    case c_s7OPx of {
                      GHC.Types.C# x_s7OPF [Occ=Once] ->
                          case
                              writeWideCharOffAddr# [fo_s7OPA i_s7OPD x_s7OPF GHC.Prim.void#]
                          of
                          s2_s7OPG
                          { (##) ->
                                case touch# [ds1_s7OPB GHC.Prim.void#] of s'_s7OPH {
                                  (##) ->
                                      case +# [i_s7OPD 1#] of sat_s7OPI {
                                        __DEFAULT ->
                                            let {
                                              sat_s7OPJ [Occ=Once] :: GHC.Types.Int
                                              [LclId] =
                                                  CCCS GHC.Types.I#! [sat_s7OPI];
                                            } in  Unit# [sat_s7OPJ];
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.writeCharBuf [InlPrag=INLINE (sat-args=3)]
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int -> GHC.Types.Char -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        writeCharBuf1_r7OJU eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

readCharBufPtr1_r7OJV
  :: GHC.Ptr.Ptr GHC.IO.Buffer.CharBufElem
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Char, GHC.Types.Int) #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [p_s7OPK ix_s7OPL void_0E]
        case p_s7OPK of {
          GHC.Ptr.Ptr a_s7OPO [Occ=Once] ->
              case ix_s7OPL of {
                GHC.Types.I# i_s7OPQ ->
                    case readWideCharOffAddr# [a_s7OPO i_s7OPQ GHC.Prim.void#] of {
                      Unit# ipv1_s7OPT [Occ=Once] ->
                          case +# [i_s7OPQ 1#] of sat_s7OPV {
                            __DEFAULT ->
                                let {
                                  sat_s7OPW [Occ=Once] :: GHC.Types.Int
                                  [LclId] =
                                      CCCS GHC.Types.I#! [sat_s7OPV]; } in
                                let {
                                  sat_s7OPU [Occ=Once] :: GHC.Types.Char
                                  [LclId] =
                                      CCCS GHC.Types.C#! [ipv1_s7OPT]; } in
                                let {
                                  sat_s7OPX [Occ=Once] :: (GHC.Types.Char, GHC.Types.Int)
                                  [LclId] =
                                      CCCS (,)! [sat_s7OPU sat_s7OPW];
                                } in  Unit# [sat_s7OPX];
                          };
                    };
              };
        };

GHC.IO.Buffer.readCharBufPtr [InlPrag=INLINE (sat-args=2)]
  :: GHC.Ptr.Ptr GHC.IO.Buffer.CharBufElem
     -> GHC.Types.Int -> GHC.Types.IO (GHC.Types.Char, GHC.Types.Int)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        readCharBufPtr1_r7OJV eta_B3 eta_B2 GHC.Prim.void#;

readCharBuf1_r7OJW
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Char, GHC.Types.Int) #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [arr_s7OPY ix_s7OPZ void_0E]
        case arr_s7OPY of {
          GHC.ForeignPtr.ForeignPtr fo_s7OQ2 [Occ=Once]
                                    ds1_s7OQ3 [Occ=Once] ->
              case ix_s7OPZ of {
                GHC.Types.I# i_s7OQ5 ->
                    case readWideCharOffAddr# [fo_s7OQ2 i_s7OQ5 GHC.Prim.void#] of {
                      Unit# ipv1_s7OQ8 [Occ=Once] ->
                          case touch# [ds1_s7OQ3 GHC.Prim.void#] of s'_s7OQ9 {
                            (##) ->
                                case +# [i_s7OQ5 1#] of sat_s7OQb {
                                  __DEFAULT ->
                                      let {
                                        sat_s7OQc [Occ=Once] :: GHC.Types.Int
                                        [LclId] =
                                            CCCS GHC.Types.I#! [sat_s7OQb]; } in
                                      let {
                                        sat_s7OQa [Occ=Once] :: GHC.Types.Char
                                        [LclId] =
                                            CCCS GHC.Types.C#! [ipv1_s7OQ8]; } in
                                      let {
                                        sat_s7OQd [Occ=Once] :: (GHC.Types.Char, GHC.Types.Int)
                                        [LclId] =
                                            CCCS (,)! [sat_s7OQa sat_s7OQc];
                                      } in  Unit# [sat_s7OQd];
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.readCharBuf [InlPrag=INLINE (sat-args=2)]
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int -> GHC.Types.IO (GHC.Types.Char, GHC.Types.Int)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        readCharBuf1_r7OJW eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Buffer.peekCharBuf1
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [arr_s7OQe ix_s7OQf void_0E]
        case arr_s7OQe of {
          GHC.ForeignPtr.ForeignPtr fo_s7OQi [Occ=Once]
                                    ds1_s7OQj [Occ=Once] ->
              case ix_s7OQf of {
                GHC.Types.I# i_s7OQl [Occ=Once] ->
                    case readWideCharOffAddr# [fo_s7OQi i_s7OQl GHC.Prim.void#] of {
                      Unit# ipv1_s7OQo [Occ=Once] ->
                          case touch# [ds1_s7OQj GHC.Prim.void#] of s'_s7OQp {
                            (##) ->
                                let {
                                  sat_s7OQq [Occ=Once] :: GHC.Types.Char
                                  [LclId] =
                                      CCCS GHC.Types.C#! [ipv1_s7OQo];
                                } in  Unit# [sat_s7OQq];
                          };
                    };
              };
        };

GHC.IO.Buffer.peekCharBuf
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Char
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.IO.Buffer.peekCharBuf1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Buffer.ReadBuffer :: GHC.IO.Buffer.BufferState
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Buffer.ReadBuffer! [];

GHC.IO.Buffer.WriteBuffer :: GHC.IO.Buffer.BufferState
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Buffer.WriteBuffer! [];

GHC.IO.Buffer.Buffer
  :: forall e.
     GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.IO.Buffer.Buffer e
[GblId[DataCon],
 Arity=6,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Buffer.Buffer [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1];


==================== Pre unarise: ====================
2018-03-16 16:02:56.997660579 UTC

GHC.IO.Buffer.$WBuffer [InlPrag=INLINE[2]]
  :: forall e.
     GHC.IO.Buffer.RawBuffer e
     -> GHC.IO.Buffer.BufferState
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.IO.Buffer.Buffer e
[GblId[DataConWrapper],
 Arity=5,
 Caf=NoCafRefs,
 Str=<S,U><L,U><S,U><S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_s7PXJ dt_s7PXK dt_s7PXL dt_s7PXM dt_s7PXN]
        case dt_s7PXJ of {
          GHC.ForeignPtr.ForeignPtr dt_s7PXP [Occ=Once]
                                    dt_s7PXQ [Occ=Once] ->
              case dt_s7PXL of {
                GHC.Types.I# dt_s7PXS [Occ=Once] ->
                    case dt_s7PXM of {
                      GHC.Types.I# dt_s7PXU [Occ=Once] ->
                          case dt_s7PXN of {
                            GHC.Types.I# dt_s7PXW [Occ=Once] ->
                                GHC.IO.Buffer.Buffer [dt_s7PXP
                                                      dt_s7PXQ
                                                      dt_s7PXK
                                                      dt_s7PXS
                                                      dt_s7PXU
                                                      dt_s7PXW];
                          };
                    };
              };
        };

GHC.IO.Buffer.$fEqBufferState_$c==
  :: GHC.IO.Buffer.BufferState
     -> GHC.IO.Buffer.BufferState -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_s7PXX ds1_s7PXY]
        case ds_s7PXX of {
          GHC.IO.Buffer.ReadBuffer ->
              case ds1_s7PXY of {
                GHC.IO.Buffer.ReadBuffer -> GHC.Types.True [];
                GHC.IO.Buffer.WriteBuffer -> GHC.Types.False [];
              };
          GHC.IO.Buffer.WriteBuffer ->
              case ds1_s7PXY of {
                GHC.IO.Buffer.ReadBuffer -> GHC.Types.False [];
                GHC.IO.Buffer.WriteBuffer -> GHC.Types.True [];
              };
        };

GHC.IO.Buffer.$fEqBufferState_$c/= [InlPrag=INLINE (sat-args=2)]
  :: GHC.IO.Buffer.BufferState
     -> GHC.IO.Buffer.BufferState -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [eta_s7PY2 eta1_s7PY3]
        case eta_s7PY2 of {
          GHC.IO.Buffer.ReadBuffer ->
              case eta1_s7PY3 of {
                GHC.IO.Buffer.ReadBuffer -> GHC.Types.False [];
                GHC.IO.Buffer.WriteBuffer -> GHC.Types.True [];
              };
          GHC.IO.Buffer.WriteBuffer ->
              case eta1_s7PY3 of {
                GHC.IO.Buffer.ReadBuffer -> GHC.Types.True [];
                GHC.IO.Buffer.WriteBuffer -> GHC.Types.False [];
              };
        };

GHC.IO.Buffer.$fEqBufferState [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.IO.Buffer.BufferState
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.IO.Buffer.$fEqBufferState_$c==
                                     GHC.IO.Buffer.$fEqBufferState_$c/=];

GHC.IO.Buffer.bufR
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLS),1*U(A,A,A,A,A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7PY7]
        case ds_s7PY7 of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt4_s7PYe [Occ=Once] ->
              GHC.Types.I# [dt4_s7PYe];
        };

GHC.IO.Buffer.bufL
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSL),1*U(A,A,A,A,U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7PYf]
        case ds_s7PYf of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt3_s7PYl [Occ=Once]
                               _ [Occ=Dead] ->
              GHC.Types.I# [dt3_s7PYl];
        };

GHC.IO.Buffer.bufSize
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLL),1*U(A,A,A,U,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7PYn]
        case ds_s7PYn of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt2_s7PYs [Occ=Once]
                               _ [Occ=Dead]
                               _ [Occ=Dead] ->
              GHC.Types.I# [dt2_s7PYs];
        };

GHC.IO.Buffer.bufState
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.IO.Buffer.BufferState
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [ds_s7PYv]
        case ds_s7PYv of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               ds1_s7PYz [Occ=Once]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead] ->
              ds1_s7PYz;
        };

GHC.IO.Buffer.bufRaw
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.IO.Buffer.RawBuffer e
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLLLLL),1*U(U,U,A,A,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7PYD]
        case ds_s7PYD of {
          GHC.IO.Buffer.Buffer dt_s7PYF [Occ=Once]
                               dt1_s7PYG [Occ=Once]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead] ->
              GHC.ForeignPtr.ForeignPtr [dt_s7PYF dt1_s7PYG];
        };

GHC.IO.Buffer.charSize :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [4#];

GHC.IO.Buffer.withBuffer1
  :: forall e a.
     GHC.IO.Buffer.Buffer e
     -> (GHC.Ptr.Ptr e -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U(U,U,A,A,A,A)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s7PYL f_s7PYM eta_s7PYN]
        case ds_s7PYL of {
          GHC.IO.Buffer.Buffer dt_s7PYP [Occ=Once]
                               dt1_s7PYQ [Occ=Once]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead] ->
              let {
                sat_s7PYV [Occ=Once] :: GHC.Ptr.Ptr e_a7NKM
                [LclId] =
                    CCCS GHC.Ptr.Ptr! [dt_s7PYP];
              } in 
                case f_s7PYM sat_s7PYV eta_s7PYN of {
                  (#,#) ipv_s7PYX [Occ=Once] ipv1_s7PYY [Occ=Once] ->
                      case touch# [dt1_s7PYQ ipv_s7PYX] of s'_s7PYZ {
                        __DEFAULT -> (#,#) [s'_s7PYZ ipv1_s7PYY];
                      };
                };
        };

GHC.IO.Buffer.withBuffer
  :: forall e a.
     GHC.IO.Buffer.Buffer e
     -> (GHC.Ptr.Ptr e -> GHC.Types.IO a) -> GHC.Types.IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U(U,U,A,A,A,A)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.IO.Buffer.withBuffer1 eta_B3 eta_B2 eta_B1;

GHC.IO.Buffer.withRawBuffer1
  :: forall e a.
     GHC.IO.Buffer.RawBuffer e
     -> (GHC.Ptr.Ptr e -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U(U,U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [raw_s7PZ0 f_s7PZ1 s_s7PZ2]
        let {
          sat_s7PZ3 [Occ=Once] :: GHC.Ptr.Ptr e_a7NJW
          [LclId] =
              [raw_s7PZ0] \u [] GHC.ForeignPtr.unsafeForeignPtrToPtr raw_s7PZ0;
        } in 
          case f_s7PZ1 sat_s7PZ3 s_s7PZ2 of {
            (#,#) ipv_s7PZ5 [Occ=Once] ipv1_s7PZ6 [Occ=Once] ->
                case raw_s7PZ0 of {
                  GHC.ForeignPtr.ForeignPtr _ [Occ=Dead] r_s7PZ9 [Occ=Once] ->
                      case touch# [r_s7PZ9 ipv_s7PZ5] of s'_s7PZa {
                        __DEFAULT -> (#,#) [s'_s7PZa ipv1_s7PZ6];
                      };
                };
          };

GHC.IO.Buffer.withRawBuffer
  :: forall e a.
     GHC.IO.Buffer.RawBuffer e
     -> (GHC.Ptr.Ptr e -> GHC.Types.IO a) -> GHC.Types.IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U(U,U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.IO.Buffer.withRawBuffer1 eta_B3 eta_B2 eta_B1;

GHC.IO.Buffer.isEmptyBuffer
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSS),1*U(A,A,A,A,U,U)>,
 Unf=OtherCon []] =
    [] \r [ds_s7PZb]
        case ds_s7PZb of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt3_s7PZh [Occ=Once]
                               dt4_s7PZi [Occ=Once] ->
              case ==# [dt3_s7PZh dt4_s7PZi] of sat_s7PZj {
                __DEFAULT -> tagToEnum# [sat_s7PZj];
              };
        };

GHC.IO.Buffer.isFullBuffer
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLS),1*U(A,A,A,U,A,U)>,
 Unf=OtherCon []] =
    [] \r [ds_s7PZk]
        case ds_s7PZk of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt2_s7PZp [Occ=Once]
                               _ [Occ=Dead]
                               dt4_s7PZr [Occ=Once] ->
              case ==# [dt2_s7PZp dt4_s7PZr] of sat_s7PZs {
                __DEFAULT -> tagToEnum# [sat_s7PZs];
              };
        };

GHC.IO.Buffer.isFullCharBuffer
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLS),1*U(A,A,A,U,A,U)>,
 Unf=OtherCon []] =
    [] \r [eta_B1] GHC.IO.Buffer.isFullBuffer eta_B1;

GHC.IO.Buffer.isWriteBuffer
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [buf_s7PZt]
        case buf_s7PZt of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               ds_s7PZx [Occ=Once!]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead] ->
              case ds_s7PZx of {
                GHC.IO.Buffer.ReadBuffer -> GHC.Types.False [];
                GHC.IO.Buffer.WriteBuffer -> GHC.Types.True [];
              };
        };

GHC.IO.Buffer.bufferAdjustL
  :: forall e.
     GHC.Types.Int -> GHC.IO.Buffer.Buffer e -> GHC.IO.Buffer.Buffer e
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(SLLSLS),1*U(U,U,U,U,A,U)>m,
 Unf=OtherCon []] =
    [] \r [l_s7PZC buf_s7PZD]
        case buf_s7PZD of {
          GHC.IO.Buffer.Buffer dt_s7PZF [Occ=Once*]
                               dt1_s7PZG [Occ=Once*]
                               ds_s7PZH [Occ=Once*]
                               dt2_s7PZI [Occ=Once*]
                               _ [Occ=Dead]
                               dt4_s7PZK ->
              case l_s7PZC of {
                GHC.Types.I# x_s7PZM ->
                    case ==# [x_s7PZM dt4_s7PZK] of {
                      __DEFAULT ->
                          GHC.IO.Buffer.Buffer [dt_s7PZF
                                                dt1_s7PZG
                                                ds_s7PZH
                                                dt2_s7PZI
                                                x_s7PZM
                                                dt4_s7PZK];
                      1# ->
                          GHC.IO.Buffer.Buffer [dt_s7PZF dt1_s7PZG ds_s7PZH dt2_s7PZI 0# 0#];
                    };
              };
        };

GHC.IO.Buffer.emptyBuffer
  :: forall e.
     GHC.IO.Buffer.RawBuffer e
     -> GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.IO.Buffer.Buffer e
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><L,U>m,
 Unf=OtherCon []] =
    [] \r [raw_s7PZO sz_s7PZP state_s7PZQ]
        case raw_s7PZO of {
          GHC.ForeignPtr.ForeignPtr dt1_s7PZS [Occ=Once]
                                    dt2_s7PZT [Occ=Once] ->
              case sz_s7PZP of {
                GHC.Types.I# dt4_s7PZV [Occ=Once] ->
                    GHC.IO.Buffer.Buffer [dt1_s7PZS
                                          dt2_s7PZT
                                          state_s7PZQ
                                          dt4_s7PZV
                                          0#
                                          0#];
              };
        };

GHC.IO.Buffer.summaryBuffer5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "buf"#;

GHC.IO.Buffer.summaryBuffer4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "("#;

GHC.IO.Buffer.summaryBuffer3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "-"#;

GHC.IO.Buffer.summaryBuffer2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    ")"#;

GHC.IO.Buffer.summaryBuffer1 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Buffer.summaryBuffer2;

GHC.IO.Buffer.$wsummaryBuffer [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Base.String
[GblId, Arity=3, Str=<L,U><L,U><L,U>, Unf=OtherCon []] =
    [] \r [ww_s7PZW ww1_s7PZX ww2_s7PZY]
        let {
          sat_s7Q0f [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [ww_s7PZW ww1_s7PZX ww2_s7PZY] \u []
                  case GHC.Show.$wshowSignedInt 0# ww_s7PZW GHC.Types.[] of {
                    (#,#) ww5_s7Q00 [Occ=Once] ww6_s7Q01 [Occ=Once] ->
                        let {
                          sat_s7Q0e [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                          [LclId] =
                              [ww1_s7PZX ww2_s7PZY] \s []
                                  let {
                                    sat_s7Q0d [Occ=Once] :: [GHC.Types.Char]
                                    [LclId] =
                                        [ww1_s7PZX ww2_s7PZY] \u []
                                            case
                                                GHC.Show.$wshowSignedInt 0# ww1_s7PZX GHC.Types.[]
                                            of
                                            { (#,#) ww7_s7Q04 [Occ=Once] ww8_s7Q05 [Occ=Once] ->
                                                  let {
                                                    sat_s7Q0c [Occ=Once, Dmd=<L,1*U>]
                                                      :: [GHC.Types.Char]
                                                    [LclId] =
                                                        [ww2_s7PZY] \s []
                                                            let {
                                                              sat_s7Q0b [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId] =
                                                                  [ww2_s7PZY] \u []
                                                                      case
                                                                          GHC.Show.$wshowSignedInt
                                                                              0#
                                                                              ww2_s7PZY
                                                                              GHC.Types.[]
                                                                      of
                                                                      { (#,#) ww10_s7Q08 [Occ=Once]
                                                                              ww11_s7Q09 [Occ=Once] ->
                                                                            let {
                                                                              sat_s7Q0a [Occ=Once]
                                                                                :: [GHC.Types.Char]
                                                                              [LclId] =
                                                                                  CCCS :! [ww10_s7Q08
                                                                                           ww11_s7Q09];
                                                                            } in 
                                                                              GHC.Base.++
                                                                                  sat_s7Q0a
                                                                                  GHC.IO.Buffer.summaryBuffer1;
                                                                      };
                                                            } in 
                                                              GHC.CString.unpackAppendCString#
                                                                  GHC.IO.Buffer.summaryBuffer3
                                                                  sat_s7Q0b; } in
                                                  let {
                                                    sat_s7Q06 [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId] =
                                                        CCCS :! [ww7_s7Q04 ww8_s7Q05];
                                                  } in  GHC.Base.++ sat_s7Q06 sat_s7Q0c;
                                            };
                                  } in 
                                    GHC.CString.unpackAppendCString#
                                        GHC.IO.Buffer.summaryBuffer4 sat_s7Q0d; } in
                        let {
                          sat_s7Q02 [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              CCCS :! [ww5_s7Q00 ww6_s7Q01];
                        } in  GHC.Base.++ sat_s7Q02 sat_s7Q0e;
                  };
        } in 
          GHC.CString.unpackAppendCString#
              GHC.IO.Buffer.summaryBuffer5 sat_s7Q0f;

GHC.IO.Buffer.summaryBuffer [InlPrag=NOUSERINLINE[0]]
  :: forall a. GHC.IO.Buffer.Buffer a -> GHC.Base.String
[GblId,
 Arity=1,
 Str=<S(LLLSSS),1*U(A,A,A,U,U,U)>,
 Unf=OtherCon []] =
    [] \r [w_s7Q0g]
        case w_s7Q0g of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               ww4_s7Q0l [Occ=Once]
                               ww5_s7Q0m [Occ=Once]
                               ww6_s7Q0n [Occ=Once] ->
              GHC.IO.Buffer.$wsummaryBuffer ww4_s7Q0l ww5_s7Q0m ww6_s7Q0n;
        };

GHC.IO.Buffer.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.IO.Buffer.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$trModule4];

GHC.IO.Buffer.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.Buffer"#;

GHC.IO.Buffer.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$trModule2];

GHC.IO.Buffer.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.IO.Buffer.$trModule3
                                     GHC.IO.Buffer.$trModule1];

$krep_r7OJJ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcInt
                                              GHC.Types.[]];

$krep1_r7OJK :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

$krep2_r7OJL :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep1_r7OJK GHC.Types.[]];

$krep3_r7OJM :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.ForeignPtr.$tcForeignPtr
                                              $krep2_r7OJL];

GHC.IO.Buffer.$tcBufferState2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "BufferState"#;

GHC.IO.Buffer.$tcBufferState1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$tcBufferState2];

GHC.IO.Buffer.$tcBufferState :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15354245406219544442##
                                    3075510984364124805##
                                    GHC.IO.Buffer.$trModule
                                    GHC.IO.Buffer.$tcBufferState1
                                    0#
                                    GHC.Types.krep$*];

GHC.IO.Buffer.$tc'ReadBuffer1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.IO.Buffer.$tcBufferState
                                              GHC.Types.[]];

GHC.IO.Buffer.$tc'ReadBuffer3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ReadBuffer"#;

GHC.IO.Buffer.$tc'ReadBuffer2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$tc'ReadBuffer3];

GHC.IO.Buffer.$tc'ReadBuffer :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [18127629064171759490##
                                    12249378994783130540##
                                    GHC.IO.Buffer.$trModule
                                    GHC.IO.Buffer.$tc'ReadBuffer2
                                    0#
                                    GHC.IO.Buffer.$tc'ReadBuffer1];

GHC.IO.Buffer.$tc'WriteBuffer2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'WriteBuffer"#;

GHC.IO.Buffer.$tc'WriteBuffer1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$tc'WriteBuffer2];

GHC.IO.Buffer.$tc'WriteBuffer :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17535537923682101798##
                                    5353421715631386637##
                                    GHC.IO.Buffer.$trModule
                                    GHC.IO.Buffer.$tc'WriteBuffer1
                                    0#
                                    GHC.IO.Buffer.$tc'ReadBuffer1];

GHC.IO.Buffer.$tcBuffer2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Buffer"#;

GHC.IO.Buffer.$tcBuffer1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$tcBuffer2];

GHC.IO.Buffer.$tcBuffer :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [18372445388029251215##
                                    8106905342043791875##
                                    GHC.IO.Buffer.$trModule
                                    GHC.IO.Buffer.$tcBuffer1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep4_r7OJN :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.IO.Buffer.$tcBuffer
                                              $krep2_r7OJL];

$krep5_r7OJO :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r7OJJ $krep4_r7OJN];

$krep6_r7OJP :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r7OJJ $krep5_r7OJO];

$krep7_r7OJQ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r7OJJ $krep6_r7OJP];

$krep8_r7OJR :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [GHC.IO.Buffer.$tc'ReadBuffer1
                                         $krep7_r7OJQ];

GHC.IO.Buffer.$tc'Buffer1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r7OJM $krep8_r7OJR];

GHC.IO.Buffer.$tc'Buffer3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Buffer"#;

GHC.IO.Buffer.$tc'Buffer2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$tc'Buffer3];

GHC.IO.Buffer.$tc'Buffer :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6953290879310668230##
                                    8839152842293094522##
                                    GHC.IO.Buffer.$trModule
                                    GHC.IO.Buffer.$tc'Buffer2
                                    1#
                                    GHC.IO.Buffer.$tc'Buffer1];

GHC.IO.Buffer.writeWord8Buf1
  :: GHC.IO.Buffer.RawBuffer GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [arr_s7Q0o ix_s7Q0p w_s7Q0q s_s7Q0r]
        case arr_s7Q0o of {
          GHC.ForeignPtr.ForeignPtr fo_s7Q0t [Occ=Once]
                                    ds1_s7Q0u [Occ=Once] ->
              case ix_s7Q0p of {
                GHC.Types.I# d_s7Q0w [Occ=Once] ->
                    case w_s7Q0q of {
                      GHC.Word.W8# x_s7Q0y [Occ=Once] ->
                          case plusAddr# [fo_s7Q0t d_s7Q0w] of sat_s7Q0z {
                            __DEFAULT ->
                                case
                                    writeWord8OffAddr# [sat_s7Q0z 0# x_s7Q0y s_s7Q0r]
                                of
                                s2_s7Q0A
                                { __DEFAULT ->
                                      case touch# [ds1_s7Q0u s2_s7Q0A] of s'_s7Q0B {
                                        __DEFAULT -> (#,#) [s'_s7Q0B GHC.Tuple.()];
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.writeWord8Buf
  :: GHC.IO.Buffer.RawBuffer GHC.Word.Word8
     -> GHC.Types.Int -> GHC.Word.Word8 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Buffer.writeWord8Buf1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.Buffer.readWord8Buf1
  :: GHC.IO.Buffer.RawBuffer GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Word.Word8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [arr_s7Q0C ix_s7Q0D s_s7Q0E]
        case arr_s7Q0C of {
          GHC.ForeignPtr.ForeignPtr fo_s7Q0G [Occ=Once]
                                    ds1_s7Q0H [Occ=Once] ->
              case ix_s7Q0D of {
                GHC.Types.I# d_s7Q0J [Occ=Once] ->
                    case plusAddr# [fo_s7Q0G d_s7Q0J] of sat_s7Q0K {
                      __DEFAULT ->
                          case readWord8OffAddr# [sat_s7Q0K 0# s_s7Q0E] of {
                            (#,#) ipv_s7Q0M [Occ=Once] ipv1_s7Q0N [Occ=Once] ->
                                case touch# [ds1_s7Q0H ipv_s7Q0M] of s'_s7Q0O {
                                  __DEFAULT ->
                                      let {
                                        sat_s7Q0P [Occ=Once] :: GHC.Word.Word8
                                        [LclId] =
                                            CCCS GHC.Word.W8#! [ipv1_s7Q0N];
                                      } in  (#,#) [s'_s7Q0O sat_s7Q0P];
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.readWord8Buf
  :: GHC.IO.Buffer.RawBuffer GHC.Word.Word8
     -> GHC.Types.Int -> GHC.Types.IO GHC.Word.Word8
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.IO.Buffer.readWord8Buf1 eta_B3 eta_B2 eta_B1;

GHC.IO.Buffer.bufferAdd
  :: forall e.
     GHC.Types.Int -> GHC.IO.Buffer.Buffer e -> GHC.IO.Buffer.Buffer e
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(SLLSSS),1*U(U,U,U,U,U,U)>m,
 Unf=OtherCon []] =
    [] \r [i_s7Q0Q buf_s7Q0R]
        case buf_s7Q0R of {
          GHC.IO.Buffer.Buffer dt_s7Q0T [Occ=Once]
                               dt1_s7Q0U [Occ=Once]
                               ds_s7Q0V [Occ=Once]
                               dt2_s7Q0W [Occ=Once]
                               dt3_s7Q0X [Occ=Once]
                               dt4_s7Q0Y [Occ=Once] ->
              case i_s7Q0Q of {
                GHC.Types.I# y_s7Q10 [Occ=Once] ->
                    case +# [dt4_s7Q0Y y_s7Q10] of sat_s7Q11 {
                      __DEFAULT ->
                          GHC.IO.Buffer.Buffer [dt_s7Q0T
                                                dt1_s7Q0U
                                                ds_s7Q0V
                                                dt2_s7Q0W
                                                dt3_s7Q0X
                                                sat_s7Q11];
                    };
              };
        };

GHC.IO.Buffer.bufferRemove
  :: forall e.
     GHC.Types.Int -> GHC.IO.Buffer.Buffer e -> GHC.IO.Buffer.Buffer e
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(SLLSSS),1*U(U,U,U,U,U,U)>m,
 Unf=OtherCon []] =
    [] \r [i_s7Q12 buf_s7Q13]
        case buf_s7Q13 of {
          GHC.IO.Buffer.Buffer dt_s7Q15 [Occ=Once*]
                               dt1_s7Q16 [Occ=Once*]
                               ds_s7Q17 [Occ=Once*]
                               dt2_s7Q18 [Occ=Once*]
                               dt3_s7Q19 [Occ=Once]
                               dt4_s7Q1a ->
              case i_s7Q12 of {
                GHC.Types.I# y_s7Q1c [Occ=Once] ->
                    case +# [dt3_s7Q19 y_s7Q1c] of x_s7Q1d [Dmd=<S,U>] {
                      __DEFAULT ->
                          case ==# [x_s7Q1d dt4_s7Q1a] of {
                            __DEFAULT ->
                                GHC.IO.Buffer.Buffer [dt_s7Q15
                                                      dt1_s7Q16
                                                      ds_s7Q17
                                                      dt2_s7Q18
                                                      x_s7Q1d
                                                      dt4_s7Q1a];
                            1# ->
                                GHC.IO.Buffer.Buffer [dt_s7Q15 dt1_s7Q16 ds_s7Q17 dt2_s7Q18 0# 0#];
                          };
                    };
              };
        };

GHC.IO.Buffer.bufferAvailable
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLS),1*U(A,A,A,U,A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7Q1f]
        case ds_s7Q1f of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt2_s7Q1k [Occ=Once]
                               _ [Occ=Dead]
                               dt4_s7Q1m [Occ=Once] ->
              case -# [dt2_s7Q1k dt4_s7Q1m] of sat_s7Q1n {
                __DEFAULT -> GHC.Types.I# [sat_s7Q1n];
              };
        };

GHC.IO.Buffer.bufferElems
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSS),1*U(A,A,A,A,U,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7Q1o]
        case ds_s7Q1o of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt3_s7Q1u [Occ=Once]
                               dt4_s7Q1v [Occ=Once] ->
              case -# [dt4_s7Q1v dt3_s7Q1u] of sat_s7Q1w {
                __DEFAULT -> GHC.Types.I# [sat_s7Q1w];
              };
        };

lvl_r7OJS :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "buffer invariant violation: "#;

GHC.IO.Buffer.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Types.IO ()
[GblId, Arity=3, Str=<B,U><B,U><B,U>x, Unf=OtherCon []] =
    [] \r [ww_s7Q1x ww1_s7Q1y ww2_s7Q1z]
        let {
          sat_s7Q1A [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [ww_s7Q1x ww1_s7Q1y ww2_s7Q1z] \u []
                  GHC.IO.Buffer.$wsummaryBuffer ww_s7Q1x ww1_s7Q1y ww2_s7Q1z;
        } in 
          case
              GHC.CString.unpackAppendCString# lvl_r7OJS sat_s7Q1A
          of
          sat_s7Q1B
          { __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_s7Q1B;
          };

GHC.IO.Buffer.checkBuffer2
  :: forall a. GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Types.IO ()
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [ww_s7Q1C ww1_s7Q1D]
        GHC.IO.Buffer.$wlvl ww_s7Q1C 0# ww1_s7Q1D;

GHC.IO.Buffer.$wcheckBuffer [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=5,
 Str=<S,1*U><S,U><S,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_s7Q1E ww1_s7Q1F ww2_s7Q1G ww3_s7Q1H w_s7Q1I]
        case ># [ww1_s7Q1F 0#] of {
          __DEFAULT -> GHC.IO.Buffer.$wlvl ww1_s7Q1F ww2_s7Q1G ww3_s7Q1H;
          1# ->
              case <=# [ww2_s7Q1G ww3_s7Q1H] of {
                __DEFAULT -> GHC.IO.Buffer.$wlvl ww1_s7Q1F ww2_s7Q1G ww3_s7Q1H;
                1# ->
                    case <=# [ww3_s7Q1H ww1_s7Q1F] of {
                      __DEFAULT -> GHC.IO.Buffer.$wlvl ww1_s7Q1F ww2_s7Q1G ww3_s7Q1H;
                      1# ->
                          case /=# [ww2_s7Q1G ww3_s7Q1H] of {
                            __DEFAULT ->
                                case ww_s7Q1E of {
                                  GHC.IO.Buffer.ReadBuffer ->
                                      case ww2_s7Q1G of wild1_s7Q1R {
                                        __DEFAULT ->
                                            GHC.IO.Buffer.$wlvl ww1_s7Q1F wild1_s7Q1R ww3_s7Q1H;
                                        0# ->
                                            case ww3_s7Q1H of wild2_s7Q1T {
                                              __DEFAULT ->
                                                  GHC.IO.Buffer.checkBuffer2 ww1_s7Q1F wild2_s7Q1T;
                                              0# -> (#,#) [w_s7Q1I GHC.Tuple.()];
                                            };
                                      };
                                  GHC.IO.Buffer.WriteBuffer ->
                                      case <# [ww3_s7Q1H ww1_s7Q1F] of {
                                        __DEFAULT ->
                                            GHC.IO.Buffer.$wlvl ww1_s7Q1F ww2_s7Q1G ww3_s7Q1H;
                                        1# -> (#,#) [w_s7Q1I GHC.Tuple.()];
                                      };
                                };
                            1# ->
                                case ww_s7Q1E of {
                                  GHC.IO.Buffer.ReadBuffer -> (#,#) [w_s7Q1I GHC.Tuple.()];
                                  GHC.IO.Buffer.WriteBuffer ->
                                      case <# [ww3_s7Q1H ww1_s7Q1F] of {
                                        __DEFAULT ->
                                            GHC.IO.Buffer.$wlvl ww1_s7Q1F ww2_s7Q1G ww3_s7Q1H;
                                        1# -> (#,#) [w_s7Q1I GHC.Tuple.()];
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.checkBuffer1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Buffer.Buffer a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(LLSSSS),1*U(A,A,1*U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s7Q20 w1_s7Q21]
        case w_s7Q20 of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               ww3_s7Q25 [Occ=Once]
                               ww4_s7Q26 [Occ=Once]
                               ww5_s7Q27 [Occ=Once]
                               ww6_s7Q28 [Occ=Once] ->
              GHC.IO.Buffer.$wcheckBuffer
                  ww3_s7Q25 ww4_s7Q26 ww5_s7Q27 ww6_s7Q28 w1_s7Q21;
        };

GHC.IO.Buffer.checkBuffer
  :: forall a. GHC.IO.Buffer.Buffer a -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<S(LLSSSS),1*U(A,A,1*U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.IO.Buffer.checkBuffer1 eta_B2 eta_B1;

GHC.IO.Buffer.newBuffer1
  :: forall e.
     GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.Buffer.Buffer e #)
[GblId,
 Arity=4,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [bytes_s7Q29 sz_s7Q2a state_s7Q2b s_s7Q2c]
        case bytes_s7Q29 of {
          GHC.Types.I# x_s7Q2e ->
              case <# [x_s7Q2e 0#] of {
                __DEFAULT ->
                    case newMutVar# [GHC.ForeignPtr.NoFinalizers s_s7Q2c] of {
                      (#,#) ipv_s7Q2h [Occ=Once] ipv1_s7Q2i [Occ=Once] ->
                          case newPinnedByteArray# [x_s7Q2e ipv_s7Q2h] of {
                            (#,#) ipv2_s7Q2k [Occ=Once] ipv3_s7Q2l ->
                                let {
                                  sat_s7Q2q [Occ=Once] :: GHC.IO.Buffer.Buffer e_a7NIR
                                  [LclId] =
                                      [sz_s7Q2a state_s7Q2b ipv1_s7Q2i ipv3_s7Q2l] \u []
                                          case sz_s7Q2a of {
                                            GHC.Types.I# dt1_s7Q2n [Occ=Once] ->
                                                let {
                                                  sat_s7Q2p [Occ=Once]
                                                    :: GHC.ForeignPtr.ForeignPtrContents
                                                  [LclId] =
                                                      CCCS GHC.ForeignPtr.MallocPtr! [ipv3_s7Q2l
                                                                                      ipv1_s7Q2i];
                                                } in 
                                                  case
                                                      byteArrayContents# [ipv3_s7Q2l]
                                                  of
                                                  sat_s7Q2o
                                                  { __DEFAULT ->
                                                        GHC.IO.Buffer.Buffer [sat_s7Q2o
                                                                              sat_s7Q2p
                                                                              state_s7Q2b
                                                                              dt1_s7Q2n
                                                                              0#
                                                                              0#];
                                                  };
                                          };
                                } in  (#,#) [ipv2_s7Q2k sat_s7Q2q];
                          };
                    };
                1# -> GHC.ForeignPtr.mallocForeignPtrBytes2;
              };
        };

GHC.IO.Buffer.newBuffer
  :: forall e.
     GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Types.IO (GHC.IO.Buffer.Buffer e)
[GblId,
 Arity=4,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Buffer.newBuffer1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.Buffer.newByteBuffer1
  :: GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Word.Word8 #)
[GblId, Arity=3, Str=<L,U(U)><L,U>, Unf=OtherCon []] =
    [] \r [c_s7Q2s st_s7Q2t eta_B1]
        GHC.IO.Buffer.newBuffer1 c_s7Q2s c_s7Q2s st_s7Q2t eta_B1;

GHC.IO.Buffer.newByteBuffer
  :: GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Types.IO (GHC.IO.Buffer.Buffer GHC.Word.Word8)
[GblId, Arity=3, Str=<L,U(U)><L,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.IO.Buffer.newByteBuffer1 eta_B3 eta_B2 eta_B1;

GHC.IO.Buffer.newCharBuffer1
  :: GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Types.Char #)
[GblId, Arity=3, Str=<S(S),1*U(U)><L,U><S,U>, Unf=OtherCon []] =
    [] \r [c_s7Q2u st_s7Q2v s_s7Q2w]
        case c_s7Q2u of {
          GHC.Types.I# x_s7Q2y ->
              case *# [x_s7Q2y 4#] of x1_s7Q2z [Dmd=<S,U>] {
                __DEFAULT ->
                    case <# [x1_s7Q2z 0#] of {
                      __DEFAULT ->
                          case newMutVar# [GHC.ForeignPtr.NoFinalizers s_s7Q2w] of {
                            (#,#) ipv_s7Q2C [Occ=Once] ipv1_s7Q2D [Occ=Once] ->
                                case newPinnedByteArray# [x1_s7Q2z ipv_s7Q2C] of {
                                  (#,#) ipv2_s7Q2F [Occ=Once] ipv3_s7Q2G ->
                                      let {
                                        sat_s7Q2I [Occ=Once] :: GHC.ForeignPtr.ForeignPtrContents
                                        [LclId] =
                                            CCCS GHC.ForeignPtr.MallocPtr! [ipv3_s7Q2G ipv1_s7Q2D];
                                      } in 
                                        case byteArrayContents# [ipv3_s7Q2G] of sat_s7Q2H {
                                          __DEFAULT ->
                                              let {
                                                sat_s7Q2J [Occ=Once]
                                                  :: GHC.IO.Buffer.Buffer GHC.Types.Char
                                                [LclId] =
                                                    CCCS GHC.IO.Buffer.Buffer! [sat_s7Q2H
                                                                                sat_s7Q2I
                                                                                st_s7Q2v
                                                                                x_s7Q2y
                                                                                0#
                                                                                0#];
                                              } in  (#,#) [ipv2_s7Q2F sat_s7Q2J];
                                        };
                                };
                          };
                      1# -> GHC.ForeignPtr.mallocForeignPtrBytes2;
                    };
              };
        };

GHC.IO.Buffer.newCharBuffer
  :: GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Types.IO GHC.IO.Buffer.CharBuffer
[GblId, Arity=3, Str=<S(S),1*U(U)><L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.IO.Buffer.newCharBuffer1 eta_B3 eta_B2 eta_B1;

GHC.IO.Buffer.slideContents1
  :: GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Word.Word8 #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [buf_s7Q2L eta_s7Q2M]
        case buf_s7Q2L of {
          GHC.IO.Buffer.Buffer dt_s7Q2O
                               dt1_s7Q2P
                               ds_s7Q2Q [Occ=Once]
                               dt2_s7Q2R [Occ=Once]
                               dt3_s7Q2S
                               dt4_s7Q2T [Occ=Once] ->
              case -# [dt4_s7Q2T dt3_s7Q2S] of elems_s7Q2U [Dmd=<S,U>] {
                __DEFAULT ->
                    case int2Word# [elems_s7Q2U] of sat_s7Q2X {
                      __DEFAULT ->
                          case plusAddr# [dt_s7Q2O dt3_s7Q2S] of sat_s7Q2W {
                            __DEFAULT ->
                                case
                                    __pkg_ccall base-4.11.0.0 [dt_s7Q2O
                                                               sat_s7Q2W
                                                               sat_s7Q2X
                                                               eta_s7Q2M]
                                of
                                { (#,#) ds1_s7Q2Z [Occ=Once] _ [Occ=Dead] ->
                                      case touch# [dt1_s7Q2P ds1_s7Q2Z] of s'_s7Q31 {
                                        __DEFAULT ->
                                            let {
                                              sat_s7Q32 [Occ=Once]
                                                :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                              [LclId] =
                                                  CCCS GHC.IO.Buffer.Buffer! [dt_s7Q2O
                                                                              dt1_s7Q2P
                                                                              ds_s7Q2Q
                                                                              dt2_s7Q2R
                                                                              0#
                                                                              elems_s7Q2U];
                                            } in  (#,#) [s'_s7Q31 sat_s7Q32];
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.slideContents
  :: GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Types.IO (GHC.IO.Buffer.Buffer GHC.Word.Word8)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.IO.Buffer.slideContents1 eta_B2 eta_B1;

writeCharBufPtr1_r7OJT
  :: GHC.Ptr.Ptr GHC.IO.Buffer.CharBufElem
     -> GHC.Types.Int
     -> GHC.Types.Char
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [p_s7Q33 ix_s7Q34 ch_s7Q35 s_s7Q36]
        case p_s7Q33 of {
          GHC.Ptr.Ptr a_s7Q38 [Occ=Once] ->
              case ix_s7Q34 of {
                GHC.Types.I# i_s7Q3a ->
                    case ch_s7Q35 of {
                      GHC.Types.C# x_s7Q3c [Occ=Once] ->
                          case
                              writeWideCharOffAddr# [a_s7Q38 i_s7Q3a x_s7Q3c s_s7Q36]
                          of
                          s2_s7Q3d
                          { __DEFAULT ->
                                case +# [i_s7Q3a 1#] of sat_s7Q3e {
                                  __DEFAULT ->
                                      let {
                                        sat_s7Q3f [Occ=Once] :: GHC.Types.Int
                                        [LclId] =
                                            CCCS GHC.Types.I#! [sat_s7Q3e];
                                      } in  (#,#) [s2_s7Q3d sat_s7Q3f];
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.writeCharBufPtr [InlPrag=INLINE (sat-args=3)]
  :: GHC.Ptr.Ptr GHC.IO.Buffer.CharBufElem
     -> GHC.Types.Int -> GHC.Types.Char -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        writeCharBufPtr1_r7OJT eta_B4 eta_B3 eta_B2 eta_B1;

writeCharBuf1_r7OJU
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int
     -> GHC.Types.Char
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [arr_s7Q3g ix_s7Q3h c_s7Q3i s_s7Q3j]
        case arr_s7Q3g of {
          GHC.ForeignPtr.ForeignPtr fo_s7Q3l [Occ=Once]
                                    ds1_s7Q3m [Occ=Once] ->
              case ix_s7Q3h of {
                GHC.Types.I# i_s7Q3o ->
                    case c_s7Q3i of {
                      GHC.Types.C# x_s7Q3q [Occ=Once] ->
                          case
                              writeWideCharOffAddr# [fo_s7Q3l i_s7Q3o x_s7Q3q s_s7Q3j]
                          of
                          s2_s7Q3r
                          { __DEFAULT ->
                                case touch# [ds1_s7Q3m s2_s7Q3r] of s'_s7Q3s {
                                  __DEFAULT ->
                                      case +# [i_s7Q3o 1#] of sat_s7Q3t {
                                        __DEFAULT ->
                                            let {
                                              sat_s7Q3u [Occ=Once] :: GHC.Types.Int
                                              [LclId] =
                                                  CCCS GHC.Types.I#! [sat_s7Q3t];
                                            } in  (#,#) [s'_s7Q3s sat_s7Q3u];
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.writeCharBuf [InlPrag=INLINE (sat-args=3)]
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int -> GHC.Types.Char -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        writeCharBuf1_r7OJU eta_B4 eta_B3 eta_B2 eta_B1;

readCharBufPtr1_r7OJV
  :: GHC.Ptr.Ptr GHC.IO.Buffer.CharBufElem
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Char, GHC.Types.Int) #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [p_s7Q3v ix_s7Q3w s_s7Q3x]
        case p_s7Q3v of {
          GHC.Ptr.Ptr a_s7Q3z [Occ=Once] ->
              case ix_s7Q3w of {
                GHC.Types.I# i_s7Q3B ->
                    case readWideCharOffAddr# [a_s7Q3z i_s7Q3B s_s7Q3x] of {
                      (#,#) ipv_s7Q3D [Occ=Once] ipv1_s7Q3E [Occ=Once] ->
                          case +# [i_s7Q3B 1#] of sat_s7Q3G {
                            __DEFAULT ->
                                let {
                                  sat_s7Q3H [Occ=Once] :: GHC.Types.Int
                                  [LclId] =
                                      CCCS GHC.Types.I#! [sat_s7Q3G]; } in
                                let {
                                  sat_s7Q3F [Occ=Once] :: GHC.Types.Char
                                  [LclId] =
                                      CCCS GHC.Types.C#! [ipv1_s7Q3E]; } in
                                let {
                                  sat_s7Q3I [Occ=Once] :: (GHC.Types.Char, GHC.Types.Int)
                                  [LclId] =
                                      CCCS (,)! [sat_s7Q3F sat_s7Q3H];
                                } in  (#,#) [ipv_s7Q3D sat_s7Q3I];
                          };
                    };
              };
        };

GHC.IO.Buffer.readCharBufPtr [InlPrag=INLINE (sat-args=2)]
  :: GHC.Ptr.Ptr GHC.IO.Buffer.CharBufElem
     -> GHC.Types.Int -> GHC.Types.IO (GHC.Types.Char, GHC.Types.Int)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        readCharBufPtr1_r7OJV eta_B3 eta_B2 eta_B1;

readCharBuf1_r7OJW
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Char, GHC.Types.Int) #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [arr_s7Q3J ix_s7Q3K s_s7Q3L]
        case arr_s7Q3J of {
          GHC.ForeignPtr.ForeignPtr fo_s7Q3N [Occ=Once]
                                    ds1_s7Q3O [Occ=Once] ->
              case ix_s7Q3K of {
                GHC.Types.I# i_s7Q3Q ->
                    case readWideCharOffAddr# [fo_s7Q3N i_s7Q3Q s_s7Q3L] of {
                      (#,#) ipv_s7Q3S [Occ=Once] ipv1_s7Q3T [Occ=Once] ->
                          case touch# [ds1_s7Q3O ipv_s7Q3S] of s'_s7Q3U {
                            __DEFAULT ->
                                case +# [i_s7Q3Q 1#] of sat_s7Q3W {
                                  __DEFAULT ->
                                      let {
                                        sat_s7Q3X [Occ=Once] :: GHC.Types.Int
                                        [LclId] =
                                            CCCS GHC.Types.I#! [sat_s7Q3W]; } in
                                      let {
                                        sat_s7Q3V [Occ=Once] :: GHC.Types.Char
                                        [LclId] =
                                            CCCS GHC.Types.C#! [ipv1_s7Q3T]; } in
                                      let {
                                        sat_s7Q3Y [Occ=Once] :: (GHC.Types.Char, GHC.Types.Int)
                                        [LclId] =
                                            CCCS (,)! [sat_s7Q3V sat_s7Q3X];
                                      } in  (#,#) [s'_s7Q3U sat_s7Q3Y];
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.readCharBuf [InlPrag=INLINE (sat-args=2)]
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int -> GHC.Types.IO (GHC.Types.Char, GHC.Types.Int)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        readCharBuf1_r7OJW eta_B3 eta_B2 eta_B1;

GHC.IO.Buffer.peekCharBuf1
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [arr_s7Q3Z ix_s7Q40 s_s7Q41]
        case arr_s7Q3Z of {
          GHC.ForeignPtr.ForeignPtr fo_s7Q43 [Occ=Once]
                                    ds1_s7Q44 [Occ=Once] ->
              case ix_s7Q40 of {
                GHC.Types.I# i_s7Q46 [Occ=Once] ->
                    case readWideCharOffAddr# [fo_s7Q43 i_s7Q46 s_s7Q41] of {
                      (#,#) ipv_s7Q48 [Occ=Once] ipv1_s7Q49 [Occ=Once] ->
                          case touch# [ds1_s7Q44 ipv_s7Q48] of s'_s7Q4a {
                            __DEFAULT ->
                                let {
                                  sat_s7Q4b [Occ=Once] :: GHC.Types.Char
                                  [LclId] =
                                      CCCS GHC.Types.C#! [ipv1_s7Q49];
                                } in  (#,#) [s'_s7Q4a sat_s7Q4b];
                          };
                    };
              };
        };

GHC.IO.Buffer.peekCharBuf
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Char
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.IO.Buffer.peekCharBuf1 eta_B3 eta_B2 eta_B1;

GHC.IO.Buffer.ReadBuffer :: GHC.IO.Buffer.BufferState
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Buffer.ReadBuffer! [];

GHC.IO.Buffer.WriteBuffer :: GHC.IO.Buffer.BufferState
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Buffer.WriteBuffer! [];

GHC.IO.Buffer.Buffer
  :: forall e.
     GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.IO.Buffer.Buffer e
[GblId[DataCon],
 Arity=6,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Buffer.Buffer [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1];


==================== STG syntax: ====================
2018-03-16 16:02:57.023363648 UTC

GHC.IO.Buffer.$WBuffer [InlPrag=INLINE[2]]
  :: forall e.
     GHC.IO.Buffer.RawBuffer e
     -> GHC.IO.Buffer.BufferState
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.IO.Buffer.Buffer e
[GblId[DataConWrapper],
 Arity=5,
 Caf=NoCafRefs,
 Str=<S,U><L,U><S,U><S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_s7PXJ dt_s7PXK dt_s7PXL dt_s7PXM dt_s7PXN]
        case dt_s7PXJ of {
          GHC.ForeignPtr.ForeignPtr dt_s7PXP [Occ=Once]
                                    dt_s7PXQ [Occ=Once] ->
              case dt_s7PXL of {
                GHC.Types.I# dt_s7PXS [Occ=Once] ->
                    case dt_s7PXM of {
                      GHC.Types.I# dt_s7PXU [Occ=Once] ->
                          case dt_s7PXN of {
                            GHC.Types.I# dt_s7PXW [Occ=Once] ->
                                GHC.IO.Buffer.Buffer [dt_s7PXP
                                                      dt_s7PXQ
                                                      dt_s7PXK
                                                      dt_s7PXS
                                                      dt_s7PXU
                                                      dt_s7PXW];
                          };
                    };
              };
        };

GHC.IO.Buffer.$fEqBufferState_$c==
  :: GHC.IO.Buffer.BufferState
     -> GHC.IO.Buffer.BufferState -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_s7PXX ds1_s7PXY]
        case ds_s7PXX of {
          GHC.IO.Buffer.ReadBuffer ->
              case ds1_s7PXY of {
                GHC.IO.Buffer.ReadBuffer -> GHC.Types.True [];
                GHC.IO.Buffer.WriteBuffer -> GHC.Types.False [];
              };
          GHC.IO.Buffer.WriteBuffer ->
              case ds1_s7PXY of {
                GHC.IO.Buffer.ReadBuffer -> GHC.Types.False [];
                GHC.IO.Buffer.WriteBuffer -> GHC.Types.True [];
              };
        };

GHC.IO.Buffer.$fEqBufferState_$c/= [InlPrag=INLINE (sat-args=2)]
  :: GHC.IO.Buffer.BufferState
     -> GHC.IO.Buffer.BufferState -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [eta_s7PY2 eta1_s7PY3]
        case eta_s7PY2 of {
          GHC.IO.Buffer.ReadBuffer ->
              case eta1_s7PY3 of {
                GHC.IO.Buffer.ReadBuffer -> GHC.Types.False [];
                GHC.IO.Buffer.WriteBuffer -> GHC.Types.True [];
              };
          GHC.IO.Buffer.WriteBuffer ->
              case eta1_s7PY3 of {
                GHC.IO.Buffer.ReadBuffer -> GHC.Types.True [];
                GHC.IO.Buffer.WriteBuffer -> GHC.Types.False [];
              };
        };

GHC.IO.Buffer.$fEqBufferState [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.IO.Buffer.BufferState
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.IO.Buffer.$fEqBufferState_$c==
                                     GHC.IO.Buffer.$fEqBufferState_$c/=];

GHC.IO.Buffer.bufR
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLS),1*U(A,A,A,A,A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7PY7]
        case ds_s7PY7 of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt4_s7PYe [Occ=Once] ->
              GHC.Types.I# [dt4_s7PYe];
        };

GHC.IO.Buffer.bufL
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSL),1*U(A,A,A,A,U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7PYf]
        case ds_s7PYf of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt3_s7PYl [Occ=Once]
                               _ [Occ=Dead] ->
              GHC.Types.I# [dt3_s7PYl];
        };

GHC.IO.Buffer.bufSize
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLL),1*U(A,A,A,U,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7PYn]
        case ds_s7PYn of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt2_s7PYs [Occ=Once]
                               _ [Occ=Dead]
                               _ [Occ=Dead] ->
              GHC.Types.I# [dt2_s7PYs];
        };

GHC.IO.Buffer.bufState
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.IO.Buffer.BufferState
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [ds_s7PYv]
        case ds_s7PYv of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               ds1_s7PYz [Occ=Once]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead] ->
              ds1_s7PYz;
        };

GHC.IO.Buffer.bufRaw
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.IO.Buffer.RawBuffer e
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLLLLL),1*U(U,U,A,A,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7PYD]
        case ds_s7PYD of {
          GHC.IO.Buffer.Buffer dt_s7PYF [Occ=Once]
                               dt1_s7PYG [Occ=Once]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead] ->
              GHC.ForeignPtr.ForeignPtr [dt_s7PYF dt1_s7PYG];
        };

GHC.IO.Buffer.charSize :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [4#];

GHC.IO.Buffer.withBuffer1
  :: forall e a.
     GHC.IO.Buffer.Buffer e
     -> (GHC.Ptr.Ptr e -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U(U,U,A,A,A,A)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s7PYL f_s7PYM void_0E]
        case ds_s7PYL of {
          GHC.IO.Buffer.Buffer dt_s7PYP [Occ=Once]
                               dt1_s7PYQ [Occ=Once]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead] ->
              let {
                sat_s7PYV [Occ=Once] :: GHC.Ptr.Ptr e_a7NKM
                [LclId] =
                    CCCS GHC.Ptr.Ptr! [dt_s7PYP];
              } in 
                case f_s7PYM sat_s7PYV GHC.Prim.void# of {
                  Unit# ipv1_s7PYY [Occ=Once] ->
                      case touch# [dt1_s7PYQ GHC.Prim.void#] of s'_s7PYZ {
                        (##) -> Unit# [ipv1_s7PYY];
                      };
                };
        };

GHC.IO.Buffer.withBuffer
  :: forall e a.
     GHC.IO.Buffer.Buffer e
     -> (GHC.Ptr.Ptr e -> GHC.Types.IO a) -> GHC.Types.IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U(U,U,A,A,A,A)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.IO.Buffer.withBuffer1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Buffer.withRawBuffer1
  :: forall e a.
     GHC.IO.Buffer.RawBuffer e
     -> (GHC.Ptr.Ptr e -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U(U,U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [raw_s7PZ0 f_s7PZ1 void_0E]
        let {
          sat_s7PZ3 [Occ=Once] :: GHC.Ptr.Ptr e_a7NJW
          [LclId] =
              [raw_s7PZ0] \u [] GHC.ForeignPtr.unsafeForeignPtrToPtr raw_s7PZ0;
        } in 
          case f_s7PZ1 sat_s7PZ3 GHC.Prim.void# of {
            Unit# ipv1_s7PZ6 [Occ=Once] ->
                case raw_s7PZ0 of {
                  GHC.ForeignPtr.ForeignPtr _ [Occ=Dead] r_s7PZ9 [Occ=Once] ->
                      case touch# [r_s7PZ9 GHC.Prim.void#] of s'_s7PZa {
                        (##) -> Unit# [ipv1_s7PZ6];
                      };
                };
          };

GHC.IO.Buffer.withRawBuffer
  :: forall e a.
     GHC.IO.Buffer.RawBuffer e
     -> (GHC.Ptr.Ptr e -> GHC.Types.IO a) -> GHC.Types.IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U(U,U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.IO.Buffer.withRawBuffer1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Buffer.isEmptyBuffer
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSS),1*U(A,A,A,A,U,U)>,
 Unf=OtherCon []] =
    [] \r [ds_s7PZb]
        case ds_s7PZb of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt3_s7PZh [Occ=Once]
                               dt4_s7PZi [Occ=Once] ->
              case ==# [dt3_s7PZh dt4_s7PZi] of sat_s7PZj {
                __DEFAULT -> tagToEnum# [sat_s7PZj];
              };
        };

GHC.IO.Buffer.isFullBuffer
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLS),1*U(A,A,A,U,A,U)>,
 Unf=OtherCon []] =
    [] \r [ds_s7PZk]
        case ds_s7PZk of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt2_s7PZp [Occ=Once]
                               _ [Occ=Dead]
                               dt4_s7PZr [Occ=Once] ->
              case ==# [dt2_s7PZp dt4_s7PZr] of sat_s7PZs {
                __DEFAULT -> tagToEnum# [sat_s7PZs];
              };
        };

GHC.IO.Buffer.isFullCharBuffer
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLS),1*U(A,A,A,U,A,U)>,
 Unf=OtherCon []] =
    [] \r [eta_B1] GHC.IO.Buffer.isFullBuffer eta_B1;

GHC.IO.Buffer.isWriteBuffer
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [buf_s7PZt]
        case buf_s7PZt of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               ds_s7PZx [Occ=Once!]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead] ->
              case ds_s7PZx of {
                GHC.IO.Buffer.ReadBuffer -> GHC.Types.False [];
                GHC.IO.Buffer.WriteBuffer -> GHC.Types.True [];
              };
        };

GHC.IO.Buffer.bufferAdjustL
  :: forall e.
     GHC.Types.Int -> GHC.IO.Buffer.Buffer e -> GHC.IO.Buffer.Buffer e
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(SLLSLS),1*U(U,U,U,U,A,U)>m,
 Unf=OtherCon []] =
    [] \r [l_s7PZC buf_s7PZD]
        case buf_s7PZD of {
          GHC.IO.Buffer.Buffer dt_s7PZF [Occ=Once*]
                               dt1_s7PZG [Occ=Once*]
                               ds_s7PZH [Occ=Once*]
                               dt2_s7PZI [Occ=Once*]
                               _ [Occ=Dead]
                               dt4_s7PZK ->
              case l_s7PZC of {
                GHC.Types.I# x_s7PZM ->
                    case ==# [x_s7PZM dt4_s7PZK] of {
                      __DEFAULT ->
                          GHC.IO.Buffer.Buffer [dt_s7PZF
                                                dt1_s7PZG
                                                ds_s7PZH
                                                dt2_s7PZI
                                                x_s7PZM
                                                dt4_s7PZK];
                      1# ->
                          GHC.IO.Buffer.Buffer [dt_s7PZF dt1_s7PZG ds_s7PZH dt2_s7PZI 0# 0#];
                    };
              };
        };

GHC.IO.Buffer.emptyBuffer
  :: forall e.
     GHC.IO.Buffer.RawBuffer e
     -> GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.IO.Buffer.Buffer e
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><L,U>m,
 Unf=OtherCon []] =
    [] \r [raw_s7PZO sz_s7PZP state_s7PZQ]
        case raw_s7PZO of {
          GHC.ForeignPtr.ForeignPtr dt1_s7PZS [Occ=Once]
                                    dt2_s7PZT [Occ=Once] ->
              case sz_s7PZP of {
                GHC.Types.I# dt4_s7PZV [Occ=Once] ->
                    GHC.IO.Buffer.Buffer [dt1_s7PZS
                                          dt2_s7PZT
                                          state_s7PZQ
                                          dt4_s7PZV
                                          0#
                                          0#];
              };
        };

GHC.IO.Buffer.summaryBuffer5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "buf"#;

GHC.IO.Buffer.summaryBuffer4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "("#;

GHC.IO.Buffer.summaryBuffer3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "-"#;

GHC.IO.Buffer.summaryBuffer2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    ")"#;

GHC.IO.Buffer.summaryBuffer1 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Buffer.summaryBuffer2;

GHC.IO.Buffer.$wsummaryBuffer [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Base.String
[GblId, Arity=3, Str=<L,U><L,U><L,U>, Unf=OtherCon []] =
    [] \r [ww_s7PZW ww1_s7PZX ww2_s7PZY]
        let {
          sat_s7Q0f [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [ww_s7PZW ww1_s7PZX ww2_s7PZY] \u []
                  case GHC.Show.$wshowSignedInt 0# ww_s7PZW GHC.Types.[] of {
                    (#,#) ww5_s7Q00 [Occ=Once] ww6_s7Q01 [Occ=Once] ->
                        let {
                          sat_s7Q0e [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                          [LclId] =
                              [ww1_s7PZX ww2_s7PZY] \s []
                                  let {
                                    sat_s7Q0d [Occ=Once] :: [GHC.Types.Char]
                                    [LclId] =
                                        [ww1_s7PZX ww2_s7PZY] \u []
                                            case
                                                GHC.Show.$wshowSignedInt 0# ww1_s7PZX GHC.Types.[]
                                            of
                                            { (#,#) ww7_s7Q04 [Occ=Once] ww8_s7Q05 [Occ=Once] ->
                                                  let {
                                                    sat_s7Q0c [Occ=Once, Dmd=<L,1*U>]
                                                      :: [GHC.Types.Char]
                                                    [LclId] =
                                                        [ww2_s7PZY] \s []
                                                            let {
                                                              sat_s7Q0b [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId] =
                                                                  [ww2_s7PZY] \u []
                                                                      case
                                                                          GHC.Show.$wshowSignedInt
                                                                              0#
                                                                              ww2_s7PZY
                                                                              GHC.Types.[]
                                                                      of
                                                                      { (#,#) ww10_s7Q08 [Occ=Once]
                                                                              ww11_s7Q09 [Occ=Once] ->
                                                                            let {
                                                                              sat_s7Q0a [Occ=Once]
                                                                                :: [GHC.Types.Char]
                                                                              [LclId] =
                                                                                  CCCS :! [ww10_s7Q08
                                                                                           ww11_s7Q09];
                                                                            } in 
                                                                              GHC.Base.++
                                                                                  sat_s7Q0a
                                                                                  GHC.IO.Buffer.summaryBuffer1;
                                                                      };
                                                            } in 
                                                              GHC.CString.unpackAppendCString#
                                                                  GHC.IO.Buffer.summaryBuffer3
                                                                  sat_s7Q0b; } in
                                                  let {
                                                    sat_s7Q06 [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId] =
                                                        CCCS :! [ww7_s7Q04 ww8_s7Q05];
                                                  } in  GHC.Base.++ sat_s7Q06 sat_s7Q0c;
                                            };
                                  } in 
                                    GHC.CString.unpackAppendCString#
                                        GHC.IO.Buffer.summaryBuffer4 sat_s7Q0d; } in
                        let {
                          sat_s7Q02 [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              CCCS :! [ww5_s7Q00 ww6_s7Q01];
                        } in  GHC.Base.++ sat_s7Q02 sat_s7Q0e;
                  };
        } in 
          GHC.CString.unpackAppendCString#
              GHC.IO.Buffer.summaryBuffer5 sat_s7Q0f;

GHC.IO.Buffer.summaryBuffer [InlPrag=NOUSERINLINE[0]]
  :: forall a. GHC.IO.Buffer.Buffer a -> GHC.Base.String
[GblId,
 Arity=1,
 Str=<S(LLLSSS),1*U(A,A,A,U,U,U)>,
 Unf=OtherCon []] =
    [] \r [w_s7Q0g]
        case w_s7Q0g of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               ww4_s7Q0l [Occ=Once]
                               ww5_s7Q0m [Occ=Once]
                               ww6_s7Q0n [Occ=Once] ->
              GHC.IO.Buffer.$wsummaryBuffer ww4_s7Q0l ww5_s7Q0m ww6_s7Q0n;
        };

GHC.IO.Buffer.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.IO.Buffer.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$trModule4];

GHC.IO.Buffer.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.Buffer"#;

GHC.IO.Buffer.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$trModule2];

GHC.IO.Buffer.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.IO.Buffer.$trModule3
                                     GHC.IO.Buffer.$trModule1];

$krep_r7OJJ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcInt
                                              GHC.Types.[]];

$krep1_r7OJK :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

$krep2_r7OJL :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep1_r7OJK GHC.Types.[]];

$krep3_r7OJM :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.ForeignPtr.$tcForeignPtr
                                              $krep2_r7OJL];

GHC.IO.Buffer.$tcBufferState2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "BufferState"#;

GHC.IO.Buffer.$tcBufferState1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$tcBufferState2];

GHC.IO.Buffer.$tcBufferState :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15354245406219544442##
                                    3075510984364124805##
                                    GHC.IO.Buffer.$trModule
                                    GHC.IO.Buffer.$tcBufferState1
                                    0#
                                    GHC.Types.krep$*];

GHC.IO.Buffer.$tc'ReadBuffer1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.IO.Buffer.$tcBufferState
                                              GHC.Types.[]];

GHC.IO.Buffer.$tc'ReadBuffer3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ReadBuffer"#;

GHC.IO.Buffer.$tc'ReadBuffer2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$tc'ReadBuffer3];

GHC.IO.Buffer.$tc'ReadBuffer :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [18127629064171759490##
                                    12249378994783130540##
                                    GHC.IO.Buffer.$trModule
                                    GHC.IO.Buffer.$tc'ReadBuffer2
                                    0#
                                    GHC.IO.Buffer.$tc'ReadBuffer1];

GHC.IO.Buffer.$tc'WriteBuffer2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'WriteBuffer"#;

GHC.IO.Buffer.$tc'WriteBuffer1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$tc'WriteBuffer2];

GHC.IO.Buffer.$tc'WriteBuffer :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17535537923682101798##
                                    5353421715631386637##
                                    GHC.IO.Buffer.$trModule
                                    GHC.IO.Buffer.$tc'WriteBuffer1
                                    0#
                                    GHC.IO.Buffer.$tc'ReadBuffer1];

GHC.IO.Buffer.$tcBuffer2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Buffer"#;

GHC.IO.Buffer.$tcBuffer1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$tcBuffer2];

GHC.IO.Buffer.$tcBuffer :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [18372445388029251215##
                                    8106905342043791875##
                                    GHC.IO.Buffer.$trModule
                                    GHC.IO.Buffer.$tcBuffer1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep4_r7OJN :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.IO.Buffer.$tcBuffer
                                              $krep2_r7OJL];

$krep5_r7OJO :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r7OJJ $krep4_r7OJN];

$krep6_r7OJP :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r7OJJ $krep5_r7OJO];

$krep7_r7OJQ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r7OJJ $krep6_r7OJP];

$krep8_r7OJR :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [GHC.IO.Buffer.$tc'ReadBuffer1
                                         $krep7_r7OJQ];

GHC.IO.Buffer.$tc'Buffer1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r7OJM $krep8_r7OJR];

GHC.IO.Buffer.$tc'Buffer3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Buffer"#;

GHC.IO.Buffer.$tc'Buffer2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Buffer.$tc'Buffer3];

GHC.IO.Buffer.$tc'Buffer :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6953290879310668230##
                                    8839152842293094522##
                                    GHC.IO.Buffer.$trModule
                                    GHC.IO.Buffer.$tc'Buffer2
                                    1#
                                    GHC.IO.Buffer.$tc'Buffer1];

GHC.IO.Buffer.writeWord8Buf1
  :: GHC.IO.Buffer.RawBuffer GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [arr_s7Q0o ix_s7Q0p w_s7Q0q void_0E]
        case arr_s7Q0o of {
          GHC.ForeignPtr.ForeignPtr fo_s7Q0t [Occ=Once]
                                    ds1_s7Q0u [Occ=Once] ->
              case ix_s7Q0p of {
                GHC.Types.I# d_s7Q0w [Occ=Once] ->
                    case w_s7Q0q of {
                      GHC.Word.W8# x_s7Q0y [Occ=Once] ->
                          case plusAddr# [fo_s7Q0t d_s7Q0w] of sat_s7Q0z {
                            __DEFAULT ->
                                case
                                    writeWord8OffAddr# [sat_s7Q0z 0# x_s7Q0y GHC.Prim.void#]
                                of
                                s2_s7Q0A
                                { (##) ->
                                      case touch# [ds1_s7Q0u GHC.Prim.void#] of s'_s7Q0B {
                                        (##) -> Unit# [GHC.Tuple.()];
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.writeWord8Buf
  :: GHC.IO.Buffer.RawBuffer GHC.Word.Word8
     -> GHC.Types.Int -> GHC.Word.Word8 -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.Buffer.writeWord8Buf1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Buffer.readWord8Buf1
  :: GHC.IO.Buffer.RawBuffer GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Word.Word8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [arr_s7Q0C ix_s7Q0D void_0E]
        case arr_s7Q0C of {
          GHC.ForeignPtr.ForeignPtr fo_s7Q0G [Occ=Once]
                                    ds1_s7Q0H [Occ=Once] ->
              case ix_s7Q0D of {
                GHC.Types.I# d_s7Q0J [Occ=Once] ->
                    case plusAddr# [fo_s7Q0G d_s7Q0J] of sat_s7Q0K {
                      __DEFAULT ->
                          case readWord8OffAddr# [sat_s7Q0K 0# GHC.Prim.void#] of {
                            Unit# ipv1_s7Q0N [Occ=Once] ->
                                case touch# [ds1_s7Q0H GHC.Prim.void#] of s'_s7Q0O {
                                  (##) ->
                                      let {
                                        sat_s7Q0P [Occ=Once] :: GHC.Word.Word8
                                        [LclId] =
                                            CCCS GHC.Word.W8#! [ipv1_s7Q0N];
                                      } in  Unit# [sat_s7Q0P];
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.readWord8Buf
  :: GHC.IO.Buffer.RawBuffer GHC.Word.Word8
     -> GHC.Types.Int -> GHC.Types.IO GHC.Word.Word8
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.IO.Buffer.readWord8Buf1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Buffer.bufferAdd
  :: forall e.
     GHC.Types.Int -> GHC.IO.Buffer.Buffer e -> GHC.IO.Buffer.Buffer e
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(SLLSSS),1*U(U,U,U,U,U,U)>m,
 Unf=OtherCon []] =
    [] \r [i_s7Q0Q buf_s7Q0R]
        case buf_s7Q0R of {
          GHC.IO.Buffer.Buffer dt_s7Q0T [Occ=Once]
                               dt1_s7Q0U [Occ=Once]
                               ds_s7Q0V [Occ=Once]
                               dt2_s7Q0W [Occ=Once]
                               dt3_s7Q0X [Occ=Once]
                               dt4_s7Q0Y [Occ=Once] ->
              case i_s7Q0Q of {
                GHC.Types.I# y_s7Q10 [Occ=Once] ->
                    case +# [dt4_s7Q0Y y_s7Q10] of sat_s7Q11 {
                      __DEFAULT ->
                          GHC.IO.Buffer.Buffer [dt_s7Q0T
                                                dt1_s7Q0U
                                                ds_s7Q0V
                                                dt2_s7Q0W
                                                dt3_s7Q0X
                                                sat_s7Q11];
                    };
              };
        };

GHC.IO.Buffer.bufferRemove
  :: forall e.
     GHC.Types.Int -> GHC.IO.Buffer.Buffer e -> GHC.IO.Buffer.Buffer e
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(SLLSSS),1*U(U,U,U,U,U,U)>m,
 Unf=OtherCon []] =
    [] \r [i_s7Q12 buf_s7Q13]
        case buf_s7Q13 of {
          GHC.IO.Buffer.Buffer dt_s7Q15 [Occ=Once*]
                               dt1_s7Q16 [Occ=Once*]
                               ds_s7Q17 [Occ=Once*]
                               dt2_s7Q18 [Occ=Once*]
                               dt3_s7Q19 [Occ=Once]
                               dt4_s7Q1a ->
              case i_s7Q12 of {
                GHC.Types.I# y_s7Q1c [Occ=Once] ->
                    case +# [dt3_s7Q19 y_s7Q1c] of x_s7Q1d [Dmd=<S,U>] {
                      __DEFAULT ->
                          case ==# [x_s7Q1d dt4_s7Q1a] of {
                            __DEFAULT ->
                                GHC.IO.Buffer.Buffer [dt_s7Q15
                                                      dt1_s7Q16
                                                      ds_s7Q17
                                                      dt2_s7Q18
                                                      x_s7Q1d
                                                      dt4_s7Q1a];
                            1# ->
                                GHC.IO.Buffer.Buffer [dt_s7Q15 dt1_s7Q16 ds_s7Q17 dt2_s7Q18 0# 0#];
                          };
                    };
              };
        };

GHC.IO.Buffer.bufferAvailable
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLS),1*U(A,A,A,U,A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7Q1f]
        case ds_s7Q1f of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt2_s7Q1k [Occ=Once]
                               _ [Occ=Dead]
                               dt4_s7Q1m [Occ=Once] ->
              case -# [dt2_s7Q1k dt4_s7Q1m] of sat_s7Q1n {
                __DEFAULT -> GHC.Types.I# [sat_s7Q1n];
              };
        };

GHC.IO.Buffer.bufferElems
  :: forall e. GHC.IO.Buffer.Buffer e -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSS),1*U(A,A,A,A,U,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s7Q1o]
        case ds_s7Q1o of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               _ [Occ=Dead]
                               dt3_s7Q1u [Occ=Once]
                               dt4_s7Q1v [Occ=Once] ->
              case -# [dt4_s7Q1v dt3_s7Q1u] of sat_s7Q1w {
                __DEFAULT -> GHC.Types.I# [sat_s7Q1w];
              };
        };

lvl_r7OJS :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "buffer invariant violation: "#;

GHC.IO.Buffer.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Types.IO ()
[GblId, Arity=3, Str=<B,U><B,U><B,U>x, Unf=OtherCon []] =
    [] \r [ww_s7Q1x ww1_s7Q1y ww2_s7Q1z]
        let {
          sat_s7Q1A [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [ww_s7Q1x ww1_s7Q1y ww2_s7Q1z] \u []
                  GHC.IO.Buffer.$wsummaryBuffer ww_s7Q1x ww1_s7Q1y ww2_s7Q1z;
        } in 
          case
              GHC.CString.unpackAppendCString# lvl_r7OJS sat_s7Q1A
          of
          sat_s7Q1B
          { __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_s7Q1B;
          };

GHC.IO.Buffer.checkBuffer2
  :: forall a. GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Types.IO ()
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [ww_s7Q1C ww1_s7Q1D]
        GHC.IO.Buffer.$wlvl ww_s7Q1C 0# ww1_s7Q1D;

GHC.IO.Buffer.$wcheckBuffer [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=5,
 Str=<S,1*U><S,U><S,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_s7Q1E ww1_s7Q1F ww2_s7Q1G ww3_s7Q1H void_0E]
        case ># [ww1_s7Q1F 0#] of {
          __DEFAULT -> GHC.IO.Buffer.$wlvl ww1_s7Q1F ww2_s7Q1G ww3_s7Q1H;
          1# ->
              case <=# [ww2_s7Q1G ww3_s7Q1H] of {
                __DEFAULT -> GHC.IO.Buffer.$wlvl ww1_s7Q1F ww2_s7Q1G ww3_s7Q1H;
                1# ->
                    case <=# [ww3_s7Q1H ww1_s7Q1F] of {
                      __DEFAULT -> GHC.IO.Buffer.$wlvl ww1_s7Q1F ww2_s7Q1G ww3_s7Q1H;
                      1# ->
                          case /=# [ww2_s7Q1G ww3_s7Q1H] of {
                            __DEFAULT ->
                                case ww_s7Q1E of {
                                  GHC.IO.Buffer.ReadBuffer ->
                                      case ww2_s7Q1G of wild1_s7Q1R {
                                        __DEFAULT ->
                                            GHC.IO.Buffer.$wlvl ww1_s7Q1F wild1_s7Q1R ww3_s7Q1H;
                                        0# ->
                                            case ww3_s7Q1H of wild2_s7Q1T {
                                              __DEFAULT ->
                                                  GHC.IO.Buffer.checkBuffer2 ww1_s7Q1F wild2_s7Q1T;
                                              0# -> Unit# [GHC.Tuple.()];
                                            };
                                      };
                                  GHC.IO.Buffer.WriteBuffer ->
                                      case <# [ww3_s7Q1H ww1_s7Q1F] of {
                                        __DEFAULT ->
                                            GHC.IO.Buffer.$wlvl ww1_s7Q1F ww2_s7Q1G ww3_s7Q1H;
                                        1# -> Unit# [GHC.Tuple.()];
                                      };
                                };
                            1# ->
                                case ww_s7Q1E of {
                                  GHC.IO.Buffer.ReadBuffer -> Unit# [GHC.Tuple.()];
                                  GHC.IO.Buffer.WriteBuffer ->
                                      case <# [ww3_s7Q1H ww1_s7Q1F] of {
                                        __DEFAULT ->
                                            GHC.IO.Buffer.$wlvl ww1_s7Q1F ww2_s7Q1G ww3_s7Q1H;
                                        1# -> Unit# [GHC.Tuple.()];
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.checkBuffer1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Buffer.Buffer a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(LLSSSS),1*U(A,A,1*U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s7Q20 void_0E]
        case w_s7Q20 of {
          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                               _ [Occ=Dead]
                               ww3_s7Q25 [Occ=Once]
                               ww4_s7Q26 [Occ=Once]
                               ww5_s7Q27 [Occ=Once]
                               ww6_s7Q28 [Occ=Once] ->
              GHC.IO.Buffer.$wcheckBuffer
                  ww3_s7Q25 ww4_s7Q26 ww5_s7Q27 ww6_s7Q28 GHC.Prim.void#;
        };

GHC.IO.Buffer.checkBuffer
  :: forall a. GHC.IO.Buffer.Buffer a -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<S(LLSSSS),1*U(A,A,1*U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.IO.Buffer.checkBuffer1 eta_B2 GHC.Prim.void#;

GHC.IO.Buffer.newBuffer1
  :: forall e.
     GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.Buffer.Buffer e #)
[GblId,
 Arity=4,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [bytes_s7Q29 sz_s7Q2a state_s7Q2b void_0E]
        case bytes_s7Q29 of {
          GHC.Types.I# x_s7Q2e ->
              case <# [x_s7Q2e 0#] of {
                __DEFAULT ->
                    case newMutVar# [GHC.ForeignPtr.NoFinalizers GHC.Prim.void#] of {
                      Unit# ipv1_s7Q2i [Occ=Once] ->
                          case newPinnedByteArray# [x_s7Q2e GHC.Prim.void#] of {
                            Unit# ipv3_s7Q2l ->
                                let {
                                  sat_s7Q2q [Occ=Once] :: GHC.IO.Buffer.Buffer e_a7NIR
                                  [LclId] =
                                      [sz_s7Q2a state_s7Q2b ipv1_s7Q2i ipv3_s7Q2l] \u []
                                          case sz_s7Q2a of {
                                            GHC.Types.I# dt1_s7Q2n [Occ=Once] ->
                                                let {
                                                  sat_s7Q2p [Occ=Once]
                                                    :: GHC.ForeignPtr.ForeignPtrContents
                                                  [LclId] =
                                                      CCCS GHC.ForeignPtr.MallocPtr! [ipv3_s7Q2l
                                                                                      ipv1_s7Q2i];
                                                } in 
                                                  case
                                                      byteArrayContents# [ipv3_s7Q2l]
                                                  of
                                                  sat_s7Q2o
                                                  { __DEFAULT ->
                                                        GHC.IO.Buffer.Buffer [sat_s7Q2o
                                                                              sat_s7Q2p
                                                                              state_s7Q2b
                                                                              dt1_s7Q2n
                                                                              0#
                                                                              0#];
                                                  };
                                          };
                                } in  Unit# [sat_s7Q2q];
                          };
                    };
                1# -> GHC.ForeignPtr.mallocForeignPtrBytes2;
              };
        };

GHC.IO.Buffer.newBuffer
  :: forall e.
     GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Types.IO (GHC.IO.Buffer.Buffer e)
[GblId,
 Arity=4,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.Buffer.newBuffer1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Buffer.newByteBuffer1
  :: GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Word.Word8 #)
[GblId, Arity=3, Str=<L,U(U)><L,U>, Unf=OtherCon []] =
    [] \r [c_s7Q2s st_s7Q2t void_0E]
        GHC.IO.Buffer.newBuffer1 c_s7Q2s c_s7Q2s st_s7Q2t GHC.Prim.void#;

GHC.IO.Buffer.newByteBuffer
  :: GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Types.IO (GHC.IO.Buffer.Buffer GHC.Word.Word8)
[GblId, Arity=3, Str=<L,U(U)><L,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.IO.Buffer.newByteBuffer1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Buffer.newCharBuffer1
  :: GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Types.Char #)
[GblId, Arity=3, Str=<S(S),1*U(U)><L,U><S,U>, Unf=OtherCon []] =
    [] \r [c_s7Q2u st_s7Q2v void_0E]
        case c_s7Q2u of {
          GHC.Types.I# x_s7Q2y ->
              case *# [x_s7Q2y 4#] of x1_s7Q2z [Dmd=<S,U>] {
                __DEFAULT ->
                    case <# [x1_s7Q2z 0#] of {
                      __DEFAULT ->
                          case newMutVar# [GHC.ForeignPtr.NoFinalizers GHC.Prim.void#] of {
                            Unit# ipv1_s7Q2D [Occ=Once] ->
                                case newPinnedByteArray# [x1_s7Q2z GHC.Prim.void#] of {
                                  Unit# ipv3_s7Q2G ->
                                      let {
                                        sat_s7Q2I [Occ=Once] :: GHC.ForeignPtr.ForeignPtrContents
                                        [LclId] =
                                            CCCS GHC.ForeignPtr.MallocPtr! [ipv3_s7Q2G ipv1_s7Q2D];
                                      } in 
                                        case byteArrayContents# [ipv3_s7Q2G] of sat_s7Q2H {
                                          __DEFAULT ->
                                              let {
                                                sat_s7Q2J [Occ=Once]
                                                  :: GHC.IO.Buffer.Buffer GHC.Types.Char
                                                [LclId] =
                                                    CCCS GHC.IO.Buffer.Buffer! [sat_s7Q2H
                                                                                sat_s7Q2I
                                                                                st_s7Q2v
                                                                                x_s7Q2y
                                                                                0#
                                                                                0#];
                                              } in  Unit# [sat_s7Q2J];
                                        };
                                };
                          };
                      1# -> GHC.ForeignPtr.mallocForeignPtrBytes2;
                    };
              };
        };

GHC.IO.Buffer.newCharBuffer
  :: GHC.Types.Int
     -> GHC.IO.Buffer.BufferState
     -> GHC.Types.IO GHC.IO.Buffer.CharBuffer
[GblId, Arity=3, Str=<S(S),1*U(U)><L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.IO.Buffer.newCharBuffer1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Buffer.slideContents1
  :: GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Word.Word8 #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [buf_s7Q2L void_0E]
        case buf_s7Q2L of {
          GHC.IO.Buffer.Buffer dt_s7Q2O
                               dt1_s7Q2P
                               ds_s7Q2Q [Occ=Once]
                               dt2_s7Q2R [Occ=Once]
                               dt3_s7Q2S
                               dt4_s7Q2T [Occ=Once] ->
              case -# [dt4_s7Q2T dt3_s7Q2S] of elems_s7Q2U [Dmd=<S,U>] {
                __DEFAULT ->
                    case int2Word# [elems_s7Q2U] of sat_s7Q2X {
                      __DEFAULT ->
                          case plusAddr# [dt_s7Q2O dt3_s7Q2S] of sat_s7Q2W {
                            __DEFAULT ->
                                case
                                    __pkg_ccall base-4.11.0.0 [dt_s7Q2O
                                                               sat_s7Q2W
                                                               sat_s7Q2X
                                                               GHC.Prim.void#]
                                of
                                { Unit# _ [Occ=Dead] ->
                                      case touch# [dt1_s7Q2P GHC.Prim.void#] of s'_s7Q31 {
                                        (##) ->
                                            let {
                                              sat_s7Q32 [Occ=Once]
                                                :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                              [LclId] =
                                                  CCCS GHC.IO.Buffer.Buffer! [dt_s7Q2O
                                                                              dt1_s7Q2P
                                                                              ds_s7Q2Q
                                                                              dt2_s7Q2R
                                                                              0#
                                                                              elems_s7Q2U];
                                            } in  Unit# [sat_s7Q32];
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.slideContents
  :: GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Types.IO (GHC.IO.Buffer.Buffer GHC.Word.Word8)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.IO.Buffer.slideContents1 eta_B2 GHC.Prim.void#;

writeCharBufPtr1_r7OJT
  :: GHC.Ptr.Ptr GHC.IO.Buffer.CharBufElem
     -> GHC.Types.Int
     -> GHC.Types.Char
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [p_s7Q33 ix_s7Q34 ch_s7Q35 void_0E]
        case p_s7Q33 of {
          GHC.Ptr.Ptr a_s7Q38 [Occ=Once] ->
              case ix_s7Q34 of {
                GHC.Types.I# i_s7Q3a ->
                    case ch_s7Q35 of {
                      GHC.Types.C# x_s7Q3c [Occ=Once] ->
                          case
                              writeWideCharOffAddr# [a_s7Q38 i_s7Q3a x_s7Q3c GHC.Prim.void#]
                          of
                          s2_s7Q3d
                          { (##) ->
                                case +# [i_s7Q3a 1#] of sat_s7Q3e {
                                  __DEFAULT ->
                                      let {
                                        sat_s7Q3f [Occ=Once] :: GHC.Types.Int
                                        [LclId] =
                                            CCCS GHC.Types.I#! [sat_s7Q3e];
                                      } in  Unit# [sat_s7Q3f];
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.writeCharBufPtr [InlPrag=INLINE (sat-args=3)]
  :: GHC.Ptr.Ptr GHC.IO.Buffer.CharBufElem
     -> GHC.Types.Int -> GHC.Types.Char -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        writeCharBufPtr1_r7OJT eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

writeCharBuf1_r7OJU
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int
     -> GHC.Types.Char
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [arr_s7Q3g ix_s7Q3h c_s7Q3i void_0E]
        case arr_s7Q3g of {
          GHC.ForeignPtr.ForeignPtr fo_s7Q3l [Occ=Once]
                                    ds1_s7Q3m [Occ=Once] ->
              case ix_s7Q3h of {
                GHC.Types.I# i_s7Q3o ->
                    case c_s7Q3i of {
                      GHC.Types.C# x_s7Q3q [Occ=Once] ->
                          case
                              writeWideCharOffAddr# [fo_s7Q3l i_s7Q3o x_s7Q3q GHC.Prim.void#]
                          of
                          s2_s7Q3r
                          { (##) ->
                                case touch# [ds1_s7Q3m GHC.Prim.void#] of s'_s7Q3s {
                                  (##) ->
                                      case +# [i_s7Q3o 1#] of sat_s7Q3t {
                                        __DEFAULT ->
                                            let {
                                              sat_s7Q3u [Occ=Once] :: GHC.Types.Int
                                              [LclId] =
                                                  CCCS GHC.Types.I#! [sat_s7Q3t];
                                            } in  Unit# [sat_s7Q3u];
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.writeCharBuf [InlPrag=INLINE (sat-args=3)]
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int -> GHC.Types.Char -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        writeCharBuf1_r7OJU eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

readCharBufPtr1_r7OJV
  :: GHC.Ptr.Ptr GHC.IO.Buffer.CharBufElem
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Char, GHC.Types.Int) #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [p_s7Q3v ix_s7Q3w void_0E]
        case p_s7Q3v of {
          GHC.Ptr.Ptr a_s7Q3z [Occ=Once] ->
              case ix_s7Q3w of {
                GHC.Types.I# i_s7Q3B ->
                    case readWideCharOffAddr# [a_s7Q3z i_s7Q3B GHC.Prim.void#] of {
                      Unit# ipv1_s7Q3E [Occ=Once] ->
                          case +# [i_s7Q3B 1#] of sat_s7Q3G {
                            __DEFAULT ->
                                let {
                                  sat_s7Q3H [Occ=Once] :: GHC.Types.Int
                                  [LclId] =
                                      CCCS GHC.Types.I#! [sat_s7Q3G]; } in
                                let {
                                  sat_s7Q3F [Occ=Once] :: GHC.Types.Char
                                  [LclId] =
                                      CCCS GHC.Types.C#! [ipv1_s7Q3E]; } in
                                let {
                                  sat_s7Q3I [Occ=Once] :: (GHC.Types.Char, GHC.Types.Int)
                                  [LclId] =
                                      CCCS (,)! [sat_s7Q3F sat_s7Q3H];
                                } in  Unit# [sat_s7Q3I];
                          };
                    };
              };
        };

GHC.IO.Buffer.readCharBufPtr [InlPrag=INLINE (sat-args=2)]
  :: GHC.Ptr.Ptr GHC.IO.Buffer.CharBufElem
     -> GHC.Types.Int -> GHC.Types.IO (GHC.Types.Char, GHC.Types.Int)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        readCharBufPtr1_r7OJV eta_B3 eta_B2 GHC.Prim.void#;

readCharBuf1_r7OJW
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Char, GHC.Types.Int) #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [arr_s7Q3J ix_s7Q3K void_0E]
        case arr_s7Q3J of {
          GHC.ForeignPtr.ForeignPtr fo_s7Q3N [Occ=Once]
                                    ds1_s7Q3O [Occ=Once] ->
              case ix_s7Q3K of {
                GHC.Types.I# i_s7Q3Q ->
                    case readWideCharOffAddr# [fo_s7Q3N i_s7Q3Q GHC.Prim.void#] of {
                      Unit# ipv1_s7Q3T [Occ=Once] ->
                          case touch# [ds1_s7Q3O GHC.Prim.void#] of s'_s7Q3U {
                            (##) ->
                                case +# [i_s7Q3Q 1#] of sat_s7Q3W {
                                  __DEFAULT ->
                                      let {
                                        sat_s7Q3X [Occ=Once] :: GHC.Types.Int
                                        [LclId] =
                                            CCCS GHC.Types.I#! [sat_s7Q3W]; } in
                                      let {
                                        sat_s7Q3V [Occ=Once] :: GHC.Types.Char
                                        [LclId] =
                                            CCCS GHC.Types.C#! [ipv1_s7Q3T]; } in
                                      let {
                                        sat_s7Q3Y [Occ=Once] :: (GHC.Types.Char, GHC.Types.Int)
                                        [LclId] =
                                            CCCS (,)! [sat_s7Q3V sat_s7Q3X];
                                      } in  Unit# [sat_s7Q3Y];
                                };
                          };
                    };
              };
        };

GHC.IO.Buffer.readCharBuf [InlPrag=INLINE (sat-args=2)]
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int -> GHC.Types.IO (GHC.Types.Char, GHC.Types.Int)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        readCharBuf1_r7OJW eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Buffer.peekCharBuf1
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [arr_s7Q3Z ix_s7Q40 void_0E]
        case arr_s7Q3Z of {
          GHC.ForeignPtr.ForeignPtr fo_s7Q43 [Occ=Once]
                                    ds1_s7Q44 [Occ=Once] ->
              case ix_s7Q40 of {
                GHC.Types.I# i_s7Q46 [Occ=Once] ->
                    case readWideCharOffAddr# [fo_s7Q43 i_s7Q46 GHC.Prim.void#] of {
                      Unit# ipv1_s7Q49 [Occ=Once] ->
                          case touch# [ds1_s7Q44 GHC.Prim.void#] of s'_s7Q4a {
                            (##) ->
                                let {
                                  sat_s7Q4b [Occ=Once] :: GHC.Types.Char
                                  [LclId] =
                                      CCCS GHC.Types.C#! [ipv1_s7Q49];
                                } in  Unit# [sat_s7Q4b];
                          };
                    };
              };
        };

GHC.IO.Buffer.peekCharBuf
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Char
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.IO.Buffer.peekCharBuf1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Buffer.ReadBuffer :: GHC.IO.Buffer.BufferState
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Buffer.ReadBuffer! [];

GHC.IO.Buffer.WriteBuffer :: GHC.IO.Buffer.BufferState
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Buffer.WriteBuffer! [];

GHC.IO.Buffer.Buffer
  :: forall e.
     GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.IO.Buffer.Buffer e
[GblId[DataCon],
 Arity=6,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Buffer.Buffer [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1];

