
==================== Tidy Core ====================
2018-03-16 16:03:14.638198799 UTC

Result size of Tidy Core
  = {terms: 536, types: 978, coercions: 91, joins: 0/1}

-- RHS size: {terms: 6, types: 48, coercions: 0, joins: 0/0}
GHC.IO.BufferedIO.newBuffer
  :: forall dev.
     BufferedIO dev =>
     dev -> BufferState -> IO (Buffer Word8)
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLLLLL),U(U,A,A,A,A,A)>,
 RULES: Built in rule for GHC.IO.BufferedIO.newBuffer: "Class op newBuffer"]
GHC.IO.BufferedIO.newBuffer
  = \ (@ dev_a87w0) (v_B1 :: BufferedIO dev_a87w0) ->
      case v_B1 of v_B1
      { GHC.IO.BufferedIO.C:BufferedIO v_B2 v_B3 v_B4 v_B5 v_B6 v_B7 ->
      v_B2
      }

-- RHS size: {terms: 6, types: 48, coercions: 0, joins: 0/0}
fillReadBuffer
  :: forall dev.
     BufferedIO dev =>
     dev -> Buffer Word8 -> IO (Int, Buffer Word8)
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSLLLL),U(A,U,A,A,A,A)>,
 RULES: Built in rule for fillReadBuffer: "Class op fillReadBuffer"]
fillReadBuffer
  = \ (@ dev_a87w0) (v_B1 :: BufferedIO dev_a87w0) ->
      case v_B1 of v_B1
      { GHC.IO.BufferedIO.C:BufferedIO v_B2 v_B3 v_B4 v_B5 v_B6 v_B7 ->
      v_B3
      }

-- RHS size: {terms: 6, types: 48, coercions: 0, joins: 0/0}
fillReadBuffer0
  :: forall dev.
     BufferedIO dev =>
     dev -> Buffer Word8 -> IO (Maybe Int, Buffer Word8)
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSLLL),U(A,A,U,A,A,A)>,
 RULES: Built in rule for fillReadBuffer0: "Class op fillReadBuffer0"]
fillReadBuffer0
  = \ (@ dev_a87w0) (v_B1 :: BufferedIO dev_a87w0) ->
      case v_B1 of v_B1
      { GHC.IO.BufferedIO.C:BufferedIO v_B2 v_B3 v_B4 v_B5 v_B6 v_B7 ->
      v_B4
      }

-- RHS size: {terms: 6, types: 48, coercions: 0, joins: 0/0}
emptyWriteBuffer
  :: forall dev.
     BufferedIO dev =>
     dev -> Buffer Word8 -> IO (Buffer Word8)
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLL),U(A,A,A,U,A,A)>,
 RULES: Built in rule for emptyWriteBuffer: "Class op emptyWriteBuffer"]
emptyWriteBuffer
  = \ (@ dev_a87w0) (v_B1 :: BufferedIO dev_a87w0) ->
      case v_B1 of v_B1
      { GHC.IO.BufferedIO.C:BufferedIO v_B2 v_B3 v_B4 v_B5 v_B6 v_B7 ->
      v_B5
      }

-- RHS size: {terms: 6, types: 48, coercions: 0, joins: 0/0}
flushWriteBuffer
  :: forall dev.
     BufferedIO dev =>
     dev -> Buffer Word8 -> IO (Buffer Word8)
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSL),U(A,A,A,A,U,A)>,
 RULES: Built in rule for flushWriteBuffer: "Class op flushWriteBuffer"]
flushWriteBuffer
  = \ (@ dev_a87w0) (v_B1 :: BufferedIO dev_a87w0) ->
      case v_B1 of v_B1
      { GHC.IO.BufferedIO.C:BufferedIO v_B2 v_B3 v_B4 v_B5 v_B6 v_B7 ->
      v_B6
      }

-- RHS size: {terms: 6, types: 48, coercions: 0, joins: 0/0}
flushWriteBuffer0
  :: forall dev.
     BufferedIO dev =>
     dev -> Buffer Word8 -> IO (Int, Buffer Word8)
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLS),U(A,A,A,A,A,U)>,
 RULES: Built in rule for flushWriteBuffer0: "Class op flushWriteBuffer0"]
flushWriteBuffer0
  = \ (@ dev_a87w0) (v_B1 :: BufferedIO dev_a87w0) ->
      case v_B1 of v_B1
      { GHC.IO.BufferedIO.C:BufferedIO v_B2 v_B3 v_B4 v_B5 v_B6 v_B7 ->
      v_B7
      }

-- RHS size: {terms: 17, types: 26, coercions: 0, joins: 0/0}
$dmemptyWriteBuffer1_r87Lu
  :: forall dev.
     BufferedIO dev =>
     dev
     -> Buffer Word8
     -> State# RealWorld
     -> (# State# RealWorld, Buffer Word8 #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,A><L,A><L,1*U(U,U,A,U,A,A)><S,U>,
 Unf=OtherCon []]
$dmemptyWriteBuffer1_r87Lu
  = \ (@ dev_a87w0)
      _ [Occ=Dead]
      _ [Occ=Dead]
      (buf_a87w2 :: Buffer Word8)
      (s_i7IAV :: State# RealWorld) ->
      (# s_i7IAV,
         case buf_a87w2 of
         { Buffer dt_d87E5 dt1_d87E6 ds_d87DC dt2_d87E7 dt3_d87E8
                  dt4_d87E9 ->
         GHC.IO.Buffer.Buffer
           @ Word8
           dt_d87E5
           dt1_d87E6
           GHC.IO.Buffer.WriteBuffer
           dt2_d87E7
           0#
           0#
         } #)

-- RHS size: {terms: 1, types: 0, coercions: 15, joins: 0/0}
GHC.IO.BufferedIO.$dmemptyWriteBuffer
  :: forall dev.
     BufferedIO dev =>
     dev -> Buffer Word8 -> IO (Buffer Word8)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,A><L,A><L,1*U(U,U,A,U,A,A)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=False)
         Tmpl= (\ (@ dev_X87wG)
                  _ [Occ=Dead]
                  _ [Occ=Dead]
                  (buf_X87wL [Occ=Once!] :: Buffer Word8)
                  (s_i7IAV [Occ=Once] :: State# RealWorld) ->
                  (# s_i7IAV,
                     case buf_X87wL of
                     { Buffer dt_d87E5 [Occ=Once] dt1_d87E6 [Occ=Once] _ [Occ=Dead]
                              dt2_d87E7 [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                     GHC.IO.Buffer.$WBuffer
                       @ Word8
                       (GHC.ForeignPtr.ForeignPtr @ Word8 dt_d87E5 dt1_d87E6)
                       GHC.IO.Buffer.WriteBuffer
                       (GHC.Types.I# dt2_d87E7)
                       (GHC.Types.I# 0#)
                       (GHC.Types.I# 0#)
                     } #))
               `cast` (forall (dev :: <*>_N).
                       <BufferedIO dev>_R
                       ->_R <dev>_R
                       ->_R <Buffer Word8>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Buffer Word8>_R)
                       :: (forall dev.
                           BufferedIO dev =>
                           dev
                           -> Buffer Word8
                           -> State# RealWorld
                           -> (# State# RealWorld, Buffer Word8 #) :: *)
                          ~R# (forall dev.
                               BufferedIO dev =>
                               dev -> Buffer Word8 -> IO (Buffer Word8) :: *))}]
GHC.IO.BufferedIO.$dmemptyWriteBuffer
  = $dmemptyWriteBuffer1_r87Lu
    `cast` (forall (dev :: <*>_N).
            <BufferedIO dev>_R
            ->_R <dev>_R
            ->_R <Buffer Word8>_R
            ->_R Sym (GHC.Types.N:IO[0] <Buffer Word8>_R)
            :: (forall dev.
                BufferedIO dev =>
                dev
                -> Buffer Word8
                -> State# RealWorld
                -> (# State# RealWorld, Buffer Word8 #) :: *)
               ~R# (forall dev.
                    BufferedIO dev =>
                    dev -> Buffer Word8 -> IO (Buffer Word8) :: *))

-- RHS size: {terms: 45, types: 46, coercions: 2, joins: 0/0}
GHC.IO.BufferedIO.$wreadBuf [InlPrag=NOUSERINLINE[0]]
  :: forall dev.
     RawIO dev =>
     dev
     -> Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> BufferState
     -> Int#
     -> Int#
     -> Int#
     -> State# RealWorld
     -> (# State# RealWorld, (Int, Buffer Word8) #)
[GblId,
 Arity=9,
 Caf=NoCafRefs,
 Str=<S(C(C(C(C(S(SL)))))LLL),1*U(1*C1(C1(C1(C1(U(U,U(U)))))),A,A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 0 0 0 0 0 0 0 0] 123 30}]
GHC.IO.BufferedIO.$wreadBuf
  = \ (@ dev_s87Ia)
      (w_s87Ib :: RawIO dev_s87Ia)
      (w1_s87Ic :: dev_s87Ia)
      (ww_s87Ih :: Addr#)
      (ww1_s87Ii :: GHC.ForeignPtr.ForeignPtrContents)
      (ww2_s87Ij :: BufferState)
      (ww3_s87Ik :: Int#)
      (ww4_s87Il :: Int#)
      (ww5_s87Im :: Int#)
      (w2_s87Ie :: State# RealWorld) ->
      case ((read
               @ dev_s87Ia
               w_s87Ib
               w1_s87Ic
               (GHC.Ptr.Ptr @ Word8 (plusAddr# ww_s87Ih ww5_s87Im))
               (GHC.Types.I# (-# ww3_s87Ik ww5_s87Im)))
            `cast` (GHC.Types.N:IO[0] <Int>_R
                    :: (IO Int :: *)
                       ~R# (State# RealWorld -> (# State# RealWorld, Int #) :: *)))
             w2_s87Ie
      of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      case touch#
             @ 'LiftedRep
             @ GHC.ForeignPtr.ForeignPtrContents
             ww1_s87Ii
             ipv_i7IAy
      of s'_a7ILd
      { __DEFAULT ->
      (# s'_a7ILd,
         (ipv1_i7IAz,
          case ipv1_i7IAz of { I# y_i7MX5 ->
          GHC.IO.Buffer.Buffer
            @ Word8
            ww_s87Ih
            ww1_s87Ii
            ww2_s87Ij
            ww3_s87Ik
            ww4_s87Il
            (+# ww5_s87Im y_i7MX5)
          }) #)
      }
      }

-- RHS size: {terms: 18, types: 18, coercions: 0, joins: 0/0}
GHC.IO.BufferedIO.readBuf1 [InlPrag=NOUSERINLINE[0]]
  :: forall dev.
     RawIO dev =>
     dev
     -> Buffer Word8
     -> State# RealWorld
     -> (# State# RealWorld, (Int, Buffer Word8) #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(C(C(C(C(S(SL)))))LLL),1*U(1*C1(C1(C1(C1(U(U,U(U)))))),A,A,A)><L,U><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ dev_s87Ia)
                 (w_s87Ib [Occ=Once] :: RawIO dev_s87Ia)
                 (w1_s87Ic [Occ=Once] :: dev_s87Ia)
                 (w2_s87Id [Occ=Once!] :: Buffer Word8)
                 (w3_s87Ie [Occ=Once] :: State# RealWorld) ->
                 case w2_s87Id of
                 { Buffer ww1_s87Ih [Occ=Once] ww2_s87Ii [Occ=Once]
                          ww3_s87Ij [Occ=Once] ww4_s87Ik [Occ=Once] ww5_s87Il [Occ=Once]
                          ww6_s87Im [Occ=Once] ->
                 GHC.IO.BufferedIO.$wreadBuf
                   @ dev_s87Ia
                   w_s87Ib
                   w1_s87Ic
                   ww1_s87Ih
                   ww2_s87Ii
                   ww3_s87Ij
                   ww4_s87Ik
                   ww5_s87Il
                   ww6_s87Im
                   w3_s87Ie
                 }}]
GHC.IO.BufferedIO.readBuf1
  = \ (@ dev_s87Ia)
      (w_s87Ib :: RawIO dev_s87Ia)
      (w1_s87Ic :: dev_s87Ia)
      (w2_s87Id :: Buffer Word8)
      (w3_s87Ie :: State# RealWorld) ->
      case w2_s87Id of
      { Buffer ww1_s87Ih ww2_s87Ii ww3_s87Ij ww4_s87Ik ww5_s87Il
               ww6_s87Im ->
      GHC.IO.BufferedIO.$wreadBuf
        @ dev_s87Ia
        w_s87Ib
        w1_s87Ic
        ww1_s87Ih
        ww2_s87Ii
        ww3_s87Ij
        ww4_s87Ik
        ww5_s87Il
        ww6_s87Im
        w3_s87Ie
      }

-- RHS size: {terms: 1, types: 0, coercions: 17, joins: 0/0}
readBuf
  :: forall dev.
     RawIO dev =>
     dev -> Buffer Word8 -> IO (Int, Buffer Word8)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(C(C(C(C(S(SL)))))LLL),1*U(1*C1(C1(C1(C1(U(U,U(U)))))),A,A,A)><L,U><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.BufferedIO.readBuf1
               `cast` (forall (dev :: <*>_N).
                       <RawIO dev>_R
                       ->_R <dev>_R
                       ->_R <Buffer Word8>_R
                       ->_R Sym (GHC.Types.N:IO[0] <(Int, Buffer Word8)>_R)
                       :: (forall dev.
                           RawIO dev =>
                           dev
                           -> Buffer Word8
                           -> State# RealWorld
                           -> (# State# RealWorld, (Int, Buffer Word8) #) :: *)
                          ~R# (forall dev.
                               RawIO dev =>
                               dev -> Buffer Word8 -> IO (Int, Buffer Word8) :: *))}]
readBuf
  = GHC.IO.BufferedIO.readBuf1
    `cast` (forall (dev :: <*>_N).
            <RawIO dev>_R
            ->_R <dev>_R
            ->_R <Buffer Word8>_R
            ->_R Sym (GHC.Types.N:IO[0] <(Int, Buffer Word8)>_R)
            :: (forall dev.
                RawIO dev =>
                dev
                -> Buffer Word8
                -> State# RealWorld
                -> (# State# RealWorld, (Int, Buffer Word8) #) :: *)
               ~R# (forall dev.
                    RawIO dev =>
                    dev -> Buffer Word8 -> IO (Int, Buffer Word8) :: *))

-- RHS size: {terms: 60, types: 70, coercions: 3, joins: 0/0}
GHC.IO.BufferedIO.$wreadBufNonBlocking [InlPrag=NOUSERINLINE[0]]
  :: forall dev.
     RawIO dev =>
     dev
     -> Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> BufferState
     -> Int#
     -> Int#
     -> Int#
     -> State# RealWorld
     -> (# State# RealWorld, (Maybe Int, Buffer Word8) #)
[GblId,
 Arity=9,
 Caf=NoCafRefs,
 Str=<S(LC(C(C(C(S(SS)))))LL),1*U(A,1*C1(C1(C1(C1(U(U,1*U))))),A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 0 0 0 0 0 0 0 0] 163 60}]
GHC.IO.BufferedIO.$wreadBufNonBlocking
  = \ (@ dev_s87Ip)
      (w_s87Iq :: RawIO dev_s87Ip)
      (w1_s87Ir :: dev_s87Ip)
      (ww_s87Iw :: Addr#)
      (ww1_s87Ix :: GHC.ForeignPtr.ForeignPtrContents)
      (ww2_s87Iy :: BufferState)
      (ww3_s87Iz :: Int#)
      (ww4_s87IA :: Int#)
      (ww5_s87IB :: Int#)
      (w2_s87It :: State# RealWorld) ->
      case ((readNonBlocking
               @ dev_s87Ip
               w_s87Iq
               w1_s87Ir
               (GHC.Ptr.Ptr @ Word8 (plusAddr# ww_s87Iw ww5_s87IB))
               (GHC.Types.I# (-# ww3_s87Iz ww5_s87IB)))
            `cast` (GHC.Types.N:IO[0] <Maybe Int>_R
                    :: (IO (Maybe Int) :: *)
                       ~R# (State# RealWorld -> (# State# RealWorld, Maybe Int #) :: *)))
             w2_s87It
      of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      case touch#
             @ 'LiftedRep
             @ GHC.ForeignPtr.ForeignPtrContents
             ww1_s87Ix
             ipv_i7IAy
      of s'_a7ILd
      { __DEFAULT ->
      case ipv1_i7IAz of wild_XU {
        Nothing ->
          (# s'_a7ILd,
             (GHC.Base.Nothing @ Int,
              GHC.IO.Buffer.Buffer
                @ Word8
                ww_s87Iw
                ww1_s87Ix
                ww2_s87Iy
                ww3_s87Iz
                ww4_s87IA
                ww5_s87IB) #);
        Just n_a87wh ->
          (# s'_a7ILd,
             (wild_XU,
              case n_a87wh of { I# y_i7MX5 ->
              GHC.IO.Buffer.Buffer
                @ Word8
                ww_s87Iw
                ww1_s87Ix
                ww2_s87Iy
                ww3_s87Iz
                ww4_s87IA
                (+# ww5_s87IB y_i7MX5)
              }) #)
      }
      }
      }

-- RHS size: {terms: 18, types: 18, coercions: 0, joins: 0/0}
GHC.IO.BufferedIO.readBufNonBlocking1 [InlPrag=NOUSERINLINE[0]]
  :: forall dev.
     RawIO dev =>
     dev
     -> Buffer Word8
     -> State# RealWorld
     -> (# State# RealWorld, (Maybe Int, Buffer Word8) #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(LC(C(C(C(S(SS)))))LL),1*U(A,1*C1(C1(C1(C1(U(U,1*U))))),A,A)><L,U><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ dev_s87Ip)
                 (w_s87Iq [Occ=Once] :: RawIO dev_s87Ip)
                 (w1_s87Ir [Occ=Once] :: dev_s87Ip)
                 (w2_s87Is [Occ=Once!] :: Buffer Word8)
                 (w3_s87It [Occ=Once] :: State# RealWorld) ->
                 case w2_s87Is of
                 { Buffer ww1_s87Iw [Occ=Once] ww2_s87Ix [Occ=Once]
                          ww3_s87Iy [Occ=Once] ww4_s87Iz [Occ=Once] ww5_s87IA [Occ=Once]
                          ww6_s87IB [Occ=Once] ->
                 GHC.IO.BufferedIO.$wreadBufNonBlocking
                   @ dev_s87Ip
                   w_s87Iq
                   w1_s87Ir
                   ww1_s87Iw
                   ww2_s87Ix
                   ww3_s87Iy
                   ww4_s87Iz
                   ww5_s87IA
                   ww6_s87IB
                   w3_s87It
                 }}]
GHC.IO.BufferedIO.readBufNonBlocking1
  = \ (@ dev_s87Ip)
      (w_s87Iq :: RawIO dev_s87Ip)
      (w1_s87Ir :: dev_s87Ip)
      (w2_s87Is :: Buffer Word8)
      (w3_s87It :: State# RealWorld) ->
      case w2_s87Is of
      { Buffer ww1_s87Iw ww2_s87Ix ww3_s87Iy ww4_s87Iz ww5_s87IA
               ww6_s87IB ->
      GHC.IO.BufferedIO.$wreadBufNonBlocking
        @ dev_s87Ip
        w_s87Iq
        w1_s87Ir
        ww1_s87Iw
        ww2_s87Ix
        ww3_s87Iy
        ww4_s87Iz
        ww5_s87IA
        ww6_s87IB
        w3_s87It
      }

-- RHS size: {terms: 1, types: 0, coercions: 18, joins: 0/0}
readBufNonBlocking
  :: forall dev.
     RawIO dev =>
     dev -> Buffer Word8 -> IO (Maybe Int, Buffer Word8)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(LC(C(C(C(S(SS)))))LL),1*U(A,1*C1(C1(C1(C1(U(U,1*U))))),A,A)><L,U><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.BufferedIO.readBufNonBlocking1
               `cast` (forall (dev :: <*>_N).
                       <RawIO dev>_R
                       ->_R <dev>_R
                       ->_R <Buffer Word8>_R
                       ->_R Sym (GHC.Types.N:IO[0] <(Maybe Int, Buffer Word8)>_R)
                       :: (forall dev.
                           RawIO dev =>
                           dev
                           -> Buffer Word8
                           -> State# RealWorld
                           -> (# State# RealWorld, (Maybe Int, Buffer Word8) #) :: *)
                          ~R# (forall dev.
                               RawIO dev =>
                               dev -> Buffer Word8 -> IO (Maybe Int, Buffer Word8) :: *))}]
readBufNonBlocking
  = GHC.IO.BufferedIO.readBufNonBlocking1
    `cast` (forall (dev :: <*>_N).
            <RawIO dev>_R
            ->_R <dev>_R
            ->_R <Buffer Word8>_R
            ->_R Sym (GHC.Types.N:IO[0] <(Maybe Int, Buffer Word8)>_R)
            :: (forall dev.
                RawIO dev =>
                dev
                -> Buffer Word8
                -> State# RealWorld
                -> (# State# RealWorld, (Maybe Int, Buffer Word8) #) :: *)
               ~R# (forall dev.
                    RawIO dev =>
                    dev -> Buffer Word8 -> IO (Maybe Int, Buffer Word8) :: *))

-- RHS size: {terms: 38, types: 39, coercions: 2, joins: 0/0}
GHC.IO.BufferedIO.$wwriteBuf [InlPrag=NOUSERINLINE[0]]
  :: forall dev.
     RawIO dev =>
     dev
     -> Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> BufferState
     -> Int#
     -> Int#
     -> Int#
     -> State# RealWorld
     -> (# State# RealWorld, Buffer Word8 #)
[GblId,
 Arity=9,
 Caf=NoCafRefs,
 Str=<S(LLC(C(C(C(S(SL)))))L),1*U(A,A,1*C1(C1(C1(C1(U(U,A))))),A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 0 0 0 0 0 0 0 0] 102 30}]
GHC.IO.BufferedIO.$wwriteBuf
  = \ (@ dev_s87IE)
      (w_s87IF :: RawIO dev_s87IE)
      (w1_s87IG :: dev_s87IE)
      (ww_s87IL :: Addr#)
      (ww1_s87IM :: GHC.ForeignPtr.ForeignPtrContents)
      (ww2_s87IN :: BufferState)
      (ww3_s87IO :: Int#)
      (ww4_s87IP :: Int#)
      (ww5_s87IQ :: Int#)
      (w2_s87II :: State# RealWorld) ->
      case ((write
               @ dev_s87IE
               w_s87IF
               w1_s87IG
               (GHC.Ptr.Ptr @ Word8 (plusAddr# ww_s87IL ww4_s87IP))
               (GHC.Types.I# (-# ww5_s87IQ ww4_s87IP)))
            `cast` (GHC.Types.N:IO[0] <()>_R
                    :: (IO () :: *)
                       ~R# (State# RealWorld -> (# State# RealWorld, () #) :: *)))
             w2_s87II
      of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      case touch#
             @ 'LiftedRep
             @ GHC.ForeignPtr.ForeignPtrContents
             ww1_s87IM
             ipv_i7IAy
      of s'_a7ILd
      { __DEFAULT ->
      (# s'_a7ILd,
         GHC.IO.Buffer.Buffer
           @ Word8 ww_s87IL ww1_s87IM ww2_s87IN ww3_s87IO 0# 0# #)
      }
      }

-- RHS size: {terms: 18, types: 18, coercions: 0, joins: 0/0}
GHC.IO.BufferedIO.writeBuf1 [InlPrag=NOUSERINLINE[0]]
  :: forall dev.
     RawIO dev =>
     dev
     -> Buffer Word8
     -> State# RealWorld
     -> (# State# RealWorld, Buffer Word8 #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(LLC(C(C(C(S(SL)))))L),1*U(A,A,1*C1(C1(C1(C1(U(U,A))))),A)><L,U><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ dev_s87IE)
                 (w_s87IF [Occ=Once] :: RawIO dev_s87IE)
                 (w1_s87IG [Occ=Once] :: dev_s87IE)
                 (w2_s87IH [Occ=Once!] :: Buffer Word8)
                 (w3_s87II [Occ=Once] :: State# RealWorld) ->
                 case w2_s87IH of
                 { Buffer ww1_s87IL [Occ=Once] ww2_s87IM [Occ=Once]
                          ww3_s87IN [Occ=Once] ww4_s87IO [Occ=Once] ww5_s87IP [Occ=Once]
                          ww6_s87IQ [Occ=Once] ->
                 GHC.IO.BufferedIO.$wwriteBuf
                   @ dev_s87IE
                   w_s87IF
                   w1_s87IG
                   ww1_s87IL
                   ww2_s87IM
                   ww3_s87IN
                   ww4_s87IO
                   ww5_s87IP
                   ww6_s87IQ
                   w3_s87II
                 }}]
GHC.IO.BufferedIO.writeBuf1
  = \ (@ dev_s87IE)
      (w_s87IF :: RawIO dev_s87IE)
      (w1_s87IG :: dev_s87IE)
      (w2_s87IH :: Buffer Word8)
      (w3_s87II :: State# RealWorld) ->
      case w2_s87IH of
      { Buffer ww1_s87IL ww2_s87IM ww3_s87IN ww4_s87IO ww5_s87IP
               ww6_s87IQ ->
      GHC.IO.BufferedIO.$wwriteBuf
        @ dev_s87IE
        w_s87IF
        w1_s87IG
        ww1_s87IL
        ww2_s87IM
        ww3_s87IN
        ww4_s87IO
        ww5_s87IP
        ww6_s87IQ
        w3_s87II
      }

-- RHS size: {terms: 1, types: 0, coercions: 15, joins: 0/0}
writeBuf
  :: forall dev.
     RawIO dev =>
     dev -> Buffer Word8 -> IO (Buffer Word8)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(LLC(C(C(C(S(SL)))))L),1*U(A,A,1*C1(C1(C1(C1(U(U,A))))),A)><L,U><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.BufferedIO.writeBuf1
               `cast` (forall (dev :: <*>_N).
                       <RawIO dev>_R
                       ->_R <dev>_R
                       ->_R <Buffer Word8>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Buffer Word8>_R)
                       :: (forall dev.
                           RawIO dev =>
                           dev
                           -> Buffer Word8
                           -> State# RealWorld
                           -> (# State# RealWorld, Buffer Word8 #) :: *)
                          ~R# (forall dev.
                               RawIO dev =>
                               dev -> Buffer Word8 -> IO (Buffer Word8) :: *))}]
writeBuf
  = GHC.IO.BufferedIO.writeBuf1
    `cast` (forall (dev :: <*>_N).
            <RawIO dev>_R
            ->_R <dev>_R
            ->_R <Buffer Word8>_R
            ->_R Sym (GHC.Types.N:IO[0] <Buffer Word8>_R)
            :: (forall dev.
                RawIO dev =>
                dev
                -> Buffer Word8
                -> State# RealWorld
                -> (# State# RealWorld, Buffer Word8 #) :: *)
               ~R# (forall dev.
                    RawIO dev =>
                    dev -> Buffer Word8 -> IO (Buffer Word8) :: *))

-- RHS size: {terms: 60, types: 49, coercions: 2, joins: 0/1}
GHC.IO.BufferedIO.$wwriteBufNonBlocking [InlPrag=NOUSERINLINE[0]]
  :: forall dev.
     RawIO dev =>
     dev
     -> Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> BufferState
     -> Int#
     -> Int#
     -> Int#
     -> State# RealWorld
     -> (# State# RealWorld, (Int, Buffer Word8) #)
[GblId,
 Arity=9,
 Caf=NoCafRefs,
 Str=<S(LLLC(C(C(C(S(SL)))))),1*U(A,A,A,1*C1(C1(C1(C1(U(U,U(U)))))))><L,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 0 0 0 0 0 0 0 0] 154 30}]
GHC.IO.BufferedIO.$wwriteBufNonBlocking
  = \ (@ dev_s87IT)
      (w_s87IU :: RawIO dev_s87IT)
      (w1_s87IV :: dev_s87IT)
      (ww_s87J0 :: Addr#)
      (ww1_s87J1 :: GHC.ForeignPtr.ForeignPtrContents)
      (ww2_s87J2 :: BufferState)
      (ww3_s87J3 :: Int#)
      (ww4_s87J4 :: Int#)
      (ww5_s87J5 :: Int#)
      (w2_s87IX :: State# RealWorld) ->
      case ((writeNonBlocking
               @ dev_s87IT
               w_s87IU
               w1_s87IV
               (GHC.Ptr.Ptr @ Word8 (plusAddr# ww_s87J0 ww4_s87J4))
               (GHC.Types.I# (-# ww5_s87J5 ww4_s87J4)))
            `cast` (GHC.Types.N:IO[0] <Int>_R
                    :: (IO Int :: *)
                       ~R# (State# RealWorld -> (# State# RealWorld, Int #) :: *)))
             w2_s87IX
      of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      case touch#
             @ 'LiftedRep
             @ GHC.ForeignPtr.ForeignPtrContents
             ww1_s87J1
             ipv_i7IAy
      of s'_a7ILd
      { __DEFAULT ->
      (# s'_a7ILd,
         (ipv1_i7IAz,
          case ipv1_i7IAz of { I# y_i7MX5 ->
          let {
            x_a22G [Dmd=<S,U>] :: Int#
            [LclId]
            x_a22G = +# ww4_s87J4 y_i7MX5 } in
          case ==# x_a22G ww5_s87J5 of {
            __DEFAULT ->
              GHC.IO.Buffer.Buffer
                @ Word8 ww_s87J0 ww1_s87J1 ww2_s87J2 ww3_s87J3 x_a22G ww5_s87J5;
            1# ->
              GHC.IO.Buffer.Buffer
                @ Word8 ww_s87J0 ww1_s87J1 ww2_s87J2 ww3_s87J3 0# 0#
          }
          }) #)
      }
      }

-- RHS size: {terms: 18, types: 18, coercions: 0, joins: 0/0}
GHC.IO.BufferedIO.writeBufNonBlocking1 [InlPrag=NOUSERINLINE[0]]
  :: forall dev.
     RawIO dev =>
     dev
     -> Buffer Word8
     -> State# RealWorld
     -> (# State# RealWorld, (Int, Buffer Word8) #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(LLLC(C(C(C(S(SL)))))),1*U(A,A,A,1*C1(C1(C1(C1(U(U,U(U)))))))><L,U><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ dev_s87IT)
                 (w_s87IU [Occ=Once] :: RawIO dev_s87IT)
                 (w1_s87IV [Occ=Once] :: dev_s87IT)
                 (w2_s87IW [Occ=Once!] :: Buffer Word8)
                 (w3_s87IX [Occ=Once] :: State# RealWorld) ->
                 case w2_s87IW of
                 { Buffer ww1_s87J0 [Occ=Once] ww2_s87J1 [Occ=Once]
                          ww3_s87J2 [Occ=Once] ww4_s87J3 [Occ=Once] ww5_s87J4 [Occ=Once]
                          ww6_s87J5 [Occ=Once] ->
                 GHC.IO.BufferedIO.$wwriteBufNonBlocking
                   @ dev_s87IT
                   w_s87IU
                   w1_s87IV
                   ww1_s87J0
                   ww2_s87J1
                   ww3_s87J2
                   ww4_s87J3
                   ww5_s87J4
                   ww6_s87J5
                   w3_s87IX
                 }}]
GHC.IO.BufferedIO.writeBufNonBlocking1
  = \ (@ dev_s87IT)
      (w_s87IU :: RawIO dev_s87IT)
      (w1_s87IV :: dev_s87IT)
      (w2_s87IW :: Buffer Word8)
      (w3_s87IX :: State# RealWorld) ->
      case w2_s87IW of
      { Buffer ww1_s87J0 ww2_s87J1 ww3_s87J2 ww4_s87J3 ww5_s87J4
               ww6_s87J5 ->
      GHC.IO.BufferedIO.$wwriteBufNonBlocking
        @ dev_s87IT
        w_s87IU
        w1_s87IV
        ww1_s87J0
        ww2_s87J1
        ww3_s87J2
        ww4_s87J3
        ww5_s87J4
        ww6_s87J5
        w3_s87IX
      }

-- RHS size: {terms: 1, types: 0, coercions: 17, joins: 0/0}
writeBufNonBlocking
  :: forall dev.
     RawIO dev =>
     dev -> Buffer Word8 -> IO (Int, Buffer Word8)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(LLLC(C(C(C(S(SL)))))),1*U(A,A,A,1*C1(C1(C1(C1(U(U,U(U)))))))><L,U><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.BufferedIO.writeBufNonBlocking1
               `cast` (forall (dev :: <*>_N).
                       <RawIO dev>_R
                       ->_R <dev>_R
                       ->_R <Buffer Word8>_R
                       ->_R Sym (GHC.Types.N:IO[0] <(Int, Buffer Word8)>_R)
                       :: (forall dev.
                           RawIO dev =>
                           dev
                           -> Buffer Word8
                           -> State# RealWorld
                           -> (# State# RealWorld, (Int, Buffer Word8) #) :: *)
                          ~R# (forall dev.
                               RawIO dev =>
                               dev -> Buffer Word8 -> IO (Int, Buffer Word8) :: *))}]
writeBufNonBlocking
  = GHC.IO.BufferedIO.writeBufNonBlocking1
    `cast` (forall (dev :: <*>_N).
            <RawIO dev>_R
            ->_R <dev>_R
            ->_R <Buffer Word8>_R
            ->_R Sym (GHC.Types.N:IO[0] <(Int, Buffer Word8)>_R)
            :: (forall dev.
                RawIO dev =>
                dev
                -> Buffer Word8
                -> State# RealWorld
                -> (# State# RealWorld, (Int, Buffer Word8) #) :: *)
               ~R# (forall dev.
                    RawIO dev =>
                    dev -> Buffer Word8 -> IO (Int, Buffer Word8) :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.BufferedIO.$trModule4 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.BufferedIO.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.BufferedIO.$trModule3 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.BufferedIO.$trModule3
  = GHC.Types.TrNameS GHC.IO.BufferedIO.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.BufferedIO.$trModule2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 60 0}]
GHC.IO.BufferedIO.$trModule2 = "GHC.IO.BufferedIO"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.BufferedIO.$trModule1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.BufferedIO.$trModule1
  = GHC.Types.TrNameS GHC.IO.BufferedIO.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.IO.BufferedIO.$trModule :: Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.IO.BufferedIO.$trModule
  = GHC.Types.Module
      GHC.IO.BufferedIO.$trModule3 GHC.IO.BufferedIO.$trModule1

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_r87Lv :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep_r87Lv
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcInt (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep1_r87Lw :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep1_r87Lw
  = GHC.Types.KindRepTyConApp
      GHC.Word.$tcWord8 (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep2_r87Lx :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep2_r87Lx
  = GHC.Types.KindRepTyConApp
      GHC.IO.Buffer.$tcBufferState (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep3_r87Ly :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep3_r87Ly
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcConstraint (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep4_r87Lz :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep4_r87Lz
  = GHC.Types.: @ KindRep $krep_r87Lv (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep5_r87LA :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep5_r87LA
  = GHC.Types.KindRepTyConApp GHC.Base.$tcMaybe $krep4_r87Lz

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep6_r87LB :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep6_r87LB
  = GHC.Types.: @ KindRep $krep1_r87Lw (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep7_r87LC :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep7_r87LC
  = GHC.Types.KindRepTyConApp GHC.IO.Buffer.$tcBuffer $krep6_r87LB

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep8_r87LD :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep8_r87LD
  = GHC.Types.: @ KindRep $krep7_r87LC (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep9_r87LE :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep9_r87LE
  = GHC.Types.KindRepTyConApp GHC.Types.$tcIO $krep8_r87LD

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep10_r87LF :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep10_r87LF = GHC.Types.: @ KindRep $krep_r87Lv $krep8_r87LD

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep11_r87LG :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep11_r87LG
  = GHC.Types.KindRepTyConApp GHC.Tuple.$tc(,) $krep10_r87LF

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep12_r87LH :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep12_r87LH
  = GHC.Types.: @ KindRep $krep11_r87LG (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep13_r87LI :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep13_r87LI
  = GHC.Types.KindRepTyConApp GHC.Types.$tcIO $krep12_r87LH

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep14_r87LJ :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep14_r87LJ = GHC.Types.: @ KindRep $krep5_r87LA $krep8_r87LD

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep15_r87LK :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep15_r87LK
  = GHC.Types.KindRepTyConApp GHC.Tuple.$tc(,) $krep14_r87LJ

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep16_r87LL :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep16_r87LL
  = GHC.Types.: @ KindRep $krep15_r87LK (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep17_r87LM :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep17_r87LM
  = GHC.Types.KindRepTyConApp GHC.Types.$tcIO $krep16_r87LL

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep18_r87LN :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep18_r87LN = GHC.Types.KindRepFun $krep2_r87Lx $krep9_r87LE

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep19_r87LO :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep19_r87LO = GHC.Types.KindRepFun $krep7_r87LC $krep9_r87LE

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep20_r87LP :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep20_r87LP = GHC.Types.KindRepFun $krep7_r87LC $krep13_r87LI

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep21_r87LQ :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep21_r87LQ = GHC.Types.KindRepFun $krep7_r87LC $krep17_r87LM

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.IO.BufferedIO.$tcBufferedIO1 [InlPrag=NOUSERINLINE[~]]
  :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.IO.BufferedIO.$tcBufferedIO1
  = GHC.Types.KindRepFun GHC.Types.krep$* $krep3_r87Ly

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$krep22_r87LR :: KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep22_r87LR = GHC.Types.KindRepVar 0#

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep23_r87LS :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep23_r87LS = GHC.Types.KindRepFun $krep22_r87LR $krep21_r87LQ

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep24_r87LT :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep24_r87LT = GHC.Types.KindRepFun $krep22_r87LR $krep20_r87LP

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep25_r87LU :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep25_r87LU = GHC.Types.KindRepFun $krep22_r87LR $krep19_r87LO

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep26_r87LV :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep26_r87LV = GHC.Types.KindRepFun $krep22_r87LR $krep18_r87LN

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.BufferedIO.$tcBufferedIO3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.IO.BufferedIO.$tcBufferedIO3 = "BufferedIO"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.BufferedIO.$tcBufferedIO2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.BufferedIO.$tcBufferedIO2
  = GHC.Types.TrNameS GHC.IO.BufferedIO.$tcBufferedIO3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.IO.BufferedIO.$tcBufferedIO :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.IO.BufferedIO.$tcBufferedIO
  = GHC.Types.TyCon
      17350223970197035200##
      12646105049483783716##
      GHC.IO.BufferedIO.$trModule
      GHC.IO.BufferedIO.$tcBufferedIO2
      0#
      GHC.IO.BufferedIO.$tcBufferedIO1

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep27_r87LW :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep27_r87LW
  = GHC.Types.: @ KindRep $krep22_r87LR (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep28_r87LX :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep28_r87LX
  = GHC.Types.KindRepTyConApp
      GHC.IO.BufferedIO.$tcBufferedIO $krep27_r87LW

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep29_r87LY :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep29_r87LY = GHC.Types.KindRepFun $krep24_r87LT $krep28_r87LX

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep30_r87LZ :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep30_r87LZ = GHC.Types.KindRepFun $krep25_r87LU $krep29_r87LY

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep31_r87M0 :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep31_r87M0 = GHC.Types.KindRepFun $krep25_r87LU $krep30_r87LZ

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep32_r87M1 :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep32_r87M1 = GHC.Types.KindRepFun $krep23_r87LS $krep31_r87M0

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep33_r87M2 :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep33_r87M2 = GHC.Types.KindRepFun $krep24_r87LT $krep32_r87M1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.IO.BufferedIO.$tc'C:BufferedIO1 [InlPrag=NOUSERINLINE[~]]
  :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.IO.BufferedIO.$tc'C:BufferedIO1
  = GHC.Types.KindRepFun $krep26_r87LV $krep33_r87M2

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.BufferedIO.$tc'C:BufferedIO3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.IO.BufferedIO.$tc'C:BufferedIO3 = "'C:BufferedIO"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.BufferedIO.$tc'C:BufferedIO2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.BufferedIO.$tc'C:BufferedIO2
  = GHC.Types.TrNameS GHC.IO.BufferedIO.$tc'C:BufferedIO3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.IO.BufferedIO.$tc'C:BufferedIO :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.IO.BufferedIO.$tc'C:BufferedIO
  = GHC.Types.TyCon
      14745255964277825469##
      12324508286010448901##
      GHC.IO.BufferedIO.$trModule
      GHC.IO.BufferedIO.$tc'C:BufferedIO2
      1#
      GHC.IO.BufferedIO.$tc'C:BufferedIO1


