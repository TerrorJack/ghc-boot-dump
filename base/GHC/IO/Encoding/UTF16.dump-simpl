
==================== Tidy Core ====================
2018-03-16 16:03:48.371538221 UTC

Result size of Tidy Core
  = {terms: 2,755, types: 2,690, coercions: 570, joins: 33/47}

-- RHS size: {terms: 573, types: 405, coercions: 0, joins: 7/11}
GHC.IO.Encoding.UTF16.mkUTF1
  :: Buffer Char
     -> Buffer Word8
     -> State# RealWorld
     -> (# State# RealWorld,
           (CodingProgress, Buffer Char, Buffer Word8) #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(LLLLSS),1*U(U,U,U,U,U,U)><S(LLLLLS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [20 20 0] 695 0}]
GHC.IO.Encoding.UTF16.mkUTF1
  = \ (input_a8E7e :: Buffer Char)
      (output_a8E7i :: Buffer Word8)
      (eta_B1 :: State# RealWorld) ->
      case input_a8E7e of
      { Buffer dt_d8EKJ dt1_d8EKK ds_d8EEf dt2_d8EKL dt3_d8EKM
               dt4_d8EKN ->
      case output_a8E7i of
      { Buffer dt5_d8EKO dt6_d8EKP ds1_d8EEk dt7_d8EKQ dt8_d8EKR
               dt9_d8EKS ->
      let {
        lvl5_s8F7z :: Buffer Char
        [LclId, Unf=OtherCon []]
        lvl5_s8F7z
          = GHC.IO.Buffer.Buffer
              @ Char dt_d8EKJ dt1_d8EKK ds_d8EEf dt2_d8EKL 0# 0# } in
      join {
        exit_X1t [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Char, Buffer Word8) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit_X1t (ww_s8FH6 [OS=OneShot] :: Int#)
                 (ww1_s8FHa [OS=OneShot] :: Int#)
                 (s'_i8rzV [OS=OneShot]
                    :: State# RealWorld
                    Unf=OtherCon [])
          = (# s'_i8rzV,
               (GHC.IO.Encoding.Types.OutputUnderflow,
                case ==# ww_s8FH6 dt4_d8EKN of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Char dt_d8EKJ dt1_d8EKK ds_d8EEf dt2_d8EKL ww_s8FH6 dt4_d8EKN;
                  1# -> lvl5_s8F7z
                },
                GHC.IO.Buffer.Buffer
                  @ Word8
                  dt5_d8EKO
                  dt6_d8EKP
                  ds1_d8EEk
                  dt7_d8EKQ
                  dt8_d8EKR
                  ww1_s8FHa) #) } in
      join {
        exit1_X1x [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Char, Buffer Word8) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit1_X1x (ww_s8FH6 [OS=OneShot] :: Int#)
                  (ww1_s8FHa [OS=OneShot] :: Int#)
                  (s'_i8rzV [OS=OneShot]
                     :: State# RealWorld
                     Unf=OtherCon [])
          = (# s'_i8rzV,
               (GHC.IO.Encoding.Types.InvalidSequence,
                case ==# ww_s8FH6 dt4_d8EKN of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Char dt_d8EKJ dt1_d8EKK ds_d8EEf dt2_d8EKL ww_s8FH6 dt4_d8EKN;
                  1# -> lvl5_s8F7z
                },
                GHC.IO.Buffer.Buffer
                  @ Word8
                  dt5_d8EKO
                  dt6_d8EKP
                  ds1_d8EEk
                  dt7_d8EKQ
                  dt8_d8EKR
                  ww1_s8FHa) #) } in
      join {
        exit2_X1z [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Char, Buffer Word8) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit2_X1z (ww_s8FH6 [OS=OneShot] :: Int#)
                  (ww1_s8FHa [OS=OneShot] :: Int#)
                  (s'_i8rzV [OS=OneShot]
                     :: State# RealWorld
                     Unf=OtherCon [])
          = (# s'_i8rzV,
               (GHC.IO.Encoding.Types.InvalidSequence,
                case ==# ww_s8FH6 dt4_d8EKN of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Char dt_d8EKJ dt1_d8EKK ds_d8EEf dt2_d8EKL ww_s8FH6 dt4_d8EKN;
                  1# -> lvl5_s8F7z
                },
                GHC.IO.Buffer.Buffer
                  @ Word8
                  dt5_d8EKO
                  dt6_d8EKP
                  ds1_d8EEk
                  dt7_d8EKQ
                  dt8_d8EKR
                  ww1_s8FHa) #) } in
      join {
        exit3_X1y [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Char, Buffer Word8) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit3_X1y (ww_s8FH6 [OS=OneShot] :: Int#)
                  (ww1_s8FHa [OS=OneShot] :: Int#)
                  (s'_i8rzV [OS=OneShot]
                     :: State# RealWorld
                     Unf=OtherCon [])
          = (# s'_i8rzV,
               (GHC.IO.Encoding.Types.InvalidSequence,
                case ==# ww_s8FH6 dt4_d8EKN of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Char dt_d8EKJ dt1_d8EKK ds_d8EEf dt2_d8EKL ww_s8FH6 dt4_d8EKN;
                  1# -> lvl5_s8F7z
                },
                GHC.IO.Buffer.Buffer
                  @ Word8
                  dt5_d8EKO
                  dt6_d8EKP
                  ds1_d8EEk
                  dt7_d8EKQ
                  dt8_d8EKR
                  ww1_s8FHa) #) } in
      join {
        exit4_X1q [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Char, Buffer Word8) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit4_X1q (ww_s8FH6 [OS=OneShot] :: Int#)
                  (ww1_s8FHa [OS=OneShot] :: Int#)
                  (w_s8FH3 [OS=OneShot] :: State# RealWorld)
          = (# w_s8FH3,
               (GHC.IO.Encoding.Types.OutputUnderflow,
                case ==# ww_s8FH6 dt4_d8EKN of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Char dt_d8EKJ dt1_d8EKK ds_d8EEf dt2_d8EKL ww_s8FH6 dt4_d8EKN;
                  1# -> lvl5_s8F7z
                },
                GHC.IO.Buffer.Buffer
                  @ Word8
                  dt5_d8EKO
                  dt6_d8EKP
                  ds1_d8EEk
                  dt7_d8EKQ
                  dt8_d8EKR
                  ww1_s8FHa) #) } in
      join {
        exit5_X2Q [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Char, Buffer Word8) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit5_X2Q (ww_s8FH6 [OS=OneShot] :: Int#)
                  (ww1_s8FHa [OS=OneShot] :: Int#)
                  (w_s8FH3 [OS=OneShot] :: State# RealWorld)
          = (# w_s8FH3,
               (GHC.IO.Encoding.Types.InputUnderflow,
                case ==# ww_s8FH6 dt4_d8EKN of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Char dt_d8EKJ dt1_d8EKK ds_d8EEf dt2_d8EKL ww_s8FH6 dt4_d8EKN;
                  1# -> lvl5_s8F7z
                },
                GHC.IO.Buffer.Buffer
                  @ Word8
                  dt5_d8EKO
                  dt6_d8EKP
                  ds1_d8EEk
                  dt7_d8EKQ
                  dt8_d8EKR
                  ww1_s8FHa) #) } in
      joinrec {
        $wloop_s8FHc [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Char, Buffer Word8) #)
        [LclId[JoinId(3)], Arity=3, Str=<S,U><S,U><S,U>, Unf=OtherCon []]
        $wloop_s8FHc (ww_s8FH6 :: Int#)
                     (ww1_s8FHa :: Int#)
                     (w_s8FH3 :: State# RealWorld)
          = case >=# ww_s8FH6 dt4_d8EKN of {
              __DEFAULT ->
                case <# (-# dt7_d8EKQ ww1_s8FHa) 2# of {
                  __DEFAULT ->
                    case readWideCharOffAddr# @ RealWorld dt_d8EKJ ww_s8FH6 w_s8FH3 of
                    { (# ipv_i8rzS, ipv1_i8rzT #) ->
                    case touch#
                           @ 'LiftedRep
                           @ GHC.ForeignPtr.ForeignPtrContents
                           dt1_d8EKK
                           ipv_i8rzS
                    of s'_i8rzV
                    { __DEFAULT ->
                    let {
                      x_s8Fa3 [Dmd=<S,U>] :: Int#
                      [LclId]
                      x_s8Fa3 = ord# ipv1_i8rzT } in
                    case <# x_s8Fa3 65536# of {
                      __DEFAULT ->
                        case <# (-# dt7_d8EKQ ww1_s8FHa) 4# of {
                          __DEFAULT ->
                            let {
                              n1_s8Fa6 [Dmd=<S,U>] :: Int#
                              [LclId]
                              n1_s8Fa6 = -# x_s8Fa3 65536# } in
                            case writeWord8OffAddr#
                                   @ RealWorld
                                   (plusAddr# dt5_d8EKO ww1_s8FHa)
                                   0#
                                   (narrow8Word#
                                      (int2Word# (+# (uncheckedIShiftRA# n1_s8Fa6 18#) 216#)))
                                   s'_i8rzV
                            of s2_i8rGp
                            { __DEFAULT ->
                            case touch#
                                   @ 'LiftedRep
                                   @ GHC.ForeignPtr.ForeignPtrContents
                                   dt6_d8EKP
                                   s2_i8rGp
                            of s'1_i8rGq
                            { __DEFAULT ->
                            case writeWord8OffAddr#
                                   @ RealWorld
                                   (plusAddr# dt5_d8EKO (+# ww1_s8FHa 1#))
                                   0#
                                   (narrow8Word# (int2Word# (uncheckedIShiftRA# n1_s8Fa6 10#)))
                                   s'1_i8rGq
                            of s1_X8rKO
                            { __DEFAULT ->
                            case touch#
                                   @ 'LiftedRep
                                   @ GHC.ForeignPtr.ForeignPtrContents
                                   dt6_d8EKP
                                   s1_X8rKO
                            of s'2_X8rKS
                            { __DEFAULT ->
                            let {
                              n2_s8Fa7 [Dmd=<S,U>] :: Int#
                              [LclId]
                              n2_s8Fa7 = andI# n1_s8Fa6 1023# } in
                            case writeWord8OffAddr#
                                   @ RealWorld
                                   (plusAddr# dt5_d8EKO (+# ww1_s8FHa 2#))
                                   0#
                                   (narrow8Word#
                                      (int2Word# (+# (uncheckedIShiftRA# n2_s8Fa7 8#) 220#)))
                                   s'2_X8rKS
                            of s3_X8rL2
                            { __DEFAULT ->
                            case touch#
                                   @ 'LiftedRep
                                   @ GHC.ForeignPtr.ForeignPtrContents
                                   dt6_d8EKP
                                   s3_X8rL2
                            of s'3_X8rL6
                            { __DEFAULT ->
                            case writeWord8OffAddr#
                                   @ RealWorld
                                   (plusAddr# dt5_d8EKO (+# ww1_s8FHa 3#))
                                   0#
                                   (narrow8Word# (int2Word# n2_s8Fa7))
                                   s'3_X8rL6
                            of s4_X8rLc
                            { __DEFAULT ->
                            case touch#
                                   @ 'LiftedRep
                                   @ GHC.ForeignPtr.ForeignPtrContents
                                   dt6_d8EKP
                                   s4_X8rLc
                            of s'4_X8rLg
                            { __DEFAULT ->
                            jump $wloop_s8FHc (+# ww_s8FH6 1#) (+# ww1_s8FHa 4#) s'4_X8rLg
                            }
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                          1# -> jump exit_X1t ww_s8FH6 ww1_s8FHa s'_i8rzV
                        };
                      1# ->
                        case <=# 55296# x_s8Fa3 of {
                          __DEFAULT ->
                            case <=# 56320# x_s8Fa3 of {
                              __DEFAULT ->
                                case writeWord8OffAddr#
                                       @ RealWorld
                                       (plusAddr# dt5_d8EKO ww1_s8FHa)
                                       0#
                                       (narrow8Word# (int2Word# (uncheckedIShiftRA# x_s8Fa3 8#)))
                                       s'_i8rzV
                                of s2_i8rGp
                                { __DEFAULT ->
                                case touch#
                                       @ 'LiftedRep
                                       @ GHC.ForeignPtr.ForeignPtrContents
                                       dt6_d8EKP
                                       s2_i8rGp
                                of s'1_i8rGq
                                { __DEFAULT ->
                                case writeWord8OffAddr#
                                       @ RealWorld
                                       (plusAddr# dt5_d8EKO (+# ww1_s8FHa 1#))
                                       0#
                                       (narrow8Word# (int2Word# x_s8Fa3))
                                       s'1_i8rGq
                                of s1_X8rKF
                                { __DEFAULT ->
                                case touch#
                                       @ 'LiftedRep
                                       @ GHC.ForeignPtr.ForeignPtrContents
                                       dt6_d8EKP
                                       s1_X8rKF
                                of s'2_X8rKJ
                                { __DEFAULT ->
                                jump $wloop_s8FHc (+# ww_s8FH6 1#) (+# ww1_s8FHa 2#) s'2_X8rKJ
                                }
                                }
                                }
                                };
                              1# ->
                                case <=# x_s8Fa3 57343# of {
                                  __DEFAULT ->
                                    case writeWord8OffAddr#
                                           @ RealWorld
                                           (plusAddr# dt5_d8EKO ww1_s8FHa)
                                           0#
                                           (narrow8Word#
                                              (int2Word# (uncheckedIShiftRA# x_s8Fa3 8#)))
                                           s'_i8rzV
                                    of s2_i8rGp
                                    { __DEFAULT ->
                                    case touch#
                                           @ 'LiftedRep
                                           @ GHC.ForeignPtr.ForeignPtrContents
                                           dt6_d8EKP
                                           s2_i8rGp
                                    of s'1_i8rGq
                                    { __DEFAULT ->
                                    case writeWord8OffAddr#
                                           @ RealWorld
                                           (plusAddr# dt5_d8EKO (+# ww1_s8FHa 1#))
                                           0#
                                           (narrow8Word# (int2Word# x_s8Fa3))
                                           s'1_i8rGq
                                    of s1_X8rKF
                                    { __DEFAULT ->
                                    case touch#
                                           @ 'LiftedRep
                                           @ GHC.ForeignPtr.ForeignPtrContents
                                           dt6_d8EKP
                                           s1_X8rKF
                                    of s'2_X8rKJ
                                    { __DEFAULT ->
                                    jump $wloop_s8FHc (+# ww_s8FH6 1#) (+# ww1_s8FHa 2#) s'2_X8rKJ
                                    }
                                    }
                                    }
                                    };
                                  1# -> jump exit1_X1x ww_s8FH6 ww1_s8FHa s'_i8rzV
                                }
                            };
                          1# ->
                            case <=# x_s8Fa3 56319# of {
                              __DEFAULT ->
                                case <=# 56320# x_s8Fa3 of {
                                  __DEFAULT ->
                                    case writeWord8OffAddr#
                                           @ RealWorld
                                           (plusAddr# dt5_d8EKO ww1_s8FHa)
                                           0#
                                           (narrow8Word#
                                              (int2Word# (uncheckedIShiftRA# x_s8Fa3 8#)))
                                           s'_i8rzV
                                    of s2_i8rGp
                                    { __DEFAULT ->
                                    case touch#
                                           @ 'LiftedRep
                                           @ GHC.ForeignPtr.ForeignPtrContents
                                           dt6_d8EKP
                                           s2_i8rGp
                                    of s'1_i8rGq
                                    { __DEFAULT ->
                                    case writeWord8OffAddr#
                                           @ RealWorld
                                           (plusAddr# dt5_d8EKO (+# ww1_s8FHa 1#))
                                           0#
                                           (narrow8Word# (int2Word# x_s8Fa3))
                                           s'1_i8rGq
                                    of s1_X8rKF
                                    { __DEFAULT ->
                                    case touch#
                                           @ 'LiftedRep
                                           @ GHC.ForeignPtr.ForeignPtrContents
                                           dt6_d8EKP
                                           s1_X8rKF
                                    of s'2_X8rKJ
                                    { __DEFAULT ->
                                    jump $wloop_s8FHc (+# ww_s8FH6 1#) (+# ww1_s8FHa 2#) s'2_X8rKJ
                                    }
                                    }
                                    }
                                    };
                                  1# ->
                                    case <=# x_s8Fa3 57343# of {
                                      __DEFAULT ->
                                        case writeWord8OffAddr#
                                               @ RealWorld
                                               (plusAddr# dt5_d8EKO ww1_s8FHa)
                                               0#
                                               (narrow8Word#
                                                  (int2Word# (uncheckedIShiftRA# x_s8Fa3 8#)))
                                               s'_i8rzV
                                        of s2_i8rGp
                                        { __DEFAULT ->
                                        case touch#
                                               @ 'LiftedRep
                                               @ GHC.ForeignPtr.ForeignPtrContents
                                               dt6_d8EKP
                                               s2_i8rGp
                                        of s'1_i8rGq
                                        { __DEFAULT ->
                                        case writeWord8OffAddr#
                                               @ RealWorld
                                               (plusAddr# dt5_d8EKO (+# ww1_s8FHa 1#))
                                               0#
                                               (narrow8Word# (int2Word# x_s8Fa3))
                                               s'1_i8rGq
                                        of s1_X8rKF
                                        { __DEFAULT ->
                                        case touch#
                                               @ 'LiftedRep
                                               @ GHC.ForeignPtr.ForeignPtrContents
                                               dt6_d8EKP
                                               s1_X8rKF
                                        of s'2_X8rKJ
                                        { __DEFAULT ->
                                        jump $wloop_s8FHc
                                          (+# ww_s8FH6 1#) (+# ww1_s8FHa 2#) s'2_X8rKJ
                                        }
                                        }
                                        }
                                        };
                                      1# -> jump exit2_X1z ww_s8FH6 ww1_s8FHa s'_i8rzV
                                    }
                                };
                              1# -> jump exit3_X1y ww_s8FH6 ww1_s8FHa s'_i8rzV
                            }
                        }
                    }
                    }
                    };
                  1# -> jump exit4_X1q ww_s8FH6 ww1_s8FHa w_s8FH3
                };
              1# -> jump exit5_X2Q ww_s8FH6 ww1_s8FHa w_s8FH3
            }; } in
      jump $wloop_s8FHc dt3_d8EKM dt9_d8EKS eta_B1
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 14, joins: 0/0}
utf16be_encode :: EncodeBuffer
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(LLLLSS),1*U(U,U,U,U,U,U)><S(LLLLLS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.Encoding.UTF16.mkUTF1
               `cast` (<Buffer Char>_R
                       ->_R <Buffer Word8>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(CodingProgress, Buffer Char, Buffer Word8)>_R)
                       :: (Buffer Char
                           -> Buffer Word8
                           -> State# RealWorld
                           -> (# State# RealWorld,
                                 (CodingProgress, Buffer Char, Buffer Word8) #) :: *)
                          ~R# (Buffer Char
                               -> Buffer Word8
                               -> IO (CodingProgress, Buffer Char, Buffer Word8) :: *))}]
utf16be_encode
  = GHC.IO.Encoding.UTF16.mkUTF1
    `cast` (<Buffer Char>_R
            ->_R <Buffer Word8>_R
            ->_R Sym (GHC.Types.N:IO[0]
                          <(CodingProgress, Buffer Char, Buffer Word8)>_R)
            :: (Buffer Char
                -> Buffer Word8
                -> State# RealWorld
                -> (# State# RealWorld,
                      (CodingProgress, Buffer Char, Buffer Word8) #) :: *)
               ~R# (Buffer Char
                    -> Buffer Word8
                    -> IO (CodingProgress, Buffer Char, Buffer Word8) :: *))

-- RHS size: {terms: 573, types: 405, coercions: 0, joins: 7/11}
GHC.IO.Encoding.UTF16.mkUTF16le1
  :: Buffer Char
     -> Buffer Word8
     -> State# RealWorld
     -> (# State# RealWorld,
           (CodingProgress, Buffer Char, Buffer Word8) #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(LLLLSS),1*U(U,U,U,U,U,U)><S(LLLLLS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [20 20 0] 695 0}]
GHC.IO.Encoding.UTF16.mkUTF16le1
  = \ (input_a8E7C :: Buffer Char)
      (output_a8E7G :: Buffer Word8)
      (eta_B1 :: State# RealWorld) ->
      case input_a8E7C of
      { Buffer dt_d8EKk dt1_d8EKl ds_d8ECi dt2_d8EKm dt3_d8EKn
               dt4_d8EKo ->
      case output_a8E7G of
      { Buffer dt5_d8EKp dt6_d8EKq ds1_d8ECn dt7_d8EKr dt8_d8EKs
               dt9_d8EKt ->
      let {
        lvl5_s8F7Y :: Buffer Char
        [LclId, Unf=OtherCon []]
        lvl5_s8F7Y
          = GHC.IO.Buffer.Buffer
              @ Char dt_d8EKk dt1_d8EKl ds_d8ECi dt2_d8EKm 0# 0# } in
      join {
        exit_X1t [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Char, Buffer Word8) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit_X1t (ww_s8FHD [OS=OneShot] :: Int#)
                 (ww1_s8FHH [OS=OneShot] :: Int#)
                 (s'_i8rzV [OS=OneShot]
                    :: State# RealWorld
                    Unf=OtherCon [])
          = (# s'_i8rzV,
               (GHC.IO.Encoding.Types.OutputUnderflow,
                case ==# ww_s8FHD dt4_d8EKo of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Char dt_d8EKk dt1_d8EKl ds_d8ECi dt2_d8EKm ww_s8FHD dt4_d8EKo;
                  1# -> lvl5_s8F7Y
                },
                GHC.IO.Buffer.Buffer
                  @ Word8
                  dt5_d8EKp
                  dt6_d8EKq
                  ds1_d8ECn
                  dt7_d8EKr
                  dt8_d8EKs
                  ww1_s8FHH) #) } in
      join {
        exit1_X1x [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Char, Buffer Word8) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit1_X1x (ww_s8FHD [OS=OneShot] :: Int#)
                  (ww1_s8FHH [OS=OneShot] :: Int#)
                  (s'_i8rzV [OS=OneShot]
                     :: State# RealWorld
                     Unf=OtherCon [])
          = (# s'_i8rzV,
               (GHC.IO.Encoding.Types.InvalidSequence,
                case ==# ww_s8FHD dt4_d8EKo of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Char dt_d8EKk dt1_d8EKl ds_d8ECi dt2_d8EKm ww_s8FHD dt4_d8EKo;
                  1# -> lvl5_s8F7Y
                },
                GHC.IO.Buffer.Buffer
                  @ Word8
                  dt5_d8EKp
                  dt6_d8EKq
                  ds1_d8ECn
                  dt7_d8EKr
                  dt8_d8EKs
                  ww1_s8FHH) #) } in
      join {
        exit2_X1z [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Char, Buffer Word8) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit2_X1z (ww_s8FHD [OS=OneShot] :: Int#)
                  (ww1_s8FHH [OS=OneShot] :: Int#)
                  (s'_i8rzV [OS=OneShot]
                     :: State# RealWorld
                     Unf=OtherCon [])
          = (# s'_i8rzV,
               (GHC.IO.Encoding.Types.InvalidSequence,
                case ==# ww_s8FHD dt4_d8EKo of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Char dt_d8EKk dt1_d8EKl ds_d8ECi dt2_d8EKm ww_s8FHD dt4_d8EKo;
                  1# -> lvl5_s8F7Y
                },
                GHC.IO.Buffer.Buffer
                  @ Word8
                  dt5_d8EKp
                  dt6_d8EKq
                  ds1_d8ECn
                  dt7_d8EKr
                  dt8_d8EKs
                  ww1_s8FHH) #) } in
      join {
        exit3_X1y [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Char, Buffer Word8) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit3_X1y (ww_s8FHD [OS=OneShot] :: Int#)
                  (ww1_s8FHH [OS=OneShot] :: Int#)
                  (s'_i8rzV [OS=OneShot]
                     :: State# RealWorld
                     Unf=OtherCon [])
          = (# s'_i8rzV,
               (GHC.IO.Encoding.Types.InvalidSequence,
                case ==# ww_s8FHD dt4_d8EKo of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Char dt_d8EKk dt1_d8EKl ds_d8ECi dt2_d8EKm ww_s8FHD dt4_d8EKo;
                  1# -> lvl5_s8F7Y
                },
                GHC.IO.Buffer.Buffer
                  @ Word8
                  dt5_d8EKp
                  dt6_d8EKq
                  ds1_d8ECn
                  dt7_d8EKr
                  dt8_d8EKs
                  ww1_s8FHH) #) } in
      join {
        exit4_X1q [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Char, Buffer Word8) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit4_X1q (ww_s8FHD [OS=OneShot] :: Int#)
                  (ww1_s8FHH [OS=OneShot] :: Int#)
                  (w_s8FHA [OS=OneShot] :: State# RealWorld)
          = (# w_s8FHA,
               (GHC.IO.Encoding.Types.OutputUnderflow,
                case ==# ww_s8FHD dt4_d8EKo of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Char dt_d8EKk dt1_d8EKl ds_d8ECi dt2_d8EKm ww_s8FHD dt4_d8EKo;
                  1# -> lvl5_s8F7Y
                },
                GHC.IO.Buffer.Buffer
                  @ Word8
                  dt5_d8EKp
                  dt6_d8EKq
                  ds1_d8ECn
                  dt7_d8EKr
                  dt8_d8EKs
                  ww1_s8FHH) #) } in
      join {
        exit5_X2Q [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Char, Buffer Word8) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit5_X2Q (ww_s8FHD [OS=OneShot] :: Int#)
                  (ww1_s8FHH [OS=OneShot] :: Int#)
                  (w_s8FHA [OS=OneShot] :: State# RealWorld)
          = (# w_s8FHA,
               (GHC.IO.Encoding.Types.InputUnderflow,
                case ==# ww_s8FHD dt4_d8EKo of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Char dt_d8EKk dt1_d8EKl ds_d8ECi dt2_d8EKm ww_s8FHD dt4_d8EKo;
                  1# -> lvl5_s8F7Y
                },
                GHC.IO.Buffer.Buffer
                  @ Word8
                  dt5_d8EKp
                  dt6_d8EKq
                  ds1_d8ECn
                  dt7_d8EKr
                  dt8_d8EKs
                  ww1_s8FHH) #) } in
      joinrec {
        $wloop_s8FHJ [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Char, Buffer Word8) #)
        [LclId[JoinId(3)], Arity=3, Str=<S,U><S,U><S,U>, Unf=OtherCon []]
        $wloop_s8FHJ (ww_s8FHD :: Int#)
                     (ww1_s8FHH :: Int#)
                     (w_s8FHA :: State# RealWorld)
          = case >=# ww_s8FHD dt4_d8EKo of {
              __DEFAULT ->
                case <# (-# dt7_d8EKr ww1_s8FHH) 2# of {
                  __DEFAULT ->
                    case readWideCharOffAddr# @ RealWorld dt_d8EKk ww_s8FHD w_s8FHA of
                    { (# ipv_i8rzS, ipv1_i8rzT #) ->
                    case touch#
                           @ 'LiftedRep
                           @ GHC.ForeignPtr.ForeignPtrContents
                           dt1_d8EKl
                           ipv_i8rzS
                    of s'_i8rzV
                    { __DEFAULT ->
                    let {
                      x_s8FaQ [Dmd=<S,U>] :: Int#
                      [LclId]
                      x_s8FaQ = ord# ipv1_i8rzT } in
                    case <# x_s8FaQ 65536# of {
                      __DEFAULT ->
                        case <# (-# dt7_d8EKr ww1_s8FHH) 4# of {
                          __DEFAULT ->
                            let {
                              n1_s8FaT [Dmd=<S,U>] :: Int#
                              [LclId]
                              n1_s8FaT = -# x_s8FaQ 65536# } in
                            case writeWord8OffAddr#
                                   @ RealWorld
                                   (plusAddr# dt5_d8EKp ww1_s8FHH)
                                   0#
                                   (narrow8Word# (int2Word# (uncheckedIShiftRA# n1_s8FaT 10#)))
                                   s'_i8rzV
                            of s2_i8rGp
                            { __DEFAULT ->
                            case touch#
                                   @ 'LiftedRep
                                   @ GHC.ForeignPtr.ForeignPtrContents
                                   dt6_d8EKq
                                   s2_i8rGp
                            of s'1_i8rGq
                            { __DEFAULT ->
                            case writeWord8OffAddr#
                                   @ RealWorld
                                   (plusAddr# dt5_d8EKp (+# ww1_s8FHH 1#))
                                   0#
                                   (narrow8Word#
                                      (int2Word# (+# (uncheckedIShiftRA# n1_s8FaT 18#) 216#)))
                                   s'1_i8rGq
                            of s1_X8rL1
                            { __DEFAULT ->
                            case touch#
                                   @ 'LiftedRep
                                   @ GHC.ForeignPtr.ForeignPtrContents
                                   dt6_d8EKq
                                   s1_X8rL1
                            of s'2_X8rL5
                            { __DEFAULT ->
                            let {
                              n2_s8FaU [Dmd=<S,U>] :: Int#
                              [LclId]
                              n2_s8FaU = andI# n1_s8FaT 1023# } in
                            case writeWord8OffAddr#
                                   @ RealWorld
                                   (plusAddr# dt5_d8EKp (+# ww1_s8FHH 2#))
                                   0#
                                   (narrow8Word# (int2Word# n2_s8FaU))
                                   s'2_X8rL5
                            of s3_X8rLb
                            { __DEFAULT ->
                            case touch#
                                   @ 'LiftedRep
                                   @ GHC.ForeignPtr.ForeignPtrContents
                                   dt6_d8EKq
                                   s3_X8rLb
                            of s'3_X8rLf
                            { __DEFAULT ->
                            case writeWord8OffAddr#
                                   @ RealWorld
                                   (plusAddr# dt5_d8EKp (+# ww1_s8FHH 3#))
                                   0#
                                   (narrow8Word#
                                      (int2Word# (+# (uncheckedIShiftRA# n2_s8FaU 8#) 220#)))
                                   s'3_X8rLf
                            of s4_X8rLp
                            { __DEFAULT ->
                            case touch#
                                   @ 'LiftedRep
                                   @ GHC.ForeignPtr.ForeignPtrContents
                                   dt6_d8EKq
                                   s4_X8rLp
                            of s'4_X8rLt
                            { __DEFAULT ->
                            jump $wloop_s8FHJ (+# ww_s8FHD 1#) (+# ww1_s8FHH 4#) s'4_X8rLt
                            }
                            }
                            }
                            }
                            }
                            }
                            }
                            };
                          1# -> jump exit_X1t ww_s8FHD ww1_s8FHH s'_i8rzV
                        };
                      1# ->
                        case <=# 55296# x_s8FaQ of {
                          __DEFAULT ->
                            case <=# 56320# x_s8FaQ of {
                              __DEFAULT ->
                                case writeWord8OffAddr#
                                       @ RealWorld
                                       (plusAddr# dt5_d8EKp ww1_s8FHH)
                                       0#
                                       (narrow8Word# (int2Word# x_s8FaQ))
                                       s'_i8rzV
                                of s2_i8rGp
                                { __DEFAULT ->
                                case touch#
                                       @ 'LiftedRep
                                       @ GHC.ForeignPtr.ForeignPtrContents
                                       dt6_d8EKq
                                       s2_i8rGp
                                of s'1_i8rGq
                                { __DEFAULT ->
                                case writeWord8OffAddr#
                                       @ RealWorld
                                       (plusAddr# dt5_d8EKp (+# ww1_s8FHH 1#))
                                       0#
                                       (narrow8Word# (int2Word# (uncheckedIShiftRA# x_s8FaQ 8#)))
                                       s'1_i8rGq
                                of s1_X8rKS
                                { __DEFAULT ->
                                case touch#
                                       @ 'LiftedRep
                                       @ GHC.ForeignPtr.ForeignPtrContents
                                       dt6_d8EKq
                                       s1_X8rKS
                                of s'2_X8rKW
                                { __DEFAULT ->
                                jump $wloop_s8FHJ (+# ww_s8FHD 1#) (+# ww1_s8FHH 2#) s'2_X8rKW
                                }
                                }
                                }
                                };
                              1# ->
                                case <=# x_s8FaQ 57343# of {
                                  __DEFAULT ->
                                    case writeWord8OffAddr#
                                           @ RealWorld
                                           (plusAddr# dt5_d8EKp ww1_s8FHH)
                                           0#
                                           (narrow8Word# (int2Word# x_s8FaQ))
                                           s'_i8rzV
                                    of s2_i8rGp
                                    { __DEFAULT ->
                                    case touch#
                                           @ 'LiftedRep
                                           @ GHC.ForeignPtr.ForeignPtrContents
                                           dt6_d8EKq
                                           s2_i8rGp
                                    of s'1_i8rGq
                                    { __DEFAULT ->
                                    case writeWord8OffAddr#
                                           @ RealWorld
                                           (plusAddr# dt5_d8EKp (+# ww1_s8FHH 1#))
                                           0#
                                           (narrow8Word#
                                              (int2Word# (uncheckedIShiftRA# x_s8FaQ 8#)))
                                           s'1_i8rGq
                                    of s1_X8rKS
                                    { __DEFAULT ->
                                    case touch#
                                           @ 'LiftedRep
                                           @ GHC.ForeignPtr.ForeignPtrContents
                                           dt6_d8EKq
                                           s1_X8rKS
                                    of s'2_X8rKW
                                    { __DEFAULT ->
                                    jump $wloop_s8FHJ (+# ww_s8FHD 1#) (+# ww1_s8FHH 2#) s'2_X8rKW
                                    }
                                    }
                                    }
                                    };
                                  1# -> jump exit1_X1x ww_s8FHD ww1_s8FHH s'_i8rzV
                                }
                            };
                          1# ->
                            case <=# x_s8FaQ 56319# of {
                              __DEFAULT ->
                                case <=# 56320# x_s8FaQ of {
                                  __DEFAULT ->
                                    case writeWord8OffAddr#
                                           @ RealWorld
                                           (plusAddr# dt5_d8EKp ww1_s8FHH)
                                           0#
                                           (narrow8Word# (int2Word# x_s8FaQ))
                                           s'_i8rzV
                                    of s2_i8rGp
                                    { __DEFAULT ->
                                    case touch#
                                           @ 'LiftedRep
                                           @ GHC.ForeignPtr.ForeignPtrContents
                                           dt6_d8EKq
                                           s2_i8rGp
                                    of s'1_i8rGq
                                    { __DEFAULT ->
                                    case writeWord8OffAddr#
                                           @ RealWorld
                                           (plusAddr# dt5_d8EKp (+# ww1_s8FHH 1#))
                                           0#
                                           (narrow8Word#
                                              (int2Word# (uncheckedIShiftRA# x_s8FaQ 8#)))
                                           s'1_i8rGq
                                    of s1_X8rKS
                                    { __DEFAULT ->
                                    case touch#
                                           @ 'LiftedRep
                                           @ GHC.ForeignPtr.ForeignPtrContents
                                           dt6_d8EKq
                                           s1_X8rKS
                                    of s'2_X8rKW
                                    { __DEFAULT ->
                                    jump $wloop_s8FHJ (+# ww_s8FHD 1#) (+# ww1_s8FHH 2#) s'2_X8rKW
                                    }
                                    }
                                    }
                                    };
                                  1# ->
                                    case <=# x_s8FaQ 57343# of {
                                      __DEFAULT ->
                                        case writeWord8OffAddr#
                                               @ RealWorld
                                               (plusAddr# dt5_d8EKp ww1_s8FHH)
                                               0#
                                               (narrow8Word# (int2Word# x_s8FaQ))
                                               s'_i8rzV
                                        of s2_i8rGp
                                        { __DEFAULT ->
                                        case touch#
                                               @ 'LiftedRep
                                               @ GHC.ForeignPtr.ForeignPtrContents
                                               dt6_d8EKq
                                               s2_i8rGp
                                        of s'1_i8rGq
                                        { __DEFAULT ->
                                        case writeWord8OffAddr#
                                               @ RealWorld
                                               (plusAddr# dt5_d8EKp (+# ww1_s8FHH 1#))
                                               0#
                                               (narrow8Word#
                                                  (int2Word# (uncheckedIShiftRA# x_s8FaQ 8#)))
                                               s'1_i8rGq
                                        of s1_X8rKS
                                        { __DEFAULT ->
                                        case touch#
                                               @ 'LiftedRep
                                               @ GHC.ForeignPtr.ForeignPtrContents
                                               dt6_d8EKq
                                               s1_X8rKS
                                        of s'2_X8rKW
                                        { __DEFAULT ->
                                        jump $wloop_s8FHJ
                                          (+# ww_s8FHD 1#) (+# ww1_s8FHH 2#) s'2_X8rKW
                                        }
                                        }
                                        }
                                        };
                                      1# -> jump exit2_X1z ww_s8FHD ww1_s8FHH s'_i8rzV
                                    }
                                };
                              1# -> jump exit3_X1y ww_s8FHD ww1_s8FHH s'_i8rzV
                            }
                        }
                    }
                    }
                    };
                  1# -> jump exit4_X1q ww_s8FHD ww1_s8FHH w_s8FHA
                };
              1# -> jump exit5_X2Q ww_s8FHD ww1_s8FHH w_s8FHA
            }; } in
      jump $wloop_s8FHJ dt3_d8EKn dt9_d8EKt eta_B1
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 14, joins: 0/0}
utf16le_encode :: EncodeBuffer
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(LLLLSS),1*U(U,U,U,U,U,U)><S(LLLLLS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.Encoding.UTF16.mkUTF16le1
               `cast` (<Buffer Char>_R
                       ->_R <Buffer Word8>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(CodingProgress, Buffer Char, Buffer Word8)>_R)
                       :: (Buffer Char
                           -> Buffer Word8
                           -> State# RealWorld
                           -> (# State# RealWorld,
                                 (CodingProgress, Buffer Char, Buffer Word8) #) :: *)
                          ~R# (Buffer Char
                               -> Buffer Word8
                               -> IO (CodingProgress, Buffer Char, Buffer Word8) :: *))}]
utf16le_encode
  = GHC.IO.Encoding.UTF16.mkUTF16le1
    `cast` (<Buffer Char>_R
            ->_R <Buffer Word8>_R
            ->_R Sym (GHC.Types.N:IO[0]
                          <(CodingProgress, Buffer Char, Buffer Word8)>_R)
            :: (Buffer Char
                -> Buffer Word8
                -> State# RealWorld
                -> (# State# RealWorld,
                      (CodingProgress, Buffer Char, Buffer Word8) #) :: *)
               ~R# (Buffer Char
                    -> Buffer Word8
                    -> IO (CodingProgress, Buffer Char, Buffer Word8) :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Encoding.UTF16.$trModule4 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.Encoding.UTF16.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Encoding.UTF16.$trModule3 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.Encoding.UTF16.$trModule3
  = GHC.Types.TrNameS GHC.IO.Encoding.UTF16.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Encoding.UTF16.$trModule2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
GHC.IO.Encoding.UTF16.$trModule2 = "GHC.IO.Encoding.UTF16"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Encoding.UTF16.$trModule1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.Encoding.UTF16.$trModule1
  = GHC.Types.TrNameS GHC.IO.Encoding.UTF16.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Encoding.UTF16.$trModule :: Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.IO.Encoding.UTF16.$trModule
  = GHC.Types.Module
      GHC.IO.Encoding.UTF16.$trModule3 GHC.IO.Encoding.UTF16.$trModule1

-- RHS size: {terms: 96, types: 66, coercions: 0, joins: 0/0}
GHC.IO.Encoding.UTF16.$wutf16_encode [InlPrag=NOUSERINLINE[0]]
  :: MutVar# RealWorld Bool
     -> Buffer Char
     -> Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> BufferState
     -> Int#
     -> Int#
     -> Int#
     -> State# RealWorld
     -> (# State# RealWorld,
           (CodingProgress, Buffer Char, Buffer Word8) #)
[GblId,
 Arity=9,
 Caf=NoCafRefs,
 Str=<S,U><L,U(U,U,U,U,U,U)><L,U><L,U><L,U><S,U><L,U><S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0 0 0 0 0 0 0] 153 30}]
GHC.IO.Encoding.UTF16.$wutf16_encode
  = \ (ww_s8FIb :: MutVar# RealWorld Bool)
      (w_s8FI6 :: Buffer Char)
      (ww1_s8FIf :: Addr#)
      (ww2_s8FIg :: GHC.ForeignPtr.ForeignPtrContents)
      (ww3_s8FIh :: BufferState)
      (ww4_s8FIi :: Int#)
      (ww5_s8FIj :: Int#)
      (ww6_s8FIk :: Int#)
      (w1_s8FI8 :: State# RealWorld) ->
      case readMutVar# @ RealWorld @ Bool ww_s8FIb w1_s8FI8 of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      case ipv1_i7IAz of {
        False ->
          case <# (-# ww4_s8FIi ww6_s8FIk) 2# of {
            __DEFAULT ->
              case writeMutVar#
                     @ RealWorld @ Bool ww_s8FIb GHC.Types.True ipv_i7IAy
              of s2#_i7IBe
              { __DEFAULT ->
              case writeWord8OffAddr#
                     @ RealWorld (plusAddr# ww1_s8FIf ww6_s8FIk) 0# 254## s2#_i7IBe
              of s2_i8rGp
              { __DEFAULT ->
              case touch#
                     @ 'LiftedRep @ GHC.ForeignPtr.ForeignPtrContents ww2_s8FIg s2_i8rGp
              of s'_i8rGq
              { __DEFAULT ->
              case writeWord8OffAddr#
                     @ RealWorld
                     (plusAddr# ww1_s8FIf (+# ww6_s8FIk 1#))
                     0#
                     255##
                     s'_i8rGq
              of s1_X8rJL
              { __DEFAULT ->
              case touch#
                     @ 'LiftedRep @ GHC.ForeignPtr.ForeignPtrContents ww2_s8FIg s1_X8rJL
              of s'1_X8rJP
              { __DEFAULT ->
              GHC.IO.Encoding.UTF16.mkUTF1
                w_s8FI6
                (GHC.IO.Buffer.Buffer
                   @ Word8
                   ww1_s8FIf
                   ww2_s8FIg
                   ww3_s8FIh
                   ww4_s8FIi
                   ww5_s8FIj
                   (+# ww6_s8FIk 2#))
                s'1_X8rJP
              }
              }
              }
              }
              };
            1# ->
              (# ipv_i7IAy,
                 (GHC.IO.Encoding.Types.OutputUnderflow, w_s8FI6,
                  GHC.IO.Buffer.Buffer
                    @ Word8
                    ww1_s8FIf
                    ww2_s8FIg
                    ww3_s8FIh
                    ww4_s8FIi
                    ww5_s8FIj
                    ww6_s8FIk) #)
          };
        True ->
          GHC.IO.Encoding.UTF16.mkUTF1
            w_s8FI6
            (GHC.IO.Buffer.Buffer
               @ Word8
               ww1_s8FIf
               ww2_s8FIg
               ww3_s8FIh
               ww4_s8FIi
               ww5_s8FIj
               ww6_s8FIk)
            ipv_i7IAy
      }
      }

-- RHS size: {terms: 20, types: 22, coercions: 2, joins: 0/0}
GHC.IO.Encoding.UTF16.utf16_encode1 [InlPrag=NOUSERINLINE[0]]
  :: IORef Bool
     -> Buffer Char
     -> Buffer Word8
     -> State# RealWorld
     -> (# State# RealWorld,
           (CodingProgress, Buffer Char, Buffer Word8) #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><L,U(U,U,U,U,U,U)><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s8FI5 [Occ=Once] :: IORef Bool)
                 (w1_s8FI6 [Occ=Once] :: Buffer Char)
                 (w2_s8FI7 [Occ=Once!] :: Buffer Word8)
                 (w3_s8FI8 [Occ=Once] :: State# RealWorld) ->
                 case w_s8FI5
                      `cast` (GHC.IORef.N:IORef[0] <Bool>_N
                              :: (IORef Bool :: *) ~R# (GHC.STRef.STRef RealWorld Bool :: *))
                 of
                 { GHC.STRef.STRef ww1_s8FIb [Occ=Once] ->
                 case w2_s8FI7 of
                 { Buffer ww3_s8FIf [Occ=Once] ww4_s8FIg [Occ=Once]
                          ww5_s8FIh [Occ=Once] ww6_s8FIi [Occ=Once] ww7_s8FIj [Occ=Once]
                          ww8_s8FIk [Occ=Once] ->
                 GHC.IO.Encoding.UTF16.$wutf16_encode
                   ww1_s8FIb
                   w1_s8FI6
                   ww3_s8FIf
                   ww4_s8FIg
                   ww5_s8FIh
                   ww6_s8FIi
                   ww7_s8FIj
                   ww8_s8FIk
                   w3_s8FI8
                 }
                 }}]
GHC.IO.Encoding.UTF16.utf16_encode1
  = \ (w_s8FI5 :: IORef Bool)
      (w1_s8FI6 :: Buffer Char)
      (w2_s8FI7 :: Buffer Word8)
      (w3_s8FI8 :: State# RealWorld) ->
      case w_s8FI5
           `cast` (GHC.IORef.N:IORef[0] <Bool>_N
                   :: (IORef Bool :: *) ~R# (GHC.STRef.STRef RealWorld Bool :: *))
      of
      { GHC.STRef.STRef ww1_s8FIb ->
      case w2_s8FI7 of
      { Buffer ww3_s8FIf ww4_s8FIg ww5_s8FIh ww6_s8FIi ww7_s8FIj
               ww8_s8FIk ->
      GHC.IO.Encoding.UTF16.$wutf16_encode
        ww1_s8FIb
        w1_s8FI6
        ww3_s8FIf
        ww4_s8FIg
        ww5_s8FIh
        ww6_s8FIi
        ww7_s8FIj
        ww8_s8FIk
        w3_s8FI8
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 17, joins: 0/0}
utf16_encode :: IORef Bool -> EncodeBuffer
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><L,U(U,U,U,U,U,U)><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.Encoding.UTF16.utf16_encode1
               `cast` (<IORef Bool>_R
                       ->_R <Buffer Char>_R
                       ->_R <Buffer Word8>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(CodingProgress, Buffer Char, Buffer Word8)>_R)
                       :: (IORef Bool
                           -> Buffer Char
                           -> Buffer Word8
                           -> State# RealWorld
                           -> (# State# RealWorld,
                                 (CodingProgress, Buffer Char, Buffer Word8) #) :: *)
                          ~R# (IORef Bool
                               -> Buffer Char
                               -> Buffer Word8
                               -> IO (CodingProgress, Buffer Char, Buffer Word8) :: *))}]
utf16_encode
  = GHC.IO.Encoding.UTF16.utf16_encode1
    `cast` (<IORef Bool>_R
            ->_R <Buffer Char>_R
            ->_R <Buffer Word8>_R
            ->_R Sym (GHC.Types.N:IO[0]
                          <(CodingProgress, Buffer Char, Buffer Word8)>_R)
            :: (IORef Bool
                -> Buffer Char
                -> Buffer Word8
                -> State# RealWorld
                -> (# State# RealWorld,
                      (CodingProgress, Buffer Char, Buffer Word8) #) :: *)
               ~R# (IORef Bool
                    -> Buffer Char
                    -> Buffer Word8
                    -> IO (CodingProgress, Buffer Char, Buffer Word8) :: *))

-- RHS size: {terms: 504, types: 471, coercions: 0, joins: 9/12}
GHC.IO.Encoding.UTF16.mkUTF3
  :: Buffer Word8
     -> Buffer Char
     -> State# RealWorld
     -> (# State# RealWorld,
           (CodingProgress, Buffer Word8, Buffer Char) #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(LLLLSL),1*U(U,U,U,U,U,U)><S(LLLSLS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []]
GHC.IO.Encoding.UTF16.mkUTF3
  = \ (input_a8E6Q :: Buffer Word8)
      (output_a8E6U :: Buffer Char)
      (eta_B1 :: State# RealWorld) ->
      case input_a8E6Q of
      { Buffer dt_d8EL8 dt1_d8EL9 ds_d8EG9 dt2_d8ELa dt3_d8ELb
               dt4_d8ELc ->
      case output_a8E6U of
      { Buffer dt5_d8ELd dt6_d8ELe ds1_d8EGe dt7_d8ELf dt8_d8ELg
               dt9_d8ELh ->
      let {
        lvl5_s8F8v :: Buffer Word8
        [LclId, Unf=OtherCon []]
        lvl5_s8F8v
          = GHC.IO.Buffer.Buffer
              @ Word8 dt_d8EL8 dt1_d8EL9 ds_d8EG9 dt2_d8ELa 0# 0# } in
      join {
        exit_X1I [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Word8, Buffer Char) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit_X1I (ww_s8FIs [OS=OneShot] :: Int#)
                 (ww1_s8FIw [OS=OneShot] :: Int#)
                 (s'_X8rKG [OS=OneShot]
                    :: State# RealWorld
                    Unf=OtherCon [])
          = (# s'_X8rKG,
               (GHC.IO.Encoding.Types.InvalidSequence,
                case ==# ww_s8FIs dt4_d8ELc of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Word8 dt_d8EL8 dt1_d8EL9 ds_d8EG9 dt2_d8ELa ww_s8FIs dt4_d8ELc;
                  1# -> lvl5_s8F8v
                },
                GHC.IO.Buffer.Buffer
                  @ Char
                  dt5_d8ELd
                  dt6_d8ELe
                  ds1_d8EGe
                  dt7_d8ELf
                  dt8_d8ELg
                  ww1_s8FIw) #) } in
      join {
        exit1_X1K [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Word8, Buffer Char) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit1_X1K (ww_s8FIs [OS=OneShot] :: Int#)
                  (ww1_s8FIw [OS=OneShot] :: Int#)
                  (s'_X8rKG [OS=OneShot]
                     :: State# RealWorld
                     Unf=OtherCon [])
          = (# s'_X8rKG,
               (GHC.IO.Encoding.Types.InvalidSequence,
                case ==# ww_s8FIs dt4_d8ELc of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Word8 dt_d8EL8 dt1_d8EL9 ds_d8EG9 dt2_d8ELa ww_s8FIs dt4_d8ELc;
                  1# -> lvl5_s8F8v
                },
                GHC.IO.Buffer.Buffer
                  @ Char
                  dt5_d8ELd
                  dt6_d8ELe
                  ds1_d8EGe
                  dt7_d8ELf
                  dt8_d8ELg
                  ww1_s8FIw) #) } in
      join {
        exit2_X1N [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Word8, Buffer Char) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit2_X1N (ww_s8FIs [OS=OneShot] :: Int#)
                  (ww1_s8FIw [OS=OneShot] :: Int#)
                  (s'_X8rKG [OS=OneShot]
                     :: State# RealWorld
                     Unf=OtherCon [])
          = (# s'_X8rKG,
               (GHC.IO.Encoding.Types.InvalidSequence,
                case ==# ww_s8FIs dt4_d8ELc of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Word8 dt_d8EL8 dt1_d8EL9 ds_d8EG9 dt2_d8ELa ww_s8FIs dt4_d8ELc;
                  1# -> lvl5_s8F8v
                },
                GHC.IO.Buffer.Buffer
                  @ Char
                  dt5_d8ELd
                  dt6_d8ELe
                  ds1_d8EGe
                  dt7_d8ELf
                  dt8_d8ELg
                  ww1_s8FIw) #) } in
      join {
        exit3_X1P [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Word8, Buffer Char) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit3_X1P (ww_s8FIs [OS=OneShot] :: Int#)
                  (ww1_s8FIw [OS=OneShot] :: Int#)
                  (s'_X8rKG [OS=OneShot]
                     :: State# RealWorld
                     Unf=OtherCon [])
          = (# s'_X8rKG,
               (GHC.IO.Encoding.Types.InvalidSequence,
                case ==# ww_s8FIs dt4_d8ELc of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Word8 dt_d8EL8 dt1_d8EL9 ds_d8EG9 dt2_d8ELa ww_s8FIs dt4_d8ELc;
                  1# -> lvl5_s8F8v
                },
                GHC.IO.Buffer.Buffer
                  @ Char
                  dt5_d8ELd
                  dt6_d8ELe
                  ds1_d8EGe
                  dt7_d8ELf
                  dt8_d8ELg
                  ww1_s8FIw) #) } in
      join {
        exit4_X1D [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Word8, Buffer Char) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit4_X1D (ww_s8FIs [OS=OneShot] :: Int#)
                  (ww1_s8FIw [OS=OneShot] :: Int#)
                  (s'_X8rK7 [OS=OneShot]
                     :: State# RealWorld
                     Unf=OtherCon [])
          = (# s'_X8rK7,
               (GHC.IO.Encoding.Types.InputUnderflow,
                case ==# ww_s8FIs dt4_d8ELc of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Word8 dt_d8EL8 dt1_d8EL9 ds_d8EG9 dt2_d8ELa ww_s8FIs dt4_d8ELc;
                  1# -> lvl5_s8F8v
                },
                GHC.IO.Buffer.Buffer
                  @ Char
                  dt5_d8ELd
                  dt6_d8ELe
                  ds1_d8EGe
                  dt7_d8ELf
                  dt8_d8ELg
                  ww1_s8FIw) #) } in
      join {
        exit5_X1s [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Word8, Buffer Char) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit5_X1s (ww_s8FIs [OS=OneShot] :: Int#)
                  (ww1_s8FIw [OS=OneShot] :: Int#)
                  (w_s8FIp [OS=OneShot] :: State# RealWorld)
          = (# w_s8FIp,
               (GHC.IO.Encoding.Types.InputUnderflow,
                case ==# ww_s8FIs dt4_d8ELc of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Word8 dt_d8EL8 dt1_d8EL9 ds_d8EG9 dt2_d8ELa ww_s8FIs dt4_d8ELc;
                  1# -> lvl5_s8F8v
                },
                GHC.IO.Buffer.Buffer
                  @ Char
                  dt5_d8ELd
                  dt6_d8ELe
                  ds1_d8EGe
                  dt7_d8ELf
                  dt8_d8ELg
                  ww1_s8FIw) #) } in
      join {
        exit6_X2U [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Word8, Buffer Char) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit6_X2U (ww_s8FIs [OS=OneShot] :: Int#)
                  (ww1_s8FIw [OS=OneShot] :: Int#)
                  (w_s8FIp [OS=OneShot] :: State# RealWorld)
          = (# w_s8FIp,
               (GHC.IO.Encoding.Types.InputUnderflow,
                case ==# ww_s8FIs dt4_d8ELc of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Word8 dt_d8EL8 dt1_d8EL9 ds_d8EG9 dt2_d8ELa ww_s8FIs dt4_d8ELc;
                  1# -> lvl5_s8F8v
                },
                GHC.IO.Buffer.Buffer
                  @ Char
                  dt5_d8ELd
                  dt6_d8ELe
                  ds1_d8EGe
                  dt7_d8ELf
                  dt8_d8ELg
                  ww1_s8FIw) #) } in
      join {
        exit7_X4m [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Word8, Buffer Char) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit7_X4m (ww_s8FIs [OS=OneShot] :: Int#)
                  (ww1_s8FIw [OS=OneShot] :: Int#)
                  (w_s8FIp [OS=OneShot] :: State# RealWorld)
          = (# w_s8FIp,
               (GHC.IO.Encoding.Types.OutputUnderflow,
                case ==# ww_s8FIs dt4_d8ELc of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Word8 dt_d8EL8 dt1_d8EL9 ds_d8EG9 dt2_d8ELa ww_s8FIs dt4_d8ELc;
                  1# -> lvl5_s8F8v
                },
                GHC.IO.Buffer.Buffer
                  @ Char
                  dt5_d8ELd
                  dt6_d8ELe
                  ds1_d8EGe
                  dt7_d8ELf
                  dt8_d8ELg
                  ww1_s8FIw) #) } in
      joinrec {
        $wloop_s8FIy [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Word8, Buffer Char) #)
        [LclId[JoinId(3)], Arity=3, Str=<S,U><S,U><S,U>, Unf=OtherCon []]
        $wloop_s8FIy (ww_s8FIs :: Int#)
                     (ww1_s8FIw :: Int#)
                     (w_s8FIp :: State# RealWorld)
          = case >=# ww1_s8FIw dt7_d8ELf of {
              __DEFAULT ->
                case >=# ww_s8FIs dt4_d8ELc of {
                  __DEFAULT ->
                    case ==# (+# ww_s8FIs 1#) dt4_d8ELc of {
                      __DEFAULT ->
                        case readWord8OffAddr#
                               @ RealWorld (plusAddr# dt_d8EL8 ww_s8FIs) 0# w_s8FIp
                        of
                        { (# ipv_i8rFz, ipv1_i8rFA #) ->
                        case touch#
                               @ 'LiftedRep
                               @ GHC.ForeignPtr.ForeignPtrContents
                               dt1_d8EL9
                               ipv_i8rFz
                        of s'_i8rFC
                        { __DEFAULT ->
                        case readWord8OffAddr#
                               @ RealWorld (plusAddr# dt_d8EL8 (+# ww_s8FIs 1#)) 0# s'_i8rFC
                        of
                        { (# ipv2_X8rK1, ipv3_X8rK3 #) ->
                        case touch#
                               @ 'LiftedRep
                               @ GHC.ForeignPtr.ForeignPtrContents
                               dt1_d8EL9
                               ipv2_X8rK1
                        of s'1_X8rK7
                        { __DEFAULT ->
                        let {
                          x1_s8Fc1 [Dmd=<S,U>] :: Word#
                          [LclId]
                          x1_s8Fc1
                            = narrow16Word#
                                (plusWord#
                                   (narrow16Word# (uncheckedShiftL# ipv3_X8rK3 8#)) ipv1_i8rFA) } in
                        case ltWord# x1_s8Fc1 55296## of {
                          __DEFAULT ->
                            case gtWord# x1_s8Fc1 57343## of {
                              __DEFAULT ->
                                case <# (-# dt4_d8ELc ww_s8FIs) 4# of {
                                  __DEFAULT ->
                                    case readWord8OffAddr#
                                           @ RealWorld
                                           (plusAddr# dt_d8EL8 (+# ww_s8FIs 2#))
                                           0#
                                           s'1_X8rK7
                                    of
                                    { (# ipv4_X8rKq, ipv5_X8rKs #) ->
                                    case touch#
                                           @ 'LiftedRep
                                           @ GHC.ForeignPtr.ForeignPtrContents
                                           dt1_d8EL9
                                           ipv4_X8rKq
                                    of s'2_X8rKw
                                    { __DEFAULT ->
                                    case readWord8OffAddr#
                                           @ RealWorld
                                           (plusAddr# dt_d8EL8 (+# ww_s8FIs 3#))
                                           0#
                                           s'2_X8rKw
                                    of
                                    { (# ipv6_X8rKA, ipv7_X8rKC #) ->
                                    case touch#
                                           @ 'LiftedRep
                                           @ GHC.ForeignPtr.ForeignPtrContents
                                           dt1_d8EL9
                                           ipv6_X8rKA
                                    of s'3_X8rKG
                                    { __DEFAULT ->
                                    case geWord# x1_s8Fc1 55296## of {
                                      __DEFAULT -> jump exit_X1I ww_s8FIs ww1_s8FIw s'3_X8rKG;
                                      1# ->
                                        case leWord# x1_s8Fc1 56319## of {
                                          __DEFAULT -> jump exit1_X1K ww_s8FIs ww1_s8FIw s'3_X8rKG;
                                          1# ->
                                            let {
                                              x2_s8Fc7 [Dmd=<S,U>] :: Word#
                                              [LclId]
                                              x2_s8Fc7
                                                = narrow16Word#
                                                    (plusWord#
                                                       (narrow16Word#
                                                          (uncheckedShiftL# ipv7_X8rKC 8#))
                                                       ipv5_X8rKs) } in
                                            case geWord# x2_s8Fc7 56320## of {
                                              __DEFAULT ->
                                                jump exit2_X1N ww_s8FIs ww1_s8FIw s'3_X8rKG;
                                              1# ->
                                                case leWord# x2_s8Fc7 57343## of {
                                                  __DEFAULT ->
                                                    jump exit3_X1P ww_s8FIs ww1_s8FIw s'3_X8rKG;
                                                  1# ->
                                                    case writeWideCharOffAddr#
                                                           @ RealWorld
                                                           dt5_d8ELd
                                                           ww1_s8FIw
                                                           (chr#
                                                              (+#
                                                                 (+#
                                                                    (uncheckedIShiftL#
                                                                       (-#
                                                                          (word2Int# x1_s8Fc1)
                                                                          55296#)
                                                                       10#)
                                                                    (-#
                                                                       (word2Int# x2_s8Fc7) 56320#))
                                                                 65536#))
                                                           s'3_X8rKG
                                                    of s2_i8ryS
                                                    { __DEFAULT ->
                                                    case touch#
                                                           @ 'LiftedRep
                                                           @ GHC.ForeignPtr.ForeignPtrContents
                                                           dt6_d8ELe
                                                           s2_i8ryS
                                                    of s'4_i8ryT
                                                    { __DEFAULT ->
                                                    jump $wloop_s8FIy
                                                      (+# ww_s8FIs 4#) (+# ww1_s8FIw 1#) s'4_i8ryT
                                                    }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    }
                                    }
                                    }
                                    };
                                  1# -> jump exit4_X1D ww_s8FIs ww1_s8FIw s'1_X8rK7
                                };
                              1# ->
                                case writeWideCharOffAddr#
                                       @ RealWorld
                                       dt5_d8ELd
                                       ww1_s8FIw
                                       (chr# (word2Int# x1_s8Fc1))
                                       s'1_X8rK7
                                of s2_i8ryS
                                { __DEFAULT ->
                                case touch#
                                       @ 'LiftedRep
                                       @ GHC.ForeignPtr.ForeignPtrContents
                                       dt6_d8ELe
                                       s2_i8ryS
                                of s'2_i8ryT
                                { __DEFAULT ->
                                jump $wloop_s8FIy (+# ww_s8FIs 2#) (+# ww1_s8FIw 1#) s'2_i8ryT
                                }
                                }
                            };
                          1# ->
                            case writeWideCharOffAddr#
                                   @ RealWorld
                                   dt5_d8ELd
                                   ww1_s8FIw
                                   (chr# (word2Int# x1_s8Fc1))
                                   s'1_X8rK7
                            of s2_i8ryS
                            { __DEFAULT ->
                            case touch#
                                   @ 'LiftedRep
                                   @ GHC.ForeignPtr.ForeignPtrContents
                                   dt6_d8ELe
                                   s2_i8ryS
                            of s'2_i8ryT
                            { __DEFAULT ->
                            jump $wloop_s8FIy (+# ww_s8FIs 2#) (+# ww1_s8FIw 1#) s'2_i8ryT
                            }
                            }
                        }
                        }
                        }
                        }
                        };
                      1# -> jump exit5_X1s ww_s8FIs ww1_s8FIw w_s8FIp
                    };
                  1# -> jump exit6_X2U ww_s8FIs ww1_s8FIw w_s8FIp
                };
              1# -> jump exit7_X4m ww_s8FIs ww1_s8FIw w_s8FIp
            }; } in
      jump $wloop_s8FIy dt3_d8ELb dt9_d8ELh eta_B1
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 14, joins: 0/0}
utf16le_decode :: DecodeBuffer
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(LLLLSL),1*U(U,U,U,U,U,U)><S(LLLSLS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.Encoding.UTF16.mkUTF3
               `cast` (<Buffer Word8>_R
                       ->_R <Buffer Char>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(CodingProgress, Buffer Word8, Buffer Char)>_R)
                       :: (Buffer Word8
                           -> Buffer Char
                           -> State# RealWorld
                           -> (# State# RealWorld,
                                 (CodingProgress, Buffer Word8, Buffer Char) #) :: *)
                          ~R# (Buffer Word8
                               -> Buffer Char
                               -> IO (CodingProgress, Buffer Word8, Buffer Char) :: *))}]
utf16le_decode
  = GHC.IO.Encoding.UTF16.mkUTF3
    `cast` (<Buffer Word8>_R
            ->_R <Buffer Char>_R
            ->_R Sym (GHC.Types.N:IO[0]
                          <(CodingProgress, Buffer Word8, Buffer Char)>_R)
            :: (Buffer Word8
                -> Buffer Char
                -> State# RealWorld
                -> (# State# RealWorld,
                      (CodingProgress, Buffer Word8, Buffer Char) #) :: *)
               ~R# (Buffer Word8
                    -> Buffer Char
                    -> IO (CodingProgress, Buffer Word8, Buffer Char) :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Encoding.UTF16.mkUTF16le3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.IO.Encoding.UTF16.mkUTF16le3 = "UTF16-LE"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Encoding.UTF16.mkUTF16le2 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.Encoding.UTF16.mkUTF16le2
  = unpackCString# GHC.IO.Encoding.UTF16.mkUTF16le3

-- RHS size: {terms: 4, types: 9, coercions: 0, joins: 0/0}
GHC.IO.Encoding.UTF16.mkUTF2
  :: State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (s_X7IBA [Occ=Once] :: State# RealWorld) ->
                 (# s_X7IBA, GHC.Tuple.() #)}]
GHC.IO.Encoding.UTF16.mkUTF2
  = \ (s_X7IBA :: State# RealWorld) -> (# s_X7IBA, GHC.Tuple.() #)

-- RHS size: {terms: 5, types: 10, coercions: 0, joins: 0/0}
GHC.IO.Encoding.UTF16.mkUTF16be1
  :: () -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,A><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)
         Tmpl= \ _ [Occ=Dead] (eta_B1 [Occ=Once] :: State# RealWorld) ->
                 (# eta_B1, GHC.Tuple.() #)}]
GHC.IO.Encoding.UTF16.mkUTF16be1
  = \ _ [Occ=Dead] (eta_B1 :: State# RealWorld) ->
      (# eta_B1, GHC.Tuple.() #)

-- RHS size: {terms: 23, types: 33, coercions: 88, joins: 0/0}
mkUTF16le :: CodingFailureMode -> TextEncoding
[GblId,
 Arity=1,
 Str=<L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (cfm_a8E6p :: CodingFailureMode) ->
                 GHC.IO.Encoding.Types.TextEncoding
                   @ ()
                   @ ()
                   GHC.IO.Encoding.UTF16.mkUTF16le2
                   ((\ (s_i7IAV [Occ=Once] :: State# RealWorld) ->
                       (# s_i7IAV,
                          GHC.IO.Encoding.Types.BufferCodec
                            @ Word8
                            @ Char
                            @ ()
                            (GHC.IO.Encoding.UTF16.mkUTF3
                             `cast` (<Buffer Word8>_R
                                     ->_R <Buffer Char>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <(CodingProgress, Buffer Word8, Buffer Char)>_R)
                                     :: (Buffer Word8
                                         -> Buffer Char
                                         -> State# RealWorld
                                         -> (# State# RealWorld,
                                               (CodingProgress, Buffer Word8, Buffer Char) #) :: *)
                                        ~R# (Buffer Word8
                                             -> Buffer Char
                                             -> IO
                                                  (CodingProgress, Buffer Word8,
                                                   Buffer Char) :: *)))
                            ((GHC.IO.Encoding.Failure.recoverDecode1 cfm_a8E6p)
                             `cast` (<Buffer Word8>_R
                                     ->_R <Buffer Char>_R
                                     ->_R Sym (GHC.Types.N:IO[0] <(Buffer Word8, Buffer Char)>_R)
                                     :: (Buffer Word8
                                         -> Buffer Char
                                         -> State# RealWorld
                                         -> (# State# RealWorld,
                                               (Buffer Word8, Buffer Char) #) :: *)
                                        ~R# (Buffer Word8
                                             -> Buffer Char
                                             -> IO (Buffer Word8, Buffer Char) :: *)))
                            (GHC.IO.Encoding.UTF16.mkUTF2
                             `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                                     :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                        ~R# (IO () :: *)))
                            (GHC.IO.Encoding.UTF16.mkUTF2
                             `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                                     :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                        ~R# (IO () :: *)))
                            (GHC.IO.Encoding.UTF16.mkUTF16be1
                             `cast` (<()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                                     :: (() -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                                        ~R# (() -> IO () :: *))) #))
                    `cast` (Sym (GHC.Types.N:IO[0] <BufferCodec Word8 Char ()>_R)
                            :: (State# RealWorld
                                -> (# State# RealWorld, BufferCodec Word8 Char () #) :: *)
                               ~R# (IO (BufferCodec Word8 Char ()) :: *)))
                   ((\ (s_i7IAV [Occ=Once] :: State# RealWorld) ->
                       (# s_i7IAV,
                          GHC.IO.Encoding.Types.BufferCodec
                            @ Char
                            @ Word8
                            @ ()
                            (GHC.IO.Encoding.UTF16.mkUTF16le1
                             `cast` (<Buffer Char>_R
                                     ->_R <Buffer Word8>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <(CodingProgress, Buffer Char, Buffer Word8)>_R)
                                     :: (Buffer Char
                                         -> Buffer Word8
                                         -> State# RealWorld
                                         -> (# State# RealWorld,
                                               (CodingProgress, Buffer Char, Buffer Word8) #) :: *)
                                        ~R# (Buffer Char
                                             -> Buffer Word8
                                             -> IO
                                                  (CodingProgress, Buffer Char,
                                                   Buffer Word8) :: *)))
                            ((GHC.IO.Encoding.Failure.recoverEncode1 cfm_a8E6p)
                             `cast` (<Buffer Char>_R
                                     ->_R <Buffer Word8>_R
                                     ->_R Sym (GHC.Types.N:IO[0] <(Buffer Char, Buffer Word8)>_R)
                                     :: (Buffer Char
                                         -> Buffer Word8
                                         -> State# RealWorld
                                         -> (# State# RealWorld,
                                               (Buffer Char, Buffer Word8) #) :: *)
                                        ~R# (Buffer Char
                                             -> Buffer Word8
                                             -> IO (Buffer Char, Buffer Word8) :: *)))
                            (GHC.IO.Encoding.UTF16.mkUTF2
                             `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                                     :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                        ~R# (IO () :: *)))
                            (GHC.IO.Encoding.UTF16.mkUTF2
                             `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                                     :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                        ~R# (IO () :: *)))
                            (GHC.IO.Encoding.UTF16.mkUTF16be1
                             `cast` (<()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                                     :: (() -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                                        ~R# (() -> IO () :: *))) #))
                    `cast` (Sym (GHC.Types.N:IO[0] <BufferCodec Char Word8 ()>_R)
                            :: (State# RealWorld
                                -> (# State# RealWorld, BufferCodec Char Word8 () #) :: *)
                               ~R# (IO (BufferCodec Char Word8 ()) :: *)))}]
mkUTF16le
  = \ (cfm_a8E6p :: CodingFailureMode) ->
      GHC.IO.Encoding.Types.TextEncoding
        @ ()
        @ ()
        GHC.IO.Encoding.UTF16.mkUTF16le2
        ((\ (s_i7IAV :: State# RealWorld) ->
            (# s_i7IAV,
               GHC.IO.Encoding.Types.BufferCodec
                 @ Word8
                 @ Char
                 @ ()
                 (GHC.IO.Encoding.UTF16.mkUTF3
                  `cast` (<Buffer Word8>_R
                          ->_R <Buffer Char>_R
                          ->_R Sym (GHC.Types.N:IO[0]
                                        <(CodingProgress, Buffer Word8, Buffer Char)>_R)
                          :: (Buffer Word8
                              -> Buffer Char
                              -> State# RealWorld
                              -> (# State# RealWorld,
                                    (CodingProgress, Buffer Word8, Buffer Char) #) :: *)
                             ~R# (Buffer Word8
                                  -> Buffer Char
                                  -> IO (CodingProgress, Buffer Word8, Buffer Char) :: *)))
                 ((GHC.IO.Encoding.Failure.recoverDecode1 cfm_a8E6p)
                  `cast` (<Buffer Word8>_R
                          ->_R <Buffer Char>_R
                          ->_R Sym (GHC.Types.N:IO[0] <(Buffer Word8, Buffer Char)>_R)
                          :: (Buffer Word8
                              -> Buffer Char
                              -> State# RealWorld
                              -> (# State# RealWorld, (Buffer Word8, Buffer Char) #) :: *)
                             ~R# (Buffer Word8
                                  -> Buffer Char -> IO (Buffer Word8, Buffer Char) :: *)))
                 (GHC.IO.Encoding.UTF16.mkUTF2
                  `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                          :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                             ~R# (IO () :: *)))
                 (GHC.IO.Encoding.UTF16.mkUTF2
                  `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                          :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                             ~R# (IO () :: *)))
                 (GHC.IO.Encoding.UTF16.mkUTF16be1
                  `cast` (<()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                          :: (() -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                             ~R# (() -> IO () :: *))) #))
         `cast` (Sym (GHC.Types.N:IO[0] <BufferCodec Word8 Char ()>_R)
                 :: (State# RealWorld
                     -> (# State# RealWorld, BufferCodec Word8 Char () #) :: *)
                    ~R# (IO (BufferCodec Word8 Char ()) :: *)))
        ((\ (s_i7IAV :: State# RealWorld) ->
            (# s_i7IAV,
               GHC.IO.Encoding.Types.BufferCodec
                 @ Char
                 @ Word8
                 @ ()
                 (GHC.IO.Encoding.UTF16.mkUTF16le1
                  `cast` (<Buffer Char>_R
                          ->_R <Buffer Word8>_R
                          ->_R Sym (GHC.Types.N:IO[0]
                                        <(CodingProgress, Buffer Char, Buffer Word8)>_R)
                          :: (Buffer Char
                              -> Buffer Word8
                              -> State# RealWorld
                              -> (# State# RealWorld,
                                    (CodingProgress, Buffer Char, Buffer Word8) #) :: *)
                             ~R# (Buffer Char
                                  -> Buffer Word8
                                  -> IO (CodingProgress, Buffer Char, Buffer Word8) :: *)))
                 ((GHC.IO.Encoding.Failure.recoverEncode1 cfm_a8E6p)
                  `cast` (<Buffer Char>_R
                          ->_R <Buffer Word8>_R
                          ->_R Sym (GHC.Types.N:IO[0] <(Buffer Char, Buffer Word8)>_R)
                          :: (Buffer Char
                              -> Buffer Word8
                              -> State# RealWorld
                              -> (# State# RealWorld, (Buffer Char, Buffer Word8) #) :: *)
                             ~R# (Buffer Char
                                  -> Buffer Word8 -> IO (Buffer Char, Buffer Word8) :: *)))
                 (GHC.IO.Encoding.UTF16.mkUTF2
                  `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                          :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                             ~R# (IO () :: *)))
                 (GHC.IO.Encoding.UTF16.mkUTF2
                  `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                          :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                             ~R# (IO () :: *)))
                 (GHC.IO.Encoding.UTF16.mkUTF16be1
                  `cast` (<()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                          :: (() -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                             ~R# (() -> IO () :: *))) #))
         `cast` (Sym (GHC.Types.N:IO[0] <BufferCodec Char Word8 ()>_R)
                 :: (State# RealWorld
                     -> (# State# RealWorld, BufferCodec Char Word8 () #) :: *)
                    ~R# (IO (BufferCodec Char Word8 ()) :: *)))

-- RHS size: {terms: 12, types: 28, coercions: 0, joins: 0/0}
lvl_r8G1B
  :: Buffer Word8
     -> Buffer Char
     -> State# RealWorld
     -> (# State# RealWorld, (Buffer Word8, Buffer Char) #)
[GblId, Arity=3, Str=<B,1*H><B,1*H><B,U>x, Unf=OtherCon []]
lvl_r8G1B
  = \ (input_a8rqp :: Buffer Word8)
      (output_a8rqs :: Buffer Char)
      (eta_B1 :: State# RealWorld) ->
      case input_a8rqp of
      { Buffer dt_d8rDh dt1_d8rDi ds_d8rCu dt2_d8rDj dt3_d8rDk
               dt4_d8rDl ->
      case output_a8rqs of
      { Buffer dt5_d8rDm dt6_d8rDn ds1_d8rCz dt7_d8rDo dt8_d8rDp
               dt9_d8rDq ->
      raiseIO#
        @ GHC.Exception.SomeException
        @ (Buffer Word8, Buffer Char)
        GHC.IO.Encoding.Failure.recoverDecode2
        eta_B1
      }
      }

-- RHS size: {terms: 6, types: 3, coercions: 38, joins: 0/0}
lvl1_r8G1C :: BufferCodec Word8 Char ()
[GblId, Str=m, Unf=OtherCon []]
lvl1_r8G1C
  = GHC.IO.Encoding.Types.BufferCodec
      @ Word8
      @ Char
      @ ()
      (GHC.IO.Encoding.UTF16.mkUTF3
       `cast` (<Buffer Word8>_R
               ->_R <Buffer Char>_R
               ->_R Sym (GHC.Types.N:IO[0]
                             <(CodingProgress, Buffer Word8, Buffer Char)>_R)
               :: (Buffer Word8
                   -> Buffer Char
                   -> State# RealWorld
                   -> (# State# RealWorld,
                         (CodingProgress, Buffer Word8, Buffer Char) #) :: *)
                  ~R# (Buffer Word8
                       -> Buffer Char
                       -> IO (CodingProgress, Buffer Word8, Buffer Char) :: *)))
      (lvl_r8G1B
       `cast` (<Buffer Word8>_R
               ->_R <Buffer Char>_R
               ->_R Sym (GHC.Types.N:IO[0] <(Buffer Word8, Buffer Char)>_R)
               :: (Buffer Word8
                   -> Buffer Char
                   -> State# RealWorld
                   -> (# State# RealWorld, (Buffer Word8, Buffer Char) #) :: *)
                  ~R# (Buffer Word8
                       -> Buffer Char -> IO (Buffer Word8, Buffer Char) :: *)))
      (GHC.IO.Encoding.UTF16.mkUTF2
       `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
               :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                  ~R# (IO () :: *)))
      (GHC.IO.Encoding.UTF16.mkUTF2
       `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
               :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                  ~R# (IO () :: *)))
      (GHC.IO.Encoding.UTF16.mkUTF16be1
       `cast` (<()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
               :: (() -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                  ~R# (() -> IO () :: *)))

-- RHS size: {terms: 4, types: 12, coercions: 0, joins: 0/0}
GHC.IO.Encoding.UTF16.utf16le2
  :: State# RealWorld
     -> (# State# RealWorld, BufferCodec Word8 Char () #)
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (s_i7IAV [Occ=Once] :: State# RealWorld) ->
                 (# s_i7IAV,
                    GHC.IO.Encoding.Types.BufferCodec
                      @ Word8
                      @ Char
                      @ ()
                      (GHC.IO.Encoding.UTF16.mkUTF3
                       `cast` (<Buffer Word8>_R
                               ->_R <Buffer Char>_R
                               ->_R Sym (GHC.Types.N:IO[0]
                                             <(CodingProgress, Buffer Word8, Buffer Char)>_R)
                               :: (Buffer Word8
                                   -> Buffer Char
                                   -> State# RealWorld
                                   -> (# State# RealWorld,
                                         (CodingProgress, Buffer Word8, Buffer Char) #) :: *)
                                  ~R# (Buffer Word8
                                       -> Buffer Char
                                       -> IO (CodingProgress, Buffer Word8, Buffer Char) :: *)))
                      ((GHC.IO.Encoding.Failure.recoverDecode1
                          GHC.IO.Encoding.Failure.ErrorOnCodingFailure)
                       `cast` (<Buffer Word8>_R
                               ->_R <Buffer Char>_R
                               ->_R Sym (GHC.Types.N:IO[0] <(Buffer Word8, Buffer Char)>_R)
                               :: (Buffer Word8
                                   -> Buffer Char
                                   -> State# RealWorld
                                   -> (# State# RealWorld, (Buffer Word8, Buffer Char) #) :: *)
                                  ~R# (Buffer Word8
                                       -> Buffer Char -> IO (Buffer Word8, Buffer Char) :: *)))
                      ((\ (s1_X7IBA [Occ=Once] :: State# RealWorld) ->
                          (# s1_X7IBA, GHC.Tuple.() #))
                       `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                               :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                  ~R# (IO () :: *)))
                      ((\ (s1_X7IBA [Occ=Once] :: State# RealWorld) ->
                          (# s1_X7IBA, GHC.Tuple.() #))
                       `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                               :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                  ~R# (IO () :: *)))
                      ((\ _ [Occ=Dead] (eta_B1 [Occ=Once] :: State# RealWorld) ->
                          (# eta_B1, GHC.Tuple.() #))
                       `cast` (<()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                               :: (() -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                                  ~R# (() -> IO () :: *))) #)}]
GHC.IO.Encoding.UTF16.utf16le2
  = \ (s_i7IAV :: State# RealWorld) -> (# s_i7IAV, lvl1_r8G1C #)

-- RHS size: {terms: 23, types: 44, coercions: 0, joins: 0/0}
GHC.IO.Encoding.UTF16.utf16be2
  :: Buffer Char
     -> Buffer Word8
     -> State# RealWorld
     -> (# State# RealWorld, (Buffer Char, Buffer Word8) #)
[GblId,
 Arity=3,
 Str=<B,1*U(U,U,A,A,U,A)><B,1*H><B,U>x,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (input_a8rqz [Occ=Once!] :: Buffer Char)
                 (output_a8rqC [Occ=Once!] :: Buffer Word8)
                 (eta_B1 [Occ=Once] :: State# RealWorld) ->
                 case input_a8rqz of
                 { Buffer dt_d8rCN [Occ=Once] dt1_d8rCO [Occ=Once] _ [Occ=Dead]
                          _ [Occ=Dead] dt3_d8rCQ [Occ=Once] _ [Occ=Dead] ->
                 case output_a8rqC of
                 { Buffer _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                          _ [Occ=Dead] _ [Occ=Dead] ->
                 case readWideCharOffAddr# @ RealWorld dt_d8rCN dt3_d8rCQ eta_B1 of
                 { (# ipv_i8rzS [Occ=Once], _ [Occ=Dead] #) ->
                 case touch#
                        @ 'LiftedRep
                        @ GHC.ForeignPtr.ForeignPtrContents
                        dt1_d8rCO
                        ipv_i8rzS
                 of s'_i8rzV
                 { __DEFAULT ->
                 raiseIO#
                   @ GHC.Exception.SomeException
                   @ (Buffer Char, Buffer Word8)
                   GHC.IO.Encoding.Failure.recoverEncode2
                   s'_i8rzV
                 }
                 }
                 }
                 }}]
GHC.IO.Encoding.UTF16.utf16be2
  = \ (input_a8rqz :: Buffer Char)
      (output_a8rqC :: Buffer Word8)
      (eta_B1 :: State# RealWorld) ->
      case input_a8rqz of
      { Buffer dt_d8rCN dt1_d8rCO ds_d8rAn dt2_d8rCP dt3_d8rCQ
               dt4_d8rCR ->
      case output_a8rqC of
      { Buffer dt5_d8rCS dt6_d8rCT ds1_d8rAs dt7_d8rCU dt8_d8rCV
               dt9_d8rCW ->
      case readWideCharOffAddr# @ RealWorld dt_d8rCN dt3_d8rCQ eta_B1 of
      { (# ipv_i8rzS, ipv1_i8rzT #) ->
      case touch#
             @ 'LiftedRep
             @ GHC.ForeignPtr.ForeignPtrContents
             dt1_d8rCO
             ipv_i8rzS
      of s'_i8rzV
      { __DEFAULT ->
      raiseIO#
        @ GHC.Exception.SomeException
        @ (Buffer Char, Buffer Word8)
        GHC.IO.Encoding.Failure.recoverEncode2
        s'_i8rzV
      }
      }
      }
      }

-- RHS size: {terms: 6, types: 3, coercions: 38, joins: 0/0}
lvl2_r8G1D :: BufferCodec Char Word8 ()
[GblId, Str=m, Unf=OtherCon []]
lvl2_r8G1D
  = GHC.IO.Encoding.Types.BufferCodec
      @ Char
      @ Word8
      @ ()
      (GHC.IO.Encoding.UTF16.mkUTF16le1
       `cast` (<Buffer Char>_R
               ->_R <Buffer Word8>_R
               ->_R Sym (GHC.Types.N:IO[0]
                             <(CodingProgress, Buffer Char, Buffer Word8)>_R)
               :: (Buffer Char
                   -> Buffer Word8
                   -> State# RealWorld
                   -> (# State# RealWorld,
                         (CodingProgress, Buffer Char, Buffer Word8) #) :: *)
                  ~R# (Buffer Char
                       -> Buffer Word8
                       -> IO (CodingProgress, Buffer Char, Buffer Word8) :: *)))
      (GHC.IO.Encoding.UTF16.utf16be2
       `cast` (<Buffer Char>_R
               ->_R <Buffer Word8>_R
               ->_R Sym (GHC.Types.N:IO[0] <(Buffer Char, Buffer Word8)>_R)
               :: (Buffer Char
                   -> Buffer Word8
                   -> State# RealWorld
                   -> (# State# RealWorld, (Buffer Char, Buffer Word8) #) :: *)
                  ~R# (Buffer Char
                       -> Buffer Word8 -> IO (Buffer Char, Buffer Word8) :: *)))
      (GHC.IO.Encoding.UTF16.mkUTF2
       `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
               :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                  ~R# (IO () :: *)))
      (GHC.IO.Encoding.UTF16.mkUTF2
       `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
               :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                  ~R# (IO () :: *)))
      (GHC.IO.Encoding.UTF16.mkUTF16be1
       `cast` (<()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
               :: (() -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                  ~R# (() -> IO () :: *)))

-- RHS size: {terms: 4, types: 12, coercions: 0, joins: 0/0}
GHC.IO.Encoding.UTF16.utf16le1
  :: State# RealWorld
     -> (# State# RealWorld, BufferCodec Char Word8 () #)
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (s_i7IAV [Occ=Once] :: State# RealWorld) ->
                 (# s_i7IAV,
                    GHC.IO.Encoding.Types.BufferCodec
                      @ Char
                      @ Word8
                      @ ()
                      (GHC.IO.Encoding.UTF16.mkUTF16le1
                       `cast` (<Buffer Char>_R
                               ->_R <Buffer Word8>_R
                               ->_R Sym (GHC.Types.N:IO[0]
                                             <(CodingProgress, Buffer Char, Buffer Word8)>_R)
                               :: (Buffer Char
                                   -> Buffer Word8
                                   -> State# RealWorld
                                   -> (# State# RealWorld,
                                         (CodingProgress, Buffer Char, Buffer Word8) #) :: *)
                                  ~R# (Buffer Char
                                       -> Buffer Word8
                                       -> IO (CodingProgress, Buffer Char, Buffer Word8) :: *)))
                      (GHC.IO.Encoding.UTF16.utf16be2
                       `cast` (<Buffer Char>_R
                               ->_R <Buffer Word8>_R
                               ->_R Sym (GHC.Types.N:IO[0] <(Buffer Char, Buffer Word8)>_R)
                               :: (Buffer Char
                                   -> Buffer Word8
                                   -> State# RealWorld
                                   -> (# State# RealWorld, (Buffer Char, Buffer Word8) #) :: *)
                                  ~R# (Buffer Char
                                       -> Buffer Word8 -> IO (Buffer Char, Buffer Word8) :: *)))
                      ((\ (s1_X7IBA [Occ=Once] :: State# RealWorld) ->
                          (# s1_X7IBA, GHC.Tuple.() #))
                       `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                               :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                  ~R# (IO () :: *)))
                      ((\ (s1_X7IBA [Occ=Once] :: State# RealWorld) ->
                          (# s1_X7IBA, GHC.Tuple.() #))
                       `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                               :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                  ~R# (IO () :: *)))
                      ((\ _ [Occ=Dead] (eta_B1 [Occ=Once] :: State# RealWorld) ->
                          (# eta_B1, GHC.Tuple.() #))
                       `cast` (<()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                               :: (() -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                                  ~R# (() -> IO () :: *))) #)}]
GHC.IO.Encoding.UTF16.utf16le1
  = \ (s_i7IAV :: State# RealWorld) -> (# s_i7IAV, lvl2_r8G1D #)

-- RHS size: {terms: 4, types: 2, coercions: 12, joins: 0/0}
utf16le :: TextEncoding
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 40}]
utf16le
  = GHC.IO.Encoding.Types.TextEncoding
      @ ()
      @ ()
      GHC.IO.Encoding.UTF16.mkUTF16le2
      (GHC.IO.Encoding.UTF16.utf16le2
       `cast` (Sym (GHC.Types.N:IO[0] <BufferCodec Word8 Char ()>_R)
               :: (State# RealWorld
                   -> (# State# RealWorld, BufferCodec Word8 Char () #) :: *)
                  ~R# (IO (BufferCodec Word8 Char ()) :: *)))
      (GHC.IO.Encoding.UTF16.utf16le1
       `cast` (Sym (GHC.Types.N:IO[0] <BufferCodec Char Word8 ()>_R)
               :: (State# RealWorld
                   -> (# State# RealWorld, BufferCodec Char Word8 () #) :: *)
                  ~R# (IO (BufferCodec Char Word8 ()) :: *)))

-- RHS size: {terms: 504, types: 471, coercions: 0, joins: 9/12}
GHC.IO.Encoding.UTF16.mkUTF5
  :: Buffer Word8
     -> Buffer Char
     -> State# RealWorld
     -> (# State# RealWorld,
           (CodingProgress, Buffer Word8, Buffer Char) #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(LLLLSL),1*U(U,U,U,U,U,U)><S(LLLSLS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []]
GHC.IO.Encoding.UTF16.mkUTF5
  = \ (input_a8E6s :: Buffer Word8)
      (output_a8E6w :: Buffer Char)
      (eta_B1 :: State# RealWorld) ->
      case input_a8E6s of
      { Buffer dt_d8ELx dt1_d8ELy ds_d8EI3 dt2_d8ELz dt3_d8ELA
               dt4_d8ELB ->
      case output_a8E6w of
      { Buffer dt5_d8ELC dt6_d8ELD ds1_d8EI8 dt7_d8ELE dt8_d8ELF
               dt9_d8ELG ->
      let {
        lvl5_s8F9a :: Buffer Word8
        [LclId, Unf=OtherCon []]
        lvl5_s8F9a
          = GHC.IO.Buffer.Buffer
              @ Word8 dt_d8ELx dt1_d8ELy ds_d8EI3 dt2_d8ELz 0# 0# } in
      join {
        exit_X1I [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Word8, Buffer Char) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit_X1I (ww_s8FIZ [OS=OneShot] :: Int#)
                 (ww1_s8FJ3 [OS=OneShot] :: Int#)
                 (s'_X8rL1 [OS=OneShot]
                    :: State# RealWorld
                    Unf=OtherCon [])
          = (# s'_X8rL1,
               (GHC.IO.Encoding.Types.InvalidSequence,
                case ==# ww_s8FIZ dt4_d8ELB of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Word8 dt_d8ELx dt1_d8ELy ds_d8EI3 dt2_d8ELz ww_s8FIZ dt4_d8ELB;
                  1# -> lvl5_s8F9a
                },
                GHC.IO.Buffer.Buffer
                  @ Char
                  dt5_d8ELC
                  dt6_d8ELD
                  ds1_d8EI8
                  dt7_d8ELE
                  dt8_d8ELF
                  ww1_s8FJ3) #) } in
      join {
        exit1_X1K [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Word8, Buffer Char) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit1_X1K (ww_s8FIZ [OS=OneShot] :: Int#)
                  (ww1_s8FJ3 [OS=OneShot] :: Int#)
                  (s'_X8rL1 [OS=OneShot]
                     :: State# RealWorld
                     Unf=OtherCon [])
          = (# s'_X8rL1,
               (GHC.IO.Encoding.Types.InvalidSequence,
                case ==# ww_s8FIZ dt4_d8ELB of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Word8 dt_d8ELx dt1_d8ELy ds_d8EI3 dt2_d8ELz ww_s8FIZ dt4_d8ELB;
                  1# -> lvl5_s8F9a
                },
                GHC.IO.Buffer.Buffer
                  @ Char
                  dt5_d8ELC
                  dt6_d8ELD
                  ds1_d8EI8
                  dt7_d8ELE
                  dt8_d8ELF
                  ww1_s8FJ3) #) } in
      join {
        exit2_X1N [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Word8, Buffer Char) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit2_X1N (ww_s8FIZ [OS=OneShot] :: Int#)
                  (ww1_s8FJ3 [OS=OneShot] :: Int#)
                  (s'_X8rL1 [OS=OneShot]
                     :: State# RealWorld
                     Unf=OtherCon [])
          = (# s'_X8rL1,
               (GHC.IO.Encoding.Types.InvalidSequence,
                case ==# ww_s8FIZ dt4_d8ELB of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Word8 dt_d8ELx dt1_d8ELy ds_d8EI3 dt2_d8ELz ww_s8FIZ dt4_d8ELB;
                  1# -> lvl5_s8F9a
                },
                GHC.IO.Buffer.Buffer
                  @ Char
                  dt5_d8ELC
                  dt6_d8ELD
                  ds1_d8EI8
                  dt7_d8ELE
                  dt8_d8ELF
                  ww1_s8FJ3) #) } in
      join {
        exit3_X1P [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Word8, Buffer Char) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit3_X1P (ww_s8FIZ [OS=OneShot] :: Int#)
                  (ww1_s8FJ3 [OS=OneShot] :: Int#)
                  (s'_X8rL1 [OS=OneShot]
                     :: State# RealWorld
                     Unf=OtherCon [])
          = (# s'_X8rL1,
               (GHC.IO.Encoding.Types.InvalidSequence,
                case ==# ww_s8FIZ dt4_d8ELB of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Word8 dt_d8ELx dt1_d8ELy ds_d8EI3 dt2_d8ELz ww_s8FIZ dt4_d8ELB;
                  1# -> lvl5_s8F9a
                },
                GHC.IO.Buffer.Buffer
                  @ Char
                  dt5_d8ELC
                  dt6_d8ELD
                  ds1_d8EI8
                  dt7_d8ELE
                  dt8_d8ELF
                  ww1_s8FJ3) #) } in
      join {
        exit4_X1D [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Word8, Buffer Char) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit4_X1D (ww_s8FIZ [OS=OneShot] :: Int#)
                  (ww1_s8FJ3 [OS=OneShot] :: Int#)
                  (s'_X8rKs [OS=OneShot]
                     :: State# RealWorld
                     Unf=OtherCon [])
          = (# s'_X8rKs,
               (GHC.IO.Encoding.Types.InputUnderflow,
                case ==# ww_s8FIZ dt4_d8ELB of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Word8 dt_d8ELx dt1_d8ELy ds_d8EI3 dt2_d8ELz ww_s8FIZ dt4_d8ELB;
                  1# -> lvl5_s8F9a
                },
                GHC.IO.Buffer.Buffer
                  @ Char
                  dt5_d8ELC
                  dt6_d8ELD
                  ds1_d8EI8
                  dt7_d8ELE
                  dt8_d8ELF
                  ww1_s8FJ3) #) } in
      join {
        exit5_X1s [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Word8, Buffer Char) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit5_X1s (ww_s8FIZ [OS=OneShot] :: Int#)
                  (ww1_s8FJ3 [OS=OneShot] :: Int#)
                  (w_s8FIW [OS=OneShot] :: State# RealWorld)
          = (# w_s8FIW,
               (GHC.IO.Encoding.Types.InputUnderflow,
                case ==# ww_s8FIZ dt4_d8ELB of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Word8 dt_d8ELx dt1_d8ELy ds_d8EI3 dt2_d8ELz ww_s8FIZ dt4_d8ELB;
                  1# -> lvl5_s8F9a
                },
                GHC.IO.Buffer.Buffer
                  @ Char
                  dt5_d8ELC
                  dt6_d8ELD
                  ds1_d8EI8
                  dt7_d8ELE
                  dt8_d8ELF
                  ww1_s8FJ3) #) } in
      join {
        exit6_X2U [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Word8, Buffer Char) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit6_X2U (ww_s8FIZ [OS=OneShot] :: Int#)
                  (ww1_s8FJ3 [OS=OneShot] :: Int#)
                  (w_s8FIW [OS=OneShot] :: State# RealWorld)
          = (# w_s8FIW,
               (GHC.IO.Encoding.Types.InputUnderflow,
                case ==# ww_s8FIZ dt4_d8ELB of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Word8 dt_d8ELx dt1_d8ELy ds_d8EI3 dt2_d8ELz ww_s8FIZ dt4_d8ELB;
                  1# -> lvl5_s8F9a
                },
                GHC.IO.Buffer.Buffer
                  @ Char
                  dt5_d8ELC
                  dt6_d8ELD
                  ds1_d8EI8
                  dt7_d8ELE
                  dt8_d8ELF
                  ww1_s8FJ3) #) } in
      join {
        exit7_X4m [Dmd=<L,C(C1(C1(U(U,U))))>]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Word8, Buffer Char) #)
        [LclId[JoinId(3)], Arity=3, Str=<L,U><L,U><S,U>]
        exit7_X4m (ww_s8FIZ [OS=OneShot] :: Int#)
                  (ww1_s8FJ3 [OS=OneShot] :: Int#)
                  (w_s8FIW [OS=OneShot] :: State# RealWorld)
          = (# w_s8FIW,
               (GHC.IO.Encoding.Types.OutputUnderflow,
                case ==# ww_s8FIZ dt4_d8ELB of {
                  __DEFAULT ->
                    GHC.IO.Buffer.Buffer
                      @ Word8 dt_d8ELx dt1_d8ELy ds_d8EI3 dt2_d8ELz ww_s8FIZ dt4_d8ELB;
                  1# -> lvl5_s8F9a
                },
                GHC.IO.Buffer.Buffer
                  @ Char
                  dt5_d8ELC
                  dt6_d8ELD
                  ds1_d8EI8
                  dt7_d8ELE
                  dt8_d8ELF
                  ww1_s8FJ3) #) } in
      joinrec {
        $wloop_s8FJ5 [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
          :: Int#
             -> Int#
             -> State# RealWorld
             -> (# State# RealWorld,
                   (CodingProgress, Buffer Word8, Buffer Char) #)
        [LclId[JoinId(3)], Arity=3, Str=<S,U><S,U><S,U>, Unf=OtherCon []]
        $wloop_s8FJ5 (ww_s8FIZ :: Int#)
                     (ww1_s8FJ3 :: Int#)
                     (w_s8FIW :: State# RealWorld)
          = case >=# ww1_s8FJ3 dt7_d8ELE of {
              __DEFAULT ->
                case >=# ww_s8FIZ dt4_d8ELB of {
                  __DEFAULT ->
                    case ==# (+# ww_s8FIZ 1#) dt4_d8ELB of {
                      __DEFAULT ->
                        case readWord8OffAddr#
                               @ RealWorld (plusAddr# dt_d8ELx ww_s8FIZ) 0# w_s8FIW
                        of
                        { (# ipv_i8rFz, ipv1_i8rFA #) ->
                        case touch#
                               @ 'LiftedRep
                               @ GHC.ForeignPtr.ForeignPtrContents
                               dt1_d8ELy
                               ipv_i8rFz
                        of s'_i8rFC
                        { __DEFAULT ->
                        case readWord8OffAddr#
                               @ RealWorld (plusAddr# dt_d8ELx (+# ww_s8FIZ 1#)) 0# s'_i8rFC
                        of
                        { (# ipv2_X8rKm, ipv3_X8rKo #) ->
                        case touch#
                               @ 'LiftedRep
                               @ GHC.ForeignPtr.ForeignPtrContents
                               dt1_d8ELy
                               ipv2_X8rKm
                        of s'1_X8rKs
                        { __DEFAULT ->
                        let {
                          x1_s8FcQ [Dmd=<S,U>] :: Word#
                          [LclId]
                          x1_s8FcQ
                            = narrow16Word#
                                (plusWord#
                                   (narrow16Word# (uncheckedShiftL# ipv1_i8rFA 8#)) ipv3_X8rKo) } in
                        case ltWord# x1_s8FcQ 55296## of {
                          __DEFAULT ->
                            case gtWord# x1_s8FcQ 57343## of {
                              __DEFAULT ->
                                case <# (-# dt4_d8ELB ww_s8FIZ) 4# of {
                                  __DEFAULT ->
                                    case readWord8OffAddr#
                                           @ RealWorld
                                           (plusAddr# dt_d8ELx (+# ww_s8FIZ 2#))
                                           0#
                                           s'1_X8rKs
                                    of
                                    { (# ipv4_X8rKL, ipv5_X8rKN #) ->
                                    case touch#
                                           @ 'LiftedRep
                                           @ GHC.ForeignPtr.ForeignPtrContents
                                           dt1_d8ELy
                                           ipv4_X8rKL
                                    of s'2_X8rKR
                                    { __DEFAULT ->
                                    case readWord8OffAddr#
                                           @ RealWorld
                                           (plusAddr# dt_d8ELx (+# ww_s8FIZ 3#))
                                           0#
                                           s'2_X8rKR
                                    of
                                    { (# ipv6_X8rKV, ipv7_X8rKX #) ->
                                    case touch#
                                           @ 'LiftedRep
                                           @ GHC.ForeignPtr.ForeignPtrContents
                                           dt1_d8ELy
                                           ipv6_X8rKV
                                    of s'3_X8rL1
                                    { __DEFAULT ->
                                    case geWord# x1_s8FcQ 55296## of {
                                      __DEFAULT -> jump exit_X1I ww_s8FIZ ww1_s8FJ3 s'3_X8rL1;
                                      1# ->
                                        case leWord# x1_s8FcQ 56319## of {
                                          __DEFAULT -> jump exit1_X1K ww_s8FIZ ww1_s8FJ3 s'3_X8rL1;
                                          1# ->
                                            let {
                                              x2_s8FcW [Dmd=<S,U>] :: Word#
                                              [LclId]
                                              x2_s8FcW
                                                = narrow16Word#
                                                    (plusWord#
                                                       (narrow16Word#
                                                          (uncheckedShiftL# ipv5_X8rKN 8#))
                                                       ipv7_X8rKX) } in
                                            case geWord# x2_s8FcW 56320## of {
                                              __DEFAULT ->
                                                jump exit2_X1N ww_s8FIZ ww1_s8FJ3 s'3_X8rL1;
                                              1# ->
                                                case leWord# x2_s8FcW 57343## of {
                                                  __DEFAULT ->
                                                    jump exit3_X1P ww_s8FIZ ww1_s8FJ3 s'3_X8rL1;
                                                  1# ->
                                                    case writeWideCharOffAddr#
                                                           @ RealWorld
                                                           dt5_d8ELC
                                                           ww1_s8FJ3
                                                           (chr#
                                                              (+#
                                                                 (+#
                                                                    (uncheckedIShiftL#
                                                                       (-#
                                                                          (word2Int# x1_s8FcQ)
                                                                          55296#)
                                                                       10#)
                                                                    (-#
                                                                       (word2Int# x2_s8FcW) 56320#))
                                                                 65536#))
                                                           s'3_X8rL1
                                                    of s2_i8ryS
                                                    { __DEFAULT ->
                                                    case touch#
                                                           @ 'LiftedRep
                                                           @ GHC.ForeignPtr.ForeignPtrContents
                                                           dt6_d8ELD
                                                           s2_i8ryS
                                                    of s'4_i8ryT
                                                    { __DEFAULT ->
                                                    jump $wloop_s8FJ5
                                                      (+# ww_s8FIZ 4#) (+# ww1_s8FJ3 1#) s'4_i8ryT
                                                    }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    }
                                    }
                                    }
                                    };
                                  1# -> jump exit4_X1D ww_s8FIZ ww1_s8FJ3 s'1_X8rKs
                                };
                              1# ->
                                case writeWideCharOffAddr#
                                       @ RealWorld
                                       dt5_d8ELC
                                       ww1_s8FJ3
                                       (chr# (word2Int# x1_s8FcQ))
                                       s'1_X8rKs
                                of s2_i8ryS
                                { __DEFAULT ->
                                case touch#
                                       @ 'LiftedRep
                                       @ GHC.ForeignPtr.ForeignPtrContents
                                       dt6_d8ELD
                                       s2_i8ryS
                                of s'2_i8ryT
                                { __DEFAULT ->
                                jump $wloop_s8FJ5 (+# ww_s8FIZ 2#) (+# ww1_s8FJ3 1#) s'2_i8ryT
                                }
                                }
                            };
                          1# ->
                            case writeWideCharOffAddr#
                                   @ RealWorld
                                   dt5_d8ELC
                                   ww1_s8FJ3
                                   (chr# (word2Int# x1_s8FcQ))
                                   s'1_X8rKs
                            of s2_i8ryS
                            { __DEFAULT ->
                            case touch#
                                   @ 'LiftedRep
                                   @ GHC.ForeignPtr.ForeignPtrContents
                                   dt6_d8ELD
                                   s2_i8ryS
                            of s'2_i8ryT
                            { __DEFAULT ->
                            jump $wloop_s8FJ5 (+# ww_s8FIZ 2#) (+# ww1_s8FJ3 1#) s'2_i8ryT
                            }
                            }
                        }
                        }
                        }
                        }
                        };
                      1# -> jump exit5_X1s ww_s8FIZ ww1_s8FJ3 w_s8FIW
                    };
                  1# -> jump exit6_X2U ww_s8FIZ ww1_s8FJ3 w_s8FIW
                };
              1# -> jump exit7_X4m ww_s8FIZ ww1_s8FJ3 w_s8FIW
            }; } in
      jump $wloop_s8FJ5 dt3_d8ELA dt9_d8ELG eta_B1
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 14, joins: 0/0}
utf16be_decode :: DecodeBuffer
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(LLLLSL),1*U(U,U,U,U,U,U)><S(LLLSLS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.Encoding.UTF16.mkUTF5
               `cast` (<Buffer Word8>_R
                       ->_R <Buffer Char>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(CodingProgress, Buffer Word8, Buffer Char)>_R)
                       :: (Buffer Word8
                           -> Buffer Char
                           -> State# RealWorld
                           -> (# State# RealWorld,
                                 (CodingProgress, Buffer Word8, Buffer Char) #) :: *)
                          ~R# (Buffer Word8
                               -> Buffer Char
                               -> IO (CodingProgress, Buffer Word8, Buffer Char) :: *))}]
utf16be_decode
  = GHC.IO.Encoding.UTF16.mkUTF5
    `cast` (<Buffer Word8>_R
            ->_R <Buffer Char>_R
            ->_R Sym (GHC.Types.N:IO[0]
                          <(CodingProgress, Buffer Word8, Buffer Char)>_R)
            :: (Buffer Word8
                -> Buffer Char
                -> State# RealWorld
                -> (# State# RealWorld,
                      (CodingProgress, Buffer Word8, Buffer Char) #) :: *)
               ~R# (Buffer Word8
                    -> Buffer Char
                    -> IO (CodingProgress, Buffer Word8, Buffer Char) :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Encoding.UTF16.mkUTF16be3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.IO.Encoding.UTF16.mkUTF16be3 = "UTF-16BE"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Encoding.UTF16.mkUTF16be2 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.Encoding.UTF16.mkUTF16be2
  = unpackCString# GHC.IO.Encoding.UTF16.mkUTF16be3

-- RHS size: {terms: 23, types: 33, coercions: 88, joins: 0/0}
mkUTF16be :: CodingFailureMode -> TextEncoding
[GblId,
 Arity=1,
 Str=<L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (cfm_a8E6m :: CodingFailureMode) ->
                 GHC.IO.Encoding.Types.TextEncoding
                   @ ()
                   @ ()
                   GHC.IO.Encoding.UTF16.mkUTF16be2
                   ((\ (s_i7IAV [Occ=Once] :: State# RealWorld) ->
                       (# s_i7IAV,
                          GHC.IO.Encoding.Types.BufferCodec
                            @ Word8
                            @ Char
                            @ ()
                            (GHC.IO.Encoding.UTF16.mkUTF5
                             `cast` (<Buffer Word8>_R
                                     ->_R <Buffer Char>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <(CodingProgress, Buffer Word8, Buffer Char)>_R)
                                     :: (Buffer Word8
                                         -> Buffer Char
                                         -> State# RealWorld
                                         -> (# State# RealWorld,
                                               (CodingProgress, Buffer Word8, Buffer Char) #) :: *)
                                        ~R# (Buffer Word8
                                             -> Buffer Char
                                             -> IO
                                                  (CodingProgress, Buffer Word8,
                                                   Buffer Char) :: *)))
                            ((GHC.IO.Encoding.Failure.recoverDecode1 cfm_a8E6m)
                             `cast` (<Buffer Word8>_R
                                     ->_R <Buffer Char>_R
                                     ->_R Sym (GHC.Types.N:IO[0] <(Buffer Word8, Buffer Char)>_R)
                                     :: (Buffer Word8
                                         -> Buffer Char
                                         -> State# RealWorld
                                         -> (# State# RealWorld,
                                               (Buffer Word8, Buffer Char) #) :: *)
                                        ~R# (Buffer Word8
                                             -> Buffer Char
                                             -> IO (Buffer Word8, Buffer Char) :: *)))
                            (GHC.IO.Encoding.UTF16.mkUTF2
                             `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                                     :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                        ~R# (IO () :: *)))
                            (GHC.IO.Encoding.UTF16.mkUTF2
                             `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                                     :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                        ~R# (IO () :: *)))
                            (GHC.IO.Encoding.UTF16.mkUTF16be1
                             `cast` (<()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                                     :: (() -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                                        ~R# (() -> IO () :: *))) #))
                    `cast` (Sym (GHC.Types.N:IO[0] <BufferCodec Word8 Char ()>_R)
                            :: (State# RealWorld
                                -> (# State# RealWorld, BufferCodec Word8 Char () #) :: *)
                               ~R# (IO (BufferCodec Word8 Char ()) :: *)))
                   ((\ (s_i7IAV [Occ=Once] :: State# RealWorld) ->
                       (# s_i7IAV,
                          GHC.IO.Encoding.Types.BufferCodec
                            @ Char
                            @ Word8
                            @ ()
                            (GHC.IO.Encoding.UTF16.mkUTF1
                             `cast` (<Buffer Char>_R
                                     ->_R <Buffer Word8>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <(CodingProgress, Buffer Char, Buffer Word8)>_R)
                                     :: (Buffer Char
                                         -> Buffer Word8
                                         -> State# RealWorld
                                         -> (# State# RealWorld,
                                               (CodingProgress, Buffer Char, Buffer Word8) #) :: *)
                                        ~R# (Buffer Char
                                             -> Buffer Word8
                                             -> IO
                                                  (CodingProgress, Buffer Char,
                                                   Buffer Word8) :: *)))
                            ((GHC.IO.Encoding.Failure.recoverEncode1 cfm_a8E6m)
                             `cast` (<Buffer Char>_R
                                     ->_R <Buffer Word8>_R
                                     ->_R Sym (GHC.Types.N:IO[0] <(Buffer Char, Buffer Word8)>_R)
                                     :: (Buffer Char
                                         -> Buffer Word8
                                         -> State# RealWorld
                                         -> (# State# RealWorld,
                                               (Buffer Char, Buffer Word8) #) :: *)
                                        ~R# (Buffer Char
                                             -> Buffer Word8
                                             -> IO (Buffer Char, Buffer Word8) :: *)))
                            (GHC.IO.Encoding.UTF16.mkUTF2
                             `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                                     :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                        ~R# (IO () :: *)))
                            (GHC.IO.Encoding.UTF16.mkUTF2
                             `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                                     :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                        ~R# (IO () :: *)))
                            (GHC.IO.Encoding.UTF16.mkUTF16be1
                             `cast` (<()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                                     :: (() -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                                        ~R# (() -> IO () :: *))) #))
                    `cast` (Sym (GHC.Types.N:IO[0] <BufferCodec Char Word8 ()>_R)
                            :: (State# RealWorld
                                -> (# State# RealWorld, BufferCodec Char Word8 () #) :: *)
                               ~R# (IO (BufferCodec Char Word8 ()) :: *)))}]
mkUTF16be
  = \ (cfm_a8E6m :: CodingFailureMode) ->
      GHC.IO.Encoding.Types.TextEncoding
        @ ()
        @ ()
        GHC.IO.Encoding.UTF16.mkUTF16be2
        ((\ (s_i7IAV :: State# RealWorld) ->
            (# s_i7IAV,
               GHC.IO.Encoding.Types.BufferCodec
                 @ Word8
                 @ Char
                 @ ()
                 (GHC.IO.Encoding.UTF16.mkUTF5
                  `cast` (<Buffer Word8>_R
                          ->_R <Buffer Char>_R
                          ->_R Sym (GHC.Types.N:IO[0]
                                        <(CodingProgress, Buffer Word8, Buffer Char)>_R)
                          :: (Buffer Word8
                              -> Buffer Char
                              -> State# RealWorld
                              -> (# State# RealWorld,
                                    (CodingProgress, Buffer Word8, Buffer Char) #) :: *)
                             ~R# (Buffer Word8
                                  -> Buffer Char
                                  -> IO (CodingProgress, Buffer Word8, Buffer Char) :: *)))
                 ((GHC.IO.Encoding.Failure.recoverDecode1 cfm_a8E6m)
                  `cast` (<Buffer Word8>_R
                          ->_R <Buffer Char>_R
                          ->_R Sym (GHC.Types.N:IO[0] <(Buffer Word8, Buffer Char)>_R)
                          :: (Buffer Word8
                              -> Buffer Char
                              -> State# RealWorld
                              -> (# State# RealWorld, (Buffer Word8, Buffer Char) #) :: *)
                             ~R# (Buffer Word8
                                  -> Buffer Char -> IO (Buffer Word8, Buffer Char) :: *)))
                 (GHC.IO.Encoding.UTF16.mkUTF2
                  `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                          :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                             ~R# (IO () :: *)))
                 (GHC.IO.Encoding.UTF16.mkUTF2
                  `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                          :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                             ~R# (IO () :: *)))
                 (GHC.IO.Encoding.UTF16.mkUTF16be1
                  `cast` (<()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                          :: (() -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                             ~R# (() -> IO () :: *))) #))
         `cast` (Sym (GHC.Types.N:IO[0] <BufferCodec Word8 Char ()>_R)
                 :: (State# RealWorld
                     -> (# State# RealWorld, BufferCodec Word8 Char () #) :: *)
                    ~R# (IO (BufferCodec Word8 Char ()) :: *)))
        ((\ (s_i7IAV :: State# RealWorld) ->
            (# s_i7IAV,
               GHC.IO.Encoding.Types.BufferCodec
                 @ Char
                 @ Word8
                 @ ()
                 (GHC.IO.Encoding.UTF16.mkUTF1
                  `cast` (<Buffer Char>_R
                          ->_R <Buffer Word8>_R
                          ->_R Sym (GHC.Types.N:IO[0]
                                        <(CodingProgress, Buffer Char, Buffer Word8)>_R)
                          :: (Buffer Char
                              -> Buffer Word8
                              -> State# RealWorld
                              -> (# State# RealWorld,
                                    (CodingProgress, Buffer Char, Buffer Word8) #) :: *)
                             ~R# (Buffer Char
                                  -> Buffer Word8
                                  -> IO (CodingProgress, Buffer Char, Buffer Word8) :: *)))
                 ((GHC.IO.Encoding.Failure.recoverEncode1 cfm_a8E6m)
                  `cast` (<Buffer Char>_R
                          ->_R <Buffer Word8>_R
                          ->_R Sym (GHC.Types.N:IO[0] <(Buffer Char, Buffer Word8)>_R)
                          :: (Buffer Char
                              -> Buffer Word8
                              -> State# RealWorld
                              -> (# State# RealWorld, (Buffer Char, Buffer Word8) #) :: *)
                             ~R# (Buffer Char
                                  -> Buffer Word8 -> IO (Buffer Char, Buffer Word8) :: *)))
                 (GHC.IO.Encoding.UTF16.mkUTF2
                  `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                          :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                             ~R# (IO () :: *)))
                 (GHC.IO.Encoding.UTF16.mkUTF2
                  `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                          :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                             ~R# (IO () :: *)))
                 (GHC.IO.Encoding.UTF16.mkUTF16be1
                  `cast` (<()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                          :: (() -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                             ~R# (() -> IO () :: *))) #))
         `cast` (Sym (GHC.Types.N:IO[0] <BufferCodec Char Word8 ()>_R)
                 :: (State# RealWorld
                     -> (# State# RealWorld, BufferCodec Char Word8 () #) :: *)
                    ~R# (IO (BufferCodec Char Word8 ()) :: *)))

-- RHS size: {terms: 6, types: 3, coercions: 38, joins: 0/0}
lvl3_r8G1E :: BufferCodec Word8 Char ()
[GblId, Str=m, Unf=OtherCon []]
lvl3_r8G1E
  = GHC.IO.Encoding.Types.BufferCodec
      @ Word8
      @ Char
      @ ()
      (GHC.IO.Encoding.UTF16.mkUTF5
       `cast` (<Buffer Word8>_R
               ->_R <Buffer Char>_R
               ->_R Sym (GHC.Types.N:IO[0]
                             <(CodingProgress, Buffer Word8, Buffer Char)>_R)
               :: (Buffer Word8
                   -> Buffer Char
                   -> State# RealWorld
                   -> (# State# RealWorld,
                         (CodingProgress, Buffer Word8, Buffer Char) #) :: *)
                  ~R# (Buffer Word8
                       -> Buffer Char
                       -> IO (CodingProgress, Buffer Word8, Buffer Char) :: *)))
      (lvl_r8G1B
       `cast` (<Buffer Word8>_R
               ->_R <Buffer Char>_R
               ->_R Sym (GHC.Types.N:IO[0] <(Buffer Word8, Buffer Char)>_R)
               :: (Buffer Word8
                   -> Buffer Char
                   -> State# RealWorld
                   -> (# State# RealWorld, (Buffer Word8, Buffer Char) #) :: *)
                  ~R# (Buffer Word8
                       -> Buffer Char -> IO (Buffer Word8, Buffer Char) :: *)))
      (GHC.IO.Encoding.UTF16.mkUTF2
       `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
               :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                  ~R# (IO () :: *)))
      (GHC.IO.Encoding.UTF16.mkUTF2
       `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
               :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                  ~R# (IO () :: *)))
      (GHC.IO.Encoding.UTF16.mkUTF16be1
       `cast` (<()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
               :: (() -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                  ~R# (() -> IO () :: *)))

-- RHS size: {terms: 4, types: 12, coercions: 0, joins: 0/0}
GHC.IO.Encoding.UTF16.utf16be3
  :: State# RealWorld
     -> (# State# RealWorld, BufferCodec Word8 Char () #)
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (s_i7IAV [Occ=Once] :: State# RealWorld) ->
                 (# s_i7IAV,
                    GHC.IO.Encoding.Types.BufferCodec
                      @ Word8
                      @ Char
                      @ ()
                      (GHC.IO.Encoding.UTF16.mkUTF5
                       `cast` (<Buffer Word8>_R
                               ->_R <Buffer Char>_R
                               ->_R Sym (GHC.Types.N:IO[0]
                                             <(CodingProgress, Buffer Word8, Buffer Char)>_R)
                               :: (Buffer Word8
                                   -> Buffer Char
                                   -> State# RealWorld
                                   -> (# State# RealWorld,
                                         (CodingProgress, Buffer Word8, Buffer Char) #) :: *)
                                  ~R# (Buffer Word8
                                       -> Buffer Char
                                       -> IO (CodingProgress, Buffer Word8, Buffer Char) :: *)))
                      ((GHC.IO.Encoding.Failure.recoverDecode1
                          GHC.IO.Encoding.Failure.ErrorOnCodingFailure)
                       `cast` (<Buffer Word8>_R
                               ->_R <Buffer Char>_R
                               ->_R Sym (GHC.Types.N:IO[0] <(Buffer Word8, Buffer Char)>_R)
                               :: (Buffer Word8
                                   -> Buffer Char
                                   -> State# RealWorld
                                   -> (# State# RealWorld, (Buffer Word8, Buffer Char) #) :: *)
                                  ~R# (Buffer Word8
                                       -> Buffer Char -> IO (Buffer Word8, Buffer Char) :: *)))
                      ((\ (s1_X7IBD [Occ=Once] :: State# RealWorld) ->
                          (# s1_X7IBD, GHC.Tuple.() #))
                       `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                               :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                  ~R# (IO () :: *)))
                      ((\ (s1_X7IBD [Occ=Once] :: State# RealWorld) ->
                          (# s1_X7IBD, GHC.Tuple.() #))
                       `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                               :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                  ~R# (IO () :: *)))
                      ((\ _ [Occ=Dead] (eta_B1 [Occ=Once] :: State# RealWorld) ->
                          (# eta_B1, GHC.Tuple.() #))
                       `cast` (<()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                               :: (() -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                                  ~R# (() -> IO () :: *))) #)}]
GHC.IO.Encoding.UTF16.utf16be3
  = \ (s_i7IAV :: State# RealWorld) -> (# s_i7IAV, lvl3_r8G1E #)

-- RHS size: {terms: 6, types: 3, coercions: 38, joins: 0/0}
lvl4_r8G1F :: BufferCodec Char Word8 ()
[GblId, Str=m, Unf=OtherCon []]
lvl4_r8G1F
  = GHC.IO.Encoding.Types.BufferCodec
      @ Char
      @ Word8
      @ ()
      (GHC.IO.Encoding.UTF16.mkUTF1
       `cast` (<Buffer Char>_R
               ->_R <Buffer Word8>_R
               ->_R Sym (GHC.Types.N:IO[0]
                             <(CodingProgress, Buffer Char, Buffer Word8)>_R)
               :: (Buffer Char
                   -> Buffer Word8
                   -> State# RealWorld
                   -> (# State# RealWorld,
                         (CodingProgress, Buffer Char, Buffer Word8) #) :: *)
                  ~R# (Buffer Char
                       -> Buffer Word8
                       -> IO (CodingProgress, Buffer Char, Buffer Word8) :: *)))
      (GHC.IO.Encoding.UTF16.utf16be2
       `cast` (<Buffer Char>_R
               ->_R <Buffer Word8>_R
               ->_R Sym (GHC.Types.N:IO[0] <(Buffer Char, Buffer Word8)>_R)
               :: (Buffer Char
                   -> Buffer Word8
                   -> State# RealWorld
                   -> (# State# RealWorld, (Buffer Char, Buffer Word8) #) :: *)
                  ~R# (Buffer Char
                       -> Buffer Word8 -> IO (Buffer Char, Buffer Word8) :: *)))
      (GHC.IO.Encoding.UTF16.mkUTF2
       `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
               :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                  ~R# (IO () :: *)))
      (GHC.IO.Encoding.UTF16.mkUTF2
       `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
               :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                  ~R# (IO () :: *)))
      (GHC.IO.Encoding.UTF16.mkUTF16be1
       `cast` (<()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
               :: (() -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                  ~R# (() -> IO () :: *)))

-- RHS size: {terms: 4, types: 12, coercions: 0, joins: 0/0}
GHC.IO.Encoding.UTF16.utf16be1
  :: State# RealWorld
     -> (# State# RealWorld, BufferCodec Char Word8 () #)
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (s_i7IAV [Occ=Once] :: State# RealWorld) ->
                 (# s_i7IAV,
                    GHC.IO.Encoding.Types.BufferCodec
                      @ Char
                      @ Word8
                      @ ()
                      (GHC.IO.Encoding.UTF16.mkUTF1
                       `cast` (<Buffer Char>_R
                               ->_R <Buffer Word8>_R
                               ->_R Sym (GHC.Types.N:IO[0]
                                             <(CodingProgress, Buffer Char, Buffer Word8)>_R)
                               :: (Buffer Char
                                   -> Buffer Word8
                                   -> State# RealWorld
                                   -> (# State# RealWorld,
                                         (CodingProgress, Buffer Char, Buffer Word8) #) :: *)
                                  ~R# (Buffer Char
                                       -> Buffer Word8
                                       -> IO (CodingProgress, Buffer Char, Buffer Word8) :: *)))
                      (GHC.IO.Encoding.UTF16.utf16be2
                       `cast` (<Buffer Char>_R
                               ->_R <Buffer Word8>_R
                               ->_R Sym (GHC.Types.N:IO[0] <(Buffer Char, Buffer Word8)>_R)
                               :: (Buffer Char
                                   -> Buffer Word8
                                   -> State# RealWorld
                                   -> (# State# RealWorld, (Buffer Char, Buffer Word8) #) :: *)
                                  ~R# (Buffer Char
                                       -> Buffer Word8 -> IO (Buffer Char, Buffer Word8) :: *)))
                      ((\ (s1_X7IBD [Occ=Once] :: State# RealWorld) ->
                          (# s1_X7IBD, GHC.Tuple.() #))
                       `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                               :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                  ~R# (IO () :: *)))
                      ((\ (s1_X7IBD [Occ=Once] :: State# RealWorld) ->
                          (# s1_X7IBD, GHC.Tuple.() #))
                       `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                               :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                  ~R# (IO () :: *)))
                      ((\ _ [Occ=Dead] (eta_B1 [Occ=Once] :: State# RealWorld) ->
                          (# eta_B1, GHC.Tuple.() #))
                       `cast` (<()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                               :: (() -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                                  ~R# (() -> IO () :: *))) #)}]
GHC.IO.Encoding.UTF16.utf16be1
  = \ (s_i7IAV :: State# RealWorld) -> (# s_i7IAV, lvl4_r8G1F #)

-- RHS size: {terms: 4, types: 2, coercions: 12, joins: 0/0}
utf16be :: TextEncoding
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 40}]
utf16be
  = GHC.IO.Encoding.Types.TextEncoding
      @ ()
      @ ()
      GHC.IO.Encoding.UTF16.mkUTF16be2
      (GHC.IO.Encoding.UTF16.utf16be3
       `cast` (Sym (GHC.Types.N:IO[0] <BufferCodec Word8 Char ()>_R)
               :: (State# RealWorld
                   -> (# State# RealWorld, BufferCodec Word8 Char () #) :: *)
                  ~R# (IO (BufferCodec Word8 Char ()) :: *)))
      (GHC.IO.Encoding.UTF16.utf16be1
       `cast` (Sym (GHC.Types.N:IO[0] <BufferCodec Char Word8 ()>_R)
               :: (State# RealWorld
                   -> (# State# RealWorld, BufferCodec Char Word8 () #) :: *)
                  ~R# (IO (BufferCodec Char Word8 ()) :: *)))

-- RHS size: {terms: 2, types: 1, coercions: 14, joins: 0/0}
GHC.IO.Encoding.UTF16.mkUTF6 :: Maybe DecodeBuffer
[GblId,
 Caf=NoCafRefs,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.Encoding.UTF16.mkUTF6
  = GHC.Base.Just
      @ DecodeBuffer
      (GHC.IO.Encoding.UTF16.mkUTF5
       `cast` (<Buffer Word8>_R
               ->_R <Buffer Char>_R
               ->_R Sym (GHC.Types.N:IO[0]
                             <(CodingProgress, Buffer Word8, Buffer Char)>_R)
               :: (Buffer Word8
                   -> Buffer Char
                   -> State# RealWorld
                   -> (# State# RealWorld,
                         (CodingProgress, Buffer Word8, Buffer Char) #) :: *)
                  ~R# (Buffer Word8
                       -> Buffer Char
                       -> IO (CodingProgress, Buffer Word8, Buffer Char) :: *)))

-- RHS size: {terms: 2, types: 1, coercions: 14, joins: 0/0}
GHC.IO.Encoding.UTF16.mkUTF4 :: Maybe DecodeBuffer
[GblId,
 Caf=NoCafRefs,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.Encoding.UTF16.mkUTF4
  = GHC.Base.Just
      @ DecodeBuffer
      (GHC.IO.Encoding.UTF16.mkUTF3
       `cast` (<Buffer Word8>_R
               ->_R <Buffer Char>_R
               ->_R Sym (GHC.Types.N:IO[0]
                             <(CodingProgress, Buffer Word8, Buffer Char)>_R)
               :: (Buffer Word8
                   -> Buffer Char
                   -> State# RealWorld
                   -> (# State# RealWorld,
                         (CodingProgress, Buffer Word8, Buffer Char) #) :: *)
                  ~R# (Buffer Word8
                       -> Buffer Char
                       -> IO (CodingProgress, Buffer Word8, Buffer Char) :: *)))

-- RHS size: {terms: 163, types: 126, coercions: 7, joins: 1/1}
GHC.IO.Encoding.UTF16.$wutf16_decode [InlPrag=NOUSERINLINE[0]]
  :: MutVar# RealWorld (Maybe DecodeBuffer)
     -> Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> BufferState
     -> Int#
     -> Int#
     -> Int#
     -> Buffer Char
     -> State# RealWorld
     -> (# State# RealWorld,
           (CodingProgress, Buffer Word8, Buffer Char) #)
[GblId,
 Arity=9,
 Caf=NoCafRefs,
 Str=<S,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0 0 0 0 0 0 0] 370 30}]
GHC.IO.Encoding.UTF16.$wutf16_decode
  = \ (ww_s8FJx :: MutVar# RealWorld (Maybe DecodeBuffer))
      (ww1_s8FJB :: Addr#)
      (ww2_s8FJC :: GHC.ForeignPtr.ForeignPtrContents)
      (ww3_s8FJD :: BufferState)
      (ww4_s8FJE :: Int#)
      (ww5_s8FJF :: Int#)
      (ww6_s8FJG :: Int#)
      (w_s8FJt :: Buffer Char)
      (w1_s8FJu :: State# RealWorld) ->
      case readMutVar#
             @ RealWorld @ (Maybe DecodeBuffer) ww_s8FJx w1_s8FJu
      of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      case ipv1_i7IAz of {
        Nothing ->
          case <# (-# ww6_s8FJG ww5_s8FJF) 2# of {
            __DEFAULT ->
              case readWord8OffAddr#
                     @ RealWorld (plusAddr# ww1_s8FJB ww5_s8FJF) 0# ipv_i7IAy
              of
              { (# ipv2_i8rFz, ipv3_i8rFA #) ->
              case touch#
                     @ 'LiftedRep
                     @ GHC.ForeignPtr.ForeignPtrContents
                     ww2_s8FJC
                     ipv2_i8rFz
              of s'_i8rFC
              { __DEFAULT ->
              case readWord8OffAddr#
                     @ RealWorld (plusAddr# ww1_s8FJB (+# ww5_s8FJF 1#)) 0# s'_i8rFC
              of
              { (# ipv4_X8rJR, ipv5_X8rJT #) ->
              case touch#
                     @ 'LiftedRep
                     @ GHC.ForeignPtr.ForeignPtrContents
                     ww2_s8FJC
                     ipv4_X8rJR
              of s'1_X8rJX
              { __DEFAULT ->
              join {
                $j_s8FdE [Dmd=<L,1*U(U,U)>]
                  :: (# State# RealWorld,
                        (CodingProgress, Buffer Word8, Buffer Char) #)
                [LclId[JoinId(0)]]
                $j_s8FdE
                  = case ipv3_i8rFA of {
                      __DEFAULT ->
                        case writeMutVar#
                               @ RealWorld
                               @ (Maybe DecodeBuffer)
                               ww_s8FJx
                               GHC.IO.Encoding.UTF16.mkUTF6
                               s'1_X8rJX
                        of s2#_i7IBe
                        { __DEFAULT ->
                        GHC.IO.Encoding.UTF16.mkUTF5
                          (GHC.IO.Buffer.Buffer
                             @ Word8
                             ww1_s8FJB
                             ww2_s8FJC
                             ww3_s8FJD
                             ww4_s8FJE
                             ww5_s8FJF
                             ww6_s8FJG)
                          w_s8FJt
                          s2#_i7IBe
                        };
                      255## ->
                        case ipv5_X8rJT of {
                          __DEFAULT ->
                            case writeMutVar#
                                   @ RealWorld
                                   @ (Maybe DecodeBuffer)
                                   ww_s8FJx
                                   GHC.IO.Encoding.UTF16.mkUTF6
                                   s'1_X8rJX
                            of s2#_i7IBe
                            { __DEFAULT ->
                            GHC.IO.Encoding.UTF16.mkUTF5
                              (GHC.IO.Buffer.Buffer
                                 @ Word8
                                 ww1_s8FJB
                                 ww2_s8FJC
                                 ww3_s8FJD
                                 ww4_s8FJE
                                 ww5_s8FJF
                                 ww6_s8FJG)
                              w_s8FJt
                              s2#_i7IBe
                            };
                          254## ->
                            case writeMutVar#
                                   @ RealWorld
                                   @ (Maybe DecodeBuffer)
                                   ww_s8FJx
                                   GHC.IO.Encoding.UTF16.mkUTF4
                                   s'1_X8rJX
                            of s2#_i7IBe
                            { __DEFAULT ->
                            GHC.IO.Encoding.UTF16.mkUTF3
                              (GHC.IO.Buffer.Buffer
                                 @ Word8
                                 ww1_s8FJB
                                 ww2_s8FJC
                                 ww3_s8FJD
                                 ww4_s8FJE
                                 (+# ww5_s8FJF 2#)
                                 ww6_s8FJG)
                              w_s8FJt
                              s2#_i7IBe
                            }
                        }
                    } } in
              case ipv3_i8rFA of {
                __DEFAULT -> jump $j_s8FdE;
                254## ->
                  case ipv5_X8rJT of {
                    __DEFAULT -> jump $j_s8FdE;
                    255## ->
                      case writeMutVar#
                             @ RealWorld
                             @ (Maybe DecodeBuffer)
                             ww_s8FJx
                             GHC.IO.Encoding.UTF16.mkUTF6
                             s'1_X8rJX
                      of s2#_i7IBe
                      { __DEFAULT ->
                      GHC.IO.Encoding.UTF16.mkUTF5
                        (GHC.IO.Buffer.Buffer
                           @ Word8
                           ww1_s8FJB
                           ww2_s8FJC
                           ww3_s8FJD
                           ww4_s8FJE
                           (+# ww5_s8FJF 2#)
                           ww6_s8FJG)
                        w_s8FJt
                        s2#_i7IBe
                      }
                  }
              }
              }
              }
              }
              };
            1# ->
              (# ipv_i7IAy,
                 (GHC.IO.Encoding.Types.InputUnderflow,
                  GHC.IO.Buffer.Buffer
                    @ Word8
                    ww1_s8FJB
                    ww2_s8FJC
                    ww3_s8FJD
                    ww4_s8FJE
                    ww5_s8FJF
                    ww6_s8FJG,
                  w_s8FJt) #)
          };
        Just decode_a8E6j ->
          ((decode_a8E6j
              (GHC.IO.Buffer.Buffer
                 @ Word8
                 ww1_s8FJB
                 ww2_s8FJC
                 ww3_s8FJD
                 ww4_s8FJE
                 ww5_s8FJF
                 ww6_s8FJG)
              w_s8FJt)
           `cast` (GHC.Types.N:IO[0]
                       <(CodingProgress, Buffer Word8, Buffer Char)>_R
                   :: (IO (CodingProgress, Buffer Word8, Buffer Char) :: *)
                      ~R# (State# RealWorld
                           -> (# State# RealWorld,
                                 (CodingProgress, Buffer Word8, Buffer Char) #) :: *)))
            ipv_i7IAy
      }
      }

-- RHS size: {terms: 20, types: 25, coercions: 3, joins: 0/0}
GHC.IO.Encoding.UTF16.utf16_decode1 [InlPrag=NOUSERINLINE[0]]
  :: IORef (Maybe DecodeBuffer)
     -> Buffer Word8
     -> Buffer Char
     -> State# RealWorld
     -> (# State# RealWorld,
           (CodingProgress, Buffer Word8, Buffer Char) #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(SLLSSS),1*U(U,U,U,U,U,U)><L,U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s8FJr [Occ=Once] :: IORef (Maybe DecodeBuffer))
                 (w1_s8FJs [Occ=Once!] :: Buffer Word8)
                 (w2_s8FJt [Occ=Once] :: Buffer Char)
                 (w3_s8FJu [Occ=Once] :: State# RealWorld) ->
                 case w_s8FJr
                      `cast` (GHC.IORef.N:IORef[0] <Maybe DecodeBuffer>_N
                              :: (IORef (Maybe DecodeBuffer) :: *)
                                 ~R# (GHC.STRef.STRef RealWorld (Maybe DecodeBuffer) :: *))
                 of
                 { GHC.STRef.STRef ww1_s8FJx [Occ=Once] ->
                 case w1_s8FJs of
                 { Buffer ww3_s8FJB [Occ=Once] ww4_s8FJC [Occ=Once]
                          ww5_s8FJD [Occ=Once] ww6_s8FJE [Occ=Once] ww7_s8FJF [Occ=Once]
                          ww8_s8FJG [Occ=Once] ->
                 GHC.IO.Encoding.UTF16.$wutf16_decode
                   ww1_s8FJx
                   ww3_s8FJB
                   ww4_s8FJC
                   ww5_s8FJD
                   ww6_s8FJE
                   ww7_s8FJF
                   ww8_s8FJG
                   w2_s8FJt
                   w3_s8FJu
                 }
                 }}]
GHC.IO.Encoding.UTF16.utf16_decode1
  = \ (w_s8FJr :: IORef (Maybe DecodeBuffer))
      (w1_s8FJs :: Buffer Word8)
      (w2_s8FJt :: Buffer Char)
      (w3_s8FJu :: State# RealWorld) ->
      case w_s8FJr
           `cast` (GHC.IORef.N:IORef[0] <Maybe DecodeBuffer>_N
                   :: (IORef (Maybe DecodeBuffer) :: *)
                      ~R# (GHC.STRef.STRef RealWorld (Maybe DecodeBuffer) :: *))
      of
      { GHC.STRef.STRef ww1_s8FJx ->
      case w1_s8FJs of
      { Buffer ww3_s8FJB ww4_s8FJC ww5_s8FJD ww6_s8FJE ww7_s8FJF
               ww8_s8FJG ->
      GHC.IO.Encoding.UTF16.$wutf16_decode
        ww1_s8FJx
        ww3_s8FJB
        ww4_s8FJC
        ww5_s8FJD
        ww6_s8FJE
        ww7_s8FJF
        ww8_s8FJG
        w2_s8FJt
        w3_s8FJu
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 18, joins: 0/0}
utf16_decode :: IORef (Maybe DecodeBuffer) -> DecodeBuffer
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(SLLSSS),1*U(U,U,U,U,U,U)><L,U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.Encoding.UTF16.utf16_decode1
               `cast` (<IORef (Maybe DecodeBuffer)>_R
                       ->_R <Buffer Word8>_R
                       ->_R <Buffer Char>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(CodingProgress, Buffer Word8, Buffer Char)>_R)
                       :: (IORef (Maybe DecodeBuffer)
                           -> Buffer Word8
                           -> Buffer Char
                           -> State# RealWorld
                           -> (# State# RealWorld,
                                 (CodingProgress, Buffer Word8, Buffer Char) #) :: *)
                          ~R# (IORef (Maybe DecodeBuffer)
                               -> Buffer Word8
                               -> Buffer Char
                               -> IO (CodingProgress, Buffer Word8, Buffer Char) :: *))}]
utf16_decode
  = GHC.IO.Encoding.UTF16.utf16_decode1
    `cast` (<IORef (Maybe DecodeBuffer)>_R
            ->_R <Buffer Word8>_R
            ->_R <Buffer Char>_R
            ->_R Sym (GHC.Types.N:IO[0]
                          <(CodingProgress, Buffer Word8, Buffer Char)>_R)
            :: (IORef (Maybe DecodeBuffer)
                -> Buffer Word8
                -> Buffer Char
                -> State# RealWorld
                -> (# State# RealWorld,
                      (CodingProgress, Buffer Word8, Buffer Char) #) :: *)
               ~R# (IORef (Maybe DecodeBuffer)
                    -> Buffer Word8
                    -> Buffer Char
                    -> IO (CodingProgress, Buffer Word8, Buffer Char) :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Encoding.UTF16.mkUTF8 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.IO.Encoding.UTF16.mkUTF8 = "UTF-16"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.Encoding.UTF16.mkUTF7 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.Encoding.UTF16.mkUTF7
  = unpackCString# GHC.IO.Encoding.UTF16.mkUTF8

-- RHS size: {terms: 89, types: 141, coercions: 87, joins: 0/0}
mkUTF16 :: CodingFailureMode -> TextEncoding
[GblId,
 Arity=1,
 Str=<L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 366 40}]
mkUTF16
  = \ (cfm_a8E60 :: CodingFailureMode) ->
      GHC.IO.Encoding.Types.TextEncoding
        @ (Maybe DecodeBuffer)
        @ Bool
        GHC.IO.Encoding.UTF16.mkUTF7
        ((\ (s_i7IAv :: State# RealWorld) ->
            case newMutVar#
                   @ (Maybe DecodeBuffer)
                   @ RealWorld
                   (GHC.Base.Nothing @ DecodeBuffer)
                   s_i7IAv
            of
            { (# ipv_i8ttV, ipv1_i8ttW #) ->
            (# ipv_i8ttV,
               GHC.IO.Encoding.Types.BufferCodec
                 @ Word8
                 @ Char
                 @ (Maybe DecodeBuffer)
                 ((\ (w_s8FJs :: Buffer Word8)
                     (w1_s8FJt :: Buffer Char)
                     (w2_s8FJu :: State# RealWorld) ->
                     case w_s8FJs of
                     { Buffer ww1_s8FJB ww2_s8FJC ww3_s8FJD ww4_s8FJE ww5_s8FJF
                              ww6_s8FJG ->
                     GHC.IO.Encoding.UTF16.$wutf16_decode
                       ipv1_i8ttW
                       ww1_s8FJB
                       ww2_s8FJC
                       ww3_s8FJD
                       ww4_s8FJE
                       ww5_s8FJF
                       ww6_s8FJG
                       w1_s8FJt
                       w2_s8FJu
                     })
                  `cast` (<Buffer Word8>_R
                          ->_R <Buffer Char>_R
                          ->_R Sym (GHC.Types.N:IO[0]
                                        <(CodingProgress, Buffer Word8, Buffer Char)>_R)
                          :: (Buffer Word8
                              -> Buffer Char
                              -> State# RealWorld
                              -> (# State# RealWorld,
                                    (CodingProgress, Buffer Word8, Buffer Char) #) :: *)
                             ~R# (Buffer Word8
                                  -> Buffer Char
                                  -> IO (CodingProgress, Buffer Word8, Buffer Char) :: *)))
                 ((GHC.IO.Encoding.Failure.recoverDecode1 cfm_a8E60)
                  `cast` (<Buffer Word8>_R
                          ->_R <Buffer Char>_R
                          ->_R Sym (GHC.Types.N:IO[0] <(Buffer Word8, Buffer Char)>_R)
                          :: (Buffer Word8
                              -> Buffer Char
                              -> State# RealWorld
                              -> (# State# RealWorld, (Buffer Word8, Buffer Char) #) :: *)
                             ~R# (Buffer Word8
                                  -> Buffer Char -> IO (Buffer Word8, Buffer Char) :: *)))
                 (GHC.IO.Encoding.UTF16.mkUTF2
                  `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                          :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                             ~R# (IO () :: *)))
                 ((\ (eta_i7IB0 :: State# RealWorld) ->
                     readMutVar#
                       @ RealWorld @ (Maybe DecodeBuffer) ipv1_i8ttW eta_i7IB0)
                  `cast` (Sym (GHC.Types.N:IO[0] <Maybe DecodeBuffer>_R)
                          :: (State# RealWorld
                              -> (# State# RealWorld, Maybe DecodeBuffer #) :: *)
                             ~R# (IO (Maybe DecodeBuffer) :: *)))
                 ((\ (val_i7IB8 :: Maybe DecodeBuffer)
                     (eta_i7IB9 :: State# RealWorld) ->
                     case writeMutVar#
                            @ RealWorld @ (Maybe DecodeBuffer) ipv1_i8ttW val_i7IB8 eta_i7IB9
                     of s2#_i7IBe
                     { __DEFAULT ->
                     (# s2#_i7IBe, GHC.Tuple.() #)
                     })
                  `cast` (<Maybe DecodeBuffer>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                          :: (Maybe DecodeBuffer
                              -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                             ~R# (Maybe DecodeBuffer -> IO () :: *))) #)
            })
         `cast` (Sym (GHC.Types.N:IO[0]
                          <TextDecoder (Maybe DecodeBuffer)>_R)
                 :: (State# RealWorld
                     -> (# State# RealWorld, TextDecoder (Maybe DecodeBuffer) #) :: *)
                    ~R# (IO (TextDecoder (Maybe DecodeBuffer)) :: *)))
        ((\ (s_i7IAv :: State# RealWorld) ->
            case newMutVar# @ Bool @ RealWorld GHC.Types.False s_i7IAv of
            { (# ipv_i8ttV, ipv1_i8ttW #) ->
            (# ipv_i8ttV,
               GHC.IO.Encoding.Types.BufferCodec
                 @ Char
                 @ Word8
                 @ Bool
                 ((\ (w_s8FI6 :: Buffer Char)
                     (w1_s8FI7 :: Buffer Word8)
                     (w2_s8FI8 :: State# RealWorld) ->
                     case w1_s8FI7 of
                     { Buffer ww1_s8FIf ww2_s8FIg ww3_s8FIh ww4_s8FIi ww5_s8FIj
                              ww6_s8FIk ->
                     GHC.IO.Encoding.UTF16.$wutf16_encode
                       ipv1_i8ttW
                       w_s8FI6
                       ww1_s8FIf
                       ww2_s8FIg
                       ww3_s8FIh
                       ww4_s8FIi
                       ww5_s8FIj
                       ww6_s8FIk
                       w2_s8FI8
                     })
                  `cast` (<Buffer Char>_R
                          ->_R <Buffer Word8>_R
                          ->_R Sym (GHC.Types.N:IO[0]
                                        <(CodingProgress, Buffer Char, Buffer Word8)>_R)
                          :: (Buffer Char
                              -> Buffer Word8
                              -> State# RealWorld
                              -> (# State# RealWorld,
                                    (CodingProgress, Buffer Char, Buffer Word8) #) :: *)
                             ~R# (Buffer Char
                                  -> Buffer Word8
                                  -> IO (CodingProgress, Buffer Char, Buffer Word8) :: *)))
                 ((GHC.IO.Encoding.Failure.recoverEncode1 cfm_a8E60)
                  `cast` (<Buffer Char>_R
                          ->_R <Buffer Word8>_R
                          ->_R Sym (GHC.Types.N:IO[0] <(Buffer Char, Buffer Word8)>_R)
                          :: (Buffer Char
                              -> Buffer Word8
                              -> State# RealWorld
                              -> (# State# RealWorld, (Buffer Char, Buffer Word8) #) :: *)
                             ~R# (Buffer Char
                                  -> Buffer Word8 -> IO (Buffer Char, Buffer Word8) :: *)))
                 (GHC.IO.Encoding.UTF16.mkUTF2
                  `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                          :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                             ~R# (IO () :: *)))
                 ((\ (eta_i7IB0 :: State# RealWorld) ->
                     readMutVar# @ RealWorld @ Bool ipv1_i8ttW eta_i7IB0)
                  `cast` (Sym (GHC.Types.N:IO[0] <Bool>_R)
                          :: (State# RealWorld -> (# State# RealWorld, Bool #) :: *)
                             ~R# (IO Bool :: *)))
                 ((\ (val_i7IB8 :: Bool) (eta_i7IB9 :: State# RealWorld) ->
                     case writeMutVar# @ RealWorld @ Bool ipv1_i8ttW val_i7IB8 eta_i7IB9
                     of s2#_i7IBe
                     { __DEFAULT ->
                     (# s2#_i7IBe, GHC.Tuple.() #)
                     })
                  `cast` (<Bool>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                          :: (Bool -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                             ~R# (Bool -> IO () :: *))) #)
            })
         `cast` (Sym (GHC.Types.N:IO[0] <TextEncoder Bool>_R)
                 :: (State# RealWorld
                     -> (# State# RealWorld, TextEncoder Bool #) :: *)
                    ~R# (IO (TextEncoder Bool) :: *)))

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
utf16 :: TextEncoding
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
utf16 = mkUTF16 GHC.IO.Encoding.Failure.ErrorOnCodingFailure


