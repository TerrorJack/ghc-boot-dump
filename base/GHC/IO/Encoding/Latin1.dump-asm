
==================== Asm code ====================
2018-03-16 16:03:54.494770669 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin5_closure
.type GHC.IO.Encoding.Latin1.latin5_closure, @object
GHC.IO.Encoding.Latin1.latin5_closure:
	.quad	GHC.IO.Encoding.Latin1.latin5_info


==================== Asm code ====================
2018-03-16 16:03:54.495812524 UTC

.section .text
.align 8
sat_s8Kv1_entry:
_c8L6h:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8L6i
_c8L6j:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8L6l
_c8L6k:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8L6g
_c8L6f:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8L6l:
	movq $56,904(%r13)
_c8L6i:
	jmp *-16(%r13)
_c8L6g:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Kv1_entry, .-sat_s8Kv1_entry


==================== Asm code ====================
2018-03-16 16:03:54.496541055 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Kv1_info:
	.quad	sat_s8Kv1_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:54.497819892 UTC

.section .text
.align 8
sat_s8Kv9_entry:
_c8L6D:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8L6E
_c8L6F:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8L6H
_c8L6G:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8L6C
_c8L6B:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8L6H:
	movq $56,904(%r13)
_c8L6E:
	jmp *-16(%r13)
_c8L6C:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Kv9_entry, .-sat_s8Kv9_entry


==================== Asm code ====================
2018-03-16 16:03:54.498579352 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Kv9_info:
	.quad	sat_s8Kv9_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:54.499290363 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.latin5_entry
.type GHC.IO.Encoding.Latin1.latin5_entry, @object
GHC.IO.Encoding.Latin1.latin5_entry:
_c8L6K:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8L6L
_c8L6M:
	movq $block_c8L5R_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8L5R
_c8L5S:
	movq (%rbx),%rax
	jmp *(%rax)
_c8L6L:
	movl $GHC.IO.Encoding.Latin1.latin5_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.Latin1.latin5_entry, .-GHC.IO.Encoding.Latin1.latin5_entry


==================== Asm code ====================
2018-03-16 16:03:54.501497063 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin5_info
.type GHC.IO.Encoding.Latin1.latin5_info, @object
GHC.IO.Encoding.Latin1.latin5_info:
	.quad	GHC.IO.Encoding.Latin1.latin5_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:54.50229043 UTC

.section .text
.align 8
_c8L5R:
_c8L5R:
	movq $block_c8L5W_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8L5W
_c8L5X:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8L5R, .-_c8L5R


==================== Asm code ====================
2018-03-16 16:03:54.502964578 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8L5R_info:
	.quad	_c8L5R
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.50398154 UTC

.section .text
.align 8
_c8L5W:
_c8L5W:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8L6Q
_c8L6P:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8L71:
	cmpq %rsi,%rbx
	jl _c8L7e
_c8L7f:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8L6q
_c8L7b:
	movzbl (%r8,%r11,1),%r14d
	movl %r14d,(%rdx,%rbx,4)
	incq %rbx
	incq %r11
	jmp _c8L71
_c8L7e:
	cmpq %r9,%r11
	jl _c8L7b
_c8L7c:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8L64
_c8L6Q:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8L5W, .-_c8L5W


==================== Asm code ====================
2018-03-16 16:03:54.504827251 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8L5W_info:
	.quad	_c8L5W
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.505941653 UTC

.section .text
.align 8
_c8L64:
_c8L64:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8L6U
_c8L6T:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8Kv1_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8L6U:
	movq $160,904(%r13)
	movq $block_c8L64_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8L64, .-_c8L64


==================== Asm code ====================
2018-03-16 16:03:54.506763459 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8L64_info:
	.quad	_c8L64
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.507564299 UTC

.section .text
.align 8
_c8L6q:
_c8L6q:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8L6Y
_c8L6X:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8Kv9_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8L6Y:
	movq $160,904(%r13)
	movq $block_c8L6q_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8L6q, .-_c8L6q


==================== Asm code ====================
2018-03-16 16:03:54.508387896 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8L6q_info:
	.quad	_c8L6q
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.51064185 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_decode_closure
.type GHC.IO.Encoding.Latin1.latin1_decode_closure, @object
GHC.IO.Encoding.Latin1.latin1_decode_closure:
	.quad	GHC.IO.Encoding.Latin1.latin1_decode_info


==================== Asm code ====================
2018-03-16 16:03:54.511219634 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.latin1_decode_entry
.type GHC.IO.Encoding.Latin1.latin1_decode_entry, @object
GHC.IO.Encoding.Latin1.latin1_decode_entry:
_c8L8J:
	jmp GHC.IO.Encoding.Latin1.latin5_entry
	.size GHC.IO.Encoding.Latin1.latin1_decode_entry, .-GHC.IO.Encoding.Latin1.latin1_decode_entry


==================== Asm code ====================
2018-03-16 16:03:54.511821917 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_decode_info
.type GHC.IO.Encoding.Latin1.latin1_decode_info, @object
GHC.IO.Encoding.Latin1.latin1_decode_info:
	.quad	GHC.IO.Encoding.Latin1.latin1_decode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:54.524568509 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii5_closure
.type GHC.IO.Encoding.Latin1.ascii5_closure, @object
GHC.IO.Encoding.Latin1.ascii5_closure:
	.quad	GHC.IO.Encoding.Latin1.ascii5_info


==================== Asm code ====================
2018-03-16 16:03:54.525803457 UTC

.section .text
.align 8
sat_s8KvQ_entry:
_c8L9k:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8L9l
_c8L9m:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8L9o
_c8L9n:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8L9j
_c8L9i:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8L9o:
	movq $56,904(%r13)
_c8L9l:
	jmp *-16(%r13)
_c8L9j:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8KvQ_entry, .-sat_s8KvQ_entry


==================== Asm code ====================
2018-03-16 16:03:54.52656905 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8KvQ_info:
	.quad	sat_s8KvQ_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:54.52740877 UTC

.section .text
.align 8
sat_s8KvY_entry:
_c8L9G:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8L9H
_c8L9I:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8L9K
_c8L9J:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8L9F
_c8L9E:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8L9K:
	movq $56,904(%r13)
_c8L9H:
	jmp *-16(%r13)
_c8L9F:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8KvY_entry, .-sat_s8KvY_entry


==================== Asm code ====================
2018-03-16 16:03:54.528203703 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8KvY_info:
	.quad	sat_s8KvY_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:54.529072475 UTC

.section .text
.align 8
sat_s8Kw6_entry:
_c8La2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8La3
_c8La4:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8La6
_c8La5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8La1
_c8La0:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8La6:
	movq $56,904(%r13)
_c8La3:
	jmp *-16(%r13)
_c8La1:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Kw6_entry, .-sat_s8Kw6_entry


==================== Asm code ====================
2018-03-16 16:03:54.529845566 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Kw6_info:
	.quad	sat_s8Kw6_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:54.530597457 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.ascii5_entry
.type GHC.IO.Encoding.Latin1.ascii5_entry, @object
GHC.IO.Encoding.Latin1.ascii5_entry:
_c8La9:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Laa
_c8Lab:
	movq $block_c8L8U_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8L8U
_c8L8V:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Laa:
	movl $GHC.IO.Encoding.Latin1.ascii5_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.Latin1.ascii5_entry, .-GHC.IO.Encoding.Latin1.ascii5_entry


==================== Asm code ====================
2018-03-16 16:03:54.531237376 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii5_info
.type GHC.IO.Encoding.Latin1.ascii5_info, @object
GHC.IO.Encoding.Latin1.ascii5_info:
	.quad	GHC.IO.Encoding.Latin1.ascii5_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:54.531959925 UTC

.section .text
.align 8
_c8L8U:
_c8L8U:
	movq $block_c8L8Z_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8L8Z
_c8L90:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8L8U, .-_c8L8U


==================== Asm code ====================
2018-03-16 16:03:54.532613615 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8L8U_info:
	.quad	_c8L8U
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.533820638 UTC

.section .text
.align 8
_c8L8Z:
_c8L8Z:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Laf
_c8Lae:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8Lau:
	cmpq %rsi,%rbx
	jl _c8LaR
_c8LaS:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8L9P
_c8LaL:
	movl %r14d,(%rdx,%rbx,4)
	incq %rbx
	incq %r11
	jmp _c8Lau
_c8LaR:
	cmpq %r9,%r11
	jl _c8LaO
_c8LaP:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8L9t
_c8LaO:
	movzbl (%r8,%r11,1),%r14d
	cmpq $127,%r14
	jbe _c8LaL
_c8LaM:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8L97
_c8Laf:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8L8Z, .-_c8L8Z


==================== Asm code ====================
2018-03-16 16:03:54.534749874 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8L8Z_info:
	.quad	_c8L8Z
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.535589178 UTC

.section .text
.align 8
_c8L97:
_c8L97:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Laj
_c8Lai:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8KvQ_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Laj:
	movq $160,904(%r13)
	movq $block_c8L97_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8L97, .-_c8L97


==================== Asm code ====================
2018-03-16 16:03:54.536405776 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8L97_info:
	.quad	_c8L97
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.537266731 UTC

.section .text
.align 8
_c8L9t:
_c8L9t:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Lan
_c8Lam:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8KvY_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Lan:
	movq $160,904(%r13)
	movq $block_c8L9t_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8L9t, .-_c8L9t


==================== Asm code ====================
2018-03-16 16:03:54.538097398 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8L9t_info:
	.quad	_c8L9t
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.538968739 UTC

.section .text
.align 8
_c8L9P:
_c8L9P:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Lar
_c8Laq:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8Kw6_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Lar:
	movq $160,904(%r13)
	movq $block_c8L9P_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8L9P, .-_c8L9P


==================== Asm code ====================
2018-03-16 16:03:54.539782112 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8L9P_info:
	.quad	_c8L9P
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.542085194 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii_decode_closure
.type GHC.IO.Encoding.Latin1.ascii_decode_closure, @object
GHC.IO.Encoding.Latin1.ascii_decode_closure:
	.quad	GHC.IO.Encoding.Latin1.ascii_decode_info


==================== Asm code ====================
2018-03-16 16:03:54.54270818 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.ascii_decode_entry
.type GHC.IO.Encoding.Latin1.ascii_decode_entry, @object
GHC.IO.Encoding.Latin1.ascii_decode_entry:
_c8LcJ:
	jmp GHC.IO.Encoding.Latin1.ascii5_entry
	.size GHC.IO.Encoding.Latin1.ascii_decode_entry, .-GHC.IO.Encoding.Latin1.ascii_decode_entry


==================== Asm code ====================
2018-03-16 16:03:54.543303484 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii_decode_info
.type GHC.IO.Encoding.Latin1.ascii_decode_info, @object
GHC.IO.Encoding.Latin1.ascii_decode_info:
	.quad	GHC.IO.Encoding.Latin1.ascii_decode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:54.553976505 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin3_closure
.type GHC.IO.Encoding.Latin1.latin3_closure, @object
GHC.IO.Encoding.Latin1.latin3_closure:
	.quad	GHC.IO.Encoding.Latin1.latin3_info


==================== Asm code ====================
2018-03-16 16:03:54.555752654 UTC

.section .text
.align 8
sat_s8KwO_entry:
_c8Ldk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Ldl
_c8Ldm:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Ldo
_c8Ldn:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Ldj
_c8Ldi:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Ldo:
	movq $56,904(%r13)
_c8Ldl:
	jmp *-16(%r13)
_c8Ldj:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8KwO_entry, .-sat_s8KwO_entry


==================== Asm code ====================
2018-03-16 16:03:54.556568122 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8KwO_info:
	.quad	sat_s8KwO_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:54.557475191 UTC

.section .text
.align 8
sat_s8KwW_entry:
_c8LdG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LdH
_c8LdI:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LdK
_c8LdJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8LdF
_c8LdE:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LdK:
	movq $56,904(%r13)
_c8LdH:
	jmp *-16(%r13)
_c8LdF:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8KwW_entry, .-sat_s8KwW_entry


==================== Asm code ====================
2018-03-16 16:03:54.558243648 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8KwW_info:
	.quad	sat_s8KwW_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:54.558955534 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.latin3_entry
.type GHC.IO.Encoding.Latin1.latin3_entry, @object
GHC.IO.Encoding.Latin1.latin3_entry:
_c8LdN:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LdO
_c8LdP:
	movq $block_c8LcU_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8LcU
_c8LcV:
	movq (%rbx),%rax
	jmp *(%rax)
_c8LdO:
	movl $GHC.IO.Encoding.Latin1.latin3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.Latin1.latin3_entry, .-GHC.IO.Encoding.Latin1.latin3_entry


==================== Asm code ====================
2018-03-16 16:03:54.559638277 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin3_info
.type GHC.IO.Encoding.Latin1.latin3_info, @object
GHC.IO.Encoding.Latin1.latin3_info:
	.quad	GHC.IO.Encoding.Latin1.latin3_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:54.560394078 UTC

.section .text
.align 8
_c8LcU:
_c8LcU:
	movq $block_c8LcZ_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8LcZ
_c8Ld0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8LcU, .-_c8LcU


==================== Asm code ====================
2018-03-16 16:03:54.56107331 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LcU_info:
	.quad	_c8LcU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.562088892 UTC

.section .text
.align 8
_c8LcZ:
_c8LcZ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LdT
_c8LdS:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8Le4:
	cmpq %rsi,%rbx
	jl _c8Leh
_c8Lei:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8Ldt
_c8Lee:
	movl (%r8,%r11,4),%r14d
	movb %r14b,(%rdx,%rbx,1)
	incq %rbx
	incq %r11
	jmp _c8Le4
_c8Leh:
	cmpq %r9,%r11
	jl _c8Lee
_c8Lef:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8Ld7
_c8LdT:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8LcZ, .-_c8LcZ


==================== Asm code ====================
2018-03-16 16:03:54.562953389 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LcZ_info:
	.quad	_c8LcZ
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.563796574 UTC

.section .text
.align 8
_c8Ld7:
_c8Ld7:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8LdX
_c8LdW:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8KwO_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LdX:
	movq $160,904(%r13)
	movq $block_c8Ld7_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8Ld7, .-_c8Ld7


==================== Asm code ====================
2018-03-16 16:03:54.564630904 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Ld7_info:
	.quad	_c8Ld7
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.565567871 UTC

.section .text
.align 8
_c8Ldt:
_c8Ldt:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Le1
_c8Le0:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8KwW_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Le1:
	movq $160,904(%r13)
	movq $block_c8Ldt_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8Ldt, .-_c8Ldt


==================== Asm code ====================
2018-03-16 16:03:54.566368549 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Ldt_info:
	.quad	_c8Ldt
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.568606193 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_encode_closure
.type GHC.IO.Encoding.Latin1.latin1_encode_closure, @object
GHC.IO.Encoding.Latin1.latin1_encode_closure:
	.quad	GHC.IO.Encoding.Latin1.latin1_encode_info


==================== Asm code ====================
2018-03-16 16:03:54.569229047 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.latin1_encode_entry
.type GHC.IO.Encoding.Latin1.latin1_encode_entry, @object
GHC.IO.Encoding.Latin1.latin1_encode_entry:
_c8LfQ:
	jmp GHC.IO.Encoding.Latin1.latin3_entry
	.size GHC.IO.Encoding.Latin1.latin1_encode_entry, .-GHC.IO.Encoding.Latin1.latin1_encode_entry


==================== Asm code ====================
2018-03-16 16:03:54.569863694 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_encode_info
.type GHC.IO.Encoding.Latin1.latin1_encode_info, @object
GHC.IO.Encoding.Latin1.latin1_encode_info:
	.quad	GHC.IO.Encoding.Latin1.latin1_encode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:54.582809578 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii3_closure
.type GHC.IO.Encoding.Latin1.ascii3_closure, @object
GHC.IO.Encoding.Latin1.ascii3_closure:
	.quad	GHC.IO.Encoding.Latin1.ascii3_info


==================== Asm code ====================
2018-03-16 16:03:54.583789487 UTC

.section .text
.align 8
sat_s8KxE_entry:
_c8Lgr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Lgs
_c8Lgt:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Lgv
_c8Lgu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Lgq
_c8Lgp:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Lgv:
	movq $56,904(%r13)
_c8Lgs:
	jmp *-16(%r13)
_c8Lgq:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8KxE_entry, .-sat_s8KxE_entry


==================== Asm code ====================
2018-03-16 16:03:54.584560645 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8KxE_info:
	.quad	sat_s8KxE_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:54.585439105 UTC

.section .text
.align 8
sat_s8KxM_entry:
_c8LgN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LgO
_c8LgP:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LgR
_c8LgQ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8LgM
_c8LgL:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LgR:
	movq $56,904(%r13)
_c8LgO:
	jmp *-16(%r13)
_c8LgM:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8KxM_entry, .-sat_s8KxM_entry


==================== Asm code ====================
2018-03-16 16:03:54.586211249 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8KxM_info:
	.quad	sat_s8KxM_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:54.587110014 UTC

.section .text
.align 8
sat_s8KxU_entry:
_c8Lh9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Lha
_c8Lhb:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Lhd
_c8Lhc:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Lh8
_c8Lh7:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Lhd:
	movq $56,904(%r13)
_c8Lha:
	jmp *-16(%r13)
_c8Lh8:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8KxU_entry, .-sat_s8KxU_entry


==================== Asm code ====================
2018-03-16 16:03:54.587911643 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8KxU_info:
	.quad	sat_s8KxU_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:54.588673742 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.ascii3_entry
.type GHC.IO.Encoding.Latin1.ascii3_entry, @object
GHC.IO.Encoding.Latin1.ascii3_entry:
_c8Lhg:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Lhh
_c8Lhi:
	movq $block_c8Lg1_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8Lg1
_c8Lg2:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Lhh:
	movl $GHC.IO.Encoding.Latin1.ascii3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.Latin1.ascii3_entry, .-GHC.IO.Encoding.Latin1.ascii3_entry


==================== Asm code ====================
2018-03-16 16:03:54.589559795 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii3_info
.type GHC.IO.Encoding.Latin1.ascii3_info, @object
GHC.IO.Encoding.Latin1.ascii3_info:
	.quad	GHC.IO.Encoding.Latin1.ascii3_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:54.590341501 UTC

.section .text
.align 8
_c8Lg1:
_c8Lg1:
	movq $block_c8Lg6_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8Lg6
_c8Lg7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Lg1, .-_c8Lg1


==================== Asm code ====================
2018-03-16 16:03:54.591023944 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Lg1_info:
	.quad	_c8Lg1
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.592119739 UTC

.section .text
.align 8
_c8Lg6:
_c8Lg6:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Lhm
_c8Lhl:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8LhB:
	cmpq %rsi,%rbx
	jl _c8LhY
_c8LhZ:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8LgW
_c8LhS:
	movb %r14b,(%rdx,%rbx,1)
	incq %rbx
	incq %r11
	jmp _c8LhB
_c8LhY:
	cmpq %r9,%r11
	jl _c8LhV
_c8LhW:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8LgA
_c8LhV:
	movl (%r8,%r11,4),%r14d
	cmpq $127,%r14
	jle _c8LhS
_c8LhT:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8Lge
_c8Lhm:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8Lg6, .-_c8Lg6


==================== Asm code ====================
2018-03-16 16:03:54.593130493 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Lg6_info:
	.quad	_c8Lg6
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.594059505 UTC

.section .text
.align 8
_c8Lge:
_c8Lge:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Lhq
_c8Lhp:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8KxE_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Lhq:
	movq $160,904(%r13)
	movq $block_c8Lge_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8Lge, .-_c8Lge


==================== Asm code ====================
2018-03-16 16:03:54.594824743 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Lge_info:
	.quad	_c8Lge
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.595689251 UTC

.section .text
.align 8
_c8LgA:
_c8LgA:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Lhu
_c8Lht:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8KxM_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Lhu:
	movq $160,904(%r13)
	movq $block_c8LgA_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8LgA, .-_c8LgA


==================== Asm code ====================
2018-03-16 16:03:54.596504246 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LgA_info:
	.quad	_c8LgA
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.597351062 UTC

.section .text
.align 8
_c8LgW:
_c8LgW:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Lhy
_c8Lhx:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8KxU_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Lhy:
	movq $160,904(%r13)
	movq $block_c8LgW_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8LgW, .-_c8LgW


==================== Asm code ====================
2018-03-16 16:03:54.598212799 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LgW_info:
	.quad	_c8LgW
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.600611588 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii_encode_closure
.type GHC.IO.Encoding.Latin1.ascii_encode_closure, @object
GHC.IO.Encoding.Latin1.ascii_encode_closure:
	.quad	GHC.IO.Encoding.Latin1.ascii_encode_info


==================== Asm code ====================
2018-03-16 16:03:54.602232418 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.ascii_encode_entry
.type GHC.IO.Encoding.Latin1.ascii_encode_entry, @object
GHC.IO.Encoding.Latin1.ascii_encode_entry:
_c8LjX:
	jmp GHC.IO.Encoding.Latin1.ascii3_entry
	.size GHC.IO.Encoding.Latin1.ascii_encode_entry, .-GHC.IO.Encoding.Latin1.ascii_encode_entry


==================== Asm code ====================
2018-03-16 16:03:54.602881782 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii_encode_info
.type GHC.IO.Encoding.Latin1.ascii_encode_info, @object
GHC.IO.Encoding.Latin1.ascii_encode_info:
	.quad	GHC.IO.Encoding.Latin1.ascii_encode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:54.616272462 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_checked2_closure
.type GHC.IO.Encoding.Latin1.latin1_checked2_closure, @object
GHC.IO.Encoding.Latin1.latin1_checked2_closure:
	.quad	GHC.IO.Encoding.Latin1.latin1_checked2_info


==================== Asm code ====================
2018-03-16 16:03:54.617317361 UTC

.section .text
.align 8
sat_s8KyE_entry:
_c8Lky:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Lkz
_c8LkA:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LkC
_c8LkB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Lkx
_c8Lkw:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LkC:
	movq $56,904(%r13)
_c8Lkz:
	jmp *-16(%r13)
_c8Lkx:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8KyE_entry, .-sat_s8KyE_entry


==================== Asm code ====================
2018-03-16 16:03:54.618076589 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8KyE_info:
	.quad	sat_s8KyE_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:54.619014593 UTC

.section .text
.align 8
sat_s8KyM_entry:
_c8LkU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LkV
_c8LkW:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LkY
_c8LkX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8LkT
_c8LkS:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LkY:
	movq $56,904(%r13)
_c8LkV:
	jmp *-16(%r13)
_c8LkT:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8KyM_entry, .-sat_s8KyM_entry


==================== Asm code ====================
2018-03-16 16:03:54.619781226 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8KyM_info:
	.quad	sat_s8KyM_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:54.620690024 UTC

.section .text
.align 8
sat_s8KyU_entry:
_c8Llg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Llh
_c8Lli:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Llk
_c8Llj:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Llf
_c8Lle:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Llk:
	movq $56,904(%r13)
_c8Llh:
	jmp *-16(%r13)
_c8Llf:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8KyU_entry, .-sat_s8KyU_entry


==================== Asm code ====================
2018-03-16 16:03:54.621525765 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8KyU_info:
	.quad	sat_s8KyU_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:54.62230364 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.latin1_checked2_entry
.type GHC.IO.Encoding.Latin1.latin1_checked2_entry, @object
GHC.IO.Encoding.Latin1.latin1_checked2_entry:
_c8Lln:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Llo
_c8Llp:
	movq $block_c8Lk8_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8Lk8
_c8Lk9:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Llo:
	movl $GHC.IO.Encoding.Latin1.latin1_checked2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.Latin1.latin1_checked2_entry, .-GHC.IO.Encoding.Latin1.latin1_checked2_entry


==================== Asm code ====================
2018-03-16 16:03:54.62297245 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_checked2_info
.type GHC.IO.Encoding.Latin1.latin1_checked2_info, @object
GHC.IO.Encoding.Latin1.latin1_checked2_info:
	.quad	GHC.IO.Encoding.Latin1.latin1_checked2_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:54.623781553 UTC

.section .text
.align 8
_c8Lk8:
_c8Lk8:
	movq $block_c8Lkd_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8Lkd
_c8Lke:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Lk8, .-_c8Lk8


==================== Asm code ====================
2018-03-16 16:03:54.624448765 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Lk8_info:
	.quad	_c8Lk8
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.625631009 UTC

.section .text
.align 8
_c8Lkd:
_c8Lkd:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Llt
_c8Lls:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8LlI:
	cmpq %rsi,%rbx
	jl _c8Lm5
_c8Lm6:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8Ll3
_c8LlZ:
	movb %r14b,(%rdx,%rbx,1)
	incq %rbx
	incq %r11
	jmp _c8LlI
_c8Lm5:
	cmpq %r9,%r11
	jl _c8Lm2
_c8Lm3:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8LkH
_c8Lm2:
	movl (%r8,%r11,4),%r14d
	cmpq $255,%r14
	jle _c8LlZ
_c8Lm0:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8Lkl
_c8Llt:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8Lkd, .-_c8Lkd


==================== Asm code ====================
2018-03-16 16:03:54.626599163 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Lkd_info:
	.quad	_c8Lkd
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.627488065 UTC

.section .text
.align 8
_c8Lkl:
_c8Lkl:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Llx
_c8Llw:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8KyE_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Llx:
	movq $160,904(%r13)
	movq $block_c8Lkl_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8Lkl, .-_c8Lkl


==================== Asm code ====================
2018-03-16 16:03:54.628336207 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Lkl_info:
	.quad	_c8Lkl
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.629189922 UTC

.section .text
.align 8
_c8LkH:
_c8LkH:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8LlB
_c8LlA:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8KyM_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LlB:
	movq $160,904(%r13)
	movq $block_c8LkH_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8LkH, .-_c8LkH


==================== Asm code ====================
2018-03-16 16:03:54.630113103 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LkH_info:
	.quad	_c8LkH
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.630974596 UTC

.section .text
.align 8
_c8Ll3:
_c8Ll3:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8LlF
_c8LlE:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8KyU_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LlF:
	movq $160,904(%r13)
	movq $block_c8Ll3_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8Ll3, .-_c8Ll3


==================== Asm code ====================
2018-03-16 16:03:54.631821394 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Ll3_info:
	.quad	_c8Ll3
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.634704845 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_checked_encode_closure
.type GHC.IO.Encoding.Latin1.latin1_checked_encode_closure, @object
GHC.IO.Encoding.Latin1.latin1_checked_encode_closure:
	.quad	GHC.IO.Encoding.Latin1.latin1_checked_encode_info


==================== Asm code ====================
2018-03-16 16:03:54.635350313 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.latin1_checked_encode_entry
.type GHC.IO.Encoding.Latin1.latin1_checked_encode_entry, @object
GHC.IO.Encoding.Latin1.latin1_checked_encode_entry:
_c8Lo4:
	jmp GHC.IO.Encoding.Latin1.latin1_checked2_entry
	.size GHC.IO.Encoding.Latin1.latin1_checked_encode_entry, .-GHC.IO.Encoding.Latin1.latin1_checked_encode_entry


==================== Asm code ====================
2018-03-16 16:03:54.635966485 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_checked_encode_info
.type GHC.IO.Encoding.Latin1.latin1_checked_encode_info, @object
GHC.IO.Encoding.Latin1.latin1_checked_encode_info:
	.quad	GHC.IO.Encoding.Latin1.latin1_checked_encode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:54.637756822 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.Latin1.$trModule4_bytes
.type GHC.IO.Encoding.Latin1.$trModule4_bytes, @object
GHC.IO.Encoding.Latin1.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:03:54.639487559 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.$trModule3_closure
.type GHC.IO.Encoding.Latin1.$trModule3_closure, @object
GHC.IO.Encoding.Latin1.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Encoding.Latin1.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:03:54.641295317 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.Latin1.$trModule2_bytes
.type GHC.IO.Encoding.Latin1.$trModule2_bytes, @object
GHC.IO.Encoding.Latin1.$trModule2_bytes:
	.asciz "GHC.IO.Encoding.Latin1"


==================== Asm code ====================
2018-03-16 16:03:54.64312187 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.$trModule1_closure
.type GHC.IO.Encoding.Latin1.$trModule1_closure, @object
GHC.IO.Encoding.Latin1.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Encoding.Latin1.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:03:54.645498454 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.$trModule_closure
.type GHC.IO.Encoding.Latin1.$trModule_closure, @object
GHC.IO.Encoding.Latin1.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.IO.Encoding.Latin1.$trModule3_closure+1
	.quad	GHC.IO.Encoding.Latin1.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:54.647310931 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.Latin1.ascii7_bytes
.type GHC.IO.Encoding.Latin1.ascii7_bytes, @object
GHC.IO.Encoding.Latin1.ascii7_bytes:
	.asciz "ASCII"


==================== Asm code ====================
2018-03-16 16:03:54.650481885 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii6_closure
.type GHC.IO.Encoding.Latin1.ascii6_closure, @object
GHC.IO.Encoding.Latin1.ascii6_closure:
	.quad	GHC.IO.Encoding.Latin1.ascii6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.651668133 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.ascii6_entry
.type GHC.IO.Encoding.Latin1.ascii6_entry, @object
GHC.IO.Encoding.Latin1.ascii6_entry:
_c8Lon:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Loo
_c8Lop:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8Lom
_c8Lol:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Encoding.Latin1.ascii7_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8Loo:
	jmp *-16(%r13)
_c8Lom:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.Latin1.ascii6_entry, .-GHC.IO.Encoding.Latin1.ascii6_entry


==================== Asm code ====================
2018-03-16 16:03:54.652662648 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii6_info
.type GHC.IO.Encoding.Latin1.ascii6_info, @object
GHC.IO.Encoding.Latin1.ascii6_info:
	.quad	GHC.IO.Encoding.Latin1.ascii6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:54.655431092 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.mkAscii2_closure
.type GHC.IO.Encoding.Latin1.mkAscii2_closure, @object
GHC.IO.Encoding.Latin1.mkAscii2_closure:
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_info


==================== Asm code ====================
2018-03-16 16:03:54.656262855 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.mkAscii2_entry
.type GHC.IO.Encoding.Latin1.mkAscii2_entry, @object
GHC.IO.Encoding.Latin1.mkAscii2_entry:
_c8LoB:
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.Latin1.mkAscii2_entry, .-GHC.IO.Encoding.Latin1.mkAscii2_entry


==================== Asm code ====================
2018-03-16 16:03:54.657048465 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.mkAscii2_info
.type GHC.IO.Encoding.Latin1.mkAscii2_info, @object
GHC.IO.Encoding.Latin1.mkAscii2_info:
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:03:54.659873022 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.mkAscii1_closure
.type GHC.IO.Encoding.Latin1.mkAscii1_closure, @object
GHC.IO.Encoding.Latin1.mkAscii1_closure:
	.quad	GHC.IO.Encoding.Latin1.mkAscii1_info


==================== Asm code ====================
2018-03-16 16:03:54.660714121 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.mkAscii1_entry
.type GHC.IO.Encoding.Latin1.mkAscii1_entry, @object
GHC.IO.Encoding.Latin1.mkAscii1_entry:
_c8LoN:
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.Latin1.mkAscii1_entry, .-GHC.IO.Encoding.Latin1.mkAscii1_entry


==================== Asm code ====================
2018-03-16 16:03:54.661488721 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.mkAscii1_info
.type GHC.IO.Encoding.Latin1.mkAscii1_info, @object
GHC.IO.Encoding.Latin1.mkAscii1_info:
	.quad	GHC.IO.Encoding.Latin1.mkAscii1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:54.666682361 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.mkAscii_closure
.type GHC.IO.Encoding.Latin1.mkAscii_closure, @object
GHC.IO.Encoding.Latin1.mkAscii_closure:
	.quad	GHC.IO.Encoding.Latin1.mkAscii_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.667317895 UTC

.section .text
.align 8
sat_s8Kzq_entry:
_c8Lp9:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverEncode1_entry
	.size sat_s8Kzq_entry, .-sat_s8Kzq_entry


==================== Asm code ====================
2018-03-16 16:03:54.667909348 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Kzq_info:
	.quad	sat_s8Kzq_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8KNa_srt


==================== Asm code ====================
2018-03-16 16:03:54.66867347 UTC

.section .text
.align 8
sat_s8Kzs_entry:
_c8Lpd:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8Lph
_c8Lpg:
	movq 7(%rbx),%rax
	movq $sat_s8Kzq_info,-56(%r12)
	movq %rax,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	movq $GHC.IO.Encoding.Latin1.ascii3_closure+3,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.Latin1.mkAscii2_closure+1,-16(%r12)
	movq $GHC.IO.Encoding.Latin1.mkAscii2_closure+1,-8(%r12)
	movq $GHC.IO.Encoding.Latin1.mkAscii1_closure+2,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8Lph:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8Kzs_entry, .-sat_s8Kzs_entry


==================== Asm code ====================
2018-03-16 16:03:54.669370535 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Kzs_info:
	.quad	sat_s8Kzs_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8KNa_srt


==================== Asm code ====================
2018-03-16 16:03:54.669986659 UTC

.section .text
.align 8
sat_s8Kzm_entry:
_c8Lps:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverDecode1_entry
	.size sat_s8Kzm_entry, .-sat_s8Kzm_entry


==================== Asm code ====================
2018-03-16 16:03:54.670596989 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Kzm_info:
	.quad	sat_s8Kzm_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8KNa_srt+8


==================== Asm code ====================
2018-03-16 16:03:54.671366025 UTC

.section .text
.align 8
sat_s8Kzo_entry:
_c8Lpw:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8LpA
_c8Lpz:
	movq 7(%rbx),%rax
	movq $sat_s8Kzm_info,-56(%r12)
	movq %rax,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	movq $GHC.IO.Encoding.Latin1.ascii5_closure+3,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.Latin1.mkAscii2_closure+1,-16(%r12)
	movq $GHC.IO.Encoding.Latin1.mkAscii2_closure+1,-8(%r12)
	movq $GHC.IO.Encoding.Latin1.mkAscii1_closure+2,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8LpA:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8Kzo_entry, .-sat_s8Kzo_entry


==================== Asm code ====================
2018-03-16 16:03:54.672052079 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Kzo_info:
	.quad	sat_s8Kzo_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8KNa_srt+8


==================== Asm code ====================
2018-03-16 16:03:54.672817818 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.mkAscii_entry
.type GHC.IO.Encoding.Latin1.mkAscii_entry, @object
GHC.IO.Encoding.Latin1.mkAscii_entry:
_c8LpC:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8LpG
_c8LpF:
	movq $sat_s8Kzs_info,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s8Kzo_info,-40(%r12)
	movq %r14,-32(%r12)
	movq $GHC.IO.Encoding.Types.TextEncoding_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Latin1.ascii6_closure,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8LpG:
	movq $64,904(%r13)
	movl $GHC.IO.Encoding.Latin1.mkAscii_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.Latin1.mkAscii_entry, .-GHC.IO.Encoding.Latin1.mkAscii_entry


==================== Asm code ====================
2018-03-16 16:03:54.673532204 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.mkAscii_info
.type GHC.IO.Encoding.Latin1.mkAscii_info, @object
GHC.IO.Encoding.Latin1.mkAscii_info:
	.quad	GHC.IO.Encoding.Latin1.mkAscii_entry
	.quad	0
	.quad	64424509454
	.quad	4294967301
	.quad	S8KNa_srt


==================== Asm code ====================
2018-03-16 16:03:54.676815333 UTC

.section .data
.align 8
.align 1
lvl_r8Kux_closure:
	.quad	lvl_r8Kux_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.677966887 UTC

.section .text
.align 8
lvl_r8Kux_entry:
_c8Lqb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Lqf
_c8Lqg:
	movq $block_c8Lq8_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8Lq8
_c8Lq9:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Lqf:
	movl $lvl_r8Kux_closure,%ebx
	jmp *-8(%r13)
	.size lvl_r8Kux_entry, .-lvl_r8Kux_entry


==================== Asm code ====================
2018-03-16 16:03:54.678596803 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_r8Kux_info:
	.quad	lvl_r8Kux_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8KNa_srt+32


==================== Asm code ====================
2018-03-16 16:03:54.679269947 UTC

.section .text
.align 8
_c8Lq8:
_c8Lq8:
	movq 8(%rbp),%rax
	movq $block_c8Lqe_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8Lqe
_c8Lqi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Lq8, .-_c8Lq8


==================== Asm code ====================
2018-03-16 16:03:54.679902229 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Lq8_info:
	.quad	_c8Lq8
	.quad	1
	.quad	4294967326
	.quad	S8KNa_srt+32


==================== Asm code ====================
2018-03-16 16:03:54.680552908 UTC

.section .text
.align 8
_c8Lqe:
_c8Lqe:
	movl $GHC.IO.Encoding.Failure.recoverDecode2_closure,%ebx
	addq $8,%rbp
	jmp stg_raiseIO#
	.size _c8Lqe, .-_c8Lqe


==================== Asm code ====================
2018-03-16 16:03:54.68113763 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Lqe_info:
	.quad	_c8Lqe
	.quad	0
	.quad	4294967326
	.quad	S8KNa_srt+32


==================== Asm code ====================
2018-03-16 16:03:54.683448718 UTC

.section .data
.align 8
.align 1
lvl1_r8Kuy_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.Latin1.ascii5_closure+3
	.quad	lvl_r8Kux_closure+3
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_closure+1
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_closure+1
	.quad	GHC.IO.Encoding.Latin1.mkAscii1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.685974427 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii4_closure
.type GHC.IO.Encoding.Latin1.ascii4_closure, @object
GHC.IO.Encoding.Latin1.ascii4_closure:
	.quad	GHC.IO.Encoding.Latin1.ascii4_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.686608238 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.ascii4_entry
.type GHC.IO.Encoding.Latin1.ascii4_entry, @object
GHC.IO.Encoding.Latin1.ascii4_entry:
_c8LqH:
	movl $lvl1_r8Kuy_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.Latin1.ascii4_entry, .-GHC.IO.Encoding.Latin1.ascii4_entry


==================== Asm code ====================
2018-03-16 16:03:54.687215865 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii4_info
.type GHC.IO.Encoding.Latin1.ascii4_info, @object
GHC.IO.Encoding.Latin1.ascii4_info:
	.quad	GHC.IO.Encoding.Latin1.ascii4_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8KNa_srt+48


==================== Asm code ====================
2018-03-16 16:03:54.690706227 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii2_closure
.type GHC.IO.Encoding.Latin1.ascii2_closure, @object
GHC.IO.Encoding.Latin1.ascii2_closure:
	.quad	GHC.IO.Encoding.Latin1.ascii2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.691441391 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.ascii2_entry
.type GHC.IO.Encoding.Latin1.ascii2_entry, @object
GHC.IO.Encoding.Latin1.ascii2_entry:
_c8LqW:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Lr0
_c8Lr1:
	movq $block_c8LqT_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8LqT
_c8LqU:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Lr0:
	movl $GHC.IO.Encoding.Latin1.ascii2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.Latin1.ascii2_entry, .-GHC.IO.Encoding.Latin1.ascii2_entry


==================== Asm code ====================
2018-03-16 16:03:54.692112875 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii2_info
.type GHC.IO.Encoding.Latin1.ascii2_info, @object
GHC.IO.Encoding.Latin1.ascii2_info:
	.quad	GHC.IO.Encoding.Latin1.ascii2_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8KNa_srt+56


==================== Asm code ====================
2018-03-16 16:03:54.692800054 UTC

.section .text
.align 8
_c8LqT:
_c8LqT:
	movq $block_c8LqZ_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8LqZ
_c8Lr3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8LqT, .-_c8LqT


==================== Asm code ====================
2018-03-16 16:03:54.693439562 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LqT_info:
	.quad	_c8LqT
	.quad	1
	.quad	4294967326
	.quad	S8KNa_srt+56


==================== Asm code ====================
2018-03-16 16:03:54.694086602 UTC

.section .text
.align 8
_c8LqZ:
_c8LqZ:
	movl $GHC.IO.Encoding.Failure.recoverEncode2_closure,%ebx
	addq $32,%rbp
	jmp stg_raiseIO#
	.size _c8LqZ, .-_c8LqZ


==================== Asm code ====================
2018-03-16 16:03:54.694666554 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LqZ_info:
	.quad	_c8LqZ
	.quad	323
	.quad	4294967326
	.quad	S8KNa_srt+56


==================== Asm code ====================
2018-03-16 16:03:54.696489533 UTC

.section .data
.align 8
.align 1
lvl2_r8Kuz_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.Latin1.ascii3_closure+3
	.quad	GHC.IO.Encoding.Latin1.ascii2_closure+3
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_closure+1
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_closure+1
	.quad	GHC.IO.Encoding.Latin1.mkAscii1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.698886533 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii1_closure
.type GHC.IO.Encoding.Latin1.ascii1_closure, @object
GHC.IO.Encoding.Latin1.ascii1_closure:
	.quad	GHC.IO.Encoding.Latin1.ascii1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.699518498 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.ascii1_entry
.type GHC.IO.Encoding.Latin1.ascii1_entry, @object
GHC.IO.Encoding.Latin1.ascii1_entry:
_c8Lrt:
	movl $lvl2_r8Kuz_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.Latin1.ascii1_entry, .-GHC.IO.Encoding.Latin1.ascii1_entry


==================== Asm code ====================
2018-03-16 16:03:54.700089578 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii1_info
.type GHC.IO.Encoding.Latin1.ascii1_info, @object
GHC.IO.Encoding.Latin1.ascii1_info:
	.quad	GHC.IO.Encoding.Latin1.ascii1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8KNa_srt+72


==================== Asm code ====================
2018-03-16 16:03:54.701885234 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii_closure
.type GHC.IO.Encoding.Latin1.ascii_closure, @object
GHC.IO.Encoding.Latin1.ascii_closure:
	.quad	GHC.IO.Encoding.Types.TextEncoding_con_info
	.quad	GHC.IO.Encoding.Latin1.ascii6_closure
	.quad	GHC.IO.Encoding.Latin1.ascii4_closure+1
	.quad	GHC.IO.Encoding.Latin1.ascii1_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.703626582 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.Latin1.latin7_bytes
.type GHC.IO.Encoding.Latin1.latin7_bytes, @object
GHC.IO.Encoding.Latin1.latin7_bytes:
	.asciz "ISO-8859-1"


==================== Asm code ====================
2018-03-16 16:03:54.706208489 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin6_closure
.type GHC.IO.Encoding.Latin1.latin6_closure, @object
GHC.IO.Encoding.Latin1.latin6_closure:
	.quad	GHC.IO.Encoding.Latin1.latin6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.70705608 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.latin6_entry
.type GHC.IO.Encoding.Latin1.latin6_entry, @object
GHC.IO.Encoding.Latin1.latin6_entry:
_c8LrJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LrK
_c8LrL:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8LrI
_c8LrH:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Encoding.Latin1.latin7_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8LrK:
	jmp *-16(%r13)
_c8LrI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.Latin1.latin6_entry, .-GHC.IO.Encoding.Latin1.latin6_entry


==================== Asm code ====================
2018-03-16 16:03:54.707741232 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin6_info
.type GHC.IO.Encoding.Latin1.latin6_info, @object
GHC.IO.Encoding.Latin1.latin6_info:
	.quad	GHC.IO.Encoding.Latin1.latin6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:54.713062691 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.mkLatin1_checked_closure
.type GHC.IO.Encoding.Latin1.mkLatin1_checked_closure, @object
GHC.IO.Encoding.Latin1.mkLatin1_checked_closure:
	.quad	GHC.IO.Encoding.Latin1.mkLatin1_checked_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.713752046 UTC

.section .text
.align 8
sat_s8KAd_entry:
_c8Ls7:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverEncode1_entry
	.size sat_s8KAd_entry, .-sat_s8KAd_entry


==================== Asm code ====================
2018-03-16 16:03:54.714351532 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8KAd_info:
	.quad	sat_s8KAd_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8KNa_srt


==================== Asm code ====================
2018-03-16 16:03:54.715087753 UTC

.section .text
.align 8
sat_s8KAf_entry:
_c8Lsb:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8Lsf
_c8Lse:
	movq 7(%rbx),%rax
	movq $sat_s8KAd_info,-56(%r12)
	movq %rax,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	movq $GHC.IO.Encoding.Latin1.latin1_checked2_closure+3,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.Latin1.mkAscii2_closure+1,-16(%r12)
	movq $GHC.IO.Encoding.Latin1.mkAscii2_closure+1,-8(%r12)
	movq $GHC.IO.Encoding.Latin1.mkAscii1_closure+2,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8Lsf:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8KAf_entry, .-sat_s8KAf_entry


==================== Asm code ====================
2018-03-16 16:03:54.715839834 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8KAf_info:
	.quad	sat_s8KAf_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8KNa_srt


==================== Asm code ====================
2018-03-16 16:03:54.716508106 UTC

.section .text
.align 8
sat_s8KA9_entry:
_c8Lsq:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverDecode1_entry
	.size sat_s8KA9_entry, .-sat_s8KA9_entry


==================== Asm code ====================
2018-03-16 16:03:54.71711004 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8KA9_info:
	.quad	sat_s8KA9_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8KNa_srt+8


==================== Asm code ====================
2018-03-16 16:03:54.718463021 UTC

.section .text
.align 8
sat_s8KAb_entry:
_c8Lsu:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8Lsy
_c8Lsx:
	movq 7(%rbx),%rax
	movq $sat_s8KA9_info,-56(%r12)
	movq %rax,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	movq $GHC.IO.Encoding.Latin1.latin5_closure+3,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.Latin1.mkAscii2_closure+1,-16(%r12)
	movq $GHC.IO.Encoding.Latin1.mkAscii2_closure+1,-8(%r12)
	movq $GHC.IO.Encoding.Latin1.mkAscii1_closure+2,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8Lsy:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8KAb_entry, .-sat_s8KAb_entry


==================== Asm code ====================
2018-03-16 16:03:54.71915672 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8KAb_info:
	.quad	sat_s8KAb_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8KNa_srt+8


==================== Asm code ====================
2018-03-16 16:03:54.719935623 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.mkLatin1_checked_entry
.type GHC.IO.Encoding.Latin1.mkLatin1_checked_entry, @object
GHC.IO.Encoding.Latin1.mkLatin1_checked_entry:
_c8LsA:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8LsE
_c8LsD:
	movq $sat_s8KAf_info,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s8KAb_info,-40(%r12)
	movq %r14,-32(%r12)
	movq $GHC.IO.Encoding.Types.TextEncoding_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Latin1.latin6_closure,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8LsE:
	movq $64,904(%r13)
	movl $GHC.IO.Encoding.Latin1.mkLatin1_checked_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.Latin1.mkLatin1_checked_entry, .-GHC.IO.Encoding.Latin1.mkLatin1_checked_entry


==================== Asm code ====================
2018-03-16 16:03:54.720639912 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.mkLatin1_checked_info
.type GHC.IO.Encoding.Latin1.mkLatin1_checked_info, @object
GHC.IO.Encoding.Latin1.mkLatin1_checked_info:
	.quad	GHC.IO.Encoding.Latin1.mkLatin1_checked_entry
	.quad	0
	.quad	13207024435214
	.quad	4294967301
	.quad	S8KNa_srt


==================== Asm code ====================
2018-03-16 16:03:54.722907147 UTC

.section .data
.align 8
.align 1
lvl3_r8KuA_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.Latin1.latin5_closure+3
	.quad	lvl_r8Kux_closure+3
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_closure+1
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_closure+1
	.quad	GHC.IO.Encoding.Latin1.mkAscii1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.725145923 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin4_closure
.type GHC.IO.Encoding.Latin1.latin4_closure, @object
GHC.IO.Encoding.Latin1.latin4_closure:
	.quad	GHC.IO.Encoding.Latin1.latin4_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.725801239 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.latin4_entry
.type GHC.IO.Encoding.Latin1.latin4_entry, @object
GHC.IO.Encoding.Latin1.latin4_entry:
_c8Lt7:
	movl $lvl3_r8KuA_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.Latin1.latin4_entry, .-GHC.IO.Encoding.Latin1.latin4_entry


==================== Asm code ====================
2018-03-16 16:03:54.726417479 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin4_info
.type GHC.IO.Encoding.Latin1.latin4_info, @object
GHC.IO.Encoding.Latin1.latin4_info:
	.quad	GHC.IO.Encoding.Latin1.latin4_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8KNa_srt+96


==================== Asm code ====================
2018-03-16 16:03:54.728264189 UTC

.section .data
.align 8
.align 1
lvl4_r8KuB_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.Latin1.latin1_checked2_closure+3
	.quad	GHC.IO.Encoding.Latin1.ascii2_closure+3
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_closure+1
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_closure+1
	.quad	GHC.IO.Encoding.Latin1.mkAscii1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.730757135 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_checked1_closure
.type GHC.IO.Encoding.Latin1.latin1_checked1_closure, @object
GHC.IO.Encoding.Latin1.latin1_checked1_closure:
	.quad	GHC.IO.Encoding.Latin1.latin1_checked1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.731394002 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.latin1_checked1_entry
.type GHC.IO.Encoding.Latin1.latin1_checked1_entry, @object
GHC.IO.Encoding.Latin1.latin1_checked1_entry:
_c8Ltk:
	movl $lvl4_r8KuB_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.Latin1.latin1_checked1_entry, .-GHC.IO.Encoding.Latin1.latin1_checked1_entry


==================== Asm code ====================
2018-03-16 16:03:54.732046966 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_checked1_info
.type GHC.IO.Encoding.Latin1.latin1_checked1_info, @object
GHC.IO.Encoding.Latin1.latin1_checked1_info:
	.quad	GHC.IO.Encoding.Latin1.latin1_checked1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8KNa_srt+104


==================== Asm code ====================
2018-03-16 16:03:54.733886995 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_checked_closure
.type GHC.IO.Encoding.Latin1.latin1_checked_closure, @object
GHC.IO.Encoding.Latin1.latin1_checked_closure:
	.quad	GHC.IO.Encoding.Types.TextEncoding_con_info
	.quad	GHC.IO.Encoding.Latin1.latin6_closure
	.quad	GHC.IO.Encoding.Latin1.latin4_closure+1
	.quad	GHC.IO.Encoding.Latin1.latin1_checked1_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.739135942 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.mkLatin1_closure
.type GHC.IO.Encoding.Latin1.mkLatin1_closure, @object
GHC.IO.Encoding.Latin1.mkLatin1_closure:
	.quad	GHC.IO.Encoding.Latin1.mkLatin1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.739784748 UTC

.section .text
.align 8
sat_s8KAo_entry:
_c8LtH:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverEncode1_entry
	.size sat_s8KAo_entry, .-sat_s8KAo_entry


==================== Asm code ====================
2018-03-16 16:03:54.740371436 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8KAo_info:
	.quad	sat_s8KAo_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8KNa_srt


==================== Asm code ====================
2018-03-16 16:03:54.741189271 UTC

.section .text
.align 8
sat_s8KAq_entry:
_c8LtL:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8LtP
_c8LtO:
	movq 7(%rbx),%rax
	movq $sat_s8KAo_info,-56(%r12)
	movq %rax,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	movq $GHC.IO.Encoding.Latin1.latin3_closure+3,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.Latin1.mkAscii2_closure+1,-16(%r12)
	movq $GHC.IO.Encoding.Latin1.mkAscii2_closure+1,-8(%r12)
	movq $GHC.IO.Encoding.Latin1.mkAscii1_closure+2,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8LtP:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8KAq_entry, .-sat_s8KAq_entry


==================== Asm code ====================
2018-03-16 16:03:54.741927691 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8KAq_info:
	.quad	sat_s8KAq_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8KNa_srt


==================== Asm code ====================
2018-03-16 16:03:54.742570691 UTC

.section .text
.align 8
sat_s8KAk_entry:
_c8Lu0:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverDecode1_entry
	.size sat_s8KAk_entry, .-sat_s8KAk_entry


==================== Asm code ====================
2018-03-16 16:03:54.74316099 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8KAk_info:
	.quad	sat_s8KAk_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8KNa_srt+8


==================== Asm code ====================
2018-03-16 16:03:54.743917716 UTC

.section .text
.align 8
sat_s8KAm_entry:
_c8Lu4:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8Lu8
_c8Lu7:
	movq 7(%rbx),%rax
	movq $sat_s8KAk_info,-56(%r12)
	movq %rax,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	movq $GHC.IO.Encoding.Latin1.latin5_closure+3,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.Latin1.mkAscii2_closure+1,-16(%r12)
	movq $GHC.IO.Encoding.Latin1.mkAscii2_closure+1,-8(%r12)
	movq $GHC.IO.Encoding.Latin1.mkAscii1_closure+2,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8Lu8:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8KAm_entry, .-sat_s8KAm_entry


==================== Asm code ====================
2018-03-16 16:03:54.744639763 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8KAm_info:
	.quad	sat_s8KAm_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8KNa_srt+8


==================== Asm code ====================
2018-03-16 16:03:54.745458823 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.mkLatin1_entry
.type GHC.IO.Encoding.Latin1.mkLatin1_entry, @object
GHC.IO.Encoding.Latin1.mkLatin1_entry:
_c8Lua:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8Lue
_c8Lud:
	movq $sat_s8KAq_info,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s8KAm_info,-40(%r12)
	movq %r14,-32(%r12)
	movq $GHC.IO.Encoding.Types.TextEncoding_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Latin1.latin6_closure,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8Lue:
	movq $64,904(%r13)
	movl $GHC.IO.Encoding.Latin1.mkLatin1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.Latin1.mkLatin1_entry, .-GHC.IO.Encoding.Latin1.mkLatin1_entry


==================== Asm code ====================
2018-03-16 16:03:54.746203294 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.mkLatin1_info
.type GHC.IO.Encoding.Latin1.mkLatin1_info, @object
GHC.IO.Encoding.Latin1.mkLatin1_info:
	.quad	GHC.IO.Encoding.Latin1.mkLatin1_entry
	.quad	0
	.quad	79177722101774
	.quad	4294967301
	.quad	S8KNa_srt


==================== Asm code ====================
2018-03-16 16:03:54.747976975 UTC

.section .data
.align 8
.align 1
lvl5_r8KuC_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.Latin1.latin3_closure+3
	.quad	GHC.IO.Encoding.Latin1.ascii2_closure+3
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_closure+1
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_closure+1
	.quad	GHC.IO.Encoding.Latin1.mkAscii1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.750308063 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin2_closure
.type GHC.IO.Encoding.Latin1.latin2_closure, @object
GHC.IO.Encoding.Latin1.latin2_closure:
	.quad	GHC.IO.Encoding.Latin1.latin2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.751419775 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.latin2_entry
.type GHC.IO.Encoding.Latin1.latin2_entry, @object
GHC.IO.Encoding.Latin1.latin2_entry:
_c8LuH:
	movl $lvl5_r8KuC_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.Latin1.latin2_entry, .-GHC.IO.Encoding.Latin1.latin2_entry


==================== Asm code ====================
2018-03-16 16:03:54.752016206 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin2_info
.type GHC.IO.Encoding.Latin1.latin2_info, @object
GHC.IO.Encoding.Latin1.latin2_info:
	.quad	GHC.IO.Encoding.Latin1.latin2_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8KNa_srt+120


==================== Asm code ====================
2018-03-16 16:03:54.753769194 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_closure
.type GHC.IO.Encoding.Latin1.latin1_closure, @object
GHC.IO.Encoding.Latin1.latin1_closure:
	.quad	GHC.IO.Encoding.Types.TextEncoding_con_info
	.quad	GHC.IO.Encoding.Latin1.latin6_closure
	.quad	GHC.IO.Encoding.Latin1.latin4_closure+1
	.quad	GHC.IO.Encoding.Latin1.latin2_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.75559785 UTC

.section .data.rel.ro
.align 8
.align 1
S8KNa_srt:
	.quad	GHC.IO.Encoding.Failure.recoverEncode1_closure
	.quad	GHC.IO.Encoding.Failure.recoverDecode1_closure
	.quad	GHC.IO.Encoding.Latin1.mkAscii_closure
	.quad	GHC.IO.Encoding.Latin1.ascii6_closure
	.quad	GHC.IO.Encoding.Failure.recoverDecode2_closure
	.quad	lvl_r8Kux_closure
	.quad	lvl1_r8Kuy_closure
	.quad	GHC.IO.Encoding.Failure.recoverEncode2_closure
	.quad	GHC.IO.Encoding.Latin1.ascii2_closure
	.quad	lvl2_r8Kuz_closure
	.quad	GHC.IO.Encoding.Latin1.mkLatin1_checked_closure
	.quad	GHC.IO.Encoding.Latin1.latin6_closure
	.quad	lvl3_r8KuA_closure
	.quad	lvl4_r8KuB_closure
	.quad	GHC.IO.Encoding.Latin1.mkLatin1_closure
	.quad	lvl5_r8KuC_closure


==================== Asm code ====================
2018-03-16 16:03:55.749345589 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin5_closure
.type GHC.IO.Encoding.Latin1.latin5_closure, @object
GHC.IO.Encoding.Latin1.latin5_closure:
	.quad	GHC.IO.Encoding.Latin1.latin5_info


==================== Asm code ====================
2018-03-16 16:03:55.750491612 UTC

.section .text
.align 8
sat_s8Lve_entry:
_c8LB9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LBa
_c8LBb:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LBd
_c8LBc:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8LB8
_c8LB7:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LBd:
	movq $56,904(%r13)
_c8LBa:
	jmp *-16(%r13)
_c8LB8:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Lve_entry, .-sat_s8Lve_entry


==================== Asm code ====================
2018-03-16 16:03:55.751385299 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Lve_info:
	.quad	sat_s8Lve_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:55.752384999 UTC

.section .text
.align 8
sat_s8Lvm_entry:
_c8LBv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LBw
_c8LBx:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LBz
_c8LBy:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8LBu
_c8LBt:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LBz:
	movq $56,904(%r13)
_c8LBw:
	jmp *-16(%r13)
_c8LBu:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Lvm_entry, .-sat_s8Lvm_entry


==================== Asm code ====================
2018-03-16 16:03:55.753303217 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Lvm_info:
	.quad	sat_s8Lvm_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:55.754155625 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.latin5_entry
.type GHC.IO.Encoding.Latin1.latin5_entry, @object
GHC.IO.Encoding.Latin1.latin5_entry:
_c8LBC:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LBD
_c8LBE:
	leaq block_c8LAJ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8LAJ
_c8LAK:
	movq (%rbx),%rax
	jmp *(%rax)
_c8LBD:
	leaq GHC.IO.Encoding.Latin1.latin5_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.Latin1.latin5_entry, .-GHC.IO.Encoding.Latin1.latin5_entry


==================== Asm code ====================
2018-03-16 16:03:55.754854858 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin5_info
.type GHC.IO.Encoding.Latin1.latin5_info, @object
GHC.IO.Encoding.Latin1.latin5_info:
	.quad	GHC.IO.Encoding.Latin1.latin5_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:55.7557351 UTC

.section .text
.align 8
_c8LAJ:
_c8LAJ:
	leaq block_c8LAO_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8LAO
_c8LAP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8LAJ, .-_c8LAJ


==================== Asm code ====================
2018-03-16 16:03:55.756453746 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LAJ_info:
	.quad	_c8LAJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.757702703 UTC

.section .text
.align 8
_c8LAO:
_c8LAO:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LBI
_c8LBH:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8LBT:
	cmpq %rsi,%rbx
	jl _c8LC6
_c8LC7:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8LBi
_c8LC3:
	movzbl (%r8,%r11,1),%r14d
	movl %r14d,(%rdx,%rbx,4)
	incq %rbx
	incq %r11
	jmp _c8LBT
_c8LC6:
	cmpq %r9,%r11
	jl _c8LC3
_c8LC4:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8LAW
_c8LBI:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8LAO, .-_c8LAO


==================== Asm code ====================
2018-03-16 16:03:55.758724166 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LAO_info:
	.quad	_c8LAO
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.759730125 UTC

.section .text
.align 8
_c8LAW:
_c8LAW:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8LBM
_c8LBL:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8Lve_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LBM:
	movq $160,904(%r13)
	leaq block_c8LAW_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8LAW, .-_c8LAW


==================== Asm code ====================
2018-03-16 16:03:55.760737054 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LAW_info:
	.quad	_c8LAW
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.761882495 UTC

.section .text
.align 8
_c8LBi:
_c8LBi:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8LBQ
_c8LBP:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8Lvm_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LBQ:
	movq $160,904(%r13)
	leaq block_c8LBi_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8LBi, .-_c8LBi


==================== Asm code ====================
2018-03-16 16:03:55.762885175 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LBi_info:
	.quad	_c8LBi
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.766678176 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_decode_closure
.type GHC.IO.Encoding.Latin1.latin1_decode_closure, @object
GHC.IO.Encoding.Latin1.latin1_decode_closure:
	.quad	GHC.IO.Encoding.Latin1.latin1_decode_info


==================== Asm code ====================
2018-03-16 16:03:55.767318613 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.latin1_decode_entry
.type GHC.IO.Encoding.Latin1.latin1_decode_entry, @object
GHC.IO.Encoding.Latin1.latin1_decode_entry:
_c8LDU:
	jmp GHC.IO.Encoding.Latin1.latin5_entry
	.size GHC.IO.Encoding.Latin1.latin1_decode_entry, .-GHC.IO.Encoding.Latin1.latin1_decode_entry


==================== Asm code ====================
2018-03-16 16:03:55.767999065 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_decode_info
.type GHC.IO.Encoding.Latin1.latin1_decode_info, @object
GHC.IO.Encoding.Latin1.latin1_decode_info:
	.quad	GHC.IO.Encoding.Latin1.latin1_decode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:55.781961296 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii5_closure
.type GHC.IO.Encoding.Latin1.ascii5_closure, @object
GHC.IO.Encoding.Latin1.ascii5_closure:
	.quad	GHC.IO.Encoding.Latin1.ascii5_info


==================== Asm code ====================
2018-03-16 16:03:55.783067502 UTC

.section .text
.align 8
sat_s8Lw3_entry:
_c8LEv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LEw
_c8LEx:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LEz
_c8LEy:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8LEu
_c8LEt:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LEz:
	movq $56,904(%r13)
_c8LEw:
	jmp *-16(%r13)
_c8LEu:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Lw3_entry, .-sat_s8Lw3_entry


==================== Asm code ====================
2018-03-16 16:03:55.783941041 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Lw3_info:
	.quad	sat_s8Lw3_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:55.784900891 UTC

.section .text
.align 8
sat_s8Lwb_entry:
_c8LER:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LES
_c8LET:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LEV
_c8LEU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8LEQ
_c8LEP:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LEV:
	movq $56,904(%r13)
_c8LES:
	jmp *-16(%r13)
_c8LEQ:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Lwb_entry, .-sat_s8Lwb_entry


==================== Asm code ====================
2018-03-16 16:03:55.786002357 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Lwb_info:
	.quad	sat_s8Lwb_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:55.786950968 UTC

.section .text
.align 8
sat_s8Lwj_entry:
_c8LFd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LFe
_c8LFf:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LFh
_c8LFg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8LFc
_c8LFb:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LFh:
	movq $56,904(%r13)
_c8LFe:
	jmp *-16(%r13)
_c8LFc:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Lwj_entry, .-sat_s8Lwj_entry


==================== Asm code ====================
2018-03-16 16:03:55.787869518 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Lwj_info:
	.quad	sat_s8Lwj_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:55.788672942 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.ascii5_entry
.type GHC.IO.Encoding.Latin1.ascii5_entry, @object
GHC.IO.Encoding.Latin1.ascii5_entry:
_c8LFk:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LFl
_c8LFm:
	leaq block_c8LE5_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8LE5
_c8LE6:
	movq (%rbx),%rax
	jmp *(%rax)
_c8LFl:
	leaq GHC.IO.Encoding.Latin1.ascii5_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.Latin1.ascii5_entry, .-GHC.IO.Encoding.Latin1.ascii5_entry


==================== Asm code ====================
2018-03-16 16:03:55.789472783 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii5_info
.type GHC.IO.Encoding.Latin1.ascii5_info, @object
GHC.IO.Encoding.Latin1.ascii5_info:
	.quad	GHC.IO.Encoding.Latin1.ascii5_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:55.790239435 UTC

.section .text
.align 8
_c8LE5:
_c8LE5:
	leaq block_c8LEa_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8LEa
_c8LEb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8LE5, .-_c8LE5


==================== Asm code ====================
2018-03-16 16:03:55.790991985 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LE5_info:
	.quad	_c8LE5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.792209437 UTC

.section .text
.align 8
_c8LEa:
_c8LEa:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LFq
_c8LFp:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8LFF:
	cmpq %rsi,%rbx
	jl _c8LG2
_c8LG3:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8LF0
_c8LFW:
	movl %r14d,(%rdx,%rbx,4)
	incq %rbx
	incq %r11
	jmp _c8LFF
_c8LG2:
	cmpq %r9,%r11
	jl _c8LFZ
_c8LG0:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8LEE
_c8LFZ:
	movzbl (%r8,%r11,1),%r14d
	cmpq $127,%r14
	jbe _c8LFW
_c8LFX:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8LEi
_c8LFq:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8LEa, .-_c8LEa


==================== Asm code ====================
2018-03-16 16:03:55.793255251 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LEa_info:
	.quad	_c8LEa
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.794235764 UTC

.section .text
.align 8
_c8LEi:
_c8LEi:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8LFu
_c8LFt:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8Lw3_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LFu:
	movq $160,904(%r13)
	leaq block_c8LEi_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8LEi, .-_c8LEi


==================== Asm code ====================
2018-03-16 16:03:55.795195168 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LEi_info:
	.quad	_c8LEi
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.796187433 UTC

.section .text
.align 8
_c8LEE:
_c8LEE:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8LFy
_c8LFx:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8Lwb_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LFy:
	movq $160,904(%r13)
	leaq block_c8LEE_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8LEE, .-_c8LEE


==================== Asm code ====================
2018-03-16 16:03:55.797148725 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LEE_info:
	.quad	_c8LEE
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.798245403 UTC

.section .text
.align 8
_c8LF0:
_c8LF0:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8LFC
_c8LFB:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8Lwj_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LFC:
	movq $160,904(%r13)
	leaq block_c8LF0_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8LF0, .-_c8LF0


==================== Asm code ====================
2018-03-16 16:03:55.799189703 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LF0_info:
	.quad	_c8LF0
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.801708378 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii_decode_closure
.type GHC.IO.Encoding.Latin1.ascii_decode_closure, @object
GHC.IO.Encoding.Latin1.ascii_decode_closure:
	.quad	GHC.IO.Encoding.Latin1.ascii_decode_info


==================== Asm code ====================
2018-03-16 16:03:55.802371478 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.ascii_decode_entry
.type GHC.IO.Encoding.Latin1.ascii_decode_entry, @object
GHC.IO.Encoding.Latin1.ascii_decode_entry:
_c8LIl:
	jmp GHC.IO.Encoding.Latin1.ascii5_entry
	.size GHC.IO.Encoding.Latin1.ascii_decode_entry, .-GHC.IO.Encoding.Latin1.ascii_decode_entry


==================== Asm code ====================
2018-03-16 16:03:55.803006702 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii_decode_info
.type GHC.IO.Encoding.Latin1.ascii_decode_info, @object
GHC.IO.Encoding.Latin1.ascii_decode_info:
	.quad	GHC.IO.Encoding.Latin1.ascii_decode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:55.814790402 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin3_closure
.type GHC.IO.Encoding.Latin1.latin3_closure, @object
GHC.IO.Encoding.Latin1.latin3_closure:
	.quad	GHC.IO.Encoding.Latin1.latin3_info


==================== Asm code ====================
2018-03-16 16:03:55.815949253 UTC

.section .text
.align 8
sat_s8Lx1_entry:
_c8LIW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LIX
_c8LIY:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LJ0
_c8LIZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8LIV
_c8LIU:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LJ0:
	movq $56,904(%r13)
_c8LIX:
	jmp *-16(%r13)
_c8LIV:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Lx1_entry, .-sat_s8Lx1_entry


==================== Asm code ====================
2018-03-16 16:03:55.816911593 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Lx1_info:
	.quad	sat_s8Lx1_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:55.817958922 UTC

.section .text
.align 8
sat_s8Lx9_entry:
_c8LJi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LJj
_c8LJk:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LJm
_c8LJl:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8LJh
_c8LJg:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LJm:
	movq $56,904(%r13)
_c8LJj:
	jmp *-16(%r13)
_c8LJh:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Lx9_entry, .-sat_s8Lx9_entry


==================== Asm code ====================
2018-03-16 16:03:55.818926185 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Lx9_info:
	.quad	sat_s8Lx9_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:55.820583932 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.latin3_entry
.type GHC.IO.Encoding.Latin1.latin3_entry, @object
GHC.IO.Encoding.Latin1.latin3_entry:
_c8LJp:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LJq
_c8LJr:
	leaq block_c8LIw_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8LIw
_c8LIx:
	movq (%rbx),%rax
	jmp *(%rax)
_c8LJq:
	leaq GHC.IO.Encoding.Latin1.latin3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.Latin1.latin3_entry, .-GHC.IO.Encoding.Latin1.latin3_entry


==================== Asm code ====================
2018-03-16 16:03:55.821526694 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin3_info
.type GHC.IO.Encoding.Latin1.latin3_info, @object
GHC.IO.Encoding.Latin1.latin3_info:
	.quad	GHC.IO.Encoding.Latin1.latin3_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:55.822382364 UTC

.section .text
.align 8
_c8LIw:
_c8LIw:
	leaq block_c8LIB_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8LIB
_c8LIC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8LIw, .-_c8LIw


==================== Asm code ====================
2018-03-16 16:03:55.823070543 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LIw_info:
	.quad	_c8LIw
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.824179449 UTC

.section .text
.align 8
_c8LIB:
_c8LIB:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LJv
_c8LJu:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8LJG:
	cmpq %rsi,%rbx
	jl _c8LJT
_c8LJU:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8LJ5
_c8LJQ:
	movl (%r8,%r11,4),%r14d
	movb %r14b,(%rdx,%rbx,1)
	incq %rbx
	incq %r11
	jmp _c8LJG
_c8LJT:
	cmpq %r9,%r11
	jl _c8LJQ
_c8LJR:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8LIJ
_c8LJv:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8LIB, .-_c8LIB


==================== Asm code ====================
2018-03-16 16:03:55.825114161 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LIB_info:
	.quad	_c8LIB
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.826391072 UTC

.section .text
.align 8
_c8LIJ:
_c8LIJ:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8LJz
_c8LJy:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8Lx1_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LJz:
	movq $160,904(%r13)
	leaq block_c8LIJ_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8LIJ, .-_c8LIJ


==================== Asm code ====================
2018-03-16 16:03:55.827315571 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LIJ_info:
	.quad	_c8LIJ
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.828234649 UTC

.section .text
.align 8
_c8LJ5:
_c8LJ5:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8LJD
_c8LJC:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8Lx9_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LJD:
	movq $160,904(%r13)
	leaq block_c8LJ5_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8LJ5, .-_c8LJ5


==================== Asm code ====================
2018-03-16 16:03:55.829116706 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LJ5_info:
	.quad	_c8LJ5
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.831504827 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_encode_closure
.type GHC.IO.Encoding.Latin1.latin1_encode_closure, @object
GHC.IO.Encoding.Latin1.latin1_encode_closure:
	.quad	GHC.IO.Encoding.Latin1.latin1_encode_info


==================== Asm code ====================
2018-03-16 16:03:55.832157964 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.latin1_encode_entry
.type GHC.IO.Encoding.Latin1.latin1_encode_entry, @object
GHC.IO.Encoding.Latin1.latin1_encode_entry:
_c8LLL:
	jmp GHC.IO.Encoding.Latin1.latin3_entry
	.size GHC.IO.Encoding.Latin1.latin1_encode_entry, .-GHC.IO.Encoding.Latin1.latin1_encode_entry


==================== Asm code ====================
2018-03-16 16:03:55.832734453 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_encode_info
.type GHC.IO.Encoding.Latin1.latin1_encode_info, @object
GHC.IO.Encoding.Latin1.latin1_encode_info:
	.quad	GHC.IO.Encoding.Latin1.latin1_encode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:55.845952907 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii3_closure
.type GHC.IO.Encoding.Latin1.ascii3_closure, @object
GHC.IO.Encoding.Latin1.ascii3_closure:
	.quad	GHC.IO.Encoding.Latin1.ascii3_info


==================== Asm code ====================
2018-03-16 16:03:55.846931767 UTC

.section .text
.align 8
sat_s8LxR_entry:
_c8LMm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LMn
_c8LMo:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LMq
_c8LMp:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8LMl
_c8LMk:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LMq:
	movq $56,904(%r13)
_c8LMn:
	jmp *-16(%r13)
_c8LMl:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8LxR_entry, .-sat_s8LxR_entry


==================== Asm code ====================
2018-03-16 16:03:55.84777374 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8LxR_info:
	.quad	sat_s8LxR_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:55.848661814 UTC

.section .text
.align 8
sat_s8LxZ_entry:
_c8LMI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LMJ
_c8LMK:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LMM
_c8LML:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8LMH
_c8LMG:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LMM:
	movq $56,904(%r13)
_c8LMJ:
	jmp *-16(%r13)
_c8LMH:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8LxZ_entry, .-sat_s8LxZ_entry


==================== Asm code ====================
2018-03-16 16:03:55.849477628 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8LxZ_info:
	.quad	sat_s8LxZ_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:55.850374553 UTC

.section .text
.align 8
sat_s8Ly7_entry:
_c8LN4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LN5
_c8LN6:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LN8
_c8LN7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8LN3
_c8LN2:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LN8:
	movq $56,904(%r13)
_c8LN5:
	jmp *-16(%r13)
_c8LN3:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Ly7_entry, .-sat_s8Ly7_entry


==================== Asm code ====================
2018-03-16 16:03:55.851210782 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Ly7_info:
	.quad	sat_s8Ly7_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:55.852003915 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.ascii3_entry
.type GHC.IO.Encoding.Latin1.ascii3_entry, @object
GHC.IO.Encoding.Latin1.ascii3_entry:
_c8LNb:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LNc
_c8LNd:
	leaq block_c8LLW_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8LLW
_c8LLX:
	movq (%rbx),%rax
	jmp *(%rax)
_c8LNc:
	leaq GHC.IO.Encoding.Latin1.ascii3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.Latin1.ascii3_entry, .-GHC.IO.Encoding.Latin1.ascii3_entry


==================== Asm code ====================
2018-03-16 16:03:55.852711946 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii3_info
.type GHC.IO.Encoding.Latin1.ascii3_info, @object
GHC.IO.Encoding.Latin1.ascii3_info:
	.quad	GHC.IO.Encoding.Latin1.ascii3_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:55.853590354 UTC

.section .text
.align 8
_c8LLW:
_c8LLW:
	leaq block_c8LM1_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8LM1
_c8LM2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8LLW, .-_c8LLW


==================== Asm code ====================
2018-03-16 16:03:55.854292706 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LLW_info:
	.quad	_c8LLW
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.855400924 UTC

.section .text
.align 8
_c8LM1:
_c8LM1:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LNh
_c8LNg:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8LNw:
	cmpq %rsi,%rbx
	jl _c8LNT
_c8LNU:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8LMR
_c8LNN:
	movb %r14b,(%rdx,%rbx,1)
	incq %rbx
	incq %r11
	jmp _c8LNw
_c8LNT:
	cmpq %r9,%r11
	jl _c8LNQ
_c8LNR:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8LMv
_c8LNQ:
	movl (%r8,%r11,4),%r14d
	cmpq $127,%r14
	jle _c8LNN
_c8LNO:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8LM9
_c8LNh:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8LM1, .-_c8LM1


==================== Asm code ====================
2018-03-16 16:03:55.856401904 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LM1_info:
	.quad	_c8LM1
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.85733765 UTC

.section .text
.align 8
_c8LM9:
_c8LM9:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8LNl
_c8LNk:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8LxR_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LNl:
	movq $160,904(%r13)
	leaq block_c8LM9_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8LM9, .-_c8LM9


==================== Asm code ====================
2018-03-16 16:03:55.858187197 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LM9_info:
	.quad	_c8LM9
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.859118197 UTC

.section .text
.align 8
_c8LMv:
_c8LMv:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8LNp
_c8LNo:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8LxZ_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LNp:
	movq $160,904(%r13)
	leaq block_c8LMv_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8LMv, .-_c8LMv


==================== Asm code ====================
2018-03-16 16:03:55.859995129 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LMv_info:
	.quad	_c8LMv
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.860882064 UTC

.section .text
.align 8
_c8LMR:
_c8LMR:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8LNt
_c8LNs:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8Ly7_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LNt:
	movq $160,904(%r13)
	leaq block_c8LMR_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8LMR, .-_c8LMR


==================== Asm code ====================
2018-03-16 16:03:55.861973286 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LMR_info:
	.quad	_c8LMR
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.864218406 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii_encode_closure
.type GHC.IO.Encoding.Latin1.ascii_encode_closure, @object
GHC.IO.Encoding.Latin1.ascii_encode_closure:
	.quad	GHC.IO.Encoding.Latin1.ascii_encode_info


==================== Asm code ====================
2018-03-16 16:03:55.864863793 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.ascii_encode_entry
.type GHC.IO.Encoding.Latin1.ascii_encode_entry, @object
GHC.IO.Encoding.Latin1.ascii_encode_entry:
_c8LQj:
	jmp GHC.IO.Encoding.Latin1.ascii3_entry
	.size GHC.IO.Encoding.Latin1.ascii_encode_entry, .-GHC.IO.Encoding.Latin1.ascii_encode_entry


==================== Asm code ====================
2018-03-16 16:03:55.865472468 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii_encode_info
.type GHC.IO.Encoding.Latin1.ascii_encode_info, @object
GHC.IO.Encoding.Latin1.ascii_encode_info:
	.quad	GHC.IO.Encoding.Latin1.ascii_encode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:55.88025339 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_checked2_closure
.type GHC.IO.Encoding.Latin1.latin1_checked2_closure, @object
GHC.IO.Encoding.Latin1.latin1_checked2_closure:
	.quad	GHC.IO.Encoding.Latin1.latin1_checked2_info


==================== Asm code ====================
2018-03-16 16:03:55.881402482 UTC

.section .text
.align 8
sat_s8LyR_entry:
_c8LQU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LQV
_c8LQW:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LQY
_c8LQX:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8LQT
_c8LQS:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LQY:
	movq $56,904(%r13)
_c8LQV:
	jmp *-16(%r13)
_c8LQT:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8LyR_entry, .-sat_s8LyR_entry


==================== Asm code ====================
2018-03-16 16:03:55.88229863 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8LyR_info:
	.quad	sat_s8LyR_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:55.883265381 UTC

.section .text
.align 8
sat_s8LyZ_entry:
_c8LRg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LRh
_c8LRi:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LRk
_c8LRj:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8LRf
_c8LRe:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LRk:
	movq $56,904(%r13)
_c8LRh:
	jmp *-16(%r13)
_c8LRf:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8LyZ_entry, .-sat_s8LyZ_entry


==================== Asm code ====================
2018-03-16 16:03:55.884147605 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8LyZ_info:
	.quad	sat_s8LyZ_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:55.885070577 UTC

.section .text
.align 8
sat_s8Lz7_entry:
_c8LRC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LRD
_c8LRE:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LRG
_c8LRF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8LRB
_c8LRA:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LRG:
	movq $56,904(%r13)
_c8LRD:
	jmp *-16(%r13)
_c8LRB:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Lz7_entry, .-sat_s8Lz7_entry


==================== Asm code ====================
2018-03-16 16:03:55.885980483 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Lz7_info:
	.quad	sat_s8Lz7_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:55.88679188 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.latin1_checked2_entry
.type GHC.IO.Encoding.Latin1.latin1_checked2_entry, @object
GHC.IO.Encoding.Latin1.latin1_checked2_entry:
_c8LRJ:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LRK
_c8LRL:
	leaq block_c8LQu_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8LQu
_c8LQv:
	movq (%rbx),%rax
	jmp *(%rax)
_c8LRK:
	leaq GHC.IO.Encoding.Latin1.latin1_checked2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.Latin1.latin1_checked2_entry, .-GHC.IO.Encoding.Latin1.latin1_checked2_entry


==================== Asm code ====================
2018-03-16 16:03:55.887485712 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_checked2_info
.type GHC.IO.Encoding.Latin1.latin1_checked2_info, @object
GHC.IO.Encoding.Latin1.latin1_checked2_info:
	.quad	GHC.IO.Encoding.Latin1.latin1_checked2_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:55.888317673 UTC

.section .text
.align 8
_c8LQu:
_c8LQu:
	leaq block_c8LQz_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8LQz
_c8LQA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8LQu, .-_c8LQu


==================== Asm code ====================
2018-03-16 16:03:55.889066928 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LQu_info:
	.quad	_c8LQu
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.890274257 UTC

.section .text
.align 8
_c8LQz:
_c8LQz:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8LRP
_c8LRO:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8LS4:
	cmpq %rsi,%rbx
	jl _c8LSr
_c8LSs:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8LRp
_c8LSl:
	movb %r14b,(%rdx,%rbx,1)
	incq %rbx
	incq %r11
	jmp _c8LS4
_c8LSr:
	cmpq %r9,%r11
	jl _c8LSo
_c8LSp:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8LR3
_c8LSo:
	movl (%r8,%r11,4),%r14d
	cmpq $255,%r14
	jle _c8LSl
_c8LSm:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8LQH
_c8LRP:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8LQz, .-_c8LQz


==================== Asm code ====================
2018-03-16 16:03:55.891248039 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LQz_info:
	.quad	_c8LQz
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.892218771 UTC

.section .text
.align 8
_c8LQH:
_c8LQH:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8LRT
_c8LRS:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8LyR_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LRT:
	movq $160,904(%r13)
	leaq block_c8LQH_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8LQH, .-_c8LQH


==================== Asm code ====================
2018-03-16 16:03:55.89322724 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LQH_info:
	.quad	_c8LQH
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.894235023 UTC

.section .text
.align 8
_c8LR3:
_c8LR3:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8LRX
_c8LRW:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8LyZ_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LRX:
	movq $160,904(%r13)
	leaq block_c8LR3_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8LR3, .-_c8LR3


==================== Asm code ====================
2018-03-16 16:03:55.895245132 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LR3_info:
	.quad	_c8LR3
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.896254949 UTC

.section .text
.align 8
_c8LRp:
_c8LRp:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8LS1
_c8LS0:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8Lz7_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8LS1:
	movq $160,904(%r13)
	leaq block_c8LRp_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8LRp, .-_c8LRp


==================== Asm code ====================
2018-03-16 16:03:55.897284994 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LRp_info:
	.quad	_c8LRp
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:55.899886433 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_checked_encode_closure
.type GHC.IO.Encoding.Latin1.latin1_checked_encode_closure, @object
GHC.IO.Encoding.Latin1.latin1_checked_encode_closure:
	.quad	GHC.IO.Encoding.Latin1.latin1_checked_encode_info


==================== Asm code ====================
2018-03-16 16:03:55.90059594 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.latin1_checked_encode_entry
.type GHC.IO.Encoding.Latin1.latin1_checked_encode_entry, @object
GHC.IO.Encoding.Latin1.latin1_checked_encode_entry:
_c8LUR:
	jmp GHC.IO.Encoding.Latin1.latin1_checked2_entry
	.size GHC.IO.Encoding.Latin1.latin1_checked_encode_entry, .-GHC.IO.Encoding.Latin1.latin1_checked_encode_entry


==================== Asm code ====================
2018-03-16 16:03:55.901222958 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_checked_encode_info
.type GHC.IO.Encoding.Latin1.latin1_checked_encode_info, @object
GHC.IO.Encoding.Latin1.latin1_checked_encode_info:
	.quad	GHC.IO.Encoding.Latin1.latin1_checked_encode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:55.903123292 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.Latin1.$trModule4_bytes
.type GHC.IO.Encoding.Latin1.$trModule4_bytes, @object
GHC.IO.Encoding.Latin1.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:03:55.905060452 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.$trModule3_closure
.type GHC.IO.Encoding.Latin1.$trModule3_closure, @object
GHC.IO.Encoding.Latin1.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Encoding.Latin1.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:03:55.907230639 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.Latin1.$trModule2_bytes
.type GHC.IO.Encoding.Latin1.$trModule2_bytes, @object
GHC.IO.Encoding.Latin1.$trModule2_bytes:
	.asciz "GHC.IO.Encoding.Latin1"


==================== Asm code ====================
2018-03-16 16:03:55.90913361 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.$trModule1_closure
.type GHC.IO.Encoding.Latin1.$trModule1_closure, @object
GHC.IO.Encoding.Latin1.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Encoding.Latin1.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:03:55.911038874 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.$trModule_closure
.type GHC.IO.Encoding.Latin1.$trModule_closure, @object
GHC.IO.Encoding.Latin1.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.IO.Encoding.Latin1.$trModule3_closure+1
	.quad	GHC.IO.Encoding.Latin1.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:55.913570421 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.Latin1.ascii7_bytes
.type GHC.IO.Encoding.Latin1.ascii7_bytes, @object
GHC.IO.Encoding.Latin1.ascii7_bytes:
	.asciz "ASCII"


==================== Asm code ====================
2018-03-16 16:03:55.916321756 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii6_closure
.type GHC.IO.Encoding.Latin1.ascii6_closure, @object
GHC.IO.Encoding.Latin1.ascii6_closure:
	.quad	GHC.IO.Encoding.Latin1.ascii6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:55.91781397 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.ascii6_entry
.type GHC.IO.Encoding.Latin1.ascii6_entry, @object
GHC.IO.Encoding.Latin1.ascii6_entry:
_c8LVa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LVb
_c8LVc:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8LV9
_c8LV8:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Encoding.Latin1.ascii7_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8LVb:
	jmp *-16(%r13)
_c8LV9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.Latin1.ascii6_entry, .-GHC.IO.Encoding.Latin1.ascii6_entry


==================== Asm code ====================
2018-03-16 16:03:55.918574747 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii6_info
.type GHC.IO.Encoding.Latin1.ascii6_info, @object
GHC.IO.Encoding.Latin1.ascii6_info:
	.quad	GHC.IO.Encoding.Latin1.ascii6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:55.920863284 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.mkAscii2_closure
.type GHC.IO.Encoding.Latin1.mkAscii2_closure, @object
GHC.IO.Encoding.Latin1.mkAscii2_closure:
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_info


==================== Asm code ====================
2018-03-16 16:03:55.921608068 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.mkAscii2_entry
.type GHC.IO.Encoding.Latin1.mkAscii2_entry, @object
GHC.IO.Encoding.Latin1.mkAscii2_entry:
_c8LVp:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.Latin1.mkAscii2_entry, .-GHC.IO.Encoding.Latin1.mkAscii2_entry


==================== Asm code ====================
2018-03-16 16:03:55.922260842 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.mkAscii2_info
.type GHC.IO.Encoding.Latin1.mkAscii2_info, @object
GHC.IO.Encoding.Latin1.mkAscii2_info:
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:03:55.924505491 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.mkAscii1_closure
.type GHC.IO.Encoding.Latin1.mkAscii1_closure, @object
GHC.IO.Encoding.Latin1.mkAscii1_closure:
	.quad	GHC.IO.Encoding.Latin1.mkAscii1_info


==================== Asm code ====================
2018-03-16 16:03:55.925264049 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.mkAscii1_entry
.type GHC.IO.Encoding.Latin1.mkAscii1_entry, @object
GHC.IO.Encoding.Latin1.mkAscii1_entry:
_c8LVC:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.Latin1.mkAscii1_entry, .-GHC.IO.Encoding.Latin1.mkAscii1_entry


==================== Asm code ====================
2018-03-16 16:03:55.925950168 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.mkAscii1_info
.type GHC.IO.Encoding.Latin1.mkAscii1_info, @object
GHC.IO.Encoding.Latin1.mkAscii1_info:
	.quad	GHC.IO.Encoding.Latin1.mkAscii1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:55.931699196 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.mkAscii_closure
.type GHC.IO.Encoding.Latin1.mkAscii_closure, @object
GHC.IO.Encoding.Latin1.mkAscii_closure:
	.quad	GHC.IO.Encoding.Latin1.mkAscii_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:55.932474078 UTC

.section .text
.align 8
sat_s8LzD_entry:
_c8LVZ:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverEncode1_entry@gotpcrel(%rip)
	.size sat_s8LzD_entry, .-sat_s8LzD_entry


==================== Asm code ====================
2018-03-16 16:03:55.93309543 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8LzD_info:
	.quad	sat_s8LzD_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8LWx_srt


==================== Asm code ====================
2018-03-16 16:03:55.933999605 UTC

.section .text
.align 8
sat_s8LzF_entry:
_c8LW3:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8LW7
_c8LW6:
	movq 7(%rbx),%rax
	leaq sat_s8LzD_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq GHC.IO.Encoding.Latin1.ascii3_closure+3(%rip),%rax
	movq %rax,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.Latin1.mkAscii2_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.IO.Encoding.Latin1.mkAscii2_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq GHC.IO.Encoding.Latin1.mkAscii1_closure+2(%rip),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8LW7:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8LzF_entry, .-sat_s8LzF_entry


==================== Asm code ====================
2018-03-16 16:03:55.934816549 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8LzF_info:
	.quad	sat_s8LzF_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8LWx_srt


==================== Asm code ====================
2018-03-16 16:03:55.935542521 UTC

.section .text
.align 8
sat_s8Lzz_entry:
_c8LWi:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverDecode1_entry@gotpcrel(%rip)
	.size sat_s8Lzz_entry, .-sat_s8Lzz_entry


==================== Asm code ====================
2018-03-16 16:03:55.936201364 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Lzz_info:
	.quad	sat_s8Lzz_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8LWx_srt+8


==================== Asm code ====================
2018-03-16 16:03:55.937117455 UTC

.section .text
.align 8
sat_s8LzB_entry:
_c8LWm:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8LWq
_c8LWp:
	movq 7(%rbx),%rax
	leaq sat_s8Lzz_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq GHC.IO.Encoding.Latin1.ascii5_closure+3(%rip),%rax
	movq %rax,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.Latin1.mkAscii2_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.IO.Encoding.Latin1.mkAscii2_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq GHC.IO.Encoding.Latin1.mkAscii1_closure+2(%rip),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8LWq:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8LzB_entry, .-sat_s8LzB_entry


==================== Asm code ====================
2018-03-16 16:03:55.93794835 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8LzB_info:
	.quad	sat_s8LzB_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8LWx_srt+8


==================== Asm code ====================
2018-03-16 16:03:55.938737338 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.mkAscii_entry
.type GHC.IO.Encoding.Latin1.mkAscii_entry, @object
GHC.IO.Encoding.Latin1.mkAscii_entry:
_c8LWs:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8LWw
_c8LWv:
	leaq sat_s8LzF_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s8LzB_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	movq GHC.IO.Encoding.Types.TextEncoding_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.Latin1.ascii6_closure(%rip),%rax
	movq %rax,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8LWw:
	movq $64,904(%r13)
	leaq GHC.IO.Encoding.Latin1.mkAscii_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.Latin1.mkAscii_entry, .-GHC.IO.Encoding.Latin1.mkAscii_entry


==================== Asm code ====================
2018-03-16 16:03:55.939574882 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.mkAscii_info
.type GHC.IO.Encoding.Latin1.mkAscii_info, @object
GHC.IO.Encoding.Latin1.mkAscii_info:
	.quad	GHC.IO.Encoding.Latin1.mkAscii_entry
	.quad	0
	.quad	64424509454
	.quad	4294967301
	.quad	S8LWx_srt


==================== Asm code ====================
2018-03-16 16:03:55.943696443 UTC

.section .data
.align 8
.align 1
lvl_r8Kux_closure:
	.quad	lvl_r8Kux_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:55.944570048 UTC

.section .text
.align 8
lvl_r8Kux_entry:
_c8LXi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LXm
_c8LXn:
	leaq block_c8LXf_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8LXf
_c8LXg:
	movq (%rbx),%rax
	jmp *(%rax)
_c8LXm:
	leaq lvl_r8Kux_closure(%rip),%rbx
	jmp *-8(%r13)
	.size lvl_r8Kux_entry, .-lvl_r8Kux_entry


==================== Asm code ====================
2018-03-16 16:03:55.945300328 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_r8Kux_info:
	.quad	lvl_r8Kux_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8LWx_srt+32


==================== Asm code ====================
2018-03-16 16:03:55.94601531 UTC

.section .text
.align 8
_c8LXf:
_c8LXf:
	movq 8(%rbp),%rax
	leaq block_c8LXl_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8LXl
_c8LXp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8LXf, .-_c8LXf


==================== Asm code ====================
2018-03-16 16:03:55.946655391 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LXf_info:
	.quad	_c8LXf
	.quad	1
	.quad	4294967326
	.quad	S8LWx_srt+32


==================== Asm code ====================
2018-03-16 16:03:55.947346472 UTC

.section .text
.align 8
_c8LXl:
_c8LXl:
	movq GHC.IO.Encoding.Failure.recoverDecode2_closure@gotpcrel(%rip),%rbx
	addq $8,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _c8LXl, .-_c8LXl


==================== Asm code ====================
2018-03-16 16:03:55.947997624 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LXl_info:
	.quad	_c8LXl
	.quad	0
	.quad	4294967326
	.quad	S8LWx_srt+32


==================== Asm code ====================
2018-03-16 16:03:55.949939413 UTC

.section .data
.align 8
.align 1
lvl1_r8Kuy_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.Latin1.ascii5_closure+3
	.quad	lvl_r8Kux_closure+3
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_closure+1
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_closure+1
	.quad	GHC.IO.Encoding.Latin1.mkAscii1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:55.953032029 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii4_closure
.type GHC.IO.Encoding.Latin1.ascii4_closure, @object
GHC.IO.Encoding.Latin1.ascii4_closure:
	.quad	GHC.IO.Encoding.Latin1.ascii4_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:55.954164989 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.ascii4_entry
.type GHC.IO.Encoding.Latin1.ascii4_entry, @object
GHC.IO.Encoding.Latin1.ascii4_entry:
_c8LXQ:
	leaq lvl1_r8Kuy_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.Latin1.ascii4_entry, .-GHC.IO.Encoding.Latin1.ascii4_entry


==================== Asm code ====================
2018-03-16 16:03:55.954816802 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii4_info
.type GHC.IO.Encoding.Latin1.ascii4_info, @object
GHC.IO.Encoding.Latin1.ascii4_info:
	.quad	GHC.IO.Encoding.Latin1.ascii4_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8LWx_srt+48


==================== Asm code ====================
2018-03-16 16:03:55.95865113 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii2_closure
.type GHC.IO.Encoding.Latin1.ascii2_closure, @object
GHC.IO.Encoding.Latin1.ascii2_closure:
	.quad	GHC.IO.Encoding.Latin1.ascii2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:55.959501248 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.ascii2_entry
.type GHC.IO.Encoding.Latin1.ascii2_entry, @object
GHC.IO.Encoding.Latin1.ascii2_entry:
_c8LY5:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LY9
_c8LYa:
	leaq block_c8LY2_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8LY2
_c8LY3:
	movq (%rbx),%rax
	jmp *(%rax)
_c8LY9:
	leaq GHC.IO.Encoding.Latin1.ascii2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.Latin1.ascii2_entry, .-GHC.IO.Encoding.Latin1.ascii2_entry


==================== Asm code ====================
2018-03-16 16:03:55.960188085 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii2_info
.type GHC.IO.Encoding.Latin1.ascii2_info, @object
GHC.IO.Encoding.Latin1.ascii2_info:
	.quad	GHC.IO.Encoding.Latin1.ascii2_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8LWx_srt+56


==================== Asm code ====================
2018-03-16 16:03:55.960982592 UTC

.section .text
.align 8
_c8LY2:
_c8LY2:
	leaq block_c8LY8_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8LY8
_c8LYc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8LY2, .-_c8LY2


==================== Asm code ====================
2018-03-16 16:03:55.962004346 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LY2_info:
	.quad	_c8LY2
	.quad	1
	.quad	4294967326
	.quad	S8LWx_srt+56


==================== Asm code ====================
2018-03-16 16:03:55.962713341 UTC

.section .text
.align 8
_c8LY8:
_c8LY8:
	movq GHC.IO.Encoding.Failure.recoverEncode2_closure@gotpcrel(%rip),%rbx
	addq $32,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _c8LY8, .-_c8LY8


==================== Asm code ====================
2018-03-16 16:03:55.963381621 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8LY8_info:
	.quad	_c8LY8
	.quad	323
	.quad	4294967326
	.quad	S8LWx_srt+56


==================== Asm code ====================
2018-03-16 16:03:55.965435128 UTC

.section .data
.align 8
.align 1
lvl2_r8Kuz_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.Latin1.ascii3_closure+3
	.quad	GHC.IO.Encoding.Latin1.ascii2_closure+3
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_closure+1
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_closure+1
	.quad	GHC.IO.Encoding.Latin1.mkAscii1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:55.967762394 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii1_closure
.type GHC.IO.Encoding.Latin1.ascii1_closure, @object
GHC.IO.Encoding.Latin1.ascii1_closure:
	.quad	GHC.IO.Encoding.Latin1.ascii1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:55.96843589 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.ascii1_entry
.type GHC.IO.Encoding.Latin1.ascii1_entry, @object
GHC.IO.Encoding.Latin1.ascii1_entry:
_c8LYE:
	leaq lvl2_r8Kuz_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.Latin1.ascii1_entry, .-GHC.IO.Encoding.Latin1.ascii1_entry


==================== Asm code ====================
2018-03-16 16:03:55.969110401 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii1_info
.type GHC.IO.Encoding.Latin1.ascii1_info, @object
GHC.IO.Encoding.Latin1.ascii1_info:
	.quad	GHC.IO.Encoding.Latin1.ascii1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8LWx_srt+72


==================== Asm code ====================
2018-03-16 16:03:55.971033032 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.ascii_closure
.type GHC.IO.Encoding.Latin1.ascii_closure, @object
GHC.IO.Encoding.Latin1.ascii_closure:
	.quad	GHC.IO.Encoding.Types.TextEncoding_con_info
	.quad	GHC.IO.Encoding.Latin1.ascii6_closure
	.quad	GHC.IO.Encoding.Latin1.ascii4_closure+1
	.quad	GHC.IO.Encoding.Latin1.ascii1_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:55.972829592 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.Latin1.latin7_bytes
.type GHC.IO.Encoding.Latin1.latin7_bytes, @object
GHC.IO.Encoding.Latin1.latin7_bytes:
	.asciz "ISO-8859-1"


==================== Asm code ====================
2018-03-16 16:03:55.975637975 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin6_closure
.type GHC.IO.Encoding.Latin1.latin6_closure, @object
GHC.IO.Encoding.Latin1.latin6_closure:
	.quad	GHC.IO.Encoding.Latin1.latin6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:55.976577124 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.latin6_entry
.type GHC.IO.Encoding.Latin1.latin6_entry, @object
GHC.IO.Encoding.Latin1.latin6_entry:
_c8LYU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8LYV
_c8LYW:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8LYT
_c8LYS:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Encoding.Latin1.latin7_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8LYV:
	jmp *-16(%r13)
_c8LYT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.Latin1.latin6_entry, .-GHC.IO.Encoding.Latin1.latin6_entry


==================== Asm code ====================
2018-03-16 16:03:55.977406245 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin6_info
.type GHC.IO.Encoding.Latin1.latin6_info, @object
GHC.IO.Encoding.Latin1.latin6_info:
	.quad	GHC.IO.Encoding.Latin1.latin6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:55.983309374 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.mkLatin1_checked_closure
.type GHC.IO.Encoding.Latin1.mkLatin1_checked_closure, @object
GHC.IO.Encoding.Latin1.mkLatin1_checked_closure:
	.quad	GHC.IO.Encoding.Latin1.mkLatin1_checked_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:55.984045484 UTC

.section .text
.align 8
sat_s8LAq_entry:
_c8LZj:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverEncode1_entry@gotpcrel(%rip)
	.size sat_s8LAq_entry, .-sat_s8LAq_entry


==================== Asm code ====================
2018-03-16 16:03:55.984701745 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8LAq_info:
	.quad	sat_s8LAq_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8LWx_srt


==================== Asm code ====================
2018-03-16 16:03:55.985614907 UTC

.section .text
.align 8
sat_s8LAs_entry:
_c8LZn:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8LZr
_c8LZq:
	movq 7(%rbx),%rax
	leaq sat_s8LAq_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq GHC.IO.Encoding.Latin1.latin1_checked2_closure+3(%rip),%rax
	movq %rax,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.Latin1.mkAscii2_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.IO.Encoding.Latin1.mkAscii2_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq GHC.IO.Encoding.Latin1.mkAscii1_closure+2(%rip),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8LZr:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8LAs_entry, .-sat_s8LAs_entry


==================== Asm code ====================
2018-03-16 16:03:55.986463214 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8LAs_info:
	.quad	sat_s8LAs_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8LWx_srt


==================== Asm code ====================
2018-03-16 16:03:55.987175436 UTC

.section .text
.align 8
sat_s8LAm_entry:
_c8LZC:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverDecode1_entry@gotpcrel(%rip)
	.size sat_s8LAm_entry, .-sat_s8LAm_entry


==================== Asm code ====================
2018-03-16 16:03:55.987830263 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8LAm_info:
	.quad	sat_s8LAm_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8LWx_srt+8


==================== Asm code ====================
2018-03-16 16:03:55.988703804 UTC

.section .text
.align 8
sat_s8LAo_entry:
_c8LZG:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8LZK
_c8LZJ:
	movq 7(%rbx),%rax
	leaq sat_s8LAm_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq GHC.IO.Encoding.Latin1.latin5_closure+3(%rip),%rax
	movq %rax,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.Latin1.mkAscii2_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.IO.Encoding.Latin1.mkAscii2_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq GHC.IO.Encoding.Latin1.mkAscii1_closure+2(%rip),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8LZK:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8LAo_entry, .-sat_s8LAo_entry


==================== Asm code ====================
2018-03-16 16:03:55.98953676 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8LAo_info:
	.quad	sat_s8LAo_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8LWx_srt+8


==================== Asm code ====================
2018-03-16 16:03:55.99036968 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.mkLatin1_checked_entry
.type GHC.IO.Encoding.Latin1.mkLatin1_checked_entry, @object
GHC.IO.Encoding.Latin1.mkLatin1_checked_entry:
_c8LZM:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8LZQ
_c8LZP:
	leaq sat_s8LAs_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s8LAo_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	movq GHC.IO.Encoding.Types.TextEncoding_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.Latin1.latin6_closure(%rip),%rax
	movq %rax,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8LZQ:
	movq $64,904(%r13)
	leaq GHC.IO.Encoding.Latin1.mkLatin1_checked_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.Latin1.mkLatin1_checked_entry, .-GHC.IO.Encoding.Latin1.mkLatin1_checked_entry


==================== Asm code ====================
2018-03-16 16:03:55.991818571 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.mkLatin1_checked_info
.type GHC.IO.Encoding.Latin1.mkLatin1_checked_info, @object
GHC.IO.Encoding.Latin1.mkLatin1_checked_info:
	.quad	GHC.IO.Encoding.Latin1.mkLatin1_checked_entry
	.quad	0
	.quad	13207024435214
	.quad	4294967301
	.quad	S8LWx_srt


==================== Asm code ====================
2018-03-16 16:03:55.994101116 UTC

.section .data
.align 8
.align 1
lvl3_r8KuA_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.Latin1.latin5_closure+3
	.quad	lvl_r8Kux_closure+3
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_closure+1
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_closure+1
	.quad	GHC.IO.Encoding.Latin1.mkAscii1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:55.996458217 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin4_closure
.type GHC.IO.Encoding.Latin1.latin4_closure, @object
GHC.IO.Encoding.Latin1.latin4_closure:
	.quad	GHC.IO.Encoding.Latin1.latin4_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:55.997193081 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.latin4_entry
.type GHC.IO.Encoding.Latin1.latin4_entry, @object
GHC.IO.Encoding.Latin1.latin4_entry:
_c8M0z:
	leaq lvl3_r8KuA_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.Latin1.latin4_entry, .-GHC.IO.Encoding.Latin1.latin4_entry


==================== Asm code ====================
2018-03-16 16:03:55.997834554 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin4_info
.type GHC.IO.Encoding.Latin1.latin4_info, @object
GHC.IO.Encoding.Latin1.latin4_info:
	.quad	GHC.IO.Encoding.Latin1.latin4_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8LWx_srt+96


==================== Asm code ====================
2018-03-16 16:03:55.999706139 UTC

.section .data
.align 8
.align 1
lvl4_r8KuB_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.Latin1.latin1_checked2_closure+3
	.quad	GHC.IO.Encoding.Latin1.ascii2_closure+3
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_closure+1
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_closure+1
	.quad	GHC.IO.Encoding.Latin1.mkAscii1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.002209567 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_checked1_closure
.type GHC.IO.Encoding.Latin1.latin1_checked1_closure, @object
GHC.IO.Encoding.Latin1.latin1_checked1_closure:
	.quad	GHC.IO.Encoding.Latin1.latin1_checked1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.002921986 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.latin1_checked1_entry
.type GHC.IO.Encoding.Latin1.latin1_checked1_entry, @object
GHC.IO.Encoding.Latin1.latin1_checked1_entry:
_c8M0M:
	leaq lvl4_r8KuB_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.Latin1.latin1_checked1_entry, .-GHC.IO.Encoding.Latin1.latin1_checked1_entry


==================== Asm code ====================
2018-03-16 16:03:56.003548946 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_checked1_info
.type GHC.IO.Encoding.Latin1.latin1_checked1_info, @object
GHC.IO.Encoding.Latin1.latin1_checked1_info:
	.quad	GHC.IO.Encoding.Latin1.latin1_checked1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8LWx_srt+104


==================== Asm code ====================
2018-03-16 16:03:56.005431572 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_checked_closure
.type GHC.IO.Encoding.Latin1.latin1_checked_closure, @object
GHC.IO.Encoding.Latin1.latin1_checked_closure:
	.quad	GHC.IO.Encoding.Types.TextEncoding_con_info
	.quad	GHC.IO.Encoding.Latin1.latin6_closure
	.quad	GHC.IO.Encoding.Latin1.latin4_closure+1
	.quad	GHC.IO.Encoding.Latin1.latin1_checked1_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.010749392 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.mkLatin1_closure
.type GHC.IO.Encoding.Latin1.mkLatin1_closure, @object
GHC.IO.Encoding.Latin1.mkLatin1_closure:
	.quad	GHC.IO.Encoding.Latin1.mkLatin1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.011394452 UTC

.section .text
.align 8
sat_s8LAB_entry:
_c8M19:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverEncode1_entry@gotpcrel(%rip)
	.size sat_s8LAB_entry, .-sat_s8LAB_entry


==================== Asm code ====================
2018-03-16 16:03:56.012016635 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8LAB_info:
	.quad	sat_s8LAB_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8LWx_srt


==================== Asm code ====================
2018-03-16 16:03:56.012879208 UTC

.section .text
.align 8
sat_s8LAD_entry:
_c8M1d:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8M1h
_c8M1g:
	movq 7(%rbx),%rax
	leaq sat_s8LAB_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq GHC.IO.Encoding.Latin1.latin3_closure+3(%rip),%rax
	movq %rax,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.Latin1.mkAscii2_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.IO.Encoding.Latin1.mkAscii2_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq GHC.IO.Encoding.Latin1.mkAscii1_closure+2(%rip),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8M1h:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8LAD_entry, .-sat_s8LAD_entry


==================== Asm code ====================
2018-03-16 16:03:56.013973238 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8LAD_info:
	.quad	sat_s8LAD_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8LWx_srt


==================== Asm code ====================
2018-03-16 16:03:56.014671877 UTC

.section .text
.align 8
sat_s8LAx_entry:
_c8M1s:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverDecode1_entry@gotpcrel(%rip)
	.size sat_s8LAx_entry, .-sat_s8LAx_entry


==================== Asm code ====================
2018-03-16 16:03:56.015290722 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8LAx_info:
	.quad	sat_s8LAx_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8LWx_srt+8


==================== Asm code ====================
2018-03-16 16:03:56.016111001 UTC

.section .text
.align 8
sat_s8LAz_entry:
_c8M1w:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8M1A
_c8M1z:
	movq 7(%rbx),%rax
	leaq sat_s8LAx_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq GHC.IO.Encoding.Latin1.latin5_closure+3(%rip),%rax
	movq %rax,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.Latin1.mkAscii2_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.IO.Encoding.Latin1.mkAscii2_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq GHC.IO.Encoding.Latin1.mkAscii1_closure+2(%rip),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8M1A:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8LAz_entry, .-sat_s8LAz_entry


==================== Asm code ====================
2018-03-16 16:03:56.016940481 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8LAz_info:
	.quad	sat_s8LAz_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8LWx_srt+8


==================== Asm code ====================
2018-03-16 16:03:56.017760011 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.mkLatin1_entry
.type GHC.IO.Encoding.Latin1.mkLatin1_entry, @object
GHC.IO.Encoding.Latin1.mkLatin1_entry:
_c8M1C:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8M1G
_c8M1F:
	leaq sat_s8LAD_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s8LAz_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	movq GHC.IO.Encoding.Types.TextEncoding_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.Latin1.latin6_closure(%rip),%rax
	movq %rax,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8M1G:
	movq $64,904(%r13)
	leaq GHC.IO.Encoding.Latin1.mkLatin1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.Latin1.mkLatin1_entry, .-GHC.IO.Encoding.Latin1.mkLatin1_entry


==================== Asm code ====================
2018-03-16 16:03:56.018601472 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.mkLatin1_info
.type GHC.IO.Encoding.Latin1.mkLatin1_info, @object
GHC.IO.Encoding.Latin1.mkLatin1_info:
	.quad	GHC.IO.Encoding.Latin1.mkLatin1_entry
	.quad	0
	.quad	79177722101774
	.quad	4294967301
	.quad	S8LWx_srt


==================== Asm code ====================
2018-03-16 16:03:56.02050528 UTC

.section .data
.align 8
.align 1
lvl5_r8KuC_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.Latin1.latin3_closure+3
	.quad	GHC.IO.Encoding.Latin1.ascii2_closure+3
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_closure+1
	.quad	GHC.IO.Encoding.Latin1.mkAscii2_closure+1
	.quad	GHC.IO.Encoding.Latin1.mkAscii1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.022778908 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin2_closure
.type GHC.IO.Encoding.Latin1.latin2_closure, @object
GHC.IO.Encoding.Latin1.latin2_closure:
	.quad	GHC.IO.Encoding.Latin1.latin2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.02348018 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.Latin1.latin2_entry
.type GHC.IO.Encoding.Latin1.latin2_entry, @object
GHC.IO.Encoding.Latin1.latin2_entry:
_c8M2p:
	leaq lvl5_r8KuC_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.Latin1.latin2_entry, .-GHC.IO.Encoding.Latin1.latin2_entry


==================== Asm code ====================
2018-03-16 16:03:56.02412141 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin2_info
.type GHC.IO.Encoding.Latin1.latin2_info, @object
GHC.IO.Encoding.Latin1.latin2_info:
	.quad	GHC.IO.Encoding.Latin1.latin2_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8LWx_srt+120


==================== Asm code ====================
2018-03-16 16:03:56.026924312 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.Latin1.latin1_closure
.type GHC.IO.Encoding.Latin1.latin1_closure, @object
GHC.IO.Encoding.Latin1.latin1_closure:
	.quad	GHC.IO.Encoding.Types.TextEncoding_con_info
	.quad	GHC.IO.Encoding.Latin1.latin6_closure
	.quad	GHC.IO.Encoding.Latin1.latin4_closure+1
	.quad	GHC.IO.Encoding.Latin1.latin2_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.028866059 UTC

.section .data.rel.ro
.align 8
.align 1
S8LWx_srt:
	.quad	GHC.IO.Encoding.Failure.recoverEncode1_closure
	.quad	GHC.IO.Encoding.Failure.recoverDecode1_closure
	.quad	GHC.IO.Encoding.Latin1.mkAscii_closure
	.quad	GHC.IO.Encoding.Latin1.ascii6_closure
	.quad	GHC.IO.Encoding.Failure.recoverDecode2_closure
	.quad	lvl_r8Kux_closure
	.quad	lvl1_r8Kuy_closure
	.quad	GHC.IO.Encoding.Failure.recoverEncode2_closure
	.quad	GHC.IO.Encoding.Latin1.ascii2_closure
	.quad	lvl2_r8Kuz_closure
	.quad	GHC.IO.Encoding.Latin1.mkLatin1_checked_closure
	.quad	GHC.IO.Encoding.Latin1.latin6_closure
	.quad	lvl3_r8KuA_closure
	.quad	lvl4_r8KuB_closure
	.quad	GHC.IO.Encoding.Latin1.mkLatin1_closure
	.quad	lvl5_r8KuC_closure

