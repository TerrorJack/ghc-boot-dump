
==================== Asm code ====================
2018-03-16 16:03:48.921879321 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF1_closure
.type GHC.IO.Encoding.UTF16.mkUTF1_closure, @object
GHC.IO.Encoding.UTF16.mkUTF1_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF1_info


==================== Asm code ====================
2018-03-16 16:03:48.922977386 UTC

.section .text
.align 8
sat_s8G24_entry:
_c8HuH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HuI
_c8HuJ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8HuL
_c8HuK:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8HuG
_c8HuF:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HuL:
	movq $56,904(%r13)
_c8HuI:
	jmp *-16(%r13)
_c8HuG:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8G24_entry, .-sat_s8G24_entry


==================== Asm code ====================
2018-03-16 16:03:48.923740472 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8G24_info:
	.quad	sat_s8G24_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:48.924675971 UTC

.section .text
.align 8
sat_s8G2c_entry:
_c8Hv3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Hv4
_c8Hv5:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Hv7
_c8Hv6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Hv2
_c8Hv1:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Hv7:
	movq $56,904(%r13)
_c8Hv4:
	jmp *-16(%r13)
_c8Hv2:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8G2c_entry, .-sat_s8G2c_entry


==================== Asm code ====================
2018-03-16 16:03:48.925575952 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8G2c_info:
	.quad	sat_s8G2c_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:48.926461347 UTC

.section .text
.align 8
sat_s8G2k_entry:
_c8Hvp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Hvq
_c8Hvr:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Hvt
_c8Hvs:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Hvo
_c8Hvn:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Hvt:
	movq $56,904(%r13)
_c8Hvq:
	jmp *-16(%r13)
_c8Hvo:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8G2k_entry, .-sat_s8G2k_entry


==================== Asm code ====================
2018-03-16 16:03:48.92724723 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8G2k_info:
	.quad	sat_s8G2k_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:48.928153528 UTC

.section .text
.align 8
sat_s8G2s_entry:
_c8HvL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HvM
_c8HvN:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8HvP
_c8HvO:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8HvK
_c8HvJ:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HvP:
	movq $56,904(%r13)
_c8HvM:
	jmp *-16(%r13)
_c8HvK:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8G2s_entry, .-sat_s8G2s_entry


==================== Asm code ====================
2018-03-16 16:03:48.928937144 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8G2s_info:
	.quad	sat_s8G2s_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:48.929831991 UTC

.section .text
.align 8
sat_s8G2A_entry:
_c8Hw7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Hw8
_c8Hw9:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Hwb
_c8Hwa:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Hw6
_c8Hw5:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Hwb:
	movq $56,904(%r13)
_c8Hw8:
	jmp *-16(%r13)
_c8Hw6:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8G2A_entry, .-sat_s8G2A_entry


==================== Asm code ====================
2018-03-16 16:03:48.930673671 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8G2A_info:
	.quad	sat_s8G2A_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:48.931650228 UTC

.section .text
.align 8
sat_s8G2I_entry:
_c8Hwt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Hwu
_c8Hwv:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Hwx
_c8Hww:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Hws
_c8Hwr:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Hwx:
	movq $56,904(%r13)
_c8Hwu:
	jmp *-16(%r13)
_c8Hws:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8G2I_entry, .-sat_s8G2I_entry


==================== Asm code ====================
2018-03-16 16:03:48.932496668 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8G2I_info:
	.quad	sat_s8G2I_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:48.93334061 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF1_entry
.type GHC.IO.Encoding.UTF16.mkUTF1_entry, @object
GHC.IO.Encoding.UTF16.mkUTF1_entry:
_c8HwA:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HwB
_c8HwC:
	movq $block_c8Huh_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8Huh
_c8Hui:
	movq (%rbx),%rax
	jmp *(%rax)
_c8HwB:
	movl $GHC.IO.Encoding.UTF16.mkUTF1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.mkUTF1_entry, .-GHC.IO.Encoding.UTF16.mkUTF1_entry


==================== Asm code ====================
2018-03-16 16:03:48.934032264 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF1_info
.type GHC.IO.Encoding.UTF16.mkUTF1_info, @object
GHC.IO.Encoding.UTF16.mkUTF1_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:48.935823624 UTC

.section .text
.align 8
_c8Huh:
_c8Huh:
	movq $block_c8Hum_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8Hum
_c8Hun:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Huh, .-_c8Huh


==================== Asm code ====================
2018-03-16 16:03:48.936506588 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Huh_info:
	.quad	_c8Huh
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:48.938650501 UTC

.section .text
.align 8
_c8Hum:
_c8Hum:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8HwG
_c8HwF:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8Hx7:
	cmpq %r9,%r11
	jl _c8Hyi
_c8Hyj:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8Hwg
_c8Hxx:
	leaq -65536(%r14),%r10
	movq %r10,%r14
	sarq $18,%r14
	addq $216,%r14
	movb %r14b,(%rdx,%rbx,1)
	movq %r10,%r14
	sarq $10,%r14
	movq %r14,72(%rsp)
	leaq 1(%rbx),%r14
	movq %r8,80(%rsp)
	movq 72(%rsp),%r8
	movb %r8b,(%rdx,%r14,1)
	andl $1023,%r10d
	movq %r10,%r8
	sarq $8,%r8
	addq $220,%r8
	leaq 2(%rbx),%r14
	movb %r8b,(%rdx,%r14,1)
	leaq 3(%rbx),%r8
	movb %r10b,(%rdx,%r8,1)
	addq $4,%rbx
	incq %r11
_n8HCX:
	movq 80(%rsp),%r8
	movq 64(%rsp),%r10
	jmp _c8Hx7
_c8HxI:
	movq %r10,64(%rsp)
	movq %r14,%r10
	sarq $8,%r10
	movb %r10b,(%rdx,%rbx,1)
	leaq 1(%rbx),%r10
	movb %r14b,(%rdx,%r10,1)
	addq $2,%rbx
	incq %r11
_n8HCY:
	movq 64(%rsp),%r10
	jmp _c8Hx7
_c8HxO:
	movq %r10,64(%rsp)
	movq %r14,%r10
	sarq $8,%r10
	movb %r10b,(%rdx,%rbx,1)
	leaq 1(%rbx),%r10
	movb %r14b,(%rdx,%r10,1)
	addq $2,%rbx
	incq %r11
_n8HCZ:
	movq 64(%rsp),%r10
	jmp _c8Hx7
_c8Hy0:
	movq %r10,64(%rsp)
	movq %r14,%r10
	sarq $8,%r10
	movb %r10b,(%rdx,%rbx,1)
	leaq 1(%rbx),%r10
	movb %r14b,(%rdx,%r10,1)
	addq $2,%rbx
	incq %r11
_n8HD0:
	movq 64(%rsp),%r10
	jmp _c8Hx7
_c8Hy6:
	movq %r10,64(%rsp)
	movq %r14,%r10
	sarq $8,%r10
	movb %r10b,(%rdx,%rbx,1)
	leaq 1(%rbx),%r10
	movb %r14b,(%rdx,%r10,1)
	addq $2,%rbx
	incq %r11
_n8HD1:
	movq 64(%rsp),%r10
	jmp _c8Hx7
_c8Hyi:
	movq %rsi,%r14
	subq %rbx,%r14
	cmpq $2,%r14
	jge _c8Hyf
_c8Hyg:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8HvU
_c8Hyf:
	movl (%r8,%r11,4),%r14d
	cmpq $65536,%r14
	jge _c8HxA
_c8Hyd:
	cmpq $55296,%r14
	jl _c8HxS
_c8Hyc:
	cmpq $56319,%r14
	jg _c8Hya
_c8Hyb:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8Hvy
_c8Hya:
	cmpq $56320,%r14
	jl _c8Hy0
_c8Hy8:
	cmpq $57343,%r14
	jg _c8Hy6
_c8Hy7:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8Hvc
_c8HxS:
	cmpq $56320,%r14
	jl _c8HxI
_c8HxQ:
	cmpq $57343,%r14
	jg _c8HxO
_c8HxP:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8HuQ
_c8HxA:
	movq %r10,64(%rsp)
	movq %rsi,%r10
	subq %rbx,%r10
	cmpq $4,%r10
	jge _c8Hxx
_c8Hxy:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8Huu
_c8HwG:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8Hum, .-_c8Hum


==================== Asm code ====================
2018-03-16 16:03:48.940166051 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Hum_info:
	.quad	_c8Hum
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:48.941010488 UTC

.section .text
.align 8
_c8Huu:
_c8Huu:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8HwK
_c8HwJ:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8G24_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HwK:
	movq $160,904(%r13)
	movq $block_c8Huu_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8Huu, .-_c8Huu


==================== Asm code ====================
2018-03-16 16:03:48.941876365 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Huu_info:
	.quad	_c8Huu
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:48.942680774 UTC

.section .text
.align 8
_c8HuQ:
_c8HuQ:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8HwO
_c8HwN:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8G2c_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HwO:
	movq $160,904(%r13)
	movq $block_c8HuQ_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8HuQ, .-_c8HuQ


==================== Asm code ====================
2018-03-16 16:03:48.943476801 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HuQ_info:
	.quad	_c8HuQ
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:48.94429639 UTC

.section .text
.align 8
_c8Hvc:
_c8Hvc:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8HwS
_c8HwR:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8G2k_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HwS:
	movq $160,904(%r13)
	movq $block_c8Hvc_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8Hvc, .-_c8Hvc


==================== Asm code ====================
2018-03-16 16:03:48.945114177 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Hvc_info:
	.quad	_c8Hvc
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:48.945981509 UTC

.section .text
.align 8
_c8Hvy:
_c8Hvy:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8HwW
_c8HwV:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8G2s_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HwW:
	movq $160,904(%r13)
	movq $block_c8Hvy_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8Hvy, .-_c8Hvy


==================== Asm code ====================
2018-03-16 16:03:48.946748285 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Hvy_info:
	.quad	_c8Hvy
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:48.947639397 UTC

.section .text
.align 8
_c8HvU:
_c8HvU:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Hx0
_c8HwZ:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8G2A_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Hx0:
	movq $160,904(%r13)
	movq $block_c8HvU_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8HvU, .-_c8HvU


==================== Asm code ====================
2018-03-16 16:03:48.9484332 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HvU_info:
	.quad	_c8HvU
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:48.949277922 UTC

.section .text
.align 8
_c8Hwg:
_c8Hwg:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Hx4
_c8Hx3:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8G2I_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Hx4:
	movq $160,904(%r13)
	movq $block_c8Hwg_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8Hwg, .-_c8Hwg


==================== Asm code ====================
2018-03-16 16:03:48.950060983 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Hwg_info:
	.quad	_c8Hwg
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:48.952802771 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be_encode_closure
.type GHC.IO.Encoding.UTF16.utf16be_encode_closure, @object
GHC.IO.Encoding.UTF16.utf16be_encode_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16be_encode_info


==================== Asm code ====================
2018-03-16 16:03:48.954160629 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16be_encode_entry
.type GHC.IO.Encoding.UTF16.utf16be_encode_entry, @object
GHC.IO.Encoding.UTF16.utf16be_encode_entry:
_c8HEX:
	jmp GHC.IO.Encoding.UTF16.mkUTF1_entry
	.size GHC.IO.Encoding.UTF16.utf16be_encode_entry, .-GHC.IO.Encoding.UTF16.utf16be_encode_entry


==================== Asm code ====================
2018-03-16 16:03:48.954883582 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be_encode_info
.type GHC.IO.Encoding.UTF16.utf16be_encode_info, @object
GHC.IO.Encoding.UTF16.utf16be_encode_info:
	.quad	GHC.IO.Encoding.UTF16.utf16be_encode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:48.980511945 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16le1_closure
.type GHC.IO.Encoding.UTF16.mkUTF16le1_closure, @object
GHC.IO.Encoding.UTF16.mkUTF16le1_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16le1_info


==================== Asm code ====================
2018-03-16 16:03:48.982046399 UTC

.section .text
.align 8
sat_s8G4T_entry:
_c8HFy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HFz
_c8HFA:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8HFC
_c8HFB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8HFx
_c8HFw:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HFC:
	movq $56,904(%r13)
_c8HFz:
	jmp *-16(%r13)
_c8HFx:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8G4T_entry, .-sat_s8G4T_entry


==================== Asm code ====================
2018-03-16 16:03:48.982816818 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8G4T_info:
	.quad	sat_s8G4T_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:48.983649621 UTC

.section .text
.align 8
sat_s8G51_entry:
_c8HFU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HFV
_c8HFW:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8HFY
_c8HFX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8HFT
_c8HFS:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HFY:
	movq $56,904(%r13)
_c8HFV:
	jmp *-16(%r13)
_c8HFT:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8G51_entry, .-sat_s8G51_entry


==================== Asm code ====================
2018-03-16 16:03:48.984413167 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8G51_info:
	.quad	sat_s8G51_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:48.985345783 UTC

.section .text
.align 8
sat_s8G59_entry:
_c8HGg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HGh
_c8HGi:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8HGk
_c8HGj:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8HGf
_c8HGe:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HGk:
	movq $56,904(%r13)
_c8HGh:
	jmp *-16(%r13)
_c8HGf:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8G59_entry, .-sat_s8G59_entry


==================== Asm code ====================
2018-03-16 16:03:48.986161208 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8G59_info:
	.quad	sat_s8G59_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:48.987050217 UTC

.section .text
.align 8
sat_s8G5h_entry:
_c8HGC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HGD
_c8HGE:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8HGG
_c8HGF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8HGB
_c8HGA:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HGG:
	movq $56,904(%r13)
_c8HGD:
	jmp *-16(%r13)
_c8HGB:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8G5h_entry, .-sat_s8G5h_entry


==================== Asm code ====================
2018-03-16 16:03:48.987787029 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8G5h_info:
	.quad	sat_s8G5h_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:48.988661074 UTC

.section .text
.align 8
sat_s8G5p_entry:
_c8HGY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HGZ
_c8HH0:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8HH2
_c8HH1:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8HGX
_c8HGW:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HH2:
	movq $56,904(%r13)
_c8HGZ:
	jmp *-16(%r13)
_c8HGX:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8G5p_entry, .-sat_s8G5p_entry


==================== Asm code ====================
2018-03-16 16:03:48.989458789 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8G5p_info:
	.quad	sat_s8G5p_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:48.990341432 UTC

.section .text
.align 8
sat_s8G5x_entry:
_c8HHk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HHl
_c8HHm:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8HHo
_c8HHn:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8HHj
_c8HHi:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HHo:
	movq $56,904(%r13)
_c8HHl:
	jmp *-16(%r13)
_c8HHj:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8G5x_entry, .-sat_s8G5x_entry


==================== Asm code ====================
2018-03-16 16:03:48.991142741 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8G5x_info:
	.quad	sat_s8G5x_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:48.99188731 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF16le1_entry
.type GHC.IO.Encoding.UTF16.mkUTF16le1_entry, @object
GHC.IO.Encoding.UTF16.mkUTF16le1_entry:
_c8HHr:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HHs
_c8HHt:
	movq $block_c8HF8_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8HF8
_c8HF9:
	movq (%rbx),%rax
	jmp *(%rax)
_c8HHs:
	movl $GHC.IO.Encoding.UTF16.mkUTF16le1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.mkUTF16le1_entry, .-GHC.IO.Encoding.UTF16.mkUTF16le1_entry


==================== Asm code ====================
2018-03-16 16:03:48.992562733 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16le1_info
.type GHC.IO.Encoding.UTF16.mkUTF16le1_info, @object
GHC.IO.Encoding.UTF16.mkUTF16le1_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16le1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:48.993477388 UTC

.section .text
.align 8
_c8HF8:
_c8HF8:
	movq $block_c8HFd_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8HFd
_c8HFe:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8HF8, .-_c8HF8


==================== Asm code ====================
2018-03-16 16:03:48.994149674 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HF8_info:
	.quad	_c8HF8
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:48.996200899 UTC

.section .text
.align 8
_c8HFd:
_c8HFd:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8HHx
_c8HHw:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8HHY:
	cmpq %r9,%r11
	jl _c8HJ9
_c8HJa:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8HH7
_c8HIo:
	leaq -65536(%r14),%r10
	movq %r10,%r14
	sarq $10,%r14
	movb %r14b,(%rdx,%rbx,1)
	movq %r10,%r14
	sarq $18,%r14
	addq $216,%r14
	movq %r14,72(%rsp)
	leaq 1(%rbx),%r14
	movq %r8,80(%rsp)
	movq 72(%rsp),%r8
	movb %r8b,(%rdx,%r14,1)
	andl $1023,%r10d
	movq %r10,%r8
	leaq 2(%rbx),%r14
	movb %r8b,(%rdx,%r14,1)
	sarq $8,%r10
	leaq 220(%r10),%r8
	leaq 3(%rbx),%r10
	movb %r8b,(%rdx,%r10,1)
	addq $4,%rbx
	incq %r11
_n8HNO:
	movq 80(%rsp),%r8
	movq 64(%rsp),%r10
	jmp _c8HHY
_c8HIz:
	movq %r10,64(%rsp)
	movq %r14,%r10
	movb %r10b,(%rdx,%rbx,1)
	sarq $8,%r14
	leaq 1(%rbx),%r10
	movb %r14b,(%rdx,%r10,1)
	addq $2,%rbx
	incq %r11
_n8HNP:
	movq 64(%rsp),%r10
	jmp _c8HHY
_c8HIF:
	movq %r10,64(%rsp)
	movq %r14,%r10
	movb %r10b,(%rdx,%rbx,1)
	sarq $8,%r14
	leaq 1(%rbx),%r10
	movb %r14b,(%rdx,%r10,1)
	addq $2,%rbx
	incq %r11
_n8HNQ:
	movq 64(%rsp),%r10
	jmp _c8HHY
_c8HIR:
	movq %r10,64(%rsp)
	movq %r14,%r10
	movb %r10b,(%rdx,%rbx,1)
	sarq $8,%r14
	leaq 1(%rbx),%r10
	movb %r14b,(%rdx,%r10,1)
	addq $2,%rbx
	incq %r11
_n8HNR:
	movq 64(%rsp),%r10
	jmp _c8HHY
_c8HIX:
	movq %r10,64(%rsp)
	movq %r14,%r10
	movb %r10b,(%rdx,%rbx,1)
	sarq $8,%r14
	leaq 1(%rbx),%r10
	movb %r14b,(%rdx,%r10,1)
	addq $2,%rbx
	incq %r11
_n8HNS:
	movq 64(%rsp),%r10
	jmp _c8HHY
_c8HJ9:
	movq %rsi,%r14
	subq %rbx,%r14
	cmpq $2,%r14
	jge _c8HJ6
_c8HJ7:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8HGL
_c8HJ6:
	movl (%r8,%r11,4),%r14d
	cmpq $65536,%r14
	jge _c8HIr
_c8HJ4:
	cmpq $55296,%r14
	jl _c8HIJ
_c8HJ3:
	cmpq $56319,%r14
	jg _c8HJ1
_c8HJ2:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8HGp
_c8HJ1:
	cmpq $56320,%r14
	jl _c8HIR
_c8HIZ:
	cmpq $57343,%r14
	jg _c8HIX
_c8HIY:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8HG3
_c8HIJ:
	cmpq $56320,%r14
	jl _c8HIz
_c8HIH:
	cmpq $57343,%r14
	jg _c8HIF
_c8HIG:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8HFH
_c8HIr:
	movq %r10,64(%rsp)
	movq %rsi,%r10
	subq %rbx,%r10
	cmpq $4,%r10
	jge _c8HIo
_c8HIp:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8HFl
_c8HHx:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8HFd, .-_c8HFd


==================== Asm code ====================
2018-03-16 16:03:48.997772714 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HFd_info:
	.quad	_c8HFd
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:48.998599606 UTC

.section .text
.align 8
_c8HFl:
_c8HFl:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8HHB
_c8HHA:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8G4T_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HHB:
	movq $160,904(%r13)
	movq $block_c8HFl_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8HFl, .-_c8HFl


==================== Asm code ====================
2018-03-16 16:03:48.999390207 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HFl_info:
	.quad	_c8HFl
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.000206748 UTC

.section .text
.align 8
_c8HFH:
_c8HFH:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8HHF
_c8HHE:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8G51_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HHF:
	movq $160,904(%r13)
	movq $block_c8HFH_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8HFH, .-_c8HFH


==================== Asm code ====================
2018-03-16 16:03:49.000978952 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HFH_info:
	.quad	_c8HFH
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.001818699 UTC

.section .text
.align 8
_c8HG3:
_c8HG3:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8HHJ
_c8HHI:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8G59_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HHJ:
	movq $160,904(%r13)
	movq $block_c8HG3_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8HG3, .-_c8HG3


==================== Asm code ====================
2018-03-16 16:03:49.002650273 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HG3_info:
	.quad	_c8HG3
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.003484706 UTC

.section .text
.align 8
_c8HGp:
_c8HGp:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8HHN
_c8HHM:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8G5h_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HHN:
	movq $160,904(%r13)
	movq $block_c8HGp_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8HGp, .-_c8HGp


==================== Asm code ====================
2018-03-16 16:03:49.004257373 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HGp_info:
	.quad	_c8HGp
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.005155771 UTC

.section .text
.align 8
_c8HGL:
_c8HGL:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8HHR
_c8HHQ:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8G5p_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HHR:
	movq $160,904(%r13)
	movq $block_c8HGL_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8HGL, .-_c8HGL


==================== Asm code ====================
2018-03-16 16:03:49.006216568 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HGL_info:
	.quad	_c8HGL
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.007015425 UTC

.section .text
.align 8
_c8HH7:
_c8HH7:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8HHV
_c8HHU:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8G5x_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HHV:
	movq $160,904(%r13)
	movq $block_c8HH7_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8HH7, .-_c8HH7


==================== Asm code ====================
2018-03-16 16:03:49.00782275 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HH7_info:
	.quad	_c8HH7
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.010153682 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16le_encode_closure
.type GHC.IO.Encoding.UTF16.utf16le_encode_closure, @object
GHC.IO.Encoding.UTF16.utf16le_encode_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16le_encode_info


==================== Asm code ====================
2018-03-16 16:03:49.010761999 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16le_encode_entry
.type GHC.IO.Encoding.UTF16.utf16le_encode_entry, @object
GHC.IO.Encoding.UTF16.utf16le_encode_entry:
_c8HPO:
	jmp GHC.IO.Encoding.UTF16.mkUTF16le1_entry
	.size GHC.IO.Encoding.UTF16.utf16le_encode_entry, .-GHC.IO.Encoding.UTF16.utf16le_encode_entry


==================== Asm code ====================
2018-03-16 16:03:49.011352496 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16le_encode_info
.type GHC.IO.Encoding.UTF16.utf16le_encode_info, @object
GHC.IO.Encoding.UTF16.utf16le_encode_info:
	.quad	GHC.IO.Encoding.UTF16.utf16le_encode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:49.013067468 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF16.$trModule4_bytes
.type GHC.IO.Encoding.UTF16.$trModule4_bytes, @object
GHC.IO.Encoding.UTF16.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:03:49.014780221 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.$trModule3_closure
.type GHC.IO.Encoding.UTF16.$trModule3_closure, @object
GHC.IO.Encoding.UTF16.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Encoding.UTF16.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:03:49.01695819 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF16.$trModule2_bytes
.type GHC.IO.Encoding.UTF16.$trModule2_bytes, @object
GHC.IO.Encoding.UTF16.$trModule2_bytes:
	.asciz "GHC.IO.Encoding.UTF16"


==================== Asm code ====================
2018-03-16 16:03:49.018903216 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.$trModule1_closure
.type GHC.IO.Encoding.UTF16.$trModule1_closure, @object
GHC.IO.Encoding.UTF16.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Encoding.UTF16.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:03:49.020599285 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.$trModule_closure
.type GHC.IO.Encoding.UTF16.$trModule_closure, @object
GHC.IO.Encoding.UTF16.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.IO.Encoding.UTF16.$trModule3_closure+1
	.quad	GHC.IO.Encoding.UTF16.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:49.026325253 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.$wutf16_encode_closure
.type GHC.IO.Encoding.UTF16.$wutf16_encode_closure, @object
GHC.IO.Encoding.UTF16.$wutf16_encode_closure:
	.quad	GHC.IO.Encoding.UTF16.$wutf16_encode_info


==================== Asm code ====================
2018-03-16 16:03:49.027056986 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.$wutf16_encode_slow
.type GHC.IO.Encoding.UTF16.$wutf16_encode_slow, @object
GHC.IO.Encoding.UTF16.$wutf16_encode_slow:
_c8HQ1:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Encoding.UTF16.$wutf16_encode_entry
	.size GHC.IO.Encoding.UTF16.$wutf16_encode_slow, .-GHC.IO.Encoding.UTF16.$wutf16_encode_slow


==================== Asm code ====================
2018-03-16 16:03:49.027920134 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.$wutf16_encode_entry
.type GHC.IO.Encoding.UTF16.$wutf16_encode_entry, @object
GHC.IO.Encoding.UTF16.$wutf16_encode_entry:
_c8HQc:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HQd
_c8HQe:
	movq $block_c8HQ5_info,-48(%rbp)
	movq 8(%r14),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _c8HQ5
_c8HQ6:
	movq (%rbx),%rax
	jmp *(%rax)
_c8HQd:
	movl $GHC.IO.Encoding.UTF16.$wutf16_encode_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.$wutf16_encode_entry, .-GHC.IO.Encoding.UTF16.$wutf16_encode_entry


==================== Asm code ====================
2018-03-16 16:03:49.02864254 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.$wutf16_encode_info
.type GHC.IO.Encoding.UTF16.$wutf16_encode_info, @object
GHC.IO.Encoding.UTF16.$wutf16_encode_info:
	.quad	GHC.IO.Encoding.UTF16.$wutf16_encode_entry
	.quad	0
	.quad	14
	.quad	38654705664
	.quad	0
	.quad	14600
	.quad	GHC.IO.Encoding.UTF16.$wutf16_encode_slow


==================== Asm code ====================
2018-03-16 16:03:49.029884016 UTC

.section .text
.align 8
_c8HQ5:
_c8HQ5:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 40(%rbp),%rsi
	movq 48(%rbp),%rdi
	movq 56(%rbp),%r8
	movq 64(%rbp),%r9
	movq %rbx,%r10
	andl $7,%r10d
	cmpq $1,%r10
	je _c8HQ9
_c8HQa:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8HQT
_c8HQS:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %r9,(%r12)
	leaq -47(%r12),%rsi
	movq %rax,%r14
	addq $72,%rbp
	jmp GHC.IO.Encoding.UTF16.mkUTF1_entry
_c8HQT:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_c8HQ9:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c8HQj
_c8HQi:
	movq %rdi,%rbx
	subq %r9,%rbx
	cmpq $2,%rbx
	jge _c8HQJ
_c8HQN:
	movq $GHC.IO.Buffer.Buffer_con_info,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	movq %rax,-8(%r12)
	leaq -79(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HQJ:
	movq 8(%rbp),%rbx
	movq $GHC.Types.True_closure+2,8(%rbx)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rbx,%rsi
	movq %rdi,%rbx
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %r10,%r14
	movq %rcx,72(%rsp)
	movq %rdx,80(%rsp)
	movq %r11,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq 96(%rsp),%rcx
	movq 64(%rsp),%rax
	movb $-2,(%rax,%rcx,1)
	leaq 1(%rcx),%rdx
	movb $-1,(%rax,%rdx,1)
	movq $GHC.IO.Buffer.Buffer_con_info,-80(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-72(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-64(%r12)
	movq %rax,-56(%r12)
	movq %rbx,-48(%r12)
	movq 88(%rsp),%rax
	movq %rax,-40(%r12)
	leaq 2(%rcx),%rax
	movq %rax,-32(%r12)
	leaq -79(%r12),%rax
	addq $-32,%r12
	movq %rax,%rsi
	addq $72,%rbp
	jmp GHC.IO.Encoding.UTF16.mkUTF1_entry
_c8HQj:
	movq $88,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8HQ5, .-_c8HQ5


==================== Asm code ====================
2018-03-16 16:03:49.030942355 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HQ5_info:
	.quad	_c8HQ5
	.quad	14600
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.034485156 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16_encode1_closure
.type GHC.IO.Encoding.UTF16.utf16_encode1_closure, @object
GHC.IO.Encoding.UTF16.utf16_encode1_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16_encode1_info


==================== Asm code ====================
2018-03-16 16:03:49.035226595 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16_encode1_entry
.type GHC.IO.Encoding.UTF16.utf16_encode1_entry, @object
GHC.IO.Encoding.UTF16.utf16_encode1_entry:
_c8HRm:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HRq
_c8HRr:
	movq $block_c8HRj_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8HRj
_c8HRk:
	movq (%rbx),%rax
	jmp *(%rax)
_c8HRq:
	movl $GHC.IO.Encoding.UTF16.utf16_encode1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.utf16_encode1_entry, .-GHC.IO.Encoding.UTF16.utf16_encode1_entry


==================== Asm code ====================
2018-03-16 16:03:49.035917767 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16_encode1_info
.type GHC.IO.Encoding.UTF16.utf16_encode1_info, @object
GHC.IO.Encoding.UTF16.utf16_encode1_info:
	.quad	GHC.IO.Encoding.UTF16.utf16_encode1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:03:49.036649884 UTC

.section .text
.align 8
_c8HRj:
_c8HRj:
	movq $block_c8HRp_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8HRp
_c8HRt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8HRj, .-_c8HRj


==================== Asm code ====================
2018-03-16 16:03:49.037274389 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HRj_info:
	.quad	_c8HRj
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.03795624 UTC

.section .text
.align 8
_c8HRp:
_c8HRp:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,(%rbp)
	movq 39(%rbx),%rax
	movq %rax,8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,16(%rbp)
	jmp GHC.IO.Encoding.UTF16.$wutf16_encode_entry
	.size _c8HRp, .-_c8HRp


==================== Asm code ====================
2018-03-16 16:03:49.038524522 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HRp_info:
	.quad	_c8HRp
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.040635106 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16_encode_closure
.type GHC.IO.Encoding.UTF16.utf16_encode_closure, @object
GHC.IO.Encoding.UTF16.utf16_encode_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16_encode_info


==================== Asm code ====================
2018-03-16 16:03:49.041751635 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16_encode_entry
.type GHC.IO.Encoding.UTF16.utf16_encode_entry, @object
GHC.IO.Encoding.UTF16.utf16_encode_entry:
_c8HRU:
	jmp GHC.IO.Encoding.UTF16.utf16_encode1_entry
	.size GHC.IO.Encoding.UTF16.utf16_encode_entry, .-GHC.IO.Encoding.UTF16.utf16_encode_entry


==================== Asm code ====================
2018-03-16 16:03:49.042336952 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16_encode_info
.type GHC.IO.Encoding.UTF16.utf16_encode_info, @object
GHC.IO.Encoding.UTF16.utf16_encode_info:
	.quad	GHC.IO.Encoding.UTF16.utf16_encode_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:03:49.07258792 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF3_closure
.type GHC.IO.Encoding.UTF16.mkUTF3_closure, @object
GHC.IO.Encoding.UTF16.mkUTF3_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF3_info


==================== Asm code ====================
2018-03-16 16:03:49.073642924 UTC

.section .text
.align 8
sat_s8G8n_entry:
_c8HSv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HSw
_c8HSx:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8HSz
_c8HSy:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8HSu
_c8HSt:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HSz:
	movq $56,904(%r13)
_c8HSw:
	jmp *-16(%r13)
_c8HSu:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8G8n_entry, .-sat_s8G8n_entry


==================== Asm code ====================
2018-03-16 16:03:49.074445037 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8G8n_info:
	.quad	sat_s8G8n_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:49.075341157 UTC

.section .text
.align 8
sat_s8G8v_entry:
_c8HSR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HSS
_c8HST:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8HSV
_c8HSU:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8HSQ
_c8HSP:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HSV:
	movq $56,904(%r13)
_c8HSS:
	jmp *-16(%r13)
_c8HSQ:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8G8v_entry, .-sat_s8G8v_entry


==================== Asm code ====================
2018-03-16 16:03:49.076115714 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8G8v_info:
	.quad	sat_s8G8v_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:49.077014903 UTC

.section .text
.align 8
sat_s8G8D_entry:
_c8HTd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HTe
_c8HTf:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8HTh
_c8HTg:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8HTc
_c8HTb:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HTh:
	movq $56,904(%r13)
_c8HTe:
	jmp *-16(%r13)
_c8HTc:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8G8D_entry, .-sat_s8G8D_entry


==================== Asm code ====================
2018-03-16 16:03:49.077852839 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8G8D_info:
	.quad	sat_s8G8D_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:49.078753284 UTC

.section .text
.align 8
sat_s8G8L_entry:
_c8HTz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HTA
_c8HTB:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8HTD
_c8HTC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8HTy
_c8HTx:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HTD:
	movq $56,904(%r13)
_c8HTA:
	jmp *-16(%r13)
_c8HTy:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8G8L_entry, .-sat_s8G8L_entry


==================== Asm code ====================
2018-03-16 16:03:49.079539688 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8G8L_info:
	.quad	sat_s8G8L_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:49.080390244 UTC

.section .text
.align 8
sat_s8G8T_entry:
_c8HTV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HTW
_c8HTX:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8HTZ
_c8HTY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8HTU
_c8HTT:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HTZ:
	movq $56,904(%r13)
_c8HTW:
	jmp *-16(%r13)
_c8HTU:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8G8T_entry, .-sat_s8G8T_entry


==================== Asm code ====================
2018-03-16 16:03:49.081166052 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8G8T_info:
	.quad	sat_s8G8T_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:49.082095283 UTC

.section .text
.align 8
sat_s8G91_entry:
_c8HUh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HUi
_c8HUj:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8HUl
_c8HUk:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8HUg
_c8HUf:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HUl:
	movq $56,904(%r13)
_c8HUi:
	jmp *-16(%r13)
_c8HUg:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8G91_entry, .-sat_s8G91_entry


==================== Asm code ====================
2018-03-16 16:03:49.082883847 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8G91_info:
	.quad	sat_s8G91_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:49.083794851 UTC

.section .text
.align 8
sat_s8G99_entry:
_c8HUD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HUE
_c8HUF:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8HUH
_c8HUG:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8HUC
_c8HUB:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HUH:
	movq $56,904(%r13)
_c8HUE:
	jmp *-16(%r13)
_c8HUC:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8G99_entry, .-sat_s8G99_entry


==================== Asm code ====================
2018-03-16 16:03:49.08455052 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8G99_info:
	.quad	sat_s8G99_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:49.085479932 UTC

.section .text
.align 8
sat_s8G9h_entry:
_c8HUZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HV0
_c8HV1:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8HV3
_c8HV2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8HUY
_c8HUX:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HV3:
	movq $56,904(%r13)
_c8HV0:
	jmp *-16(%r13)
_c8HUY:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8G9h_entry, .-sat_s8G9h_entry


==================== Asm code ====================
2018-03-16 16:03:49.086252127 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8G9h_info:
	.quad	sat_s8G9h_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:49.087054245 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF3_entry
.type GHC.IO.Encoding.UTF16.mkUTF3_entry, @object
GHC.IO.Encoding.UTF16.mkUTF3_entry:
_c8HV6:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8HV7
_c8HV8:
	movq $block_c8HS5_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8HS5
_c8HS6:
	movq (%rbx),%rax
	jmp *(%rax)
_c8HV7:
	movl $GHC.IO.Encoding.UTF16.mkUTF3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.mkUTF3_entry, .-GHC.IO.Encoding.UTF16.mkUTF3_entry


==================== Asm code ====================
2018-03-16 16:03:49.087737648 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF3_info
.type GHC.IO.Encoding.UTF16.mkUTF3_info, @object
GHC.IO.Encoding.UTF16.mkUTF3_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF3_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:49.088516621 UTC

.section .text
.align 8
_c8HS5:
_c8HS5:
	movq $block_c8HSa_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8HSa
_c8HSb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8HS5, .-_c8HS5


==================== Asm code ====================
2018-03-16 16:03:49.089217268 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HS5_info:
	.quad	_c8HS5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.091632354 UTC

.section .text
.align 8
_c8HSa:
_c8HSa:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8HVc
_c8HVb:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8HVL:
	cmpq %rsi,%rbx
	jl _c8HXG
_c8HXH:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8HUM
_c8HXr:
	leaq 2(%r11),%r14
	movzbl (%r8,%r14,1),%r14d
	movq %r8,72(%rsp)
	leaq 3(%r11),%r8
	movq %r9,80(%rsp)
	movq 72(%rsp),%r9
	movzbl (%r9,%r8,1),%r8d
	cmpq $55296,%r10
	jb _c8HWR
_c8HXp:
	cmpq $56319,%r10
	ja _c8HWX
_c8HXo:
	shlq $8,%r8
	movzwl %r8w,%r8d
	addq %r14,%r8
	movzwl %r8w,%r8d
	cmpq $56320,%r8
	jb _c8HXf
_c8HXn:
	cmpq $57343,%r8
	ja _c8HXl
_c8HXm:
	addq $-56320,%r8
	addq $-55296,%r10
	shlq $10,%r10
	addq %r8,%r10
	leaq 65536(%r10),%r8
	movl %r8d,(%rdx,%rbx,4)
	incq %rbx
	addq $4,%r11
_n8I09:
	movq %r9,%r8
	movq 80(%rsp),%r9
	movq 64(%rsp),%r10
	jmp _c8HVL
_c8HXx:
	cmpq $57343,%r10
	jbe _c8HXu
_c8HXv:
	movl %r10d,(%rdx,%rbx,4)
	incq %rbx
	addq $2,%r11
_n8I0a:
	movq 64(%rsp),%r10
	jmp _c8HVL
_c8HXD:
	leaq 1(%r11),%r14
	cmpq %r9,%r14
	je _c8HXB
_c8HXA:
	movzbl (%r8,%r11,1),%r14d
	movq %r10,64(%rsp)
	leaq 1(%r11),%r10
	movzbl (%r8,%r10,1),%r10d
	shlq $8,%r10
	movzwl %r10w,%r10d
	addq %r14,%r10
	movzwl %r10w,%r10d
	cmpq $55296,%r10
	jae _c8HXx
_c8HXy:
	movl %r10d,(%rdx,%rbx,4)
	incq %rbx
	addq $2,%r11
_n8I0b:
	movq 64(%rsp),%r10
	jmp _c8HVL
_c8HXG:
	cmpq %r9,%r11
	jl _c8HXD
_c8HXE:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8HUq
_c8HXB:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8HU4
_c8HXu:
	movq %r9,%r14
	subq %r11,%r14
	cmpq $4,%r14
	jge _c8HXr
_c8HXs:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8HTI
_c8HXl:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8HTm
_c8HXf:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8HT0
_c8HWX:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8HSE
_c8HWR:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8HSi
_c8HVc:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8HSa, .-_c8HSa


==================== Asm code ====================
2018-03-16 16:03:49.093172588 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HSa_info:
	.quad	_c8HSa
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.094112484 UTC

.section .text
.align 8
_c8HU4:
_c8HU4:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8HVA
_c8HVz:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8G91_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HVA:
	movq $160,904(%r13)
	movq $block_c8HU4_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8HU4, .-_c8HU4


==================== Asm code ====================
2018-03-16 16:03:49.094950452 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HU4_info:
	.quad	_c8HU4
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.095853274 UTC

.section .text
.align 8
_c8HSi:
_c8HSi:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8HVg
_c8HVf:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8G8n_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HVg:
	movq $160,904(%r13)
	movq $block_c8HSi_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8HSi, .-_c8HSi


==================== Asm code ====================
2018-03-16 16:03:49.096772926 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HSi_info:
	.quad	_c8HSi
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.09771123 UTC

.section .text
.align 8
_c8HSE:
_c8HSE:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8HVk
_c8HVj:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8G8v_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HVk:
	movq $160,904(%r13)
	movq $block_c8HSE_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8HSE, .-_c8HSE


==================== Asm code ====================
2018-03-16 16:03:49.098586559 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HSE_info:
	.quad	_c8HSE
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.09947173 UTC

.section .text
.align 8
_c8HT0:
_c8HT0:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8HVo
_c8HVn:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8G8D_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HVo:
	movq $160,904(%r13)
	movq $block_c8HT0_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8HT0, .-_c8HT0


==================== Asm code ====================
2018-03-16 16:03:49.100944218 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HT0_info:
	.quad	_c8HT0
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.10214085 UTC

.section .text
.align 8
_c8HTm:
_c8HTm:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8HVs
_c8HVr:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8G8L_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HVs:
	movq $160,904(%r13)
	movq $block_c8HTm_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8HTm, .-_c8HTm


==================== Asm code ====================
2018-03-16 16:03:49.102985847 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HTm_info:
	.quad	_c8HTm
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.10385202 UTC

.section .text
.align 8
_c8HTI:
_c8HTI:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8HVw
_c8HVv:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8G8T_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HVw:
	movq $160,904(%r13)
	movq $block_c8HTI_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8HTI, .-_c8HTI


==================== Asm code ====================
2018-03-16 16:03:49.104712827 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HTI_info:
	.quad	_c8HTI
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.105593665 UTC

.section .text
.align 8
_c8HUq:
_c8HUq:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8HVE
_c8HVD:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8G99_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HVE:
	movq $160,904(%r13)
	movq $block_c8HUq_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8HUq, .-_c8HUq


==================== Asm code ====================
2018-03-16 16:03:49.106405073 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HUq_info:
	.quad	_c8HUq
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.107259255 UTC

.section .text
.align 8
_c8HUM:
_c8HUM:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8HVI
_c8HVH:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8G9h_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8HVI:
	movq $160,904(%r13)
	movq $block_c8HUM_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8HUM, .-_c8HUM


==================== Asm code ====================
2018-03-16 16:03:49.108060413 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8HUM_info:
	.quad	_c8HUM
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.110324593 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16le_decode_closure
.type GHC.IO.Encoding.UTF16.utf16le_decode_closure, @object
GHC.IO.Encoding.UTF16.utf16le_decode_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16le_decode_info


==================== Asm code ====================
2018-03-16 16:03:49.110991187 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16le_decode_entry
.type GHC.IO.Encoding.UTF16.utf16le_decode_entry, @object
GHC.IO.Encoding.UTF16.utf16le_decode_entry:
_c8I2J:
	jmp GHC.IO.Encoding.UTF16.mkUTF3_entry
	.size GHC.IO.Encoding.UTF16.utf16le_decode_entry, .-GHC.IO.Encoding.UTF16.utf16le_decode_entry


==================== Asm code ====================
2018-03-16 16:03:49.111573459 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16le_decode_info
.type GHC.IO.Encoding.UTF16.utf16le_decode_info, @object
GHC.IO.Encoding.UTF16.utf16le_decode_info:
	.quad	GHC.IO.Encoding.UTF16.utf16le_decode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:49.113630127 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16le3_bytes
.type GHC.IO.Encoding.UTF16.mkUTF16le3_bytes, @object
GHC.IO.Encoding.UTF16.mkUTF16le3_bytes:
	.asciz "UTF16-LE"


==================== Asm code ====================
2018-03-16 16:03:49.11638386 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16le2_closure
.type GHC.IO.Encoding.UTF16.mkUTF16le2_closure, @object
GHC.IO.Encoding.UTF16.mkUTF16le2_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16le2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:49.117330562 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF16le2_entry
.type GHC.IO.Encoding.UTF16.mkUTF16le2_entry, @object
GHC.IO.Encoding.UTF16.mkUTF16le2_entry:
_c8I2X:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8I2Y
_c8I2Z:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8I2W
_c8I2V:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Encoding.UTF16.mkUTF16le3_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8I2Y:
	jmp *-16(%r13)
_c8I2W:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF16.mkUTF16le2_entry, .-GHC.IO.Encoding.UTF16.mkUTF16le2_entry


==================== Asm code ====================
2018-03-16 16:03:49.118038428 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16le2_info
.type GHC.IO.Encoding.UTF16.mkUTF16le2_info, @object
GHC.IO.Encoding.UTF16.mkUTF16le2_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16le2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:49.120236533 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF2_closure
.type GHC.IO.Encoding.UTF16.mkUTF2_closure, @object
GHC.IO.Encoding.UTF16.mkUTF2_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF2_info


==================== Asm code ====================
2018-03-16 16:03:49.120894968 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF2_entry
.type GHC.IO.Encoding.UTF16.mkUTF2_entry, @object
GHC.IO.Encoding.UTF16.mkUTF2_entry:
_c8I3b:
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF16.mkUTF2_entry, .-GHC.IO.Encoding.UTF16.mkUTF2_entry


==================== Asm code ====================
2018-03-16 16:03:49.121512229 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF2_info
.type GHC.IO.Encoding.UTF16.mkUTF2_info, @object
GHC.IO.Encoding.UTF16.mkUTF2_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF2_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:03:49.123649938 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16be1_closure
.type GHC.IO.Encoding.UTF16.mkUTF16be1_closure, @object
GHC.IO.Encoding.UTF16.mkUTF16be1_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be1_info


==================== Asm code ====================
2018-03-16 16:03:49.124303036 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF16be1_entry
.type GHC.IO.Encoding.UTF16.mkUTF16be1_entry, @object
GHC.IO.Encoding.UTF16.mkUTF16be1_entry:
_c8I3n:
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF16.mkUTF16be1_entry, .-GHC.IO.Encoding.UTF16.mkUTF16be1_entry


==================== Asm code ====================
2018-03-16 16:03:49.124906373 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16be1_info
.type GHC.IO.Encoding.UTF16.mkUTF16be1_info, @object
GHC.IO.Encoding.UTF16.mkUTF16be1_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:49.130463827 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16le_closure
.type GHC.IO.Encoding.UTF16.mkUTF16le_closure, @object
GHC.IO.Encoding.UTF16.mkUTF16le_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16le_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:49.131161367 UTC

.section .text
.align 8
sat_s8GaC_entry:
_c8I3J:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverEncode1_entry
	.size sat_s8GaC_entry, .-sat_s8GaC_entry


==================== Asm code ====================
2018-03-16 16:03:49.131785287 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8GaC_info:
	.quad	sat_s8GaC_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8GEr_srt


==================== Asm code ====================
2018-03-16 16:03:49.13264084 UTC

.section .text
.align 8
sat_s8GaE_entry:
_c8I3N:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8I3R
_c8I3Q:
	movq 7(%rbx),%rax
	movq $sat_s8GaC_info,-56(%r12)
	movq %rax,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	movq $GHC.IO.Encoding.UTF16.mkUTF16le1_closure+3,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.UTF16.mkUTF2_closure+1,-16(%r12)
	movq $GHC.IO.Encoding.UTF16.mkUTF2_closure+1,-8(%r12)
	movq $GHC.IO.Encoding.UTF16.mkUTF16be1_closure+2,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8I3R:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8GaE_entry, .-sat_s8GaE_entry


==================== Asm code ====================
2018-03-16 16:03:49.133375781 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8GaE_info:
	.quad	sat_s8GaE_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8GEr_srt


==================== Asm code ====================
2018-03-16 16:03:49.134065038 UTC

.section .text
.align 8
sat_s8Gay_entry:
_c8I42:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverDecode1_entry
	.size sat_s8Gay_entry, .-sat_s8Gay_entry


==================== Asm code ====================
2018-03-16 16:03:49.134683091 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Gay_info:
	.quad	sat_s8Gay_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8GEr_srt+8


==================== Asm code ====================
2018-03-16 16:03:49.13548679 UTC

.section .text
.align 8
sat_s8GaA_entry:
_c8I46:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8I4a
_c8I49:
	movq 7(%rbx),%rax
	movq $sat_s8Gay_info,-56(%r12)
	movq %rax,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	movq $GHC.IO.Encoding.UTF16.mkUTF3_closure+3,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.UTF16.mkUTF2_closure+1,-16(%r12)
	movq $GHC.IO.Encoding.UTF16.mkUTF2_closure+1,-8(%r12)
	movq $GHC.IO.Encoding.UTF16.mkUTF16be1_closure+2,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8I4a:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8GaA_entry, .-sat_s8GaA_entry


==================== Asm code ====================
2018-03-16 16:03:49.136778278 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8GaA_info:
	.quad	sat_s8GaA_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8GEr_srt+8


==================== Asm code ====================
2018-03-16 16:03:49.138012147 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF16le_entry
.type GHC.IO.Encoding.UTF16.mkUTF16le_entry, @object
GHC.IO.Encoding.UTF16.mkUTF16le_entry:
_c8I4c:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8I4g
_c8I4f:
	movq $sat_s8GaE_info,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s8GaA_info,-40(%r12)
	movq %r14,-32(%r12)
	movq $GHC.IO.Encoding.Types.TextEncoding_con_info,-24(%r12)
	movq $GHC.IO.Encoding.UTF16.mkUTF16le2_closure,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8I4g:
	movq $64,904(%r13)
	movl $GHC.IO.Encoding.UTF16.mkUTF16le_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.mkUTF16le_entry, .-GHC.IO.Encoding.UTF16.mkUTF16le_entry


==================== Asm code ====================
2018-03-16 16:03:49.138714484 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16le_info
.type GHC.IO.Encoding.UTF16.mkUTF16le_info, @object
GHC.IO.Encoding.UTF16.mkUTF16le_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16le_entry
	.quad	0
	.quad	64424509454
	.quad	4294967301
	.quad	S8GEr_srt


==================== Asm code ====================
2018-03-16 16:03:49.142185844 UTC

.section .data
.align 8
.align 1
lvl_r8G1B_closure:
	.quad	lvl_r8G1B_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:49.142952979 UTC

.section .text
.align 8
lvl_r8G1B_entry:
_c8I4L:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8I4P
_c8I4Q:
	movq $block_c8I4I_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8I4I
_c8I4J:
	movq (%rbx),%rax
	jmp *(%rax)
_c8I4P:
	movl $lvl_r8G1B_closure,%ebx
	jmp *-8(%r13)
	.size lvl_r8G1B_entry, .-lvl_r8G1B_entry


==================== Asm code ====================
2018-03-16 16:03:49.143621551 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_r8G1B_info:
	.quad	lvl_r8G1B_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8GEr_srt+32


==================== Asm code ====================
2018-03-16 16:03:49.144321023 UTC

.section .text
.align 8
_c8I4I:
_c8I4I:
	movq 8(%rbp),%rax
	movq $block_c8I4O_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8I4O
_c8I4S:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8I4I, .-_c8I4I


==================== Asm code ====================
2018-03-16 16:03:49.144948332 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8I4I_info:
	.quad	_c8I4I
	.quad	1
	.quad	4294967326
	.quad	S8GEr_srt+32


==================== Asm code ====================
2018-03-16 16:03:49.145604503 UTC

.section .text
.align 8
_c8I4O:
_c8I4O:
	movl $GHC.IO.Encoding.Failure.recoverDecode2_closure,%ebx
	addq $8,%rbp
	jmp stg_raiseIO#
	.size _c8I4O, .-_c8I4O


==================== Asm code ====================
2018-03-16 16:03:49.14614868 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8I4O_info:
	.quad	_c8I4O
	.quad	0
	.quad	4294967326
	.quad	S8GEr_srt+32


==================== Asm code ====================
2018-03-16 16:03:49.147940108 UTC

.section .data
.align 8
.align 1
lvl1_r8G1C_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.UTF16.mkUTF3_closure+3
	.quad	lvl_r8G1B_closure+3
	.quad	GHC.IO.Encoding.UTF16.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF16.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:49.150499362 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16le2_closure
.type GHC.IO.Encoding.UTF16.utf16le2_closure, @object
GHC.IO.Encoding.UTF16.utf16le2_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16le2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:49.151218162 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16le2_entry
.type GHC.IO.Encoding.UTF16.utf16le2_entry, @object
GHC.IO.Encoding.UTF16.utf16le2_entry:
_c8I5h:
	movl $lvl1_r8G1C_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF16.utf16le2_entry, .-GHC.IO.Encoding.UTF16.utf16le2_entry


==================== Asm code ====================
2018-03-16 16:03:49.151868583 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16le2_info
.type GHC.IO.Encoding.UTF16.utf16le2_info, @object
GHC.IO.Encoding.UTF16.utf16le2_info:
	.quad	GHC.IO.Encoding.UTF16.utf16le2_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8GEr_srt+48


==================== Asm code ====================
2018-03-16 16:03:49.155517451 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be2_closure
.type GHC.IO.Encoding.UTF16.utf16be2_closure, @object
GHC.IO.Encoding.UTF16.utf16be2_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16be2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:49.15636548 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16be2_entry
.type GHC.IO.Encoding.UTF16.utf16be2_entry, @object
GHC.IO.Encoding.UTF16.utf16be2_entry:
_c8I5w:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8I5A
_c8I5B:
	movq $block_c8I5t_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8I5t
_c8I5u:
	movq (%rbx),%rax
	jmp *(%rax)
_c8I5A:
	movl $GHC.IO.Encoding.UTF16.utf16be2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.utf16be2_entry, .-GHC.IO.Encoding.UTF16.utf16be2_entry


==================== Asm code ====================
2018-03-16 16:03:49.157050293 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be2_info
.type GHC.IO.Encoding.UTF16.utf16be2_info, @object
GHC.IO.Encoding.UTF16.utf16be2_info:
	.quad	GHC.IO.Encoding.UTF16.utf16be2_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8GEr_srt+56


==================== Asm code ====================
2018-03-16 16:03:49.157816727 UTC

.section .text
.align 8
_c8I5t:
_c8I5t:
	movq $block_c8I5z_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8I5z
_c8I5D:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8I5t, .-_c8I5t


==================== Asm code ====================
2018-03-16 16:03:49.158486491 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8I5t_info:
	.quad	_c8I5t
	.quad	1
	.quad	4294967326
	.quad	S8GEr_srt+56


==================== Asm code ====================
2018-03-16 16:03:49.15914249 UTC

.section .text
.align 8
_c8I5z:
_c8I5z:
	movl $GHC.IO.Encoding.Failure.recoverEncode2_closure,%ebx
	addq $32,%rbp
	jmp stg_raiseIO#
	.size _c8I5z, .-_c8I5z


==================== Asm code ====================
2018-03-16 16:03:49.159716755 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8I5z_info:
	.quad	_c8I5z
	.quad	323
	.quad	4294967326
	.quad	S8GEr_srt+56


==================== Asm code ====================
2018-03-16 16:03:49.161949745 UTC

.section .data
.align 8
.align 1
lvl2_r8G1D_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.UTF16.mkUTF16le1_closure+3
	.quad	GHC.IO.Encoding.UTF16.utf16be2_closure+3
	.quad	GHC.IO.Encoding.UTF16.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF16.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:49.16426939 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16le1_closure
.type GHC.IO.Encoding.UTF16.utf16le1_closure, @object
GHC.IO.Encoding.UTF16.utf16le1_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16le1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:49.164996163 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16le1_entry
.type GHC.IO.Encoding.UTF16.utf16le1_entry, @object
GHC.IO.Encoding.UTF16.utf16le1_entry:
_c8I63:
	movl $lvl2_r8G1D_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF16.utf16le1_entry, .-GHC.IO.Encoding.UTF16.utf16le1_entry


==================== Asm code ====================
2018-03-16 16:03:49.165722204 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16le1_info
.type GHC.IO.Encoding.UTF16.utf16le1_info, @object
GHC.IO.Encoding.UTF16.utf16le1_info:
	.quad	GHC.IO.Encoding.UTF16.utf16le1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8GEr_srt+72


==================== Asm code ====================
2018-03-16 16:03:49.167469977 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16le_closure
.type GHC.IO.Encoding.UTF16.utf16le_closure, @object
GHC.IO.Encoding.UTF16.utf16le_closure:
	.quad	GHC.IO.Encoding.Types.TextEncoding_con_info
	.quad	GHC.IO.Encoding.UTF16.mkUTF16le2_closure
	.quad	GHC.IO.Encoding.UTF16.utf16le2_closure+1
	.quad	GHC.IO.Encoding.UTF16.utf16le1_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:49.198530778 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF5_closure
.type GHC.IO.Encoding.UTF16.mkUTF5_closure, @object
GHC.IO.Encoding.UTF16.mkUTF5_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF5_info


==================== Asm code ====================
2018-03-16 16:03:49.19960398 UTC

.section .text
.align 8
sat_s8GbG_entry:
_c8I6G:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8I6H
_c8I6I:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8I6K
_c8I6J:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8I6F
_c8I6E:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8I6K:
	movq $56,904(%r13)
_c8I6H:
	jmp *-16(%r13)
_c8I6F:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8GbG_entry, .-sat_s8GbG_entry


==================== Asm code ====================
2018-03-16 16:03:49.200353202 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8GbG_info:
	.quad	sat_s8GbG_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:49.201213027 UTC

.section .text
.align 8
sat_s8GbO_entry:
_c8I72:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8I73
_c8I74:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8I76
_c8I75:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8I71
_c8I70:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8I76:
	movq $56,904(%r13)
_c8I73:
	jmp *-16(%r13)
_c8I71:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8GbO_entry, .-sat_s8GbO_entry


==================== Asm code ====================
2018-03-16 16:03:49.20203019 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8GbO_info:
	.quad	sat_s8GbO_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:49.202885511 UTC

.section .text
.align 8
sat_s8GbW_entry:
_c8I7o:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8I7p
_c8I7q:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8I7s
_c8I7r:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8I7n
_c8I7m:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8I7s:
	movq $56,904(%r13)
_c8I7p:
	jmp *-16(%r13)
_c8I7n:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8GbW_entry, .-sat_s8GbW_entry


==================== Asm code ====================
2018-03-16 16:03:49.203662729 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8GbW_info:
	.quad	sat_s8GbW_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:49.2045543 UTC

.section .text
.align 8
sat_s8Gc4_entry:
_c8I7K:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8I7L
_c8I7M:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8I7O
_c8I7N:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8I7J
_c8I7I:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8I7O:
	movq $56,904(%r13)
_c8I7L:
	jmp *-16(%r13)
_c8I7J:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Gc4_entry, .-sat_s8Gc4_entry


==================== Asm code ====================
2018-03-16 16:03:49.205339788 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Gc4_info:
	.quad	sat_s8Gc4_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:49.206244581 UTC

.section .text
.align 8
sat_s8Gcc_entry:
_c8I86:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8I87
_c8I88:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8I8a
_c8I89:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8I85
_c8I84:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8I8a:
	movq $56,904(%r13)
_c8I87:
	jmp *-16(%r13)
_c8I85:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Gcc_entry, .-sat_s8Gcc_entry


==================== Asm code ====================
2018-03-16 16:03:49.207093582 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Gcc_info:
	.quad	sat_s8Gcc_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:49.208029025 UTC

.section .text
.align 8
sat_s8Gck_entry:
_c8I8s:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8I8t
_c8I8u:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8I8w
_c8I8v:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8I8r
_c8I8q:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8I8w:
	movq $56,904(%r13)
_c8I8t:
	jmp *-16(%r13)
_c8I8r:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Gck_entry, .-sat_s8Gck_entry


==================== Asm code ====================
2018-03-16 16:03:49.20881896 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Gck_info:
	.quad	sat_s8Gck_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:49.209724905 UTC

.section .text
.align 8
sat_s8Gcs_entry:
_c8I8O:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8I8P
_c8I8Q:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8I8S
_c8I8R:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8I8N
_c8I8M:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8I8S:
	movq $56,904(%r13)
_c8I8P:
	jmp *-16(%r13)
_c8I8N:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Gcs_entry, .-sat_s8Gcs_entry


==================== Asm code ====================
2018-03-16 16:03:49.210558524 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Gcs_info:
	.quad	sat_s8Gcs_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:49.21144821 UTC

.section .text
.align 8
sat_s8GcA_entry:
_c8I9a:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8I9b
_c8I9c:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8I9e
_c8I9d:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8I99
_c8I98:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8I9e:
	movq $56,904(%r13)
_c8I9b:
	jmp *-16(%r13)
_c8I99:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8GcA_entry, .-sat_s8GcA_entry


==================== Asm code ====================
2018-03-16 16:03:49.212269645 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8GcA_info:
	.quad	sat_s8GcA_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:49.213048979 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF5_entry
.type GHC.IO.Encoding.UTF16.mkUTF5_entry, @object
GHC.IO.Encoding.UTF16.mkUTF5_entry:
_c8I9h:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8I9i
_c8I9j:
	movq $block_c8I6g_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8I6g
_c8I6h:
	movq (%rbx),%rax
	jmp *(%rax)
_c8I9i:
	movl $GHC.IO.Encoding.UTF16.mkUTF5_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.mkUTF5_entry, .-GHC.IO.Encoding.UTF16.mkUTF5_entry


==================== Asm code ====================
2018-03-16 16:03:49.213933763 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF5_info
.type GHC.IO.Encoding.UTF16.mkUTF5_info, @object
GHC.IO.Encoding.UTF16.mkUTF5_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF5_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:49.214724206 UTC

.section .text
.align 8
_c8I6g:
_c8I6g:
	movq $block_c8I6l_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8I6l
_c8I6m:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8I6g, .-_c8I6g


==================== Asm code ====================
2018-03-16 16:03:49.215425515 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8I6g_info:
	.quad	_c8I6g
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.217512416 UTC

.section .text
.align 8
_c8I6l:
_c8I6l:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8I9n
_c8I9m:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8I9W:
	cmpq %rsi,%rbx
	jl _c8IbR
_c8IbS:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8I8X
_c8IbC:
	leaq 2(%r11),%r14
	movzbl (%r8,%r14,1),%r14d
	movq %r8,72(%rsp)
	leaq 3(%r11),%r8
	movq %r9,80(%rsp)
	movq 72(%rsp),%r9
	movzbl (%r9,%r8,1),%r8d
	cmpq $55296,%r10
	jb _c8Ib2
_c8IbA:
	cmpq $56319,%r10
	ja _c8Ib8
_c8Ibz:
	shlq $8,%r14
	movzwl %r14w,%r14d
	addq %r8,%r14
	movzwl %r14w,%r8d
	cmpq $56320,%r8
	jb _c8Ibq
_c8Iby:
	cmpq $57343,%r8
	ja _c8Ibw
_c8Ibx:
	addq $-56320,%r8
	addq $-55296,%r10
	shlq $10,%r10
	addq %r8,%r10
	leaq 65536(%r10),%r8
	movl %r8d,(%rdx,%rbx,4)
	incq %rbx
	addq $4,%r11
_n8Iek:
	movq %r9,%r8
	movq 80(%rsp),%r9
	movq 64(%rsp),%r10
	jmp _c8I9W
_c8IbI:
	cmpq $57343,%r10
	jbe _c8IbF
_c8IbG:
	movl %r10d,(%rdx,%rbx,4)
	incq %rbx
	addq $2,%r11
_n8Iel:
	movq 64(%rsp),%r10
	jmp _c8I9W
_c8IbO:
	leaq 1(%r11),%r14
	cmpq %r9,%r14
	je _c8IbM
_c8IbL:
	movzbl (%r8,%r11,1),%r14d
	movq %r10,64(%rsp)
	leaq 1(%r11),%r10
	movzbl (%r8,%r10,1),%r10d
	shlq $8,%r14
	movzwl %r14w,%r14d
	addq %r10,%r14
	movzwl %r14w,%r10d
	cmpq $55296,%r10
	jae _c8IbI
_c8IbJ:
	movl %r10d,(%rdx,%rbx,4)
	incq %rbx
	addq $2,%r11
_n8Iem:
	movq 64(%rsp),%r10
	jmp _c8I9W
_c8IbR:
	cmpq %r9,%r11
	jl _c8IbO
_c8IbP:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8I8B
_c8IbM:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8I8f
_c8IbF:
	movq %r9,%r14
	subq %r11,%r14
	cmpq $4,%r14
	jge _c8IbC
_c8IbD:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8I7T
_c8Ibw:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8I7x
_c8Ibq:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8I7b
_c8Ib8:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8I6P
_c8Ib2:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8I6t
_c8I9n:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8I6l, .-_c8I6l


==================== Asm code ====================
2018-03-16 16:03:49.219199054 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8I6l_info:
	.quad	_c8I6l
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.220159431 UTC

.section .text
.align 8
_c8I8f:
_c8I8f:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8I9L
_c8I9K:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8Gck_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8I9L:
	movq $160,904(%r13)
	movq $block_c8I8f_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8I8f, .-_c8I8f


==================== Asm code ====================
2018-03-16 16:03:49.22108975 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8I8f_info:
	.quad	_c8I8f
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.222562078 UTC

.section .text
.align 8
_c8I6t:
_c8I6t:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8I9r
_c8I9q:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8GbG_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8I9r:
	movq $160,904(%r13)
	movq $block_c8I6t_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8I6t, .-_c8I6t


==================== Asm code ====================
2018-03-16 16:03:49.223432654 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8I6t_info:
	.quad	_c8I6t
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.224318404 UTC

.section .text
.align 8
_c8I6P:
_c8I6P:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8I9v
_c8I9u:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8GbO_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8I9v:
	movq $160,904(%r13)
	movq $block_c8I6P_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8I6P, .-_c8I6P


==================== Asm code ====================
2018-03-16 16:03:49.225111107 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8I6P_info:
	.quad	_c8I6P
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.226366964 UTC

.section .text
.align 8
_c8I7b:
_c8I7b:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8I9z
_c8I9y:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8GbW_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8I9z:
	movq $160,904(%r13)
	movq $block_c8I7b_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8I7b, .-_c8I7b


==================== Asm code ====================
2018-03-16 16:03:49.227194547 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8I7b_info:
	.quad	_c8I7b
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.228027842 UTC

.section .text
.align 8
_c8I7x:
_c8I7x:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8I9D
_c8I9C:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8Gc4_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8I9D:
	movq $160,904(%r13)
	movq $block_c8I7x_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8I7x, .-_c8I7x


==================== Asm code ====================
2018-03-16 16:03:49.228864073 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8I7x_info:
	.quad	_c8I7x
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.22976727 UTC

.section .text
.align 8
_c8I7T:
_c8I7T:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8I9H
_c8I9G:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8Gcc_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8I9H:
	movq $160,904(%r13)
	movq $block_c8I7T_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8I7T, .-_c8I7T


==================== Asm code ====================
2018-03-16 16:03:49.230571283 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8I7T_info:
	.quad	_c8I7T
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.231394355 UTC

.section .text
.align 8
_c8I8B:
_c8I8B:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8I9P
_c8I9O:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8Gcs_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8I9P:
	movq $160,904(%r13)
	movq $block_c8I8B_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8I8B, .-_c8I8B


==================== Asm code ====================
2018-03-16 16:03:49.232180476 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8I8B_info:
	.quad	_c8I8B
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.233023166 UTC

.section .text
.align 8
_c8I8X:
_c8I8X:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8I9T
_c8I9S:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8GcA_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8I9T:
	movq $160,904(%r13)
	movq $block_c8I8X_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8I8X, .-_c8I8X


==================== Asm code ====================
2018-03-16 16:03:49.233910623 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8I8X_info:
	.quad	_c8I8X
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.236326538 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be_decode_closure
.type GHC.IO.Encoding.UTF16.utf16be_decode_closure, @object
GHC.IO.Encoding.UTF16.utf16be_decode_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16be_decode_info


==================== Asm code ====================
2018-03-16 16:03:49.237001328 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16be_decode_entry
.type GHC.IO.Encoding.UTF16.utf16be_decode_entry, @object
GHC.IO.Encoding.UTF16.utf16be_decode_entry:
_c8IgU:
	jmp GHC.IO.Encoding.UTF16.mkUTF5_entry
	.size GHC.IO.Encoding.UTF16.utf16be_decode_entry, .-GHC.IO.Encoding.UTF16.utf16be_decode_entry


==================== Asm code ====================
2018-03-16 16:03:49.237942903 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be_decode_info
.type GHC.IO.Encoding.UTF16.utf16be_decode_info, @object
GHC.IO.Encoding.UTF16.utf16be_decode_info:
	.quad	GHC.IO.Encoding.UTF16.utf16be_decode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:49.239610809 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16be3_bytes
.type GHC.IO.Encoding.UTF16.mkUTF16be3_bytes, @object
GHC.IO.Encoding.UTF16.mkUTF16be3_bytes:
	.asciz "UTF-16BE"


==================== Asm code ====================
2018-03-16 16:03:49.242335684 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16be2_closure
.type GHC.IO.Encoding.UTF16.mkUTF16be2_closure, @object
GHC.IO.Encoding.UTF16.mkUTF16be2_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:49.243297633 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF16be2_entry
.type GHC.IO.Encoding.UTF16.mkUTF16be2_entry, @object
GHC.IO.Encoding.UTF16.mkUTF16be2_entry:
_c8Ih8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Ih9
_c8Iha:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8Ih7
_c8Ih6:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Encoding.UTF16.mkUTF16be3_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8Ih9:
	jmp *-16(%r13)
_c8Ih7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF16.mkUTF16be2_entry, .-GHC.IO.Encoding.UTF16.mkUTF16be2_entry


==================== Asm code ====================
2018-03-16 16:03:49.244035554 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16be2_info
.type GHC.IO.Encoding.UTF16.mkUTF16be2_info, @object
GHC.IO.Encoding.UTF16.mkUTF16be2_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:49.25087532 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16be_closure
.type GHC.IO.Encoding.UTF16.mkUTF16be_closure, @object
GHC.IO.Encoding.UTF16.mkUTF16be_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:49.251619547 UTC

.section .text
.align 8
sat_s8GdS_entry:
_c8Ihw:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverEncode1_entry
	.size sat_s8GdS_entry, .-sat_s8GdS_entry


==================== Asm code ====================
2018-03-16 16:03:49.25223824 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8GdS_info:
	.quad	sat_s8GdS_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8GEr_srt


==================== Asm code ====================
2018-03-16 16:03:49.253042439 UTC

.section .text
.align 8
sat_s8GdU_entry:
_c8IhA:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8IhE
_c8IhD:
	movq 7(%rbx),%rax
	movq $sat_s8GdS_info,-56(%r12)
	movq %rax,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	movq $GHC.IO.Encoding.UTF16.mkUTF1_closure+3,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.UTF16.mkUTF2_closure+1,-16(%r12)
	movq $GHC.IO.Encoding.UTF16.mkUTF2_closure+1,-8(%r12)
	movq $GHC.IO.Encoding.UTF16.mkUTF16be1_closure+2,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8IhE:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8GdU_entry, .-sat_s8GdU_entry


==================== Asm code ====================
2018-03-16 16:03:49.254162163 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8GdU_info:
	.quad	sat_s8GdU_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8GEr_srt


==================== Asm code ====================
2018-03-16 16:03:49.254826963 UTC

.section .text
.align 8
sat_s8GdO_entry:
_c8IhP:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverDecode1_entry
	.size sat_s8GdO_entry, .-sat_s8GdO_entry


==================== Asm code ====================
2018-03-16 16:03:49.255445142 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8GdO_info:
	.quad	sat_s8GdO_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8GEr_srt+8


==================== Asm code ====================
2018-03-16 16:03:49.256276517 UTC

.section .text
.align 8
sat_s8GdQ_entry:
_c8IhT:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8IhX
_c8IhW:
	movq 7(%rbx),%rax
	movq $sat_s8GdO_info,-56(%r12)
	movq %rax,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	movq $GHC.IO.Encoding.UTF16.mkUTF5_closure+3,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.UTF16.mkUTF2_closure+1,-16(%r12)
	movq $GHC.IO.Encoding.UTF16.mkUTF2_closure+1,-8(%r12)
	movq $GHC.IO.Encoding.UTF16.mkUTF16be1_closure+2,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8IhX:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8GdQ_entry, .-sat_s8GdQ_entry


==================== Asm code ====================
2018-03-16 16:03:49.257014483 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8GdQ_info:
	.quad	sat_s8GdQ_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8GEr_srt+8


==================== Asm code ====================
2018-03-16 16:03:49.257830656 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF16be_entry
.type GHC.IO.Encoding.UTF16.mkUTF16be_entry, @object
GHC.IO.Encoding.UTF16.mkUTF16be_entry:
_c8IhZ:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8Ii3
_c8Ii2:
	movq $sat_s8GdU_info,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s8GdQ_info,-40(%r12)
	movq %r14,-32(%r12)
	movq $GHC.IO.Encoding.Types.TextEncoding_con_info,-24(%r12)
	movq $GHC.IO.Encoding.UTF16.mkUTF16be2_closure,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8Ii3:
	movq $64,904(%r13)
	movl $GHC.IO.Encoding.UTF16.mkUTF16be_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.mkUTF16be_entry, .-GHC.IO.Encoding.UTF16.mkUTF16be_entry


==================== Asm code ====================
2018-03-16 16:03:49.258564253 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16be_info
.type GHC.IO.Encoding.UTF16.mkUTF16be_info, @object
GHC.IO.Encoding.UTF16.mkUTF16be_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be_entry
	.quad	0
	.quad	13207024435214
	.quad	4294967301
	.quad	S8GEr_srt


==================== Asm code ====================
2018-03-16 16:03:49.26130161 UTC

.section .data
.align 8
.align 1
lvl3_r8G1E_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.UTF16.mkUTF5_closure+3
	.quad	lvl_r8G1B_closure+3
	.quad	GHC.IO.Encoding.UTF16.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF16.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:49.263684404 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be3_closure
.type GHC.IO.Encoding.UTF16.utf16be3_closure, @object
GHC.IO.Encoding.UTF16.utf16be3_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16be3_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:49.264356786 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16be3_entry
.type GHC.IO.Encoding.UTF16.utf16be3_entry, @object
GHC.IO.Encoding.UTF16.utf16be3_entry:
_c8Iiw:
	movl $lvl3_r8G1E_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF16.utf16be3_entry, .-GHC.IO.Encoding.UTF16.utf16be3_entry


==================== Asm code ====================
2018-03-16 16:03:49.265006852 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be3_info
.type GHC.IO.Encoding.UTF16.utf16be3_info, @object
GHC.IO.Encoding.UTF16.utf16be3_info:
	.quad	GHC.IO.Encoding.UTF16.utf16be3_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8GEr_srt+96


==================== Asm code ====================
2018-03-16 16:03:49.266916315 UTC

.section .data
.align 8
.align 1
lvl4_r8G1F_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.UTF16.mkUTF1_closure+3
	.quad	GHC.IO.Encoding.UTF16.utf16be2_closure+3
	.quad	GHC.IO.Encoding.UTF16.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF16.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:49.268942434 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be1_closure
.type GHC.IO.Encoding.UTF16.utf16be1_closure, @object
GHC.IO.Encoding.UTF16.utf16be1_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16be1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:49.269648045 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16be1_entry
.type GHC.IO.Encoding.UTF16.utf16be1_entry, @object
GHC.IO.Encoding.UTF16.utf16be1_entry:
_c8IiJ:
	movl $lvl4_r8G1F_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF16.utf16be1_entry, .-GHC.IO.Encoding.UTF16.utf16be1_entry


==================== Asm code ====================
2018-03-16 16:03:49.270247731 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be1_info
.type GHC.IO.Encoding.UTF16.utf16be1_info, @object
GHC.IO.Encoding.UTF16.utf16be1_info:
	.quad	GHC.IO.Encoding.UTF16.utf16be1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8GEr_srt+104


==================== Asm code ====================
2018-03-16 16:03:49.272066826 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be_closure
.type GHC.IO.Encoding.UTF16.utf16be_closure, @object
GHC.IO.Encoding.UTF16.utf16be_closure:
	.quad	GHC.IO.Encoding.Types.TextEncoding_con_info
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be2_closure
	.quad	GHC.IO.Encoding.UTF16.utf16be3_closure+1
	.quad	GHC.IO.Encoding.UTF16.utf16be1_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:49.274565617 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF6_closure
.type GHC.IO.Encoding.UTF16.mkUTF6_closure, @object
GHC.IO.Encoding.UTF16.mkUTF6_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.IO.Encoding.UTF16.mkUTF5_closure+3
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:49.276396076 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF4_closure
.type GHC.IO.Encoding.UTF16.mkUTF4_closure, @object
GHC.IO.Encoding.UTF16.mkUTF4_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.IO.Encoding.UTF16.mkUTF3_closure+3
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:49.284886313 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.$wutf16_decode_closure
.type GHC.IO.Encoding.UTF16.$wutf16_decode_closure, @object
GHC.IO.Encoding.UTF16.$wutf16_decode_closure:
	.quad	GHC.IO.Encoding.UTF16.$wutf16_decode_info


==================== Asm code ====================
2018-03-16 16:03:49.286066673 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.$wutf16_decode_slow
.type GHC.IO.Encoding.UTF16.$wutf16_decode_slow, @object
GHC.IO.Encoding.UTF16.$wutf16_decode_slow:
_c8IiV:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Encoding.UTF16.$wutf16_decode_entry
	.size GHC.IO.Encoding.UTF16.$wutf16_decode_slow, .-GHC.IO.Encoding.UTF16.$wutf16_decode_slow


==================== Asm code ====================
2018-03-16 16:03:49.28689649 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.$wutf16_decode_entry
.type GHC.IO.Encoding.UTF16.$wutf16_decode_entry, @object
GHC.IO.Encoding.UTF16.$wutf16_decode_entry:
_c8Ij6:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Ij7
_c8Ij8:
	movq $block_c8IiZ_info,-48(%rbp)
	movq 8(%r14),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _c8IiZ
_c8Ij0:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Ij7:
	movl $GHC.IO.Encoding.UTF16.$wutf16_decode_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.$wutf16_decode_entry, .-GHC.IO.Encoding.UTF16.$wutf16_decode_entry


==================== Asm code ====================
2018-03-16 16:03:49.287617668 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.$wutf16_decode_info
.type GHC.IO.Encoding.UTF16.$wutf16_decode_info, @object
GHC.IO.Encoding.UTF16.$wutf16_decode_info:
	.quad	GHC.IO.Encoding.UTF16.$wutf16_decode_entry
	.quad	0
	.quad	14
	.quad	38654705664
	.quad	0
	.quad	7304
	.quad	GHC.IO.Encoding.UTF16.$wutf16_decode_slow


==================== Asm code ====================
2018-03-16 16:03:49.288982667 UTC

.section .text
.align 8
_c8IiZ:
_c8IiZ:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 40(%rbp),%rsi
	movq 48(%rbp),%rdi
	movq 56(%rbp),%r8
	movq 64(%rbp),%r9
	movq %rbx,%r10
	andl $7,%r10d
	cmpq $1,%r10
	je _c8Ij3
_c8Ij4:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Iky
_c8Ikx:
	movq 6(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	movq %r9,%rsi
	leaq -47(%r12),%r14
	addq $72,%rbp
	jmp stg_ap_ppv_fast
_c8Iky:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_c8Ij3:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c8Ijd
_c8Ijc:
	movq %r8,%rbx
	subq %rdi,%rbx
	cmpq $2,%rbx
	jge _c8Iko
_c8Iks:
	movq $GHC.IO.Buffer.Buffer_con_info,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rax,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -79(%r12),%rax
	movq %rax,-8(%r12)
	movq %r9,(%r12)
	leaq -23(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Iko:
	movq 8(%rbp),%rbx
	movzbl (%rax,%rdi,1),%r10d
	leaq 1(%rdi),%r11
	movzbl (%rax,%r11,1),%r11d
	cmpq $254,%r10
	jne _c8Ikb
_c8Ikm:
	cmpq $255,%r11
	jne _c8Ikb
_c8Ikl:
	movq $GHC.IO.Encoding.UTF16.mkUTF6_closure+2,8(%rbx)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rbx,%rsi
	movq %rdi,%rbx
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %r10,%r14
	movq %rcx,72(%rsp)
	movq %rdx,80(%rsp)
	movq %r11,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.IO.Buffer.Buffer_con_info,-80(%r12)
	movq 64(%rsp),%rax
	movq %rax,-72(%r12)
	movq 72(%rsp),%rax
	movq %rax,-64(%r12)
	movq %r14,-56(%r12)
	movq 80(%rsp),%rax
	movq %rax,-48(%r12)
	leaq 2(%rbx),%rax
	movq %rax,-40(%r12)
	movq 88(%rsp),%rax
	movq %rax,-32(%r12)
	leaq -79(%r12),%rax
	addq $-32,%r12
	movq 96(%rsp),%rbx
	movq %rbx,%rsi
	movq %rax,%r14
	addq $72,%rbp
	jmp GHC.IO.Encoding.UTF16.mkUTF5_entry
_c8Ikb:
	addq $-88,%r12
	movq %r11,-8(%rbp)
	movq %r10,(%rbp)
	addq $-16,%rbp
	jmp _c8Ijy
_c8Ijd:
	movq $88,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8IiZ, .-_c8IiZ


==================== Asm code ====================
2018-03-16 16:03:49.290238524 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8IiZ_info:
	.quad	_c8IiZ
	.quad	7304
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.291472393 UTC

.section .text
.align 8
_c8Ijy:
_c8Ijy:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8IjC
_c8IjB:
	movq 24(%rbp),%rax
	movq 32(%rbp),%rbx
	movq 40(%rbp),%rcx
	movq 48(%rbp),%rdx
	movq 56(%rbp),%rsi
	movq 64(%rbp),%rdi
	movq 72(%rbp),%r8
	movq 80(%rbp),%r9
	cmpq $255,16(%rbp)
	je _c8Ik3
_c8IjK:
	movq $GHC.IO.Encoding.UTF16.mkUTF6_closure+2,8(%rax)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rax,%rsi
	movq %rdi,%rax
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r11,80(%rsp)
	movq %r10,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %r14,-40(%r12)
	movq 64(%rsp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 72(%rsp),%rax
	movq %rax,-16(%r12)
	movq 80(%rsp),%rax
	movq %rax,-8(%r12)
	movq 88(%rsp),%rax
	movq %rax,(%r12)
	movq 96(%rsp),%rax
	movq %rax,%rsi
	leaq -47(%r12),%r14
	addq $88,%rbp
	jmp GHC.IO.Encoding.UTF16.mkUTF5_entry
_c8Ik2:
	movq $GHC.IO.Encoding.UTF16.mkUTF4_closure+2,8(%rax)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rax,%rsi
	movq %rdi,%rax
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r11,80(%rsp)
	movq %r10,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %r14,-40(%r12)
	movq 64(%rsp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 72(%rsp),%rax
	movq %rax,-16(%r12)
	movq 80(%rsp),%rax
	addq $2,%rax
	movq %rax,-8(%r12)
	movq 88(%rsp),%rax
	movq %rax,(%r12)
	movq 96(%rsp),%rax
	movq %rax,%rsi
	leaq -47(%r12),%r14
	addq $88,%rbp
	jmp GHC.IO.Encoding.UTF16.mkUTF3_entry
_c8Ik3:
	cmpq $254,8(%rbp)
	je _c8Ik2
_c8IjT:
	movq $GHC.IO.Encoding.UTF16.mkUTF6_closure+2,8(%rax)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rax,%rsi
	movq %rdi,%rax
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r11,80(%rsp)
	movq %r10,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %r14,-40(%r12)
	movq 64(%rsp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 72(%rsp),%rax
	movq %rax,-16(%r12)
	movq 80(%rsp),%rax
	movq %rax,-8(%r12)
	movq 88(%rsp),%rax
	movq %rax,(%r12)
	movq 96(%rsp),%rax
	movq %rax,%rsi
	leaq -47(%r12),%r14
	addq $88,%rbp
	jmp GHC.IO.Encoding.UTF16.mkUTF5_entry
_c8IjC:
	movq $56,904(%r13)
	movq $block_c8Ijy_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8Ijy, .-_c8Ijy


==================== Asm code ====================
2018-03-16 16:03:49.292699357 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Ijy_info:
	.quad	_c8Ijy
	.quad	29386
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.296620062 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16_decode1_closure
.type GHC.IO.Encoding.UTF16.utf16_decode1_closure, @object
GHC.IO.Encoding.UTF16.utf16_decode1_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16_decode1_info


==================== Asm code ====================
2018-03-16 16:03:49.297473807 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16_decode1_entry
.type GHC.IO.Encoding.UTF16.utf16_decode1_entry, @object
GHC.IO.Encoding.UTF16.utf16_decode1_entry:
_c8Ila:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Ile
_c8Ilf:
	movq $block_c8Il7_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8Il7
_c8Il8:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Ile:
	movl $GHC.IO.Encoding.UTF16.utf16_decode1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.utf16_decode1_entry, .-GHC.IO.Encoding.UTF16.utf16_decode1_entry


==================== Asm code ====================
2018-03-16 16:03:49.298197419 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16_decode1_info
.type GHC.IO.Encoding.UTF16.utf16_decode1_info, @object
GHC.IO.Encoding.UTF16.utf16_decode1_info:
	.quad	GHC.IO.Encoding.UTF16.utf16_decode1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:03:49.299014221 UTC

.section .text
.align 8
_c8Il7:
_c8Il7:
	movq $block_c8Ild_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8Ild
_c8Ilh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Il7, .-_c8Il7


==================== Asm code ====================
2018-03-16 16:03:49.299912727 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Il7_info:
	.quad	_c8Il7
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.300914599 UTC

.section .text
.align 8
_c8Ild:
_c8Ild:
	movq 31(%rbx),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.IO.Encoding.UTF16.$wutf16_decode_entry
	.size _c8Ild, .-_c8Ild


==================== Asm code ====================
2018-03-16 16:03:49.302118376 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Ild_info:
	.quad	_c8Ild
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.305048723 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16_decode_closure
.type GHC.IO.Encoding.UTF16.utf16_decode_closure, @object
GHC.IO.Encoding.UTF16.utf16_decode_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16_decode_info


==================== Asm code ====================
2018-03-16 16:03:49.305710791 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16_decode_entry
.type GHC.IO.Encoding.UTF16.utf16_decode_entry, @object
GHC.IO.Encoding.UTF16.utf16_decode_entry:
_c8IlH:
	jmp GHC.IO.Encoding.UTF16.utf16_decode1_entry
	.size GHC.IO.Encoding.UTF16.utf16_decode_entry, .-GHC.IO.Encoding.UTF16.utf16_decode_entry


==================== Asm code ====================
2018-03-16 16:03:49.306366441 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16_decode_info
.type GHC.IO.Encoding.UTF16.utf16_decode_info, @object
GHC.IO.Encoding.UTF16.utf16_decode_info:
	.quad	GHC.IO.Encoding.UTF16.utf16_decode_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:03:49.308100743 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF8_bytes
.type GHC.IO.Encoding.UTF16.mkUTF8_bytes, @object
GHC.IO.Encoding.UTF16.mkUTF8_bytes:
	.asciz "UTF-16"


==================== Asm code ====================
2018-03-16 16:03:49.310869451 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF7_closure
.type GHC.IO.Encoding.UTF16.mkUTF7_closure, @object
GHC.IO.Encoding.UTF16.mkUTF7_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF7_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:49.311792685 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF7_entry
.type GHC.IO.Encoding.UTF16.mkUTF7_entry, @object
GHC.IO.Encoding.UTF16.mkUTF7_entry:
_c8IlV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8IlW
_c8IlX:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8IlU
_c8IlT:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Encoding.UTF16.mkUTF8_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8IlW:
	jmp *-16(%r13)
_c8IlU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF16.mkUTF7_entry, .-GHC.IO.Encoding.UTF16.mkUTF7_entry


==================== Asm code ====================
2018-03-16 16:03:49.312480978 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF7_info
.type GHC.IO.Encoding.UTF16.mkUTF7_info, @object
GHC.IO.Encoding.UTF16.mkUTF7_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF7_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:49.323354378 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16_closure
.type GHC.IO.Encoding.UTF16.mkUTF16_closure, @object
GHC.IO.Encoding.UTF16.mkUTF16_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:49.324152599 UTC

.section .text
.align 8
sat_s8GfD_entry:
_c8Imo:
	movq 6(%rbx),%rax
	movq %r14,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8GfD_entry, .-sat_s8GfD_entry


==================== Asm code ====================
2018-03-16 16:03:49.324831078 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8GfD_info:
	.quad	sat_s8GfD_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:49.325533524 UTC

.section .text
.align 8
sat_s8Gfz_entry:
_c8Imx:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Gfz_entry, .-sat_s8Gfz_entry


==================== Asm code ====================
2018-03-16 16:03:49.326127015 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Gfz_info:
	.quad	sat_s8Gfz_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:03:49.326760639 UTC

.section .text
.align 8
sat_s8Gfx_entry:
_c8ImF:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverEncode1_entry
	.size sat_s8Gfx_entry, .-sat_s8Gfx_entry


==================== Asm code ====================
2018-03-16 16:03:49.327394808 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Gfx_info:
	.quad	sat_s8Gfx_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8GEr_srt


==================== Asm code ====================
2018-03-16 16:03:49.328205253 UTC

.section .text
.align 8
sat_s8Gfw_entry:
_c8ImQ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ImR
_c8ImS:
	movq $block_c8ImN_info,-24(%rbp)
	movq 5(%rbx),%rax
	movq %rsi,%rbx
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8ImN
_c8ImO:
	movq (%rbx),%rax
	jmp *(%rax)
_c8ImR:
	jmp *-8(%r13)
	.size sat_s8Gfw_entry, .-sat_s8Gfw_entry


==================== Asm code ====================
2018-03-16 16:03:49.328854125 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Gfw_info:
	.quad	sat_s8Gfw_entry
	.quad	1
	.quad	9
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:49.329511118 UTC

.section .text
.align 8
_c8ImN:
_c8ImN:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,(%rbp)
	movq 39(%rbx),%rax
	movq %rax,8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,16(%rbp)
	jmp GHC.IO.Encoding.UTF16.$wutf16_encode_entry
	.size _c8ImN, .-_c8ImN


==================== Asm code ====================
2018-03-16 16:03:49.330109033 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ImN_info:
	.quad	_c8ImN
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.330840847 UTC

.section .text
.align 8
sat_s8GfF_entry:
_c8ImY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ImZ
_c8In0:
	movq $block_c8Ime_info,-16(%rbp)
	movq 7(%rbx),%rax
	movl $GHC.Types.False_closure+1,%ebx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_newMutVar#
_c8ImZ:
	jmp *-8(%r13)
	.size sat_s8GfF_entry, .-sat_s8GfF_entry


==================== Asm code ====================
2018-03-16 16:03:49.33147498 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8GfF_info:
	.quad	sat_s8GfF_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8GEr_srt


==================== Asm code ====================
2018-03-16 16:03:49.332290815 UTC

.section .text
.align 8
_c8Ime:
_c8Ime:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c8In3
_c8In2:
	movq $sat_s8GfD_info,-104(%r12)
	movq %rbx,-96(%r12)
	movq $sat_s8Gfz_info,-88(%r12)
	movq %rbx,-80(%r12)
	movq $sat_s8Gfx_info,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	movq $sat_s8Gfw_info,-56(%r12)
	movq %rbx,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	leaq -53(%r12),%rax
	movq %rax,-32(%r12)
	leaq -69(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.UTF16.mkUTF2_closure+1,-16(%r12)
	leaq -87(%r12),%rax
	movq %rax,-8(%r12)
	leaq -102(%r12),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8In3:
	movq $112,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8Ime, .-_c8Ime


==================== Asm code ====================
2018-03-16 16:03:49.333038151 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Ime_info:
	.quad	_c8Ime
	.quad	1
	.quad	4294967326
	.quad	S8GEr_srt


==================== Asm code ====================
2018-03-16 16:03:49.333949999 UTC

.section .text
.align 8
sat_s8Gff_entry:
_c8Inj:
	movq 6(%rbx),%rax
	movq %r14,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Gff_entry, .-sat_s8Gff_entry


==================== Asm code ====================
2018-03-16 16:03:49.334576276 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Gff_info:
	.quad	sat_s8Gff_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:49.335202497 UTC

.section .text
.align 8
sat_s8Gfb_entry:
_c8Ins:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Gfb_entry, .-sat_s8Gfb_entry


==================== Asm code ====================
2018-03-16 16:03:49.3358011 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Gfb_info:
	.quad	sat_s8Gfb_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:03:49.3364561 UTC

.section .text
.align 8
sat_s8Gf9_entry:
_c8InA:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverDecode1_entry
	.size sat_s8Gf9_entry, .-sat_s8Gf9_entry


==================== Asm code ====================
2018-03-16 16:03:49.337052858 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Gf9_info:
	.quad	sat_s8Gf9_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8GEr_srt+8


==================== Asm code ====================
2018-03-16 16:03:49.337838244 UTC

.section .text
.align 8
sat_s8Gf8_entry:
_c8InL:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8InM
_c8InN:
	movq $block_c8InI_info,-24(%rbp)
	movq 5(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8InI
_c8InJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c8InM:
	jmp *-8(%r13)
	.size sat_s8Gf8_entry, .-sat_s8Gf8_entry


==================== Asm code ====================
2018-03-16 16:03:49.338502492 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Gf8_info:
	.quad	sat_s8Gf8_entry
	.quad	1
	.quad	9
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:49.339216819 UTC

.section .text
.align 8
_c8InI:
_c8InI:
	movq 31(%rbx),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.IO.Encoding.UTF16.$wutf16_decode_entry
	.size _c8InI, .-_c8InI


==================== Asm code ====================
2018-03-16 16:03:49.339867466 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8InI_info:
	.quad	_c8InI
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:49.340623358 UTC

.section .text
.align 8
sat_s8Gfh_entry:
_c8InT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8InU
_c8InV:
	movq $block_c8In9_info,-16(%rbp)
	movq 7(%rbx),%rax
	movl $GHC.Base.Nothing_closure+1,%ebx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_newMutVar#
_c8InU:
	jmp *-8(%r13)
	.size sat_s8Gfh_entry, .-sat_s8Gfh_entry


==================== Asm code ====================
2018-03-16 16:03:49.341353873 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Gfh_info:
	.quad	sat_s8Gfh_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8GEr_srt+8


==================== Asm code ====================
2018-03-16 16:03:49.342224941 UTC

.section .text
.align 8
_c8In9:
_c8In9:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c8InY
_c8InX:
	movq $sat_s8Gff_info,-104(%r12)
	movq %rbx,-96(%r12)
	movq $sat_s8Gfb_info,-88(%r12)
	movq %rbx,-80(%r12)
	movq $sat_s8Gf9_info,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	movq $sat_s8Gf8_info,-56(%r12)
	movq %rbx,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	leaq -53(%r12),%rax
	movq %rax,-32(%r12)
	leaq -69(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.UTF16.mkUTF2_closure+1,-16(%r12)
	leaq -87(%r12),%rax
	movq %rax,-8(%r12)
	leaq -102(%r12),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8InY:
	movq $112,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8In9, .-_c8In9


==================== Asm code ====================
2018-03-16 16:03:49.343056918 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8In9_info:
	.quad	_c8In9
	.quad	1
	.quad	4294967326
	.quad	S8GEr_srt+8


==================== Asm code ====================
2018-03-16 16:03:49.344452455 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF16_entry
.type GHC.IO.Encoding.UTF16.mkUTF16_entry, @object
GHC.IO.Encoding.UTF16.mkUTF16_entry:
_c8Io0:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8Io4
_c8Io3:
	movq $sat_s8GfF_info,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s8Gfh_info,-40(%r12)
	movq %r14,-32(%r12)
	movq $GHC.IO.Encoding.Types.TextEncoding_con_info,-24(%r12)
	movq $GHC.IO.Encoding.UTF16.mkUTF7_closure,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8Io4:
	movq $64,904(%r13)
	movl $GHC.IO.Encoding.UTF16.mkUTF16_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.mkUTF16_entry, .-GHC.IO.Encoding.UTF16.mkUTF16_entry


==================== Asm code ====================
2018-03-16 16:03:49.345167467 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16_info
.type GHC.IO.Encoding.UTF16.mkUTF16_info, @object
GHC.IO.Encoding.UTF16.mkUTF16_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16_entry
	.quad	0
	.quad	211119117434894
	.quad	4294967301
	.quad	S8GEr_srt


==================== Asm code ====================
2018-03-16 16:03:49.348367264 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16_closure
.type GHC.IO.Encoding.UTF16.utf16_closure, @object
GHC.IO.Encoding.UTF16.utf16_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:49.349192209 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16_entry
.type GHC.IO.Encoding.UTF16.utf16_entry, @object
GHC.IO.Encoding.UTF16.utf16_entry:
_c8Ipt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Ipu
_c8Ipv:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8Ips
_c8Ipr:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Encoding.Failure.ErrorOnCodingFailure_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.IO.Encoding.UTF16.mkUTF16_entry
_c8Ipu:
	jmp *-16(%r13)
_c8Ips:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF16.utf16_entry, .-GHC.IO.Encoding.UTF16.utf16_entry


==================== Asm code ====================
2018-03-16 16:03:49.349941369 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16_info
.type GHC.IO.Encoding.UTF16.utf16_info, @object
GHC.IO.Encoding.UTF16.utf16_info:
	.quad	GHC.IO.Encoding.UTF16.utf16_entry
	.quad	0
	.quad	4294967317
	.quad	S8GEr_srt+112


==================== Asm code ====================
2018-03-16 16:03:49.351895861 UTC

.section .data.rel.ro
.align 8
.align 1
S8GEr_srt:
	.quad	GHC.IO.Encoding.Failure.recoverEncode1_closure
	.quad	GHC.IO.Encoding.Failure.recoverDecode1_closure
	.quad	GHC.IO.Encoding.UTF16.mkUTF16le_closure
	.quad	GHC.IO.Encoding.UTF16.mkUTF16le2_closure
	.quad	GHC.IO.Encoding.Failure.recoverDecode2_closure
	.quad	lvl_r8G1B_closure
	.quad	lvl1_r8G1C_closure
	.quad	GHC.IO.Encoding.Failure.recoverEncode2_closure
	.quad	GHC.IO.Encoding.UTF16.utf16be2_closure
	.quad	lvl2_r8G1D_closure
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be_closure
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be2_closure
	.quad	lvl3_r8G1E_closure
	.quad	lvl4_r8G1F_closure
	.quad	GHC.IO.Encoding.UTF16.mkUTF16_closure
	.quad	GHC.IO.Encoding.UTF16.mkUTF7_closure


==================== Asm code ====================
2018-03-16 16:03:53.624838774 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF1_closure
.type GHC.IO.Encoding.UTF16.mkUTF1_closure, @object
GHC.IO.Encoding.UTF16.mkUTF1_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF1_info


==================== Asm code ====================
2018-03-16 16:03:53.62589591 UTC

.section .text
.align 8
sat_s8Iq1_entry:
_c8IE7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8IE8
_c8IE9:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8IEb
_c8IEa:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8IE6
_c8IE5:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IEb:
	movq $56,904(%r13)
_c8IE8:
	jmp *-16(%r13)
_c8IE6:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Iq1_entry, .-sat_s8Iq1_entry


==================== Asm code ====================
2018-03-16 16:03:53.626731941 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Iq1_info:
	.quad	sat_s8Iq1_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.627651607 UTC

.section .text
.align 8
sat_s8Iq9_entry:
_c8IEt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8IEu
_c8IEv:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8IEx
_c8IEw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8IEs
_c8IEr:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IEx:
	movq $56,904(%r13)
_c8IEu:
	jmp *-16(%r13)
_c8IEs:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Iq9_entry, .-sat_s8Iq9_entry


==================== Asm code ====================
2018-03-16 16:03:53.628487548 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Iq9_info:
	.quad	sat_s8Iq9_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.62946354 UTC

.section .text
.align 8
sat_s8Iqh_entry:
_c8IEP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8IEQ
_c8IER:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8IET
_c8IES:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8IEO
_c8IEN:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IET:
	movq $56,904(%r13)
_c8IEQ:
	jmp *-16(%r13)
_c8IEO:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Iqh_entry, .-sat_s8Iqh_entry


==================== Asm code ====================
2018-03-16 16:03:53.630314817 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Iqh_info:
	.quad	sat_s8Iqh_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.631286252 UTC

.section .text
.align 8
sat_s8Iqp_entry:
_c8IFb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8IFc
_c8IFd:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8IFf
_c8IFe:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8IFa
_c8IF9:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IFf:
	movq $56,904(%r13)
_c8IFc:
	jmp *-16(%r13)
_c8IFa:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Iqp_entry, .-sat_s8Iqp_entry


==================== Asm code ====================
2018-03-16 16:03:53.632112846 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Iqp_info:
	.quad	sat_s8Iqp_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.633127857 UTC

.section .text
.align 8
sat_s8Iqx_entry:
_c8IFx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8IFy
_c8IFz:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8IFB
_c8IFA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8IFw
_c8IFv:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IFB:
	movq $56,904(%r13)
_c8IFy:
	jmp *-16(%r13)
_c8IFw:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Iqx_entry, .-sat_s8Iqx_entry


==================== Asm code ====================
2018-03-16 16:03:53.634030533 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Iqx_info:
	.quad	sat_s8Iqx_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.635985167 UTC

.section .text
.align 8
sat_s8IqF_entry:
_c8IFT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8IFU
_c8IFV:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8IFX
_c8IFW:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8IFS
_c8IFR:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IFX:
	movq $56,904(%r13)
_c8IFU:
	jmp *-16(%r13)
_c8IFS:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8IqF_entry, .-sat_s8IqF_entry


==================== Asm code ====================
2018-03-16 16:03:53.636759349 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IqF_info:
	.quad	sat_s8IqF_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.637642344 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF1_entry
.type GHC.IO.Encoding.UTF16.mkUTF1_entry, @object
GHC.IO.Encoding.UTF16.mkUTF1_entry:
_c8IG0:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8IG1
_c8IG2:
	leaq block_c8IDH_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8IDH
_c8IDI:
	movq (%rbx),%rax
	jmp *(%rax)
_c8IG1:
	leaq GHC.IO.Encoding.UTF16.mkUTF1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.mkUTF1_entry, .-GHC.IO.Encoding.UTF16.mkUTF1_entry


==================== Asm code ====================
2018-03-16 16:03:53.638290915 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF1_info
.type GHC.IO.Encoding.UTF16.mkUTF1_info, @object
GHC.IO.Encoding.UTF16.mkUTF1_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:53.639033547 UTC

.section .text
.align 8
_c8IDH:
_c8IDH:
	leaq block_c8IDM_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8IDM
_c8IDN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8IDH, .-_c8IDH


==================== Asm code ====================
2018-03-16 16:03:53.63971179 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8IDH_info:
	.quad	_c8IDH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.641722909 UTC

.section .text
.align 8
_c8IDM:
_c8IDM:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8IG6
_c8IG5:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8IGx:
	cmpq %r9,%r11
	jl _c8IHI
_c8IHJ:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8IFG
_c8IGX:
	leaq -65536(%r14),%r10
	movq %r10,%r14
	sarq $18,%r14
	addq $216,%r14
	movb %r14b,(%rdx,%rbx,1)
	movq %r10,%r14
	sarq $10,%r14
	movq %r14,72(%rsp)
	leaq 1(%rbx),%r14
	movq %r8,80(%rsp)
	movq 72(%rsp),%r8
	movb %r8b,(%rdx,%r14,1)
	andl $1023,%r10d
	movq %r10,%r8
	sarq $8,%r8
	addq $220,%r8
	leaq 2(%rbx),%r14
	movb %r8b,(%rdx,%r14,1)
	leaq 3(%rbx),%r8
	movb %r10b,(%rdx,%r8,1)
	addq $4,%rbx
	incq %r11
_n8IMC:
	movq 80(%rsp),%r8
	movq 64(%rsp),%r10
	jmp _c8IGx
_c8IH8:
	movq %r10,64(%rsp)
	movq %r14,%r10
	sarq $8,%r10
	movb %r10b,(%rdx,%rbx,1)
	leaq 1(%rbx),%r10
	movb %r14b,(%rdx,%r10,1)
	addq $2,%rbx
	incq %r11
_n8IMD:
	movq 64(%rsp),%r10
	jmp _c8IGx
_c8IHe:
	movq %r10,64(%rsp)
	movq %r14,%r10
	sarq $8,%r10
	movb %r10b,(%rdx,%rbx,1)
	leaq 1(%rbx),%r10
	movb %r14b,(%rdx,%r10,1)
	addq $2,%rbx
	incq %r11
_n8IME:
	movq 64(%rsp),%r10
	jmp _c8IGx
_c8IHq:
	movq %r10,64(%rsp)
	movq %r14,%r10
	sarq $8,%r10
	movb %r10b,(%rdx,%rbx,1)
	leaq 1(%rbx),%r10
	movb %r14b,(%rdx,%r10,1)
	addq $2,%rbx
	incq %r11
_n8IMF:
	movq 64(%rsp),%r10
	jmp _c8IGx
_c8IHw:
	movq %r10,64(%rsp)
	movq %r14,%r10
	sarq $8,%r10
	movb %r10b,(%rdx,%rbx,1)
	leaq 1(%rbx),%r10
	movb %r14b,(%rdx,%r10,1)
	addq $2,%rbx
	incq %r11
_n8IMG:
	movq 64(%rsp),%r10
	jmp _c8IGx
_c8IHI:
	movq %rsi,%r14
	subq %rbx,%r14
	cmpq $2,%r14
	jge _c8IHF
_c8IHG:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8IFk
_c8IHF:
	movl (%r8,%r11,4),%r14d
	cmpq $65536,%r14
	jge _c8IH0
_c8IHD:
	cmpq $55296,%r14
	jl _c8IHi
_c8IHC:
	cmpq $56319,%r14
	jg _c8IHA
_c8IHB:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8IEY
_c8IHA:
	cmpq $56320,%r14
	jl _c8IHq
_c8IHy:
	cmpq $57343,%r14
	jg _c8IHw
_c8IHx:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8IEC
_c8IHi:
	cmpq $56320,%r14
	jl _c8IH8
_c8IHg:
	cmpq $57343,%r14
	jg _c8IHe
_c8IHf:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8IEg
_c8IH0:
	movq %r10,64(%rsp)
	movq %rsi,%r10
	subq %rbx,%r10
	cmpq $4,%r10
	jge _c8IGX
_c8IGY:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8IDU
_c8IG6:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8IDM, .-_c8IDM


==================== Asm code ====================
2018-03-16 16:03:53.64324814 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8IDM_info:
	.quad	_c8IDM
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.644116174 UTC

.section .text
.align 8
_c8IDU:
_c8IDU:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8IGa
_c8IG9:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8Iq1_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IGa:
	movq $160,904(%r13)
	leaq block_c8IDU_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8IDU, .-_c8IDU


==================== Asm code ====================
2018-03-16 16:03:53.644973889 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8IDU_info:
	.quad	_c8IDU
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.646071631 UTC

.section .text
.align 8
_c8IEg:
_c8IEg:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8IGe
_c8IGd:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8Iq9_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IGe:
	movq $160,904(%r13)
	leaq block_c8IEg_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8IEg, .-_c8IEg


==================== Asm code ====================
2018-03-16 16:03:53.646961623 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8IEg_info:
	.quad	_c8IEg
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.64782475 UTC

.section .text
.align 8
_c8IEC:
_c8IEC:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8IGi
_c8IGh:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8Iqh_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IGi:
	movq $160,904(%r13)
	leaq block_c8IEC_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8IEC, .-_c8IEC


==================== Asm code ====================
2018-03-16 16:03:53.648652342 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8IEC_info:
	.quad	_c8IEC
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.64954874 UTC

.section .text
.align 8
_c8IEY:
_c8IEY:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8IGm
_c8IGl:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8Iqp_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IGm:
	movq $160,904(%r13)
	leaq block_c8IEY_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8IEY, .-_c8IEY


==================== Asm code ====================
2018-03-16 16:03:53.650408441 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8IEY_info:
	.quad	_c8IEY
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.651266845 UTC

.section .text
.align 8
_c8IFk:
_c8IFk:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8IGq
_c8IGp:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8Iqx_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IGq:
	movq $160,904(%r13)
	leaq block_c8IFk_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8IFk, .-_c8IFk


==================== Asm code ====================
2018-03-16 16:03:53.652111231 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8IFk_info:
	.quad	_c8IFk
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.65300711 UTC

.section .text
.align 8
_c8IFG:
_c8IFG:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8IGu
_c8IGt:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8IqF_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IGu:
	movq $160,904(%r13)
	leaq block_c8IFG_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8IFG, .-_c8IFG


==================== Asm code ====================
2018-03-16 16:03:53.654074152 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8IFG_info:
	.quad	_c8IFG
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.656362919 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be_encode_closure
.type GHC.IO.Encoding.UTF16.utf16be_encode_closure, @object
GHC.IO.Encoding.UTF16.utf16be_encode_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16be_encode_info


==================== Asm code ====================
2018-03-16 16:03:53.657000629 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16be_encode_entry
.type GHC.IO.Encoding.UTF16.utf16be_encode_entry, @object
GHC.IO.Encoding.UTF16.utf16be_encode_entry:
_c8IPc:
	jmp GHC.IO.Encoding.UTF16.mkUTF1_entry
	.size GHC.IO.Encoding.UTF16.utf16be_encode_entry, .-GHC.IO.Encoding.UTF16.utf16be_encode_entry


==================== Asm code ====================
2018-03-16 16:03:53.657677732 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be_encode_info
.type GHC.IO.Encoding.UTF16.utf16be_encode_info, @object
GHC.IO.Encoding.UTF16.utf16be_encode_info:
	.quad	GHC.IO.Encoding.UTF16.utf16be_encode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:53.681502561 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16le1_closure
.type GHC.IO.Encoding.UTF16.mkUTF16le1_closure, @object
GHC.IO.Encoding.UTF16.mkUTF16le1_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16le1_info


==================== Asm code ====================
2018-03-16 16:03:53.682528299 UTC

.section .text
.align 8
sat_s8IsQ_entry:
_c8IPN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8IPO
_c8IPP:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8IPR
_c8IPQ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8IPM
_c8IPL:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IPR:
	movq $56,904(%r13)
_c8IPO:
	jmp *-16(%r13)
_c8IPM:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8IsQ_entry, .-sat_s8IsQ_entry


==================== Asm code ====================
2018-03-16 16:03:53.683340338 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IsQ_info:
	.quad	sat_s8IsQ_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.684230456 UTC

.section .text
.align 8
sat_s8IsY_entry:
_c8IQ9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8IQa
_c8IQb:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8IQd
_c8IQc:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8IQ8
_c8IQ7:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IQd:
	movq $56,904(%r13)
_c8IQa:
	jmp *-16(%r13)
_c8IQ8:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8IsY_entry, .-sat_s8IsY_entry


==================== Asm code ====================
2018-03-16 16:03:53.684998375 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IsY_info:
	.quad	sat_s8IsY_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.68585657 UTC

.section .text
.align 8
sat_s8It6_entry:
_c8IQv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8IQw
_c8IQx:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8IQz
_c8IQy:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8IQu
_c8IQt:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IQz:
	movq $56,904(%r13)
_c8IQw:
	jmp *-16(%r13)
_c8IQu:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8It6_entry, .-sat_s8It6_entry


==================== Asm code ====================
2018-03-16 16:03:53.686640818 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8It6_info:
	.quad	sat_s8It6_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.687538139 UTC

.section .text
.align 8
sat_s8Ite_entry:
_c8IQR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8IQS
_c8IQT:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8IQV
_c8IQU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8IQQ
_c8IQP:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IQV:
	movq $56,904(%r13)
_c8IQS:
	jmp *-16(%r13)
_c8IQQ:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Ite_entry, .-sat_s8Ite_entry


==================== Asm code ====================
2018-03-16 16:03:53.688355531 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Ite_info:
	.quad	sat_s8Ite_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.689215757 UTC

.section .text
.align 8
sat_s8Itm_entry:
_c8IRd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8IRe
_c8IRf:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8IRh
_c8IRg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8IRc
_c8IRb:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IRh:
	movq $56,904(%r13)
_c8IRe:
	jmp *-16(%r13)
_c8IRc:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Itm_entry, .-sat_s8Itm_entry


==================== Asm code ====================
2018-03-16 16:03:53.690039198 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Itm_info:
	.quad	sat_s8Itm_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.690950368 UTC

.section .text
.align 8
sat_s8Itu_entry:
_c8IRz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8IRA
_c8IRB:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8IRD
_c8IRC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8IRy
_c8IRx:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IRD:
	movq $56,904(%r13)
_c8IRA:
	jmp *-16(%r13)
_c8IRy:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Itu_entry, .-sat_s8Itu_entry


==================== Asm code ====================
2018-03-16 16:03:53.691719548 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Itu_info:
	.quad	sat_s8Itu_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.692489456 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF16le1_entry
.type GHC.IO.Encoding.UTF16.mkUTF16le1_entry, @object
GHC.IO.Encoding.UTF16.mkUTF16le1_entry:
_c8IRG:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8IRH
_c8IRI:
	leaq block_c8IPn_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8IPn
_c8IPo:
	movq (%rbx),%rax
	jmp *(%rax)
_c8IRH:
	leaq GHC.IO.Encoding.UTF16.mkUTF16le1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.mkUTF16le1_entry, .-GHC.IO.Encoding.UTF16.mkUTF16le1_entry


==================== Asm code ====================
2018-03-16 16:03:53.693184657 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16le1_info
.type GHC.IO.Encoding.UTF16.mkUTF16le1_info, @object
GHC.IO.Encoding.UTF16.mkUTF16le1_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16le1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:53.694794584 UTC

.section .text
.align 8
_c8IPn:
_c8IPn:
	leaq block_c8IPs_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8IPs
_c8IPt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8IPn, .-_c8IPn


==================== Asm code ====================
2018-03-16 16:03:53.695472297 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8IPn_info:
	.quad	_c8IPn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.697489466 UTC

.section .text
.align 8
_c8IPs:
_c8IPs:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8IRM
_c8IRL:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8ISd:
	cmpq %r9,%r11
	jl _c8ITo
_c8ITp:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8IRm
_c8ISD:
	leaq -65536(%r14),%r10
	movq %r10,%r14
	sarq $10,%r14
	movb %r14b,(%rdx,%rbx,1)
	movq %r10,%r14
	sarq $18,%r14
	addq $216,%r14
	movq %r14,72(%rsp)
	leaq 1(%rbx),%r14
	movq %r8,80(%rsp)
	movq 72(%rsp),%r8
	movb %r8b,(%rdx,%r14,1)
	andl $1023,%r10d
	movq %r10,%r8
	leaq 2(%rbx),%r14
	movb %r8b,(%rdx,%r14,1)
	sarq $8,%r10
	leaq 220(%r10),%r8
	leaq 3(%rbx),%r10
	movb %r8b,(%rdx,%r10,1)
	addq $4,%rbx
	incq %r11
_n8IYi:
	movq 80(%rsp),%r8
	movq 64(%rsp),%r10
	jmp _c8ISd
_c8ISO:
	movq %r10,64(%rsp)
	movq %r14,%r10
	movb %r10b,(%rdx,%rbx,1)
	sarq $8,%r14
	leaq 1(%rbx),%r10
	movb %r14b,(%rdx,%r10,1)
	addq $2,%rbx
	incq %r11
_n8IYj:
	movq 64(%rsp),%r10
	jmp _c8ISd
_c8ISU:
	movq %r10,64(%rsp)
	movq %r14,%r10
	movb %r10b,(%rdx,%rbx,1)
	sarq $8,%r14
	leaq 1(%rbx),%r10
	movb %r14b,(%rdx,%r10,1)
	addq $2,%rbx
	incq %r11
_n8IYk:
	movq 64(%rsp),%r10
	jmp _c8ISd
_c8IT6:
	movq %r10,64(%rsp)
	movq %r14,%r10
	movb %r10b,(%rdx,%rbx,1)
	sarq $8,%r14
	leaq 1(%rbx),%r10
	movb %r14b,(%rdx,%r10,1)
	addq $2,%rbx
	incq %r11
_n8IYl:
	movq 64(%rsp),%r10
	jmp _c8ISd
_c8ITc:
	movq %r10,64(%rsp)
	movq %r14,%r10
	movb %r10b,(%rdx,%rbx,1)
	sarq $8,%r14
	leaq 1(%rbx),%r10
	movb %r14b,(%rdx,%r10,1)
	addq $2,%rbx
	incq %r11
_n8IYm:
	movq 64(%rsp),%r10
	jmp _c8ISd
_c8ITo:
	movq %rsi,%r14
	subq %rbx,%r14
	cmpq $2,%r14
	jge _c8ITl
_c8ITm:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8IR0
_c8ITl:
	movl (%r8,%r11,4),%r14d
	cmpq $65536,%r14
	jge _c8ISG
_c8ITj:
	cmpq $55296,%r14
	jl _c8ISY
_c8ITi:
	cmpq $56319,%r14
	jg _c8ITg
_c8ITh:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8IQE
_c8ITg:
	cmpq $56320,%r14
	jl _c8IT6
_c8ITe:
	cmpq $57343,%r14
	jg _c8ITc
_c8ITd:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8IQi
_c8ISY:
	cmpq $56320,%r14
	jl _c8ISO
_c8ISW:
	cmpq $57343,%r14
	jg _c8ISU
_c8ISV:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8IPW
_c8ISG:
	movq %r10,64(%rsp)
	movq %rsi,%r10
	subq %rbx,%r10
	cmpq $4,%r10
	jge _c8ISD
_c8ISE:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8IPA
_c8IRM:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8IPs, .-_c8IPs


==================== Asm code ====================
2018-03-16 16:03:53.699015002 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8IPs_info:
	.quad	_c8IPs
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.699923249 UTC

.section .text
.align 8
_c8IPA:
_c8IPA:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8IRQ
_c8IRP:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8IsQ_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IRQ:
	movq $160,904(%r13)
	leaq block_c8IPA_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8IPA, .-_c8IPA


==================== Asm code ====================
2018-03-16 16:03:53.700729505 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8IPA_info:
	.quad	_c8IPA
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.701629106 UTC

.section .text
.align 8
_c8IPW:
_c8IPW:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8IRU
_c8IRT:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8IsY_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IRU:
	movq $160,904(%r13)
	leaq block_c8IPW_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8IPW, .-_c8IPW


==================== Asm code ====================
2018-03-16 16:03:53.702477218 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8IPW_info:
	.quad	_c8IPW
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.703337126 UTC

.section .text
.align 8
_c8IQi:
_c8IQi:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8IRY
_c8IRX:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8It6_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IRY:
	movq $160,904(%r13)
	leaq block_c8IQi_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8IQi, .-_c8IQi


==================== Asm code ====================
2018-03-16 16:03:53.704180441 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8IQi_info:
	.quad	_c8IQi
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.705061532 UTC

.section .text
.align 8
_c8IQE:
_c8IQE:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8IS2
_c8IS1:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8Ite_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IS2:
	movq $160,904(%r13)
	leaq block_c8IQE_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8IQE, .-_c8IQE


==================== Asm code ====================
2018-03-16 16:03:53.706315461 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8IQE_info:
	.quad	_c8IQE
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.707160133 UTC

.section .text
.align 8
_c8IR0:
_c8IR0:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8IS6
_c8IS5:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8Itm_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8IS6:
	movq $160,904(%r13)
	leaq block_c8IR0_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8IR0, .-_c8IR0


==================== Asm code ====================
2018-03-16 16:03:53.708006883 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8IR0_info:
	.quad	_c8IR0
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.708877115 UTC

.section .text
.align 8
_c8IRm:
_c8IRm:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8ISa
_c8IS9:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8Itu_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ISa:
	movq $160,904(%r13)
	leaq block_c8IRm_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8IRm, .-_c8IRm


==================== Asm code ====================
2018-03-16 16:03:53.709768455 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8IRm_info:
	.quad	_c8IRm
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.712032619 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16le_encode_closure
.type GHC.IO.Encoding.UTF16.utf16le_encode_closure, @object
GHC.IO.Encoding.UTF16.utf16le_encode_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16le_encode_info


==================== Asm code ====================
2018-03-16 16:03:53.712700704 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16le_encode_entry
.type GHC.IO.Encoding.UTF16.utf16le_encode_entry, @object
GHC.IO.Encoding.UTF16.utf16le_encode_entry:
_c8J0S:
	jmp GHC.IO.Encoding.UTF16.mkUTF16le1_entry
	.size GHC.IO.Encoding.UTF16.utf16le_encode_entry, .-GHC.IO.Encoding.UTF16.utf16le_encode_entry


==================== Asm code ====================
2018-03-16 16:03:53.713559491 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16le_encode_info
.type GHC.IO.Encoding.UTF16.utf16le_encode_info, @object
GHC.IO.Encoding.UTF16.utf16le_encode_info:
	.quad	GHC.IO.Encoding.UTF16.utf16le_encode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:53.715206056 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF16.$trModule4_bytes
.type GHC.IO.Encoding.UTF16.$trModule4_bytes, @object
GHC.IO.Encoding.UTF16.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:03:53.716931985 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.$trModule3_closure
.type GHC.IO.Encoding.UTF16.$trModule3_closure, @object
GHC.IO.Encoding.UTF16.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Encoding.UTF16.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:03:53.718637417 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF16.$trModule2_bytes
.type GHC.IO.Encoding.UTF16.$trModule2_bytes, @object
GHC.IO.Encoding.UTF16.$trModule2_bytes:
	.asciz "GHC.IO.Encoding.UTF16"


==================== Asm code ====================
2018-03-16 16:03:53.720387496 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.$trModule1_closure
.type GHC.IO.Encoding.UTF16.$trModule1_closure, @object
GHC.IO.Encoding.UTF16.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Encoding.UTF16.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:03:53.722400987 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.$trModule_closure
.type GHC.IO.Encoding.UTF16.$trModule_closure, @object
GHC.IO.Encoding.UTF16.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.IO.Encoding.UTF16.$trModule3_closure+1
	.quad	GHC.IO.Encoding.UTF16.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:53.728278762 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.$wutf16_encode_closure
.type GHC.IO.Encoding.UTF16.$wutf16_encode_closure, @object
GHC.IO.Encoding.UTF16.$wutf16_encode_closure:
	.quad	GHC.IO.Encoding.UTF16.$wutf16_encode_info


==================== Asm code ====================
2018-03-16 16:03:53.729010217 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.$wutf16_encode_slow
.type GHC.IO.Encoding.UTF16.$wutf16_encode_slow, @object
GHC.IO.Encoding.UTF16.$wutf16_encode_slow:
_c8J15:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Encoding.UTF16.$wutf16_encode_entry
	.size GHC.IO.Encoding.UTF16.$wutf16_encode_slow, .-GHC.IO.Encoding.UTF16.$wutf16_encode_slow


==================== Asm code ====================
2018-03-16 16:03:53.729946495 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.$wutf16_encode_entry
.type GHC.IO.Encoding.UTF16.$wutf16_encode_entry, @object
GHC.IO.Encoding.UTF16.$wutf16_encode_entry:
_c8J1g:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c8J1h
_c8J1i:
	leaq block_c8J19_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq 8(%r14),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _c8J19
_c8J1a:
	movq (%rbx),%rax
	jmp *(%rax)
_c8J1h:
	leaq GHC.IO.Encoding.UTF16.$wutf16_encode_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.$wutf16_encode_entry, .-GHC.IO.Encoding.UTF16.$wutf16_encode_entry


==================== Asm code ====================
2018-03-16 16:03:53.730704924 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.$wutf16_encode_info
.type GHC.IO.Encoding.UTF16.$wutf16_encode_info, @object
GHC.IO.Encoding.UTF16.$wutf16_encode_info:
	.quad	GHC.IO.Encoding.UTF16.$wutf16_encode_entry
	.quad	0
	.quad	14
	.quad	38654705664
	.quad	0
	.quad	14600
	.quad	GHC.IO.Encoding.UTF16.$wutf16_encode_slow


==================== Asm code ====================
2018-03-16 16:03:53.732030483 UTC

.section .text
.align 8
_c8J19:
_c8J19:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 40(%rbp),%rsi
	movq 48(%rbp),%rdi
	movq 56(%rbp),%r8
	movq 64(%rbp),%r9
	movq %rbx,%r10
	andl $7,%r10d
	cmpq $1,%r10
	je _c8J1d
_c8J1e:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8J1X
_c8J1W:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %r9,(%r12)
	leaq -47(%r12),%rsi
	movq %rax,%r14
	addq $72,%rbp
	jmp GHC.IO.Encoding.UTF16.mkUTF1_entry
_c8J1X:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8J1d:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c8J1n
_c8J1m:
	movq %rdi,%rbx
	subq %r9,%rbx
	cmpq $2,%rbx
	jge _c8J1N
_c8J1R:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rbx
	addq $2,%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -79(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8J1N:
	movq 8(%rbp),%rbx
	movq GHC.Types.True_closure@gotpcrel(%rip),%r10
	addq $2,%r10
	movq %r10,8(%rbx)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rbx,%rsi
	movq %rdi,%rbx
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %r10,%r14
	movq %rcx,72(%rsp)
	movq %rdx,80(%rsp)
	movq %r11,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq 96(%rsp),%rcx
	movq 64(%rsp),%rax
	movb $-2,(%rax,%rcx,1)
	leaq 1(%rcx),%rdx
	movb $-1,(%rax,%rdx,1)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-80(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-72(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-64(%r12)
	movq %rax,-56(%r12)
	movq %rbx,-48(%r12)
	movq 88(%rsp),%rax
	movq %rax,-40(%r12)
	leaq 2(%rcx),%rax
	movq %rax,-32(%r12)
	leaq -79(%r12),%rax
	addq $-32,%r12
	movq %rax,%rsi
	addq $72,%rbp
	jmp GHC.IO.Encoding.UTF16.mkUTF1_entry
_c8J1n:
	movq $88,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8J19, .-_c8J19


==================== Asm code ====================
2018-03-16 16:03:53.734062995 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8J19_info:
	.quad	_c8J19
	.quad	14600
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.737791436 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16_encode1_closure
.type GHC.IO.Encoding.UTF16.utf16_encode1_closure, @object
GHC.IO.Encoding.UTF16.utf16_encode1_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16_encode1_info


==================== Asm code ====================
2018-03-16 16:03:53.738660751 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16_encode1_entry
.type GHC.IO.Encoding.UTF16.utf16_encode1_entry, @object
GHC.IO.Encoding.UTF16.utf16_encode1_entry:
_c8J2z:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8J2D
_c8J2E:
	leaq block_c8J2w_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8J2w
_c8J2x:
	movq (%rbx),%rax
	jmp *(%rax)
_c8J2D:
	leaq GHC.IO.Encoding.UTF16.utf16_encode1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.utf16_encode1_entry, .-GHC.IO.Encoding.UTF16.utf16_encode1_entry


==================== Asm code ====================
2018-03-16 16:03:53.739371514 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16_encode1_info
.type GHC.IO.Encoding.UTF16.utf16_encode1_info, @object
GHC.IO.Encoding.UTF16.utf16_encode1_info:
	.quad	GHC.IO.Encoding.UTF16.utf16_encode1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:03:53.740071083 UTC

.section .text
.align 8
_c8J2w:
_c8J2w:
	leaq block_c8J2C_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8J2C
_c8J2G:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8J2w, .-_c8J2w


==================== Asm code ====================
2018-03-16 16:03:53.740739511 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8J2w_info:
	.quad	_c8J2w
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.741476897 UTC

.section .text
.align 8
_c8J2C:
_c8J2C:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,(%rbp)
	movq 39(%rbx),%rax
	movq %rax,8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,16(%rbp)
	jmp GHC.IO.Encoding.UTF16.$wutf16_encode_entry
	.size _c8J2C, .-_c8J2C


==================== Asm code ====================
2018-03-16 16:03:53.742117073 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8J2C_info:
	.quad	_c8J2C
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.74448577 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16_encode_closure
.type GHC.IO.Encoding.UTF16.utf16_encode_closure, @object
GHC.IO.Encoding.UTF16.utf16_encode_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16_encode_info


==================== Asm code ====================
2018-03-16 16:03:53.745131902 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16_encode_entry
.type GHC.IO.Encoding.UTF16.utf16_encode_entry, @object
GHC.IO.Encoding.UTF16.utf16_encode_entry:
_c8J39:
	jmp GHC.IO.Encoding.UTF16.utf16_encode1_entry
	.size GHC.IO.Encoding.UTF16.utf16_encode_entry, .-GHC.IO.Encoding.UTF16.utf16_encode_entry


==================== Asm code ====================
2018-03-16 16:03:53.746088319 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16_encode_info
.type GHC.IO.Encoding.UTF16.utf16_encode_info, @object
GHC.IO.Encoding.UTF16.utf16_encode_info:
	.quad	GHC.IO.Encoding.UTF16.utf16_encode_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:03:53.775067737 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF3_closure
.type GHC.IO.Encoding.UTF16.mkUTF3_closure, @object
GHC.IO.Encoding.UTF16.mkUTF3_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF3_info


==================== Asm code ====================
2018-03-16 16:03:53.776160012 UTC

.section .text
.align 8
sat_s8Iwk_entry:
_c8J3K:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8J3L
_c8J3M:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8J3O
_c8J3N:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8J3J
_c8J3I:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8J3O:
	movq $56,904(%r13)
_c8J3L:
	jmp *-16(%r13)
_c8J3J:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Iwk_entry, .-sat_s8Iwk_entry


==================== Asm code ====================
2018-03-16 16:03:53.777013675 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Iwk_info:
	.quad	sat_s8Iwk_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.777964382 UTC

.section .text
.align 8
sat_s8Iws_entry:
_c8J46:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8J47
_c8J48:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8J4a
_c8J49:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8J45
_c8J44:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8J4a:
	movq $56,904(%r13)
_c8J47:
	jmp *-16(%r13)
_c8J45:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Iws_entry, .-sat_s8Iws_entry


==================== Asm code ====================
2018-03-16 16:03:53.778804336 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Iws_info:
	.quad	sat_s8Iws_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.779672877 UTC

.section .text
.align 8
sat_s8IwA_entry:
_c8J4s:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8J4t
_c8J4u:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8J4w
_c8J4v:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8J4r
_c8J4q:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8J4w:
	movq $56,904(%r13)
_c8J4t:
	jmp *-16(%r13)
_c8J4r:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8IwA_entry, .-sat_s8IwA_entry


==================== Asm code ====================
2018-03-16 16:03:53.780503955 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IwA_info:
	.quad	sat_s8IwA_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.781483504 UTC

.section .text
.align 8
sat_s8IwI_entry:
_c8J4O:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8J4P
_c8J4Q:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8J4S
_c8J4R:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8J4N
_c8J4M:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8J4S:
	movq $56,904(%r13)
_c8J4P:
	jmp *-16(%r13)
_c8J4N:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8IwI_entry, .-sat_s8IwI_entry


==================== Asm code ====================
2018-03-16 16:03:53.782299872 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IwI_info:
	.quad	sat_s8IwI_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.783197599 UTC

.section .text
.align 8
sat_s8IwQ_entry:
_c8J5a:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8J5b
_c8J5c:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8J5e
_c8J5d:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8J59
_c8J58:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8J5e:
	movq $56,904(%r13)
_c8J5b:
	jmp *-16(%r13)
_c8J59:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8IwQ_entry, .-sat_s8IwQ_entry


==================== Asm code ====================
2018-03-16 16:03:53.784077074 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IwQ_info:
	.quad	sat_s8IwQ_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.785000819 UTC

.section .text
.align 8
sat_s8IwY_entry:
_c8J5w:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8J5x
_c8J5y:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8J5A
_c8J5z:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8J5v
_c8J5u:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8J5A:
	movq $56,904(%r13)
_c8J5x:
	jmp *-16(%r13)
_c8J5v:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8IwY_entry, .-sat_s8IwY_entry


==================== Asm code ====================
2018-03-16 16:03:53.785907386 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IwY_info:
	.quad	sat_s8IwY_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.786816211 UTC

.section .text
.align 8
sat_s8Ix6_entry:
_c8J5S:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8J5T
_c8J5U:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8J5W
_c8J5V:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8J5R
_c8J5Q:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8J5W:
	movq $56,904(%r13)
_c8J5T:
	jmp *-16(%r13)
_c8J5R:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Ix6_entry, .-sat_s8Ix6_entry


==================== Asm code ====================
2018-03-16 16:03:53.787627454 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Ix6_info:
	.quad	sat_s8Ix6_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.788590044 UTC

.section .text
.align 8
sat_s8Ixe_entry:
_c8J6e:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8J6f
_c8J6g:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8J6i
_c8J6h:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8J6d
_c8J6c:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8J6i:
	movq $56,904(%r13)
_c8J6f:
	jmp *-16(%r13)
_c8J6d:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Ixe_entry, .-sat_s8Ixe_entry


==================== Asm code ====================
2018-03-16 16:03:53.789526224 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Ixe_info:
	.quad	sat_s8Ixe_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.790311543 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF3_entry
.type GHC.IO.Encoding.UTF16.mkUTF3_entry, @object
GHC.IO.Encoding.UTF16.mkUTF3_entry:
_c8J6l:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8J6m
_c8J6n:
	leaq block_c8J3k_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8J3k
_c8J3l:
	movq (%rbx),%rax
	jmp *(%rax)
_c8J6m:
	leaq GHC.IO.Encoding.UTF16.mkUTF3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.mkUTF3_entry, .-GHC.IO.Encoding.UTF16.mkUTF3_entry


==================== Asm code ====================
2018-03-16 16:03:53.791035142 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF3_info
.type GHC.IO.Encoding.UTF16.mkUTF3_info, @object
GHC.IO.Encoding.UTF16.mkUTF3_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF3_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:53.791848825 UTC

.section .text
.align 8
_c8J3k:
_c8J3k:
	leaq block_c8J3p_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8J3p
_c8J3q:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8J3k, .-_c8J3k


==================== Asm code ====================
2018-03-16 16:03:53.792535841 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8J3k_info:
	.quad	_c8J3k
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.794761197 UTC

.section .text
.align 8
_c8J3p:
_c8J3p:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8J6r
_c8J6q:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8J70:
	cmpq %rsi,%rbx
	jl _c8J8V
_c8J8W:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8J61
_c8J8G:
	leaq 2(%r11),%r14
	movzbl (%r8,%r14,1),%r14d
	movq %r8,72(%rsp)
	leaq 3(%r11),%r8
	movq %r9,80(%rsp)
	movq 72(%rsp),%r9
	movzbl (%r9,%r8,1),%r8d
	cmpq $55296,%r10
	jb _c8J86
_c8J8E:
	cmpq $56319,%r10
	ja _c8J8c
_c8J8D:
	shlq $8,%r8
	movzwl %r8w,%r8d
	addq %r14,%r8
	movzwl %r8w,%r8d
	cmpq $56320,%r8
	jb _c8J8u
_c8J8C:
	cmpq $57343,%r8
	ja _c8J8A
_c8J8B:
	addq $-56320,%r8
	addq $-55296,%r10
	shlq $10,%r10
	addq %r8,%r10
	leaq 65536(%r10),%r8
	movl %r8d,(%rdx,%rbx,4)
	incq %rbx
	addq $4,%r11
_n8JbH:
	movq %r9,%r8
	movq 80(%rsp),%r9
	movq 64(%rsp),%r10
	jmp _c8J70
_c8J8M:
	cmpq $57343,%r10
	jbe _c8J8J
_c8J8K:
	movl %r10d,(%rdx,%rbx,4)
	incq %rbx
	addq $2,%r11
_n8JbI:
	movq 64(%rsp),%r10
	jmp _c8J70
_c8J8S:
	leaq 1(%r11),%r14
	cmpq %r9,%r14
	je _c8J8Q
_c8J8P:
	movzbl (%r8,%r11,1),%r14d
	movq %r10,64(%rsp)
	leaq 1(%r11),%r10
	movzbl (%r8,%r10,1),%r10d
	shlq $8,%r10
	movzwl %r10w,%r10d
	addq %r14,%r10
	movzwl %r10w,%r10d
	cmpq $55296,%r10
	jae _c8J8M
_c8J8N:
	movl %r10d,(%rdx,%rbx,4)
	incq %rbx
	addq $2,%r11
_n8JbJ:
	movq 64(%rsp),%r10
	jmp _c8J70
_c8J8V:
	cmpq %r9,%r11
	jl _c8J8S
_c8J8T:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8J5F
_c8J8Q:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8J5j
_c8J8J:
	movq %r9,%r14
	subq %r11,%r14
	cmpq $4,%r14
	jge _c8J8G
_c8J8H:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8J4X
_c8J8A:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8J4B
_c8J8u:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8J4f
_c8J8c:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8J3T
_c8J86:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8J3x
_c8J6r:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8J3p, .-_c8J3p


==================== Asm code ====================
2018-03-16 16:03:53.796390145 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8J3p_info:
	.quad	_c8J3p
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.797425164 UTC

.section .text
.align 8
_c8J5j:
_c8J5j:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8J6P
_c8J6O:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8IwY_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8J6P:
	movq $160,904(%r13)
	leaq block_c8J5j_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8J5j, .-_c8J5j


==================== Asm code ====================
2018-03-16 16:03:53.798295336 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8J5j_info:
	.quad	_c8J5j
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.799202977 UTC

.section .text
.align 8
_c8J3x:
_c8J3x:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8J6v
_c8J6u:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8Iwk_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8J6v:
	movq $160,904(%r13)
	leaq block_c8J3x_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8J3x, .-_c8J3x


==================== Asm code ====================
2018-03-16 16:03:53.800780743 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8J3x_info:
	.quad	_c8J3x
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.801720843 UTC

.section .text
.align 8
_c8J3T:
_c8J3T:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8J6z
_c8J6y:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8Iws_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8J6z:
	movq $160,904(%r13)
	leaq block_c8J3T_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8J3T, .-_c8J3T


==================== Asm code ====================
2018-03-16 16:03:53.802542181 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8J3T_info:
	.quad	_c8J3T
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.803420333 UTC

.section .text
.align 8
_c8J4f:
_c8J4f:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8J6D
_c8J6C:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8IwA_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8J6D:
	movq $160,904(%r13)
	leaq block_c8J4f_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8J4f, .-_c8J4f


==================== Asm code ====================
2018-03-16 16:03:53.804303181 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8J4f_info:
	.quad	_c8J4f
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.805162482 UTC

.section .text
.align 8
_c8J4B:
_c8J4B:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8J6H
_c8J6G:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8IwI_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8J6H:
	movq $160,904(%r13)
	leaq block_c8J4B_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8J4B, .-_c8J4B


==================== Asm code ====================
2018-03-16 16:03:53.806034987 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8J4B_info:
	.quad	_c8J4B
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.806890815 UTC

.section .text
.align 8
_c8J4X:
_c8J4X:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8J6L
_c8J6K:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8IwQ_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8J6L:
	movq $160,904(%r13)
	leaq block_c8J4X_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8J4X, .-_c8J4X


==================== Asm code ====================
2018-03-16 16:03:53.807755856 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8J4X_info:
	.quad	_c8J4X
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.808624306 UTC

.section .text
.align 8
_c8J5F:
_c8J5F:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8J6T
_c8J6S:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8Ix6_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8J6T:
	movq $160,904(%r13)
	leaq block_c8J5F_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8J5F, .-_c8J5F


==================== Asm code ====================
2018-03-16 16:03:53.809994887 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8J5F_info:
	.quad	_c8J5F
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.810892325 UTC

.section .text
.align 8
_c8J61:
_c8J61:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8J6X
_c8J6W:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8Ixe_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8J6X:
	movq $160,904(%r13)
	leaq block_c8J61_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8J61, .-_c8J61


==================== Asm code ====================
2018-03-16 16:03:53.811726062 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8J61_info:
	.quad	_c8J61
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.814022015 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16le_decode_closure
.type GHC.IO.Encoding.UTF16.utf16le_decode_closure, @object
GHC.IO.Encoding.UTF16.utf16le_decode_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16le_decode_info


==================== Asm code ====================
2018-03-16 16:03:53.814657378 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16le_decode_entry
.type GHC.IO.Encoding.UTF16.utf16le_decode_entry, @object
GHC.IO.Encoding.UTF16.utf16le_decode_entry:
_c8Jf3:
	jmp GHC.IO.Encoding.UTF16.mkUTF3_entry
	.size GHC.IO.Encoding.UTF16.utf16le_decode_entry, .-GHC.IO.Encoding.UTF16.utf16le_decode_entry


==================== Asm code ====================
2018-03-16 16:03:53.815240041 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16le_decode_info
.type GHC.IO.Encoding.UTF16.utf16le_decode_info, @object
GHC.IO.Encoding.UTF16.utf16le_decode_info:
	.quad	GHC.IO.Encoding.UTF16.utf16le_decode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:53.816856657 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16le3_bytes
.type GHC.IO.Encoding.UTF16.mkUTF16le3_bytes, @object
GHC.IO.Encoding.UTF16.mkUTF16le3_bytes:
	.asciz "UTF16-LE"


==================== Asm code ====================
2018-03-16 16:03:53.819498532 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16le2_closure
.type GHC.IO.Encoding.UTF16.mkUTF16le2_closure, @object
GHC.IO.Encoding.UTF16.mkUTF16le2_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16le2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:53.820388466 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF16le2_entry
.type GHC.IO.Encoding.UTF16.mkUTF16le2_entry, @object
GHC.IO.Encoding.UTF16.mkUTF16le2_entry:
_c8Jfh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Jfi
_c8Jfj:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8Jfg
_c8Jff:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Encoding.UTF16.mkUTF16le3_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8Jfi:
	jmp *-16(%r13)
_c8Jfg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF16.mkUTF16le2_entry, .-GHC.IO.Encoding.UTF16.mkUTF16le2_entry


==================== Asm code ====================
2018-03-16 16:03:53.821105641 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16le2_info
.type GHC.IO.Encoding.UTF16.mkUTF16le2_info, @object
GHC.IO.Encoding.UTF16.mkUTF16le2_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16le2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:53.823945238 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF2_closure
.type GHC.IO.Encoding.UTF16.mkUTF2_closure, @object
GHC.IO.Encoding.UTF16.mkUTF2_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF2_info


==================== Asm code ====================
2018-03-16 16:03:53.824623531 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF2_entry
.type GHC.IO.Encoding.UTF16.mkUTF2_entry, @object
GHC.IO.Encoding.UTF16.mkUTF2_entry:
_c8Jfw:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF16.mkUTF2_entry, .-GHC.IO.Encoding.UTF16.mkUTF2_entry


==================== Asm code ====================
2018-03-16 16:03:53.825213247 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF2_info
.type GHC.IO.Encoding.UTF16.mkUTF2_info, @object
GHC.IO.Encoding.UTF16.mkUTF2_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF2_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:03:53.827359596 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16be1_closure
.type GHC.IO.Encoding.UTF16.mkUTF16be1_closure, @object
GHC.IO.Encoding.UTF16.mkUTF16be1_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be1_info


==================== Asm code ====================
2018-03-16 16:03:53.828046088 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF16be1_entry
.type GHC.IO.Encoding.UTF16.mkUTF16be1_entry, @object
GHC.IO.Encoding.UTF16.mkUTF16be1_entry:
_c8JfJ:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF16.mkUTF16be1_entry, .-GHC.IO.Encoding.UTF16.mkUTF16be1_entry


==================== Asm code ====================
2018-03-16 16:03:53.828677128 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16be1_info
.type GHC.IO.Encoding.UTF16.mkUTF16be1_info, @object
GHC.IO.Encoding.UTF16.mkUTF16be1_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:53.834016822 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16le_closure
.type GHC.IO.Encoding.UTF16.mkUTF16le_closure, @object
GHC.IO.Encoding.UTF16.mkUTF16le_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16le_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:53.834667696 UTC

.section .text
.align 8
sat_s8Iyz_entry:
_c8Jg6:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverEncode1_entry@gotpcrel(%rip)
	.size sat_s8Iyz_entry, .-sat_s8Iyz_entry


==================== Asm code ====================
2018-03-16 16:03:53.835257846 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Iyz_info:
	.quad	sat_s8Iyz_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8JgE_srt


==================== Asm code ====================
2018-03-16 16:03:53.836089919 UTC

.section .text
.align 8
sat_s8IyB_entry:
_c8Jga:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8Jge
_c8Jgd:
	movq 7(%rbx),%rax
	leaq sat_s8Iyz_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq GHC.IO.Encoding.UTF16.mkUTF16le1_closure+3(%rip),%rax
	movq %rax,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF16.mkUTF2_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.IO.Encoding.UTF16.mkUTF2_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq GHC.IO.Encoding.UTF16.mkUTF16be1_closure+2(%rip),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8Jge:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8IyB_entry, .-sat_s8IyB_entry


==================== Asm code ====================
2018-03-16 16:03:53.837395331 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IyB_info:
	.quad	sat_s8IyB_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8JgE_srt


==================== Asm code ====================
2018-03-16 16:03:53.838111003 UTC

.section .text
.align 8
sat_s8Iyv_entry:
_c8Jgp:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverDecode1_entry@gotpcrel(%rip)
	.size sat_s8Iyv_entry, .-sat_s8Iyv_entry


==================== Asm code ====================
2018-03-16 16:03:53.838710763 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Iyv_info:
	.quad	sat_s8Iyv_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8JgE_srt+8


==================== Asm code ====================
2018-03-16 16:03:53.839490383 UTC

.section .text
.align 8
sat_s8Iyx_entry:
_c8Jgt:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8Jgx
_c8Jgw:
	movq 7(%rbx),%rax
	leaq sat_s8Iyv_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq GHC.IO.Encoding.UTF16.mkUTF3_closure+3(%rip),%rax
	movq %rax,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF16.mkUTF2_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.IO.Encoding.UTF16.mkUTF2_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq GHC.IO.Encoding.UTF16.mkUTF16be1_closure+2(%rip),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8Jgx:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8Iyx_entry, .-sat_s8Iyx_entry


==================== Asm code ====================
2018-03-16 16:03:53.840233424 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Iyx_info:
	.quad	sat_s8Iyx_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8JgE_srt+8


==================== Asm code ====================
2018-03-16 16:03:53.841013039 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF16le_entry
.type GHC.IO.Encoding.UTF16.mkUTF16le_entry, @object
GHC.IO.Encoding.UTF16.mkUTF16le_entry:
_c8Jgz:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8JgD
_c8JgC:
	leaq sat_s8IyB_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s8Iyx_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	movq GHC.IO.Encoding.Types.TextEncoding_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF16.mkUTF16le2_closure(%rip),%rax
	movq %rax,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8JgD:
	movq $64,904(%r13)
	leaq GHC.IO.Encoding.UTF16.mkUTF16le_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.mkUTF16le_entry, .-GHC.IO.Encoding.UTF16.mkUTF16le_entry


==================== Asm code ====================
2018-03-16 16:03:53.842004855 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16le_info
.type GHC.IO.Encoding.UTF16.mkUTF16le_info, @object
GHC.IO.Encoding.UTF16.mkUTF16le_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16le_entry
	.quad	0
	.quad	64424509454
	.quad	4294967301
	.quad	S8JgE_srt


==================== Asm code ====================
2018-03-16 16:03:53.845321252 UTC

.section .data
.align 8
.align 1
lvl_r8G1B_closure:
	.quad	lvl_r8G1B_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:53.846137008 UTC

.section .text
.align 8
lvl_r8G1B_entry:
_c8Jhp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Jht
_c8Jhu:
	leaq block_c8Jhm_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8Jhm
_c8Jhn:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Jht:
	leaq lvl_r8G1B_closure(%rip),%rbx
	jmp *-8(%r13)
	.size lvl_r8G1B_entry, .-lvl_r8G1B_entry


==================== Asm code ====================
2018-03-16 16:03:53.846724584 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_r8G1B_info:
	.quad	lvl_r8G1B_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8JgE_srt+32


==================== Asm code ====================
2018-03-16 16:03:53.84743342 UTC

.section .text
.align 8
_c8Jhm:
_c8Jhm:
	movq 8(%rbp),%rax
	leaq block_c8Jhs_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8Jhs
_c8Jhw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Jhm, .-_c8Jhm


==================== Asm code ====================
2018-03-16 16:03:53.848103836 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Jhm_info:
	.quad	_c8Jhm
	.quad	1
	.quad	4294967326
	.quad	S8JgE_srt+32


==================== Asm code ====================
2018-03-16 16:03:53.848705549 UTC

.section .text
.align 8
_c8Jhs:
_c8Jhs:
	movq GHC.IO.Encoding.Failure.recoverDecode2_closure@gotpcrel(%rip),%rbx
	addq $8,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _c8Jhs, .-_c8Jhs


==================== Asm code ====================
2018-03-16 16:03:53.849335157 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Jhs_info:
	.quad	_c8Jhs
	.quad	0
	.quad	4294967326
	.quad	S8JgE_srt+32


==================== Asm code ====================
2018-03-16 16:03:53.851146627 UTC

.section .data
.align 8
.align 1
lvl1_r8G1C_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.UTF16.mkUTF3_closure+3
	.quad	lvl_r8G1B_closure+3
	.quad	GHC.IO.Encoding.UTF16.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF16.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:53.853490559 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16le2_closure
.type GHC.IO.Encoding.UTF16.utf16le2_closure, @object
GHC.IO.Encoding.UTF16.utf16le2_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16le2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:53.854156147 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16le2_entry
.type GHC.IO.Encoding.UTF16.utf16le2_entry, @object
GHC.IO.Encoding.UTF16.utf16le2_entry:
_c8JhX:
	leaq lvl1_r8G1C_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF16.utf16le2_entry, .-GHC.IO.Encoding.UTF16.utf16le2_entry


==================== Asm code ====================
2018-03-16 16:03:53.854782408 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16le2_info
.type GHC.IO.Encoding.UTF16.utf16le2_info, @object
GHC.IO.Encoding.UTF16.utf16le2_info:
	.quad	GHC.IO.Encoding.UTF16.utf16le2_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8JgE_srt+48


==================== Asm code ====================
2018-03-16 16:03:53.858283987 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be2_closure
.type GHC.IO.Encoding.UTF16.utf16be2_closure, @object
GHC.IO.Encoding.UTF16.utf16be2_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16be2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:53.859064218 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16be2_entry
.type GHC.IO.Encoding.UTF16.utf16be2_entry, @object
GHC.IO.Encoding.UTF16.utf16be2_entry:
_c8Jic:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Jig
_c8Jih:
	leaq block_c8Ji9_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8Ji9
_c8Jia:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Jig:
	leaq GHC.IO.Encoding.UTF16.utf16be2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.utf16be2_entry, .-GHC.IO.Encoding.UTF16.utf16be2_entry


==================== Asm code ====================
2018-03-16 16:03:53.859704367 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be2_info
.type GHC.IO.Encoding.UTF16.utf16be2_info, @object
GHC.IO.Encoding.UTF16.utf16be2_info:
	.quad	GHC.IO.Encoding.UTF16.utf16be2_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8JgE_srt+56


==================== Asm code ====================
2018-03-16 16:03:53.860471921 UTC

.section .text
.align 8
_c8Ji9:
_c8Ji9:
	leaq block_c8Jif_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8Jif
_c8Jij:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Ji9, .-_c8Ji9


==================== Asm code ====================
2018-03-16 16:03:53.861116136 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Ji9_info:
	.quad	_c8Ji9
	.quad	1
	.quad	4294967326
	.quad	S8JgE_srt+56


==================== Asm code ====================
2018-03-16 16:03:53.862203351 UTC

.section .text
.align 8
_c8Jif:
_c8Jif:
	movq GHC.IO.Encoding.Failure.recoverEncode2_closure@gotpcrel(%rip),%rbx
	addq $32,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _c8Jif, .-_c8Jif


==================== Asm code ====================
2018-03-16 16:03:53.862784198 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Jif_info:
	.quad	_c8Jif
	.quad	323
	.quad	4294967326
	.quad	S8JgE_srt+56


==================== Asm code ====================
2018-03-16 16:03:53.864582991 UTC

.section .data
.align 8
.align 1
lvl2_r8G1D_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.UTF16.mkUTF16le1_closure+3
	.quad	GHC.IO.Encoding.UTF16.utf16be2_closure+3
	.quad	GHC.IO.Encoding.UTF16.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF16.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:53.86682467 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16le1_closure
.type GHC.IO.Encoding.UTF16.utf16le1_closure, @object
GHC.IO.Encoding.UTF16.utf16le1_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16le1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:53.867501412 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16le1_entry
.type GHC.IO.Encoding.UTF16.utf16le1_entry, @object
GHC.IO.Encoding.UTF16.utf16le1_entry:
_c8JiL:
	leaq lvl2_r8G1D_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF16.utf16le1_entry, .-GHC.IO.Encoding.UTF16.utf16le1_entry


==================== Asm code ====================
2018-03-16 16:03:53.868137872 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16le1_info
.type GHC.IO.Encoding.UTF16.utf16le1_info, @object
GHC.IO.Encoding.UTF16.utf16le1_info:
	.quad	GHC.IO.Encoding.UTF16.utf16le1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8JgE_srt+72


==================== Asm code ====================
2018-03-16 16:03:53.870435653 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16le_closure
.type GHC.IO.Encoding.UTF16.utf16le_closure, @object
GHC.IO.Encoding.UTF16.utf16le_closure:
	.quad	GHC.IO.Encoding.Types.TextEncoding_con_info
	.quad	GHC.IO.Encoding.UTF16.mkUTF16le2_closure
	.quad	GHC.IO.Encoding.UTF16.utf16le2_closure+1
	.quad	GHC.IO.Encoding.UTF16.utf16le1_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:53.898322988 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF5_closure
.type GHC.IO.Encoding.UTF16.mkUTF5_closure, @object
GHC.IO.Encoding.UTF16.mkUTF5_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF5_info


==================== Asm code ====================
2018-03-16 16:03:53.899366354 UTC

.section .text
.align 8
sat_s8IzD_entry:
_c8Jjo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Jjp
_c8Jjq:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Jjs
_c8Jjr:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Jjn
_c8Jjm:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Jjs:
	movq $56,904(%r13)
_c8Jjp:
	jmp *-16(%r13)
_c8Jjn:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8IzD_entry, .-sat_s8IzD_entry


==================== Asm code ====================
2018-03-16 16:03:53.90016495 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IzD_info:
	.quad	sat_s8IzD_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.901027184 UTC

.section .text
.align 8
sat_s8IzL_entry:
_c8JjK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8JjL
_c8JjM:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8JjO
_c8JjN:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8JjJ
_c8JjI:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8JjO:
	movq $56,904(%r13)
_c8JjL:
	jmp *-16(%r13)
_c8JjJ:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8IzL_entry, .-sat_s8IzL_entry


==================== Asm code ====================
2018-03-16 16:03:53.901866191 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IzL_info:
	.quad	sat_s8IzL_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.902751012 UTC

.section .text
.align 8
sat_s8IzT_entry:
_c8Jk6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Jk7
_c8Jk8:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Jka
_c8Jk9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Jk5
_c8Jk4:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Jka:
	movq $56,904(%r13)
_c8Jk7:
	jmp *-16(%r13)
_c8Jk5:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8IzT_entry, .-sat_s8IzT_entry


==================== Asm code ====================
2018-03-16 16:03:53.903565243 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IzT_info:
	.quad	sat_s8IzT_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.904462989 UTC

.section .text
.align 8
sat_s8IA1_entry:
_c8Jks:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Jkt
_c8Jku:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Jkw
_c8Jkv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Jkr
_c8Jkq:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Jkw:
	movq $56,904(%r13)
_c8Jkt:
	jmp *-16(%r13)
_c8Jkr:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8IA1_entry, .-sat_s8IA1_entry


==================== Asm code ====================
2018-03-16 16:03:53.905288751 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IA1_info:
	.quad	sat_s8IA1_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.906199973 UTC

.section .text
.align 8
sat_s8IA9_entry:
_c8JkO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8JkP
_c8JkQ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8JkS
_c8JkR:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8JkN
_c8JkM:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8JkS:
	movq $56,904(%r13)
_c8JkP:
	jmp *-16(%r13)
_c8JkN:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8IA9_entry, .-sat_s8IA9_entry


==================== Asm code ====================
2018-03-16 16:03:53.907030061 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IA9_info:
	.quad	sat_s8IA9_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.90793103 UTC

.section .text
.align 8
sat_s8IAh_entry:
_c8Jla:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Jlb
_c8Jlc:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Jle
_c8Jld:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Jl9
_c8Jl8:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Jle:
	movq $56,904(%r13)
_c8Jlb:
	jmp *-16(%r13)
_c8Jl9:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8IAh_entry, .-sat_s8IAh_entry


==================== Asm code ====================
2018-03-16 16:03:53.908741825 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IAh_info:
	.quad	sat_s8IAh_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.909646929 UTC

.section .text
.align 8
sat_s8IAp_entry:
_c8Jlw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Jlx
_c8Jly:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8JlA
_c8Jlz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Jlv
_c8Jlu:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8JlA:
	movq $56,904(%r13)
_c8Jlx:
	jmp *-16(%r13)
_c8Jlv:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8IAp_entry, .-sat_s8IAp_entry


==================== Asm code ====================
2018-03-16 16:03:53.910456268 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IAp_info:
	.quad	sat_s8IAp_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.911327472 UTC

.section .text
.align 8
sat_s8IAx_entry:
_c8JlS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8JlT
_c8JlU:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8JlW
_c8JlV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8JlR
_c8JlQ:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8JlW:
	movq $56,904(%r13)
_c8JlT:
	jmp *-16(%r13)
_c8JlR:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8IAx_entry, .-sat_s8IAx_entry


==================== Asm code ====================
2018-03-16 16:03:53.912098666 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IAx_info:
	.quad	sat_s8IAx_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:53.912894787 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF5_entry
.type GHC.IO.Encoding.UTF16.mkUTF5_entry, @object
GHC.IO.Encoding.UTF16.mkUTF5_entry:
_c8JlZ:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Jm0
_c8Jm1:
	leaq block_c8JiY_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8JiY
_c8JiZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Jm0:
	leaq GHC.IO.Encoding.UTF16.mkUTF5_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.mkUTF5_entry, .-GHC.IO.Encoding.UTF16.mkUTF5_entry


==================== Asm code ====================
2018-03-16 16:03:53.913625067 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF5_info
.type GHC.IO.Encoding.UTF16.mkUTF5_info, @object
GHC.IO.Encoding.UTF16.mkUTF5_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF5_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:53.91437613 UTC

.section .text
.align 8
_c8JiY:
_c8JiY:
	leaq block_c8Jj3_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8Jj3
_c8Jj4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8JiY, .-_c8JiY


==================== Asm code ====================
2018-03-16 16:03:53.915051775 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8JiY_info:
	.quad	_c8JiY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.917122704 UTC

.section .text
.align 8
_c8Jj3:
_c8Jj3:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Jm5
_c8Jm4:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8JmE:
	cmpq %rsi,%rbx
	jl _c8Joz
_c8JoA:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8JlF
_c8Jok:
	leaq 2(%r11),%r14
	movzbl (%r8,%r14,1),%r14d
	movq %r8,72(%rsp)
	leaq 3(%r11),%r8
	movq %r9,80(%rsp)
	movq 72(%rsp),%r9
	movzbl (%r9,%r8,1),%r8d
	cmpq $55296,%r10
	jb _c8JnK
_c8Joi:
	cmpq $56319,%r10
	ja _c8JnQ
_c8Joh:
	shlq $8,%r14
	movzwl %r14w,%r14d
	addq %r8,%r14
	movzwl %r14w,%r8d
	cmpq $56320,%r8
	jb _c8Jo8
_c8Jog:
	cmpq $57343,%r8
	ja _c8Joe
_c8Jof:
	addq $-56320,%r8
	addq $-55296,%r10
	shlq $10,%r10
	addq %r8,%r10
	leaq 65536(%r10),%r8
	movl %r8d,(%rdx,%rbx,4)
	incq %rbx
	addq $4,%r11
_n8Jrl:
	movq %r9,%r8
	movq 80(%rsp),%r9
	movq 64(%rsp),%r10
	jmp _c8JmE
_c8Joq:
	cmpq $57343,%r10
	jbe _c8Jon
_c8Joo:
	movl %r10d,(%rdx,%rbx,4)
	incq %rbx
	addq $2,%r11
_n8Jrm:
	movq 64(%rsp),%r10
	jmp _c8JmE
_c8Jow:
	leaq 1(%r11),%r14
	cmpq %r9,%r14
	je _c8Jou
_c8Jot:
	movzbl (%r8,%r11,1),%r14d
	movq %r10,64(%rsp)
	leaq 1(%r11),%r10
	movzbl (%r8,%r10,1),%r10d
	shlq $8,%r14
	movzwl %r14w,%r14d
	addq %r10,%r14
	movzwl %r14w,%r10d
	cmpq $55296,%r10
	jae _c8Joq
_c8Jor:
	movl %r10d,(%rdx,%rbx,4)
	incq %rbx
	addq $2,%r11
_n8Jrn:
	movq 64(%rsp),%r10
	jmp _c8JmE
_c8Joz:
	cmpq %r9,%r11
	jl _c8Jow
_c8Jox:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8Jlj
_c8Jou:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8JkX
_c8Jon:
	movq %r9,%r14
	subq %r11,%r14
	cmpq $4,%r14
	jge _c8Jok
_c8Jol:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8JkB
_c8Joe:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8Jkf
_c8Jo8:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8JjT
_c8JnQ:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8Jjx
_c8JnK:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8Jjb
_c8Jm5:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8Jj3, .-_c8Jj3


==================== Asm code ====================
2018-03-16 16:03:53.918653917 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Jj3_info:
	.quad	_c8Jj3
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.919541595 UTC

.section .text
.align 8
_c8JkX:
_c8JkX:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Jmt
_c8Jms:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8IAh_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Jmt:
	movq $160,904(%r13)
	leaq block_c8JkX_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8JkX, .-_c8JkX


==================== Asm code ====================
2018-03-16 16:03:53.920385629 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8JkX_info:
	.quad	_c8JkX
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.921336964 UTC

.section .text
.align 8
_c8Jjb:
_c8Jjb:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Jm9
_c8Jm8:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8IzD_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Jm9:
	movq $160,904(%r13)
	leaq block_c8Jjb_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8Jjb, .-_c8Jjb


==================== Asm code ====================
2018-03-16 16:03:53.92222139 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Jjb_info:
	.quad	_c8Jjb
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.923094303 UTC

.section .text
.align 8
_c8Jjx:
_c8Jjx:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Jmd
_c8Jmc:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8IzL_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Jmd:
	movq $160,904(%r13)
	leaq block_c8Jjx_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8Jjx, .-_c8Jjx


==================== Asm code ====================
2018-03-16 16:03:53.923977548 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Jjx_info:
	.quad	_c8Jjx
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.924844222 UTC

.section .text
.align 8
_c8JjT:
_c8JjT:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Jmh
_c8Jmg:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8IzT_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Jmh:
	movq $160,904(%r13)
	leaq block_c8JjT_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8JjT, .-_c8JjT


==================== Asm code ====================
2018-03-16 16:03:53.926082449 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8JjT_info:
	.quad	_c8JjT
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.92698064 UTC

.section .text
.align 8
_c8Jkf:
_c8Jkf:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Jml
_c8Jmk:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8IA1_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Jml:
	movq $160,904(%r13)
	leaq block_c8Jkf_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8Jkf, .-_c8Jkf


==================== Asm code ====================
2018-03-16 16:03:53.927828702 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Jkf_info:
	.quad	_c8Jkf
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.928727111 UTC

.section .text
.align 8
_c8JkB:
_c8JkB:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Jmp
_c8Jmo:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8IA9_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Jmp:
	movq $160,904(%r13)
	leaq block_c8JkB_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8JkB, .-_c8JkB


==================== Asm code ====================
2018-03-16 16:03:53.929625906 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8JkB_info:
	.quad	_c8JkB
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.93052109 UTC

.section .text
.align 8
_c8Jlj:
_c8Jlj:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Jmx
_c8Jmw:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8IAp_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Jmx:
	movq $160,904(%r13)
	leaq block_c8Jlj_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8Jlj, .-_c8Jlj


==================== Asm code ====================
2018-03-16 16:03:53.931372622 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Jlj_info:
	.quad	_c8Jlj
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.9322495 UTC

.section .text
.align 8
_c8JlF:
_c8JlF:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8JmB
_c8JmA:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8IAx_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8JmB:
	movq $160,904(%r13)
	leaq block_c8JlF_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8JlF, .-_c8JlF


==================== Asm code ====================
2018-03-16 16:03:53.933087197 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8JlF_info:
	.quad	_c8JlF
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.935952371 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be_decode_closure
.type GHC.IO.Encoding.UTF16.utf16be_decode_closure, @object
GHC.IO.Encoding.UTF16.utf16be_decode_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16be_decode_info


==================== Asm code ====================
2018-03-16 16:03:53.936611443 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16be_decode_entry
.type GHC.IO.Encoding.UTF16.utf16be_decode_entry, @object
GHC.IO.Encoding.UTF16.utf16be_decode_entry:
_c8JuH:
	jmp GHC.IO.Encoding.UTF16.mkUTF5_entry
	.size GHC.IO.Encoding.UTF16.utf16be_decode_entry, .-GHC.IO.Encoding.UTF16.utf16be_decode_entry


==================== Asm code ====================
2018-03-16 16:03:53.937221537 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be_decode_info
.type GHC.IO.Encoding.UTF16.utf16be_decode_info, @object
GHC.IO.Encoding.UTF16.utf16be_decode_info:
	.quad	GHC.IO.Encoding.UTF16.utf16be_decode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:53.939120689 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16be3_bytes
.type GHC.IO.Encoding.UTF16.mkUTF16be3_bytes, @object
GHC.IO.Encoding.UTF16.mkUTF16be3_bytes:
	.asciz "UTF-16BE"


==================== Asm code ====================
2018-03-16 16:03:53.941669558 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16be2_closure
.type GHC.IO.Encoding.UTF16.mkUTF16be2_closure, @object
GHC.IO.Encoding.UTF16.mkUTF16be2_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:53.942514122 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF16be2_entry
.type GHC.IO.Encoding.UTF16.mkUTF16be2_entry, @object
GHC.IO.Encoding.UTF16.mkUTF16be2_entry:
_c8JuV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8JuW
_c8JuX:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8JuU
_c8JuT:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Encoding.UTF16.mkUTF16be3_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8JuW:
	jmp *-16(%r13)
_c8JuU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF16.mkUTF16be2_entry, .-GHC.IO.Encoding.UTF16.mkUTF16be2_entry


==================== Asm code ====================
2018-03-16 16:03:53.943251122 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16be2_info
.type GHC.IO.Encoding.UTF16.mkUTF16be2_info, @object
GHC.IO.Encoding.UTF16.mkUTF16be2_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:53.94811989 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16be_closure
.type GHC.IO.Encoding.UTF16.mkUTF16be_closure, @object
GHC.IO.Encoding.UTF16.mkUTF16be_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:53.948765473 UTC

.section .text
.align 8
sat_s8IBP_entry:
_c8Jvk:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverEncode1_entry@gotpcrel(%rip)
	.size sat_s8IBP_entry, .-sat_s8IBP_entry


==================== Asm code ====================
2018-03-16 16:03:53.949659666 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IBP_info:
	.quad	sat_s8IBP_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8JgE_srt


==================== Asm code ====================
2018-03-16 16:03:53.950433695 UTC

.section .text
.align 8
sat_s8IBR_entry:
_c8Jvo:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8Jvs
_c8Jvr:
	movq 7(%rbx),%rax
	leaq sat_s8IBP_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq GHC.IO.Encoding.UTF16.mkUTF1_closure+3(%rip),%rax
	movq %rax,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF16.mkUTF2_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.IO.Encoding.UTF16.mkUTF2_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq GHC.IO.Encoding.UTF16.mkUTF16be1_closure+2(%rip),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8Jvs:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8IBR_entry, .-sat_s8IBR_entry


==================== Asm code ====================
2018-03-16 16:03:53.951150102 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IBR_info:
	.quad	sat_s8IBR_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8JgE_srt


==================== Asm code ====================
2018-03-16 16:03:53.951812573 UTC

.section .text
.align 8
sat_s8IBL_entry:
_c8JvD:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverDecode1_entry@gotpcrel(%rip)
	.size sat_s8IBL_entry, .-sat_s8IBL_entry


==================== Asm code ====================
2018-03-16 16:03:53.952406775 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IBL_info:
	.quad	sat_s8IBL_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8JgE_srt+8


==================== Asm code ====================
2018-03-16 16:03:53.953197027 UTC

.section .text
.align 8
sat_s8IBN_entry:
_c8JvH:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8JvL
_c8JvK:
	movq 7(%rbx),%rax
	leaq sat_s8IBL_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq GHC.IO.Encoding.UTF16.mkUTF5_closure+3(%rip),%rax
	movq %rax,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF16.mkUTF2_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.IO.Encoding.UTF16.mkUTF2_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq GHC.IO.Encoding.UTF16.mkUTF16be1_closure+2(%rip),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8JvL:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8IBN_entry, .-sat_s8IBN_entry


==================== Asm code ====================
2018-03-16 16:03:53.953981832 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IBN_info:
	.quad	sat_s8IBN_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8JgE_srt+8


==================== Asm code ====================
2018-03-16 16:03:53.954739734 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF16be_entry
.type GHC.IO.Encoding.UTF16.mkUTF16be_entry, @object
GHC.IO.Encoding.UTF16.mkUTF16be_entry:
_c8JvN:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8JvR
_c8JvQ:
	leaq sat_s8IBR_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s8IBN_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	movq GHC.IO.Encoding.Types.TextEncoding_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF16.mkUTF16be2_closure(%rip),%rax
	movq %rax,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8JvR:
	movq $64,904(%r13)
	leaq GHC.IO.Encoding.UTF16.mkUTF16be_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.mkUTF16be_entry, .-GHC.IO.Encoding.UTF16.mkUTF16be_entry


==================== Asm code ====================
2018-03-16 16:03:53.955479675 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16be_info
.type GHC.IO.Encoding.UTF16.mkUTF16be_info, @object
GHC.IO.Encoding.UTF16.mkUTF16be_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be_entry
	.quad	0
	.quad	13207024435214
	.quad	4294967301
	.quad	S8JgE_srt


==================== Asm code ====================
2018-03-16 16:03:53.957271371 UTC

.section .data
.align 8
.align 1
lvl3_r8G1E_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.UTF16.mkUTF5_closure+3
	.quad	lvl_r8G1B_closure+3
	.quad	GHC.IO.Encoding.UTF16.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF16.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:53.959448715 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be3_closure
.type GHC.IO.Encoding.UTF16.utf16be3_closure, @object
GHC.IO.Encoding.UTF16.utf16be3_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16be3_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:53.960087184 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16be3_entry
.type GHC.IO.Encoding.UTF16.utf16be3_entry, @object
GHC.IO.Encoding.UTF16.utf16be3_entry:
_c8JwA:
	leaq lvl3_r8G1E_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF16.utf16be3_entry, .-GHC.IO.Encoding.UTF16.utf16be3_entry


==================== Asm code ====================
2018-03-16 16:03:53.960666695 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be3_info
.type GHC.IO.Encoding.UTF16.utf16be3_info, @object
GHC.IO.Encoding.UTF16.utf16be3_info:
	.quad	GHC.IO.Encoding.UTF16.utf16be3_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8JgE_srt+96


==================== Asm code ====================
2018-03-16 16:03:53.962456635 UTC

.section .data
.align 8
.align 1
lvl4_r8G1F_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.UTF16.mkUTF1_closure+3
	.quad	GHC.IO.Encoding.UTF16.utf16be2_closure+3
	.quad	GHC.IO.Encoding.UTF16.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF16.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:53.964531075 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be1_closure
.type GHC.IO.Encoding.UTF16.utf16be1_closure, @object
GHC.IO.Encoding.UTF16.utf16be1_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16be1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:53.965086256 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16be1_entry
.type GHC.IO.Encoding.UTF16.utf16be1_entry, @object
GHC.IO.Encoding.UTF16.utf16be1_entry:
_c8JwN:
	leaq lvl4_r8G1F_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF16.utf16be1_entry, .-GHC.IO.Encoding.UTF16.utf16be1_entry


==================== Asm code ====================
2018-03-16 16:03:53.965942175 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be1_info
.type GHC.IO.Encoding.UTF16.utf16be1_info, @object
GHC.IO.Encoding.UTF16.utf16be1_info:
	.quad	GHC.IO.Encoding.UTF16.utf16be1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8JgE_srt+104


==================== Asm code ====================
2018-03-16 16:03:53.968165709 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16be_closure
.type GHC.IO.Encoding.UTF16.utf16be_closure, @object
GHC.IO.Encoding.UTF16.utf16be_closure:
	.quad	GHC.IO.Encoding.Types.TextEncoding_con_info
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be2_closure
	.quad	GHC.IO.Encoding.UTF16.utf16be3_closure+1
	.quad	GHC.IO.Encoding.UTF16.utf16be1_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:53.969895542 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF6_closure
.type GHC.IO.Encoding.UTF16.mkUTF6_closure, @object
GHC.IO.Encoding.UTF16.mkUTF6_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.IO.Encoding.UTF16.mkUTF5_closure+3
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:53.971599001 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF4_closure
.type GHC.IO.Encoding.UTF16.mkUTF4_closure, @object
GHC.IO.Encoding.UTF16.mkUTF4_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.IO.Encoding.UTF16.mkUTF3_closure+3
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:53.980238244 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.$wutf16_decode_closure
.type GHC.IO.Encoding.UTF16.$wutf16_decode_closure, @object
GHC.IO.Encoding.UTF16.$wutf16_decode_closure:
	.quad	GHC.IO.Encoding.UTF16.$wutf16_decode_info


==================== Asm code ====================
2018-03-16 16:03:53.980964709 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.$wutf16_decode_slow
.type GHC.IO.Encoding.UTF16.$wutf16_decode_slow, @object
GHC.IO.Encoding.UTF16.$wutf16_decode_slow:
_c8JwZ:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Encoding.UTF16.$wutf16_decode_entry
	.size GHC.IO.Encoding.UTF16.$wutf16_decode_slow, .-GHC.IO.Encoding.UTF16.$wutf16_decode_slow


==================== Asm code ====================
2018-03-16 16:03:53.981906052 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.$wutf16_decode_entry
.type GHC.IO.Encoding.UTF16.$wutf16_decode_entry, @object
GHC.IO.Encoding.UTF16.$wutf16_decode_entry:
_c8Jxa:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Jxb
_c8Jxc:
	leaq block_c8Jx3_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq 8(%r14),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _c8Jx3
_c8Jx4:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Jxb:
	leaq GHC.IO.Encoding.UTF16.$wutf16_decode_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.$wutf16_decode_entry, .-GHC.IO.Encoding.UTF16.$wutf16_decode_entry


==================== Asm code ====================
2018-03-16 16:03:53.982632556 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.$wutf16_decode_info
.type GHC.IO.Encoding.UTF16.$wutf16_decode_info, @object
GHC.IO.Encoding.UTF16.$wutf16_decode_info:
	.quad	GHC.IO.Encoding.UTF16.$wutf16_decode_entry
	.quad	0
	.quad	14
	.quad	38654705664
	.quad	0
	.quad	7304
	.quad	GHC.IO.Encoding.UTF16.$wutf16_decode_slow


==================== Asm code ====================
2018-03-16 16:03:53.983994315 UTC

.section .text
.align 8
_c8Jx3:
_c8Jx3:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 40(%rbp),%rsi
	movq 48(%rbp),%rdi
	movq 56(%rbp),%r8
	movq 64(%rbp),%r9
	movq %rbx,%r10
	andl $7,%r10d
	cmpq $1,%r10
	je _c8Jx7
_c8Jx8:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8JyC
_c8JyB:
	movq 6(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r10
	movq %r10,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	movq %r9,%rsi
	leaq -47(%r12),%r14
	addq $72,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
_c8JyC:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8Jx7:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c8Jxh
_c8Jxg:
	movq %r8,%rbx
	subq %rdi,%rbx
	cmpq $2,%rbx
	jge _c8Jys
_c8Jyw:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rax,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -79(%r12),%rax
	movq %rax,-8(%r12)
	movq %r9,(%r12)
	leaq -23(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Jys:
	movq 8(%rbp),%rbx
	movzbl (%rax,%rdi,1),%r10d
	leaq 1(%rdi),%r11
	movzbl (%rax,%r11,1),%r11d
	cmpq $254,%r10
	jne _c8Jyf
_c8Jyq:
	cmpq $255,%r11
	jne _c8Jyf
_c8Jyp:
	leaq GHC.IO.Encoding.UTF16.mkUTF6_closure+2(%rip),%r10
	movq %r10,8(%rbx)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rbx,%rsi
	movq %rdi,%rbx
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %r10,%r14
	movq %rcx,72(%rsp)
	movq %rdx,80(%rsp)
	movq %r11,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-80(%r12)
	movq 64(%rsp),%rax
	movq %rax,-72(%r12)
	movq 72(%rsp),%rax
	movq %rax,-64(%r12)
	movq %r14,-56(%r12)
	movq 80(%rsp),%rax
	movq %rax,-48(%r12)
	leaq 2(%rbx),%rax
	movq %rax,-40(%r12)
	movq 88(%rsp),%rax
	movq %rax,-32(%r12)
	leaq -79(%r12),%rax
	addq $-32,%r12
	movq 96(%rsp),%rbx
	movq %rbx,%rsi
	movq %rax,%r14
	addq $72,%rbp
	jmp GHC.IO.Encoding.UTF16.mkUTF5_entry
_c8Jyf:
	addq $-88,%r12
	movq %r11,-8(%rbp)
	movq %r10,(%rbp)
	addq $-16,%rbp
	jmp _c8JxC
_c8Jxh:
	movq $88,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8Jx3, .-_c8Jx3


==================== Asm code ====================
2018-03-16 16:03:53.985184716 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Jx3_info:
	.quad	_c8Jx3
	.quad	7304
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.986469199 UTC

.section .text
.align 8
_c8JxC:
_c8JxC:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8JxG
_c8JxF:
	movq 24(%rbp),%rax
	movq 32(%rbp),%rbx
	movq 40(%rbp),%rcx
	movq 48(%rbp),%rdx
	movq 56(%rbp),%rsi
	movq 64(%rbp),%rdi
	movq 72(%rbp),%r8
	movq 80(%rbp),%r9
	cmpq $255,16(%rbp)
	je _c8Jy7
_c8JxO:
	leaq GHC.IO.Encoding.UTF16.mkUTF6_closure+2(%rip),%r10
	movq %r10,8(%rax)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rax,%rsi
	movq %rdi,%rax
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r11,80(%rsp)
	movq %r10,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq 64(%rsp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 72(%rsp),%rax
	movq %rax,-16(%r12)
	movq 80(%rsp),%rax
	movq %rax,-8(%r12)
	movq 88(%rsp),%rax
	movq %rax,(%r12)
	movq 96(%rsp),%rax
	movq %rax,%rsi
	leaq -47(%r12),%r14
	addq $88,%rbp
	jmp GHC.IO.Encoding.UTF16.mkUTF5_entry
_c8Jy6:
	leaq GHC.IO.Encoding.UTF16.mkUTF4_closure+2(%rip),%r10
	movq %r10,8(%rax)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rax,%rsi
	movq %rdi,%rax
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r11,80(%rsp)
	movq %r10,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq 64(%rsp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 72(%rsp),%rax
	movq %rax,-16(%r12)
	movq 80(%rsp),%rax
	addq $2,%rax
	movq %rax,-8(%r12)
	movq 88(%rsp),%rax
	movq %rax,(%r12)
	movq 96(%rsp),%rax
	movq %rax,%rsi
	leaq -47(%r12),%r14
	addq $88,%rbp
	jmp GHC.IO.Encoding.UTF16.mkUTF3_entry
_c8Jy7:
	cmpq $254,8(%rbp)
	je _c8Jy6
_c8JxX:
	leaq GHC.IO.Encoding.UTF16.mkUTF6_closure+2(%rip),%r10
	movq %r10,8(%rax)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rax,%rsi
	movq %rdi,%rax
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r11,80(%rsp)
	movq %r10,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq 64(%rsp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 72(%rsp),%rax
	movq %rax,-16(%r12)
	movq 80(%rsp),%rax
	movq %rax,-8(%r12)
	movq 88(%rsp),%rax
	movq %rax,(%r12)
	movq 96(%rsp),%rax
	movq %rax,%rsi
	leaq -47(%r12),%r14
	addq $88,%rbp
	jmp GHC.IO.Encoding.UTF16.mkUTF5_entry
_c8JxG:
	movq $56,904(%r13)
	leaq block_c8JxC_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8JxC, .-_c8JxC


==================== Asm code ====================
2018-03-16 16:03:53.987701463 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8JxC_info:
	.quad	_c8JxC
	.quad	29386
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.991470295 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16_decode1_closure
.type GHC.IO.Encoding.UTF16.utf16_decode1_closure, @object
GHC.IO.Encoding.UTF16.utf16_decode1_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16_decode1_info


==================== Asm code ====================
2018-03-16 16:03:53.992233709 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16_decode1_entry
.type GHC.IO.Encoding.UTF16.utf16_decode1_entry, @object
GHC.IO.Encoding.UTF16.utf16_decode1_entry:
_c8Jzt:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Jzx
_c8Jzy:
	leaq block_c8Jzq_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8Jzq
_c8Jzr:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Jzx:
	leaq GHC.IO.Encoding.UTF16.utf16_decode1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.utf16_decode1_entry, .-GHC.IO.Encoding.UTF16.utf16_decode1_entry


==================== Asm code ====================
2018-03-16 16:03:53.992875797 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16_decode1_info
.type GHC.IO.Encoding.UTF16.utf16_decode1_info, @object
GHC.IO.Encoding.UTF16.utf16_decode1_info:
	.quad	GHC.IO.Encoding.UTF16.utf16_decode1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:03:53.993638657 UTC

.section .text
.align 8
_c8Jzq:
_c8Jzq:
	leaq block_c8Jzw_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8Jzw
_c8JzA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Jzq, .-_c8Jzq


==================== Asm code ====================
2018-03-16 16:03:53.994237574 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Jzq_info:
	.quad	_c8Jzq
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.994892354 UTC

.section .text
.align 8
_c8Jzw:
_c8Jzw:
	movq 31(%rbx),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.IO.Encoding.UTF16.$wutf16_decode_entry
	.size _c8Jzw, .-_c8Jzw


==================== Asm code ====================
2018-03-16 16:03:53.995487836 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Jzw_info:
	.quad	_c8Jzw
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:53.997625351 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16_decode_closure
.type GHC.IO.Encoding.UTF16.utf16_decode_closure, @object
GHC.IO.Encoding.UTF16.utf16_decode_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16_decode_info


==================== Asm code ====================
2018-03-16 16:03:53.998222519 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16_decode_entry
.type GHC.IO.Encoding.UTF16.utf16_decode_entry, @object
GHC.IO.Encoding.UTF16.utf16_decode_entry:
_c8JA2:
	jmp GHC.IO.Encoding.UTF16.utf16_decode1_entry
	.size GHC.IO.Encoding.UTF16.utf16_decode_entry, .-GHC.IO.Encoding.UTF16.utf16_decode_entry


==================== Asm code ====================
2018-03-16 16:03:53.998817269 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16_decode_info
.type GHC.IO.Encoding.UTF16.utf16_decode_info, @object
GHC.IO.Encoding.UTF16.utf16_decode_info:
	.quad	GHC.IO.Encoding.UTF16.utf16_decode_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:03:54.00035667 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF8_bytes
.type GHC.IO.Encoding.UTF16.mkUTF8_bytes, @object
GHC.IO.Encoding.UTF16.mkUTF8_bytes:
	.asciz "UTF-16"


==================== Asm code ====================
2018-03-16 16:03:54.002881828 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF7_closure
.type GHC.IO.Encoding.UTF16.mkUTF7_closure, @object
GHC.IO.Encoding.UTF16.mkUTF7_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF7_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.003633299 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF7_entry
.type GHC.IO.Encoding.UTF16.mkUTF7_entry, @object
GHC.IO.Encoding.UTF16.mkUTF7_entry:
_c8JAg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8JAh
_c8JAi:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8JAf
_c8JAe:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Encoding.UTF16.mkUTF8_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8JAh:
	jmp *-16(%r13)
_c8JAf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF16.mkUTF7_entry, .-GHC.IO.Encoding.UTF16.mkUTF7_entry


==================== Asm code ====================
2018-03-16 16:03:54.004276383 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF7_info
.type GHC.IO.Encoding.UTF16.mkUTF7_info, @object
GHC.IO.Encoding.UTF16.mkUTF7_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF7_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:54.015006005 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16_closure
.type GHC.IO.Encoding.UTF16.mkUTF16_closure, @object
GHC.IO.Encoding.UTF16.mkUTF16_closure:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.016386474 UTC

.section .text
.align 8
sat_s8IDA_entry:
_c8JAK:
	movq 6(%rbx),%rax
	movq %r14,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8IDA_entry, .-sat_s8IDA_entry


==================== Asm code ====================
2018-03-16 16:03:54.017033278 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IDA_info:
	.quad	sat_s8IDA_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:54.01764519 UTC

.section .text
.align 8
sat_s8IDw_entry:
_c8JAT:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8IDw_entry, .-sat_s8IDw_entry


==================== Asm code ====================
2018-03-16 16:03:54.018186371 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IDw_info:
	.quad	sat_s8IDw_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:03:54.018786312 UTC

.section .text
.align 8
sat_s8IDu_entry:
_c8JB1:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverEncode1_entry@gotpcrel(%rip)
	.size sat_s8IDu_entry, .-sat_s8IDu_entry


==================== Asm code ====================
2018-03-16 16:03:54.019357587 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IDu_info:
	.quad	sat_s8IDu_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8JgE_srt


==================== Asm code ====================
2018-03-16 16:03:54.020125235 UTC

.section .text
.align 8
sat_s8IDt_entry:
_c8JBc:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8JBd
_c8JBe:
	leaq block_c8JB9_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 5(%rbx),%rax
	movq %rsi,%rbx
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8JB9
_c8JBa:
	movq (%rbx),%rax
	jmp *(%rax)
_c8JBd:
	jmp *-8(%r13)
	.size sat_s8IDt_entry, .-sat_s8IDt_entry


==================== Asm code ====================
2018-03-16 16:03:54.020755699 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IDt_info:
	.quad	sat_s8IDt_entry
	.quad	1
	.quad	9
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:54.021464902 UTC

.section .text
.align 8
_c8JB9:
_c8JB9:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,(%rbp)
	movq 39(%rbx),%rax
	movq %rax,8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,16(%rbp)
	jmp GHC.IO.Encoding.UTF16.$wutf16_encode_entry
	.size _c8JB9, .-_c8JB9


==================== Asm code ====================
2018-03-16 16:03:54.022119887 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8JB9_info:
	.quad	_c8JB9
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.022796391 UTC

.section .text
.align 8
sat_s8IDC_entry:
_c8JBk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8JBl
_c8JBm:
	leaq block_c8JAA_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq GHC.Types.False_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
_c8JBl:
	jmp *-8(%r13)
	.size sat_s8IDC_entry, .-sat_s8IDC_entry


==================== Asm code ====================
2018-03-16 16:03:54.023404298 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IDC_info:
	.quad	sat_s8IDC_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8JgE_srt


==================== Asm code ====================
2018-03-16 16:03:54.024191696 UTC

.section .text
.align 8
_c8JAA:
_c8JAA:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c8JBp
_c8JBo:
	leaq sat_s8IDA_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %rbx,-96(%r12)
	leaq sat_s8IDw_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %rbx,-80(%r12)
	leaq sat_s8IDu_info(%rip),%rax
	movq %rax,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	leaq sat_s8IDt_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %rbx,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq -53(%r12),%rax
	movq %rax,-32(%r12)
	leaq -69(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF16.mkUTF2_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq -87(%r12),%rax
	movq %rax,-8(%r12)
	leaq -102(%r12),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8JBp:
	movq $112,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8JAA, .-_c8JAA


==================== Asm code ====================
2018-03-16 16:03:54.02494132 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8JAA_info:
	.quad	_c8JAA
	.quad	1
	.quad	4294967326
	.quad	S8JgE_srt


==================== Asm code ====================
2018-03-16 16:03:54.025774242 UTC

.section .text
.align 8
sat_s8IDc_entry:
_c8JBF:
	movq 6(%rbx),%rax
	movq %r14,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8IDc_entry, .-sat_s8IDc_entry


==================== Asm code ====================
2018-03-16 16:03:54.026374719 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IDc_info:
	.quad	sat_s8IDc_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:54.026968103 UTC

.section .text
.align 8
sat_s8ID8_entry:
_c8JBO:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8ID8_entry, .-sat_s8ID8_entry


==================== Asm code ====================
2018-03-16 16:03:54.027529779 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ID8_info:
	.quad	sat_s8ID8_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:03:54.028107007 UTC

.section .text
.align 8
sat_s8ID6_entry:
_c8JBW:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverDecode1_entry@gotpcrel(%rip)
	.size sat_s8ID6_entry, .-sat_s8ID6_entry


==================== Asm code ====================
2018-03-16 16:03:54.028667126 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ID6_info:
	.quad	sat_s8ID6_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8JgE_srt+8


==================== Asm code ====================
2018-03-16 16:03:54.029457629 UTC

.section .text
.align 8
sat_s8ID5_entry:
_c8JC7:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8JC8
_c8JC9:
	leaq block_c8JC4_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 5(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8JC4
_c8JC5:
	movq (%rbx),%rax
	jmp *(%rax)
_c8JC8:
	jmp *-8(%r13)
	.size sat_s8ID5_entry, .-sat_s8ID5_entry


==================== Asm code ====================
2018-03-16 16:03:54.030101545 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ID5_info:
	.quad	sat_s8ID5_entry
	.quad	1
	.quad	9
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:54.030751428 UTC

.section .text
.align 8
_c8JC4:
_c8JC4:
	movq 31(%rbx),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.IO.Encoding.UTF16.$wutf16_decode_entry
	.size _c8JC4, .-_c8JC4


==================== Asm code ====================
2018-03-16 16:03:54.031332564 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8JC4_info:
	.quad	_c8JC4
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:54.032002221 UTC

.section .text
.align 8
sat_s8IDe_entry:
_c8JCf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8JCg
_c8JCh:
	leaq block_c8JBv_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
_c8JCg:
	jmp *-8(%r13)
	.size sat_s8IDe_entry, .-sat_s8IDe_entry


==================== Asm code ====================
2018-03-16 16:03:54.032627979 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8IDe_info:
	.quad	sat_s8IDe_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8JgE_srt+8


==================== Asm code ====================
2018-03-16 16:03:54.033490333 UTC

.section .text
.align 8
_c8JBv:
_c8JBv:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c8JCk
_c8JCj:
	leaq sat_s8IDc_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %rbx,-96(%r12)
	leaq sat_s8ID8_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %rbx,-80(%r12)
	leaq sat_s8ID6_info(%rip),%rax
	movq %rax,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	leaq sat_s8ID5_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %rbx,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq -53(%r12),%rax
	movq %rax,-32(%r12)
	leaq -69(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF16.mkUTF2_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq -87(%r12),%rax
	movq %rax,-8(%r12)
	leaq -102(%r12),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8JCk:
	movq $112,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8JBv, .-_c8JBv


==================== Asm code ====================
2018-03-16 16:03:54.034278692 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8JBv_info:
	.quad	_c8JBv
	.quad	1
	.quad	4294967326
	.quad	S8JgE_srt+8


==================== Asm code ====================
2018-03-16 16:03:54.035039255 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.mkUTF16_entry
.type GHC.IO.Encoding.UTF16.mkUTF16_entry, @object
GHC.IO.Encoding.UTF16.mkUTF16_entry:
_c8JCm:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8JCq
_c8JCp:
	leaq sat_s8IDC_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s8IDe_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	movq GHC.IO.Encoding.Types.TextEncoding_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF16.mkUTF7_closure(%rip),%rax
	movq %rax,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8JCq:
	movq $64,904(%r13)
	leaq GHC.IO.Encoding.UTF16.mkUTF16_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF16.mkUTF16_entry, .-GHC.IO.Encoding.UTF16.mkUTF16_entry


==================== Asm code ====================
2018-03-16 16:03:54.035749729 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.mkUTF16_info
.type GHC.IO.Encoding.UTF16.mkUTF16_info, @object
GHC.IO.Encoding.UTF16.mkUTF16_info:
	.quad	GHC.IO.Encoding.UTF16.mkUTF16_entry
	.quad	0
	.quad	211119117434894
	.quad	4294967301
	.quad	S8JgE_srt


==================== Asm code ====================
2018-03-16 16:03:54.038416787 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16_closure
.type GHC.IO.Encoding.UTF16.utf16_closure, @object
GHC.IO.Encoding.UTF16.utf16_closure:
	.quad	GHC.IO.Encoding.UTF16.utf16_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:54.039214173 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF16.utf16_entry
.type GHC.IO.Encoding.UTF16.utf16_entry, @object
GHC.IO.Encoding.UTF16.utf16_entry:
_c8JEd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8JEe
_c8JEf:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8JEc
_c8JEb:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq GHC.IO.Encoding.Failure.ErrorOnCodingFailure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $-16,%rbp
	jmp GHC.IO.Encoding.UTF16.mkUTF16_entry
_c8JEe:
	jmp *-16(%r13)
_c8JEc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF16.utf16_entry, .-GHC.IO.Encoding.UTF16.utf16_entry


==================== Asm code ====================
2018-03-16 16:03:54.039907815 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF16.utf16_info
.type GHC.IO.Encoding.UTF16.utf16_info, @object
GHC.IO.Encoding.UTF16.utf16_info:
	.quad	GHC.IO.Encoding.UTF16.utf16_entry
	.quad	0
	.quad	4294967317
	.quad	S8JgE_srt+112


==================== Asm code ====================
2018-03-16 16:03:54.04208297 UTC

.section .data.rel.ro
.align 8
.align 1
S8JgE_srt:
	.quad	GHC.IO.Encoding.Failure.recoverEncode1_closure
	.quad	GHC.IO.Encoding.Failure.recoverDecode1_closure
	.quad	GHC.IO.Encoding.UTF16.mkUTF16le_closure
	.quad	GHC.IO.Encoding.UTF16.mkUTF16le2_closure
	.quad	GHC.IO.Encoding.Failure.recoverDecode2_closure
	.quad	lvl_r8G1B_closure
	.quad	lvl1_r8G1C_closure
	.quad	GHC.IO.Encoding.Failure.recoverEncode2_closure
	.quad	GHC.IO.Encoding.UTF16.utf16be2_closure
	.quad	lvl2_r8G1D_closure
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be_closure
	.quad	GHC.IO.Encoding.UTF16.mkUTF16be2_closure
	.quad	lvl3_r8G1E_closure
	.quad	lvl4_r8G1F_closure
	.quad	GHC.IO.Encoding.UTF16.mkUTF16_closure
	.quad	GHC.IO.Encoding.UTF16.mkUTF7_closure

