
==================== Asm code ====================
2018-03-16 16:03:36.946127304 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF8.$trModule4_bytes
.type GHC.IO.Encoding.UTF8.$trModule4_bytes, @object
GHC.IO.Encoding.UTF8.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:03:36.947989719 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.$trModule3_closure
.type GHC.IO.Encoding.UTF8.$trModule3_closure, @object
GHC.IO.Encoding.UTF8.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Encoding.UTF8.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:03:36.949739542 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF8.$trModule2_bytes
.type GHC.IO.Encoding.UTF8.$trModule2_bytes, @object
GHC.IO.Encoding.UTF8.$trModule2_bytes:
	.asciz "GHC.IO.Encoding.UTF8"


==================== Asm code ====================
2018-03-16 16:03:36.951526237 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.$trModule1_closure
.type GHC.IO.Encoding.UTF8.$trModule1_closure, @object
GHC.IO.Encoding.UTF8.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Encoding.UTF8.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:03:36.953397758 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.$trModule_closure
.type GHC.IO.Encoding.UTF8.$trModule_closure, @object
GHC.IO.Encoding.UTF8.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.IO.Encoding.UTF8.$trModule3_closure+1
	.quad	GHC.IO.Encoding.UTF8.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:36.985092554 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF1_closure
.type GHC.IO.Encoding.UTF8.mkUTF1_closure, @object
GHC.IO.Encoding.UTF8.mkUTF1_closure:
	.quad	GHC.IO.Encoding.UTF8.mkUTF1_info


==================== Asm code ====================
2018-03-16 16:03:36.986259044 UTC

.section .text
.align 8
sat_s8uYV_entry:
_c8wOg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8wOh
_c8wOi:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8wOk
_c8wOj:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8wOf
_c8wOe:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8wOk:
	movq $56,904(%r13)
_c8wOh:
	jmp *-16(%r13)
_c8wOf:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8uYV_entry, .-sat_s8uYV_entry


==================== Asm code ====================
2018-03-16 16:03:36.987043049 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8uYV_info:
	.quad	sat_s8uYV_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:36.987968382 UTC

.section .text
.align 8
sat_s8uZ3_entry:
_c8wOC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8wOD
_c8wOE:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8wOG
_c8wOF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8wOB
_c8wOA:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8wOG:
	movq $56,904(%r13)
_c8wOD:
	jmp *-16(%r13)
_c8wOB:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8uZ3_entry, .-sat_s8uZ3_entry


==================== Asm code ====================
2018-03-16 16:03:36.988760385 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8uZ3_info:
	.quad	sat_s8uZ3_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:36.989680218 UTC

.section .text
.align 8
sat_s8uZb_entry:
_c8wOY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8wOZ
_c8wP0:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8wP2
_c8wP1:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8wOX
_c8wOW:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8wP2:
	movq $56,904(%r13)
_c8wOZ:
	jmp *-16(%r13)
_c8wOX:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8uZb_entry, .-sat_s8uZb_entry


==================== Asm code ====================
2018-03-16 16:03:36.990479636 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8uZb_info:
	.quad	sat_s8uZb_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:36.991386145 UTC

.section .text
.align 8
sat_s8uZj_entry:
_c8wPk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8wPl
_c8wPm:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8wPo
_c8wPn:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8wPj
_c8wPi:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8wPo:
	movq $56,904(%r13)
_c8wPl:
	jmp *-16(%r13)
_c8wPj:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8uZj_entry, .-sat_s8uZj_entry


==================== Asm code ====================
2018-03-16 16:03:36.992216432 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8uZj_info:
	.quad	sat_s8uZj_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:36.993098245 UTC

.section .text
.align 8
sat_s8uZr_entry:
_c8wPG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8wPH
_c8wPI:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8wPK
_c8wPJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8wPF
_c8wPE:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8wPK:
	movq $56,904(%r13)
_c8wPH:
	jmp *-16(%r13)
_c8wPF:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8uZr_entry, .-sat_s8uZr_entry


==================== Asm code ====================
2018-03-16 16:03:36.993903677 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8uZr_info:
	.quad	sat_s8uZr_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:36.994756402 UTC

.section .text
.align 8
sat_s8v1h_entry:
_c8wQx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8wQy
_c8wQz:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8wQB
_c8wQA:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8wQw
_c8wQv:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8wQB:
	movq $56,904(%r13)
_c8wQy:
	jmp *-16(%r13)
_c8wQw:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v1h_entry, .-sat_s8v1h_entry


==================== Asm code ====================
2018-03-16 16:03:36.995575312 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v1h_info:
	.quad	sat_s8v1h_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:36.996451492 UTC

.section .text
.align 8
sat_s8v2i_entry:
_c8wR0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8wR1
_c8wR2:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8wR4
_c8wR3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8wQZ
_c8wQY:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8wR4:
	movq $56,904(%r13)
_c8wR1:
	jmp *-16(%r13)
_c8wQZ:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v2i_entry, .-sat_s8v2i_entry


==================== Asm code ====================
2018-03-16 16:03:36.997213636 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v2i_info:
	.quad	sat_s8v2i_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:36.9981789 UTC

.section .text
.align 8
sat_s8v2m_entry:
_c8wRi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8wRj
_c8wRk:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8wRm
_c8wRl:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8wRh
_c8wRg:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8wRm:
	movq $56,904(%r13)
_c8wRj:
	jmp *-16(%r13)
_c8wRh:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v2m_entry, .-sat_s8v2m_entry


==================== Asm code ====================
2018-03-16 16:03:36.998910773 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v2m_info:
	.quad	sat_s8v2m_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:36.999684914 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.mkUTF1_entry
.type GHC.IO.Encoding.UTF8.mkUTF1_entry, @object
GHC.IO.Encoding.UTF8.mkUTF1_entry:
_c8wRp:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8wRq
_c8wRr:
	movq $block_c8wNQ_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8wNQ
_c8wNR:
	movq (%rbx),%rax
	jmp *(%rax)
_c8wRq:
	movl $GHC.IO.Encoding.UTF8.mkUTF1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF8.mkUTF1_entry, .-GHC.IO.Encoding.UTF8.mkUTF1_entry


==================== Asm code ====================
2018-03-16 16:03:37.001947376 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF1_info
.type GHC.IO.Encoding.UTF8.mkUTF1_info, @object
GHC.IO.Encoding.UTF8.mkUTF1_info:
	.quad	GHC.IO.Encoding.UTF8.mkUTF1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:37.002724319 UTC

.section .text
.align 8
_c8wNQ:
_c8wNQ:
	movq $block_c8wNV_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8wNV
_c8wNW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8wNQ, .-_c8wNQ


==================== Asm code ====================
2018-03-16 16:03:37.003386194 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8wNQ_info:
	.quad	_c8wNQ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.004206313 UTC

.section .text
.align 8
_c8wNV:
_c8wNV:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8wRv
_c8wRu:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r8
	movq %r8,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	leaq -47(%r12),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8wPP
_c8wRv:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8wNV, .-_c8wNV


==================== Asm code ====================
2018-03-16 16:03:37.005009054 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8wNV_info:
	.quad	_c8wNV
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.007647407 UTC

.section .text
.align 8
_c8wPP:
_c8wPP:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8wRS
_c8wRR:
	movq 24(%rbp),%rax
	movq 40(%rbp),%rbx
	movq 48(%rbp),%rcx
	cmpq %rax,%rcx
	jl _c8wTe
_c8wTf:
	addq $-160,%r12
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8wPt
_c8wTe:
	movq 88(%rbp),%rdx
	cmpq %rdx,%rbx
	jl _c8wTb
_c8wTc:
	addq $-160,%r12
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8wP7
_c8wTb:
	movq 80(%rbp),%rsi
	movq 104(%rbp),%rdi
	movq 96(%rbp),%r8
	movq 64(%rbp),%r9
	movq 72(%rbp),%r10
	movq 56(%rbp),%r11
	movq 8(%rbp),%r14
	movq %rsi,64(%rsp)
	movq 16(%rbp),%rsi
	movq %rdi,72(%rsp)
	movq 32(%rbp),%rdi
	movq %r8,80(%rsp)
	movq 72(%rsp),%r8
	movl (%r8,%rbx,4),%r8d
	cmpq $127,%r8
	jg _c8wT8
_c8wT9:
	movb %r8b,(%r11,%rcx,1)
	addq $-160,%r12
	leaq 1(%rbx),%rax
	movq %rax,40(%rbp)
	leaq 1(%rcx),%rax
	movq %rax,48(%rbp)
	jmp _c8wPP
_c8wT8:
	cmpq $2047,%r8
	jg _c8wSW
_c8wT6:
	subq %rcx,%rax
	cmpq $2,%rax
	jge _c8wT4
_c8wT5:
	addq $-160,%r12
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8wOL
_c8wT4:
	movq %r8,%rax
	sarq $6,%rax
	addq $192,%rax
	movb %al,(%r11,%rcx,1)
	andl $63,%r8d
	leaq 128(%r8),%rax
	leaq 1(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	addq $-160,%r12
	leaq 1(%rbx),%rax
	movq %rax,40(%rbp)
	leaq 2(%rcx),%rax
	movq %rax,48(%rbp)
	jmp _c8wPP
_c8wSW:
	cmpq $65535,%r8
	jg _c8wS2
_c8wSU:
	cmpq $55296,%r8
	jl _c8wSr
_c8wST:
	cmpq $56319,%r8
	jg _c8wSQ
_c8wSS:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r14,-144(%r12)
	movq %rsi,-136(%r12)
	movq %r11,-128(%r12)
	movq %rax,-120(%r12)
	movq %rdi,-112(%r12)
	movq %rcx,-104(%r12)
	movq $sat_s8v2m_info,-96(%r12)
	movq 80(%rsp),%rax
	movq %rax,-80(%r12)
	movq %r9,-72(%r12)
	movq 64(%rsp),%rax
	movq %rax,-64(%r12)
	movq 72(%rsp),%rax
	movq %rax,-56(%r12)
	movq %r10,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rbx,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8wSQ:
	cmpq $56320,%r8
	jl _c8wSB
_c8wSO:
	cmpq $57343,%r8
	jg _c8wSL
_c8wSN:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r14,-144(%r12)
	movq %rsi,-136(%r12)
	movq %r11,-128(%r12)
	movq %rax,-120(%r12)
	movq %rdi,-112(%r12)
	movq %rcx,-104(%r12)
	movq $sat_s8v2i_info,-96(%r12)
	movq 80(%rsp),%rax
	movq %rax,-80(%r12)
	movq %r9,-72(%r12)
	movq 64(%rsp),%rax
	movq %rax,-64(%r12)
	movq 72(%rsp),%rax
	movq %rax,-56(%r12)
	movq %r10,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rbx,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8wSJ:
	addq $-160,%r12
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8wOp
_c8wSL:
	subq %rcx,%rax
	cmpq $3,%rax
	jl _c8wSJ
_c8wSI:
	movq %r8,%rax
	sarq $12,%rax
	addq $224,%rax
	movb %al,(%r11,%rcx,1)
	movq %r8,%rax
	sarq $6,%rax
	andl $63,%eax
	addq $128,%rax
	leaq 1(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	andl $63,%r8d
	leaq 128(%r8),%rax
	leaq 2(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	addq $-160,%r12
	leaq 1(%rbx),%rax
	movq %rax,40(%rbp)
	leaq 3(%rcx),%rax
	movq %rax,48(%rbp)
	jmp _c8wPP
_c8wSB:
	subq %rcx,%rax
	cmpq $3,%rax
	jl _c8wSJ
_c8wSy:
	movq %r8,%rax
	sarq $12,%rax
	addq $224,%rax
	movb %al,(%r11,%rcx,1)
	movq %r8,%rax
	sarq $6,%rax
	andl $63,%eax
	addq $128,%rax
	leaq 1(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	andl $63,%r8d
	leaq 128(%r8),%rax
	leaq 2(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	addq $-160,%r12
	leaq 1(%rbx),%rax
	movq %rax,40(%rbp)
	leaq 3(%rcx),%rax
	movq %rax,48(%rbp)
	jmp _c8wPP
_c8wSr:
	cmpq $56320,%r8
	jl _c8wSc
_c8wSp:
	cmpq $57343,%r8
	jg _c8wSm
_c8wSo:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r14,-144(%r12)
	movq %rsi,-136(%r12)
	movq %r11,-128(%r12)
	movq %rax,-120(%r12)
	movq %rdi,-112(%r12)
	movq %rcx,-104(%r12)
	movq $sat_s8v1h_info,-96(%r12)
	movq 80(%rsp),%rax
	movq %rax,-80(%r12)
	movq %r9,-72(%r12)
	movq 64(%rsp),%rax
	movq %rax,-64(%r12)
	movq 72(%rsp),%rax
	movq %rax,-56(%r12)
	movq %r10,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rbx,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8wSm:
	subq %rcx,%rax
	cmpq $3,%rax
	jl _c8wSJ
_c8wSj:
	movq %r8,%rax
	sarq $12,%rax
	addq $224,%rax
	movb %al,(%r11,%rcx,1)
	movq %r8,%rax
	sarq $6,%rax
	andl $63,%eax
	addq $128,%rax
	leaq 1(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	andl $63,%r8d
	leaq 128(%r8),%rax
	leaq 2(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	addq $-160,%r12
	leaq 1(%rbx),%rax
	movq %rax,40(%rbp)
	leaq 3(%rcx),%rax
	movq %rax,48(%rbp)
	jmp _c8wPP
_c8wSc:
	subq %rcx,%rax
	cmpq $3,%rax
	jl _c8wSJ
_c8wS9:
	movq %r8,%rax
	sarq $12,%rax
	addq $224,%rax
	movb %al,(%r11,%rcx,1)
	movq %r8,%rax
	sarq $6,%rax
	andl $63,%eax
	addq $128,%rax
	leaq 1(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	andl $63,%r8d
	leaq 128(%r8),%rax
	leaq 2(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	addq $-160,%r12
	leaq 1(%rbx),%rax
	movq %rax,40(%rbp)
	leaq 3(%rcx),%rax
	movq %rax,48(%rbp)
	jmp _c8wPP
_c8wS2:
	subq %rcx,%rax
	cmpq $4,%rax
	jge _c8wRZ
_c8wS0:
	addq $-160,%r12
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8wO3
_c8wRZ:
	movq %r8,%rax
	sarq $18,%rax
	addq $240,%rax
	movb %al,(%r11,%rcx,1)
	movq %r8,%rax
	sarq $12,%rax
	andl $63,%eax
	addq $128,%rax
	leaq 1(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	movq %r8,%rax
	sarq $6,%rax
	andl $63,%eax
	addq $128,%rax
	leaq 2(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	andl $63,%r8d
	leaq 128(%r8),%rax
	leaq 3(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	addq $-160,%r12
	leaq 1(%rbx),%rax
	movq %rax,40(%rbp)
	leaq 4(%rcx),%rax
	movq %rax,48(%rbp)
	jmp _c8wPP
_c8wRS:
	movq $160,904(%r13)
	movq $block_c8wPP_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8wPP, .-_c8wPP


==================== Asm code ====================
2018-03-16 16:03:37.010224796 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8wPP_info:
	.quad	_c8wPP
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.011277715 UTC

.section .text
.align 8
_c8wO3:
_c8wO3:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8wRz
_c8wRy:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8uYV_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8wRz:
	movq $160,904(%r13)
	movq $block_c8wO3_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8wO3, .-_c8wO3


==================== Asm code ====================
2018-03-16 16:03:37.012183902 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8wO3_info:
	.quad	_c8wO3
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.013065923 UTC

.section .text
.align 8
_c8wOp:
_c8wOp:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8wRD
_c8wRC:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8uZ3_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8wRD:
	movq $160,904(%r13)
	movq $block_c8wOp_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8wOp, .-_c8wOp


==================== Asm code ====================
2018-03-16 16:03:37.013983292 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8wOp_info:
	.quad	_c8wOp
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.014889746 UTC

.section .text
.align 8
_c8wOL:
_c8wOL:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8wRH
_c8wRG:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8uZb_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8wRH:
	movq $160,904(%r13)
	movq $block_c8wOL_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8wOL, .-_c8wOL


==================== Asm code ====================
2018-03-16 16:03:37.015772156 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8wOL_info:
	.quad	_c8wOL
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.016668445 UTC

.section .text
.align 8
_c8wP7:
_c8wP7:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8wRL
_c8wRK:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8uZj_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8wRL:
	movq $160,904(%r13)
	movq $block_c8wP7_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8wP7, .-_c8wP7


==================== Asm code ====================
2018-03-16 16:03:37.017580369 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8wP7_info:
	.quad	_c8wP7
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.018489912 UTC

.section .text
.align 8
_c8wPt:
_c8wPt:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8wRP
_c8wRO:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8uZr_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8wRP:
	movq $160,904(%r13)
	movq $block_c8wPt_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8wPt, .-_c8wPt


==================== Asm code ====================
2018-03-16 16:03:37.019363827 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8wPt_info:
	.quad	_c8wPt
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.135640532 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF4_closure
.type GHC.IO.Encoding.UTF8.mkUTF4_closure, @object
GHC.IO.Encoding.UTF8.mkUTF4_closure:
	.quad	GHC.IO.Encoding.UTF8.mkUTF4_info


==================== Asm code ====================
2018-03-16 16:03:37.13685263 UTC

.section .text
.align 8
sat_s8v3c_entry:
_c8x4E:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8x4F
_c8x4G:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8x4I
_c8x4H:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8x4D
_c8x4C:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8x4I:
	movq $56,904(%r13)
_c8x4F:
	jmp *-16(%r13)
_c8x4D:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v3c_entry, .-sat_s8v3c_entry


==================== Asm code ====================
2018-03-16 16:03:37.137721461 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v3c_info:
	.quad	sat_s8v3c_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.138738953 UTC

.section .text
.align 8
sat_s8v3k_entry:
_c8x50:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8x51
_c8x52:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8x54
_c8x53:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8x4Z
_c8x4Y:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8x54:
	movq $56,904(%r13)
_c8x51:
	jmp *-16(%r13)
_c8x4Z:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v3k_entry, .-sat_s8v3k_entry


==================== Asm code ====================
2018-03-16 16:03:37.139632582 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v3k_info:
	.quad	sat_s8v3k_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.140625606 UTC

.section .text
.align 8
sat_s8v3A_entry:
_c8x5y:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8x5z
_c8x5A:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8x5C
_c8x5B:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8x5x
_c8x5w:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8x5C:
	movq $56,904(%r13)
_c8x5z:
	jmp *-16(%r13)
_c8x5x:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v3A_entry, .-sat_s8v3A_entry


==================== Asm code ====================
2018-03-16 16:03:37.141520706 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v3A_info:
	.quad	sat_s8v3A_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.142748 UTC

.section .text
.align 8
sat_s8v3H_entry:
_c8x61:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8x62
_c8x63:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8x65
_c8x64:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8x60
_c8x5Z:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8x65:
	movq $56,904(%r13)
_c8x62:
	jmp *-16(%r13)
_c8x60:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v3H_entry, .-sat_s8v3H_entry


==================== Asm code ====================
2018-03-16 16:03:37.143484941 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v3H_info:
	.quad	sat_s8v3H_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.144367691 UTC

.section .text
.align 8
sat_s8v3M_entry:
_c8x6m:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8x6n
_c8x6o:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8x6q
_c8x6p:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8x6l
_c8x6k:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8x6q:
	movq $56,904(%r13)
_c8x6n:
	jmp *-16(%r13)
_c8x6l:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v3M_entry, .-sat_s8v3M_entry


==================== Asm code ====================
2018-03-16 16:03:37.145219658 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v3M_info:
	.quad	sat_s8v3M_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.146168428 UTC

.section .text
.align 8
sat_s8v3R_entry:
_c8x6H:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8x6I
_c8x6J:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8x6L
_c8x6K:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8x6G
_c8x6F:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8x6L:
	movq $56,904(%r13)
_c8x6I:
	jmp *-16(%r13)
_c8x6G:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v3R_entry, .-sat_s8v3R_entry


==================== Asm code ====================
2018-03-16 16:03:37.14701082 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v3R_info:
	.quad	sat_s8v3R_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.147901684 UTC

.section .text
.align 8
sat_s8v4k_entry:
_c8x7m:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8x7n
_c8x7o:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8x7q
_c8x7p:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8x7l
_c8x7k:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8x7q:
	movq $56,904(%r13)
_c8x7n:
	jmp *-16(%r13)
_c8x7l:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v4k_entry, .-sat_s8v4k_entry


==================== Asm code ====================
2018-03-16 16:03:37.148723486 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v4k_info:
	.quad	sat_s8v4k_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.149656476 UTC

.section .text
.align 8
sat_s8v4r_entry:
_c8x7P:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8x7Q
_c8x7R:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8x7T
_c8x7S:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8x7O
_c8x7N:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8x7T:
	movq $56,904(%r13)
_c8x7Q:
	jmp *-16(%r13)
_c8x7O:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v4r_entry, .-sat_s8v4r_entry


==================== Asm code ====================
2018-03-16 16:03:37.150472997 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v4r_info:
	.quad	sat_s8v4r_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.151421435 UTC

.section .text
.align 8
sat_s8v4w_entry:
_c8x8a:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8x8b
_c8x8c:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8x8e
_c8x8d:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8x89
_c8x88:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8x8e:
	movq $56,904(%r13)
_c8x8b:
	jmp *-16(%r13)
_c8x89:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v4w_entry, .-sat_s8v4w_entry


==================== Asm code ====================
2018-03-16 16:03:37.152208372 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v4w_info:
	.quad	sat_s8v4w_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.153113872 UTC

.section .text
.align 8
sat_s8v4B_entry:
_c8x8v:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8x8w
_c8x8x:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8x8z
_c8x8y:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8x8u
_c8x8t:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8x8z:
	movq $56,904(%r13)
_c8x8w:
	jmp *-16(%r13)
_c8x8u:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v4B_entry, .-sat_s8v4B_entry


==================== Asm code ====================
2018-03-16 16:03:37.154020153 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v4B_info:
	.quad	sat_s8v4B_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.154964185 UTC

.section .text
.align 8
sat_s8v4G_entry:
_c8x8Q:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8x8R
_c8x8S:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8x8U
_c8x8T:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8x8P
_c8x8O:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8x8U:
	movq $56,904(%r13)
_c8x8R:
	jmp *-16(%r13)
_c8x8P:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v4G_entry, .-sat_s8v4G_entry


==================== Asm code ====================
2018-03-16 16:03:37.155853801 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v4G_info:
	.quad	sat_s8v4G_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.156756978 UTC

.section .text
.align 8
sat_s8v4L_entry:
_c8x9b:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8x9c
_c8x9d:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8x9f
_c8x9e:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8x9a
_c8x99:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8x9f:
	movq $56,904(%r13)
_c8x9c:
	jmp *-16(%r13)
_c8x9a:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v4L_entry, .-sat_s8v4L_entry


==================== Asm code ====================
2018-03-16 16:03:37.157658048 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v4L_info:
	.quad	sat_s8v4L_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.159727742 UTC

.section .text
.align 8
sat_s8v54_entry:
_c8x9x:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8x9y
_c8x9z:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8x9B
_c8x9A:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8x9w
_c8x9v:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8x9B:
	movq $56,904(%r13)
_c8x9y:
	jmp *-16(%r13)
_c8x9w:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v54_entry, .-sat_s8v54_entry


==================== Asm code ====================
2018-03-16 16:03:37.160517556 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v54_info:
	.quad	sat_s8v54_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.16172624 UTC

.section .text
.align 8
sat_s8v5k_entry:
_c8xa5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xa6
_c8xa7:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xa9
_c8xa8:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xa4
_c8xa3:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xa9:
	movq $56,904(%r13)
_c8xa6:
	jmp *-16(%r13)
_c8xa4:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v5k_entry, .-sat_s8v5k_entry


==================== Asm code ====================
2018-03-16 16:03:37.162484563 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v5k_info:
	.quad	sat_s8v5k_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.163377273 UTC

.section .text
.align 8
sat_s8v5s_entry:
_c8xaE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xaF
_c8xaG:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xaI
_c8xaH:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xaD
_c8xaC:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xaI:
	movq $56,904(%r13)
_c8xaF:
	jmp *-16(%r13)
_c8xaD:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v5s_entry, .-sat_s8v5s_entry


==================== Asm code ====================
2018-03-16 16:03:37.164213575 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v5s_info:
	.quad	sat_s8v5s_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.165103649 UTC

.section .text
.align 8
sat_s8v5x_entry:
_c8xaZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xb0
_c8xb1:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xb3
_c8xb2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xaY
_c8xaX:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xb3:
	movq $56,904(%r13)
_c8xb0:
	jmp *-16(%r13)
_c8xaY:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v5x_entry, .-sat_s8v5x_entry


==================== Asm code ====================
2018-03-16 16:03:37.166457541 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v5x_info:
	.quad	sat_s8v5x_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.16738538 UTC

.section .text
.align 8
sat_s8v5C_entry:
_c8xbk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xbl
_c8xbm:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xbo
_c8xbn:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xbj
_c8xbi:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xbo:
	movq $56,904(%r13)
_c8xbl:
	jmp *-16(%r13)
_c8xbj:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v5C_entry, .-sat_s8v5C_entry


==================== Asm code ====================
2018-03-16 16:03:37.168140066 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v5C_info:
	.quad	sat_s8v5C_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.168990028 UTC

.section .text
.align 8
sat_s8v5H_entry:
_c8xbF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xbG
_c8xbH:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xbJ
_c8xbI:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xbE
_c8xbD:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xbJ:
	movq $56,904(%r13)
_c8xbG:
	jmp *-16(%r13)
_c8xbE:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v5H_entry, .-sat_s8v5H_entry


==================== Asm code ====================
2018-03-16 16:03:37.169823777 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v5H_info:
	.quad	sat_s8v5H_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.170720574 UTC

.section .text
.align 8
sat_s8v5Z_entry:
_c8xc1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xc2
_c8xc3:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xc5
_c8xc4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xc0
_c8xbZ:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xc5:
	movq $56,904(%r13)
_c8xc2:
	jmp *-16(%r13)
_c8xc0:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v5Z_entry, .-sat_s8v5Z_entry


==================== Asm code ====================
2018-03-16 16:03:37.171485304 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v5Z_info:
	.quad	sat_s8v5Z_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.172431125 UTC

.section .text
.align 8
sat_s8v67_entry:
_c8xcn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xco
_c8xcp:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xcr
_c8xcq:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xcm
_c8xcl:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xcr:
	movq $56,904(%r13)
_c8xco:
	jmp *-16(%r13)
_c8xcm:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v67_entry, .-sat_s8v67_entry


==================== Asm code ====================
2018-03-16 16:03:37.173218377 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v67_info:
	.quad	sat_s8v67_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.174323114 UTC

.section .text
.align 8
sat_s8v6f_entry:
_c8xcJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xcK
_c8xcL:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xcN
_c8xcM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xcI
_c8xcH:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xcN:
	movq $56,904(%r13)
_c8xcK:
	jmp *-16(%r13)
_c8xcI:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v6f_entry, .-sat_s8v6f_entry


==================== Asm code ====================
2018-03-16 16:03:37.175189488 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v6f_info:
	.quad	sat_s8v6f_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.176104037 UTC

.section .text
.align 8
sat_s8v6n_entry:
_c8xd5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xd6
_c8xd7:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xd9
_c8xd8:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xd4
_c8xd3:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xd9:
	movq $56,904(%r13)
_c8xd6:
	jmp *-16(%r13)
_c8xd4:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v6n_entry, .-sat_s8v6n_entry


==================== Asm code ====================
2018-03-16 16:03:37.176892347 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v6n_info:
	.quad	sat_s8v6n_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.177847992 UTC

.section .text
.align 8
sat_s8v6v_entry:
_c8xdr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xds
_c8xdt:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xdv
_c8xdu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xdq
_c8xdp:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xdv:
	movq $56,904(%r13)
_c8xds:
	jmp *-16(%r13)
_c8xdq:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v6v_entry, .-sat_s8v6v_entry


==================== Asm code ====================
2018-03-16 16:03:37.178672228 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v6v_info:
	.quad	sat_s8v6v_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.179538654 UTC

.section .text
.align 8
sat_s8v7v_entry:
_c8xeY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xeZ
_c8xf0:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xf2
_c8xf1:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xeX
_c8xeW:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xf2:
	movq $56,904(%r13)
_c8xeZ:
	jmp *-16(%r13)
_c8xeX:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v7v_entry, .-sat_s8v7v_entry


==================== Asm code ====================
2018-03-16 16:03:37.180313633 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v7v_info:
	.quad	sat_s8v7v_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.18119614 UTC

.section .text
.align 8
sat_s8v7A_entry:
_c8xfj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xfk
_c8xfl:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xfn
_c8xfm:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xfi
_c8xfh:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xfn:
	movq $56,904(%r13)
_c8xfk:
	jmp *-16(%r13)
_c8xfi:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v7A_entry, .-sat_s8v7A_entry


==================== Asm code ====================
2018-03-16 16:03:37.182031636 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v7A_info:
	.quad	sat_s8v7A_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.182898935 UTC

.section .text
.align 8
sat_s8v7F_entry:
_c8xfE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xfF
_c8xfG:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xfI
_c8xfH:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xfD
_c8xfC:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xfI:
	movq $56,904(%r13)
_c8xfF:
	jmp *-16(%r13)
_c8xfD:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v7F_entry, .-sat_s8v7F_entry


==================== Asm code ====================
2018-03-16 16:03:37.183649843 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v7F_info:
	.quad	sat_s8v7F_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.184541555 UTC

.section .text
.align 8
sat_s8v7K_entry:
_c8xfZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xg0
_c8xg1:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xg3
_c8xg2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xfY
_c8xfX:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xg3:
	movq $56,904(%r13)
_c8xg0:
	jmp *-16(%r13)
_c8xfY:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v7K_entry, .-sat_s8v7K_entry


==================== Asm code ====================
2018-03-16 16:03:37.185756026 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v7K_info:
	.quad	sat_s8v7K_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.186663902 UTC

.section .text
.align 8
sat_s8v7P_entry:
_c8xgk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xgl
_c8xgm:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xgo
_c8xgn:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xgj
_c8xgi:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xgo:
	movq $56,904(%r13)
_c8xgl:
	jmp *-16(%r13)
_c8xgj:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v7P_entry, .-sat_s8v7P_entry


==================== Asm code ====================
2018-03-16 16:03:37.187486341 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v7P_info:
	.quad	sat_s8v7P_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.188378377 UTC

.section .text
.align 8
sat_s8v7U_entry:
_c8xgF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xgG
_c8xgH:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xgJ
_c8xgI:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xgE
_c8xgD:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xgJ:
	movq $56,904(%r13)
_c8xgG:
	jmp *-16(%r13)
_c8xgE:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v7U_entry, .-sat_s8v7U_entry


==================== Asm code ====================
2018-03-16 16:03:37.189227572 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v7U_info:
	.quad	sat_s8v7U_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.190131491 UTC

.section .text
.align 8
sat_s8v7Z_entry:
_c8xh0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xh1
_c8xh2:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xh4
_c8xh3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xgZ
_c8xgY:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xh4:
	movq $56,904(%r13)
_c8xh1:
	jmp *-16(%r13)
_c8xgZ:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v7Z_entry, .-sat_s8v7Z_entry


==================== Asm code ====================
2018-03-16 16:03:37.190928962 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v7Z_info:
	.quad	sat_s8v7Z_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.191808187 UTC

.section .text
.align 8
sat_s8v8R_entry:
_c8xi3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xi4
_c8xi5:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xi7
_c8xi6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xi2
_c8xi1:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xi7:
	movq $56,904(%r13)
_c8xi4:
	jmp *-16(%r13)
_c8xi2:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v8R_entry, .-sat_s8v8R_entry


==================== Asm code ====================
2018-03-16 16:03:37.192594094 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v8R_info:
	.quad	sat_s8v8R_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.193526247 UTC

.section .text
.align 8
sat_s8v8W_entry:
_c8xio:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xip
_c8xiq:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xis
_c8xir:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xin
_c8xim:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xis:
	movq $56,904(%r13)
_c8xip:
	jmp *-16(%r13)
_c8xin:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v8W_entry, .-sat_s8v8W_entry


==================== Asm code ====================
2018-03-16 16:03:37.194294369 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v8W_info:
	.quad	sat_s8v8W_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.195199571 UTC

.section .text
.align 8
sat_s8v91_entry:
_c8xiJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xiK
_c8xiL:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xiN
_c8xiM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xiI
_c8xiH:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xiN:
	movq $56,904(%r13)
_c8xiK:
	jmp *-16(%r13)
_c8xiI:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v91_entry, .-sat_s8v91_entry


==================== Asm code ====================
2018-03-16 16:03:37.196000478 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v91_info:
	.quad	sat_s8v91_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.197829472 UTC

.section .text
.align 8
sat_s8v96_entry:
_c8xj4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xj5
_c8xj6:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xj8
_c8xj7:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xj3
_c8xj2:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xj8:
	movq $56,904(%r13)
_c8xj5:
	jmp *-16(%r13)
_c8xj3:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v96_entry, .-sat_s8v96_entry


==================== Asm code ====================
2018-03-16 16:03:37.198630183 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v96_info:
	.quad	sat_s8v96_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.199477851 UTC

.section .text
.align 8
sat_s8v9b_entry:
_c8xjp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xjq
_c8xjr:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xjt
_c8xjs:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xjo
_c8xjn:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xjt:
	movq $56,904(%r13)
_c8xjq:
	jmp *-16(%r13)
_c8xjo:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v9b_entry, .-sat_s8v9b_entry


==================== Asm code ====================
2018-03-16 16:03:37.200253792 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v9b_info:
	.quad	sat_s8v9b_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.201126329 UTC

.section .text
.align 8
sat_s8v9U_entry:
_c8xjO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xjP
_c8xjQ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xjS
_c8xjR:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8xjN
_c8xjM:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xjS:
	movq $56,904(%r13)
_c8xjP:
	jmp *-16(%r13)
_c8xjN:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8v9U_entry, .-sat_s8v9U_entry


==================== Asm code ====================
2018-03-16 16:03:37.20196324 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8v9U_info:
	.quad	sat_s8v9U_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:37.202812515 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.mkUTF4_entry
.type GHC.IO.Encoding.UTF8.mkUTF4_entry, @object
GHC.IO.Encoding.UTF8.mkUTF4_entry:
_c8xjV:
	leaq -144(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xjW
_c8xjX:
	movq $block_c8x4e_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8x4e
_c8x4f:
	movq (%rbx),%rax
	jmp *(%rax)
_c8xjW:
	movl $GHC.IO.Encoding.UTF8.mkUTF4_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF8.mkUTF4_entry, .-GHC.IO.Encoding.UTF8.mkUTF4_entry


==================== Asm code ====================
2018-03-16 16:03:37.203470755 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF4_info
.type GHC.IO.Encoding.UTF8.mkUTF4_info, @object
GHC.IO.Encoding.UTF8.mkUTF4_info:
	.quad	GHC.IO.Encoding.UTF8.mkUTF4_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:37.204230775 UTC

.section .text
.align 8
_c8x4e:
_c8x4e:
	movq $block_c8x4j_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8x4j
_c8x4k:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8x4e, .-_c8x4e


==================== Asm code ====================
2018-03-16 16:03:37.204905363 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8x4e_info:
	.quad	_c8x4e
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.205752446 UTC

.section .text
.align 8
_c8x4j:
_c8x4j:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xk1
_c8xk0:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r8
	movq %r8,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	leaq -47(%r12),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8xdA
_c8xk1:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8x4j, .-_c8x4j


==================== Asm code ====================
2018-03-16 16:03:37.206499545 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8x4j_info:
	.quad	_c8x4j
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.210802517 UTC

.section .text
.align 8
_c8xdA:
_c8xdA:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8xoG
_c8xoF:
	movq 24(%rbp),%rax
	movq 40(%rbp),%rbx
	movq 48(%rbp),%rcx
	cmpq %rax,%rcx
	jl _c8xuH
_c8xuI:
	addq $-160,%r12
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8xde
_u8xxA:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	movq %rdx,(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp _c8xap
_c8xnB:
	cmpq $128,%rax
	jb _u8xxy
_c8xnA:
	cmpq $159,%rax
	ja _u8xxA
_u8xxz:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	jmp _c8x9T
_u8xxy:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	movq %rdx,(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp _c8xap
_s8v5o:
	cmpq $237,%rdx
	je _c8xnB
_u8xxx:
	movq %rax,-8(%rbp)
	movq %rdx,(%rbp)
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	addq $-16,%rbp
	jmp _c8xap
_s8v5n:
	cmpq $225,%rdx
	jb _s8v5o
_c8xo1:
	cmpq $236,%rdx
	ja _s8v5o
_c8xo0:
	cmpq $128,%rax
	jb _s8v5o
_c8xnZ:
	cmpq $191,%rax
	ja _s8v5o
_u8xxw:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	jmp _c8x9T
_u8xwP:
	cmpq $2,%rdx
	jne _c8xrp
_c8xtI:
	leaq 1(%rbx),%rax
	movq 72(%rsp),%rdx
	movzbl (%rdx,%rax,1),%eax
	movq %r8,%rdx
	cmpq $224,%r8
	jne _s8v5n
_c8xoj:
	cmpq $160,%rax
	jb _s8v5n
_c8xoi:
	cmpq $191,%rax
	ja _s8v5n
_u8xxv:
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8x9T
_u8xxs:
	movq %r8,(%rbp)
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8xhO
_c8xsp:
	cmpq $128,%rax
	jb _u8xxo
_c8xso:
	cmpq $159,%rax
	ja _u8xxp
_c8xsn:
	cmpq $128,%rbx
	jb _u8xxq
_c8xsm:
	cmpq $191,%rbx
	ja _u8xxs
_u8xxr:
	movq %r8,(%rbp)
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp _s8v8w
_u8xxq:
	movq %r8,(%rbp)
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8xhO
_u8xxp:
	movq %r8,(%rbp)
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8xhO
_u8xxo:
	movq %r8,(%rbp)
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8xhO
_s8v8N:
	cmpq $237,%r8
	je _c8xsp
_u8xxn:
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %r8,(%rbp)
	addq $-24,%rbp
	jmp _c8xhO
_s8v8M:
	cmpq $225,%r8
	jb _s8v8N
_c8xt3:
	cmpq $236,%r8
	ja _s8v8N
_c8xt2:
	cmpq $128,%rax
	jb _s8v8N
_c8xt1:
	cmpq $191,%rax
	ja _s8v8N
_c8xt0:
	cmpq $128,%rbx
	jb _s8v8N
_c8xsZ:
	cmpq $191,%rbx
	ja _s8v8N
_u8xxm:
	movq %r8,(%rbp)
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp _s8v8w
_c8xrp:
	leaq 1(%rbx),%rax
	movq 72(%rsp),%rcx
	movzbl (%rcx,%rax,1),%eax
	addq $2,%rbx
	movzbl (%rcx,%rbx,1),%ebx
	cmpq $224,%r8
	jne _s8v8M
_c8xtz:
	cmpq $160,%rax
	jb _s8v8M
_c8xty:
	cmpq $191,%rax
	ja _s8v8M
_c8xtx:
	cmpq $128,%rbx
	jb _s8v8M
_c8xtw:
	cmpq $191,%rbx
	ja _s8v8M
_u8xxl:
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %r8,(%rbp)
	addq $-16,%rbp
	jmp _s8v8w
_u8xxi:
	movq %r8,(%rbp)
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-32,%rbp
	jmp _c8xeK
_s8v7r:
	cmpq $241,%r8
	jb _u8xxa
_c8xqg:
	cmpq $243,%r8
	ja _u8xxb
_c8xqf:
	cmpq $128,%rax
	jb _u8xxc
_c8xqe:
	cmpq $191,%rax
	ja _u8xxd
_c8xqd:
	cmpq $128,%rdx
	jb _u8xxe
_c8xqc:
	cmpq $191,%rdx
	ja _u8xxf
_c8xqb:
	cmpq $128,%rbx
	jb _u8xxg
_c8xqa:
	cmpq $191,%rbx
	ja _u8xxi
_u8xxh:
	movq %r8,(%rbp)
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp _s8v77
_u8xxg:
	movq %r8,(%rbp)
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-32,%rbp
	jmp _c8xeK
_u8xxf:
	movq %r8,(%rbp)
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-32,%rbp
	jmp _c8xeK
_u8xxe:
	movq %r8,(%rbp)
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-32,%rbp
	jmp _c8xeK
_u8xxd:
	movq %r8,(%rbp)
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-32,%rbp
	jmp _c8xeK
_u8xxc:
	movq %r8,(%rbp)
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-32,%rbp
	jmp _c8xeK
_u8xxb:
	movq %r8,(%rbp)
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-32,%rbp
	jmp _c8xeK
_u8xxa:
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %r8,(%rbp)
	addq $-32,%rbp
	jmp _c8xeK
_c8xoN:
	leaq 1(%rbx),%rax
	movq 72(%rsp),%rcx
	movzbl (%rcx,%rax,1),%eax
	leaq 2(%rbx),%rdx
	movzbl (%rcx,%rdx,1),%edx
	addq $3,%rbx
	movzbl (%rcx,%rbx,1),%ebx
	cmpq $240,%r8
	jne _s8v7r
_c8xr0:
	cmpq $144,%rax
	jb _s8v7r
_c8xqZ:
	cmpq $191,%rax
	ja _s8v7r
_c8xqY:
	cmpq $128,%rdx
	jb _s8v7r
_c8xqX:
	cmpq $191,%rdx
	ja _s8v7r
_c8xqW:
	cmpq $128,%rbx
	jb _s8v7r
_c8xqV:
	cmpq $191,%rbx
	ja _s8v7r
_u8xx9:
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %r8,(%rbp)
	addq $-24,%rbp
	jmp _s8v77
_u8xx7:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	movq %rsi,(%rbp)
	movq %rax,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8x7B
_s8v4n:
	cmpq $241,%rsi
	jb _u8xx1
_c8xmj:
	cmpq $243,%rsi
	ja _u8xx2
_c8xmi:
	cmpq $128,%rax
	jb _u8xx3
_c8xmh:
	cmpq $191,%rax
	ja _u8xx4
_c8xmg:
	cmpq $128,%rdx
	jb _u8xx5
_c8xmf:
	cmpq $191,%rdx
	ja _u8xx7
_u8xx6:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	jmp _c8x7a
_u8xx5:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	movq %rsi,(%rbp)
	movq %rax,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8x7B
_u8xx4:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	movq %rsi,(%rbp)
	movq %rax,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8x7B
_u8xx3:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	movq %rsi,(%rbp)
	movq %rax,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8x7B
_u8xx2:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	movq %rsi,(%rbp)
	movq %rax,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8x7B
_u8xx1:
	movq %rax,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rsi,(%rbp)
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	addq $-24,%rbp
	jmp _c8x7B
_s8v6M:
	cmpq $240,%r8
	jb _c8xoL
_c8xrj:
	subq %rbx,%rdx
	cmpq $3,%rdx
	jl _u8xwM
_u8xwO:
	cmpq $4,%rdx
	jge _c8xoN
_c8xrf:
	leaq 1(%rbx),%rax
	movq 72(%rsp),%rdx
	movzbl (%rdx,%rax,1),%eax
	leaq 2(%rbx),%rsi
	movzbl (%rdx,%rsi,1),%edx
	movq %r8,%rsi
	cmpq $240,%r8
	jne _s8v4n
_c8xmP:
	cmpq $144,%rax
	jb _s8v4n
_c8xmO:
	cmpq $191,%rax
	ja _s8v4n
_c8xmN:
	cmpq $128,%rdx
	jb _s8v4n
_c8xmM:
	cmpq $191,%rdx
	ja _s8v4n
_u8xx0:
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8x7a
_u8xwY:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	movq %rdx,(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp _c8x5N
_s8v3D:
	cmpq $241,%rdx
	jb _u8xwU
_c8xkU:
	cmpq $243,%rdx
	ja _u8xwV
_c8xkT:
	cmpq $128,%rax
	jb _u8xwW
_c8xkS:
	cmpq $191,%rax
	ja _u8xwY
_u8xwX:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	jmp _c8x5m
_u8xwW:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	movq %rdx,(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp _c8x5N
_u8xwV:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	movq %rdx,(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp _c8x5N
_u8xwU:
	movq %rax,-8(%rbp)
	movq %rdx,(%rbp)
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	addq $-16,%rbp
	jmp _c8x5N
_u8xwM:
	cmpq $2,%rdx
	jl _u8xwN
_c8xr9:
	leaq 1(%rbx),%rax
	movq 72(%rsp),%rdx
	movzbl (%rdx,%rax,1),%eax
	movq %r8,%rdx
	cmpq $240,%r8
	jne _s8v3D
_c8xlc:
	cmpq $144,%rax
	jb _s8v3D
_c8xlb:
	cmpq $191,%rax
	ja _s8v3D
_u8xwT:
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8x5m
_c8xuH:
	movq 88(%rbp),%rdx
	cmpq %rdx,%rbx
	jl _c8xuE
_c8xuF:
	addq $-160,%r12
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8xcS
_c8xuE:
	movq 80(%rbp),%rsi
	movq 104(%rbp),%rdi
	movq 96(%rbp),%r8
	movq 64(%rbp),%r9
	movq 72(%rbp),%r10
	movq 56(%rbp),%r11
	movq 8(%rbp),%r14
	movq %rsi,64(%rsp)
	movq 16(%rbp),%rsi
	movq %rdi,72(%rsp)
	movq 32(%rbp),%rdi
	movq %r8,80(%rsp)
	movq 72(%rsp),%r8
	movzbl (%r8,%rbx,1),%r8d
	cmpq $127,%r8
	ja _c8xuB
_c8xuC:
	movl %r8d,(%r11,%rcx,4)
	addq $-160,%r12
	leaq 1(%rbx),%rax
	movq %rax,40(%rbp)
	leaq 1(%rcx),%rax
	movq %rax,48(%rbp)
	jmp _c8xdA
_c8xuB:
	cmpq $192,%r8
	jb _c8xuw
_c8xuz:
	cmpq $193,%r8
	ja _c8xuw
_c8xuy:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r14,-144(%r12)
	movq %rsi,-136(%r12)
	movq %r11,-128(%r12)
	movq %rax,-120(%r12)
	movq %rdi,-112(%r12)
	movq %rcx,-104(%r12)
	movq $sat_s8v9U_info,-96(%r12)
	movq 80(%rsp),%rax
	movq %rax,-80(%r12)
	movq %r9,-72(%r12)
	movq 64(%rsp),%rax
	movq %rax,-64(%r12)
	movq 72(%rsp),%rax
	movq %rax,-56(%r12)
	movq %r10,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rbx,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xuw:
	addq $-160,%r12
	cmpq $194,%r8
	jb _s8v6L
_c8xus:
	cmpq $223,%r8
	ja _s8v6L
_c8xur:
	subq %rbx,%rdx
	cmpq $2,%rdx
	jge _c8xup
_c8xuq:
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8xcw
_c8xup:
	leaq 1(%rbx),%rax
	movq 72(%rsp),%rdx
	movzbl (%rdx,%rax,1),%eax
	cmpq $128,%rax
	jae _c8xum
_c8xun:
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8xca
_c8xum:
	cmpq $192,%rax
	jb _c8xuj
_c8xuk:
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8xbO
_c8xuj:
	addq $-128,%rax
	leaq -192(%r8),%rdx
	shlq $6,%rdx
	addq %rax,%rdx
	movl %edx,(%r11,%rcx,4)
	leaq 2(%rbx),%rax
	movq %rax,40(%rbp)
	leaq 1(%rcx),%rax
	movq %rax,48(%rbp)
	jmp _c8xdA
_s8v6L:
	cmpq $224,%r8
	jb _s8v6M
_c8xtN:
	cmpq $239,%r8
	ja _s8v6M
_c8xtM:
	subq %rbx,%rdx
	cmpq $1,%rdx
	jne _u8xwP
_c8xtC:
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8x9k
_u8xwN:
	cmpq $1,%rdx
	jl _c8xoN
_c8xr3:
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8x4N
_c8xoL:
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8x4r
_c8xoG:
	movq $160,904(%r13)
	movq $block_c8xdA_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8xdA, .-_c8xdA


==================== Asm code ====================
2018-03-16 16:03:37.214241592 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8xdA_info:
	.quad	_c8xdA
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.2150981 UTC

.section .text
.align 8
_c8x4r:
_c8x4r:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8xk5
_c8xk4:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8v3c_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xk5:
	movq $160,904(%r13)
	movq $block_c8x4r_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8x4r, .-_c8x4r


==================== Asm code ====================
2018-03-16 16:03:37.215908011 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8x4r_info:
	.quad	_c8x4r
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.216756171 UTC

.section .text
.align 8
_c8x4N:
_c8x4N:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8xk9
_c8xk8:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8v3k_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xk9:
	movq $160,904(%r13)
	movq $block_c8x4N_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8x4N, .-_c8x4N


==================== Asm code ====================
2018-03-16 16:03:37.21765966 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8x4N_info:
	.quad	_c8x4N
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.218933214 UTC

.section .text
.align 8
_c8x5N:
_c8x5N:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8xki
_c8xkh:
	movq 96(%rbp),%rax
	movq 120(%rbp),%rbx
	movq 112(%rbp),%rcx
	movq 80(%rbp),%rdx
	movq 88(%rbp),%rsi
	movq 104(%rbp),%rdi
	movq 72(%rbp),%r8
	movq 24(%rbp),%r9
	movq 32(%rbp),%r10
	movq 40(%rbp),%r11
	movq 48(%rbp),%r14
	movq %rax,64(%rsp)
	movq 64(%rbp),%rax
	movq %rbx,72(%rsp)
	movq 56(%rbp),%rbx
	cmpq $244,16(%rbp)
	je _c8xku
_c8xkl:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v3H_info,-96(%r12)
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xku:
	movq %rcx,80(%rsp)
	movq 8(%rbp),%rcx
	cmpq $128,%rcx
	jb _c8xko
_c8xkt:
	cmpq $143,%rcx
	ja _c8xkr
_c8xks:
	addq $-160,%r12
	addq $16,%rbp
	jmp _c8x5m
_c8xkr:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v3R_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xko:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v3M_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xki:
	movq $160,904(%r13)
	movq $block_c8x5N_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8x5N, .-_c8x5N


==================== Asm code ====================
2018-03-16 16:03:37.220216393 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8x5N_info:
	.quad	_c8x5N
	.quad	1408207
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.221105275 UTC

.section .text
.align 8
_c8x5m:
_c8x5m:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8xke
_c8xkd:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8v3A_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xke:
	movq $160,904(%r13)
	movq $block_c8x5m_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8x5m, .-_c8x5m


==================== Asm code ====================
2018-03-16 16:03:37.222232539 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8x5m_info:
	.quad	_c8x5m
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.223742389 UTC

.section .text
.align 8
_c8x7B:
_c8x7B:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8xll
_c8xlk:
	movq 104(%rbp),%rax
	movq 128(%rbp),%rbx
	movq 120(%rbp),%rcx
	movq 88(%rbp),%rdx
	movq 96(%rbp),%rsi
	movq 112(%rbp),%rdi
	movq 80(%rbp),%r8
	movq 32(%rbp),%r9
	movq 40(%rbp),%r10
	movq 48(%rbp),%r11
	movq 56(%rbp),%r14
	movq %rax,64(%rsp)
	movq 72(%rbp),%rax
	movq %rbx,72(%rsp)
	movq 64(%rbp),%rbx
	cmpq $244,24(%rbp)
	je _c8xlF
_c8xlo:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v4r_info,-96(%r12)
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xlF:
	movq %rcx,80(%rsp)
	movq 8(%rbp),%rcx
	cmpq $128,%rcx
	jb _c8xlr
_c8xlE:
	cmpq $143,%rcx
	ja _c8xlu
_c8xlD:
	movq 16(%rbp),%rcx
	cmpq $128,%rcx
	jb _c8xlx
_c8xlC:
	cmpq $191,%rcx
	ja _c8xlA
_c8xlB:
	addq $-160,%r12
	addq $24,%rbp
	jmp _c8x7a
_c8xlA:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v4L_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xlx:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v4G_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xlu:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v4B_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xlr:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v4w_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xll:
	movq $160,904(%r13)
	movq $block_c8x7B_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8x7B, .-_c8x7B


==================== Asm code ====================
2018-03-16 16:03:37.225358379 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8x7B_info:
	.quad	_c8x7B
	.quad	2816464
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.226230338 UTC

.section .text
.align 8
_c8x7a:
_c8x7a:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8xlh
_c8xlg:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8v4k_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xlh:
	movq $160,904(%r13)
	movq $block_c8x7a_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8x7a, .-_c8x7a


==================== Asm code ====================
2018-03-16 16:03:37.227059158 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8x7a_info:
	.quad	_c8x7a
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.228965889 UTC

.section .text
.align 8
_c8xeK:
_c8xeK:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8xoW
_c8xoV:
	movq 112(%rbp),%rax
	movq 136(%rbp),%rbx
	movq 128(%rbp),%rcx
	movq 96(%rbp),%rdx
	movq 104(%rbp),%rsi
	movq 120(%rbp),%rdi
	movq 88(%rbp),%r8
	movq 40(%rbp),%r9
	movq 48(%rbp),%r10
	movq 56(%rbp),%r11
	movq 64(%rbp),%r14
	movq %rax,64(%rsp)
	movq 72(%rbp),%rax
	movq %rbx,72(%rsp)
	movq 80(%rbp),%rbx
	cmpq $244,32(%rbp)
	je _c8xpo
_c8xoZ:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v7v_info,-96(%r12)
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xpo:
	movq %rcx,80(%rsp)
	movq 8(%rbp),%rcx
	cmpq $128,%rcx
	jb _c8xp2
_c8xpn:
	cmpq $143,%rcx
	ja _c8xp5
_c8xpm:
	movq 16(%rbp),%rcx
	cmpq $128,%rcx
	jb _c8xp8
_c8xpl:
	cmpq $191,%rcx
	ja _c8xpb
_c8xpk:
	movq 24(%rbp),%rcx
	cmpq $128,%rcx
	jb _c8xpe
_c8xpj:
	cmpq $191,%rcx
	ja _c8xph
_c8xpi:
	addq $-160,%r12
	addq $8,%rbp
	jmp _s8v77
_c8xph:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v7Z_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xpe:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v7U_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xpb:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v7P_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xp8:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v7K_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xp5:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v7F_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xp2:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v7A_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xoW:
	movq $160,904(%r13)
	movq $block_c8xeK_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8xeK, .-_c8xeK


==================== Asm code ====================
2018-03-16 16:03:37.231209954 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8xeK_info:
	.quad	_c8xeK
	.quad	5632977
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.23195415 UTC

.section .text
.align 8
_s8v77:
_s8v77:
	movq 32(%rbp),%rax
	movq 64(%rbp),%rax
	movq 72(%rbp),%rbx
	movq 16(%rbp),%rcx
	addq $-128,%rcx
	movq 8(%rbp),%rdx
	addq $-128,%rdx
	shlq $6,%rdx
	addq %rcx,%rdx
	movq (%rbp),%rcx
	addq $-128,%rcx
	shlq $12,%rcx
	addq %rdx,%rcx
	movq 24(%rbp),%rdx
	addq $-240,%rdx
	shlq $18,%rdx
	addq %rcx,%rdx
	movq 80(%rbp),%rcx
	movl %edx,(%rcx,%rbx,4)
	addq $4,%rax
	movq %rax,64(%rbp)
	leaq 1(%rbx),%rax
	movq %rax,72(%rbp)
	addq $24,%rbp
	jmp _c8xdA
	.size _s8v77, .-_s8v77


==================== Asm code ====================
2018-03-16 16:03:37.233655022 UTC

.section .text
.align 8
_c8xhO:
_c8xhO:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8xrz
_c8xry:
	movq 104(%rbp),%rax
	movq 128(%rbp),%rbx
	movq 120(%rbp),%rcx
	movq 88(%rbp),%rdx
	movq 96(%rbp),%rsi
	movq 112(%rbp),%rdi
	movq 80(%rbp),%r8
	movq 32(%rbp),%r9
	movq 40(%rbp),%r10
	movq 48(%rbp),%r11
	movq 56(%rbp),%r14
	movq %rax,64(%rsp)
	movq 64(%rbp),%rax
	movq %rbx,72(%rsp)
	movq 72(%rbp),%rbx
	cmpq $238,24(%rbp)
	jb _c8xrC
_c8xrT:
	movq %rcx,80(%rsp)
	movq 8(%rbp),%rcx
	cmpq $128,%rcx
	jb _c8xrF
_c8xrS:
	cmpq $191,%rcx
	ja _c8xrI
_c8xrR:
	movq 16(%rbp),%rcx
	cmpq $128,%rcx
	jb _c8xrL
_c8xrQ:
	cmpq $191,%rcx
	ja _c8xrO
_c8xrP:
	addq $-160,%r12
	addq $8,%rbp
	jmp _s8v8w
_c8xrO:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v9b_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xrL:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v96_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xrI:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v91_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xrF:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v8W_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xrC:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v8R_info,-96(%r12)
	movq %rcx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xrz:
	movq $160,904(%r13)
	movq $block_c8xhO_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8xhO, .-_c8xhO


==================== Asm code ====================
2018-03-16 16:03:37.235272213 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8xhO_info:
	.quad	_c8xhO
	.quad	2816464
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.235992189 UTC

.section .text
.align 8
_s8v8w:
_s8v8w:
	movq 24(%rbp),%rax
	movq 56(%rbp),%rax
	movq 64(%rbp),%rbx
	movq 8(%rbp),%rcx
	addq $-128,%rcx
	movq (%rbp),%rdx
	addq $-128,%rdx
	shlq $6,%rdx
	addq %rcx,%rdx
	movq 16(%rbp),%rcx
	addq $-224,%rcx
	shlq $12,%rcx
	addq %rdx,%rcx
	movq 72(%rbp),%rdx
	movl %ecx,(%rdx,%rbx,4)
	addq $3,%rax
	movq %rax,56(%rbp)
	leaq 1(%rbx),%rax
	movq %rax,64(%rbp)
	addq $16,%rbp
	jmp _c8xdA
	.size _s8v8w, .-_s8v8w


==================== Asm code ====================
2018-03-16 16:03:37.23751515 UTC

.section .text
.align 8
_c8xap:
_c8xap:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8xn3
_c8xn2:
	movq 96(%rbp),%rax
	movq 120(%rbp),%rbx
	movq 112(%rbp),%rcx
	movq 80(%rbp),%rdx
	movq 88(%rbp),%rsi
	movq 104(%rbp),%rdi
	movq 72(%rbp),%r8
	movq 24(%rbp),%r9
	movq 32(%rbp),%r10
	movq 40(%rbp),%r11
	movq 48(%rbp),%r14
	movq %rax,64(%rsp)
	movq 64(%rbp),%rax
	movq %rbx,72(%rsp)
	movq 56(%rbp),%rbx
	movq %rcx,80(%rsp)
	movq 16(%rbp),%rcx
	cmpq $238,%rcx
	jb _c8xn6
_c8xnj:
	cmpq $239,%rcx
	ja _c8xn9
_c8xni:
	movq 8(%rbp),%rcx
	cmpq $128,%rcx
	jb _c8xnc
_c8xnh:
	cmpq $191,%rcx
	ja _c8xnf
_c8xng:
	addq $-160,%r12
	addq $16,%rbp
	jmp _c8x9T
_c8xnf:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v5H_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xnc:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v5C_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xn9:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v5x_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xn6:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8v5s_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xn3:
	movq $160,904(%r13)
	movq $block_c8xap_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8xap, .-_c8xap


==================== Asm code ====================
2018-03-16 16:03:37.238939781 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8xap_info:
	.quad	_c8xap
	.quad	1408207
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.239819562 UTC

.section .text
.align 8
_c8x9T:
_c8x9T:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8xmY
_c8xmX:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8v5k_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xmY:
	movq $160,904(%r13)
	movq $block_c8x9T_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8x9T, .-_c8x9T


==================== Asm code ====================
2018-03-16 16:03:37.240640817 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8x9T_info:
	.quad	_c8x9T
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.241663562 UTC

.section .text
.align 8
_c8x9k:
_c8x9k:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8xmT
_c8xmS:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8v54_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xmT:
	movq $160,904(%r13)
	movq $block_c8x9k_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8x9k, .-_c8x9k


==================== Asm code ====================
2018-03-16 16:03:37.242484935 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8x9k_info:
	.quad	_c8x9k
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.243305755 UTC

.section .text
.align 8
_c8xbO:
_c8xbO:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8xon
_c8xom:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8v5Z_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xon:
	movq $160,904(%r13)
	movq $block_c8xbO_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8xbO, .-_c8xbO


==================== Asm code ====================
2018-03-16 16:03:37.244126328 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8xbO_info:
	.quad	_c8xbO
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.245004667 UTC

.section .text
.align 8
_c8xca:
_c8xca:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8xor
_c8xoq:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8v67_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xor:
	movq $160,904(%r13)
	movq $block_c8xca_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8xca, .-_c8xca


==================== Asm code ====================
2018-03-16 16:03:37.245902719 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8xca_info:
	.quad	_c8xca
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.246771608 UTC

.section .text
.align 8
_c8xcw:
_c8xcw:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8xov
_c8xou:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8v6f_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xov:
	movq $160,904(%r13)
	movq $block_c8xcw_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8xcw, .-_c8xcw


==================== Asm code ====================
2018-03-16 16:03:37.248096991 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8xcw_info:
	.quad	_c8xcw
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.248995778 UTC

.section .text
.align 8
_c8xcS:
_c8xcS:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8xoz
_c8xoy:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8v6n_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xoz:
	movq $160,904(%r13)
	movq $block_c8xcS_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8xcS, .-_c8xcS


==================== Asm code ====================
2018-03-16 16:03:37.249831833 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8xcS_info:
	.quad	_c8xcS
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.250673539 UTC

.section .text
.align 8
_c8xde:
_c8xde:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8xoD
_c8xoC:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8v6v_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xoD:
	movq $160,904(%r13)
	movq $block_c8xde_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8xde, .-_c8xde


==================== Asm code ====================
2018-03-16 16:03:37.251466631 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8xde_info:
	.quad	_c8xde
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.253492614 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF8_bom2_bytes
.type GHC.IO.Encoding.UTF8.mkUTF8_bom2_bytes, @object
GHC.IO.Encoding.UTF8.mkUTF8_bom2_bytes:
	.asciz "UTF-8BOM"


==================== Asm code ====================
2018-03-16 16:03:37.256118752 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF8_bom1_closure
.type GHC.IO.Encoding.UTF8.mkUTF8_bom1_closure, @object
GHC.IO.Encoding.UTF8.mkUTF8_bom1_closure:
	.quad	GHC.IO.Encoding.UTF8.mkUTF8_bom1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:37.256995074 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.mkUTF8_bom1_entry
.type GHC.IO.Encoding.UTF8.mkUTF8_bom1_entry, @object
GHC.IO.Encoding.UTF8.mkUTF8_bom1_entry:
_c8xIg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xIh
_c8xIi:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8xIf
_c8xIe:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Encoding.UTF8.mkUTF8_bom2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8xIh:
	jmp *-16(%r13)
_c8xIf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF8.mkUTF8_bom1_entry, .-GHC.IO.Encoding.UTF8.mkUTF8_bom1_entry


==================== Asm code ====================
2018-03-16 16:03:37.257744082 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF8_bom1_info
.type GHC.IO.Encoding.UTF8.mkUTF8_bom1_info, @object
GHC.IO.Encoding.UTF8.mkUTF8_bom1_info:
	.quad	GHC.IO.Encoding.UTF8.mkUTF8_bom1_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:37.259795636 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF3_closure
.type GHC.IO.Encoding.UTF8.mkUTF3_closure, @object
GHC.IO.Encoding.UTF8.mkUTF3_closure:
	.quad	GHC.IO.Encoding.UTF8.mkUTF3_info


==================== Asm code ====================
2018-03-16 16:03:37.260439283 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.mkUTF3_entry
.type GHC.IO.Encoding.UTF8.mkUTF3_entry, @object
GHC.IO.Encoding.UTF8.mkUTF3_entry:
_c8xIu:
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF8.mkUTF3_entry, .-GHC.IO.Encoding.UTF8.mkUTF3_entry


==================== Asm code ====================
2018-03-16 16:03:37.261024169 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF3_info
.type GHC.IO.Encoding.UTF8.mkUTF3_info, @object
GHC.IO.Encoding.UTF8.mkUTF3_info:
	.quad	GHC.IO.Encoding.UTF8.mkUTF3_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:03:37.278906448 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF8_bom_closure
.type GHC.IO.Encoding.UTF8.mkUTF8_bom_closure, @object
GHC.IO.Encoding.UTF8.mkUTF8_bom_closure:
	.quad	GHC.IO.Encoding.UTF8.mkUTF8_bom_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:37.27978253 UTC

.section .text
.align 8
sat_s8vbM_entry:
_c8xIV:
	movq 6(%rbx),%rax
	movq %r14,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8vbM_entry, .-sat_s8vbM_entry


==================== Asm code ====================
2018-03-16 16:03:37.280458238 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8vbM_info:
	.quad	sat_s8vbM_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:37.281153182 UTC

.section .text
.align 8
sat_s8vbI_entry:
_c8xJ4:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8vbI_entry, .-sat_s8vbI_entry


==================== Asm code ====================
2018-03-16 16:03:37.281812511 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8vbI_info:
	.quad	sat_s8vbI_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:03:37.282498897 UTC

.section .text
.align 8
sat_s8vbG_entry:
_c8xJc:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverEncode1_entry
	.size sat_s8vbG_entry, .-sat_s8vbG_entry


==================== Asm code ====================
2018-03-16 16:03:37.283135536 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8vbG_info:
	.quad	sat_s8vbG_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8vY4_srt


==================== Asm code ====================
2018-03-16 16:03:37.283940132 UTC

.section .text
.align 8
sat_s8vbF_entry:
_c8xJn:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xJo
_c8xJp:
	movq $block_c8xJk_info,-24(%rbp)
	movq 5(%rbx),%rax
	movq %rsi,%rbx
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8xJk
_c8xJl:
	movq (%rbx),%rax
	jmp *(%rax)
_c8xJo:
	jmp *-8(%r13)
	.size sat_s8vbF_entry, .-sat_s8vbF_entry


==================== Asm code ====================
2018-03-16 16:03:37.28459814 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8vbF_info:
	.quad	sat_s8vbF_entry
	.quad	1
	.quad	9
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:37.285379941 UTC

.section .text
.align 8
_c8xJk:
_c8xJk:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_c8xJs_info,-56(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rsi
	movq 23(%rbx),%rdi
	movq 31(%rbx),%r8
	movq 39(%rbx),%r9
	movq 47(%rbx),%rbx
	movq %rbx,%r10
	movq %rax,%rbx
	movq %rdi,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %r8,-24(%rbp)
	movq %r9,-16(%rbp)
	movq %r10,-8(%rbp)
	movq %rcx,(%rbp)
	addq $-56,%rbp
	testb $7,%bl
	jne _c8xJs
_c8xJu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8xJk, .-_c8xJk


==================== Asm code ====================
2018-03-16 16:03:37.286110107 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8xJk_info:
	.quad	_c8xJk
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.28726131 UTC

.section .text
.align 8
_c8xJs:
_c8xJs:
	movq 72(%rbp),%rax
	movq 56(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c8xJA
_c8xJB:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xJG
_c8xJF:
	movq 32(%rbp),%rbx
	movq 48(%rbp),%rdx
	movq %rbx,%rsi
	subq %rdx,%rsi
	cmpq $3,%rsi
	jge _c8xKd
_c8xKg:
	movq $(,,)_con_info,-48(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	leaq -47(%r12),%rax
	addq $-24,%r12
	movq %rax,%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xKd:
	movq 64(%rbp),%rcx
	movq 8(%rbp),%rsi
	movq 16(%rbp),%rdi
	movq 24(%rbp),%r8
	movq 40(%rbp),%r9
	movq $GHC.Types.False_closure+1,8(%rcx)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rcx,%rsi
	movq %rdi,%rcx
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %r10,%r14
	movq %r11,72(%rsp)
	movq %rcx,80(%rsp)
	movq %r8,88(%rsp)
	movq %r9,96(%rsp)
	movq %rdx,104(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq 96(%rsp),%rcx
	movq 64(%rsp),%rax
	movb $-17,(%rax,%rcx,1)
	leaq 1(%rcx),%rdx
	movb $-69,(%rax,%rdx,1)
	leaq 2(%rcx),%rdx
	movb $-65,(%rax,%rdx,1)
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-40(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq 88(%rsp),%rax
	movq %rax,-8(%r12)
	leaq 3(%rcx),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rsi
	addq $80,%rbp
	jmp GHC.IO.Encoding.UTF8.mkUTF1_entry
_c8xJG:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_c8xJA:
	movq %rcx,%rsi
	movq %rax,%r14
	addq $80,%rbp
	jmp GHC.IO.Encoding.UTF8.mkUTF1_entry
	.size _c8xJs, .-_c8xJs


==================== Asm code ====================
2018-03-16 16:03:37.288261532 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8xJs_info:
	.quad	_c8xJs
	.quad	3657
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.288959436 UTC

.section .text
.align 8
sat_s8vbO_entry:
_c8xKl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xKm
_c8xKn:
	movq $block_c8xIL_info,-16(%rbp)
	movq 7(%rbx),%rax
	movl $GHC.Types.True_closure+2,%ebx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_newMutVar#
_c8xKm:
	jmp *-8(%r13)
	.size sat_s8vbO_entry, .-sat_s8vbO_entry


==================== Asm code ====================
2018-03-16 16:03:37.289672578 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8vbO_info:
	.quad	sat_s8vbO_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8vY4_srt


==================== Asm code ====================
2018-03-16 16:03:37.290487826 UTC

.section .text
.align 8
_c8xIL:
_c8xIL:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c8xKq
_c8xKp:
	movq $sat_s8vbM_info,-104(%r12)
	movq %rbx,-96(%r12)
	movq $sat_s8vbI_info,-88(%r12)
	movq %rbx,-80(%r12)
	movq $sat_s8vbG_info,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	movq $sat_s8vbF_info,-56(%r12)
	movq %rbx,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	leaq -53(%r12),%rax
	movq %rax,-32(%r12)
	leaq -69(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.UTF8.mkUTF3_closure+1,-16(%r12)
	leaq -87(%r12),%rax
	movq %rax,-8(%r12)
	leaq -102(%r12),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xKq:
	movq $112,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8xIL, .-_c8xIL


==================== Asm code ====================
2018-03-16 16:03:37.29128671 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8xIL_info:
	.quad	_c8xIL
	.quad	1
	.quad	4294967326
	.quad	S8vY4_srt


==================== Asm code ====================
2018-03-16 16:03:37.292011463 UTC

.section .text
.align 8
sat_s8vb3_entry:
_c8xKG:
	movq 6(%rbx),%rax
	movq %r14,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8vb3_entry, .-sat_s8vb3_entry


==================== Asm code ====================
2018-03-16 16:03:37.292655325 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8vb3_info:
	.quad	sat_s8vb3_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:37.293318281 UTC

.section .text
.align 8
sat_s8vaZ_entry:
_c8xKP:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8vaZ_entry, .-sat_s8vaZ_entry


==================== Asm code ====================
2018-03-16 16:03:37.293899006 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8vaZ_info:
	.quad	sat_s8vaZ_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:03:37.294551407 UTC

.section .text
.align 8
sat_s8vaX_entry:
_c8xKX:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverDecode1_entry
	.size sat_s8vaX_entry, .-sat_s8vaX_entry


==================== Asm code ====================
2018-03-16 16:03:37.295173006 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8vaX_info:
	.quad	sat_s8vaX_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8vY4_srt+8


==================== Asm code ====================
2018-03-16 16:03:37.296768402 UTC

.section .text
.align 8
sat_s8vaW_entry:
_c8xL8:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xL9
_c8xLa:
	movq $block_c8xL5_info,-24(%rbp)
	movq 5(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8xL5
_c8xL6:
	movq (%rbx),%rax
	jmp *(%rax)
_c8xL9:
	jmp *-8(%r13)
	.size sat_s8vaW_entry, .-sat_s8vaW_entry


==================== Asm code ====================
2018-03-16 16:03:37.297776585 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8vaW_info:
	.quad	sat_s8vaW_entry
	.quad	1
	.quad	9
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:37.298729376 UTC

.section .text
.align 8
_c8xL5:
_c8xL5:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_c8xLd_info,-56(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rsi
	movq 23(%rbx),%rdi
	movq 31(%rbx),%r8
	movq 39(%rbx),%r9
	movq 47(%rbx),%rbx
	movq %rbx,%r10
	movq %rax,%rbx
	movq %rdi,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %r8,-24(%rbp)
	movq %r9,-16(%rbp)
	movq %r10,-8(%rbp)
	movq %rcx,(%rbp)
	addq $-56,%rbp
	testb $7,%bl
	jne _c8xLd
_c8xLf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8xL5, .-_c8xL5


==================== Asm code ====================
2018-03-16 16:03:37.29948504 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8xL5_info:
	.quad	_c8xL5
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.30134866 UTC

.section .text
.align 8
_c8xLd:
_c8xLd:
	movq 72(%rbp),%rax
	movq 56(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c8xLl
_c8xLm:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8xLr
_c8xLq:
	movq 40(%rbp),%rbx
	movq 48(%rbp),%rdx
	movq %rdx,%rsi
	subq %rbx,%rsi
	cmpq $1,%rsi
	jge _c8xMC
_c8xMF:
	movq $(,,)_con_info,-48(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	leaq -47(%r12),%rax
	addq $-24,%r12
	movq %rax,%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xMA:
	movq %rdx,%r11
	subq %rbx,%r11
	cmpq $2,%r11
	jge _c8xMw
_c8xMz:
	movq $(,,)_con_info,-48(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	leaq -47(%r12),%rax
	addq $-24,%r12
	movq %rax,%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xMu:
	movq %rdx,%r11
	subq %rbx,%r11
	cmpq $3,%r11
	jge _c8xMq
_c8xMt:
	movq $(,,)_con_info,-48(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	leaq -47(%r12),%rax
	addq $-24,%r12
	movq %rax,%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xMo:
	movq $GHC.Types.False_closure+1,8(%rsi)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rdi,%r11
	movq %rcx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %r11,72(%rsp)
	movq %r8,80(%rsp)
	movq %r9,88(%rsp)
	movq %r10,96(%rsp)
	movq %rdx,104(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 72(%rsp),%rax
	movq %rax,-40(%r12)
	movq 80(%rsp),%rax
	movq %rax,-32(%r12)
	movq 64(%rsp),%rax
	movq %rax,-24(%r12)
	movq 88(%rsp),%rax
	movq %rax,-16(%r12)
	leaq 3(%rbx),%rax
	movq %rax,-8(%r12)
	movq 96(%rsp),%rax
	movq %rax,(%r12)
	movq %r14,%rsi
	leaq -47(%r12),%r14
	addq $80,%rbp
	jmp GHC.IO.Encoding.UTF8.mkUTF4_entry
_c8xMq:
	leaq 2(%rbx),%r11
	movzbl (%rdi,%r11,1),%r11d
	cmpq $191,%r11
	je _c8xMo
_c8xMe:
	movq $GHC.Types.False_closure+1,8(%rsi)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $-56,%r12
	movq %rbx,%rsi
	addq $80,%rbp
	jmp GHC.IO.Encoding.UTF8.mkUTF4_entry
_c8xMw:
	leaq 1(%rbx),%r11
	movzbl (%rdi,%r11,1),%r11d
	cmpq $187,%r11
	je _c8xMu
_c8xLW:
	movq $GHC.Types.False_closure+1,8(%rsi)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $-56,%r12
	movq %rbx,%rsi
	addq $80,%rbp
	jmp GHC.IO.Encoding.UTF8.mkUTF4_entry
_c8xMC:
	movq 64(%rbp),%rsi
	movq 8(%rbp),%rdi
	movq 16(%rbp),%r8
	movq 24(%rbp),%r9
	movq 32(%rbp),%r10
	movzbl (%rdi,%rbx,1),%r11d
	cmpq $239,%r11
	je _c8xMA
_c8xLE:
	movq $GHC.Types.False_closure+1,8(%rsi)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $-56,%r12
	movq %rbx,%rsi
	addq $80,%rbp
	jmp GHC.IO.Encoding.UTF8.mkUTF4_entry
_c8xLr:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_c8xLl:
	movq %rax,%rsi
	movq %rcx,%r14
	addq $80,%rbp
	jmp GHC.IO.Encoding.UTF8.mkUTF4_entry
	.size _c8xLd, .-_c8xLd


==================== Asm code ====================
2018-03-16 16:03:37.302961883 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8xLd_info:
	.quad	_c8xLd
	.quad	3657
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:37.303748948 UTC

.section .text
.align 8
sat_s8vb5_entry:
_c8xMT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xMU
_c8xMV:
	movq $block_c8xKw_info,-16(%rbp)
	movq 7(%rbx),%rax
	movl $GHC.Types.True_closure+2,%ebx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_newMutVar#
_c8xMU:
	jmp *-8(%r13)
	.size sat_s8vb5_entry, .-sat_s8vb5_entry


==================== Asm code ====================
2018-03-16 16:03:37.304462521 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8vb5_info:
	.quad	sat_s8vb5_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8vY4_srt+8


==================== Asm code ====================
2018-03-16 16:03:37.305338418 UTC

.section .text
.align 8
_c8xKw:
_c8xKw:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c8xMY
_c8xMX:
	movq $sat_s8vb3_info,-104(%r12)
	movq %rbx,-96(%r12)
	movq $sat_s8vaZ_info,-88(%r12)
	movq %rbx,-80(%r12)
	movq $sat_s8vaX_info,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	movq $sat_s8vaW_info,-56(%r12)
	movq %rbx,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	leaq -53(%r12),%rax
	movq %rax,-32(%r12)
	leaq -69(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.UTF8.mkUTF3_closure+1,-16(%r12)
	leaq -87(%r12),%rax
	movq %rax,-8(%r12)
	leaq -102(%r12),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8xMY:
	movq $112,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8xKw, .-_c8xKw


==================== Asm code ====================
2018-03-16 16:03:37.306146928 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8xKw_info:
	.quad	_c8xKw
	.quad	1
	.quad	4294967326
	.quad	S8vY4_srt+8


==================== Asm code ====================
2018-03-16 16:03:37.307202523 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.mkUTF8_bom_entry
.type GHC.IO.Encoding.UTF8.mkUTF8_bom_entry, @object
GHC.IO.Encoding.UTF8.mkUTF8_bom_entry:
_c8xN0:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8xN4
_c8xN3:
	movq $sat_s8vbO_info,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s8vb5_info,-40(%r12)
	movq %r14,-32(%r12)
	movq $GHC.IO.Encoding.Types.TextEncoding_con_info,-24(%r12)
	movq $GHC.IO.Encoding.UTF8.mkUTF8_bom1_closure,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8xN4:
	movq $64,904(%r13)
	movl $GHC.IO.Encoding.UTF8.mkUTF8_bom_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF8.mkUTF8_bom_entry, .-GHC.IO.Encoding.UTF8.mkUTF8_bom_entry


==================== Asm code ====================
2018-03-16 16:03:37.308098303 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF8_bom_info
.type GHC.IO.Encoding.UTF8.mkUTF8_bom_info, @object
GHC.IO.Encoding.UTF8.mkUTF8_bom_info:
	.quad	GHC.IO.Encoding.UTF8.mkUTF8_bom_entry
	.quad	0
	.quad	64424509454
	.quad	4294967301
	.quad	S8vY4_srt


==================== Asm code ====================
2018-03-16 16:03:37.311996158 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.utf8_bom_closure
.type GHC.IO.Encoding.UTF8.utf8_bom_closure, @object
GHC.IO.Encoding.UTF8.utf8_bom_closure:
	.quad	GHC.IO.Encoding.UTF8.utf8_bom_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:37.3133431 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.utf8_bom_entry
.type GHC.IO.Encoding.UTF8.utf8_bom_entry, @object
GHC.IO.Encoding.UTF8.utf8_bom_entry:
_c8xOZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xP0
_c8xP1:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8xOY
_c8xOX:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Encoding.Failure.ErrorOnCodingFailure_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.IO.Encoding.UTF8.mkUTF8_bom_entry
_c8xP0:
	jmp *-16(%r13)
_c8xOY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF8.utf8_bom_entry, .-GHC.IO.Encoding.UTF8.utf8_bom_entry


==================== Asm code ====================
2018-03-16 16:03:37.31439371 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.utf8_bom_info
.type GHC.IO.Encoding.UTF8.utf8_bom_info, @object
GHC.IO.Encoding.UTF8.utf8_bom_info:
	.quad	GHC.IO.Encoding.UTF8.utf8_bom_entry
	.quad	0
	.quad	4294967317
	.quad	S8vY4_srt+16


==================== Asm code ====================
2018-03-16 16:03:37.316999832 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF6_bytes
.type GHC.IO.Encoding.UTF8.mkUTF6_bytes, @object
GHC.IO.Encoding.UTF8.mkUTF6_bytes:
	.asciz "UTF-8"


==================== Asm code ====================
2018-03-16 16:03:37.320814173 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF5_closure
.type GHC.IO.Encoding.UTF8.mkUTF5_closure, @object
GHC.IO.Encoding.UTF8.mkUTF5_closure:
	.quad	GHC.IO.Encoding.UTF8.mkUTF5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:37.322280308 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.mkUTF5_entry
.type GHC.IO.Encoding.UTF8.mkUTF5_entry, @object
GHC.IO.Encoding.UTF8.mkUTF5_entry:
_c8xPg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xPh
_c8xPi:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8xPf
_c8xPe:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Encoding.UTF8.mkUTF6_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8xPh:
	jmp *-16(%r13)
_c8xPf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF8.mkUTF5_entry, .-GHC.IO.Encoding.UTF8.mkUTF5_entry


==================== Asm code ====================
2018-03-16 16:03:37.323360701 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF5_info
.type GHC.IO.Encoding.UTF8.mkUTF5_info, @object
GHC.IO.Encoding.UTF8.mkUTF5_info:
	.quad	GHC.IO.Encoding.UTF8.mkUTF5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:37.326572422 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF2_closure
.type GHC.IO.Encoding.UTF8.mkUTF2_closure, @object
GHC.IO.Encoding.UTF8.mkUTF2_closure:
	.quad	GHC.IO.Encoding.UTF8.mkUTF2_info


==================== Asm code ====================
2018-03-16 16:03:37.327539353 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.mkUTF2_entry
.type GHC.IO.Encoding.UTF8.mkUTF2_entry, @object
GHC.IO.Encoding.UTF8.mkUTF2_entry:
_c8xPu:
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF8.mkUTF2_entry, .-GHC.IO.Encoding.UTF8.mkUTF2_entry


==================== Asm code ====================
2018-03-16 16:03:37.328449898 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF2_info
.type GHC.IO.Encoding.UTF8.mkUTF2_info, @object
GHC.IO.Encoding.UTF8.mkUTF2_info:
	.quad	GHC.IO.Encoding.UTF8.mkUTF2_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:37.336388672 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF8_closure
.type GHC.IO.Encoding.UTF8.mkUTF8_closure, @object
GHC.IO.Encoding.UTF8.mkUTF8_closure:
	.quad	GHC.IO.Encoding.UTF8.mkUTF8_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:37.337380348 UTC

.section .text
.align 8
sat_s8vbX_entry:
_c8xPQ:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverEncode1_entry
	.size sat_s8vbX_entry, .-sat_s8vbX_entry


==================== Asm code ====================
2018-03-16 16:03:37.338211741 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8vbX_info:
	.quad	sat_s8vbX_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8vY4_srt


==================== Asm code ====================
2018-03-16 16:03:37.339361708 UTC

.section .text
.align 8
sat_s8vbZ_entry:
_c8xPU:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8xPY
_c8xPX:
	movq 7(%rbx),%rax
	movq $sat_s8vbX_info,-56(%r12)
	movq %rax,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	movq $GHC.IO.Encoding.UTF8.mkUTF1_closure+3,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.UTF8.mkUTF3_closure+1,-16(%r12)
	movq $GHC.IO.Encoding.UTF8.mkUTF3_closure+1,-8(%r12)
	movq $GHC.IO.Encoding.UTF8.mkUTF2_closure+2,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8xPY:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8vbZ_entry, .-sat_s8vbZ_entry


==================== Asm code ====================
2018-03-16 16:03:37.340426807 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8vbZ_info:
	.quad	sat_s8vbZ_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8vY4_srt


==================== Asm code ====================
2018-03-16 16:03:37.341329163 UTC

.section .text
.align 8
sat_s8vbT_entry:
_c8xQ9:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverDecode1_entry
	.size sat_s8vbT_entry, .-sat_s8vbT_entry


==================== Asm code ====================
2018-03-16 16:03:37.342226386 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8vbT_info:
	.quad	sat_s8vbT_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8vY4_srt+8


==================== Asm code ====================
2018-03-16 16:03:37.343353016 UTC

.section .text
.align 8
sat_s8vbV_entry:
_c8xQd:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8xQh
_c8xQg:
	movq 7(%rbx),%rax
	movq $sat_s8vbT_info,-56(%r12)
	movq %rax,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	movq $GHC.IO.Encoding.UTF8.mkUTF4_closure+3,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.UTF8.mkUTF3_closure+1,-16(%r12)
	movq $GHC.IO.Encoding.UTF8.mkUTF3_closure+1,-8(%r12)
	movq $GHC.IO.Encoding.UTF8.mkUTF2_closure+2,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8xQh:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8vbV_entry, .-sat_s8vbV_entry


==================== Asm code ====================
2018-03-16 16:03:37.344403315 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8vbV_info:
	.quad	sat_s8vbV_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8vY4_srt+8


==================== Asm code ====================
2018-03-16 16:03:37.345443398 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.mkUTF8_entry
.type GHC.IO.Encoding.UTF8.mkUTF8_entry, @object
GHC.IO.Encoding.UTF8.mkUTF8_entry:
_c8xQj:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8xQn
_c8xQm:
	movq $sat_s8vbZ_info,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s8vbV_info,-40(%r12)
	movq %r14,-32(%r12)
	movq $GHC.IO.Encoding.Types.TextEncoding_con_info,-24(%r12)
	movq $GHC.IO.Encoding.UTF8.mkUTF5_closure,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8xQn:
	movq $64,904(%r13)
	movl $GHC.IO.Encoding.UTF8.mkUTF8_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF8.mkUTF8_entry, .-GHC.IO.Encoding.UTF8.mkUTF8_entry


==================== Asm code ====================
2018-03-16 16:03:37.347232401 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF8_info
.type GHC.IO.Encoding.UTF8.mkUTF8_info, @object
GHC.IO.Encoding.UTF8.mkUTF8_info:
	.quad	GHC.IO.Encoding.UTF8.mkUTF8_entry
	.quad	0
	.quad	219043332110
	.quad	4294967301
	.quad	S8vY4_srt


==================== Asm code ====================
2018-03-16 16:03:37.352676327 UTC

.section .data
.align 8
.align 1
lvl_r8uYu_closure:
	.quad	lvl_r8uYu_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:37.353924476 UTC

.section .text
.align 8
lvl_r8uYu_entry:
_c8xQS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xQW
_c8xQX:
	movq $block_c8xQP_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8xQP
_c8xQQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c8xQW:
	movl $lvl_r8uYu_closure,%ebx
	jmp *-8(%r13)
	.size lvl_r8uYu_entry, .-lvl_r8uYu_entry


==================== Asm code ====================
2018-03-16 16:03:37.355024473 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_r8uYu_info:
	.quad	lvl_r8uYu_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8vY4_srt+48


==================== Asm code ====================
2018-03-16 16:03:37.356032303 UTC

.section .text
.align 8
_c8xQP:
_c8xQP:
	movq 8(%rbp),%rax
	movq $block_c8xQV_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8xQV
_c8xQZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8xQP, .-_c8xQP


==================== Asm code ====================
2018-03-16 16:03:37.356992638 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8xQP_info:
	.quad	_c8xQP
	.quad	1
	.quad	4294967326
	.quad	S8vY4_srt+48


==================== Asm code ====================
2018-03-16 16:03:37.357980438 UTC

.section .text
.align 8
_c8xQV:
_c8xQV:
	movl $GHC.IO.Encoding.Failure.recoverDecode2_closure,%ebx
	addq $8,%rbp
	jmp stg_raiseIO#
	.size _c8xQV, .-_c8xQV


==================== Asm code ====================
2018-03-16 16:03:37.358823968 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8xQV_info:
	.quad	_c8xQV
	.quad	0
	.quad	4294967326
	.quad	S8vY4_srt+48


==================== Asm code ====================
2018-03-16 16:03:37.361454601 UTC

.section .data
.align 8
.align 1
lvl1_r8uYv_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.UTF8.mkUTF4_closure+3
	.quad	lvl_r8uYu_closure+3
	.quad	GHC.IO.Encoding.UTF8.mkUTF3_closure+1
	.quad	GHC.IO.Encoding.UTF8.mkUTF3_closure+1
	.quad	GHC.IO.Encoding.UTF8.mkUTF2_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:37.363739528 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.utf3_closure
.type GHC.IO.Encoding.UTF8.utf3_closure, @object
GHC.IO.Encoding.UTF8.utf3_closure:
	.quad	GHC.IO.Encoding.UTF8.utf3_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:37.364417768 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.utf3_entry
.type GHC.IO.Encoding.UTF8.utf3_entry, @object
GHC.IO.Encoding.UTF8.utf3_entry:
_c8xRo:
	movl $lvl1_r8uYv_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF8.utf3_entry, .-GHC.IO.Encoding.UTF8.utf3_entry


==================== Asm code ====================
2018-03-16 16:03:37.365061507 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.utf3_info
.type GHC.IO.Encoding.UTF8.utf3_info, @object
GHC.IO.Encoding.UTF8.utf3_info:
	.quad	GHC.IO.Encoding.UTF8.utf3_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8vY4_srt+64


==================== Asm code ====================
2018-03-16 16:03:37.368752994 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.utf2_closure
.type GHC.IO.Encoding.UTF8.utf2_closure, @object
GHC.IO.Encoding.UTF8.utf2_closure:
	.quad	GHC.IO.Encoding.UTF8.utf2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:37.36962962 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.utf2_entry
.type GHC.IO.Encoding.UTF8.utf2_entry, @object
GHC.IO.Encoding.UTF8.utf2_entry:
_c8xRD:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8xRH
_c8xRI:
	movq $block_c8xRA_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8xRA
_c8xRB:
	movq (%rbx),%rax
	jmp *(%rax)
_c8xRH:
	movl $GHC.IO.Encoding.UTF8.utf2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF8.utf2_entry, .-GHC.IO.Encoding.UTF8.utf2_entry


==================== Asm code ====================
2018-03-16 16:03:37.370327481 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.utf2_info
.type GHC.IO.Encoding.UTF8.utf2_info, @object
GHC.IO.Encoding.UTF8.utf2_info:
	.quad	GHC.IO.Encoding.UTF8.utf2_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8vY4_srt+72


==================== Asm code ====================
2018-03-16 16:03:37.371119244 UTC

.section .text
.align 8
_c8xRA:
_c8xRA:
	movq $block_c8xRG_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8xRG
_c8xRK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8xRA, .-_c8xRA


==================== Asm code ====================
2018-03-16 16:03:37.371814177 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8xRA_info:
	.quad	_c8xRA
	.quad	1
	.quad	4294967326
	.quad	S8vY4_srt+72


==================== Asm code ====================
2018-03-16 16:03:37.372489743 UTC

.section .text
.align 8
_c8xRG:
_c8xRG:
	movl $GHC.IO.Encoding.Failure.recoverEncode2_closure,%ebx
	addq $32,%rbp
	jmp stg_raiseIO#
	.size _c8xRG, .-_c8xRG


==================== Asm code ====================
2018-03-16 16:03:37.373073125 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8xRG_info:
	.quad	_c8xRG
	.quad	323
	.quad	4294967326
	.quad	S8vY4_srt+72


==================== Asm code ====================
2018-03-16 16:03:37.374961267 UTC

.section .data
.align 8
.align 1
lvl2_r8uYw_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.UTF8.mkUTF1_closure+3
	.quad	GHC.IO.Encoding.UTF8.utf2_closure+3
	.quad	GHC.IO.Encoding.UTF8.mkUTF3_closure+1
	.quad	GHC.IO.Encoding.UTF8.mkUTF3_closure+1
	.quad	GHC.IO.Encoding.UTF8.mkUTF2_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:37.377188122 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.utf1_closure
.type GHC.IO.Encoding.UTF8.utf1_closure, @object
GHC.IO.Encoding.UTF8.utf1_closure:
	.quad	GHC.IO.Encoding.UTF8.utf1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:37.377918786 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.utf1_entry
.type GHC.IO.Encoding.UTF8.utf1_entry, @object
GHC.IO.Encoding.UTF8.utf1_entry:
_c8xSa:
	movl $lvl2_r8uYw_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF8.utf1_entry, .-GHC.IO.Encoding.UTF8.utf1_entry


==================== Asm code ====================
2018-03-16 16:03:37.37851585 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.utf1_info
.type GHC.IO.Encoding.UTF8.utf1_info, @object
GHC.IO.Encoding.UTF8.utf1_info:
	.quad	GHC.IO.Encoding.UTF8.utf1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8vY4_srt+88


==================== Asm code ====================
2018-03-16 16:03:37.380382662 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.utf8_closure
.type GHC.IO.Encoding.UTF8.utf8_closure, @object
GHC.IO.Encoding.UTF8.utf8_closure:
	.quad	GHC.IO.Encoding.Types.TextEncoding_con_info
	.quad	GHC.IO.Encoding.UTF8.mkUTF5_closure
	.quad	GHC.IO.Encoding.UTF8.utf3_closure+1
	.quad	GHC.IO.Encoding.UTF8.utf1_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:37.382282696 UTC

.section .data.rel.ro
.align 8
.align 1
S8vY4_srt:
	.quad	GHC.IO.Encoding.Failure.recoverEncode1_closure
	.quad	GHC.IO.Encoding.Failure.recoverDecode1_closure
	.quad	GHC.IO.Encoding.UTF8.mkUTF8_bom_closure
	.quad	GHC.IO.Encoding.UTF8.mkUTF8_bom1_closure
	.quad	GHC.IO.Encoding.UTF8.mkUTF8_closure
	.quad	GHC.IO.Encoding.UTF8.mkUTF5_closure
	.quad	GHC.IO.Encoding.Failure.recoverDecode2_closure
	.quad	lvl_r8uYu_closure
	.quad	lvl1_r8uYv_closure
	.quad	GHC.IO.Encoding.Failure.recoverEncode2_closure
	.quad	GHC.IO.Encoding.UTF8.utf2_closure
	.quad	lvl2_r8uYw_closure


==================== Asm code ====================
2018-03-16 16:03:42.439181623 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF8.$trModule4_bytes
.type GHC.IO.Encoding.UTF8.$trModule4_bytes, @object
GHC.IO.Encoding.UTF8.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:03:42.441009871 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.$trModule3_closure
.type GHC.IO.Encoding.UTF8.$trModule3_closure, @object
GHC.IO.Encoding.UTF8.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Encoding.UTF8.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:03:42.442748459 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF8.$trModule2_bytes
.type GHC.IO.Encoding.UTF8.$trModule2_bytes, @object
GHC.IO.Encoding.UTF8.$trModule2_bytes:
	.asciz "GHC.IO.Encoding.UTF8"


==================== Asm code ====================
2018-03-16 16:03:42.444443163 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.$trModule1_closure
.type GHC.IO.Encoding.UTF8.$trModule1_closure, @object
GHC.IO.Encoding.UTF8.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Encoding.UTF8.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:03:42.44621429 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.$trModule_closure
.type GHC.IO.Encoding.UTF8.$trModule_closure, @object
GHC.IO.Encoding.UTF8.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.IO.Encoding.UTF8.$trModule3_closure+1
	.quad	GHC.IO.Encoding.UTF8.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:42.477623412 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF1_closure
.type GHC.IO.Encoding.UTF8.mkUTF1_closure, @object
GHC.IO.Encoding.UTF8.mkUTF1_closure:
	.quad	GHC.IO.Encoding.UTF8.mkUTF1_info


==================== Asm code ====================
2018-03-16 16:03:42.478720514 UTC

.section .text
.align 8
sat_s8xSH_entry:
_c8y6Z:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8y70
_c8y71:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8y73
_c8y72:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8y6Y
_c8y6X:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8y73:
	movq $56,904(%r13)
_c8y70:
	jmp *-16(%r13)
_c8y6Y:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xSH_entry, .-sat_s8xSH_entry


==================== Asm code ====================
2018-03-16 16:03:42.479516793 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xSH_info:
	.quad	sat_s8xSH_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.480496158 UTC

.section .text
.align 8
sat_s8xSP_entry:
_c8y7l:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8y7m
_c8y7n:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8y7p
_c8y7o:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8y7k
_c8y7j:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8y7p:
	movq $56,904(%r13)
_c8y7m:
	jmp *-16(%r13)
_c8y7k:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xSP_entry, .-sat_s8xSP_entry


==================== Asm code ====================
2018-03-16 16:03:42.481403407 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xSP_info:
	.quad	sat_s8xSP_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.482371132 UTC

.section .text
.align 8
sat_s8xSX_entry:
_c8y7H:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8y7I
_c8y7J:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8y7L
_c8y7K:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8y7G
_c8y7F:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8y7L:
	movq $56,904(%r13)
_c8y7I:
	jmp *-16(%r13)
_c8y7G:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xSX_entry, .-sat_s8xSX_entry


==================== Asm code ====================
2018-03-16 16:03:42.483249778 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xSX_info:
	.quad	sat_s8xSX_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.48421072 UTC

.section .text
.align 8
sat_s8xT5_entry:
_c8y83:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8y84
_c8y85:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8y87
_c8y86:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8y82
_c8y81:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8y87:
	movq $56,904(%r13)
_c8y84:
	jmp *-16(%r13)
_c8y82:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xT5_entry, .-sat_s8xT5_entry


==================== Asm code ====================
2018-03-16 16:03:42.497663482 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xT5_info:
	.quad	sat_s8xT5_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.498524512 UTC

.section .text
.align 8
sat_s8xTd_entry:
_c8y8p:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8y8q
_c8y8r:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8y8t
_c8y8s:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8y8o
_c8y8n:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8y8t:
	movq $56,904(%r13)
_c8y8q:
	jmp *-16(%r13)
_c8y8o:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xTd_entry, .-sat_s8xTd_entry


==================== Asm code ====================
2018-03-16 16:03:42.499240712 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xTd_info:
	.quad	sat_s8xTd_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.500058834 UTC

.section .text
.align 8
sat_s8xV3_entry:
_c8y9g:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8y9h
_c8y9i:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8y9k
_c8y9j:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8y9f
_c8y9e:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8y9k:
	movq $56,904(%r13)
_c8y9h:
	jmp *-16(%r13)
_c8y9f:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xV3_entry, .-sat_s8xV3_entry


==================== Asm code ====================
2018-03-16 16:03:42.500769747 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xV3_info:
	.quad	sat_s8xV3_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.501873316 UTC

.section .text
.align 8
sat_s8xW4_entry:
_c8y9J:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8y9K
_c8y9L:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8y9N
_c8y9M:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8y9I
_c8y9H:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8y9N:
	movq $56,904(%r13)
_c8y9K:
	jmp *-16(%r13)
_c8y9I:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xW4_entry, .-sat_s8xW4_entry


==================== Asm code ====================
2018-03-16 16:03:42.502593566 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xW4_info:
	.quad	sat_s8xW4_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.503411144 UTC

.section .text
.align 8
sat_s8xW8_entry:
_c8ya1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ya2
_c8ya3:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8ya5
_c8ya4:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8ya0
_c8y9Z:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ya5:
	movq $56,904(%r13)
_c8ya2:
	jmp *-16(%r13)
_c8ya0:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xW8_entry, .-sat_s8xW8_entry


==================== Asm code ====================
2018-03-16 16:03:42.504160296 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xW8_info:
	.quad	sat_s8xW8_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.504884941 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.mkUTF1_entry
.type GHC.IO.Encoding.UTF8.mkUTF1_entry, @object
GHC.IO.Encoding.UTF8.mkUTF1_entry:
_c8ya8:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ya9
_c8yaa:
	leaq block_c8y6z_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8y6z
_c8y6A:
	movq (%rbx),%rax
	jmp *(%rax)
_c8ya9:
	leaq GHC.IO.Encoding.UTF8.mkUTF1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF8.mkUTF1_entry, .-GHC.IO.Encoding.UTF8.mkUTF1_entry


==================== Asm code ====================
2018-03-16 16:03:42.505585376 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF1_info
.type GHC.IO.Encoding.UTF8.mkUTF1_info, @object
GHC.IO.Encoding.UTF8.mkUTF1_info:
	.quad	GHC.IO.Encoding.UTF8.mkUTF1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:42.506329246 UTC

.section .text
.align 8
_c8y6z:
_c8y6z:
	leaq block_c8y6E_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8y6E
_c8y6F:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8y6z, .-_c8y6z


==================== Asm code ====================
2018-03-16 16:03:42.506948144 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8y6z_info:
	.quad	_c8y6z
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.507725353 UTC

.section .text
.align 8
_c8y6E:
_c8y6E:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yae
_c8yad:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r8
	movq %r8,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	leaq -47(%r12),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8y8y
_c8yae:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8y6E, .-_c8y6E


==================== Asm code ====================
2018-03-16 16:03:42.508500604 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8y6E_info:
	.quad	_c8y6E
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.511005746 UTC

.section .text
.align 8
_c8y8y:
_c8y8y:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yaB
_c8yaA:
	movq 24(%rbp),%rax
	movq 40(%rbp),%rbx
	movq 48(%rbp),%rcx
	cmpq %rax,%rcx
	jl _c8ybX
_c8ybY:
	addq $-160,%r12
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8y8c
_c8ybX:
	movq 88(%rbp),%rdx
	cmpq %rdx,%rbx
	jl _c8ybU
_c8ybV:
	addq $-160,%r12
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8y7Q
_c8ybU:
	movq 80(%rbp),%rsi
	movq 104(%rbp),%rdi
	movq 96(%rbp),%r8
	movq 64(%rbp),%r9
	movq 72(%rbp),%r10
	movq 56(%rbp),%r11
	movq 8(%rbp),%r14
	movq %rsi,64(%rsp)
	movq 16(%rbp),%rsi
	movq %rdi,72(%rsp)
	movq 32(%rbp),%rdi
	movq %r8,80(%rsp)
	movq 72(%rsp),%r8
	movl (%r8,%rbx,4),%r8d
	cmpq $127,%r8
	jg _c8ybR
_c8ybS:
	movb %r8b,(%r11,%rcx,1)
	addq $-160,%r12
	leaq 1(%rbx),%rax
	movq %rax,40(%rbp)
	leaq 1(%rcx),%rax
	movq %rax,48(%rbp)
	jmp _c8y8y
_c8ybR:
	cmpq $2047,%r8
	jg _c8ybF
_c8ybP:
	subq %rcx,%rax
	cmpq $2,%rax
	jge _c8ybN
_c8ybO:
	addq $-160,%r12
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8y7u
_c8ybN:
	movq %r8,%rax
	sarq $6,%rax
	addq $192,%rax
	movb %al,(%r11,%rcx,1)
	andl $63,%r8d
	leaq 128(%r8),%rax
	leaq 1(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	addq $-160,%r12
	leaq 1(%rbx),%rax
	movq %rax,40(%rbp)
	leaq 2(%rcx),%rax
	movq %rax,48(%rbp)
	jmp _c8y8y
_c8ybF:
	cmpq $65535,%r8
	jg _c8yaL
_c8ybD:
	cmpq $55296,%r8
	jl _c8yba
_c8ybC:
	cmpq $56319,%r8
	jg _c8ybz
_c8ybB:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-152(%r12)
	movq %r14,-144(%r12)
	movq %rsi,-136(%r12)
	movq %r11,-128(%r12)
	movq %rax,-120(%r12)
	movq %rdi,-112(%r12)
	movq %rcx,-104(%r12)
	leaq sat_s8xW8_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 80(%rsp),%rax
	movq %rax,-80(%r12)
	movq %r9,-72(%r12)
	movq 64(%rsp),%rax
	movq %rax,-64(%r12)
	movq 72(%rsp),%rax
	movq %rax,-56(%r12)
	movq %r10,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rbx,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ybz:
	cmpq $56320,%r8
	jl _c8ybk
_c8ybx:
	cmpq $57343,%r8
	jg _c8ybu
_c8ybw:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-152(%r12)
	movq %r14,-144(%r12)
	movq %rsi,-136(%r12)
	movq %r11,-128(%r12)
	movq %rax,-120(%r12)
	movq %rdi,-112(%r12)
	movq %rcx,-104(%r12)
	leaq sat_s8xW4_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 80(%rsp),%rax
	movq %rax,-80(%r12)
	movq %r9,-72(%r12)
	movq 64(%rsp),%rax
	movq %rax,-64(%r12)
	movq 72(%rsp),%rax
	movq %rax,-56(%r12)
	movq %r10,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rbx,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ybs:
	addq $-160,%r12
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8y78
_c8ybu:
	subq %rcx,%rax
	cmpq $3,%rax
	jl _c8ybs
_c8ybr:
	movq %r8,%rax
	sarq $12,%rax
	addq $224,%rax
	movb %al,(%r11,%rcx,1)
	movq %r8,%rax
	sarq $6,%rax
	andl $63,%eax
	addq $128,%rax
	leaq 1(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	andl $63,%r8d
	leaq 128(%r8),%rax
	leaq 2(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	addq $-160,%r12
	leaq 1(%rbx),%rax
	movq %rax,40(%rbp)
	leaq 3(%rcx),%rax
	movq %rax,48(%rbp)
	jmp _c8y8y
_c8ybk:
	subq %rcx,%rax
	cmpq $3,%rax
	jl _c8ybs
_c8ybh:
	movq %r8,%rax
	sarq $12,%rax
	addq $224,%rax
	movb %al,(%r11,%rcx,1)
	movq %r8,%rax
	sarq $6,%rax
	andl $63,%eax
	addq $128,%rax
	leaq 1(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	andl $63,%r8d
	leaq 128(%r8),%rax
	leaq 2(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	addq $-160,%r12
	leaq 1(%rbx),%rax
	movq %rax,40(%rbp)
	leaq 3(%rcx),%rax
	movq %rax,48(%rbp)
	jmp _c8y8y
_c8yba:
	cmpq $56320,%r8
	jl _c8yaV
_c8yb8:
	cmpq $57343,%r8
	jg _c8yb5
_c8yb7:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-152(%r12)
	movq %r14,-144(%r12)
	movq %rsi,-136(%r12)
	movq %r11,-128(%r12)
	movq %rax,-120(%r12)
	movq %rdi,-112(%r12)
	movq %rcx,-104(%r12)
	leaq sat_s8xV3_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 80(%rsp),%rax
	movq %rax,-80(%r12)
	movq %r9,-72(%r12)
	movq 64(%rsp),%rax
	movq %rax,-64(%r12)
	movq 72(%rsp),%rax
	movq %rax,-56(%r12)
	movq %r10,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rbx,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yb5:
	subq %rcx,%rax
	cmpq $3,%rax
	jl _c8ybs
_c8yb2:
	movq %r8,%rax
	sarq $12,%rax
	addq $224,%rax
	movb %al,(%r11,%rcx,1)
	movq %r8,%rax
	sarq $6,%rax
	andl $63,%eax
	addq $128,%rax
	leaq 1(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	andl $63,%r8d
	leaq 128(%r8),%rax
	leaq 2(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	addq $-160,%r12
	leaq 1(%rbx),%rax
	movq %rax,40(%rbp)
	leaq 3(%rcx),%rax
	movq %rax,48(%rbp)
	jmp _c8y8y
_c8yaV:
	subq %rcx,%rax
	cmpq $3,%rax
	jl _c8ybs
_c8yaS:
	movq %r8,%rax
	sarq $12,%rax
	addq $224,%rax
	movb %al,(%r11,%rcx,1)
	movq %r8,%rax
	sarq $6,%rax
	andl $63,%eax
	addq $128,%rax
	leaq 1(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	andl $63,%r8d
	leaq 128(%r8),%rax
	leaq 2(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	addq $-160,%r12
	leaq 1(%rbx),%rax
	movq %rax,40(%rbp)
	leaq 3(%rcx),%rax
	movq %rax,48(%rbp)
	jmp _c8y8y
_c8yaL:
	subq %rcx,%rax
	cmpq $4,%rax
	jge _c8yaI
_c8yaJ:
	addq $-160,%r12
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8y6M
_c8yaI:
	movq %r8,%rax
	sarq $18,%rax
	addq $240,%rax
	movb %al,(%r11,%rcx,1)
	movq %r8,%rax
	sarq $12,%rax
	andl $63,%eax
	addq $128,%rax
	leaq 1(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	movq %r8,%rax
	sarq $6,%rax
	andl $63,%eax
	addq $128,%rax
	leaq 2(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	andl $63,%r8d
	leaq 128(%r8),%rax
	leaq 3(%rcx),%rdx
	movb %al,(%r11,%rdx,1)
	addq $-160,%r12
	leaq 1(%rbx),%rax
	movq %rax,40(%rbp)
	leaq 4(%rcx),%rax
	movq %rax,48(%rbp)
	jmp _c8y8y
_c8yaB:
	movq $160,904(%r13)
	leaq block_c8y8y_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8y8y, .-_c8y8y


==================== Asm code ====================
2018-03-16 16:03:42.513426437 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8y8y_info:
	.quad	_c8y8y
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.514281974 UTC

.section .text
.align 8
_c8y6M:
_c8y6M:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yai
_c8yah:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8xSH_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yai:
	movq $160,904(%r13)
	leaq block_c8y6M_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8y6M, .-_c8y6M


==================== Asm code ====================
2018-03-16 16:03:42.515087824 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8y6M_info:
	.quad	_c8y6M
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.515963508 UTC

.section .text
.align 8
_c8y78:
_c8y78:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yam
_c8yal:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8xSP_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yam:
	movq $160,904(%r13)
	leaq block_c8y78_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8y78, .-_c8y78


==================== Asm code ====================
2018-03-16 16:03:42.516815778 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8y78_info:
	.quad	_c8y78
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.517728936 UTC

.section .text
.align 8
_c8y7u:
_c8y7u:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yaq
_c8yap:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8xSX_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yaq:
	movq $160,904(%r13)
	leaq block_c8y7u_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8y7u, .-_c8y7u


==================== Asm code ====================
2018-03-16 16:03:42.518597121 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8y7u_info:
	.quad	_c8y7u
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.51947534 UTC

.section .text
.align 8
_c8y7Q:
_c8y7Q:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yau
_c8yat:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8xT5_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yau:
	movq $160,904(%r13)
	leaq block_c8y7Q_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8y7Q, .-_c8y7Q


==================== Asm code ====================
2018-03-16 16:03:42.520329336 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8y7Q_info:
	.quad	_c8y7Q
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.521260721 UTC

.section .text
.align 8
_c8y8c:
_c8y8c:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yay
_c8yax:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8xTd_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yay:
	movq $160,904(%r13)
	leaq block_c8y8c_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8y8c, .-_c8y8c


==================== Asm code ====================
2018-03-16 16:03:42.522122861 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8y8c_info:
	.quad	_c8y8c
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.627350816 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF4_closure
.type GHC.IO.Encoding.UTF8.mkUTF4_closure, @object
GHC.IO.Encoding.UTF8.mkUTF4_closure:
	.quad	GHC.IO.Encoding.UTF8.mkUTF4_info


==================== Asm code ====================
2018-03-16 16:03:42.628394988 UTC

.section .text
.align 8
sat_s8xWY_entry:
_c8yoq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yor
_c8yos:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8you
_c8yot:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yop
_c8yoo:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8you:
	movq $56,904(%r13)
_c8yor:
	jmp *-16(%r13)
_c8yop:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xWY_entry, .-sat_s8xWY_entry


==================== Asm code ====================
2018-03-16 16:03:42.629165057 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xWY_info:
	.quad	sat_s8xWY_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.630120349 UTC

.section .text
.align 8
sat_s8xX6_entry:
_c8yoM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yoN
_c8yoO:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yoQ
_c8yoP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yoL
_c8yoK:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yoQ:
	movq $56,904(%r13)
_c8yoN:
	jmp *-16(%r13)
_c8yoL:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xX6_entry, .-sat_s8xX6_entry


==================== Asm code ====================
2018-03-16 16:03:42.630932037 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xX6_info:
	.quad	sat_s8xX6_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.631808883 UTC

.section .text
.align 8
sat_s8xXm_entry:
_c8ypk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ypl
_c8ypm:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8ypo
_c8ypn:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8ypj
_c8ypi:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ypo:
	movq $56,904(%r13)
_c8ypl:
	jmp *-16(%r13)
_c8ypj:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xXm_entry, .-sat_s8xXm_entry


==================== Asm code ====================
2018-03-16 16:03:42.632622603 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xXm_info:
	.quad	sat_s8xXm_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.633555972 UTC

.section .text
.align 8
sat_s8xXt_entry:
_c8ypN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ypO
_c8ypP:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8ypR
_c8ypQ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8ypM
_c8ypL:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ypR:
	movq $56,904(%r13)
_c8ypO:
	jmp *-16(%r13)
_c8ypM:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xXt_entry, .-sat_s8xXt_entry


==================== Asm code ====================
2018-03-16 16:03:42.63435944 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xXt_info:
	.quad	sat_s8xXt_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.63522941 UTC

.section .text
.align 8
sat_s8xXy_entry:
_c8yq8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yq9
_c8yqa:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yqc
_c8yqb:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yq7
_c8yq6:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yqc:
	movq $56,904(%r13)
_c8yq9:
	jmp *-16(%r13)
_c8yq7:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xXy_entry, .-sat_s8xXy_entry


==================== Asm code ====================
2018-03-16 16:03:42.636047451 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xXy_info:
	.quad	sat_s8xXy_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.63692994 UTC

.section .text
.align 8
sat_s8xXD_entry:
_c8yqt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yqu
_c8yqv:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yqx
_c8yqw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yqs
_c8yqr:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yqx:
	movq $56,904(%r13)
_c8yqu:
	jmp *-16(%r13)
_c8yqs:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xXD_entry, .-sat_s8xXD_entry


==================== Asm code ====================
2018-03-16 16:03:42.637735683 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xXD_info:
	.quad	sat_s8xXD_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.638609795 UTC

.section .text
.align 8
sat_s8xY6_entry:
_c8yr8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yr9
_c8yra:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yrc
_c8yrb:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yr7
_c8yr6:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yrc:
	movq $56,904(%r13)
_c8yr9:
	jmp *-16(%r13)
_c8yr7:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xY6_entry, .-sat_s8xY6_entry


==================== Asm code ====================
2018-03-16 16:03:42.639445786 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xY6_info:
	.quad	sat_s8xY6_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.640356977 UTC

.section .text
.align 8
sat_s8xYd_entry:
_c8yrB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yrC
_c8yrD:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yrF
_c8yrE:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yrA
_c8yrz:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yrF:
	movq $56,904(%r13)
_c8yrC:
	jmp *-16(%r13)
_c8yrA:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xYd_entry, .-sat_s8xYd_entry


==================== Asm code ====================
2018-03-16 16:03:42.641182524 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xYd_info:
	.quad	sat_s8xYd_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.642126315 UTC

.section .text
.align 8
sat_s8xYi_entry:
_c8yrW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yrX
_c8yrY:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8ys0
_c8yrZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yrV
_c8yrU:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ys0:
	movq $56,904(%r13)
_c8yrX:
	jmp *-16(%r13)
_c8yrV:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xYi_entry, .-sat_s8xYi_entry


==================== Asm code ====================
2018-03-16 16:03:42.642925538 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xYi_info:
	.quad	sat_s8xYi_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.643831477 UTC

.section .text
.align 8
sat_s8xYn_entry:
_c8ysh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ysi
_c8ysj:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8ysl
_c8ysk:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8ysg
_c8ysf:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ysl:
	movq $56,904(%r13)
_c8ysi:
	jmp *-16(%r13)
_c8ysg:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xYn_entry, .-sat_s8xYn_entry


==================== Asm code ====================
2018-03-16 16:03:42.64461396 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xYn_info:
	.quad	sat_s8xYn_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.645688812 UTC

.section .text
.align 8
sat_s8xYs_entry:
_c8ysC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ysD
_c8ysE:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8ysG
_c8ysF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8ysB
_c8ysA:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ysG:
	movq $56,904(%r13)
_c8ysD:
	jmp *-16(%r13)
_c8ysB:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xYs_entry, .-sat_s8xYs_entry


==================== Asm code ====================
2018-03-16 16:03:42.646504991 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xYs_info:
	.quad	sat_s8xYs_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.647408687 UTC

.section .text
.align 8
sat_s8xYx_entry:
_c8ysX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ysY
_c8ysZ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yt1
_c8yt0:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8ysW
_c8ysV:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yt1:
	movq $56,904(%r13)
_c8ysY:
	jmp *-16(%r13)
_c8ysW:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xYx_entry, .-sat_s8xYx_entry


==================== Asm code ====================
2018-03-16 16:03:42.648226134 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xYx_info:
	.quad	sat_s8xYx_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.649133627 UTC

.section .text
.align 8
sat_s8xYQ_entry:
_c8ytj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ytk
_c8ytl:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8ytn
_c8ytm:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yti
_c8yth:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ytn:
	movq $56,904(%r13)
_c8ytk:
	jmp *-16(%r13)
_c8yti:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xYQ_entry, .-sat_s8xYQ_entry


==================== Asm code ====================
2018-03-16 16:03:42.649961308 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xYQ_info:
	.quad	sat_s8xYQ_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.65086793 UTC

.section .text
.align 8
sat_s8xZ6_entry:
_c8ytR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ytS
_c8ytT:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8ytV
_c8ytU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8ytQ
_c8ytP:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ytV:
	movq $56,904(%r13)
_c8ytS:
	jmp *-16(%r13)
_c8ytQ:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xZ6_entry, .-sat_s8xZ6_entry


==================== Asm code ====================
2018-03-16 16:03:42.651672635 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xZ6_info:
	.quad	sat_s8xZ6_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.6525636 UTC

.section .text
.align 8
sat_s8xZe_entry:
_c8yuq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yur
_c8yus:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yuu
_c8yut:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yup
_c8yuo:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yuu:
	movq $56,904(%r13)
_c8yur:
	jmp *-16(%r13)
_c8yup:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xZe_entry, .-sat_s8xZe_entry


==================== Asm code ====================
2018-03-16 16:03:42.653385504 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xZe_info:
	.quad	sat_s8xZe_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.654282498 UTC

.section .text
.align 8
sat_s8xZj_entry:
_c8yuL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yuM
_c8yuN:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yuP
_c8yuO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yuK
_c8yuJ:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yuP:
	movq $56,904(%r13)
_c8yuM:
	jmp *-16(%r13)
_c8yuK:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xZj_entry, .-sat_s8xZj_entry


==================== Asm code ====================
2018-03-16 16:03:42.655137641 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xZj_info:
	.quad	sat_s8xZj_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.656061065 UTC

.section .text
.align 8
sat_s8xZo_entry:
_c8yv6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yv7
_c8yv8:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yva
_c8yv9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yv5
_c8yv4:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yva:
	movq $56,904(%r13)
_c8yv7:
	jmp *-16(%r13)
_c8yv5:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xZo_entry, .-sat_s8xZo_entry


==================== Asm code ====================
2018-03-16 16:03:42.656893027 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xZo_info:
	.quad	sat_s8xZo_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.65821086 UTC

.section .text
.align 8
sat_s8xZt_entry:
_c8yvr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yvs
_c8yvt:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yvv
_c8yvu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yvq
_c8yvp:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yvv:
	movq $56,904(%r13)
_c8yvs:
	jmp *-16(%r13)
_c8yvq:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xZt_entry, .-sat_s8xZt_entry


==================== Asm code ====================
2018-03-16 16:03:42.659048074 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xZt_info:
	.quad	sat_s8xZt_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.659949862 UTC

.section .text
.align 8
sat_s8xZL_entry:
_c8yvN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yvO
_c8yvP:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yvR
_c8yvQ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yvM
_c8yvL:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yvR:
	movq $56,904(%r13)
_c8yvO:
	jmp *-16(%r13)
_c8yvM:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xZL_entry, .-sat_s8xZL_entry


==================== Asm code ====================
2018-03-16 16:03:42.660772533 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xZL_info:
	.quad	sat_s8xZL_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.661716375 UTC

.section .text
.align 8
sat_s8xZT_entry:
_c8yw9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ywa
_c8ywb:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8ywd
_c8ywc:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yw8
_c8yw7:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ywd:
	movq $56,904(%r13)
_c8ywa:
	jmp *-16(%r13)
_c8yw8:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8xZT_entry, .-sat_s8xZT_entry


==================== Asm code ====================
2018-03-16 16:03:42.662512822 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8xZT_info:
	.quad	sat_s8xZT_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.663425046 UTC

.section .text
.align 8
sat_s8y01_entry:
_c8ywv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yww
_c8ywx:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8ywz
_c8ywy:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8ywu
_c8ywt:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ywz:
	movq $56,904(%r13)
_c8yww:
	jmp *-16(%r13)
_c8ywu:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8y01_entry, .-sat_s8y01_entry


==================== Asm code ====================
2018-03-16 16:03:42.66480231 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y01_info:
	.quad	sat_s8y01_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.665700231 UTC

.section .text
.align 8
sat_s8y09_entry:
_c8ywR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ywS
_c8ywT:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8ywV
_c8ywU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8ywQ
_c8ywP:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ywV:
	movq $56,904(%r13)
_c8ywS:
	jmp *-16(%r13)
_c8ywQ:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8y09_entry, .-sat_s8y09_entry


==================== Asm code ====================
2018-03-16 16:03:42.666527305 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y09_info:
	.quad	sat_s8y09_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.66741597 UTC

.section .text
.align 8
sat_s8y0h_entry:
_c8yxd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yxe
_c8yxf:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yxh
_c8yxg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yxc
_c8yxb:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yxh:
	movq $56,904(%r13)
_c8yxe:
	jmp *-16(%r13)
_c8yxc:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8y0h_entry, .-sat_s8y0h_entry


==================== Asm code ====================
2018-03-16 16:03:42.668187527 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y0h_info:
	.quad	sat_s8y0h_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.669079412 UTC

.section .text
.align 8
sat_s8y1h_entry:
_c8yyK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yyL
_c8yyM:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yyO
_c8yyN:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yyJ
_c8yyI:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yyO:
	movq $56,904(%r13)
_c8yyL:
	jmp *-16(%r13)
_c8yyJ:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8y1h_entry, .-sat_s8y1h_entry


==================== Asm code ====================
2018-03-16 16:03:42.67024541 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y1h_info:
	.quad	sat_s8y1h_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.671081274 UTC

.section .text
.align 8
sat_s8y1m_entry:
_c8yz5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yz6
_c8yz7:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yz9
_c8yz8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yz4
_c8yz3:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yz9:
	movq $56,904(%r13)
_c8yz6:
	jmp *-16(%r13)
_c8yz4:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8y1m_entry, .-sat_s8y1m_entry


==================== Asm code ====================
2018-03-16 16:03:42.671852093 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y1m_info:
	.quad	sat_s8y1m_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.672733445 UTC

.section .text
.align 8
sat_s8y1r_entry:
_c8yzq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yzr
_c8yzs:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yzu
_c8yzt:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yzp
_c8yzo:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yzu:
	movq $56,904(%r13)
_c8yzr:
	jmp *-16(%r13)
_c8yzp:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8y1r_entry, .-sat_s8y1r_entry


==================== Asm code ====================
2018-03-16 16:03:42.673533821 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y1r_info:
	.quad	sat_s8y1r_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.67442544 UTC

.section .text
.align 8
sat_s8y1w_entry:
_c8yzL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yzM
_c8yzN:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yzP
_c8yzO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yzK
_c8yzJ:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yzP:
	movq $56,904(%r13)
_c8yzM:
	jmp *-16(%r13)
_c8yzK:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8y1w_entry, .-sat_s8y1w_entry


==================== Asm code ====================
2018-03-16 16:03:42.675158787 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y1w_info:
	.quad	sat_s8y1w_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.676010877 UTC

.section .text
.align 8
sat_s8y1B_entry:
_c8yA6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yA7
_c8yA8:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yAa
_c8yA9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yA5
_c8yA4:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yAa:
	movq $56,904(%r13)
_c8yA7:
	jmp *-16(%r13)
_c8yA5:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8y1B_entry, .-sat_s8y1B_entry


==================== Asm code ====================
2018-03-16 16:03:42.676797627 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y1B_info:
	.quad	sat_s8y1B_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.677687007 UTC

.section .text
.align 8
sat_s8y1G_entry:
_c8yAr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yAs
_c8yAt:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yAv
_c8yAu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yAq
_c8yAp:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yAv:
	movq $56,904(%r13)
_c8yAs:
	jmp *-16(%r13)
_c8yAq:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8y1G_entry, .-sat_s8y1G_entry


==================== Asm code ====================
2018-03-16 16:03:42.678482898 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y1G_info:
	.quad	sat_s8y1G_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.679351231 UTC

.section .text
.align 8
sat_s8y1L_entry:
_c8yAM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yAN
_c8yAO:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yAQ
_c8yAP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yAL
_c8yAK:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yAQ:
	movq $56,904(%r13)
_c8yAN:
	jmp *-16(%r13)
_c8yAL:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8y1L_entry, .-sat_s8y1L_entry


==================== Asm code ====================
2018-03-16 16:03:42.680157364 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y1L_info:
	.quad	sat_s8y1L_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.681026843 UTC

.section .text
.align 8
sat_s8y2D_entry:
_c8yBP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yBQ
_c8yBR:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yBT
_c8yBS:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yBO
_c8yBN:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yBT:
	movq $56,904(%r13)
_c8yBQ:
	jmp *-16(%r13)
_c8yBO:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8y2D_entry, .-sat_s8y2D_entry


==================== Asm code ====================
2018-03-16 16:03:42.682170608 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y2D_info:
	.quad	sat_s8y2D_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.68300742 UTC

.section .text
.align 8
sat_s8y2I_entry:
_c8yCa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yCb
_c8yCc:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yCe
_c8yCd:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yC9
_c8yC8:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yCe:
	movq $56,904(%r13)
_c8yCb:
	jmp *-16(%r13)
_c8yC9:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8y2I_entry, .-sat_s8y2I_entry


==================== Asm code ====================
2018-03-16 16:03:42.683788729 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y2I_info:
	.quad	sat_s8y2I_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.6846999 UTC

.section .text
.align 8
sat_s8y2N_entry:
_c8yCv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yCw
_c8yCx:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yCz
_c8yCy:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yCu
_c8yCt:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yCz:
	movq $56,904(%r13)
_c8yCw:
	jmp *-16(%r13)
_c8yCu:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8y2N_entry, .-sat_s8y2N_entry


==================== Asm code ====================
2018-03-16 16:03:42.68549359 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y2N_info:
	.quad	sat_s8y2N_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.686394814 UTC

.section .text
.align 8
sat_s8y2S_entry:
_c8yCQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yCR
_c8yCS:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yCU
_c8yCT:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yCP
_c8yCO:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yCU:
	movq $56,904(%r13)
_c8yCR:
	jmp *-16(%r13)
_c8yCP:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8y2S_entry, .-sat_s8y2S_entry


==================== Asm code ====================
2018-03-16 16:03:42.68718605 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y2S_info:
	.quad	sat_s8y2S_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.688038783 UTC

.section .text
.align 8
sat_s8y2X_entry:
_c8yDb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yDc
_c8yDd:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yDf
_c8yDe:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yDa
_c8yD9:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yDf:
	movq $56,904(%r13)
_c8yDc:
	jmp *-16(%r13)
_c8yDa:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8y2X_entry, .-sat_s8y2X_entry


==================== Asm code ====================
2018-03-16 16:03:42.688833081 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y2X_info:
	.quad	sat_s8y2X_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.689721071 UTC

.section .text
.align 8
sat_s8y3G_entry:
_c8yDA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yDB
_c8yDC:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yDE
_c8yDD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8yDz
_c8yDy:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yDE:
	movq $56,904(%r13)
_c8yDB:
	jmp *-16(%r13)
_c8yDz:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8y3G_entry, .-sat_s8y3G_entry


==================== Asm code ====================
2018-03-16 16:03:42.690551863 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y3G_info:
	.quad	sat_s8y3G_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:42.691300588 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.mkUTF4_entry
.type GHC.IO.Encoding.UTF8.mkUTF4_entry, @object
GHC.IO.Encoding.UTF8.mkUTF4_entry:
_c8yDH:
	leaq -144(%rbp),%rax
	cmpq %r15,%rax
	jb _c8yDI
_c8yDJ:
	leaq block_c8yo0_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8yo0
_c8yo1:
	movq (%rbx),%rax
	jmp *(%rax)
_c8yDI:
	leaq GHC.IO.Encoding.UTF8.mkUTF4_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF8.mkUTF4_entry, .-GHC.IO.Encoding.UTF8.mkUTF4_entry


==================== Asm code ====================
2018-03-16 16:03:42.69199556 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF4_info
.type GHC.IO.Encoding.UTF8.mkUTF4_info, @object
GHC.IO.Encoding.UTF8.mkUTF4_info:
	.quad	GHC.IO.Encoding.UTF8.mkUTF4_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:42.692763736 UTC

.section .text
.align 8
_c8yo0:
_c8yo0:
	leaq block_c8yo5_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8yo5
_c8yo6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8yo0, .-_c8yo0


==================== Asm code ====================
2018-03-16 16:03:42.693430704 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8yo0_info:
	.quad	_c8yo0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.694215466 UTC

.section .text
.align 8
_c8yo5:
_c8yo5:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8yDN
_c8yDM:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r8
	movq %r8,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	leaq -47(%r12),%rax
	movq %rax,24(%rbp)
	addq $-56,%rbp
	jmp _c8yxm
_c8yDN:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8yo5, .-_c8yo5


==================== Asm code ====================
2018-03-16 16:03:42.694920771 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8yo5_info:
	.quad	_c8yo5
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.69927061 UTC

.section .text
.align 8
_c8yxm:
_c8yxm:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yIs
_c8yIr:
	movq 24(%rbp),%rax
	movq 40(%rbp),%rbx
	movq 48(%rbp),%rcx
	cmpq %rax,%rcx
	jl _c8yOt
_c8yOu:
	addq $-160,%r12
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8yx0
_u8yRm:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	movq %rdx,(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp _c8yub
_c8yHn:
	cmpq $128,%rax
	jb _u8yRk
_c8yHm:
	cmpq $159,%rax
	ja _u8yRm
_u8yRl:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	jmp _c8ytF
_u8yRk:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	movq %rdx,(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp _c8yub
_s8xZa:
	cmpq $237,%rdx
	je _c8yHn
_u8yRj:
	movq %rax,-8(%rbp)
	movq %rdx,(%rbp)
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	addq $-16,%rbp
	jmp _c8yub
_s8xZ9:
	cmpq $225,%rdx
	jb _s8xZa
_c8yHN:
	cmpq $236,%rdx
	ja _s8xZa
_c8yHM:
	cmpq $128,%rax
	jb _s8xZa
_c8yHL:
	cmpq $191,%rax
	ja _s8xZa
_u8yRi:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	jmp _c8ytF
_u8yQB:
	cmpq $2,%rdx
	jne _c8yLb
_c8yNu:
	leaq 1(%rbx),%rax
	movq 72(%rsp),%rdx
	movzbl (%rdx,%rax,1),%eax
	movq %r8,%rdx
	cmpq $224,%r8
	jne _s8xZ9
_c8yI5:
	cmpq $160,%rax
	jb _s8xZ9
_c8yI4:
	cmpq $191,%rax
	ja _s8xZ9
_u8yRh:
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8ytF
_u8yRe:
	movq %r8,(%rbp)
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8yBA
_c8yMb:
	cmpq $128,%rax
	jb _u8yRa
_c8yMa:
	cmpq $159,%rax
	ja _u8yRb
_c8yM9:
	cmpq $128,%rbx
	jb _u8yRc
_c8yM8:
	cmpq $191,%rbx
	ja _u8yRe
_u8yRd:
	movq %r8,(%rbp)
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp _s8y2i
_u8yRc:
	movq %r8,(%rbp)
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8yBA
_u8yRb:
	movq %r8,(%rbp)
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8yBA
_u8yRa:
	movq %r8,(%rbp)
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8yBA
_s8y2z:
	cmpq $237,%r8
	je _c8yMb
_u8yR9:
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %r8,(%rbp)
	addq $-24,%rbp
	jmp _c8yBA
_s8y2y:
	cmpq $225,%r8
	jb _s8y2z
_c8yMP:
	cmpq $236,%r8
	ja _s8y2z
_c8yMO:
	cmpq $128,%rax
	jb _s8y2z
_c8yMN:
	cmpq $191,%rax
	ja _s8y2z
_c8yMM:
	cmpq $128,%rbx
	jb _s8y2z
_c8yML:
	cmpq $191,%rbx
	ja _s8y2z
_u8yR8:
	movq %r8,(%rbp)
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp _s8y2i
_c8yLb:
	leaq 1(%rbx),%rax
	movq 72(%rsp),%rcx
	movzbl (%rcx,%rax,1),%eax
	addq $2,%rbx
	movzbl (%rcx,%rbx,1),%ebx
	cmpq $224,%r8
	jne _s8y2y
_c8yNl:
	cmpq $160,%rax
	jb _s8y2y
_c8yNk:
	cmpq $191,%rax
	ja _s8y2y
_c8yNj:
	cmpq $128,%rbx
	jb _s8y2y
_c8yNi:
	cmpq $191,%rbx
	ja _s8y2y
_u8yR7:
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %r8,(%rbp)
	addq $-16,%rbp
	jmp _s8y2i
_u8yR4:
	movq %r8,(%rbp)
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-32,%rbp
	jmp _c8yyw
_s8y1d:
	cmpq $241,%r8
	jb _u8yQW
_c8yK2:
	cmpq $243,%r8
	ja _u8yQX
_c8yK1:
	cmpq $128,%rax
	jb _u8yQY
_c8yK0:
	cmpq $191,%rax
	ja _u8yQZ
_c8yJZ:
	cmpq $128,%rdx
	jb _u8yR0
_c8yJY:
	cmpq $191,%rdx
	ja _u8yR1
_c8yJX:
	cmpq $128,%rbx
	jb _u8yR2
_c8yJW:
	cmpq $191,%rbx
	ja _u8yR4
_u8yR3:
	movq %r8,(%rbp)
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp _s8y0T
_u8yR2:
	movq %r8,(%rbp)
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-32,%rbp
	jmp _c8yyw
_u8yR1:
	movq %r8,(%rbp)
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-32,%rbp
	jmp _c8yyw
_u8yR0:
	movq %r8,(%rbp)
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-32,%rbp
	jmp _c8yyw
_u8yQZ:
	movq %r8,(%rbp)
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-32,%rbp
	jmp _c8yyw
_u8yQY:
	movq %r8,(%rbp)
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-32,%rbp
	jmp _c8yyw
_u8yQX:
	movq %r8,(%rbp)
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-32,%rbp
	jmp _c8yyw
_u8yQW:
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %r8,(%rbp)
	addq $-32,%rbp
	jmp _c8yyw
_c8yIz:
	leaq 1(%rbx),%rax
	movq 72(%rsp),%rcx
	movzbl (%rcx,%rax,1),%eax
	leaq 2(%rbx),%rdx
	movzbl (%rcx,%rdx,1),%edx
	addq $3,%rbx
	movzbl (%rcx,%rbx,1),%ebx
	cmpq $240,%r8
	jne _s8y1d
_c8yKM:
	cmpq $144,%rax
	jb _s8y1d
_c8yKL:
	cmpq $191,%rax
	ja _s8y1d
_c8yKK:
	cmpq $128,%rdx
	jb _s8y1d
_c8yKJ:
	cmpq $191,%rdx
	ja _s8y1d
_c8yKI:
	cmpq $128,%rbx
	jb _s8y1d
_c8yKH:
	cmpq $191,%rbx
	ja _s8y1d
_u8yQV:
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %r8,(%rbp)
	addq $-24,%rbp
	jmp _s8y0T
_u8yQT:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	movq %rsi,(%rbp)
	movq %rax,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8yrn
_s8xY9:
	cmpq $241,%rsi
	jb _u8yQN
_c8yG5:
	cmpq $243,%rsi
	ja _u8yQO
_c8yG4:
	cmpq $128,%rax
	jb _u8yQP
_c8yG3:
	cmpq $191,%rax
	ja _u8yQQ
_c8yG2:
	cmpq $128,%rdx
	jb _u8yQR
_c8yG1:
	cmpq $191,%rdx
	ja _u8yQT
_u8yQS:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	jmp _c8yqW
_u8yQR:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	movq %rsi,(%rbp)
	movq %rax,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8yrn
_u8yQQ:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	movq %rsi,(%rbp)
	movq %rax,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8yrn
_u8yQP:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	movq %rsi,(%rbp)
	movq %rax,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8yrn
_u8yQO:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	movq %rsi,(%rbp)
	movq %rax,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8yrn
_u8yQN:
	movq %rax,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rsi,(%rbp)
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	addq $-24,%rbp
	jmp _c8yrn
_s8y0y:
	cmpq $240,%r8
	jb _c8yIx
_c8yL5:
	subq %rbx,%rdx
	cmpq $3,%rdx
	jl _u8yQy
_u8yQA:
	cmpq $4,%rdx
	jge _c8yIz
_c8yL1:
	leaq 1(%rbx),%rax
	movq 72(%rsp),%rdx
	movzbl (%rdx,%rax,1),%eax
	leaq 2(%rbx),%rsi
	movzbl (%rdx,%rsi,1),%edx
	movq %r8,%rsi
	cmpq $240,%r8
	jne _s8xY9
_c8yGB:
	cmpq $144,%rax
	jb _s8xY9
_c8yGA:
	cmpq $191,%rax
	ja _s8xY9
_c8yGz:
	cmpq $128,%rdx
	jb _s8xY9
_c8yGy:
	cmpq $191,%rdx
	ja _s8xY9
_u8yQM:
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8yqW
_u8yQK:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	movq %rdx,(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp _c8ypz
_s8xXp:
	cmpq $241,%rdx
	jb _u8yQG
_c8yEG:
	cmpq $243,%rdx
	ja _u8yQH
_c8yEF:
	cmpq $128,%rax
	jb _u8yQI
_c8yEE:
	cmpq $191,%rax
	ja _u8yQK
_u8yQJ:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	jmp _c8yp8
_u8yQI:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	movq %rdx,(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp _c8ypz
_u8yQH:
	movq %rbx,48(%rbp)
	movq %rcx,40(%rbp)
	movq %rdx,(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp _c8ypz
_u8yQG:
	movq %rax,-8(%rbp)
	movq %rdx,(%rbp)
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	addq $-16,%rbp
	jmp _c8ypz
_u8yQy:
	cmpq $2,%rdx
	jl _u8yQz
_c8yKV:
	leaq 1(%rbx),%rax
	movq 72(%rsp),%rdx
	movzbl (%rdx,%rax,1),%eax
	movq %r8,%rdx
	cmpq $240,%r8
	jne _s8xXp
_c8yEY:
	cmpq $144,%rax
	jb _s8xXp
_c8yEX:
	cmpq $191,%rax
	ja _s8xXp
_u8yQF:
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8yp8
_c8yOt:
	movq 88(%rbp),%rdx
	cmpq %rdx,%rbx
	jl _c8yOq
_c8yOr:
	addq $-160,%r12
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8ywE
_c8yOq:
	movq 80(%rbp),%rsi
	movq 104(%rbp),%rdi
	movq 96(%rbp),%r8
	movq 64(%rbp),%r9
	movq 72(%rbp),%r10
	movq 56(%rbp),%r11
	movq 8(%rbp),%r14
	movq %rsi,64(%rsp)
	movq 16(%rbp),%rsi
	movq %rdi,72(%rsp)
	movq 32(%rbp),%rdi
	movq %r8,80(%rsp)
	movq 72(%rsp),%r8
	movzbl (%r8,%rbx,1),%r8d
	cmpq $127,%r8
	ja _c8yOn
_c8yOo:
	movl %r8d,(%r11,%rcx,4)
	addq $-160,%r12
	leaq 1(%rbx),%rax
	movq %rax,40(%rbp)
	leaq 1(%rcx),%rax
	movq %rax,48(%rbp)
	jmp _c8yxm
_c8yOn:
	cmpq $192,%r8
	jb _c8yOi
_c8yOl:
	cmpq $193,%r8
	ja _c8yOi
_c8yOk:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-152(%r12)
	movq %r14,-144(%r12)
	movq %rsi,-136(%r12)
	movq %r11,-128(%r12)
	movq %rax,-120(%r12)
	movq %rdi,-112(%r12)
	movq %rcx,-104(%r12)
	leaq sat_s8y3G_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 80(%rsp),%rax
	movq %rax,-80(%r12)
	movq %r9,-72(%r12)
	movq 64(%rsp),%rax
	movq %rax,-64(%r12)
	movq 72(%rsp),%rax
	movq %rax,-56(%r12)
	movq %r10,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rbx,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yOi:
	addq $-160,%r12
	cmpq $194,%r8
	jb _s8y0x
_c8yOe:
	cmpq $223,%r8
	ja _s8y0x
_c8yOd:
	subq %rbx,%rdx
	cmpq $2,%rdx
	jge _c8yOb
_c8yOc:
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8ywi
_c8yOb:
	leaq 1(%rbx),%rax
	movq 72(%rsp),%rdx
	movzbl (%rdx,%rax,1),%eax
	cmpq $128,%rax
	jae _c8yO8
_c8yO9:
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8yvW
_c8yO8:
	cmpq $192,%rax
	jb _c8yO5
_c8yO6:
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8yvA
_c8yO5:
	addq $-128,%rax
	leaq -192(%r8),%rdx
	shlq $6,%rdx
	addq %rax,%rdx
	movl %edx,(%r11,%rcx,4)
	leaq 2(%rbx),%rax
	movq %rax,40(%rbp)
	leaq 1(%rcx),%rax
	movq %rax,48(%rbp)
	jmp _c8yxm
_s8y0x:
	cmpq $224,%r8
	jb _s8y0y
_c8yNz:
	cmpq $239,%r8
	ja _s8y0y
_c8yNy:
	subq %rbx,%rdx
	cmpq $1,%rdx
	jne _u8yQB
_c8yNo:
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8yt6
_u8yQz:
	cmpq $1,%rdx
	jl _c8yIz
_c8yKP:
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8yoz
_c8yIx:
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	jmp _c8yod
_c8yIs:
	movq $160,904(%r13)
	leaq block_c8yxm_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8yxm, .-_c8yxm


==================== Asm code ====================
2018-03-16 16:03:42.702680476 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8yxm_info:
	.quad	_c8yxm
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.703557455 UTC

.section .text
.align 8
_c8yod:
_c8yod:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yDR
_c8yDQ:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8xWY_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yDR:
	movq $160,904(%r13)
	leaq block_c8yod_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8yod, .-_c8yod


==================== Asm code ====================
2018-03-16 16:03:42.704405819 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8yod_info:
	.quad	_c8yod
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.705336405 UTC

.section .text
.align 8
_c8yoz:
_c8yoz:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yDV
_c8yDU:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8xX6_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yDV:
	movq $160,904(%r13)
	leaq block_c8yoz_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8yoz, .-_c8yoz


==================== Asm code ====================
2018-03-16 16:03:42.706209861 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8yoz_info:
	.quad	_c8yoz
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.708171973 UTC

.section .text
.align 8
_c8ypz:
_c8ypz:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yE4
_c8yE3:
	movq 96(%rbp),%rax
	movq 120(%rbp),%rbx
	movq 112(%rbp),%rcx
	movq 80(%rbp),%rdx
	movq 88(%rbp),%rsi
	movq 104(%rbp),%rdi
	movq 72(%rbp),%r8
	movq 24(%rbp),%r9
	movq 32(%rbp),%r10
	movq 40(%rbp),%r11
	movq 48(%rbp),%r14
	movq %rax,64(%rsp)
	movq 64(%rbp),%rax
	movq %rbx,72(%rsp)
	movq 56(%rbp),%rbx
	cmpq $244,16(%rbp)
	je _c8yEg
_c8yE7:
	movq %rcx,80(%rsp)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8xXt_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yEg:
	movq %rcx,80(%rsp)
	movq 8(%rbp),%rcx
	cmpq $128,%rcx
	jb _c8yEa
_c8yEf:
	cmpq $143,%rcx
	ja _c8yEd
_c8yEe:
	addq $-160,%r12
	addq $16,%rbp
	jmp _c8yp8
_c8yEd:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8xXD_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yEa:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8xXy_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yE4:
	movq $160,904(%r13)
	leaq block_c8ypz_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8ypz, .-_c8ypz


==================== Asm code ====================
2018-03-16 16:03:42.709968516 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ypz_info:
	.quad	_c8ypz
	.quad	1408207
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.710842548 UTC

.section .text
.align 8
_c8yp8:
_c8yp8:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yE0
_c8yDZ:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8xXm_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yE0:
	movq $160,904(%r13)
	leaq block_c8yp8_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8yp8, .-_c8yp8


==================== Asm code ====================
2018-03-16 16:03:42.711664828 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8yp8_info:
	.quad	_c8yp8
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.713358507 UTC

.section .text
.align 8
_c8yrn:
_c8yrn:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yF7
_c8yF6:
	movq 104(%rbp),%rax
	movq 128(%rbp),%rbx
	movq 120(%rbp),%rcx
	movq 88(%rbp),%rdx
	movq 96(%rbp),%rsi
	movq 112(%rbp),%rdi
	movq 80(%rbp),%r8
	movq 32(%rbp),%r9
	movq 40(%rbp),%r10
	movq 48(%rbp),%r11
	movq 56(%rbp),%r14
	movq %rax,64(%rsp)
	movq 72(%rbp),%rax
	movq %rbx,72(%rsp)
	movq 64(%rbp),%rbx
	cmpq $244,24(%rbp)
	je _c8yFr
_c8yFa:
	movq %rcx,80(%rsp)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8xYd_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yFr:
	movq %rcx,80(%rsp)
	movq 8(%rbp),%rcx
	cmpq $128,%rcx
	jb _c8yFd
_c8yFq:
	cmpq $143,%rcx
	ja _c8yFg
_c8yFp:
	movq 16(%rbp),%rcx
	cmpq $128,%rcx
	jb _c8yFj
_c8yFo:
	cmpq $191,%rcx
	ja _c8yFm
_c8yFn:
	addq $-160,%r12
	addq $24,%rbp
	jmp _c8yqW
_c8yFm:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8xYx_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yFj:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8xYs_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yFg:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8xYn_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yFd:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8xYi_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yF7:
	movq $160,904(%r13)
	leaq block_c8yrn_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8yrn, .-_c8yrn


==================== Asm code ====================
2018-03-16 16:03:42.71510919 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8yrn_info:
	.quad	_c8yrn
	.quad	2816464
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.715951606 UTC

.section .text
.align 8
_c8yqW:
_c8yqW:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yF3
_c8yF2:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8xY6_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yF3:
	movq $160,904(%r13)
	leaq block_c8yqW_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8yqW, .-_c8yqW


==================== Asm code ====================
2018-03-16 16:03:42.71681215 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8yqW_info:
	.quad	_c8yqW
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.718873425 UTC

.section .text
.align 8
_c8yyw:
_c8yyw:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yII
_c8yIH:
	movq 112(%rbp),%rax
	movq 136(%rbp),%rbx
	movq 128(%rbp),%rcx
	movq 96(%rbp),%rdx
	movq 104(%rbp),%rsi
	movq 120(%rbp),%rdi
	movq 88(%rbp),%r8
	movq 40(%rbp),%r9
	movq 48(%rbp),%r10
	movq 56(%rbp),%r11
	movq 64(%rbp),%r14
	movq %rax,64(%rsp)
	movq 72(%rbp),%rax
	movq %rbx,72(%rsp)
	movq 80(%rbp),%rbx
	cmpq $244,32(%rbp)
	je _c8yJa
_c8yIL:
	movq %rcx,80(%rsp)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8y1h_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yJa:
	movq %rcx,80(%rsp)
	movq 8(%rbp),%rcx
	cmpq $128,%rcx
	jb _c8yIO
_c8yJ9:
	cmpq $143,%rcx
	ja _c8yIR
_c8yJ8:
	movq 16(%rbp),%rcx
	cmpq $128,%rcx
	jb _c8yIU
_c8yJ7:
	cmpq $191,%rcx
	ja _c8yIX
_c8yJ6:
	movq 24(%rbp),%rcx
	cmpq $128,%rcx
	jb _c8yJ0
_c8yJ5:
	cmpq $191,%rcx
	ja _c8yJ3
_c8yJ4:
	addq $-160,%r12
	addq $8,%rbp
	jmp _s8y0T
_c8yJ3:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8y1L_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yJ0:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8y1G_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yIX:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8y1B_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yIU:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8y1w_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yIR:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8y1r_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yIO:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8y1m_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yII:
	movq $160,904(%r13)
	leaq block_c8yyw_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8yyw, .-_c8yyw


==================== Asm code ====================
2018-03-16 16:03:42.721011043 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8yyw_info:
	.quad	_c8yyw
	.quad	5632977
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.722020026 UTC

.section .text
.align 8
_s8y0T:
_s8y0T:
	movq 32(%rbp),%rax
	movq 64(%rbp),%rax
	movq 72(%rbp),%rbx
	movq 16(%rbp),%rcx
	addq $-128,%rcx
	movq 8(%rbp),%rdx
	addq $-128,%rdx
	shlq $6,%rdx
	addq %rcx,%rdx
	movq (%rbp),%rcx
	addq $-128,%rcx
	shlq $12,%rcx
	addq %rdx,%rcx
	movq 24(%rbp),%rdx
	addq $-240,%rdx
	shlq $18,%rdx
	addq %rcx,%rdx
	movq 80(%rbp),%rcx
	movl %edx,(%rcx,%rbx,4)
	addq $4,%rax
	movq %rax,64(%rbp)
	leaq 1(%rbx),%rax
	movq %rax,72(%rbp)
	addq $24,%rbp
	jmp _c8yxm
	.size _s8y0T, .-_s8y0T


==================== Asm code ====================
2018-03-16 16:03:42.723800076 UTC

.section .text
.align 8
_c8yBA:
_c8yBA:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yLl
_c8yLk:
	movq 104(%rbp),%rax
	movq 128(%rbp),%rbx
	movq 120(%rbp),%rcx
	movq 88(%rbp),%rdx
	movq 96(%rbp),%rsi
	movq 112(%rbp),%rdi
	movq 80(%rbp),%r8
	movq 32(%rbp),%r9
	movq 40(%rbp),%r10
	movq 48(%rbp),%r11
	movq 56(%rbp),%r14
	movq %rax,64(%rsp)
	movq 64(%rbp),%rax
	movq %rbx,72(%rsp)
	movq 72(%rbp),%rbx
	cmpq $238,24(%rbp)
	jb _c8yLo
_c8yLF:
	movq %rcx,80(%rsp)
	movq 8(%rbp),%rcx
	cmpq $128,%rcx
	jb _c8yLr
_c8yLE:
	cmpq $191,%rcx
	ja _c8yLu
_c8yLD:
	movq 16(%rbp),%rcx
	cmpq $128,%rcx
	jb _c8yLx
_c8yLC:
	cmpq $191,%rcx
	ja _c8yLA
_c8yLB:
	addq $-160,%r12
	addq $8,%rbp
	jmp _s8y2i
_c8yLA:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8y2X_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yLx:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8y2S_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yLu:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8y2N_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yLr:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8y2I_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yLo:
	movq %rcx,80(%rsp)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8y2D_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yLl:
	movq $160,904(%r13)
	leaq block_c8yBA_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8yBA, .-_c8yBA


==================== Asm code ====================
2018-03-16 16:03:42.725590939 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8yBA_info:
	.quad	_c8yBA
	.quad	2816464
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.726359371 UTC

.section .text
.align 8
_s8y2i:
_s8y2i:
	movq 24(%rbp),%rax
	movq 56(%rbp),%rax
	movq 64(%rbp),%rbx
	movq 8(%rbp),%rcx
	addq $-128,%rcx
	movq (%rbp),%rdx
	addq $-128,%rdx
	shlq $6,%rdx
	addq %rcx,%rdx
	movq 16(%rbp),%rcx
	addq $-224,%rcx
	shlq $12,%rcx
	addq %rdx,%rcx
	movq 72(%rbp),%rdx
	movl %ecx,(%rdx,%rbx,4)
	addq $3,%rax
	movq %rax,56(%rbp)
	leaq 1(%rbx),%rax
	movq %rax,64(%rbp)
	addq $16,%rbp
	jmp _c8yxm
	.size _s8y2i, .-_s8y2i


==================== Asm code ====================
2018-03-16 16:03:42.727983044 UTC

.section .text
.align 8
_c8yub:
_c8yub:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yGP
_c8yGO:
	movq 96(%rbp),%rax
	movq 120(%rbp),%rbx
	movq 112(%rbp),%rcx
	movq 80(%rbp),%rdx
	movq 88(%rbp),%rsi
	movq 104(%rbp),%rdi
	movq 72(%rbp),%r8
	movq 24(%rbp),%r9
	movq 32(%rbp),%r10
	movq 40(%rbp),%r11
	movq 48(%rbp),%r14
	movq %rax,64(%rsp)
	movq 64(%rbp),%rax
	movq %rbx,72(%rsp)
	movq 56(%rbp),%rbx
	movq %rcx,80(%rsp)
	movq 16(%rbp),%rcx
	cmpq $238,%rcx
	jb _c8yGS
_c8yH5:
	cmpq $239,%rcx
	ja _c8yGV
_c8yH4:
	movq 8(%rbp),%rcx
	cmpq $128,%rcx
	jb _c8yGY
_c8yH3:
	cmpq $191,%rcx
	ja _c8yH1
_c8yH2:
	addq $-160,%r12
	addq $16,%rbp
	jmp _c8ytF
_c8yH1:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8xZt_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yGY:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8xZo_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yGV:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8xZj_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yGS:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8xZe_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yGP:
	movq $160,904(%r13)
	leaq block_c8yub_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8yub, .-_c8yub


==================== Asm code ====================
2018-03-16 16:03:42.72955702 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8yub_info:
	.quad	_c8yub
	.quad	1408207
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.730446368 UTC

.section .text
.align 8
_c8ytF:
_c8ytF:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yGK
_c8yGJ:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8xZ6_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yGK:
	movq $160,904(%r13)
	leaq block_c8ytF_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8ytF, .-_c8ytF


==================== Asm code ====================
2018-03-16 16:03:42.731259105 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ytF_info:
	.quad	_c8ytF
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.73216017 UTC

.section .text
.align 8
_c8yt6:
_c8yt6:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yGF
_c8yGE:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8xYQ_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yGF:
	movq $160,904(%r13)
	leaq block_c8yt6_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8yt6, .-_c8yt6


==================== Asm code ====================
2018-03-16 16:03:42.733016953 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8yt6_info:
	.quad	_c8yt6
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.733998293 UTC

.section .text
.align 8
_c8yvA:
_c8yvA:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yI9
_c8yI8:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8xZL_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yI9:
	movq $160,904(%r13)
	leaq block_c8yvA_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8yvA, .-_c8yvA


==================== Asm code ====================
2018-03-16 16:03:42.734915809 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8yvA_info:
	.quad	_c8yvA
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.735810111 UTC

.section .text
.align 8
_c8yvW:
_c8yvW:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yId
_c8yIc:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8xZT_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yId:
	movq $160,904(%r13)
	leaq block_c8yvW_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8yvW, .-_c8yvW


==================== Asm code ====================
2018-03-16 16:03:42.73669679 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8yvW_info:
	.quad	_c8yvW
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.737867813 UTC

.section .text
.align 8
_c8ywi:
_c8ywi:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yIh
_c8yIg:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8y01_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yIh:
	movq $160,904(%r13)
	leaq block_c8ywi_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8ywi, .-_c8ywi


==================== Asm code ====================
2018-03-16 16:03:42.738749178 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ywi_info:
	.quad	_c8ywi
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.739648594 UTC

.section .text
.align 8
_c8ywE:
_c8ywE:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yIl
_c8yIk:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8y09_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yIl:
	movq $160,904(%r13)
	leaq block_c8ywE_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8ywE, .-_c8ywE


==================== Asm code ====================
2018-03-16 16:03:42.740506239 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ywE_info:
	.quad	_c8ywE
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.741385609 UTC

.section .text
.align 8
_c8yx0:
_c8yx0:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8yIp
_c8yIo:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8y0h_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8yIp:
	movq $160,904(%r13)
	leaq block_c8yx0_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8yx0, .-_c8yx0


==================== Asm code ====================
2018-03-16 16:03:42.742277303 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8yx0_info:
	.quad	_c8yx0
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.743983777 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF8_bom2_bytes
.type GHC.IO.Encoding.UTF8.mkUTF8_bom2_bytes, @object
GHC.IO.Encoding.UTF8.mkUTF8_bom2_bytes:
	.asciz "UTF-8BOM"


==================== Asm code ====================
2018-03-16 16:03:42.746727778 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF8_bom1_closure
.type GHC.IO.Encoding.UTF8.mkUTF8_bom1_closure, @object
GHC.IO.Encoding.UTF8.mkUTF8_bom1_closure:
	.quad	GHC.IO.Encoding.UTF8.mkUTF8_bom1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:42.747586223 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.mkUTF8_bom1_entry
.type GHC.IO.Encoding.UTF8.mkUTF8_bom1_entry, @object
GHC.IO.Encoding.UTF8.mkUTF8_bom1_entry:
_c8z6q:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8z6r
_c8z6s:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8z6p
_c8z6o:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Encoding.UTF8.mkUTF8_bom2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8z6r:
	jmp *-16(%r13)
_c8z6p:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF8.mkUTF8_bom1_entry, .-GHC.IO.Encoding.UTF8.mkUTF8_bom1_entry


==================== Asm code ====================
2018-03-16 16:03:42.748300303 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF8_bom1_info
.type GHC.IO.Encoding.UTF8.mkUTF8_bom1_info, @object
GHC.IO.Encoding.UTF8.mkUTF8_bom1_info:
	.quad	GHC.IO.Encoding.UTF8.mkUTF8_bom1_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:42.75069226 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF3_closure
.type GHC.IO.Encoding.UTF8.mkUTF3_closure, @object
GHC.IO.Encoding.UTF8.mkUTF3_closure:
	.quad	GHC.IO.Encoding.UTF8.mkUTF3_info


==================== Asm code ====================
2018-03-16 16:03:42.751344586 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.mkUTF3_entry
.type GHC.IO.Encoding.UTF8.mkUTF3_entry, @object
GHC.IO.Encoding.UTF8.mkUTF3_entry:
_c8z6F:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF8.mkUTF3_entry, .-GHC.IO.Encoding.UTF8.mkUTF3_entry


==================== Asm code ====================
2018-03-16 16:03:42.751980753 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF3_info
.type GHC.IO.Encoding.UTF8.mkUTF3_info, @object
GHC.IO.Encoding.UTF8.mkUTF3_info:
	.quad	GHC.IO.Encoding.UTF8.mkUTF3_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:03:42.770405365 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF8_bom_closure
.type GHC.IO.Encoding.UTF8.mkUTF8_bom_closure, @object
GHC.IO.Encoding.UTF8.mkUTF8_bom_closure:
	.quad	GHC.IO.Encoding.UTF8.mkUTF8_bom_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:42.771296082 UTC

.section .text
.align 8
sat_s8y5y_entry:
_c8z77:
	movq 6(%rbx),%rax
	movq %r14,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8y5y_entry, .-sat_s8y5y_entry


==================== Asm code ====================
2018-03-16 16:03:42.77195945 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y5y_info:
	.quad	sat_s8y5y_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:42.772575995 UTC

.section .text
.align 8
sat_s8y5u_entry:
_c8z7g:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8y5u_entry, .-sat_s8y5u_entry


==================== Asm code ====================
2018-03-16 16:03:42.773167739 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y5u_info:
	.quad	sat_s8y5u_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:03:42.77401659 UTC

.section .text
.align 8
sat_s8y5s_entry:
_c8z7o:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverEncode1_entry@gotpcrel(%rip)
	.size sat_s8y5s_entry, .-sat_s8y5s_entry


==================== Asm code ====================
2018-03-16 16:03:42.774583203 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y5s_info:
	.quad	sat_s8y5s_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8zbh_srt


==================== Asm code ====================
2018-03-16 16:03:42.775398754 UTC

.section .text
.align 8
sat_s8y5r_entry:
_c8z7z:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _c8z7A
_c8z7B:
	leaq block_c8z7w_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 5(%rbx),%rax
	movq %rsi,%rbx
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8z7w
_c8z7x:
	movq (%rbx),%rax
	jmp *(%rax)
_c8z7A:
	jmp *-8(%r13)
	.size sat_s8y5r_entry, .-sat_s8y5r_entry


==================== Asm code ====================
2018-03-16 16:03:42.776112596 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y5r_info:
	.quad	sat_s8y5r_entry
	.quad	1
	.quad	9
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:42.776916527 UTC

.section .text
.align 8
_c8z7w:
_c8z7w:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_c8z7E_info(%rip),%rcx
	movq %rcx,-56(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rsi
	movq 23(%rbx),%rdi
	movq 31(%rbx),%r8
	movq 39(%rbx),%r9
	movq 47(%rbx),%rbx
	movq %rbx,%r10
	movq %rax,%rbx
	movq %rdi,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %r8,-24(%rbp)
	movq %r9,-16(%rbp)
	movq %r10,-8(%rbp)
	movq %rcx,(%rbp)
	addq $-56,%rbp
	testb $7,%bl
	jne _c8z7E
_c8z7G:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8z7w, .-_c8z7w


==================== Asm code ====================
2018-03-16 16:03:42.777680736 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8z7w_info:
	.quad	_c8z7w
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.778838634 UTC

.section .text
.align 8
_c8z7E:
_c8z7E:
	movq 72(%rbp),%rax
	movq 56(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c8z7M
_c8z7N:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8z7S
_c8z7R:
	movq 32(%rbp),%rbx
	movq 48(%rbp),%rdx
	movq %rbx,%rsi
	subq %rdx,%rsi
	cmpq $3,%rsi
	jge _c8z8p
_c8z8s:
	movq (,,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rbx
	addq $2,%rbx
	movq %rbx,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	leaq -47(%r12),%rax
	addq $-24,%r12
	movq %rax,%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8z8p:
	movq 64(%rbp),%rcx
	movq 8(%rbp),%rsi
	movq 16(%rbp),%rdi
	movq 24(%rbp),%r8
	movq 40(%rbp),%r9
	movq GHC.Types.False_closure@gotpcrel(%rip),%r10
	incq %r10
	movq %r10,8(%rcx)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rcx,%rsi
	movq %rdi,%rcx
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %r10,%r14
	movq %r11,72(%rsp)
	movq %rcx,80(%rsp)
	movq %r8,88(%rsp)
	movq %r9,96(%rsp)
	movq %rdx,104(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq 96(%rsp),%rcx
	movq 64(%rsp),%rax
	movb $-17,(%rax,%rcx,1)
	leaq 1(%rcx),%rdx
	movb $-69,(%rax,%rdx,1)
	leaq 2(%rcx),%rdx
	movb $-65,(%rax,%rdx,1)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-48(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-40(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq 88(%rsp),%rax
	movq %rax,-8(%r12)
	leaq 3(%rcx),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rsi
	addq $80,%rbp
	jmp GHC.IO.Encoding.UTF8.mkUTF1_entry
_c8z7S:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8z7M:
	movq %rcx,%rsi
	movq %rax,%r14
	addq $80,%rbp
	jmp GHC.IO.Encoding.UTF8.mkUTF1_entry
	.size _c8z7E, .-_c8z7E


==================== Asm code ====================
2018-03-16 16:03:42.779881905 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8z7E_info:
	.quad	_c8z7E
	.quad	3657
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.780634502 UTC

.section .text
.align 8
sat_s8y5A_entry:
_c8z8x:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8z8y
_c8z8z:
	leaq block_c8z6X_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq GHC.Types.True_closure@gotpcrel(%rip),%rbx
	addq $2,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
_c8z8y:
	jmp *-8(%r13)
	.size sat_s8y5A_entry, .-sat_s8y5A_entry


==================== Asm code ====================
2018-03-16 16:03:42.7813553 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y5A_info:
	.quad	sat_s8y5A_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8zbh_srt


==================== Asm code ====================
2018-03-16 16:03:42.782180514 UTC

.section .text
.align 8
_c8z6X:
_c8z6X:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c8z8C
_c8z8B:
	leaq sat_s8y5y_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %rbx,-96(%r12)
	leaq sat_s8y5u_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %rbx,-80(%r12)
	leaq sat_s8y5s_info(%rip),%rax
	movq %rax,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	leaq sat_s8y5r_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %rbx,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq -53(%r12),%rax
	movq %rax,-32(%r12)
	leaq -69(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF8.mkUTF3_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq -87(%r12),%rax
	movq %rax,-8(%r12)
	leaq -102(%r12),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8z8C:
	movq $112,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8z6X, .-_c8z6X


==================== Asm code ====================
2018-03-16 16:03:42.782962321 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8z6X_info:
	.quad	_c8z6X
	.quad	1
	.quad	4294967326
	.quad	S8zbh_srt


==================== Asm code ====================
2018-03-16 16:03:42.783677306 UTC

.section .text
.align 8
sat_s8y4P_entry:
_c8z8S:
	movq 6(%rbx),%rax
	movq %r14,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8y4P_entry, .-sat_s8y4P_entry


==================== Asm code ====================
2018-03-16 16:03:42.784365347 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y4P_info:
	.quad	sat_s8y4P_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:42.785031012 UTC

.section .text
.align 8
sat_s8y4L_entry:
_c8z91:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8y4L_entry, .-sat_s8y4L_entry


==================== Asm code ====================
2018-03-16 16:03:42.785822736 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y4L_info:
	.quad	sat_s8y4L_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:03:42.786444736 UTC

.section .text
.align 8
sat_s8y4J_entry:
_c8z99:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverDecode1_entry@gotpcrel(%rip)
	.size sat_s8y4J_entry, .-sat_s8y4J_entry


==================== Asm code ====================
2018-03-16 16:03:42.787062152 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y4J_info:
	.quad	sat_s8y4J_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8zbh_srt+8


==================== Asm code ====================
2018-03-16 16:03:42.787858941 UTC

.section .text
.align 8
sat_s8y4I_entry:
_c8z9k:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _c8z9l
_c8z9m:
	leaq block_c8z9h_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 5(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8z9h
_c8z9i:
	movq (%rbx),%rax
	jmp *(%rax)
_c8z9l:
	jmp *-8(%r13)
	.size sat_s8y4I_entry, .-sat_s8y4I_entry


==================== Asm code ====================
2018-03-16 16:03:42.788531708 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y4I_info:
	.quad	sat_s8y4I_entry
	.quad	1
	.quad	9
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:42.789418712 UTC

.section .text
.align 8
_c8z9h:
_c8z9h:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_c8z9p_info(%rip),%rcx
	movq %rcx,-56(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rsi
	movq 23(%rbx),%rdi
	movq 31(%rbx),%r8
	movq 39(%rbx),%r9
	movq 47(%rbx),%rbx
	movq %rbx,%r10
	movq %rax,%rbx
	movq %rdi,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %r8,-24(%rbp)
	movq %r9,-16(%rbp)
	movq %r10,-8(%rbp)
	movq %rcx,(%rbp)
	addq $-56,%rbp
	testb $7,%bl
	jne _c8z9p
_c8z9r:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8z9h, .-_c8z9h


==================== Asm code ====================
2018-03-16 16:03:42.790129761 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8z9h_info:
	.quad	_c8z9h
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.791890978 UTC

.section .text
.align 8
_c8z9p:
_c8z9p:
	movq 72(%rbp),%rax
	movq 56(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c8z9x
_c8z9y:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8z9D
_c8z9C:
	movq 40(%rbp),%rbx
	movq 48(%rbp),%rdx
	movq %rdx,%rsi
	subq %rbx,%rsi
	cmpq $1,%rsi
	jge _c8zaO
_c8zaR:
	movq (,,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rbx,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	leaq -47(%r12),%rax
	addq $-24,%r12
	movq %rax,%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8zaM:
	movq %rdx,%r11
	subq %rbx,%r11
	cmpq $2,%r11
	jge _c8zaI
_c8zaL:
	movq (,,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rbx,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	leaq -47(%r12),%rax
	addq $-24,%r12
	movq %rax,%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8zaG:
	movq %rdx,%r11
	subq %rbx,%r11
	cmpq $3,%r11
	jge _c8zaC
_c8zaF:
	movq (,,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rbx,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	leaq -47(%r12),%rax
	addq $-24,%r12
	movq %rax,%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8zaA:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rcx
	incq %rcx
	movq %rcx,8(%rsi)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rdi,%r11
	movq %rcx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %r11,72(%rsp)
	movq %r8,80(%rsp)
	movq %r9,88(%rsp)
	movq %r10,96(%rsp)
	movq %rdx,104(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 72(%rsp),%rax
	movq %rax,-40(%r12)
	movq 80(%rsp),%rax
	movq %rax,-32(%r12)
	movq 64(%rsp),%rax
	movq %rax,-24(%r12)
	movq 88(%rsp),%rax
	movq %rax,-16(%r12)
	leaq 3(%rbx),%rax
	movq %rax,-8(%r12)
	movq 96(%rsp),%rax
	movq %rax,(%r12)
	movq %r14,%rsi
	leaq -47(%r12),%r14
	addq $80,%rbp
	jmp GHC.IO.Encoding.UTF8.mkUTF4_entry
_c8zaC:
	leaq 2(%rbx),%r11
	movzbl (%rdi,%r11,1),%r11d
	cmpq $191,%r11
	je _c8zaA
_c8zaq:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rbx,8(%rsi)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $-56,%r12
	movq %rbx,%rsi
	addq $80,%rbp
	jmp GHC.IO.Encoding.UTF8.mkUTF4_entry
_c8zaI:
	leaq 1(%rbx),%r11
	movzbl (%rdi,%r11,1),%r11d
	cmpq $187,%r11
	je _c8zaG
_c8za8:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rbx,8(%rsi)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $-56,%r12
	movq %rbx,%rsi
	addq $80,%rbp
	jmp GHC.IO.Encoding.UTF8.mkUTF4_entry
_c8zaO:
	movq 64(%rbp),%rsi
	movq 8(%rbp),%rdi
	movq 16(%rbp),%r8
	movq 24(%rbp),%r9
	movq 32(%rbp),%r10
	movzbl (%rdi,%rbx,1),%r11d
	cmpq $239,%r11
	je _c8zaM
_c8z9Q:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rbx,8(%rsi)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $-56,%r12
	movq %rbx,%rsi
	addq $80,%rbp
	jmp GHC.IO.Encoding.UTF8.mkUTF4_entry
_c8z9D:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8z9x:
	movq %rax,%rsi
	movq %rcx,%r14
	addq $80,%rbp
	jmp GHC.IO.Encoding.UTF8.mkUTF4_entry
	.size _c8z9p, .-_c8z9p


==================== Asm code ====================
2018-03-16 16:03:42.793434454 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8z9p_info:
	.quad	_c8z9p
	.quad	3657
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:42.794207983 UTC

.section .text
.align 8
sat_s8y4R_entry:
_c8zb5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8zb6
_c8zb7:
	leaq block_c8z8I_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq GHC.Types.True_closure@gotpcrel(%rip),%rbx
	addq $2,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
_c8zb6:
	jmp *-8(%r13)
	.size sat_s8y4R_entry, .-sat_s8y4R_entry


==================== Asm code ====================
2018-03-16 16:03:42.794859087 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y4R_info:
	.quad	sat_s8y4R_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8zbh_srt+8


==================== Asm code ====================
2018-03-16 16:03:42.795723123 UTC

.section .text
.align 8
_c8z8I:
_c8z8I:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c8zba
_c8zb9:
	leaq sat_s8y4P_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %rbx,-96(%r12)
	leaq sat_s8y4L_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %rbx,-80(%r12)
	leaq sat_s8y4J_info(%rip),%rax
	movq %rax,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	leaq sat_s8y4I_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %rbx,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq -53(%r12),%rax
	movq %rax,-32(%r12)
	leaq -69(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF8.mkUTF3_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq -87(%r12),%rax
	movq %rax,-8(%r12)
	leaq -102(%r12),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8zba:
	movq $112,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8z8I, .-_c8z8I


==================== Asm code ====================
2018-03-16 16:03:42.796537304 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8z8I_info:
	.quad	_c8z8I
	.quad	1
	.quad	4294967326
	.quad	S8zbh_srt+8


==================== Asm code ====================
2018-03-16 16:03:42.797732011 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.mkUTF8_bom_entry
.type GHC.IO.Encoding.UTF8.mkUTF8_bom_entry, @object
GHC.IO.Encoding.UTF8.mkUTF8_bom_entry:
_c8zbc:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8zbg
_c8zbf:
	leaq sat_s8y5A_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s8y4R_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	movq GHC.IO.Encoding.Types.TextEncoding_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF8.mkUTF8_bom1_closure(%rip),%rax
	movq %rax,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8zbg:
	movq $64,904(%r13)
	leaq GHC.IO.Encoding.UTF8.mkUTF8_bom_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF8.mkUTF8_bom_entry, .-GHC.IO.Encoding.UTF8.mkUTF8_bom_entry


==================== Asm code ====================
2018-03-16 16:03:42.798478632 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF8_bom_info
.type GHC.IO.Encoding.UTF8.mkUTF8_bom_info, @object
GHC.IO.Encoding.UTF8.mkUTF8_bom_info:
	.quad	GHC.IO.Encoding.UTF8.mkUTF8_bom_entry
	.quad	0
	.quad	64424509454
	.quad	4294967301
	.quad	S8zbh_srt


==================== Asm code ====================
2018-03-16 16:03:42.801221911 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.utf8_bom_closure
.type GHC.IO.Encoding.UTF8.utf8_bom_closure, @object
GHC.IO.Encoding.UTF8.utf8_bom_closure:
	.quad	GHC.IO.Encoding.UTF8.utf8_bom_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:42.802165526 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.utf8_bom_entry
.type GHC.IO.Encoding.UTF8.utf8_bom_entry, @object
GHC.IO.Encoding.UTF8.utf8_bom_entry:
_c8ze0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ze1
_c8ze2:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8zdZ
_c8zdY:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq GHC.IO.Encoding.Failure.ErrorOnCodingFailure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $-16,%rbp
	jmp GHC.IO.Encoding.UTF8.mkUTF8_bom_entry
_c8ze1:
	jmp *-16(%r13)
_c8zdZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF8.utf8_bom_entry, .-GHC.IO.Encoding.UTF8.utf8_bom_entry


==================== Asm code ====================
2018-03-16 16:03:42.802914982 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.utf8_bom_info
.type GHC.IO.Encoding.UTF8.utf8_bom_info, @object
GHC.IO.Encoding.UTF8.utf8_bom_info:
	.quad	GHC.IO.Encoding.UTF8.utf8_bom_entry
	.quad	0
	.quad	4294967317
	.quad	S8zbh_srt+16


==================== Asm code ====================
2018-03-16 16:03:42.805327802 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF6_bytes
.type GHC.IO.Encoding.UTF8.mkUTF6_bytes, @object
GHC.IO.Encoding.UTF8.mkUTF6_bytes:
	.asciz "UTF-8"


==================== Asm code ====================
2018-03-16 16:03:42.807885224 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF5_closure
.type GHC.IO.Encoding.UTF8.mkUTF5_closure, @object
GHC.IO.Encoding.UTF8.mkUTF5_closure:
	.quad	GHC.IO.Encoding.UTF8.mkUTF5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:42.808795679 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.mkUTF5_entry
.type GHC.IO.Encoding.UTF8.mkUTF5_entry, @object
GHC.IO.Encoding.UTF8.mkUTF5_entry:
_c8zej:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8zek
_c8zel:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8zei
_c8zeh:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Encoding.UTF8.mkUTF6_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8zek:
	jmp *-16(%r13)
_c8zei:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF8.mkUTF5_entry, .-GHC.IO.Encoding.UTF8.mkUTF5_entry


==================== Asm code ====================
2018-03-16 16:03:42.809873696 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF5_info
.type GHC.IO.Encoding.UTF8.mkUTF5_info, @object
GHC.IO.Encoding.UTF8.mkUTF5_info:
	.quad	GHC.IO.Encoding.UTF8.mkUTF5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:42.811898749 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF2_closure
.type GHC.IO.Encoding.UTF8.mkUTF2_closure, @object
GHC.IO.Encoding.UTF8.mkUTF2_closure:
	.quad	GHC.IO.Encoding.UTF8.mkUTF2_info


==================== Asm code ====================
2018-03-16 16:03:42.812631971 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.mkUTF2_entry
.type GHC.IO.Encoding.UTF8.mkUTF2_entry, @object
GHC.IO.Encoding.UTF8.mkUTF2_entry:
_c8zey:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF8.mkUTF2_entry, .-GHC.IO.Encoding.UTF8.mkUTF2_entry


==================== Asm code ====================
2018-03-16 16:03:42.813274105 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF2_info
.type GHC.IO.Encoding.UTF8.mkUTF2_info, @object
GHC.IO.Encoding.UTF8.mkUTF2_info:
	.quad	GHC.IO.Encoding.UTF8.mkUTF2_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:42.818353985 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF8_closure
.type GHC.IO.Encoding.UTF8.mkUTF8_closure, @object
GHC.IO.Encoding.UTF8.mkUTF8_closure:
	.quad	GHC.IO.Encoding.UTF8.mkUTF8_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:42.819067568 UTC

.section .text
.align 8
sat_s8y5J_entry:
_c8zeV:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverEncode1_entry@gotpcrel(%rip)
	.size sat_s8y5J_entry, .-sat_s8y5J_entry


==================== Asm code ====================
2018-03-16 16:03:42.819682787 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y5J_info:
	.quad	sat_s8y5J_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8zbh_srt


==================== Asm code ====================
2018-03-16 16:03:42.820502712 UTC

.section .text
.align 8
sat_s8y5L_entry:
_c8zeZ:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8zf3
_c8zf2:
	movq 7(%rbx),%rax
	leaq sat_s8y5J_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq GHC.IO.Encoding.UTF8.mkUTF1_closure+3(%rip),%rax
	movq %rax,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF8.mkUTF3_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.IO.Encoding.UTF8.mkUTF3_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq GHC.IO.Encoding.UTF8.mkUTF2_closure+2(%rip),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8zf3:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8y5L_entry, .-sat_s8y5L_entry


==================== Asm code ====================
2018-03-16 16:03:42.821220765 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y5L_info:
	.quad	sat_s8y5L_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8zbh_srt


==================== Asm code ====================
2018-03-16 16:03:42.822247305 UTC

.section .text
.align 8
sat_s8y5F_entry:
_c8zfe:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverDecode1_entry@gotpcrel(%rip)
	.size sat_s8y5F_entry, .-sat_s8y5F_entry


==================== Asm code ====================
2018-03-16 16:03:42.822828042 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y5F_info:
	.quad	sat_s8y5F_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8zbh_srt+8


==================== Asm code ====================
2018-03-16 16:03:42.823649078 UTC

.section .text
.align 8
sat_s8y5H_entry:
_c8zfi:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8zfm
_c8zfl:
	movq 7(%rbx),%rax
	leaq sat_s8y5F_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq GHC.IO.Encoding.UTF8.mkUTF4_closure+3(%rip),%rax
	movq %rax,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF8.mkUTF3_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.IO.Encoding.UTF8.mkUTF3_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq GHC.IO.Encoding.UTF8.mkUTF2_closure+2(%rip),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8zfm:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8y5H_entry, .-sat_s8y5H_entry


==================== Asm code ====================
2018-03-16 16:03:42.824372291 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8y5H_info:
	.quad	sat_s8y5H_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8zbh_srt+8


==================== Asm code ====================
2018-03-16 16:03:42.825195595 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.mkUTF8_entry
.type GHC.IO.Encoding.UTF8.mkUTF8_entry, @object
GHC.IO.Encoding.UTF8.mkUTF8_entry:
_c8zfo:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8zfs
_c8zfr:
	leaq sat_s8y5L_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s8y5H_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	movq GHC.IO.Encoding.Types.TextEncoding_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF8.mkUTF5_closure(%rip),%rax
	movq %rax,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8zfs:
	movq $64,904(%r13)
	leaq GHC.IO.Encoding.UTF8.mkUTF8_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF8.mkUTF8_entry, .-GHC.IO.Encoding.UTF8.mkUTF8_entry


==================== Asm code ====================
2018-03-16 16:03:42.825976389 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.mkUTF8_info
.type GHC.IO.Encoding.UTF8.mkUTF8_info, @object
GHC.IO.Encoding.UTF8.mkUTF8_info:
	.quad	GHC.IO.Encoding.UTF8.mkUTF8_entry
	.quad	0
	.quad	219043332110
	.quad	4294967301
	.quad	S8zbh_srt


==================== Asm code ====================
2018-03-16 16:03:42.829411985 UTC

.section .data
.align 8
.align 1
lvl_r8uYu_closure:
	.quad	lvl_r8uYu_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:42.830172222 UTC

.section .text
.align 8
lvl_r8uYu_entry:
_c8zgd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8zgh
_c8zgi:
	leaq block_c8zga_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8zga
_c8zgb:
	movq (%rbx),%rax
	jmp *(%rax)
_c8zgh:
	leaq lvl_r8uYu_closure(%rip),%rbx
	jmp *-8(%r13)
	.size lvl_r8uYu_entry, .-lvl_r8uYu_entry


==================== Asm code ====================
2018-03-16 16:03:42.830840282 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_r8uYu_info:
	.quad	lvl_r8uYu_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8zbh_srt+48


==================== Asm code ====================
2018-03-16 16:03:42.831558808 UTC

.section .text
.align 8
_c8zga:
_c8zga:
	movq 8(%rbp),%rax
	leaq block_c8zgg_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8zgg
_c8zgk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8zga, .-_c8zga


==================== Asm code ====================
2018-03-16 16:03:42.83218117 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8zga_info:
	.quad	_c8zga
	.quad	1
	.quad	4294967326
	.quad	S8zbh_srt+48


==================== Asm code ====================
2018-03-16 16:03:42.832822133 UTC

.section .text
.align 8
_c8zgg:
_c8zgg:
	movq GHC.IO.Encoding.Failure.recoverDecode2_closure@gotpcrel(%rip),%rbx
	addq $8,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _c8zgg, .-_c8zgg


==================== Asm code ====================
2018-03-16 16:03:42.833791044 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8zgg_info:
	.quad	_c8zgg
	.quad	0
	.quad	4294967326
	.quad	S8zbh_srt+48


==================== Asm code ====================
2018-03-16 16:03:42.835550357 UTC

.section .data
.align 8
.align 1
lvl1_r8uYv_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.UTF8.mkUTF4_closure+3
	.quad	lvl_r8uYu_closure+3
	.quad	GHC.IO.Encoding.UTF8.mkUTF3_closure+1
	.quad	GHC.IO.Encoding.UTF8.mkUTF3_closure+1
	.quad	GHC.IO.Encoding.UTF8.mkUTF2_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:42.837831749 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.utf3_closure
.type GHC.IO.Encoding.UTF8.utf3_closure, @object
GHC.IO.Encoding.UTF8.utf3_closure:
	.quad	GHC.IO.Encoding.UTF8.utf3_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:42.838506927 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.utf3_entry
.type GHC.IO.Encoding.UTF8.utf3_entry, @object
GHC.IO.Encoding.UTF8.utf3_entry:
_c8zgL:
	leaq lvl1_r8uYv_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF8.utf3_entry, .-GHC.IO.Encoding.UTF8.utf3_entry


==================== Asm code ====================
2018-03-16 16:03:42.8391416 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.utf3_info
.type GHC.IO.Encoding.UTF8.utf3_info, @object
GHC.IO.Encoding.UTF8.utf3_info:
	.quad	GHC.IO.Encoding.UTF8.utf3_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8zbh_srt+64


==================== Asm code ====================
2018-03-16 16:03:42.843224805 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.utf2_closure
.type GHC.IO.Encoding.UTF8.utf2_closure, @object
GHC.IO.Encoding.UTF8.utf2_closure:
	.quad	GHC.IO.Encoding.UTF8.utf2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:42.844046378 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.utf2_entry
.type GHC.IO.Encoding.UTF8.utf2_entry, @object
GHC.IO.Encoding.UTF8.utf2_entry:
_c8zh0:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8zh4
_c8zh5:
	leaq block_c8zgX_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8zgX
_c8zgY:
	movq (%rbx),%rax
	jmp *(%rax)
_c8zh4:
	leaq GHC.IO.Encoding.UTF8.utf2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF8.utf2_entry, .-GHC.IO.Encoding.UTF8.utf2_entry


==================== Asm code ====================
2018-03-16 16:03:42.844693212 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.utf2_info
.type GHC.IO.Encoding.UTF8.utf2_info, @object
GHC.IO.Encoding.UTF8.utf2_info:
	.quad	GHC.IO.Encoding.UTF8.utf2_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8zbh_srt+72


==================== Asm code ====================
2018-03-16 16:03:42.845728912 UTC

.section .text
.align 8
_c8zgX:
_c8zgX:
	leaq block_c8zh3_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8zh3
_c8zh7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8zgX, .-_c8zgX


==================== Asm code ====================
2018-03-16 16:03:42.846502287 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8zgX_info:
	.quad	_c8zgX
	.quad	1
	.quad	4294967326
	.quad	S8zbh_srt+72


==================== Asm code ====================
2018-03-16 16:03:42.847266761 UTC

.section .text
.align 8
_c8zh3:
_c8zh3:
	movq GHC.IO.Encoding.Failure.recoverEncode2_closure@gotpcrel(%rip),%rbx
	addq $32,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _c8zh3, .-_c8zh3


==================== Asm code ====================
2018-03-16 16:03:42.847902309 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8zh3_info:
	.quad	_c8zh3
	.quad	323
	.quad	4294967326
	.quad	S8zbh_srt+72


==================== Asm code ====================
2018-03-16 16:03:42.849881186 UTC

.section .data
.align 8
.align 1
lvl2_r8uYw_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.UTF8.mkUTF1_closure+3
	.quad	GHC.IO.Encoding.UTF8.utf2_closure+3
	.quad	GHC.IO.Encoding.UTF8.mkUTF3_closure+1
	.quad	GHC.IO.Encoding.UTF8.mkUTF3_closure+1
	.quad	GHC.IO.Encoding.UTF8.mkUTF2_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:42.852238283 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.utf1_closure
.type GHC.IO.Encoding.UTF8.utf1_closure, @object
GHC.IO.Encoding.UTF8.utf1_closure:
	.quad	GHC.IO.Encoding.UTF8.utf1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:42.852971078 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF8.utf1_entry
.type GHC.IO.Encoding.UTF8.utf1_entry, @object
GHC.IO.Encoding.UTF8.utf1_entry:
_c8zhz:
	leaq lvl2_r8uYw_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF8.utf1_entry, .-GHC.IO.Encoding.UTF8.utf1_entry


==================== Asm code ====================
2018-03-16 16:03:42.853650982 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.utf1_info
.type GHC.IO.Encoding.UTF8.utf1_info, @object
GHC.IO.Encoding.UTF8.utf1_info:
	.quad	GHC.IO.Encoding.UTF8.utf1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8zbh_srt+88


==================== Asm code ====================
2018-03-16 16:03:42.855552955 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF8.utf8_closure
.type GHC.IO.Encoding.UTF8.utf8_closure, @object
GHC.IO.Encoding.UTF8.utf8_closure:
	.quad	GHC.IO.Encoding.Types.TextEncoding_con_info
	.quad	GHC.IO.Encoding.UTF8.mkUTF5_closure
	.quad	GHC.IO.Encoding.UTF8.utf3_closure+1
	.quad	GHC.IO.Encoding.UTF8.utf1_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:42.857503631 UTC

.section .data.rel.ro
.align 8
.align 1
S8zbh_srt:
	.quad	GHC.IO.Encoding.Failure.recoverEncode1_closure
	.quad	GHC.IO.Encoding.Failure.recoverDecode1_closure
	.quad	GHC.IO.Encoding.UTF8.mkUTF8_bom_closure
	.quad	GHC.IO.Encoding.UTF8.mkUTF8_bom1_closure
	.quad	GHC.IO.Encoding.UTF8.mkUTF8_closure
	.quad	GHC.IO.Encoding.UTF8.mkUTF5_closure
	.quad	GHC.IO.Encoding.Failure.recoverDecode2_closure
	.quad	lvl_r8uYu_closure
	.quad	lvl1_r8uYv_closure
	.quad	GHC.IO.Encoding.Failure.recoverEncode2_closure
	.quad	GHC.IO.Encoding.UTF8.utf2_closure
	.quad	lvl2_r8uYw_closure

