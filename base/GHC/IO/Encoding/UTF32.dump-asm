
==================== Asm code ====================
2018-03-16 16:03:43.648833488 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF32.$trModule4_bytes
.type GHC.IO.Encoding.UTF32.$trModule4_bytes, @object
GHC.IO.Encoding.UTF32.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:03:43.650607225 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.$trModule3_closure
.type GHC.IO.Encoding.UTF32.$trModule3_closure, @object
GHC.IO.Encoding.UTF32.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Encoding.UTF32.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:03:43.652297189 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF32.$trModule2_bytes
.type GHC.IO.Encoding.UTF32.$trModule2_bytes, @object
GHC.IO.Encoding.UTF32.$trModule2_bytes:
	.asciz "GHC.IO.Encoding.UTF32"


==================== Asm code ====================
2018-03-16 16:03:43.654161755 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.$trModule1_closure
.type GHC.IO.Encoding.UTF32.$trModule1_closure, @object
GHC.IO.Encoding.UTF32.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Encoding.UTF32.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:03:43.655838742 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.$trModule_closure
.type GHC.IO.Encoding.UTF32.$trModule_closure, @object
GHC.IO.Encoding.UTF32.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.IO.Encoding.UTF32.$trModule3_closure+1
	.quad	GHC.IO.Encoding.UTF32.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:43.677904588 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32le1_closure
.type GHC.IO.Encoding.UTF32.mkUTF32le1_closure, @object
GHC.IO.Encoding.UTF32.mkUTF32le1_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32le1_info


==================== Asm code ====================
2018-03-16 16:03:43.678932203 UTC

.section .text
.align 8
sat_s8AWR_entry:
_c8Cg1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Cg2
_c8Cg3:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Cg5
_c8Cg4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Cg0
_c8CfZ:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Cg5:
	movq $56,904(%r13)
_c8Cg2:
	jmp *-16(%r13)
_c8Cg0:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8AWR_entry, .-sat_s8AWR_entry


==================== Asm code ====================
2018-03-16 16:03:43.679749936 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8AWR_info:
	.quad	sat_s8AWR_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:43.680657611 UTC

.section .text
.align 8
sat_s8AWZ_entry:
_c8Cgn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Cgo
_c8Cgp:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Cgr
_c8Cgq:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Cgm
_c8Cgl:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Cgr:
	movq $56,904(%r13)
_c8Cgo:
	jmp *-16(%r13)
_c8Cgm:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8AWZ_entry, .-sat_s8AWZ_entry


==================== Asm code ====================
2018-03-16 16:03:43.681499258 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8AWZ_info:
	.quad	sat_s8AWZ_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:43.682461636 UTC

.section .text
.align 8
sat_s8AX7_entry:
_c8CgJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CgK
_c8CgL:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8CgN
_c8CgM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8CgI
_c8CgH:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CgN:
	movq $56,904(%r13)
_c8CgK:
	jmp *-16(%r13)
_c8CgI:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8AX7_entry, .-sat_s8AX7_entry


==================== Asm code ====================
2018-03-16 16:03:43.68324682 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8AX7_info:
	.quad	sat_s8AX7_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:43.684180602 UTC

.section .text
.align 8
sat_s8AXf_entry:
_c8Ch5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Ch6
_c8Ch7:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Ch9
_c8Ch8:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Ch4
_c8Ch3:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Ch9:
	movq $56,904(%r13)
_c8Ch6:
	jmp *-16(%r13)
_c8Ch4:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8AXf_entry, .-sat_s8AXf_entry


==================== Asm code ====================
2018-03-16 16:03:43.684963301 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8AXf_info:
	.quad	sat_s8AXf_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:43.685909768 UTC

.section .text
.align 8
sat_s8AXn_entry:
_c8Chr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Chs
_c8Cht:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Chv
_c8Chu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Chq
_c8Chp:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Chv:
	movq $56,904(%r13)
_c8Chs:
	jmp *-16(%r13)
_c8Chq:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8AXn_entry, .-sat_s8AXn_entry


==================== Asm code ====================
2018-03-16 16:03:43.686724714 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8AXn_info:
	.quad	sat_s8AXn_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:43.687512956 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF32le1_entry
.type GHC.IO.Encoding.UTF32.mkUTF32le1_entry, @object
GHC.IO.Encoding.UTF32.mkUTF32le1_entry:
_c8Chy:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Chz
_c8ChA:
	movq $block_c8CfB_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8CfB
_c8CfC:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Chz:
	movl $GHC.IO.Encoding.UTF32.mkUTF32le1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.mkUTF32le1_entry, .-GHC.IO.Encoding.UTF32.mkUTF32le1_entry


==================== Asm code ====================
2018-03-16 16:03:43.688213758 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32le1_info
.type GHC.IO.Encoding.UTF32.mkUTF32le1_info, @object
GHC.IO.Encoding.UTF32.mkUTF32le1_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32le1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:43.688980348 UTC

.section .text
.align 8
_c8CfB:
_c8CfB:
	movq $block_c8CfG_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8CfG
_c8CfH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8CfB, .-_c8CfB


==================== Asm code ====================
2018-03-16 16:03:43.689751051 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CfB_info:
	.quad	_c8CfB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.691934709 UTC

.section .text
.align 8
_c8CfG:
_c8CfG:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8ChE
_c8ChD:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8Ci1:
	cmpq %r9,%r11
	jl _c8CiX
_c8CiY:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8Che
_c8Cio:
	movq %r10,64(%rsp)
	movq %r14,%r10
	movb %r10b,(%rdx,%rbx,1)
	movq %r14,%r10
	sarq $8,%r10
	movq %r10,72(%rsp)
	leaq 1(%rbx),%r10
	movq %r8,80(%rsp)
	movq 72(%rsp),%r8
	movb %r8b,(%rdx,%r10,1)
	movq %r14,%r8
	sarq $16,%r8
	leaq 2(%rbx),%r10
	movb %r8b,(%rdx,%r10,1)
	sarq $24,%r14
	leaq 3(%rbx),%r8
	movb %r14b,(%rdx,%r8,1)
	addq $4,%rbx
	incq %r11
_n8Cop:
	movq 80(%rsp),%r8
	movq 64(%rsp),%r10
	jmp _c8Ci1
_c8Ciu:
	movq %r10,64(%rsp)
	movq %r14,%r10
	movb %r10b,(%rdx,%rbx,1)
	movq %r14,%r10
	sarq $8,%r10
	movq %r10,88(%rsp)
	leaq 1(%rbx),%r10
	movq %r8,80(%rsp)
	movq 88(%rsp),%r8
	movb %r8b,(%rdx,%r10,1)
	movq %r14,%r8
	sarq $16,%r8
	leaq 2(%rbx),%r10
	movb %r8b,(%rdx,%r10,1)
	sarq $24,%r14
	leaq 3(%rbx),%r8
	movb %r14b,(%rdx,%r8,1)
	addq $4,%rbx
	incq %r11
_n8Coq:
	movq 80(%rsp),%r8
	movq 64(%rsp),%r10
	jmp _c8Ci1
_c8CiG:
	movq %r10,64(%rsp)
	movq %r14,%r10
	movb %r10b,(%rdx,%rbx,1)
	movq %r14,%r10
	sarq $8,%r10
	movq %r10,96(%rsp)
	leaq 1(%rbx),%r10
	movq %r8,80(%rsp)
	movq 96(%rsp),%r8
	movb %r8b,(%rdx,%r10,1)
	movq %r14,%r8
	sarq $16,%r8
	leaq 2(%rbx),%r10
	movb %r8b,(%rdx,%r10,1)
	sarq $24,%r14
	leaq 3(%rbx),%r8
	movb %r14b,(%rdx,%r8,1)
	addq $4,%rbx
	incq %r11
_n8Cor:
	movq 80(%rsp),%r8
	movq 64(%rsp),%r10
	jmp _c8Ci1
_c8CiM:
	movq %r10,64(%rsp)
	movq %r14,%r10
	movb %r10b,(%rdx,%rbx,1)
	movq %r14,%r10
	sarq $8,%r10
	movq %r10,104(%rsp)
	leaq 1(%rbx),%r10
	movq %r8,80(%rsp)
	movq 104(%rsp),%r8
	movb %r8b,(%rdx,%r10,1)
	movq %r14,%r8
	sarq $16,%r8
	leaq 2(%rbx),%r10
	movb %r8b,(%rdx,%r10,1)
	sarq $24,%r14
	leaq 3(%rbx),%r8
	movb %r14b,(%rdx,%r8,1)
	addq $4,%rbx
	incq %r11
_n8Cos:
	movq 80(%rsp),%r8
	movq 64(%rsp),%r10
	jmp _c8Ci1
_c8CiX:
	movq %rsi,%r14
	subq %rbx,%r14
	cmpq $4,%r14
	jge _c8CiU
_c8CiV:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8CgS
_c8CiU:
	movl (%r8,%r11,4),%r14d
	cmpq $55296,%r14
	jl _c8Ciy
_c8CiS:
	cmpq $56319,%r14
	jg _c8CiQ
_c8CiR:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8Cgw
_c8CiQ:
	cmpq $56320,%r14
	jl _c8CiG
_c8CiO:
	cmpq $57343,%r14
	jg _c8CiM
_c8CiN:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8Cga
_c8Ciy:
	cmpq $56320,%r14
	jl _c8Cio
_c8Ciw:
	cmpq $57343,%r14
	jg _c8Ciu
_c8Civ:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8CfO
_c8ChE:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8CfG, .-_c8CfG


==================== Asm code ====================
2018-03-16 16:03:43.693689738 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CfG_info:
	.quad	_c8CfG
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.695896906 UTC

.section .text
.align 8
_c8CfO:
_c8CfO:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8ChI
_c8ChH:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8AWR_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ChI:
	movq $160,904(%r13)
	movq $block_c8CfO_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8CfO, .-_c8CfO


==================== Asm code ====================
2018-03-16 16:03:43.696730319 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CfO_info:
	.quad	_c8CfO
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.697876414 UTC

.section .text
.align 8
_c8Cga:
_c8Cga:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8ChM
_c8ChL:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8AWZ_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ChM:
	movq $160,904(%r13)
	movq $block_c8Cga_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8Cga, .-_c8Cga


==================== Asm code ====================
2018-03-16 16:03:43.698723348 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Cga_info:
	.quad	_c8Cga
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.699577571 UTC

.section .text
.align 8
_c8Cgw:
_c8Cgw:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8ChQ
_c8ChP:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8AX7_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ChQ:
	movq $160,904(%r13)
	movq $block_c8Cgw_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8Cgw, .-_c8Cgw


==================== Asm code ====================
2018-03-16 16:03:43.700437494 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Cgw_info:
	.quad	_c8Cgw
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.701296906 UTC

.section .text
.align 8
_c8CgS:
_c8CgS:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8ChU
_c8ChT:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8AXf_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ChU:
	movq $160,904(%r13)
	movq $block_c8CgS_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8CgS, .-_c8CgS


==================== Asm code ====================
2018-03-16 16:03:43.702109157 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CgS_info:
	.quad	_c8CgS
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.703000087 UTC

.section .text
.align 8
_c8Che:
_c8Che:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8ChY
_c8ChX:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8AXn_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ChY:
	movq $160,904(%r13)
	movq $block_c8Che_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8Che, .-_c8Che


==================== Asm code ====================
2018-03-16 16:03:43.703841409 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Che_info:
	.quad	_c8Che
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.706144418 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32le_encode_closure
.type GHC.IO.Encoding.UTF32.utf32le_encode_closure, @object
GHC.IO.Encoding.UTF32.utf32le_encode_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32le_encode_info


==================== Asm code ====================
2018-03-16 16:03:43.706775772 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32le_encode_entry
.type GHC.IO.Encoding.UTF32.utf32le_encode_entry, @object
GHC.IO.Encoding.UTF32.utf32le_encode_entry:
_c8Cq5:
	jmp GHC.IO.Encoding.UTF32.mkUTF32le1_entry
	.size GHC.IO.Encoding.UTF32.utf32le_encode_entry, .-GHC.IO.Encoding.UTF32.utf32le_encode_entry


==================== Asm code ====================
2018-03-16 16:03:43.707381 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32le_encode_info
.type GHC.IO.Encoding.UTF32.utf32le_encode_info, @object
GHC.IO.Encoding.UTF32.utf32le_encode_info:
	.quad	GHC.IO.Encoding.UTF32.utf32le_encode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:43.729477881 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF1_closure
.type GHC.IO.Encoding.UTF32.mkUTF1_closure, @object
GHC.IO.Encoding.UTF32.mkUTF1_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF1_info


==================== Asm code ====================
2018-03-16 16:03:43.730549997 UTC

.section .text
.align 8
sat_s8AZT_entry:
_c8CqG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CqH
_c8CqI:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8CqK
_c8CqJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8CqF
_c8CqE:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CqK:
	movq $56,904(%r13)
_c8CqH:
	jmp *-16(%r13)
_c8CqF:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8AZT_entry, .-sat_s8AZT_entry


==================== Asm code ====================
2018-03-16 16:03:43.731336823 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8AZT_info:
	.quad	sat_s8AZT_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:43.732208411 UTC

.section .text
.align 8
sat_s8B01_entry:
_c8Cr2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Cr3
_c8Cr4:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Cr6
_c8Cr5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Cr1
_c8Cr0:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Cr6:
	movq $56,904(%r13)
_c8Cr3:
	jmp *-16(%r13)
_c8Cr1:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8B01_entry, .-sat_s8B01_entry


==================== Asm code ====================
2018-03-16 16:03:43.733004649 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B01_info:
	.quad	sat_s8B01_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:43.733948775 UTC

.section .text
.align 8
sat_s8B09_entry:
_c8Cro:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Crp
_c8Crq:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Crs
_c8Crr:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Crn
_c8Crm:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Crs:
	movq $56,904(%r13)
_c8Crp:
	jmp *-16(%r13)
_c8Crn:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8B09_entry, .-sat_s8B09_entry


==================== Asm code ====================
2018-03-16 16:03:43.73470401 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B09_info:
	.quad	sat_s8B09_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:43.735598439 UTC

.section .text
.align 8
sat_s8B0h_entry:
_c8CrK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CrL
_c8CrM:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8CrO
_c8CrN:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8CrJ
_c8CrI:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CrO:
	movq $56,904(%r13)
_c8CrL:
	jmp *-16(%r13)
_c8CrJ:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8B0h_entry, .-sat_s8B0h_entry


==================== Asm code ====================
2018-03-16 16:03:43.736419256 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B0h_info:
	.quad	sat_s8B0h_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:43.737385022 UTC

.section .text
.align 8
sat_s8B0p_entry:
_c8Cs6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Cs7
_c8Cs8:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Csa
_c8Cs9:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Cs5
_c8Cs4:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Csa:
	movq $56,904(%r13)
_c8Cs7:
	jmp *-16(%r13)
_c8Cs5:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8B0p_entry, .-sat_s8B0p_entry


==================== Asm code ====================
2018-03-16 16:03:43.738183534 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B0p_info:
	.quad	sat_s8B0p_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:43.738987263 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF1_entry
.type GHC.IO.Encoding.UTF32.mkUTF1_entry, @object
GHC.IO.Encoding.UTF32.mkUTF1_entry:
_c8Csd:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Cse
_c8Csf:
	movq $block_c8Cqg_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8Cqg
_c8Cqh:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Cse:
	movl $GHC.IO.Encoding.UTF32.mkUTF1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.mkUTF1_entry, .-GHC.IO.Encoding.UTF32.mkUTF1_entry


==================== Asm code ====================
2018-03-16 16:03:43.739719673 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF1_info
.type GHC.IO.Encoding.UTF32.mkUTF1_info, @object
GHC.IO.Encoding.UTF32.mkUTF1_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:43.740517114 UTC

.section .text
.align 8
_c8Cqg:
_c8Cqg:
	movq $block_c8Cql_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8Cql
_c8Cqm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Cqg, .-_c8Cqg


==================== Asm code ====================
2018-03-16 16:03:43.741224541 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Cqg_info:
	.quad	_c8Cqg
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.743471863 UTC

.section .text
.align 8
_c8Cql:
_c8Cql:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Csj
_c8Csi:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8CsG:
	cmpq %r9,%r11
	jl _c8CtC
_c8CtD:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8CrT
_c8Ct3:
	movq %r10,64(%rsp)
	movq %r14,%r10
	sarq $24,%r10
	movb %r10b,(%rdx,%rbx,1)
	movq %r14,%r10
	sarq $16,%r10
	movq %r10,72(%rsp)
	leaq 1(%rbx),%r10
	movq %r8,80(%rsp)
	movq 72(%rsp),%r8
	movb %r8b,(%rdx,%r10,1)
	movq %r14,%r8
	sarq $8,%r8
	leaq 2(%rbx),%r10
	movb %r8b,(%rdx,%r10,1)
	leaq 3(%rbx),%r8
	movb %r14b,(%rdx,%r8,1)
	addq $4,%rbx
	incq %r11
_n8Cz4:
	movq 80(%rsp),%r8
	movq 64(%rsp),%r10
	jmp _c8CsG
_c8Ct9:
	movq %r10,64(%rsp)
	movq %r14,%r10
	sarq $24,%r10
	movb %r10b,(%rdx,%rbx,1)
	movq %r14,%r10
	sarq $16,%r10
	movq %r10,88(%rsp)
	leaq 1(%rbx),%r10
	movq %r8,80(%rsp)
	movq 88(%rsp),%r8
	movb %r8b,(%rdx,%r10,1)
	movq %r14,%r8
	sarq $8,%r8
	leaq 2(%rbx),%r10
	movb %r8b,(%rdx,%r10,1)
	leaq 3(%rbx),%r8
	movb %r14b,(%rdx,%r8,1)
	addq $4,%rbx
	incq %r11
_n8Cz5:
	movq 80(%rsp),%r8
	movq 64(%rsp),%r10
	jmp _c8CsG
_c8Ctl:
	movq %r10,64(%rsp)
	movq %r14,%r10
	sarq $24,%r10
	movb %r10b,(%rdx,%rbx,1)
	movq %r14,%r10
	sarq $16,%r10
	movq %r10,96(%rsp)
	leaq 1(%rbx),%r10
	movq %r8,80(%rsp)
	movq 96(%rsp),%r8
	movb %r8b,(%rdx,%r10,1)
	movq %r14,%r8
	sarq $8,%r8
	leaq 2(%rbx),%r10
	movb %r8b,(%rdx,%r10,1)
	leaq 3(%rbx),%r8
	movb %r14b,(%rdx,%r8,1)
	addq $4,%rbx
	incq %r11
_n8Cz6:
	movq 80(%rsp),%r8
	movq 64(%rsp),%r10
	jmp _c8CsG
_c8Ctr:
	movq %r10,64(%rsp)
	movq %r14,%r10
	sarq $24,%r10
	movb %r10b,(%rdx,%rbx,1)
	movq %r14,%r10
	sarq $16,%r10
	movq %r10,104(%rsp)
	leaq 1(%rbx),%r10
	movq %r8,80(%rsp)
	movq 104(%rsp),%r8
	movb %r8b,(%rdx,%r10,1)
	movq %r14,%r8
	sarq $8,%r8
	leaq 2(%rbx),%r10
	movb %r8b,(%rdx,%r10,1)
	leaq 3(%rbx),%r8
	movb %r14b,(%rdx,%r8,1)
	addq $4,%rbx
	incq %r11
_n8Cz7:
	movq 80(%rsp),%r8
	movq 64(%rsp),%r10
	jmp _c8CsG
_c8CtC:
	movq %rsi,%r14
	subq %rbx,%r14
	cmpq $4,%r14
	jge _c8Ctz
_c8CtA:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8Crx
_c8Ctz:
	movl (%r8,%r11,4),%r14d
	cmpq $55296,%r14
	jl _c8Ctd
_c8Ctx:
	cmpq $56319,%r14
	jg _c8Ctv
_c8Ctw:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8Crb
_c8Ctv:
	cmpq $56320,%r14
	jl _c8Ctl
_c8Ctt:
	cmpq $57343,%r14
	jg _c8Ctr
_c8Cts:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8CqP
_c8Ctd:
	cmpq $56320,%r14
	jl _c8Ct3
_c8Ctb:
	cmpq $57343,%r14
	jg _c8Ct9
_c8Cta:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8Cqt
_c8Csj:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8Cql, .-_c8Cql


==================== Asm code ====================
2018-03-16 16:03:43.74509155 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Cql_info:
	.quad	_c8Cql
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.745938393 UTC

.section .text
.align 8
_c8Cqt:
_c8Cqt:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Csn
_c8Csm:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8AZT_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Csn:
	movq $160,904(%r13)
	movq $block_c8Cqt_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8Cqt, .-_c8Cqt


==================== Asm code ====================
2018-03-16 16:03:43.746808771 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Cqt_info:
	.quad	_c8Cqt
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.747697076 UTC

.section .text
.align 8
_c8CqP:
_c8CqP:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Csr
_c8Csq:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8B01_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Csr:
	movq $160,904(%r13)
	movq $block_c8CqP_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8CqP, .-_c8CqP


==================== Asm code ====================
2018-03-16 16:03:43.748571597 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CqP_info:
	.quad	_c8CqP
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.749694444 UTC

.section .text
.align 8
_c8Crb:
_c8Crb:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Csv
_c8Csu:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8B09_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Csv:
	movq $160,904(%r13)
	movq $block_c8Crb_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8Crb, .-_c8Crb


==================== Asm code ====================
2018-03-16 16:03:43.750559737 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Crb_info:
	.quad	_c8Crb
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.751469623 UTC

.section .text
.align 8
_c8Crx:
_c8Crx:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Csz
_c8Csy:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8B0h_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Csz:
	movq $160,904(%r13)
	movq $block_c8Crx_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8Crx, .-_c8Crx


==================== Asm code ====================
2018-03-16 16:03:43.752342066 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Crx_info:
	.quad	_c8Crx
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.753965861 UTC

.section .text
.align 8
_c8CrT:
_c8CrT:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8CsD
_c8CsC:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8B0p_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CsD:
	movq $160,904(%r13)
	movq $block_c8CrT_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8CrT, .-_c8CrT


==================== Asm code ====================
2018-03-16 16:03:43.754816295 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CrT_info:
	.quad	_c8CrT
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.757130796 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be_encode_closure
.type GHC.IO.Encoding.UTF32.utf32be_encode_closure, @object
GHC.IO.Encoding.UTF32.utf32be_encode_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32be_encode_info


==================== Asm code ====================
2018-03-16 16:03:43.757812992 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32be_encode_entry
.type GHC.IO.Encoding.UTF32.utf32be_encode_entry, @object
GHC.IO.Encoding.UTF32.utf32be_encode_entry:
_c8CAK:
	jmp GHC.IO.Encoding.UTF32.mkUTF1_entry
	.size GHC.IO.Encoding.UTF32.utf32be_encode_entry, .-GHC.IO.Encoding.UTF32.utf32be_encode_entry


==================== Asm code ====================
2018-03-16 16:03:43.75835143 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be_encode_info
.type GHC.IO.Encoding.UTF32.utf32be_encode_info, @object
GHC.IO.Encoding.UTF32.utf32be_encode_info:
	.quad	GHC.IO.Encoding.UTF32.utf32be_encode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:43.774474036 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF3_closure
.type GHC.IO.Encoding.UTF32.mkUTF3_closure, @object
GHC.IO.Encoding.UTF32.mkUTF3_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF3_info


==================== Asm code ====================
2018-03-16 16:03:43.7755224 UTC

.section .text
.align 8
sat_s8B2V_entry:
_c8CBl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CBm
_c8CBn:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8CBp
_c8CBo:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8CBk
_c8CBj:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CBp:
	movq $56,904(%r13)
_c8CBm:
	jmp *-16(%r13)
_c8CBk:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8B2V_entry, .-sat_s8B2V_entry


==================== Asm code ====================
2018-03-16 16:03:43.776230034 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B2V_info:
	.quad	sat_s8B2V_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:43.777118033 UTC

.section .text
.align 8
sat_s8B33_entry:
_c8CBH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CBI
_c8CBJ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8CBL
_c8CBK:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8CBG
_c8CBF:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CBL:
	movq $56,904(%r13)
_c8CBI:
	jmp *-16(%r13)
_c8CBG:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8B33_entry, .-sat_s8B33_entry


==================== Asm code ====================
2018-03-16 16:03:43.777926217 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B33_info:
	.quad	sat_s8B33_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:43.778782852 UTC

.section .text
.align 8
sat_s8B3U_entry:
_c8CDl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CDm
_c8CDn:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8CDp
_c8CDo:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8CDk
_c8CDj:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CDp:
	movq $56,904(%r13)
_c8CDm:
	jmp *-16(%r13)
_c8CDk:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8B3U_entry, .-sat_s8B3U_entry


==================== Asm code ====================
2018-03-16 16:03:43.779569323 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B3U_info:
	.quad	sat_s8B3U_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:43.780427018 UTC

.section .text
.align 8
sat_s8B3Z_entry:
_c8CDG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CDH
_c8CDI:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8CDK
_c8CDJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8CDF
_c8CDE:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CDK:
	movq $56,904(%r13)
_c8CDH:
	jmp *-16(%r13)
_c8CDF:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8B3Z_entry, .-sat_s8B3Z_entry


==================== Asm code ====================
2018-03-16 16:03:43.781211874 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B3Z_info:
	.quad	sat_s8B3Z_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:43.783659155 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF3_entry
.type GHC.IO.Encoding.UTF32.mkUTF3_entry, @object
GHC.IO.Encoding.UTF32.mkUTF3_entry:
_c8CDN:
	leaq -128(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CDO
_c8CDP:
	movq $block_c8CAV_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8CAV
_c8CAW:
	movq (%rbx),%rax
	jmp *(%rax)
_c8CDO:
	movl $GHC.IO.Encoding.UTF32.mkUTF3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.mkUTF3_entry, .-GHC.IO.Encoding.UTF32.mkUTF3_entry


==================== Asm code ====================
2018-03-16 16:03:43.784423633 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF3_info
.type GHC.IO.Encoding.UTF32.mkUTF3_info, @object
GHC.IO.Encoding.UTF32.mkUTF3_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF3_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:43.785343899 UTC

.section .text
.align 8
_c8CAV:
_c8CAV:
	movq $block_c8CB0_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8CB0
_c8CB1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8CAV, .-_c8CAV


==================== Asm code ====================
2018-03-16 16:03:43.786108303 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CAV_info:
	.quad	_c8CAV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.787086776 UTC

.section .text
.align 8
_c8CB0:
_c8CB0:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8CDT
_c8CDS:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r8
	movq %r8,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	leaq -47(%r12),%rax
	movq %rax,24(%rbp)
	addq $-48,%rbp
	jmp _c8CBQ
_c8CDT:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8CB0, .-_c8CB0


==================== Asm code ====================
2018-03-16 16:03:43.787951336 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CB0_info:
	.quad	_c8CB0
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.789076424 UTC

.section .text
.align 8
_c8CBQ:
_c8CBQ:
	movq 32(%rbp),%rax
	movq 40(%rbp),%rbx
	cmpq 16(%rbp),%rbx
	jl _c8CEy
_c8CEz:
	movq %rbx,32(%rbp)
	movq %rax,40(%rbp)
	addq $-8,%rbp
	jmp _c8CBu
_u8CEI:
	movq %rax,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp _c8CD6
_c8CEv:
	movq 96(%rbp),%rbx
	movq 88(%rbp),%rcx
	movzbl (%rbx,%rax,1),%ecx
	leaq 1(%rax),%rdx
	movzbl (%rbx,%rdx,1),%edx
	leaq 2(%rax),%rsi
	movzbl (%rbx,%rsi,1),%esi
	addq $3,%rax
	movzbl (%rbx,%rax,1),%eax
	shlq $8,%rdx
	addq %rcx,%rdx
	shlq $16,%rsi
	addq %rdx,%rsi
	shlq $24,%rax
	addq %rsi,%rax
	testq %rax,%rax
	jl _u8CEG
_c8CEt:
	cmpq $55296,%rax
	jge _u8CEI
_u8CEH:
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp _s8B3M
_u8CEG:
	movq %rax,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp _c8CD6
_c8CEy:
	movq 80(%rbp),%rcx
	subq %rax,%rcx
	cmpq $4,%rcx
	jge _c8CEv
_c8CEw:
	movq %rbx,32(%rbp)
	movq %rax,40(%rbp)
	addq $-8,%rbp
	jmp _c8CB8
	.size _c8CBQ, .-_c8CBQ


==================== Asm code ====================
2018-03-16 16:03:43.790644153 UTC

.section .text
.align 8
_c8CD6:
_c8CD6:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8CE9
_c8CE8:
	movq 96(%rbp),%rax
	movq 120(%rbp),%rbx
	movq 112(%rbp),%rcx
	movq 80(%rbp),%rdx
	movq 88(%rbp),%rsi
	movq 104(%rbp),%rdi
	movq 72(%rbp),%r8
	movq 24(%rbp),%r9
	movq 32(%rbp),%r10
	movq 40(%rbp),%r11
	movq 48(%rbp),%r14
	movq %rax,64(%rsp)
	movq 56(%rbp),%rax
	movq %rbx,72(%rsp)
	movq 64(%rbp),%rbx
	movq %rcx,80(%rsp)
	movq 16(%rbp),%rcx
	cmpq $57343,%rcx
	jle _c8CEc
_c8CEh:
	cmpq $1114111,%rcx
	jg _c8CEf
_c8CEg:
	addq $-160,%r12
	movq 8(%rbp),%rax
	movq %rax,16(%rbp)
	addq $16,%rbp
	jmp _s8B3M
_c8CEf:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8B3Z_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CEc:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8B3U_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CE9:
	movq $160,904(%r13)
	movq $block_c8CD6_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8CD6, .-_c8CD6


==================== Asm code ====================
2018-03-16 16:03:43.791868756 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CD6_info:
	.quad	_c8CD6
	.quad	1408207
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.792686706 UTC

.section .text
.align 8
_s8B3M:
_s8B3M:
	movq 8(%rbp),%rax
	movq 40(%rbp),%rax
	movq 48(%rbp),%rbx
	movq (%rbp),%rcx
	movq 56(%rbp),%rdx
	movl %ecx,(%rdx,%rbx,4)
	addq $4,%rax
	movq %rax,40(%rbp)
	leaq 1(%rbx),%rax
	movq %rax,48(%rbp)
	addq $8,%rbp
	jmp _c8CBQ
	.size _s8B3M, .-_s8B3M


==================== Asm code ====================
2018-03-16 16:03:43.793771369 UTC

.section .text
.align 8
_c8CB8:
_c8CB8:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8CDX
_c8CDW:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8B2V_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CDX:
	movq $160,904(%r13)
	movq $block_c8CB8_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8CB8, .-_c8CB8


==================== Asm code ====================
2018-03-16 16:03:43.794760956 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CB8_info:
	.quad	_c8CB8
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.795678951 UTC

.section .text
.align 8
_c8CBu:
_c8CBu:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8CE1
_c8CE0:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8B33_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CE1:
	movq $160,904(%r13)
	movq $block_c8CBu_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8CBu, .-_c8CBu


==================== Asm code ====================
2018-03-16 16:03:43.796665613 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CBu_info:
	.quad	_c8CBu
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.799350108 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32le_decode_closure
.type GHC.IO.Encoding.UTF32.utf32le_decode_closure, @object
GHC.IO.Encoding.UTF32.utf32le_decode_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32le_decode_info


==================== Asm code ====================
2018-03-16 16:03:43.800080379 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32le_decode_entry
.type GHC.IO.Encoding.UTF32.utf32le_decode_entry, @object
GHC.IO.Encoding.UTF32.utf32le_decode_entry:
_c8CGM:
	jmp GHC.IO.Encoding.UTF32.mkUTF3_entry
	.size GHC.IO.Encoding.UTF32.utf32le_decode_entry, .-GHC.IO.Encoding.UTF32.utf32le_decode_entry


==================== Asm code ====================
2018-03-16 16:03:43.80071818 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32le_decode_info
.type GHC.IO.Encoding.UTF32.utf32le_decode_info, @object
GHC.IO.Encoding.UTF32.utf32le_decode_info:
	.quad	GHC.IO.Encoding.UTF32.utf32le_decode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:43.802997129 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32le3_bytes
.type GHC.IO.Encoding.UTF32.mkUTF32le3_bytes, @object
GHC.IO.Encoding.UTF32.mkUTF32le3_bytes:
	.asciz "UTF-32LE"


==================== Asm code ====================
2018-03-16 16:03:43.806478959 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32le2_closure
.type GHC.IO.Encoding.UTF32.mkUTF32le2_closure, @object
GHC.IO.Encoding.UTF32.mkUTF32le2_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32le2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:43.807536892 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF32le2_entry
.type GHC.IO.Encoding.UTF32.mkUTF32le2_entry, @object
GHC.IO.Encoding.UTF32.mkUTF32le2_entry:
_c8CH0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CH1
_c8CH2:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8CGZ
_c8CGY:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Encoding.UTF32.mkUTF32le3_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8CH1:
	jmp *-16(%r13)
_c8CGZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF32.mkUTF32le2_entry, .-GHC.IO.Encoding.UTF32.mkUTF32le2_entry


==================== Asm code ====================
2018-03-16 16:03:43.808338885 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32le2_info
.type GHC.IO.Encoding.UTF32.mkUTF32le2_info, @object
GHC.IO.Encoding.UTF32.mkUTF32le2_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32le2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:43.810615067 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF2_closure
.type GHC.IO.Encoding.UTF32.mkUTF2_closure, @object
GHC.IO.Encoding.UTF32.mkUTF2_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF2_info


==================== Asm code ====================
2018-03-16 16:03:43.811478419 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF2_entry
.type GHC.IO.Encoding.UTF32.mkUTF2_entry, @object
GHC.IO.Encoding.UTF32.mkUTF2_entry:
_c8CHe:
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF32.mkUTF2_entry, .-GHC.IO.Encoding.UTF32.mkUTF2_entry


==================== Asm code ====================
2018-03-16 16:03:43.812098747 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF2_info
.type GHC.IO.Encoding.UTF32.mkUTF2_info, @object
GHC.IO.Encoding.UTF32.mkUTF2_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF2_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:03:43.814379369 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32be1_closure
.type GHC.IO.Encoding.UTF32.mkUTF32be1_closure, @object
GHC.IO.Encoding.UTF32.mkUTF32be1_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be1_info


==================== Asm code ====================
2018-03-16 16:03:43.815151433 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF32be1_entry
.type GHC.IO.Encoding.UTF32.mkUTF32be1_entry, @object
GHC.IO.Encoding.UTF32.mkUTF32be1_entry:
_c8CHq:
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF32.mkUTF32be1_entry, .-GHC.IO.Encoding.UTF32.mkUTF32be1_entry


==================== Asm code ====================
2018-03-16 16:03:43.815922325 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32be1_info
.type GHC.IO.Encoding.UTF32.mkUTF32be1_info, @object
GHC.IO.Encoding.UTF32.mkUTF32be1_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:43.822092379 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32le_closure
.type GHC.IO.Encoding.UTF32.mkUTF32le_closure, @object
GHC.IO.Encoding.UTF32.mkUTF32le_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32le_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:43.822831528 UTC

.section .text
.align 8
sat_s8B4d_entry:
_c8CHM:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverEncode1_entry
	.size sat_s8B4d_entry, .-sat_s8B4d_entry


==================== Asm code ====================
2018-03-16 16:03:43.823502566 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B4d_info:
	.quad	sat_s8B4d_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8Bun_srt


==================== Asm code ====================
2018-03-16 16:03:43.82434463 UTC

.section .text
.align 8
sat_s8B4f_entry:
_c8CHQ:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8CHU
_c8CHT:
	movq 7(%rbx),%rax
	movq $sat_s8B4d_info,-56(%r12)
	movq %rax,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	movq $GHC.IO.Encoding.UTF32.mkUTF32le1_closure+3,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.UTF32.mkUTF2_closure+1,-16(%r12)
	movq $GHC.IO.Encoding.UTF32.mkUTF2_closure+1,-8(%r12)
	movq $GHC.IO.Encoding.UTF32.mkUTF32be1_closure+2,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8CHU:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8B4f_entry, .-sat_s8B4f_entry


==================== Asm code ====================
2018-03-16 16:03:43.825143922 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B4f_info:
	.quad	sat_s8B4f_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8Bun_srt


==================== Asm code ====================
2018-03-16 16:03:43.825908491 UTC

.section .text
.align 8
sat_s8B49_entry:
_c8CI5:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverDecode1_entry
	.size sat_s8B49_entry, .-sat_s8B49_entry


==================== Asm code ====================
2018-03-16 16:03:43.826537747 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B49_info:
	.quad	sat_s8B49_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8Bun_srt+8


==================== Asm code ====================
2018-03-16 16:03:43.82743775 UTC

.section .text
.align 8
sat_s8B4b_entry:
_c8CI9:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8CId
_c8CIc:
	movq 7(%rbx),%rax
	movq $sat_s8B49_info,-56(%r12)
	movq %rax,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	movq $GHC.IO.Encoding.UTF32.mkUTF3_closure+3,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.UTF32.mkUTF2_closure+1,-16(%r12)
	movq $GHC.IO.Encoding.UTF32.mkUTF2_closure+1,-8(%r12)
	movq $GHC.IO.Encoding.UTF32.mkUTF32be1_closure+2,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8CId:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8B4b_entry, .-sat_s8B4b_entry


==================== Asm code ====================
2018-03-16 16:03:43.828196269 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B4b_info:
	.quad	sat_s8B4b_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8Bun_srt+8


==================== Asm code ====================
2018-03-16 16:03:43.829072323 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF32le_entry
.type GHC.IO.Encoding.UTF32.mkUTF32le_entry, @object
GHC.IO.Encoding.UTF32.mkUTF32le_entry:
_c8CIf:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8CIj
_c8CIi:
	movq $sat_s8B4f_info,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s8B4b_info,-40(%r12)
	movq %r14,-32(%r12)
	movq $GHC.IO.Encoding.Types.TextEncoding_con_info,-24(%r12)
	movq $GHC.IO.Encoding.UTF32.mkUTF32le2_closure,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8CIj:
	movq $64,904(%r13)
	movl $GHC.IO.Encoding.UTF32.mkUTF32le_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.mkUTF32le_entry, .-GHC.IO.Encoding.UTF32.mkUTF32le_entry


==================== Asm code ====================
2018-03-16 16:03:43.829885813 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32le_info
.type GHC.IO.Encoding.UTF32.mkUTF32le_info, @object
GHC.IO.Encoding.UTF32.mkUTF32le_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32le_entry
	.quad	0
	.quad	64424509454
	.quad	4294967301
	.quad	S8Bun_srt


==================== Asm code ====================
2018-03-16 16:03:43.834092325 UTC

.section .data
.align 8
.align 1
lvl_r8AWo_closure:
	.quad	lvl_r8AWo_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:43.834845431 UTC

.section .text
.align 8
lvl_r8AWo_entry:
_c8CIO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CIS
_c8CIT:
	movq $block_c8CIL_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8CIL
_c8CIM:
	movq (%rbx),%rax
	jmp *(%rax)
_c8CIS:
	movl $lvl_r8AWo_closure,%ebx
	jmp *-8(%r13)
	.size lvl_r8AWo_entry, .-lvl_r8AWo_entry


==================== Asm code ====================
2018-03-16 16:03:43.835594433 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_r8AWo_info:
	.quad	lvl_r8AWo_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8Bun_srt+32


==================== Asm code ====================
2018-03-16 16:03:43.836345616 UTC

.section .text
.align 8
_c8CIL:
_c8CIL:
	movq 8(%rbp),%rax
	movq $block_c8CIR_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8CIR
_c8CIV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8CIL, .-_c8CIL


==================== Asm code ====================
2018-03-16 16:03:43.837044607 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CIL_info:
	.quad	_c8CIL
	.quad	1
	.quad	4294967326
	.quad	S8Bun_srt+32


==================== Asm code ====================
2018-03-16 16:03:43.837737667 UTC

.section .text
.align 8
_c8CIR:
_c8CIR:
	movl $GHC.IO.Encoding.Failure.recoverDecode2_closure,%ebx
	addq $8,%rbp
	jmp stg_raiseIO#
	.size _c8CIR, .-_c8CIR


==================== Asm code ====================
2018-03-16 16:03:43.838435656 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CIR_info:
	.quad	_c8CIR
	.quad	0
	.quad	4294967326
	.quad	S8Bun_srt+32


==================== Asm code ====================
2018-03-16 16:03:43.840331669 UTC

.section .data
.align 8
.align 1
lvl1_r8AWp_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.UTF32.mkUTF3_closure+3
	.quad	lvl_r8AWo_closure+3
	.quad	GHC.IO.Encoding.UTF32.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF32.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:43.84249529 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32le2_closure
.type GHC.IO.Encoding.UTF32.utf32le2_closure, @object
GHC.IO.Encoding.UTF32.utf32le2_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32le2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:43.843167472 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32le2_entry
.type GHC.IO.Encoding.UTF32.utf32le2_entry, @object
GHC.IO.Encoding.UTF32.utf32le2_entry:
_c8CJk:
	movl $lvl1_r8AWp_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF32.utf32le2_entry, .-GHC.IO.Encoding.UTF32.utf32le2_entry


==================== Asm code ====================
2018-03-16 16:03:43.843794581 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32le2_info
.type GHC.IO.Encoding.UTF32.utf32le2_info, @object
GHC.IO.Encoding.UTF32.utf32le2_info:
	.quad	GHC.IO.Encoding.UTF32.utf32le2_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8Bun_srt+48


==================== Asm code ====================
2018-03-16 16:03:43.847812672 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be2_closure
.type GHC.IO.Encoding.UTF32.utf32be2_closure, @object
GHC.IO.Encoding.UTF32.utf32be2_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32be2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:43.848559446 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32be2_entry
.type GHC.IO.Encoding.UTF32.utf32be2_entry, @object
GHC.IO.Encoding.UTF32.utf32be2_entry:
_c8CJz:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CJD
_c8CJE:
	movq $block_c8CJw_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8CJw
_c8CJx:
	movq (%rbx),%rax
	jmp *(%rax)
_c8CJD:
	movl $GHC.IO.Encoding.UTF32.utf32be2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.utf32be2_entry, .-GHC.IO.Encoding.UTF32.utf32be2_entry


==================== Asm code ====================
2018-03-16 16:03:43.849666532 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be2_info
.type GHC.IO.Encoding.UTF32.utf32be2_info, @object
GHC.IO.Encoding.UTF32.utf32be2_info:
	.quad	GHC.IO.Encoding.UTF32.utf32be2_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8Bun_srt+56


==================== Asm code ====================
2018-03-16 16:03:43.850428526 UTC

.section .text
.align 8
_c8CJw:
_c8CJw:
	movq $block_c8CJC_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8CJC
_c8CJG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8CJw, .-_c8CJw


==================== Asm code ====================
2018-03-16 16:03:43.85107458 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CJw_info:
	.quad	_c8CJw
	.quad	1
	.quad	4294967326
	.quad	S8Bun_srt+56


==================== Asm code ====================
2018-03-16 16:03:43.851693983 UTC

.section .text
.align 8
_c8CJC:
_c8CJC:
	movl $GHC.IO.Encoding.Failure.recoverEncode2_closure,%ebx
	addq $32,%rbp
	jmp stg_raiseIO#
	.size _c8CJC, .-_c8CJC


==================== Asm code ====================
2018-03-16 16:03:43.852288132 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CJC_info:
	.quad	_c8CJC
	.quad	323
	.quad	4294967326
	.quad	S8Bun_srt+56


==================== Asm code ====================
2018-03-16 16:03:43.854135933 UTC

.section .data
.align 8
.align 1
lvl2_r8AWq_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.UTF32.mkUTF32le1_closure+3
	.quad	GHC.IO.Encoding.UTF32.utf32be2_closure+3
	.quad	GHC.IO.Encoding.UTF32.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF32.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:43.856302588 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32le1_closure
.type GHC.IO.Encoding.UTF32.utf32le1_closure, @object
GHC.IO.Encoding.UTF32.utf32le1_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32le1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:43.856946987 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32le1_entry
.type GHC.IO.Encoding.UTF32.utf32le1_entry, @object
GHC.IO.Encoding.UTF32.utf32le1_entry:
_c8CK6:
	movl $lvl2_r8AWq_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF32.utf32le1_entry, .-GHC.IO.Encoding.UTF32.utf32le1_entry


==================== Asm code ====================
2018-03-16 16:03:43.857622742 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32le1_info
.type GHC.IO.Encoding.UTF32.utf32le1_info, @object
GHC.IO.Encoding.UTF32.utf32le1_info:
	.quad	GHC.IO.Encoding.UTF32.utf32le1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8Bun_srt+72


==================== Asm code ====================
2018-03-16 16:03:43.85941357 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32le_closure
.type GHC.IO.Encoding.UTF32.utf32le_closure, @object
GHC.IO.Encoding.UTF32.utf32le_closure:
	.quad	GHC.IO.Encoding.Types.TextEncoding_con_info
	.quad	GHC.IO.Encoding.UTF32.mkUTF32le2_closure
	.quad	GHC.IO.Encoding.UTF32.utf32le2_closure+1
	.quad	GHC.IO.Encoding.UTF32.utf32le1_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:43.876109428 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF5_closure
.type GHC.IO.Encoding.UTF32.mkUTF5_closure, @object
GHC.IO.Encoding.UTF32.mkUTF5_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF5_info


==================== Asm code ====================
2018-03-16 16:03:43.877160363 UTC

.section .text
.align 8
sat_s8B5h_entry:
_c8CKJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CKK
_c8CKL:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8CKN
_c8CKM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8CKI
_c8CKH:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CKN:
	movq $56,904(%r13)
_c8CKK:
	jmp *-16(%r13)
_c8CKI:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8B5h_entry, .-sat_s8B5h_entry


==================== Asm code ====================
2018-03-16 16:03:43.877982545 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B5h_info:
	.quad	sat_s8B5h_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:43.878901854 UTC

.section .text
.align 8
sat_s8B5p_entry:
_c8CL5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CL6
_c8CL7:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8CL9
_c8CL8:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8CL4
_c8CL3:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CL9:
	movq $56,904(%r13)
_c8CL6:
	jmp *-16(%r13)
_c8CL4:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8B5p_entry, .-sat_s8B5p_entry


==================== Asm code ====================
2018-03-16 16:03:43.879679288 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B5p_info:
	.quad	sat_s8B5p_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:43.880541882 UTC

.section .text
.align 8
sat_s8B6g_entry:
_c8CMJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CMK
_c8CML:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8CMN
_c8CMM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8CMI
_c8CMH:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CMN:
	movq $56,904(%r13)
_c8CMK:
	jmp *-16(%r13)
_c8CMI:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8B6g_entry, .-sat_s8B6g_entry


==================== Asm code ====================
2018-03-16 16:03:43.881365709 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B6g_info:
	.quad	sat_s8B6g_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:43.882253064 UTC

.section .text
.align 8
sat_s8B6l_entry:
_c8CN4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CN5
_c8CN6:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8CN8
_c8CN7:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8CN3
_c8CN2:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CN8:
	movq $56,904(%r13)
_c8CN5:
	jmp *-16(%r13)
_c8CN3:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8B6l_entry, .-sat_s8B6l_entry


==================== Asm code ====================
2018-03-16 16:03:43.8830413 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B6l_info:
	.quad	sat_s8B6l_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:43.883835917 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF5_entry
.type GHC.IO.Encoding.UTF32.mkUTF5_entry, @object
GHC.IO.Encoding.UTF32.mkUTF5_entry:
_c8CNb:
	leaq -128(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CNc
_c8CNd:
	movq $block_c8CKj_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8CKj
_c8CKk:
	movq (%rbx),%rax
	jmp *(%rax)
_c8CNc:
	movl $GHC.IO.Encoding.UTF32.mkUTF5_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.mkUTF5_entry, .-GHC.IO.Encoding.UTF32.mkUTF5_entry


==================== Asm code ====================
2018-03-16 16:03:43.884521034 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF5_info
.type GHC.IO.Encoding.UTF32.mkUTF5_info, @object
GHC.IO.Encoding.UTF32.mkUTF5_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF5_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:43.885759526 UTC

.section .text
.align 8
_c8CKj:
_c8CKj:
	movq $block_c8CKo_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8CKo
_c8CKp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8CKj, .-_c8CKj


==================== Asm code ====================
2018-03-16 16:03:43.886454762 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CKj_info:
	.quad	_c8CKj
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.887300284 UTC

.section .text
.align 8
_c8CKo:
_c8CKo:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8CNh
_c8CNg:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r8
	movq %r8,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	leaq -47(%r12),%rax
	movq %rax,24(%rbp)
	addq $-48,%rbp
	jmp _c8CLe
_c8CNh:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8CKo, .-_c8CKo


==================== Asm code ====================
2018-03-16 16:03:43.888115126 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CKo_info:
	.quad	_c8CKo
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.889071133 UTC

.section .text
.align 8
_c8CLe:
_c8CLe:
	movq 32(%rbp),%rax
	movq 40(%rbp),%rbx
	cmpq 16(%rbp),%rbx
	jl _c8CNW
_c8CNX:
	movq %rbx,32(%rbp)
	movq %rax,40(%rbp)
	addq $-8,%rbp
	jmp _c8CKS
_u8CO6:
	movq %rcx,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8CMu
_c8CNT:
	movq 96(%rbp),%rbx
	movq 88(%rbp),%rcx
	movzbl (%rbx,%rax,1),%ecx
	leaq 1(%rax),%rdx
	movzbl (%rbx,%rdx,1),%edx
	leaq 2(%rax),%rsi
	movzbl (%rbx,%rsi,1),%esi
	addq $3,%rax
	movzbl (%rbx,%rax,1),%eax
	shlq $8,%rsi
	addq %rax,%rsi
	shlq $16,%rdx
	addq %rsi,%rdx
	shlq $24,%rcx
	addq %rdx,%rcx
	testq %rcx,%rcx
	jl _u8CO4
_c8CNR:
	cmpq $55296,%rcx
	jge _u8CO6
_u8CO5:
	movq %rcx,-8(%rbp)
	addq $-8,%rbp
	jmp _s8B68
_u8CO4:
	movq %rcx,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8CMu
_c8CNW:
	movq 80(%rbp),%rcx
	subq %rax,%rcx
	cmpq $4,%rcx
	jge _c8CNT
_c8CNU:
	movq %rbx,32(%rbp)
	movq %rax,40(%rbp)
	addq $-8,%rbp
	jmp _c8CKw
	.size _c8CLe, .-_c8CLe


==================== Asm code ====================
2018-03-16 16:03:43.890501655 UTC

.section .text
.align 8
_c8CMu:
_c8CMu:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8CNx
_c8CNw:
	movq 96(%rbp),%rax
	movq 120(%rbp),%rbx
	movq 112(%rbp),%rcx
	movq 80(%rbp),%rdx
	movq 88(%rbp),%rsi
	movq 104(%rbp),%rdi
	movq 72(%rbp),%r8
	movq 24(%rbp),%r9
	movq 32(%rbp),%r10
	movq 40(%rbp),%r11
	movq 48(%rbp),%r14
	movq %rax,64(%rsp)
	movq 56(%rbp),%rax
	movq %rbx,72(%rsp)
	movq 64(%rbp),%rbx
	movq %rcx,80(%rsp)
	movq 16(%rbp),%rcx
	cmpq $57343,%rcx
	jle _c8CNA
_c8CNF:
	cmpq $1114111,%rcx
	jg _c8CND
_c8CNE:
	addq $-160,%r12
	movq 8(%rbp),%rax
	movq %rax,16(%rbp)
	addq $16,%rbp
	jmp _s8B68
_c8CND:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8B6l_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CNA:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	movq $sat_s8B6g_info,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InvalidSequence_closure+3,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CNx:
	movq $160,904(%r13)
	movq $block_c8CMu_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8CMu, .-_c8CMu


==================== Asm code ====================
2018-03-16 16:03:43.891622453 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CMu_info:
	.quad	_c8CMu
	.quad	1408207
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.892339462 UTC

.section .text
.align 8
_s8B68:
_s8B68:
	movq 8(%rbp),%rax
	movq 40(%rbp),%rax
	movq 48(%rbp),%rbx
	movq (%rbp),%rcx
	movq 56(%rbp),%rdx
	movl %ecx,(%rdx,%rbx,4)
	addq $4,%rax
	movq %rax,40(%rbp)
	leaq 1(%rbx),%rax
	movq %rax,48(%rbp)
	addq $8,%rbp
	jmp _c8CLe
	.size _s8B68, .-_s8B68


==================== Asm code ====================
2018-03-16 16:03:43.893296618 UTC

.section .text
.align 8
_c8CKw:
_c8CKw:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8CNl
_c8CNk:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8B5h_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CNl:
	movq $160,904(%r13)
	movq $block_c8CKw_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8CKw, .-_c8CKw


==================== Asm code ====================
2018-03-16 16:03:43.89416517 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CKw_info:
	.quad	_c8CKw
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.895665289 UTC

.section .text
.align 8
_c8CKS:
_c8CKS:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8CNp
_c8CNo:
	movq $GHC.IO.Buffer.Buffer_con_info,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	movq $sat_s8B5p_info,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CNp:
	movq $160,904(%r13)
	movq $block_c8CKS_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8CKS, .-_c8CKS


==================== Asm code ====================
2018-03-16 16:03:43.896531062 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CKS_info:
	.quad	_c8CKS
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.898849309 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be_decode_closure
.type GHC.IO.Encoding.UTF32.utf32be_decode_closure, @object
GHC.IO.Encoding.UTF32.utf32be_decode_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32be_decode_info


==================== Asm code ====================
2018-03-16 16:03:43.899545836 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32be_decode_entry
.type GHC.IO.Encoding.UTF32.utf32be_decode_entry, @object
GHC.IO.Encoding.UTF32.utf32be_decode_entry:
_c8CQa:
	jmp GHC.IO.Encoding.UTF32.mkUTF5_entry
	.size GHC.IO.Encoding.UTF32.utf32be_decode_entry, .-GHC.IO.Encoding.UTF32.utf32be_decode_entry


==================== Asm code ====================
2018-03-16 16:03:43.900176834 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be_decode_info
.type GHC.IO.Encoding.UTF32.utf32be_decode_info, @object
GHC.IO.Encoding.UTF32.utf32be_decode_info:
	.quad	GHC.IO.Encoding.UTF32.utf32be_decode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:43.901875543 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32be3_bytes
.type GHC.IO.Encoding.UTF32.mkUTF32be3_bytes, @object
GHC.IO.Encoding.UTF32.mkUTF32be3_bytes:
	.asciz "UTF-32BE"


==================== Asm code ====================
2018-03-16 16:03:43.904407028 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32be2_closure
.type GHC.IO.Encoding.UTF32.mkUTF32be2_closure, @object
GHC.IO.Encoding.UTF32.mkUTF32be2_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:43.905276625 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF32be2_entry
.type GHC.IO.Encoding.UTF32.mkUTF32be2_entry, @object
GHC.IO.Encoding.UTF32.mkUTF32be2_entry:
_c8CQo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CQp
_c8CQq:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8CQn
_c8CQm:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Encoding.UTF32.mkUTF32be3_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8CQp:
	jmp *-16(%r13)
_c8CQn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF32.mkUTF32be2_entry, .-GHC.IO.Encoding.UTF32.mkUTF32be2_entry


==================== Asm code ====================
2018-03-16 16:03:43.905977499 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32be2_info
.type GHC.IO.Encoding.UTF32.mkUTF32be2_info, @object
GHC.IO.Encoding.UTF32.mkUTF32be2_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:43.910927692 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32be_closure
.type GHC.IO.Encoding.UTF32.mkUTF32be_closure, @object
GHC.IO.Encoding.UTF32.mkUTF32be_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:43.911607674 UTC

.section .text
.align 8
sat_s8B6w_entry:
_c8CQM:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverEncode1_entry
	.size sat_s8B6w_entry, .-sat_s8B6w_entry


==================== Asm code ====================
2018-03-16 16:03:43.912200998 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B6w_info:
	.quad	sat_s8B6w_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8Bun_srt


==================== Asm code ====================
2018-03-16 16:03:43.913008281 UTC

.section .text
.align 8
sat_s8B6y_entry:
_c8CQQ:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8CQU
_c8CQT:
	movq 7(%rbx),%rax
	movq $sat_s8B6w_info,-56(%r12)
	movq %rax,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	movq $GHC.IO.Encoding.UTF32.mkUTF1_closure+3,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.UTF32.mkUTF2_closure+1,-16(%r12)
	movq $GHC.IO.Encoding.UTF32.mkUTF2_closure+1,-8(%r12)
	movq $GHC.IO.Encoding.UTF32.mkUTF32be1_closure+2,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8CQU:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8B6y_entry, .-sat_s8B6y_entry


==================== Asm code ====================
2018-03-16 16:03:43.914060596 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B6y_info:
	.quad	sat_s8B6y_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8Bun_srt


==================== Asm code ====================
2018-03-16 16:03:43.914715624 UTC

.section .text
.align 8
sat_s8B6s_entry:
_c8CR5:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverDecode1_entry
	.size sat_s8B6s_entry, .-sat_s8B6s_entry


==================== Asm code ====================
2018-03-16 16:03:43.915317078 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B6s_info:
	.quad	sat_s8B6s_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8Bun_srt+8


==================== Asm code ====================
2018-03-16 16:03:43.916115833 UTC

.section .text
.align 8
sat_s8B6u_entry:
_c8CR9:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8CRd
_c8CRc:
	movq 7(%rbx),%rax
	movq $sat_s8B6s_info,-56(%r12)
	movq %rax,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	movq $GHC.IO.Encoding.UTF32.mkUTF5_closure+3,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.UTF32.mkUTF2_closure+1,-16(%r12)
	movq $GHC.IO.Encoding.UTF32.mkUTF2_closure+1,-8(%r12)
	movq $GHC.IO.Encoding.UTF32.mkUTF32be1_closure+2,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8CRd:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8B6u_entry, .-sat_s8B6u_entry


==================== Asm code ====================
2018-03-16 16:03:43.916857929 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B6u_info:
	.quad	sat_s8B6u_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8Bun_srt+8


==================== Asm code ====================
2018-03-16 16:03:43.917660925 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF32be_entry
.type GHC.IO.Encoding.UTF32.mkUTF32be_entry, @object
GHC.IO.Encoding.UTF32.mkUTF32be_entry:
_c8CRf:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8CRj
_c8CRi:
	movq $sat_s8B6y_info,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s8B6u_info,-40(%r12)
	movq %r14,-32(%r12)
	movq $GHC.IO.Encoding.Types.TextEncoding_con_info,-24(%r12)
	movq $GHC.IO.Encoding.UTF32.mkUTF32be2_closure,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8CRj:
	movq $64,904(%r13)
	movl $GHC.IO.Encoding.UTF32.mkUTF32be_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.mkUTF32be_entry, .-GHC.IO.Encoding.UTF32.mkUTF32be_entry


==================== Asm code ====================
2018-03-16 16:03:43.918382132 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32be_info
.type GHC.IO.Encoding.UTF32.mkUTF32be_info, @object
GHC.IO.Encoding.UTF32.mkUTF32be_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be_entry
	.quad	0
	.quad	13207024435214
	.quad	4294967301
	.quad	S8Bun_srt


==================== Asm code ====================
2018-03-16 16:03:43.920208169 UTC

.section .data
.align 8
.align 1
lvl3_r8AWr_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.UTF32.mkUTF5_closure+3
	.quad	lvl_r8AWo_closure+3
	.quad	GHC.IO.Encoding.UTF32.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF32.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:43.922510034 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be3_closure
.type GHC.IO.Encoding.UTF32.utf32be3_closure, @object
GHC.IO.Encoding.UTF32.utf32be3_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32be3_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:43.923176256 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32be3_entry
.type GHC.IO.Encoding.UTF32.utf32be3_entry, @object
GHC.IO.Encoding.UTF32.utf32be3_entry:
_c8CRM:
	movl $lvl3_r8AWr_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF32.utf32be3_entry, .-GHC.IO.Encoding.UTF32.utf32be3_entry


==================== Asm code ====================
2018-03-16 16:03:43.923738898 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be3_info
.type GHC.IO.Encoding.UTF32.utf32be3_info, @object
GHC.IO.Encoding.UTF32.utf32be3_info:
	.quad	GHC.IO.Encoding.UTF32.utf32be3_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8Bun_srt+96


==================== Asm code ====================
2018-03-16 16:03:43.925642511 UTC

.section .data
.align 8
.align 1
lvl4_r8AWs_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.UTF32.mkUTF1_closure+3
	.quad	GHC.IO.Encoding.UTF32.utf32be2_closure+3
	.quad	GHC.IO.Encoding.UTF32.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF32.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:43.927891147 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be1_closure
.type GHC.IO.Encoding.UTF32.utf32be1_closure, @object
GHC.IO.Encoding.UTF32.utf32be1_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32be1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:43.929030152 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32be1_entry
.type GHC.IO.Encoding.UTF32.utf32be1_entry, @object
GHC.IO.Encoding.UTF32.utf32be1_entry:
_c8CRZ:
	movl $lvl4_r8AWs_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF32.utf32be1_entry, .-GHC.IO.Encoding.UTF32.utf32be1_entry


==================== Asm code ====================
2018-03-16 16:03:43.929682052 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be1_info
.type GHC.IO.Encoding.UTF32.utf32be1_info, @object
GHC.IO.Encoding.UTF32.utf32be1_info:
	.quad	GHC.IO.Encoding.UTF32.utf32be1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8Bun_srt+104


==================== Asm code ====================
2018-03-16 16:03:43.931495582 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be_closure
.type GHC.IO.Encoding.UTF32.utf32be_closure, @object
GHC.IO.Encoding.UTF32.utf32be_closure:
	.quad	GHC.IO.Encoding.Types.TextEncoding_con_info
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be2_closure
	.quad	GHC.IO.Encoding.UTF32.utf32be3_closure+1
	.quad	GHC.IO.Encoding.UTF32.utf32be1_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:43.933302841 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF6_closure
.type GHC.IO.Encoding.UTF32.mkUTF6_closure, @object
GHC.IO.Encoding.UTF32.mkUTF6_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.IO.Encoding.UTF32.mkUTF5_closure+3
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:43.935129398 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF4_closure
.type GHC.IO.Encoding.UTF32.mkUTF4_closure, @object
GHC.IO.Encoding.UTF32.mkUTF4_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.IO.Encoding.UTF32.mkUTF3_closure+3
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:43.945776755 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.$wutf32_decode_closure
.type GHC.IO.Encoding.UTF32.$wutf32_decode_closure, @object
GHC.IO.Encoding.UTF32.$wutf32_decode_closure:
	.quad	GHC.IO.Encoding.UTF32.$wutf32_decode_info


==================== Asm code ====================
2018-03-16 16:03:43.94651842 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.$wutf32_decode_slow
.type GHC.IO.Encoding.UTF32.$wutf32_decode_slow, @object
GHC.IO.Encoding.UTF32.$wutf32_decode_slow:
_c8CSb:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Encoding.UTF32.$wutf32_decode_entry
	.size GHC.IO.Encoding.UTF32.$wutf32_decode_slow, .-GHC.IO.Encoding.UTF32.$wutf32_decode_slow


==================== Asm code ====================
2018-03-16 16:03:43.947400127 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.$wutf32_decode_entry
.type GHC.IO.Encoding.UTF32.$wutf32_decode_entry, @object
GHC.IO.Encoding.UTF32.$wutf32_decode_entry:
_c8CSm:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CSn
_c8CSo:
	movq $block_c8CSf_info,-48(%rbp)
	movq 8(%r14),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _c8CSf
_c8CSg:
	movq (%rbx),%rax
	jmp *(%rax)
_c8CSn:
	movl $GHC.IO.Encoding.UTF32.$wutf32_decode_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.$wutf32_decode_entry, .-GHC.IO.Encoding.UTF32.$wutf32_decode_entry


==================== Asm code ====================
2018-03-16 16:03:43.948120071 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.$wutf32_decode_info
.type GHC.IO.Encoding.UTF32.$wutf32_decode_info, @object
GHC.IO.Encoding.UTF32.$wutf32_decode_info:
	.quad	GHC.IO.Encoding.UTF32.$wutf32_decode_entry
	.quad	0
	.quad	14
	.quad	38654705664
	.quad	0
	.quad	7304
	.quad	GHC.IO.Encoding.UTF32.$wutf32_decode_slow


==================== Asm code ====================
2018-03-16 16:03:43.950037433 UTC

.section .text
.align 8
_c8CSf:
_c8CSf:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 40(%rbp),%rsi
	movq 48(%rbp),%rdi
	movq 56(%rbp),%r8
	movq 64(%rbp),%r9
	movq %rbx,%r10
	andl $7,%r10d
	cmpq $1,%r10
	je _c8CSj
_c8CSk:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8CUy
_c8CUx:
	movq 6(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	movq %r9,%rsi
	leaq -47(%r12),%r14
	addq $72,%rbp
	jmp stg_ap_ppv_fast
_c8CUy:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_c8CSj:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c8CSt
_c8CSs:
	movq %r8,%rbx
	subq %rdi,%rbx
	cmpq $4,%rbx
	jge _c8CUo
_c8CUs:
	movq $GHC.IO.Buffer.Buffer_con_info,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rax,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.InputUnderflow_closure+1,-16(%r12)
	leaq -79(%r12),%rax
	movq %rax,-8(%r12)
	movq %r9,(%r12)
	leaq -23(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CUo:
	movq 8(%rbp),%rbx
	movzbl (%rax,%rdi,1),%r10d
	leaq 1(%rdi),%r11
	movzbl (%rax,%r11,1),%r11d
	leaq 2(%rdi),%r14
	movzbl (%rax,%r14,1),%r14d
	movq %rbx,64(%rsp)
	leaq 3(%rdi),%rbx
	movzbl (%rax,%rbx,1),%ebx
	testq %r10,%r10
	jne _c8CU9
_c8CUm:
	testq %r11,%r11
	jne _c8CU9
_c8CUl:
	cmpq $254,%r14
	jne _c8CU9
_c8CUk:
	cmpq $255,%rbx
	jne _c8CU9
_c8CUj:
	movq 64(%rsp),%rbx
	movq $GHC.IO.Encoding.UTF32.mkUTF6_closure+2,8(%rbx)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rbx,%rsi
	movq %rdi,%rbx
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %r10,%r14
	movq %rcx,80(%rsp)
	movq %rdx,88(%rsp)
	movq %r11,96(%rsp)
	movq %r8,104(%rsp)
	movq %r9,112(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.IO.Buffer.Buffer_con_info,-80(%r12)
	movq 72(%rsp),%rax
	movq %rax,-72(%r12)
	movq 80(%rsp),%rax
	movq %rax,-64(%r12)
	movq %r14,-56(%r12)
	movq 88(%rsp),%rax
	movq %rax,-48(%r12)
	leaq 4(%rbx),%rax
	movq %rax,-40(%r12)
	movq 96(%rsp),%rax
	movq %rax,-32(%r12)
	leaq -79(%r12),%rax
	addq $-32,%r12
	movq 104(%rsp),%rbx
	movq %rbx,%rsi
	movq %rax,%r14
	addq $72,%rbp
	jmp GHC.IO.Encoding.UTF32.mkUTF5_entry
_c8CU9:
	addq $-88,%r12
	movq %r11,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %r10,(%rbp)
	addq $-32,%rbp
	jmp _c8CT2
_c8CSt:
	movq $88,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8CSf, .-_c8CSf


==================== Asm code ====================
2018-03-16 16:03:43.951254794 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CSf_info:
	.quad	_c8CSf
	.quad	7304
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.952880408 UTC

.section .text
.align 8
_c8CT2:
_c8CT2:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8CT6
_c8CT5:
	movq 40(%rbp),%rax
	movq 48(%rbp),%rbx
	movq 56(%rbp),%rcx
	movq 64(%rbp),%rdx
	movq 72(%rbp),%rsi
	movq 80(%rbp),%rdi
	movq 88(%rbp),%r8
	movq 96(%rbp),%r9
	cmpq $255,32(%rbp)
	je _c8CTR
_c8CTe:
	movq $GHC.IO.Encoding.UTF32.mkUTF6_closure+2,8(%rax)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rax,%rsi
	movq %rdi,%rax
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r11,80(%rsp)
	movq %r10,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %r14,-40(%r12)
	movq 64(%rsp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 72(%rsp),%rax
	movq %rax,-16(%r12)
	movq 80(%rsp),%rax
	movq %rax,-8(%r12)
	movq 88(%rsp),%rax
	movq %rax,(%r12)
	movq 96(%rsp),%rax
	movq %rax,%rsi
	leaq -47(%r12),%r14
	addq $104,%rbp
	jmp GHC.IO.Encoding.UTF32.mkUTF5_entry
_c8CTO:
	movq $GHC.IO.Encoding.UTF32.mkUTF4_closure+2,8(%rax)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rax,%rsi
	movq %rdi,%rax
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r11,80(%rsp)
	movq %r10,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %r14,-40(%r12)
	movq 64(%rsp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 72(%rsp),%rax
	movq %rax,-16(%r12)
	movq 80(%rsp),%rax
	addq $4,%rax
	movq %rax,-8(%r12)
	movq 88(%rsp),%rax
	movq %rax,(%r12)
	movq 96(%rsp),%rax
	movq %rax,%rsi
	leaq -47(%r12),%r14
	addq $104,%rbp
	jmp GHC.IO.Encoding.UTF32.mkUTF3_entry
_c8CTP:
	cmpq $0,24(%rbp)
	je _c8CTO
_c8CTF:
	movq $GHC.IO.Encoding.UTF32.mkUTF6_closure+2,8(%rax)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rax,%rsi
	movq %rdi,%rax
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r11,80(%rsp)
	movq %r10,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %r14,-40(%r12)
	movq 64(%rsp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 72(%rsp),%rax
	movq %rax,-16(%r12)
	movq 80(%rsp),%rax
	movq %rax,-8(%r12)
	movq 88(%rsp),%rax
	movq %rax,(%r12)
	movq 96(%rsp),%rax
	movq %rax,%rsi
	leaq -47(%r12),%r14
	addq $104,%rbp
	jmp GHC.IO.Encoding.UTF32.mkUTF5_entry
_c8CTQ:
	cmpq $0,16(%rbp)
	je _c8CTP
_c8CTw:
	movq $GHC.IO.Encoding.UTF32.mkUTF6_closure+2,8(%rax)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rax,%rsi
	movq %rdi,%rax
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r11,80(%rsp)
	movq %r10,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %r14,-40(%r12)
	movq 64(%rsp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 72(%rsp),%rax
	movq %rax,-16(%r12)
	movq 80(%rsp),%rax
	movq %rax,-8(%r12)
	movq 88(%rsp),%rax
	movq %rax,(%r12)
	movq 96(%rsp),%rax
	movq %rax,%rsi
	leaq -47(%r12),%r14
	addq $104,%rbp
	jmp GHC.IO.Encoding.UTF32.mkUTF5_entry
_c8CTR:
	cmpq $254,8(%rbp)
	je _c8CTQ
_c8CTn:
	movq $GHC.IO.Encoding.UTF32.mkUTF6_closure+2,8(%rax)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rax,%rsi
	movq %rdi,%rax
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r11,80(%rsp)
	movq %r10,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %r14,-40(%r12)
	movq 64(%rsp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 72(%rsp),%rax
	movq %rax,-16(%r12)
	movq 80(%rsp),%rax
	movq %rax,-8(%r12)
	movq 88(%rsp),%rax
	movq %rax,(%r12)
	movq 96(%rsp),%rax
	movq %rax,%rsi
	leaq -47(%r12),%r14
	addq $104,%rbp
	jmp GHC.IO.Encoding.UTF32.mkUTF5_entry
_c8CT6:
	movq $56,904(%r13)
	movq $block_c8CT2_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8CT2, .-_c8CT2


==================== Asm code ====================
2018-03-16 16:03:43.954430462 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CT2_info:
	.quad	_c8CT2
	.quad	117708
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.958059415 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32_decode1_closure
.type GHC.IO.Encoding.UTF32.utf32_decode1_closure, @object
GHC.IO.Encoding.UTF32.utf32_decode1_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32_decode1_info


==================== Asm code ====================
2018-03-16 16:03:43.958827597 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32_decode1_entry
.type GHC.IO.Encoding.UTF32.utf32_decode1_entry, @object
GHC.IO.Encoding.UTF32.utf32_decode1_entry:
_c8CVe:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CVi
_c8CVj:
	movq $block_c8CVb_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8CVb
_c8CVc:
	movq (%rbx),%rax
	jmp *(%rax)
_c8CVi:
	movl $GHC.IO.Encoding.UTF32.utf32_decode1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.utf32_decode1_entry, .-GHC.IO.Encoding.UTF32.utf32_decode1_entry


==================== Asm code ====================
2018-03-16 16:03:43.959508806 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32_decode1_info
.type GHC.IO.Encoding.UTF32.utf32_decode1_info, @object
GHC.IO.Encoding.UTF32.utf32_decode1_info:
	.quad	GHC.IO.Encoding.UTF32.utf32_decode1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:03:43.960230042 UTC

.section .text
.align 8
_c8CVb:
_c8CVb:
	movq $block_c8CVh_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8CVh
_c8CVl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8CVb, .-_c8CVb


==================== Asm code ====================
2018-03-16 16:03:43.960838618 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CVb_info:
	.quad	_c8CVb
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.96161032 UTC

.section .text
.align 8
_c8CVh:
_c8CVh:
	movq 31(%rbx),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.IO.Encoding.UTF32.$wutf32_decode_entry
	.size _c8CVh, .-_c8CVh


==================== Asm code ====================
2018-03-16 16:03:43.962199231 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CVh_info:
	.quad	_c8CVh
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.964344231 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32_decode_closure
.type GHC.IO.Encoding.UTF32.utf32_decode_closure, @object
GHC.IO.Encoding.UTF32.utf32_decode_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32_decode_info


==================== Asm code ====================
2018-03-16 16:03:43.964969589 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32_decode_entry
.type GHC.IO.Encoding.UTF32.utf32_decode_entry, @object
GHC.IO.Encoding.UTF32.utf32_decode_entry:
_c8CVL:
	jmp GHC.IO.Encoding.UTF32.utf32_decode1_entry
	.size GHC.IO.Encoding.UTF32.utf32_decode_entry, .-GHC.IO.Encoding.UTF32.utf32_decode_entry


==================== Asm code ====================
2018-03-16 16:03:43.965595082 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32_decode_info
.type GHC.IO.Encoding.UTF32.utf32_decode_info, @object
GHC.IO.Encoding.UTF32.utf32_decode_info:
	.quad	GHC.IO.Encoding.UTF32.utf32_decode_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:03:43.971414568 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.$wutf32_encode_closure
.type GHC.IO.Encoding.UTF32.$wutf32_encode_closure, @object
GHC.IO.Encoding.UTF32.$wutf32_encode_closure:
	.quad	GHC.IO.Encoding.UTF32.$wutf32_encode_info


==================== Asm code ====================
2018-03-16 16:03:43.972103857 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.$wutf32_encode_slow
.type GHC.IO.Encoding.UTF32.$wutf32_encode_slow, @object
GHC.IO.Encoding.UTF32.$wutf32_encode_slow:
_c8CVT:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Encoding.UTF32.$wutf32_encode_entry
	.size GHC.IO.Encoding.UTF32.$wutf32_encode_slow, .-GHC.IO.Encoding.UTF32.$wutf32_encode_slow


==================== Asm code ====================
2018-03-16 16:03:43.973017669 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.$wutf32_encode_entry
.type GHC.IO.Encoding.UTF32.$wutf32_encode_entry, @object
GHC.IO.Encoding.UTF32.$wutf32_encode_entry:
_c8CW4:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CW5
_c8CW6:
	movq $block_c8CVX_info,-48(%rbp)
	movq 8(%r14),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _c8CVX
_c8CVY:
	movq (%rbx),%rax
	jmp *(%rax)
_c8CW5:
	movl $GHC.IO.Encoding.UTF32.$wutf32_encode_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.$wutf32_encode_entry, .-GHC.IO.Encoding.UTF32.$wutf32_encode_entry


==================== Asm code ====================
2018-03-16 16:03:43.973764296 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.$wutf32_encode_info
.type GHC.IO.Encoding.UTF32.$wutf32_encode_info, @object
GHC.IO.Encoding.UTF32.$wutf32_encode_info:
	.quad	GHC.IO.Encoding.UTF32.$wutf32_encode_entry
	.quad	0
	.quad	14
	.quad	38654705664
	.quad	0
	.quad	14600
	.quad	GHC.IO.Encoding.UTF32.$wutf32_encode_slow


==================== Asm code ====================
2018-03-16 16:03:43.975102764 UTC

.section .text
.align 8
_c8CVX:
_c8CVX:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 40(%rbp),%rsi
	movq 48(%rbp),%rdi
	movq 56(%rbp),%r8
	movq 64(%rbp),%r9
	movq %rbx,%r10
	andl $7,%r10d
	cmpq $1,%r10
	je _c8CW1
_c8CW2:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8CWZ
_c8CWY:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %r9,(%r12)
	leaq -47(%r12),%rsi
	movq %rax,%r14
	addq $72,%rbp
	jmp GHC.IO.Encoding.UTF32.mkUTF1_entry
_c8CWZ:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_c8CW1:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c8CWb
_c8CWa:
	movq %rdi,%rbx
	subq %r9,%rbx
	cmpq $4,%rbx
	jge _c8CWP
_c8CWT:
	movq $GHC.IO.Buffer.Buffer_con_info,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	movq $GHC.IO.Encoding.Types.OutputUnderflow_closure+2,-16(%r12)
	movq %rax,-8(%r12)
	leaq -79(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CWP:
	movq 8(%rbp),%rbx
	movq $GHC.Types.True_closure+2,8(%rbx)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rbx,%rsi
	movq %rdi,%rbx
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %r10,%r14
	movq %rcx,72(%rsp)
	movq %rdx,80(%rsp)
	movq %r11,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq 96(%rsp),%rcx
	movq 64(%rsp),%rax
	movb $0,(%rax,%rcx,1)
	leaq 1(%rcx),%rdx
	movb $0,(%rax,%rdx,1)
	leaq 2(%rcx),%rdx
	movb $-2,(%rax,%rdx,1)
	leaq 3(%rcx),%rdx
	movb $-1,(%rax,%rdx,1)
	movq $GHC.IO.Buffer.Buffer_con_info,-80(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-72(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-64(%r12)
	movq %rax,-56(%r12)
	movq %rbx,-48(%r12)
	movq 88(%rsp),%rax
	movq %rax,-40(%r12)
	leaq 4(%rcx),%rax
	movq %rax,-32(%r12)
	leaq -79(%r12),%rax
	addq $-32,%r12
	movq %rax,%rsi
	addq $72,%rbp
	jmp GHC.IO.Encoding.UTF32.mkUTF1_entry
_c8CWb:
	movq $88,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8CVX, .-_c8CVX


==================== Asm code ====================
2018-03-16 16:03:43.976224544 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CVX_info:
	.quad	_c8CVX
	.quad	14600
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.980669566 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32_encode1_closure
.type GHC.IO.Encoding.UTF32.utf32_encode1_closure, @object
GHC.IO.Encoding.UTF32.utf32_encode1_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32_encode1_info


==================== Asm code ====================
2018-03-16 16:03:43.981461056 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32_encode1_entry
.type GHC.IO.Encoding.UTF32.utf32_encode1_entry, @object
GHC.IO.Encoding.UTF32.utf32_encode1_entry:
_c8CXu:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CXy
_c8CXz:
	movq $block_c8CXr_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8CXr
_c8CXs:
	movq (%rbx),%rax
	jmp *(%rax)
_c8CXy:
	movl $GHC.IO.Encoding.UTF32.utf32_encode1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.utf32_encode1_entry, .-GHC.IO.Encoding.UTF32.utf32_encode1_entry


==================== Asm code ====================
2018-03-16 16:03:43.982119805 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32_encode1_info
.type GHC.IO.Encoding.UTF32.utf32_encode1_info, @object
GHC.IO.Encoding.UTF32.utf32_encode1_info:
	.quad	GHC.IO.Encoding.UTF32.utf32_encode1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:03:43.982808177 UTC

.section .text
.align 8
_c8CXr:
_c8CXr:
	movq $block_c8CXx_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8CXx
_c8CXB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8CXr, .-_c8CXr


==================== Asm code ====================
2018-03-16 16:03:43.983412408 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CXr_info:
	.quad	_c8CXr
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.984056449 UTC

.section .text
.align 8
_c8CXx:
_c8CXx:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,(%rbp)
	movq 39(%rbx),%rax
	movq %rax,8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,16(%rbp)
	jmp GHC.IO.Encoding.UTF32.$wutf32_encode_entry
	.size _c8CXx, .-_c8CXx


==================== Asm code ====================
2018-03-16 16:03:43.984683876 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CXx_info:
	.quad	_c8CXx
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:43.987083129 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32_encode_closure
.type GHC.IO.Encoding.UTF32.utf32_encode_closure, @object
GHC.IO.Encoding.UTF32.utf32_encode_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32_encode_info


==================== Asm code ====================
2018-03-16 16:03:43.987785045 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32_encode_entry
.type GHC.IO.Encoding.UTF32.utf32_encode_entry, @object
GHC.IO.Encoding.UTF32.utf32_encode_entry:
_c8CY2:
	jmp GHC.IO.Encoding.UTF32.utf32_encode1_entry
	.size GHC.IO.Encoding.UTF32.utf32_encode_entry, .-GHC.IO.Encoding.UTF32.utf32_encode_entry


==================== Asm code ====================
2018-03-16 16:03:43.9883742 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32_encode_info
.type GHC.IO.Encoding.UTF32.utf32_encode_info, @object
GHC.IO.Encoding.UTF32.utf32_encode_info:
	.quad	GHC.IO.Encoding.UTF32.utf32_encode_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:03:43.990764661 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF8_bytes
.type GHC.IO.Encoding.UTF32.mkUTF8_bytes, @object
GHC.IO.Encoding.UTF32.mkUTF8_bytes:
	.asciz "UTF-32"


==================== Asm code ====================
2018-03-16 16:03:43.993435394 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF7_closure
.type GHC.IO.Encoding.UTF32.mkUTF7_closure, @object
GHC.IO.Encoding.UTF32.mkUTF7_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF7_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:43.994329276 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF7_entry
.type GHC.IO.Encoding.UTF32.mkUTF7_entry, @object
GHC.IO.Encoding.UTF32.mkUTF7_entry:
_c8CYg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CYh
_c8CYi:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8CYf
_c8CYe:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Encoding.UTF32.mkUTF8_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8CYh:
	jmp *-16(%r13)
_c8CYf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF32.mkUTF7_entry, .-GHC.IO.Encoding.UTF32.mkUTF7_entry


==================== Asm code ====================
2018-03-16 16:03:43.995027681 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF7_info
.type GHC.IO.Encoding.UTF32.mkUTF7_info, @object
GHC.IO.Encoding.UTF32.mkUTF7_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF7_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:44.006007014 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32_closure
.type GHC.IO.Encoding.UTF32.mkUTF32_closure, @object
GHC.IO.Encoding.UTF32.mkUTF32_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:44.006812112 UTC

.section .text
.align 8
sat_s8B9o_entry:
_c8CYJ:
	movq 6(%rbx),%rax
	movq %r14,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8B9o_entry, .-sat_s8B9o_entry


==================== Asm code ====================
2018-03-16 16:03:44.007417475 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B9o_info:
	.quad	sat_s8B9o_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:44.008057291 UTC

.section .text
.align 8
sat_s8B9k_entry:
_c8CYS:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8B9k_entry, .-sat_s8B9k_entry


==================== Asm code ====================
2018-03-16 16:03:44.00862355 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B9k_info:
	.quad	sat_s8B9k_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:03:44.009232121 UTC

.section .text
.align 8
sat_s8B9i_entry:
_c8CZ0:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverEncode1_entry
	.size sat_s8B9i_entry, .-sat_s8B9i_entry


==================== Asm code ====================
2018-03-16 16:03:44.009883931 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B9i_info:
	.quad	sat_s8B9i_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8Bun_srt


==================== Asm code ====================
2018-03-16 16:03:44.010676559 UTC

.section .text
.align 8
sat_s8B9h_entry:
_c8CZb:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CZc
_c8CZd:
	movq $block_c8CZ8_info,-24(%rbp)
	movq 5(%rbx),%rax
	movq %rsi,%rbx
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8CZ8
_c8CZ9:
	movq (%rbx),%rax
	jmp *(%rax)
_c8CZc:
	jmp *-8(%r13)
	.size sat_s8B9h_entry, .-sat_s8B9h_entry


==================== Asm code ====================
2018-03-16 16:03:44.011357066 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B9h_info:
	.quad	sat_s8B9h_entry
	.quad	1
	.quad	9
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:44.012033498 UTC

.section .text
.align 8
_c8CZ8:
_c8CZ8:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,(%rbp)
	movq 39(%rbx),%rax
	movq %rax,8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,16(%rbp)
	jmp GHC.IO.Encoding.UTF32.$wutf32_encode_entry
	.size _c8CZ8, .-_c8CZ8


==================== Asm code ====================
2018-03-16 16:03:44.012683777 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CZ8_info:
	.quad	_c8CZ8
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:44.013456124 UTC

.section .text
.align 8
sat_s8B9q_entry:
_c8CZj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8CZk
_c8CZl:
	movq $block_c8CYz_info,-16(%rbp)
	movq 7(%rbx),%rax
	movl $GHC.Types.False_closure+1,%ebx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_newMutVar#
_c8CZk:
	jmp *-8(%r13)
	.size sat_s8B9q_entry, .-sat_s8B9q_entry


==================== Asm code ====================
2018-03-16 16:03:44.014084533 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B9q_info:
	.quad	sat_s8B9q_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8Bun_srt


==================== Asm code ====================
2018-03-16 16:03:44.01487854 UTC

.section .text
.align 8
_c8CYz:
_c8CYz:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c8CZo
_c8CZn:
	movq $sat_s8B9o_info,-104(%r12)
	movq %rbx,-96(%r12)
	movq $sat_s8B9k_info,-88(%r12)
	movq %rbx,-80(%r12)
	movq $sat_s8B9i_info,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	movq $sat_s8B9h_info,-56(%r12)
	movq %rbx,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	leaq -53(%r12),%rax
	movq %rax,-32(%r12)
	leaq -69(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.UTF32.mkUTF2_closure+1,-16(%r12)
	leaq -87(%r12),%rax
	movq %rax,-8(%r12)
	leaq -102(%r12),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8CZo:
	movq $112,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8CYz, .-_c8CYz


==================== Asm code ====================
2018-03-16 16:03:44.01561117 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CYz_info:
	.quad	_c8CYz
	.quad	1
	.quad	4294967326
	.quad	S8Bun_srt


==================== Asm code ====================
2018-03-16 16:03:44.016312344 UTC

.section .text
.align 8
sat_s8B90_entry:
_c8CZE:
	movq 6(%rbx),%rax
	movq %r14,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8B90_entry, .-sat_s8B90_entry


==================== Asm code ====================
2018-03-16 16:03:44.016944077 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B90_info:
	.quad	sat_s8B90_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:44.017772802 UTC

.section .text
.align 8
sat_s8B8W_entry:
_c8CZN:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8B8W_entry, .-sat_s8B8W_entry


==================== Asm code ====================
2018-03-16 16:03:44.01835249 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B8W_info:
	.quad	sat_s8B8W_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:03:44.019612401 UTC

.section .text
.align 8
sat_s8B8U_entry:
_c8CZV:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp GHC.IO.Encoding.Failure.recoverDecode1_entry
	.size sat_s8B8U_entry, .-sat_s8B8U_entry


==================== Asm code ====================
2018-03-16 16:03:44.020219561 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B8U_info:
	.quad	sat_s8B8U_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8Bun_srt+8


==================== Asm code ====================
2018-03-16 16:03:44.020980999 UTC

.section .text
.align 8
sat_s8B8T_entry:
_c8D06:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8D07
_c8D08:
	movq $block_c8D03_info,-24(%rbp)
	movq 5(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8D03
_c8D04:
	movq (%rbx),%rax
	jmp *(%rax)
_c8D07:
	jmp *-8(%r13)
	.size sat_s8B8T_entry, .-sat_s8B8T_entry


==================== Asm code ====================
2018-03-16 16:03:44.021686804 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B8T_info:
	.quad	sat_s8B8T_entry
	.quad	1
	.quad	9
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:44.022341832 UTC

.section .text
.align 8
_c8D03:
_c8D03:
	movq 31(%rbx),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.IO.Encoding.UTF32.$wutf32_decode_entry
	.size _c8D03, .-_c8D03


==================== Asm code ====================
2018-03-16 16:03:44.022942217 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8D03_info:
	.quad	_c8D03
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:44.023685096 UTC

.section .text
.align 8
sat_s8B92_entry:
_c8D0e:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8D0f
_c8D0g:
	movq $block_c8CZu_info,-16(%rbp)
	movq 7(%rbx),%rax
	movl $GHC.Base.Nothing_closure+1,%ebx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_newMutVar#
_c8D0f:
	jmp *-8(%r13)
	.size sat_s8B92_entry, .-sat_s8B92_entry


==================== Asm code ====================
2018-03-16 16:03:44.024297544 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8B92_info:
	.quad	sat_s8B92_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8Bun_srt+8


==================== Asm code ====================
2018-03-16 16:03:44.025062847 UTC

.section .text
.align 8
_c8CZu:
_c8CZu:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c8D0j
_c8D0i:
	movq $sat_s8B90_info,-104(%r12)
	movq %rbx,-96(%r12)
	movq $sat_s8B8W_info,-88(%r12)
	movq %rbx,-80(%r12)
	movq $sat_s8B8U_info,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	movq $sat_s8B8T_info,-56(%r12)
	movq %rbx,-48(%r12)
	movq $GHC.IO.Encoding.Types.BufferCodec_con_info,-40(%r12)
	leaq -53(%r12),%rax
	movq %rax,-32(%r12)
	leaq -69(%r12),%rax
	movq %rax,-24(%r12)
	movq $GHC.IO.Encoding.UTF32.mkUTF2_closure+1,-16(%r12)
	leaq -87(%r12),%rax
	movq %rax,-8(%r12)
	leaq -102(%r12),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8D0j:
	movq $112,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8CZu, .-_c8CZu


==================== Asm code ====================
2018-03-16 16:03:44.025844332 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8CZu_info:
	.quad	_c8CZu
	.quad	1
	.quad	4294967326
	.quad	S8Bun_srt+8


==================== Asm code ====================
2018-03-16 16:03:44.026583338 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF32_entry
.type GHC.IO.Encoding.UTF32.mkUTF32_entry, @object
GHC.IO.Encoding.UTF32.mkUTF32_entry:
_c8D0l:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8D0p
_c8D0o:
	movq $sat_s8B9q_info,-56(%r12)
	movq %r14,-48(%r12)
	movq $sat_s8B92_info,-40(%r12)
	movq %r14,-32(%r12)
	movq $GHC.IO.Encoding.Types.TextEncoding_con_info,-24(%r12)
	movq $GHC.IO.Encoding.UTF32.mkUTF7_closure,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8D0p:
	movq $64,904(%r13)
	movl $GHC.IO.Encoding.UTF32.mkUTF32_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.mkUTF32_entry, .-GHC.IO.Encoding.UTF32.mkUTF32_entry


==================== Asm code ====================
2018-03-16 16:03:44.027288332 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32_info
.type GHC.IO.Encoding.UTF32.mkUTF32_info, @object
GHC.IO.Encoding.UTF32.mkUTF32_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32_entry
	.quad	0
	.quad	211119117434894
	.quad	4294967301
	.quad	S8Bun_srt


==================== Asm code ====================
2018-03-16 16:03:44.030439247 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32_closure
.type GHC.IO.Encoding.UTF32.utf32_closure, @object
GHC.IO.Encoding.UTF32.utf32_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:44.031313924 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32_entry
.type GHC.IO.Encoding.UTF32.utf32_entry, @object
GHC.IO.Encoding.UTF32.utf32_entry:
_c8D1O:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8D1P
_c8D1Q:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8D1N
_c8D1M:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Encoding.Failure.ErrorOnCodingFailure_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.IO.Encoding.UTF32.mkUTF32_entry
_c8D1P:
	jmp *-16(%r13)
_c8D1N:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF32.utf32_entry, .-GHC.IO.Encoding.UTF32.utf32_entry


==================== Asm code ====================
2018-03-16 16:03:44.031990353 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32_info
.type GHC.IO.Encoding.UTF32.utf32_info, @object
GHC.IO.Encoding.UTF32.utf32_info:
	.quad	GHC.IO.Encoding.UTF32.utf32_entry
	.quad	0
	.quad	4294967317
	.quad	S8Bun_srt+112


==================== Asm code ====================
2018-03-16 16:03:44.033816964 UTC

.section .data.rel.ro
.align 8
.align 1
S8Bun_srt:
	.quad	GHC.IO.Encoding.Failure.recoverEncode1_closure
	.quad	GHC.IO.Encoding.Failure.recoverDecode1_closure
	.quad	GHC.IO.Encoding.UTF32.mkUTF32le_closure
	.quad	GHC.IO.Encoding.UTF32.mkUTF32le2_closure
	.quad	GHC.IO.Encoding.Failure.recoverDecode2_closure
	.quad	lvl_r8AWo_closure
	.quad	lvl1_r8AWp_closure
	.quad	GHC.IO.Encoding.Failure.recoverEncode2_closure
	.quad	GHC.IO.Encoding.UTF32.utf32be2_closure
	.quad	lvl2_r8AWq_closure
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be_closure
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be2_closure
	.quad	lvl3_r8AWr_closure
	.quad	lvl4_r8AWs_closure
	.quad	GHC.IO.Encoding.UTF32.mkUTF32_closure
	.quad	GHC.IO.Encoding.UTF32.mkUTF7_closure


==================== Asm code ====================
2018-03-16 16:03:47.601846354 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF32.$trModule4_bytes
.type GHC.IO.Encoding.UTF32.$trModule4_bytes, @object
GHC.IO.Encoding.UTF32.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:03:47.603598038 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.$trModule3_closure
.type GHC.IO.Encoding.UTF32.$trModule3_closure, @object
GHC.IO.Encoding.UTF32.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Encoding.UTF32.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:03:47.60531647 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF32.$trModule2_bytes
.type GHC.IO.Encoding.UTF32.$trModule2_bytes, @object
GHC.IO.Encoding.UTF32.$trModule2_bytes:
	.asciz "GHC.IO.Encoding.UTF32"


==================== Asm code ====================
2018-03-16 16:03:47.607052253 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.$trModule1_closure
.type GHC.IO.Encoding.UTF32.$trModule1_closure, @object
GHC.IO.Encoding.UTF32.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Encoding.UTF32.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:03:47.608875809 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.$trModule_closure
.type GHC.IO.Encoding.UTF32.$trModule_closure, @object
GHC.IO.Encoding.UTF32.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.IO.Encoding.UTF32.$trModule3_closure+1
	.quad	GHC.IO.Encoding.UTF32.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:47.633981696 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32le1_closure
.type GHC.IO.Encoding.UTF32.mkUTF32le1_closure, @object
GHC.IO.Encoding.UTF32.mkUTF32le1_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32le1_info


==================== Asm code ====================
2018-03-16 16:03:47.635461131 UTC

.section .text
.align 8
sat_s8D2m_entry:
_c8Dfv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Dfw
_c8Dfx:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Dfz
_c8Dfy:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Dfu
_c8Dft:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Dfz:
	movq $56,904(%r13)
_c8Dfw:
	jmp *-16(%r13)
_c8Dfu:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8D2m_entry, .-sat_s8D2m_entry


==================== Asm code ====================
2018-03-16 16:03:47.636700204 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8D2m_info:
	.quad	sat_s8D2m_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:47.638034758 UTC

.section .text
.align 8
sat_s8D2u_entry:
_c8DfR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DfS
_c8DfT:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8DfV
_c8DfU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8DfQ
_c8DfP:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DfV:
	movq $56,904(%r13)
_c8DfS:
	jmp *-16(%r13)
_c8DfQ:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8D2u_entry, .-sat_s8D2u_entry


==================== Asm code ====================
2018-03-16 16:03:47.639250643 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8D2u_info:
	.quad	sat_s8D2u_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:47.640597514 UTC

.section .text
.align 8
sat_s8D2C_entry:
_c8Dgd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Dge
_c8Dgf:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Dgh
_c8Dgg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Dgc
_c8Dgb:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Dgh:
	movq $56,904(%r13)
_c8Dge:
	jmp *-16(%r13)
_c8Dgc:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8D2C_entry, .-sat_s8D2C_entry


==================== Asm code ====================
2018-03-16 16:03:47.64185266 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8D2C_info:
	.quad	sat_s8D2C_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:47.643130818 UTC

.section .text
.align 8
sat_s8D2K_entry:
_c8Dgz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DgA
_c8DgB:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8DgD
_c8DgC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Dgy
_c8Dgx:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DgD:
	movq $56,904(%r13)
_c8DgA:
	jmp *-16(%r13)
_c8Dgy:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8D2K_entry, .-sat_s8D2K_entry


==================== Asm code ====================
2018-03-16 16:03:47.644289253 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8D2K_info:
	.quad	sat_s8D2K_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:47.64566109 UTC

.section .text
.align 8
sat_s8D2S_entry:
_c8DgV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DgW
_c8DgX:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8DgZ
_c8DgY:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8DgU
_c8DgT:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DgZ:
	movq $56,904(%r13)
_c8DgW:
	jmp *-16(%r13)
_c8DgU:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8D2S_entry, .-sat_s8D2S_entry


==================== Asm code ====================
2018-03-16 16:03:47.646874678 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8D2S_info:
	.quad	sat_s8D2S_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:47.648009736 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF32le1_entry
.type GHC.IO.Encoding.UTF32.mkUTF32le1_entry, @object
GHC.IO.Encoding.UTF32.mkUTF32le1_entry:
_c8Dh2:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Dh3
_c8Dh4:
	leaq block_c8Df5_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8Df5
_c8Df6:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Dh3:
	leaq GHC.IO.Encoding.UTF32.mkUTF32le1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.mkUTF32le1_entry, .-GHC.IO.Encoding.UTF32.mkUTF32le1_entry


==================== Asm code ====================
2018-03-16 16:03:47.64901552 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32le1_info
.type GHC.IO.Encoding.UTF32.mkUTF32le1_info, @object
GHC.IO.Encoding.UTF32.mkUTF32le1_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32le1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:47.650250005 UTC

.section .text
.align 8
_c8Df5:
_c8Df5:
	leaq block_c8Dfa_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8Dfa
_c8Dfb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Df5, .-_c8Df5


==================== Asm code ====================
2018-03-16 16:03:47.651287455 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Df5_info:
	.quad	_c8Df5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.655514507 UTC

.section .text
.align 8
_c8Dfa:
_c8Dfa:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Dh8
_c8Dh7:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8Dhv:
	cmpq %r9,%r11
	jl _c8Dir
_c8Dis:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8DgI
_c8DhS:
	movq %r10,64(%rsp)
	movq %r14,%r10
	movb %r10b,(%rdx,%rbx,1)
	movq %r14,%r10
	sarq $8,%r10
	movq %r10,72(%rsp)
	leaq 1(%rbx),%r10
	movq %r8,80(%rsp)
	movq 72(%rsp),%r8
	movb %r8b,(%rdx,%r10,1)
	movq %r14,%r8
	sarq $16,%r8
	leaq 2(%rbx),%r10
	movb %r8b,(%rdx,%r10,1)
	sarq $24,%r14
	leaq 3(%rbx),%r8
	movb %r14b,(%rdx,%r8,1)
	addq $4,%rbx
	incq %r11
_n8Do6:
	movq 80(%rsp),%r8
	movq 64(%rsp),%r10
	jmp _c8Dhv
_c8DhY:
	movq %r10,64(%rsp)
	movq %r14,%r10
	movb %r10b,(%rdx,%rbx,1)
	movq %r14,%r10
	sarq $8,%r10
	movq %r10,88(%rsp)
	leaq 1(%rbx),%r10
	movq %r8,80(%rsp)
	movq 88(%rsp),%r8
	movb %r8b,(%rdx,%r10,1)
	movq %r14,%r8
	sarq $16,%r8
	leaq 2(%rbx),%r10
	movb %r8b,(%rdx,%r10,1)
	sarq $24,%r14
	leaq 3(%rbx),%r8
	movb %r14b,(%rdx,%r8,1)
	addq $4,%rbx
	incq %r11
_n8Do7:
	movq 80(%rsp),%r8
	movq 64(%rsp),%r10
	jmp _c8Dhv
_c8Dia:
	movq %r10,64(%rsp)
	movq %r14,%r10
	movb %r10b,(%rdx,%rbx,1)
	movq %r14,%r10
	sarq $8,%r10
	movq %r10,96(%rsp)
	leaq 1(%rbx),%r10
	movq %r8,80(%rsp)
	movq 96(%rsp),%r8
	movb %r8b,(%rdx,%r10,1)
	movq %r14,%r8
	sarq $16,%r8
	leaq 2(%rbx),%r10
	movb %r8b,(%rdx,%r10,1)
	sarq $24,%r14
	leaq 3(%rbx),%r8
	movb %r14b,(%rdx,%r8,1)
	addq $4,%rbx
	incq %r11
_n8Do8:
	movq 80(%rsp),%r8
	movq 64(%rsp),%r10
	jmp _c8Dhv
_c8Dig:
	movq %r10,64(%rsp)
	movq %r14,%r10
	movb %r10b,(%rdx,%rbx,1)
	movq %r14,%r10
	sarq $8,%r10
	movq %r10,104(%rsp)
	leaq 1(%rbx),%r10
	movq %r8,80(%rsp)
	movq 104(%rsp),%r8
	movb %r8b,(%rdx,%r10,1)
	movq %r14,%r8
	sarq $16,%r8
	leaq 2(%rbx),%r10
	movb %r8b,(%rdx,%r10,1)
	sarq $24,%r14
	leaq 3(%rbx),%r8
	movb %r14b,(%rdx,%r8,1)
	addq $4,%rbx
	incq %r11
_n8Do9:
	movq 80(%rsp),%r8
	movq 64(%rsp),%r10
	jmp _c8Dhv
_c8Dir:
	movq %rsi,%r14
	subq %rbx,%r14
	cmpq $4,%r14
	jge _c8Dio
_c8Dip:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8Dgm
_c8Dio:
	movl (%r8,%r11,4),%r14d
	cmpq $55296,%r14
	jl _c8Di2
_c8Dim:
	cmpq $56319,%r14
	jg _c8Dik
_c8Dil:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8Dg0
_c8Dik:
	cmpq $56320,%r14
	jl _c8Dia
_c8Dii:
	cmpq $57343,%r14
	jg _c8Dig
_c8Dih:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8DfE
_c8Di2:
	cmpq $56320,%r14
	jl _c8DhS
_c8Di0:
	cmpq $57343,%r14
	jg _c8DhY
_c8DhZ:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8Dfi
_c8Dh8:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8Dfa, .-_c8Dfa


==================== Asm code ====================
2018-03-16 16:03:47.65799834 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Dfa_info:
	.quad	_c8Dfa
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.659307577 UTC

.section .text
.align 8
_c8Dfi:
_c8Dfi:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Dhc
_c8Dhb:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8D2m_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Dhc:
	movq $160,904(%r13)
	leaq block_c8Dfi_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8Dfi, .-_c8Dfi


==================== Asm code ====================
2018-03-16 16:03:47.66055897 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Dfi_info:
	.quad	_c8Dfi
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.661817168 UTC

.section .text
.align 8
_c8DfE:
_c8DfE:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Dhg
_c8Dhf:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8D2u_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Dhg:
	movq $160,904(%r13)
	leaq block_c8DfE_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8DfE, .-_c8DfE


==================== Asm code ====================
2018-03-16 16:03:47.663186852 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DfE_info:
	.quad	_c8DfE
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.664467639 UTC

.section .text
.align 8
_c8Dg0:
_c8Dg0:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Dhk
_c8Dhj:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8D2C_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Dhk:
	movq $160,904(%r13)
	leaq block_c8Dg0_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8Dg0, .-_c8Dg0


==================== Asm code ====================
2018-03-16 16:03:47.665831214 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Dg0_info:
	.quad	_c8Dg0
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.667181481 UTC

.section .text
.align 8
_c8Dgm:
_c8Dgm:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Dho
_c8Dhn:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8D2K_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Dho:
	movq $160,904(%r13)
	leaq block_c8Dgm_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8Dgm, .-_c8Dgm


==================== Asm code ====================
2018-03-16 16:03:47.668477988 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Dgm_info:
	.quad	_c8Dgm
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.672308199 UTC

.section .text
.align 8
_c8DgI:
_c8DgI:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Dhs
_c8Dhr:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8D2S_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Dhs:
	movq $160,904(%r13)
	leaq block_c8DgI_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8DgI, .-_c8DgI


==================== Asm code ====================
2018-03-16 16:03:47.673201116 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DgI_info:
	.quad	_c8DgI
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.675610581 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32le_encode_closure
.type GHC.IO.Encoding.UTF32.utf32le_encode_closure, @object
GHC.IO.Encoding.UTF32.utf32le_encode_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32le_encode_info


==================== Asm code ====================
2018-03-16 16:03:47.676234985 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32le_encode_entry
.type GHC.IO.Encoding.UTF32.utf32le_encode_entry, @object
GHC.IO.Encoding.UTF32.utf32le_encode_entry:
_c8Dqg:
	jmp GHC.IO.Encoding.UTF32.mkUTF32le1_entry
	.size GHC.IO.Encoding.UTF32.utf32le_encode_entry, .-GHC.IO.Encoding.UTF32.utf32le_encode_entry


==================== Asm code ====================
2018-03-16 16:03:47.676834213 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32le_encode_info
.type GHC.IO.Encoding.UTF32.utf32le_encode_info, @object
GHC.IO.Encoding.UTF32.utf32le_encode_info:
	.quad	GHC.IO.Encoding.UTF32.utf32le_encode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:47.698651637 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF1_closure
.type GHC.IO.Encoding.UTF32.mkUTF1_closure, @object
GHC.IO.Encoding.UTF32.mkUTF1_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF1_info


==================== Asm code ====================
2018-03-16 16:03:47.69969731 UTC

.section .text
.align 8
sat_s8D5o_entry:
_c8DqR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DqS
_c8DqT:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8DqV
_c8DqU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8DqQ
_c8DqP:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DqV:
	movq $56,904(%r13)
_c8DqS:
	jmp *-16(%r13)
_c8DqQ:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8D5o_entry, .-sat_s8D5o_entry


==================== Asm code ====================
2018-03-16 16:03:47.700492607 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8D5o_info:
	.quad	sat_s8D5o_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:47.701420762 UTC

.section .text
.align 8
sat_s8D5w_entry:
_c8Drd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Dre
_c8Drf:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Drh
_c8Drg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Drc
_c8Drb:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Drh:
	movq $56,904(%r13)
_c8Dre:
	jmp *-16(%r13)
_c8Drc:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8D5w_entry, .-sat_s8D5w_entry


==================== Asm code ====================
2018-03-16 16:03:47.702244735 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8D5w_info:
	.quad	sat_s8D5w_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:47.70315685 UTC

.section .text
.align 8
sat_s8D5E_entry:
_c8Drz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DrA
_c8DrB:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8DrD
_c8DrC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Dry
_c8Drx:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DrD:
	movq $56,904(%r13)
_c8DrA:
	jmp *-16(%r13)
_c8Dry:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8D5E_entry, .-sat_s8D5E_entry


==================== Asm code ====================
2018-03-16 16:03:47.703948733 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8D5E_info:
	.quad	sat_s8D5E_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:47.704890654 UTC

.section .text
.align 8
sat_s8D5M_entry:
_c8DrV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DrW
_c8DrX:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8DrZ
_c8DrY:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8DrU
_c8DrT:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DrZ:
	movq $56,904(%r13)
_c8DrW:
	jmp *-16(%r13)
_c8DrU:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8D5M_entry, .-sat_s8D5M_entry


==================== Asm code ====================
2018-03-16 16:03:47.705775107 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8D5M_info:
	.quad	sat_s8D5M_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:47.706727536 UTC

.section .text
.align 8
sat_s8D5U_entry:
_c8Dsh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Dsi
_c8Dsj:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Dsl
_c8Dsk:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8Dsg
_c8Dsf:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Dsl:
	movq $56,904(%r13)
_c8Dsi:
	jmp *-16(%r13)
_c8Dsg:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8D5U_entry, .-sat_s8D5U_entry


==================== Asm code ====================
2018-03-16 16:03:47.707632146 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8D5U_info:
	.quad	sat_s8D5U_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:47.708472819 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF1_entry
.type GHC.IO.Encoding.UTF32.mkUTF1_entry, @object
GHC.IO.Encoding.UTF32.mkUTF1_entry:
_c8Dso:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Dsp
_c8Dsq:
	leaq block_c8Dqr_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8Dqr
_c8Dqs:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Dsp:
	leaq GHC.IO.Encoding.UTF32.mkUTF1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.mkUTF1_entry, .-GHC.IO.Encoding.UTF32.mkUTF1_entry


==================== Asm code ====================
2018-03-16 16:03:47.709905131 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF1_info
.type GHC.IO.Encoding.UTF32.mkUTF1_info, @object
GHC.IO.Encoding.UTF32.mkUTF1_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:47.710705645 UTC

.section .text
.align 8
_c8Dqr:
_c8Dqr:
	leaq block_c8Dqw_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8Dqw
_c8Dqx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Dqr, .-_c8Dqr


==================== Asm code ====================
2018-03-16 16:03:47.711366963 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Dqr_info:
	.quad	_c8Dqr
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.713386422 UTC

.section .text
.align 8
_c8Dqw:
_c8Dqw:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8Dsu
_c8Dst:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r9
	movq %r9,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 32(%rbp),%r9
	leaq -47(%r12),%r10
	movq 24(%rbp),%r11
_c8DsR:
	cmpq %r9,%r11
	jl _c8DtN
_c8DtO:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8Ds4
_c8Dte:
	movq %r10,64(%rsp)
	movq %r14,%r10
	sarq $24,%r10
	movb %r10b,(%rdx,%rbx,1)
	movq %r14,%r10
	sarq $16,%r10
	movq %r10,72(%rsp)
	leaq 1(%rbx),%r10
	movq %r8,80(%rsp)
	movq 72(%rsp),%r8
	movb %r8b,(%rdx,%r10,1)
	movq %r14,%r8
	sarq $8,%r8
	leaq 2(%rbx),%r10
	movb %r8b,(%rdx,%r10,1)
	leaq 3(%rbx),%r8
	movb %r14b,(%rdx,%r8,1)
	addq $4,%rbx
	incq %r11
_n8Dzs:
	movq 80(%rsp),%r8
	movq 64(%rsp),%r10
	jmp _c8DsR
_c8Dtk:
	movq %r10,64(%rsp)
	movq %r14,%r10
	sarq $24,%r10
	movb %r10b,(%rdx,%rbx,1)
	movq %r14,%r10
	sarq $16,%r10
	movq %r10,88(%rsp)
	leaq 1(%rbx),%r10
	movq %r8,80(%rsp)
	movq 88(%rsp),%r8
	movb %r8b,(%rdx,%r10,1)
	movq %r14,%r8
	sarq $8,%r8
	leaq 2(%rbx),%r10
	movb %r8b,(%rdx,%r10,1)
	leaq 3(%rbx),%r8
	movb %r14b,(%rdx,%r8,1)
	addq $4,%rbx
	incq %r11
_n8Dzt:
	movq 80(%rsp),%r8
	movq 64(%rsp),%r10
	jmp _c8DsR
_c8Dtw:
	movq %r10,64(%rsp)
	movq %r14,%r10
	sarq $24,%r10
	movb %r10b,(%rdx,%rbx,1)
	movq %r14,%r10
	sarq $16,%r10
	movq %r10,96(%rsp)
	leaq 1(%rbx),%r10
	movq %r8,80(%rsp)
	movq 96(%rsp),%r8
	movb %r8b,(%rdx,%r10,1)
	movq %r14,%r8
	sarq $8,%r8
	leaq 2(%rbx),%r10
	movb %r8b,(%rdx,%r10,1)
	leaq 3(%rbx),%r8
	movb %r14b,(%rdx,%r8,1)
	addq $4,%rbx
	incq %r11
_n8Dzu:
	movq 80(%rsp),%r8
	movq 64(%rsp),%r10
	jmp _c8DsR
_c8DtC:
	movq %r10,64(%rsp)
	movq %r14,%r10
	sarq $24,%r10
	movb %r10b,(%rdx,%rbx,1)
	movq %r14,%r10
	sarq $16,%r10
	movq %r10,104(%rsp)
	leaq 1(%rbx),%r10
	movq %r8,80(%rsp)
	movq 104(%rsp),%r8
	movb %r8b,(%rdx,%r10,1)
	movq %r14,%r8
	sarq $8,%r8
	leaq 2(%rbx),%r10
	movb %r8b,(%rdx,%r10,1)
	leaq 3(%rbx),%r8
	movb %r14b,(%rdx,%r8,1)
	addq $4,%rbx
	incq %r11
_n8Dzv:
	movq 80(%rsp),%r8
	movq 64(%rsp),%r10
	jmp _c8DsR
_c8DtN:
	movq %rsi,%r14
	subq %rbx,%r14
	cmpq $4,%r14
	jge _c8DtK
_c8DtL:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8DrI
_c8DtK:
	movl (%r8,%r11,4),%r14d
	cmpq $55296,%r14
	jl _c8Dto
_c8DtI:
	cmpq $56319,%r14
	jg _c8DtG
_c8DtH:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8Drm
_c8DtG:
	cmpq $56320,%r14
	jl _c8Dtw
_c8DtE:
	cmpq $57343,%r14
	jg _c8DtC
_c8DtD:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8Dr0
_c8Dto:
	cmpq $56320,%r14
	jl _c8Dte
_c8Dtm:
	cmpq $57343,%r14
	jg _c8Dtk
_c8Dtl:
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	movq %r10,24(%rbp)
	addq $-56,%rbp
	jmp _c8DqE
_c8Dsu:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8Dqw, .-_c8Dqw


==================== Asm code ====================
2018-03-16 16:03:47.714948657 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Dqw_info:
	.quad	_c8Dqw
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.715834098 UTC

.section .text
.align 8
_c8DqE:
_c8DqE:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8Dsy
_c8Dsx:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8D5o_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Dsy:
	movq $160,904(%r13)
	leaq block_c8DqE_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8DqE, .-_c8DqE


==================== Asm code ====================
2018-03-16 16:03:47.716725154 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DqE_info:
	.quad	_c8DqE
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.717683655 UTC

.section .text
.align 8
_c8Dr0:
_c8Dr0:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8DsC
_c8DsB:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8D5w_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DsC:
	movq $160,904(%r13)
	leaq block_c8Dr0_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8Dr0, .-_c8Dr0


==================== Asm code ====================
2018-03-16 16:03:47.718567198 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Dr0_info:
	.quad	_c8Dr0
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.71946883 UTC

.section .text
.align 8
_c8Drm:
_c8Drm:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8DsG
_c8DsF:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8D5E_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DsG:
	movq $160,904(%r13)
	leaq block_c8Drm_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8Drm, .-_c8Drm


==================== Asm code ====================
2018-03-16 16:03:47.720316635 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Drm_info:
	.quad	_c8Drm
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.721176229 UTC

.section .text
.align 8
_c8DrI:
_c8DrI:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8DsK
_c8DsJ:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8D5M_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DsK:
	movq $160,904(%r13)
	leaq block_c8DrI_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8DrI, .-_c8DrI


==================== Asm code ====================
2018-03-16 16:03:47.722422095 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DrI_info:
	.quad	_c8DrI
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.723284095 UTC

.section .text
.align 8
_c8Ds4:
_c8Ds4:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8DsO
_c8DsN:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8D5U_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DsO:
	movq $160,904(%r13)
	leaq block_c8Ds4_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8Ds4, .-_c8Ds4


==================== Asm code ====================
2018-03-16 16:03:47.724125706 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Ds4_info:
	.quad	_c8Ds4
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.726435185 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be_encode_closure
.type GHC.IO.Encoding.UTF32.utf32be_encode_closure, @object
GHC.IO.Encoding.UTF32.utf32be_encode_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32be_encode_info


==================== Asm code ====================
2018-03-16 16:03:47.727037558 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32be_encode_entry
.type GHC.IO.Encoding.UTF32.utf32be_encode_entry, @object
GHC.IO.Encoding.UTF32.utf32be_encode_entry:
_c8DBC:
	jmp GHC.IO.Encoding.UTF32.mkUTF1_entry
	.size GHC.IO.Encoding.UTF32.utf32be_encode_entry, .-GHC.IO.Encoding.UTF32.utf32be_encode_entry


==================== Asm code ====================
2018-03-16 16:03:47.727589847 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be_encode_info
.type GHC.IO.Encoding.UTF32.utf32be_encode_info, @object
GHC.IO.Encoding.UTF32.utf32be_encode_info:
	.quad	GHC.IO.Encoding.UTF32.utf32be_encode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:47.745337845 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF3_closure
.type GHC.IO.Encoding.UTF32.mkUTF3_closure, @object
GHC.IO.Encoding.UTF32.mkUTF3_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF3_info


==================== Asm code ====================
2018-03-16 16:03:47.746379689 UTC

.section .text
.align 8
sat_s8D8q_entry:
_c8DCd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DCe
_c8DCf:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8DCh
_c8DCg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8DCc
_c8DCb:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DCh:
	movq $56,904(%r13)
_c8DCe:
	jmp *-16(%r13)
_c8DCc:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8D8q_entry, .-sat_s8D8q_entry


==================== Asm code ====================
2018-03-16 16:03:47.747227787 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8D8q_info:
	.quad	sat_s8D8q_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:47.748162486 UTC

.section .text
.align 8
sat_s8D8y_entry:
_c8DCz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DCA
_c8DCB:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8DCD
_c8DCC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8DCy
_c8DCx:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DCD:
	movq $56,904(%r13)
_c8DCA:
	jmp *-16(%r13)
_c8DCy:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8D8y_entry, .-sat_s8D8y_entry


==================== Asm code ====================
2018-03-16 16:03:47.748996435 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8D8y_info:
	.quad	sat_s8D8y_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:47.749935548 UTC

.section .text
.align 8
sat_s8D9p_entry:
_c8DEd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DEe
_c8DEf:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8DEh
_c8DEg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8DEc
_c8DEb:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DEh:
	movq $56,904(%r13)
_c8DEe:
	jmp *-16(%r13)
_c8DEc:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8D9p_entry, .-sat_s8D9p_entry


==================== Asm code ====================
2018-03-16 16:03:47.750757821 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8D9p_info:
	.quad	sat_s8D9p_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:47.751685971 UTC

.section .text
.align 8
sat_s8D9u_entry:
_c8DEy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DEz
_c8DEA:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8DEC
_c8DEB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8DEx
_c8DEw:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DEC:
	movq $56,904(%r13)
_c8DEz:
	jmp *-16(%r13)
_c8DEx:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8D9u_entry, .-sat_s8D9u_entry


==================== Asm code ====================
2018-03-16 16:03:47.752519027 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8D9u_info:
	.quad	sat_s8D9u_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:47.753396804 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF3_entry
.type GHC.IO.Encoding.UTF32.mkUTF3_entry, @object
GHC.IO.Encoding.UTF32.mkUTF3_entry:
_c8DEF:
	leaq -128(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DEG
_c8DEH:
	leaq block_c8DBN_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8DBN
_c8DBO:
	movq (%rbx),%rax
	jmp *(%rax)
_c8DEG:
	leaq GHC.IO.Encoding.UTF32.mkUTF3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.mkUTF3_entry, .-GHC.IO.Encoding.UTF32.mkUTF3_entry


==================== Asm code ====================
2018-03-16 16:03:47.754076976 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF3_info
.type GHC.IO.Encoding.UTF32.mkUTF3_info, @object
GHC.IO.Encoding.UTF32.mkUTF3_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF3_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:47.754847448 UTC

.section .text
.align 8
_c8DBN:
_c8DBN:
	leaq block_c8DBS_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8DBS
_c8DBT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8DBN, .-_c8DBN


==================== Asm code ====================
2018-03-16 16:03:47.7555384 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DBN_info:
	.quad	_c8DBN
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.756315408 UTC

.section .text
.align 8
_c8DBS:
_c8DBS:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8DEL
_c8DEK:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r8
	movq %r8,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	leaq -47(%r12),%rax
	movq %rax,24(%rbp)
	addq $-48,%rbp
	jmp _c8DCI
_c8DEL:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8DBS, .-_c8DBS


==================== Asm code ====================
2018-03-16 16:03:47.757137496 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DBS_info:
	.quad	_c8DBS
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.758112914 UTC

.section .text
.align 8
_c8DCI:
_c8DCI:
	movq 32(%rbp),%rax
	movq 40(%rbp),%rbx
	cmpq 16(%rbp),%rbx
	jl _c8DFq
_c8DFr:
	movq %rbx,32(%rbp)
	movq %rax,40(%rbp)
	addq $-8,%rbp
	jmp _c8DCm
_u8DFA:
	movq %rax,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp _c8DDY
_c8DFn:
	movq 96(%rbp),%rbx
	movq 88(%rbp),%rcx
	movzbl (%rbx,%rax,1),%ecx
	leaq 1(%rax),%rdx
	movzbl (%rbx,%rdx,1),%edx
	leaq 2(%rax),%rsi
	movzbl (%rbx,%rsi,1),%esi
	addq $3,%rax
	movzbl (%rbx,%rax,1),%eax
	shlq $8,%rdx
	addq %rcx,%rdx
	shlq $16,%rsi
	addq %rdx,%rsi
	shlq $24,%rax
	addq %rsi,%rax
	testq %rax,%rax
	jl _u8DFy
_c8DFl:
	cmpq $55296,%rax
	jge _u8DFA
_u8DFz:
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp _s8D9h
_u8DFy:
	movq %rax,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp _c8DDY
_c8DFq:
	movq 80(%rbp),%rcx
	subq %rax,%rcx
	cmpq $4,%rcx
	jge _c8DFn
_c8DFo:
	movq %rbx,32(%rbp)
	movq %rax,40(%rbp)
	addq $-8,%rbp
	jmp _c8DC0
	.size _c8DCI, .-_c8DCI


==================== Asm code ====================
2018-03-16 16:03:47.760186235 UTC

.section .text
.align 8
_c8DDY:
_c8DDY:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8DF1
_c8DF0:
	movq 96(%rbp),%rax
	movq 120(%rbp),%rbx
	movq 112(%rbp),%rcx
	movq 80(%rbp),%rdx
	movq 88(%rbp),%rsi
	movq 104(%rbp),%rdi
	movq 72(%rbp),%r8
	movq 24(%rbp),%r9
	movq 32(%rbp),%r10
	movq 40(%rbp),%r11
	movq 48(%rbp),%r14
	movq %rax,64(%rsp)
	movq 56(%rbp),%rax
	movq %rbx,72(%rsp)
	movq 64(%rbp),%rbx
	movq %rcx,80(%rsp)
	movq 16(%rbp),%rcx
	cmpq $57343,%rcx
	jle _c8DF4
_c8DF9:
	cmpq $1114111,%rcx
	jg _c8DF7
_c8DF8:
	addq $-160,%r12
	movq 8(%rbp),%rax
	movq %rax,16(%rbp)
	addq $16,%rbp
	jmp _s8D9h
_c8DF7:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8D9u_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DF4:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8D9p_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DF1:
	movq $160,904(%r13)
	leaq block_c8DDY_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8DDY, .-_c8DDY


==================== Asm code ====================
2018-03-16 16:03:47.761347895 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DDY_info:
	.quad	_c8DDY
	.quad	1408207
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.76202891 UTC

.section .text
.align 8
_s8D9h:
_s8D9h:
	movq 8(%rbp),%rax
	movq 40(%rbp),%rax
	movq 48(%rbp),%rbx
	movq (%rbp),%rcx
	movq 56(%rbp),%rdx
	movl %ecx,(%rdx,%rbx,4)
	addq $4,%rax
	movq %rax,40(%rbp)
	leaq 1(%rbx),%rax
	movq %rax,48(%rbp)
	addq $8,%rbp
	jmp _c8DCI
	.size _s8D9h, .-_s8D9h


==================== Asm code ====================
2018-03-16 16:03:47.762942079 UTC

.section .text
.align 8
_c8DC0:
_c8DC0:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8DEP
_c8DEO:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8D8q_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DEP:
	movq $160,904(%r13)
	leaq block_c8DC0_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8DC0, .-_c8DC0


==================== Asm code ====================
2018-03-16 16:03:47.763795317 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DC0_info:
	.quad	_c8DC0
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.764764339 UTC

.section .text
.align 8
_c8DCm:
_c8DCm:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8DET
_c8DES:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8D8y_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DET:
	movq $160,904(%r13)
	leaq block_c8DCm_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8DCm, .-_c8DCm


==================== Asm code ====================
2018-03-16 16:03:47.765878965 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DCm_info:
	.quad	_c8DCm
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.768119735 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32le_decode_closure
.type GHC.IO.Encoding.UTF32.utf32le_decode_closure, @object
GHC.IO.Encoding.UTF32.utf32le_decode_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32le_decode_info


==================== Asm code ====================
2018-03-16 16:03:47.768711675 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32le_decode_entry
.type GHC.IO.Encoding.UTF32.utf32le_decode_entry, @object
GHC.IO.Encoding.UTF32.utf32le_decode_entry:
_c8DIc:
	jmp GHC.IO.Encoding.UTF32.mkUTF3_entry
	.size GHC.IO.Encoding.UTF32.utf32le_decode_entry, .-GHC.IO.Encoding.UTF32.utf32le_decode_entry


==================== Asm code ====================
2018-03-16 16:03:47.769313689 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32le_decode_info
.type GHC.IO.Encoding.UTF32.utf32le_decode_info, @object
GHC.IO.Encoding.UTF32.utf32le_decode_info:
	.quad	GHC.IO.Encoding.UTF32.utf32le_decode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:47.77105058 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32le3_bytes
.type GHC.IO.Encoding.UTF32.mkUTF32le3_bytes, @object
GHC.IO.Encoding.UTF32.mkUTF32le3_bytes:
	.asciz "UTF-32LE"


==================== Asm code ====================
2018-03-16 16:03:47.773636046 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32le2_closure
.type GHC.IO.Encoding.UTF32.mkUTF32le2_closure, @object
GHC.IO.Encoding.UTF32.mkUTF32le2_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32le2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:47.774503284 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF32le2_entry
.type GHC.IO.Encoding.UTF32.mkUTF32le2_entry, @object
GHC.IO.Encoding.UTF32.mkUTF32le2_entry:
_c8DIq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DIr
_c8DIs:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8DIp
_c8DIo:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Encoding.UTF32.mkUTF32le3_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8DIr:
	jmp *-16(%r13)
_c8DIp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF32.mkUTF32le2_entry, .-GHC.IO.Encoding.UTF32.mkUTF32le2_entry


==================== Asm code ====================
2018-03-16 16:03:47.775247252 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32le2_info
.type GHC.IO.Encoding.UTF32.mkUTF32le2_info, @object
GHC.IO.Encoding.UTF32.mkUTF32le2_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32le2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:47.777634144 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF2_closure
.type GHC.IO.Encoding.UTF32.mkUTF2_closure, @object
GHC.IO.Encoding.UTF32.mkUTF2_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF2_info


==================== Asm code ====================
2018-03-16 16:03:47.778286168 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF2_entry
.type GHC.IO.Encoding.UTF32.mkUTF2_entry, @object
GHC.IO.Encoding.UTF32.mkUTF2_entry:
_c8DIF:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF32.mkUTF2_entry, .-GHC.IO.Encoding.UTF32.mkUTF2_entry


==================== Asm code ====================
2018-03-16 16:03:47.778924825 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF2_info
.type GHC.IO.Encoding.UTF32.mkUTF2_info, @object
GHC.IO.Encoding.UTF32.mkUTF2_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF2_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:03:47.780973894 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32be1_closure
.type GHC.IO.Encoding.UTF32.mkUTF32be1_closure, @object
GHC.IO.Encoding.UTF32.mkUTF32be1_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be1_info


==================== Asm code ====================
2018-03-16 16:03:47.781674299 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF32be1_entry
.type GHC.IO.Encoding.UTF32.mkUTF32be1_entry, @object
GHC.IO.Encoding.UTF32.mkUTF32be1_entry:
_c8DIS:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF32.mkUTF32be1_entry, .-GHC.IO.Encoding.UTF32.mkUTF32be1_entry


==================== Asm code ====================
2018-03-16 16:03:47.78231734 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32be1_info
.type GHC.IO.Encoding.UTF32.mkUTF32be1_info, @object
GHC.IO.Encoding.UTF32.mkUTF32be1_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:47.787331772 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32le_closure
.type GHC.IO.Encoding.UTF32.mkUTF32le_closure, @object
GHC.IO.Encoding.UTF32.mkUTF32le_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32le_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:47.788000659 UTC

.section .text
.align 8
sat_s8D9I_entry:
_c8DJf:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverEncode1_entry@gotpcrel(%rip)
	.size sat_s8D9I_entry, .-sat_s8D9I_entry


==================== Asm code ====================
2018-03-16 16:03:47.788604407 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8D9I_info:
	.quad	sat_s8D9I_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8DJN_srt


==================== Asm code ====================
2018-03-16 16:03:47.789898184 UTC

.section .text
.align 8
sat_s8D9K_entry:
_c8DJj:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8DJn
_c8DJm:
	movq 7(%rbx),%rax
	leaq sat_s8D9I_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq GHC.IO.Encoding.UTF32.mkUTF32le1_closure+3(%rip),%rax
	movq %rax,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF32.mkUTF2_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.IO.Encoding.UTF32.mkUTF2_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq GHC.IO.Encoding.UTF32.mkUTF32be1_closure+2(%rip),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8DJn:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8D9K_entry, .-sat_s8D9K_entry


==================== Asm code ====================
2018-03-16 16:03:47.790657971 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8D9K_info:
	.quad	sat_s8D9K_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8DJN_srt


==================== Asm code ====================
2018-03-16 16:03:47.791317491 UTC

.section .text
.align 8
sat_s8D9E_entry:
_c8DJy:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverDecode1_entry@gotpcrel(%rip)
	.size sat_s8D9E_entry, .-sat_s8D9E_entry


==================== Asm code ====================
2018-03-16 16:03:47.791957699 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8D9E_info:
	.quad	sat_s8D9E_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8DJN_srt+8


==================== Asm code ====================
2018-03-16 16:03:47.792802182 UTC

.section .text
.align 8
sat_s8D9G_entry:
_c8DJC:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8DJG
_c8DJF:
	movq 7(%rbx),%rax
	leaq sat_s8D9E_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq GHC.IO.Encoding.UTF32.mkUTF3_closure+3(%rip),%rax
	movq %rax,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF32.mkUTF2_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.IO.Encoding.UTF32.mkUTF2_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq GHC.IO.Encoding.UTF32.mkUTF32be1_closure+2(%rip),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8DJG:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8D9G_entry, .-sat_s8D9G_entry


==================== Asm code ====================
2018-03-16 16:03:47.793633978 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8D9G_info:
	.quad	sat_s8D9G_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8DJN_srt+8


==================== Asm code ====================
2018-03-16 16:03:47.79442192 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF32le_entry
.type GHC.IO.Encoding.UTF32.mkUTF32le_entry, @object
GHC.IO.Encoding.UTF32.mkUTF32le_entry:
_c8DJI:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8DJM
_c8DJL:
	leaq sat_s8D9K_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s8D9G_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	movq GHC.IO.Encoding.Types.TextEncoding_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF32.mkUTF32le2_closure(%rip),%rax
	movq %rax,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8DJM:
	movq $64,904(%r13)
	leaq GHC.IO.Encoding.UTF32.mkUTF32le_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.mkUTF32le_entry, .-GHC.IO.Encoding.UTF32.mkUTF32le_entry


==================== Asm code ====================
2018-03-16 16:03:47.795669192 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32le_info
.type GHC.IO.Encoding.UTF32.mkUTF32le_info, @object
GHC.IO.Encoding.UTF32.mkUTF32le_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32le_entry
	.quad	0
	.quad	64424509454
	.quad	4294967301
	.quad	S8DJN_srt


==================== Asm code ====================
2018-03-16 16:03:47.798947216 UTC

.section .data
.align 8
.align 1
lvl_r8AWo_closure:
	.quad	lvl_r8AWo_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:47.799653696 UTC

.section .text
.align 8
lvl_r8AWo_entry:
_c8DKy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DKC
_c8DKD:
	leaq block_c8DKv_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8DKv
_c8DKw:
	movq (%rbx),%rax
	jmp *(%rax)
_c8DKC:
	leaq lvl_r8AWo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size lvl_r8AWo_entry, .-lvl_r8AWo_entry


==================== Asm code ====================
2018-03-16 16:03:47.800321914 UTC

.section .data.rel.ro
.align 8
.align 1
lvl_r8AWo_info:
	.quad	lvl_r8AWo_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8DJN_srt+32


==================== Asm code ====================
2018-03-16 16:03:47.8010074 UTC

.section .text
.align 8
_c8DKv:
_c8DKv:
	movq 8(%rbp),%rax
	leaq block_c8DKB_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8DKB
_c8DKF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8DKv, .-_c8DKv


==================== Asm code ====================
2018-03-16 16:03:47.801914436 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DKv_info:
	.quad	_c8DKv
	.quad	1
	.quad	4294967326
	.quad	S8DJN_srt+32


==================== Asm code ====================
2018-03-16 16:03:47.802528933 UTC

.section .text
.align 8
_c8DKB:
_c8DKB:
	movq GHC.IO.Encoding.Failure.recoverDecode2_closure@gotpcrel(%rip),%rbx
	addq $8,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _c8DKB, .-_c8DKB


==================== Asm code ====================
2018-03-16 16:03:47.8031453 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DKB_info:
	.quad	_c8DKB
	.quad	0
	.quad	4294967326
	.quad	S8DJN_srt+32


==================== Asm code ====================
2018-03-16 16:03:47.804876153 UTC

.section .data
.align 8
.align 1
lvl1_r8AWp_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.UTF32.mkUTF3_closure+3
	.quad	lvl_r8AWo_closure+3
	.quad	GHC.IO.Encoding.UTF32.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF32.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:47.806982528 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32le2_closure
.type GHC.IO.Encoding.UTF32.utf32le2_closure, @object
GHC.IO.Encoding.UTF32.utf32le2_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32le2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:47.807632336 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32le2_entry
.type GHC.IO.Encoding.UTF32.utf32le2_entry, @object
GHC.IO.Encoding.UTF32.utf32le2_entry:
_c8DL6:
	leaq lvl1_r8AWp_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF32.utf32le2_entry, .-GHC.IO.Encoding.UTF32.utf32le2_entry


==================== Asm code ====================
2018-03-16 16:03:47.808214593 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32le2_info
.type GHC.IO.Encoding.UTF32.utf32le2_info, @object
GHC.IO.Encoding.UTF32.utf32le2_info:
	.quad	GHC.IO.Encoding.UTF32.utf32le2_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8DJN_srt+48


==================== Asm code ====================
2018-03-16 16:03:47.811714356 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be2_closure
.type GHC.IO.Encoding.UTF32.utf32be2_closure, @object
GHC.IO.Encoding.UTF32.utf32be2_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32be2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:47.812536747 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32be2_entry
.type GHC.IO.Encoding.UTF32.utf32be2_entry, @object
GHC.IO.Encoding.UTF32.utf32be2_entry:
_c8DLl:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DLp
_c8DLq:
	leaq block_c8DLi_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8DLi
_c8DLj:
	movq (%rbx),%rax
	jmp *(%rax)
_c8DLp:
	leaq GHC.IO.Encoding.UTF32.utf32be2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.utf32be2_entry, .-GHC.IO.Encoding.UTF32.utf32be2_entry


==================== Asm code ====================
2018-03-16 16:03:47.813215095 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be2_info
.type GHC.IO.Encoding.UTF32.utf32be2_info, @object
GHC.IO.Encoding.UTF32.utf32be2_info:
	.quad	GHC.IO.Encoding.UTF32.utf32be2_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8DJN_srt+56


==================== Asm code ====================
2018-03-16 16:03:47.814317644 UTC

.section .text
.align 8
_c8DLi:
_c8DLi:
	leaq block_c8DLo_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8DLo
_c8DLs:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8DLi, .-_c8DLi


==================== Asm code ====================
2018-03-16 16:03:47.814954465 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DLi_info:
	.quad	_c8DLi
	.quad	1
	.quad	4294967326
	.quad	S8DJN_srt+56


==================== Asm code ====================
2018-03-16 16:03:47.815581827 UTC

.section .text
.align 8
_c8DLo:
_c8DLo:
	movq GHC.IO.Encoding.Failure.recoverEncode2_closure@gotpcrel(%rip),%rbx
	addq $32,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _c8DLo, .-_c8DLo


==================== Asm code ====================
2018-03-16 16:03:47.816182583 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DLo_info:
	.quad	_c8DLo
	.quad	323
	.quad	4294967326
	.quad	S8DJN_srt+56


==================== Asm code ====================
2018-03-16 16:03:47.818008115 UTC

.section .data
.align 8
.align 1
lvl2_r8AWq_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.UTF32.mkUTF32le1_closure+3
	.quad	GHC.IO.Encoding.UTF32.utf32be2_closure+3
	.quad	GHC.IO.Encoding.UTF32.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF32.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:47.820082641 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32le1_closure
.type GHC.IO.Encoding.UTF32.utf32le1_closure, @object
GHC.IO.Encoding.UTF32.utf32le1_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32le1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:47.820747047 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32le1_entry
.type GHC.IO.Encoding.UTF32.utf32le1_entry, @object
GHC.IO.Encoding.UTF32.utf32le1_entry:
_c8DLU:
	leaq lvl2_r8AWq_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF32.utf32le1_entry, .-GHC.IO.Encoding.UTF32.utf32le1_entry


==================== Asm code ====================
2018-03-16 16:03:47.821385882 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32le1_info
.type GHC.IO.Encoding.UTF32.utf32le1_info, @object
GHC.IO.Encoding.UTF32.utf32le1_info:
	.quad	GHC.IO.Encoding.UTF32.utf32le1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8DJN_srt+72


==================== Asm code ====================
2018-03-16 16:03:47.82321061 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32le_closure
.type GHC.IO.Encoding.UTF32.utf32le_closure, @object
GHC.IO.Encoding.UTF32.utf32le_closure:
	.quad	GHC.IO.Encoding.Types.TextEncoding_con_info
	.quad	GHC.IO.Encoding.UTF32.mkUTF32le2_closure
	.quad	GHC.IO.Encoding.UTF32.utf32le2_closure+1
	.quad	GHC.IO.Encoding.UTF32.utf32le1_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:47.840468881 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF5_closure
.type GHC.IO.Encoding.UTF32.mkUTF5_closure, @object
GHC.IO.Encoding.UTF32.mkUTF5_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF5_info


==================== Asm code ====================
2018-03-16 16:03:47.841666705 UTC

.section .text
.align 8
sat_s8DaM_entry:
_c8DMx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DMy
_c8DMz:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8DMB
_c8DMA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8DMw
_c8DMv:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DMB:
	movq $56,904(%r13)
_c8DMy:
	jmp *-16(%r13)
_c8DMw:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8DaM_entry, .-sat_s8DaM_entry


==================== Asm code ====================
2018-03-16 16:03:47.842494292 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8DaM_info:
	.quad	sat_s8DaM_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:47.844184816 UTC

.section .text
.align 8
sat_s8DaU_entry:
_c8DMT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DMU
_c8DMV:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8DMX
_c8DMW:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8DMS
_c8DMR:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DMX:
	movq $56,904(%r13)
_c8DMU:
	jmp *-16(%r13)
_c8DMS:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8DaU_entry, .-sat_s8DaU_entry


==================== Asm code ====================
2018-03-16 16:03:47.844968477 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8DaU_info:
	.quad	sat_s8DaU_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:47.845883169 UTC

.section .text
.align 8
sat_s8DbL_entry:
_c8DOx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DOy
_c8DOz:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8DOB
_c8DOA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8DOw
_c8DOv:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DOB:
	movq $56,904(%r13)
_c8DOy:
	jmp *-16(%r13)
_c8DOw:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8DbL_entry, .-sat_s8DbL_entry


==================== Asm code ====================
2018-03-16 16:03:47.846672836 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8DbL_info:
	.quad	sat_s8DbL_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:47.84759182 UTC

.section .text
.align 8
sat_s8DbQ_entry:
_c8DOS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DOT
_c8DOU:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8DOW
_c8DOV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 56(%rbx),%rax
	movq 64(%rbx),%rcx
	cmpq %rax,%rcx
	je _c8DOR
_c8DOQ:
	movq 16(%rbx),%rdx
	movq 24(%rbx),%rsi
	movq 40(%rbx),%rdi
	movq 48(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DOW:
	movq $56,904(%r13)
_c8DOT:
	jmp *-16(%r13)
_c8DOR:
	movq 32(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8DbQ_entry, .-sat_s8DbQ_entry


==================== Asm code ====================
2018-03-16 16:03:47.848354335 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8DbQ_info:
	.quad	sat_s8DbQ_entry
	.quad	17179869187
	.quad	15


==================== Asm code ====================
2018-03-16 16:03:47.849138425 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF5_entry
.type GHC.IO.Encoding.UTF32.mkUTF5_entry, @object
GHC.IO.Encoding.UTF32.mkUTF5_entry:
_c8DOZ:
	leaq -128(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DP0
_c8DP1:
	leaq block_c8DM7_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8DM7
_c8DM8:
	movq (%rbx),%rax
	jmp *(%rax)
_c8DP0:
	leaq GHC.IO.Encoding.UTF32.mkUTF5_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.mkUTF5_entry, .-GHC.IO.Encoding.UTF32.mkUTF5_entry


==================== Asm code ====================
2018-03-16 16:03:47.84984152 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF5_info
.type GHC.IO.Encoding.UTF32.mkUTF5_info, @object
GHC.IO.Encoding.UTF32.mkUTF5_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF5_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:47.850575764 UTC

.section .text
.align 8
_c8DM7:
_c8DM7:
	leaq block_c8DMc_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8DMc
_c8DMd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8DM7, .-_c8DM7


==================== Asm code ====================
2018-03-16 16:03:47.851255361 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DM7_info:
	.quad	_c8DM7
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.852110636 UTC

.section .text
.align 8
_c8DMc:
_c8DMc:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8DP5
_c8DP4:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq 40(%rbp),%r8
	movq %r8,-40(%r12)
	movq 8(%rbp),%r8
	movq %r8,-32(%r12)
	movq 48(%rbp),%r8
	movq %r8,-24(%r12)
	movq 16(%rbp),%r8
	movq %r8,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rdx,(%rbp)
	leaq -47(%r12),%rax
	movq %rax,24(%rbp)
	addq $-48,%rbp
	jmp _c8DN2
_c8DP5:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8DMc, .-_c8DMc


==================== Asm code ====================
2018-03-16 16:03:47.852883927 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DMc_info:
	.quad	_c8DMc
	.quad	2950
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.853861388 UTC

.section .text
.align 8
_c8DN2:
_c8DN2:
	movq 32(%rbp),%rax
	movq 40(%rbp),%rbx
	cmpq 16(%rbp),%rbx
	jl _c8DPK
_c8DPL:
	movq %rbx,32(%rbp)
	movq %rax,40(%rbp)
	addq $-8,%rbp
	jmp _c8DMG
_u8DPU:
	movq %rcx,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8DOi
_c8DPH:
	movq 96(%rbp),%rbx
	movq 88(%rbp),%rcx
	movzbl (%rbx,%rax,1),%ecx
	leaq 1(%rax),%rdx
	movzbl (%rbx,%rdx,1),%edx
	leaq 2(%rax),%rsi
	movzbl (%rbx,%rsi,1),%esi
	addq $3,%rax
	movzbl (%rbx,%rax,1),%eax
	shlq $8,%rsi
	addq %rax,%rsi
	shlq $16,%rdx
	addq %rsi,%rdx
	shlq $24,%rcx
	addq %rdx,%rcx
	testq %rcx,%rcx
	jl _u8DPS
_c8DPF:
	cmpq $55296,%rcx
	jge _u8DPU
_u8DPT:
	movq %rcx,-8(%rbp)
	addq $-8,%rbp
	jmp _s8DbD
_u8DPS:
	movq %rcx,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	jmp _c8DOi
_c8DPK:
	movq 80(%rbp),%rcx
	subq %rax,%rcx
	cmpq $4,%rcx
	jge _c8DPH
_c8DPI:
	movq %rbx,32(%rbp)
	movq %rax,40(%rbp)
	addq $-8,%rbp
	jmp _c8DMk
	.size _c8DN2, .-_c8DN2


==================== Asm code ====================
2018-03-16 16:03:47.85526876 UTC

.section .text
.align 8
_c8DOi:
_c8DOi:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8DPl
_c8DPk:
	movq 96(%rbp),%rax
	movq 120(%rbp),%rbx
	movq 112(%rbp),%rcx
	movq 80(%rbp),%rdx
	movq 88(%rbp),%rsi
	movq 104(%rbp),%rdi
	movq 72(%rbp),%r8
	movq 24(%rbp),%r9
	movq 32(%rbp),%r10
	movq 40(%rbp),%r11
	movq 48(%rbp),%r14
	movq %rax,64(%rsp)
	movq 56(%rbp),%rax
	movq %rbx,72(%rsp)
	movq 64(%rbp),%rbx
	movq %rcx,80(%rsp)
	movq 16(%rbp),%rcx
	cmpq $57343,%rcx
	jle _c8DPo
_c8DPt:
	cmpq $1114111,%rcx
	jg _c8DPr
_c8DPs:
	addq $-160,%r12
	movq 8(%rbp),%rax
	movq %rax,16(%rbp)
	addq $16,%rbp
	jmp _s8DbD
_c8DPr:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8DbQ_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DPo:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %r9,-144(%r12)
	movq %r10,-136(%r12)
	movq %r8,-128(%r12)
	movq %r11,-120(%r12)
	movq %r14,-112(%r12)
	movq %rbx,-104(%r12)
	leaq sat_s8DbL_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InvalidSequence_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DPl:
	movq $160,904(%r13)
	leaq block_c8DOi_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8DOi, .-_c8DOi


==================== Asm code ====================
2018-03-16 16:03:47.856372665 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DOi_info:
	.quad	_c8DOi
	.quad	1408207
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.85704293 UTC

.section .text
.align 8
_s8DbD:
_s8DbD:
	movq 8(%rbp),%rax
	movq 40(%rbp),%rax
	movq 48(%rbp),%rbx
	movq (%rbp),%rcx
	movq 56(%rbp),%rdx
	movl %ecx,(%rdx,%rbx,4)
	addq $4,%rax
	movq %rax,40(%rbp)
	leaq 1(%rbx),%rax
	movq %rax,48(%rbp)
	addq $8,%rbp
	jmp _c8DN2
	.size _s8DbD, .-_s8DbD


==================== Asm code ====================
2018-03-16 16:03:47.858009245 UTC

.section .text
.align 8
_c8DMk:
_c8DMk:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8DP9
_c8DP8:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8DaM_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DP9:
	movq $160,904(%r13)
	leaq block_c8DMk_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8DMk, .-_c8DMk


==================== Asm code ====================
2018-03-16 16:03:47.858898402 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DMk_info:
	.quad	_c8DMk
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.859790165 UTC

.section .text
.align 8
_c8DMG:
_c8DMG:
	addq $160,%r12
	cmpq 856(%r13),%r12
	ja _c8DPd
_c8DPc:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 8(%rbp),%rax
	movq %rax,-144(%r12)
	movq 16(%rbp),%rax
	movq %rax,-136(%r12)
	movq 56(%rbp),%rax
	movq %rax,-128(%r12)
	movq 24(%rbp),%rax
	movq %rax,-120(%r12)
	movq 32(%rbp),%rax
	movq %rax,-112(%r12)
	movq 40(%rbp),%rax
	movq %rax,-104(%r12)
	leaq sat_s8DaU_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 80(%rbp),%rax
	movq %rax,-64(%r12)
	movq 104(%rbp),%rax
	movq %rax,-56(%r12)
	movq 72(%rbp),%rax
	movq %rax,-48(%r12)
	movq 88(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%r12)
	leaq -96(%r12),%rax
	movq %rax,-8(%r12)
	leaq -151(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DPd:
	movq $160,904(%r13)
	leaq block_c8DMG_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8DMG, .-_c8DMG


==================== Asm code ====================
2018-03-16 16:03:47.860649214 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DMG_info:
	.quad	_c8DMG
	.quad	352013
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.862993877 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be_decode_closure
.type GHC.IO.Encoding.UTF32.utf32be_decode_closure, @object
GHC.IO.Encoding.UTF32.utf32be_decode_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32be_decode_info


==================== Asm code ====================
2018-03-16 16:03:47.863652336 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32be_decode_entry
.type GHC.IO.Encoding.UTF32.utf32be_decode_entry, @object
GHC.IO.Encoding.UTF32.utf32be_decode_entry:
_c8DSw:
	jmp GHC.IO.Encoding.UTF32.mkUTF5_entry
	.size GHC.IO.Encoding.UTF32.utf32be_decode_entry, .-GHC.IO.Encoding.UTF32.utf32be_decode_entry


==================== Asm code ====================
2018-03-16 16:03:47.864206255 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be_decode_info
.type GHC.IO.Encoding.UTF32.utf32be_decode_info, @object
GHC.IO.Encoding.UTF32.utf32be_decode_info:
	.quad	GHC.IO.Encoding.UTF32.utf32be_decode_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:47.866333416 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32be3_bytes
.type GHC.IO.Encoding.UTF32.mkUTF32be3_bytes, @object
GHC.IO.Encoding.UTF32.mkUTF32be3_bytes:
	.asciz "UTF-32BE"


==================== Asm code ====================
2018-03-16 16:03:47.868969072 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32be2_closure
.type GHC.IO.Encoding.UTF32.mkUTF32be2_closure, @object
GHC.IO.Encoding.UTF32.mkUTF32be2_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:47.869876779 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF32be2_entry
.type GHC.IO.Encoding.UTF32.mkUTF32be2_entry, @object
GHC.IO.Encoding.UTF32.mkUTF32be2_entry:
_c8DSK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DSL
_c8DSM:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8DSJ
_c8DSI:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Encoding.UTF32.mkUTF32be3_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8DSL:
	jmp *-16(%r13)
_c8DSJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF32.mkUTF32be2_entry, .-GHC.IO.Encoding.UTF32.mkUTF32be2_entry


==================== Asm code ====================
2018-03-16 16:03:47.870638393 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32be2_info
.type GHC.IO.Encoding.UTF32.mkUTF32be2_info, @object
GHC.IO.Encoding.UTF32.mkUTF32be2_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:47.875843331 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32be_closure
.type GHC.IO.Encoding.UTF32.mkUTF32be_closure, @object
GHC.IO.Encoding.UTF32.mkUTF32be_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:47.876533721 UTC

.section .text
.align 8
sat_s8Dc1_entry:
_c8DT9:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverEncode1_entry@gotpcrel(%rip)
	.size sat_s8Dc1_entry, .-sat_s8Dc1_entry


==================== Asm code ====================
2018-03-16 16:03:47.877162143 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Dc1_info:
	.quad	sat_s8Dc1_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8DJN_srt


==================== Asm code ====================
2018-03-16 16:03:47.878040168 UTC

.section .text
.align 8
sat_s8Dc3_entry:
_c8DTd:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8DTh
_c8DTg:
	movq 7(%rbx),%rax
	leaq sat_s8Dc1_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq GHC.IO.Encoding.UTF32.mkUTF1_closure+3(%rip),%rax
	movq %rax,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF32.mkUTF2_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.IO.Encoding.UTF32.mkUTF2_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq GHC.IO.Encoding.UTF32.mkUTF32be1_closure+2(%rip),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8DTh:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8Dc3_entry, .-sat_s8Dc3_entry


==================== Asm code ====================
2018-03-16 16:03:47.878780094 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Dc3_info:
	.quad	sat_s8Dc3_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8DJN_srt


==================== Asm code ====================
2018-03-16 16:03:47.87940337 UTC

.section .text
.align 8
sat_s8DbX_entry:
_c8DTs:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverDecode1_entry@gotpcrel(%rip)
	.size sat_s8DbX_entry, .-sat_s8DbX_entry


==================== Asm code ====================
2018-03-16 16:03:47.880008163 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8DbX_info:
	.quad	sat_s8DbX_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8DJN_srt+8


==================== Asm code ====================
2018-03-16 16:03:47.881553 UTC

.section .text
.align 8
sat_s8DbZ_entry:
_c8DTw:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8DTA
_c8DTz:
	movq 7(%rbx),%rax
	leaq sat_s8DbX_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq GHC.IO.Encoding.UTF32.mkUTF5_closure+3(%rip),%rax
	movq %rax,-32(%r12)
	leaq -53(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF32.mkUTF2_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.IO.Encoding.UTF32.mkUTF2_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq GHC.IO.Encoding.UTF32.mkUTF32be1_closure+2(%rip),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8DTA:
	movq $64,904(%r13)
	jmp *-8(%r13)
	.size sat_s8DbZ_entry, .-sat_s8DbZ_entry


==================== Asm code ====================
2018-03-16 16:03:47.882305643 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8DbZ_info:
	.quad	sat_s8DbZ_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8DJN_srt+8


==================== Asm code ====================
2018-03-16 16:03:47.88307186 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF32be_entry
.type GHC.IO.Encoding.UTF32.mkUTF32be_entry, @object
GHC.IO.Encoding.UTF32.mkUTF32be_entry:
_c8DTC:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8DTG
_c8DTF:
	leaq sat_s8Dc3_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s8DbZ_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	movq GHC.IO.Encoding.Types.TextEncoding_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF32.mkUTF32be2_closure(%rip),%rax
	movq %rax,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8DTG:
	movq $64,904(%r13)
	leaq GHC.IO.Encoding.UTF32.mkUTF32be_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.mkUTF32be_entry, .-GHC.IO.Encoding.UTF32.mkUTF32be_entry


==================== Asm code ====================
2018-03-16 16:03:47.883806261 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32be_info
.type GHC.IO.Encoding.UTF32.mkUTF32be_info, @object
GHC.IO.Encoding.UTF32.mkUTF32be_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be_entry
	.quad	0
	.quad	13207024435214
	.quad	4294967301
	.quad	S8DJN_srt


==================== Asm code ====================
2018-03-16 16:03:47.885694514 UTC

.section .data
.align 8
.align 1
lvl3_r8AWr_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.UTF32.mkUTF5_closure+3
	.quad	lvl_r8AWo_closure+3
	.quad	GHC.IO.Encoding.UTF32.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF32.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:47.88784549 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be3_closure
.type GHC.IO.Encoding.UTF32.utf32be3_closure, @object
GHC.IO.Encoding.UTF32.utf32be3_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32be3_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:47.888529592 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32be3_entry
.type GHC.IO.Encoding.UTF32.utf32be3_entry, @object
GHC.IO.Encoding.UTF32.utf32be3_entry:
_c8DUp:
	leaq lvl3_r8AWr_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF32.utf32be3_entry, .-GHC.IO.Encoding.UTF32.utf32be3_entry


==================== Asm code ====================
2018-03-16 16:03:47.889125927 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be3_info
.type GHC.IO.Encoding.UTF32.utf32be3_info, @object
GHC.IO.Encoding.UTF32.utf32be3_info:
	.quad	GHC.IO.Encoding.UTF32.utf32be3_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8DJN_srt+96


==================== Asm code ====================
2018-03-16 16:03:47.890945879 UTC

.section .data
.align 8
.align 1
lvl4_r8AWs_closure:
	.quad	GHC.IO.Encoding.Types.BufferCodec_con_info
	.quad	GHC.IO.Encoding.UTF32.mkUTF1_closure+3
	.quad	GHC.IO.Encoding.UTF32.utf32be2_closure+3
	.quad	GHC.IO.Encoding.UTF32.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF32.mkUTF2_closure+1
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:47.893070621 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be1_closure
.type GHC.IO.Encoding.UTF32.utf32be1_closure, @object
GHC.IO.Encoding.UTF32.utf32be1_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32be1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:47.894005101 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32be1_entry
.type GHC.IO.Encoding.UTF32.utf32be1_entry, @object
GHC.IO.Encoding.UTF32.utf32be1_entry:
_c8DUC:
	leaq lvl4_r8AWs_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF32.utf32be1_entry, .-GHC.IO.Encoding.UTF32.utf32be1_entry


==================== Asm code ====================
2018-03-16 16:03:47.894614901 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be1_info
.type GHC.IO.Encoding.UTF32.utf32be1_info, @object
GHC.IO.Encoding.UTF32.utf32be1_info:
	.quad	GHC.IO.Encoding.UTF32.utf32be1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	S8DJN_srt+104


==================== Asm code ====================
2018-03-16 16:03:47.896346281 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32be_closure
.type GHC.IO.Encoding.UTF32.utf32be_closure, @object
GHC.IO.Encoding.UTF32.utf32be_closure:
	.quad	GHC.IO.Encoding.Types.TextEncoding_con_info
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be2_closure
	.quad	GHC.IO.Encoding.UTF32.utf32be3_closure+1
	.quad	GHC.IO.Encoding.UTF32.utf32be1_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:47.898139827 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF6_closure
.type GHC.IO.Encoding.UTF32.mkUTF6_closure, @object
GHC.IO.Encoding.UTF32.mkUTF6_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.IO.Encoding.UTF32.mkUTF5_closure+3
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:47.899882921 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF4_closure
.type GHC.IO.Encoding.UTF32.mkUTF4_closure, @object
GHC.IO.Encoding.UTF32.mkUTF4_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.IO.Encoding.UTF32.mkUTF3_closure+3
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:47.910288919 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.$wutf32_decode_closure
.type GHC.IO.Encoding.UTF32.$wutf32_decode_closure, @object
GHC.IO.Encoding.UTF32.$wutf32_decode_closure:
	.quad	GHC.IO.Encoding.UTF32.$wutf32_decode_info


==================== Asm code ====================
2018-03-16 16:03:47.911038472 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.$wutf32_decode_slow
.type GHC.IO.Encoding.UTF32.$wutf32_decode_slow, @object
GHC.IO.Encoding.UTF32.$wutf32_decode_slow:
_c8DUO:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Encoding.UTF32.$wutf32_decode_entry
	.size GHC.IO.Encoding.UTF32.$wutf32_decode_slow, .-GHC.IO.Encoding.UTF32.$wutf32_decode_slow


==================== Asm code ====================
2018-03-16 16:03:47.911894371 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.$wutf32_decode_entry
.type GHC.IO.Encoding.UTF32.$wutf32_decode_entry, @object
GHC.IO.Encoding.UTF32.$wutf32_decode_entry:
_c8DUZ:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DV0
_c8DV1:
	leaq block_c8DUS_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq 8(%r14),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _c8DUS
_c8DUT:
	movq (%rbx),%rax
	jmp *(%rax)
_c8DV0:
	leaq GHC.IO.Encoding.UTF32.$wutf32_decode_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.$wutf32_decode_entry, .-GHC.IO.Encoding.UTF32.$wutf32_decode_entry


==================== Asm code ====================
2018-03-16 16:03:47.912633515 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.$wutf32_decode_info
.type GHC.IO.Encoding.UTF32.$wutf32_decode_info, @object
GHC.IO.Encoding.UTF32.$wutf32_decode_info:
	.quad	GHC.IO.Encoding.UTF32.$wutf32_decode_entry
	.quad	0
	.quad	14
	.quad	38654705664
	.quad	0
	.quad	7304
	.quad	GHC.IO.Encoding.UTF32.$wutf32_decode_slow


==================== Asm code ====================
2018-03-16 16:03:47.914158748 UTC

.section .text
.align 8
_c8DUS:
_c8DUS:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 40(%rbp),%rsi
	movq 48(%rbp),%rdi
	movq 56(%rbp),%r8
	movq 64(%rbp),%r9
	movq %rbx,%r10
	andl $7,%r10d
	cmpq $1,%r10
	je _c8DUW
_c8DUX:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8DXb
_c8DXa:
	movq 6(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r10
	movq %r10,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r8,(%r12)
	movq %r9,%rsi
	leaq -47(%r12),%r14
	addq $72,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
_c8DXb:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8DUW:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c8DV6
_c8DV5:
	movq %r8,%rbx
	subq %rdi,%rbx
	cmpq $4,%rbx
	jge _c8DX1
_c8DX5:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-80(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rax,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r8,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq GHC.IO.Encoding.Types.InputUnderflow_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%r12)
	leaq -79(%r12),%rax
	movq %rax,-8(%r12)
	movq %r9,(%r12)
	leaq -23(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DX1:
	movq 8(%rbp),%rbx
	movzbl (%rax,%rdi,1),%r10d
	leaq 1(%rdi),%r11
	movzbl (%rax,%r11,1),%r11d
	leaq 2(%rdi),%r14
	movzbl (%rax,%r14,1),%r14d
	movq %rbx,64(%rsp)
	leaq 3(%rdi),%rbx
	movzbl (%rax,%rbx,1),%ebx
	testq %r10,%r10
	jne _c8DWM
_c8DWZ:
	testq %r11,%r11
	jne _c8DWM
_c8DWY:
	cmpq $254,%r14
	jne _c8DWM
_c8DWX:
	cmpq $255,%rbx
	jne _c8DWM
_c8DWW:
	leaq GHC.IO.Encoding.UTF32.mkUTF6_closure+2(%rip),%rbx
	movq 64(%rsp),%r10
	movq %rbx,8(%r10)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rsi,%r11
	movq %r10,%rsi
	movq %rdi,%r10
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,80(%rsp)
	movq %r11,88(%rsp)
	movq %r10,96(%rsp)
	movq %r8,104(%rsp)
	movq %r9,112(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-80(%r12)
	movq %r14,-72(%r12)
	movq 72(%rsp),%rax
	movq %rax,-64(%r12)
	movq %rbx,-56(%r12)
	movq 80(%rsp),%rax
	movq %rax,-48(%r12)
	movq 88(%rsp),%rax
	addq $4,%rax
	movq %rax,-40(%r12)
	movq 96(%rsp),%rax
	movq %rax,-32(%r12)
	leaq -79(%r12),%rax
	addq $-32,%r12
	movq 104(%rsp),%rbx
	movq %rbx,%rsi
	movq %rax,%r14
	addq $72,%rbp
	jmp GHC.IO.Encoding.UTF32.mkUTF5_entry
_c8DWM:
	addq $-88,%r12
	movq %r11,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %r10,(%rbp)
	addq $-32,%rbp
	jmp _c8DVF
_c8DV6:
	movq $88,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8DUS, .-_c8DUS


==================== Asm code ====================
2018-03-16 16:03:47.915498212 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DUS_info:
	.quad	_c8DUS
	.quad	7304
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.917221956 UTC

.section .text
.align 8
_c8DVF:
_c8DVF:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8DVJ
_c8DVI:
	movq 40(%rbp),%rax
	movq 48(%rbp),%rbx
	movq 56(%rbp),%rcx
	movq 64(%rbp),%rdx
	movq 72(%rbp),%rsi
	movq 80(%rbp),%rdi
	movq 88(%rbp),%r8
	movq 96(%rbp),%r9
	cmpq $255,32(%rbp)
	je _c8DWu
_c8DVR:
	leaq GHC.IO.Encoding.UTF32.mkUTF6_closure+2(%rip),%r10
	movq %r10,8(%rax)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rax,%rsi
	movq %rdi,%rax
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r11,80(%rsp)
	movq %r10,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq 64(%rsp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 72(%rsp),%rax
	movq %rax,-16(%r12)
	movq 80(%rsp),%rax
	movq %rax,-8(%r12)
	movq 88(%rsp),%rax
	movq %rax,(%r12)
	movq 96(%rsp),%rax
	movq %rax,%rsi
	leaq -47(%r12),%r14
	addq $104,%rbp
	jmp GHC.IO.Encoding.UTF32.mkUTF5_entry
_c8DWr:
	leaq GHC.IO.Encoding.UTF32.mkUTF4_closure+2(%rip),%r10
	movq %r10,8(%rax)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rax,%rsi
	movq %rdi,%rax
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r11,80(%rsp)
	movq %r10,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq 64(%rsp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 72(%rsp),%rax
	movq %rax,-16(%r12)
	movq 80(%rsp),%rax
	addq $4,%rax
	movq %rax,-8(%r12)
	movq 88(%rsp),%rax
	movq %rax,(%r12)
	movq 96(%rsp),%rax
	movq %rax,%rsi
	leaq -47(%r12),%r14
	addq $104,%rbp
	jmp GHC.IO.Encoding.UTF32.mkUTF3_entry
_c8DWs:
	cmpq $0,24(%rbp)
	je _c8DWr
_c8DWi:
	leaq GHC.IO.Encoding.UTF32.mkUTF6_closure+2(%rip),%r10
	movq %r10,8(%rax)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rax,%rsi
	movq %rdi,%rax
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r11,80(%rsp)
	movq %r10,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq 64(%rsp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 72(%rsp),%rax
	movq %rax,-16(%r12)
	movq 80(%rsp),%rax
	movq %rax,-8(%r12)
	movq 88(%rsp),%rax
	movq %rax,(%r12)
	movq 96(%rsp),%rax
	movq %rax,%rsi
	leaq -47(%r12),%r14
	addq $104,%rbp
	jmp GHC.IO.Encoding.UTF32.mkUTF5_entry
_c8DWt:
	cmpq $0,16(%rbp)
	je _c8DWs
_c8DW9:
	leaq GHC.IO.Encoding.UTF32.mkUTF6_closure+2(%rip),%r10
	movq %r10,8(%rax)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rax,%rsi
	movq %rdi,%rax
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r11,80(%rsp)
	movq %r10,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq 64(%rsp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 72(%rsp),%rax
	movq %rax,-16(%r12)
	movq 80(%rsp),%rax
	movq %rax,-8(%r12)
	movq 88(%rsp),%rax
	movq %rax,(%r12)
	movq 96(%rsp),%rax
	movq %rax,%rsi
	leaq -47(%r12),%r14
	addq $104,%rbp
	jmp GHC.IO.Encoding.UTF32.mkUTF5_entry
_c8DWu:
	cmpq $254,8(%rbp)
	je _c8DWt
_c8DW0:
	leaq GHC.IO.Encoding.UTF32.mkUTF6_closure+2(%rip),%r10
	movq %r10,8(%rax)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rax,%rsi
	movq %rdi,%rax
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r11,80(%rsp)
	movq %r10,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq 64(%rsp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 72(%rsp),%rax
	movq %rax,-16(%r12)
	movq 80(%rsp),%rax
	movq %rax,-8(%r12)
	movq 88(%rsp),%rax
	movq %rax,(%r12)
	movq 96(%rsp),%rax
	movq %rax,%rsi
	leaq -47(%r12),%r14
	addq $104,%rbp
	jmp GHC.IO.Encoding.UTF32.mkUTF5_entry
_c8DVJ:
	movq $56,904(%r13)
	leaq block_c8DVF_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c8DVF, .-_c8DVF


==================== Asm code ====================
2018-03-16 16:03:47.918969539 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DVF_info:
	.quad	_c8DVF
	.quad	117708
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.92279593 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32_decode1_closure
.type GHC.IO.Encoding.UTF32.utf32_decode1_closure, @object
GHC.IO.Encoding.UTF32.utf32_decode1_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32_decode1_info


==================== Asm code ====================
2018-03-16 16:03:47.923642932 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32_decode1_entry
.type GHC.IO.Encoding.UTF32.utf32_decode1_entry, @object
GHC.IO.Encoding.UTF32.utf32_decode1_entry:
_c8DYa:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DYe
_c8DYf:
	leaq block_c8DY7_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8DY7
_c8DY8:
	movq (%rbx),%rax
	jmp *(%rax)
_c8DYe:
	leaq GHC.IO.Encoding.UTF32.utf32_decode1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.utf32_decode1_entry, .-GHC.IO.Encoding.UTF32.utf32_decode1_entry


==================== Asm code ====================
2018-03-16 16:03:47.924866286 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32_decode1_info
.type GHC.IO.Encoding.UTF32.utf32_decode1_info, @object
GHC.IO.Encoding.UTF32.utf32_decode1_info:
	.quad	GHC.IO.Encoding.UTF32.utf32_decode1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:03:47.925920113 UTC

.section .text
.align 8
_c8DY7:
_c8DY7:
	leaq block_c8DYd_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8DYd
_c8DYh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8DY7, .-_c8DY7


==================== Asm code ====================
2018-03-16 16:03:47.926454799 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DY7_info:
	.quad	_c8DY7
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.927103453 UTC

.section .text
.align 8
_c8DYd:
_c8DYd:
	movq 31(%rbx),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.IO.Encoding.UTF32.$wutf32_decode_entry
	.size _c8DYd, .-_c8DYd


==================== Asm code ====================
2018-03-16 16:03:47.927731829 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DYd_info:
	.quad	_c8DYd
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.92997951 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32_decode_closure
.type GHC.IO.Encoding.UTF32.utf32_decode_closure, @object
GHC.IO.Encoding.UTF32.utf32_decode_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32_decode_info


==================== Asm code ====================
2018-03-16 16:03:47.930608251 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32_decode_entry
.type GHC.IO.Encoding.UTF32.utf32_decode_entry, @object
GHC.IO.Encoding.UTF32.utf32_decode_entry:
_c8DYJ:
	jmp GHC.IO.Encoding.UTF32.utf32_decode1_entry
	.size GHC.IO.Encoding.UTF32.utf32_decode_entry, .-GHC.IO.Encoding.UTF32.utf32_decode_entry


==================== Asm code ====================
2018-03-16 16:03:47.931200759 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32_decode_info
.type GHC.IO.Encoding.UTF32.utf32_decode_info, @object
GHC.IO.Encoding.UTF32.utf32_decode_info:
	.quad	GHC.IO.Encoding.UTF32.utf32_decode_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:03:47.937047716 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.$wutf32_encode_closure
.type GHC.IO.Encoding.UTF32.$wutf32_encode_closure, @object
GHC.IO.Encoding.UTF32.$wutf32_encode_closure:
	.quad	GHC.IO.Encoding.UTF32.$wutf32_encode_info


==================== Asm code ====================
2018-03-16 16:03:47.938024433 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.$wutf32_encode_slow
.type GHC.IO.Encoding.UTF32.$wutf32_encode_slow, @object
GHC.IO.Encoding.UTF32.$wutf32_encode_slow:
_c8DYR:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Encoding.UTF32.$wutf32_encode_entry
	.size GHC.IO.Encoding.UTF32.$wutf32_encode_slow, .-GHC.IO.Encoding.UTF32.$wutf32_encode_slow


==================== Asm code ====================
2018-03-16 16:03:47.938924267 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.$wutf32_encode_entry
.type GHC.IO.Encoding.UTF32.$wutf32_encode_entry, @object
GHC.IO.Encoding.UTF32.$wutf32_encode_entry:
_c8DZ2:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c8DZ3
_c8DZ4:
	leaq block_c8DYV_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq 8(%r14),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _c8DYV
_c8DYW:
	movq (%rbx),%rax
	jmp *(%rax)
_c8DZ3:
	leaq GHC.IO.Encoding.UTF32.$wutf32_encode_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.$wutf32_encode_entry, .-GHC.IO.Encoding.UTF32.$wutf32_encode_entry


==================== Asm code ====================
2018-03-16 16:03:47.939679745 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.$wutf32_encode_info
.type GHC.IO.Encoding.UTF32.$wutf32_encode_info, @object
GHC.IO.Encoding.UTF32.$wutf32_encode_info:
	.quad	GHC.IO.Encoding.UTF32.$wutf32_encode_entry
	.quad	0
	.quad	14
	.quad	38654705664
	.quad	0
	.quad	14600
	.quad	GHC.IO.Encoding.UTF32.$wutf32_encode_slow


==================== Asm code ====================
2018-03-16 16:03:47.940979652 UTC

.section .text
.align 8
_c8DYV:
_c8DYV:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 40(%rbp),%rsi
	movq 48(%rbp),%rdi
	movq 56(%rbp),%r8
	movq 64(%rbp),%r9
	movq %rbx,%r10
	andl $7,%r10d
	cmpq $1,%r10
	je _c8DYZ
_c8DZ0:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8DZX
_c8DZW:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	movq %r9,(%r12)
	leaq -47(%r12),%rsi
	movq %rax,%r14
	addq $72,%rbp
	jmp GHC.IO.Encoding.UTF32.mkUTF1_entry
_c8DZX:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8DYZ:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c8DZ9
_c8DZ8:
	movq %rdi,%rbx
	subq %r9,%rbx
	cmpq $4,%rbx
	jge _c8DZN
_c8DZR:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-80(%r12)
	movq %rdx,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rcx,-56(%r12)
	movq %rdi,-48(%r12)
	movq %r8,-40(%r12)
	movq %r9,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-24(%r12)
	movq GHC.IO.Encoding.Types.OutputUnderflow_closure@gotpcrel(%rip),%rbx
	addq $2,%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -79(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8DZN:
	movq 8(%rbp),%rbx
	movq GHC.Types.True_closure@gotpcrel(%rip),%r10
	addq $2,%r10
	movq %r10,8(%rbx)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %rbx,%rsi
	movq %rdi,%rbx
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %r10,%r14
	movq %rcx,72(%rsp)
	movq %rdx,80(%rsp)
	movq %r11,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq 96(%rsp),%rcx
	movq 64(%rsp),%rax
	movb $0,(%rax,%rcx,1)
	leaq 1(%rcx),%rdx
	movb $0,(%rax,%rdx,1)
	leaq 2(%rcx),%rdx
	movb $-2,(%rax,%rdx,1)
	leaq 3(%rcx),%rdx
	movb $-1,(%rax,%rdx,1)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-80(%r12)
	movq 72(%rsp),%rdx
	movq %rdx,-72(%r12)
	movq 80(%rsp),%rdx
	movq %rdx,-64(%r12)
	movq %rax,-56(%r12)
	movq %rbx,-48(%r12)
	movq 88(%rsp),%rax
	movq %rax,-40(%r12)
	leaq 4(%rcx),%rax
	movq %rax,-32(%r12)
	leaq -79(%r12),%rax
	addq $-32,%r12
	movq %rax,%rsi
	addq $72,%rbp
	jmp GHC.IO.Encoding.UTF32.mkUTF1_entry
_c8DZ9:
	movq $88,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8DYV, .-_c8DYV


==================== Asm code ====================
2018-03-16 16:03:47.942172979 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8DYV_info:
	.quad	_c8DYV
	.quad	14600
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.945816471 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32_encode1_closure
.type GHC.IO.Encoding.UTF32.utf32_encode1_closure, @object
GHC.IO.Encoding.UTF32.utf32_encode1_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32_encode1_info


==================== Asm code ====================
2018-03-16 16:03:47.946598372 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32_encode1_entry
.type GHC.IO.Encoding.UTF32.utf32_encode1_entry, @object
GHC.IO.Encoding.UTF32.utf32_encode1_entry:
_c8E0B:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8E0F
_c8E0G:
	leaq block_c8E0y_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8E0y
_c8E0z:
	movq (%rbx),%rax
	jmp *(%rax)
_c8E0F:
	leaq GHC.IO.Encoding.UTF32.utf32_encode1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.utf32_encode1_entry, .-GHC.IO.Encoding.UTF32.utf32_encode1_entry


==================== Asm code ====================
2018-03-16 16:03:47.947279859 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32_encode1_info
.type GHC.IO.Encoding.UTF32.utf32_encode1_info, @object
GHC.IO.Encoding.UTF32.utf32_encode1_info:
	.quad	GHC.IO.Encoding.UTF32.utf32_encode1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:03:47.948000794 UTC

.section .text
.align 8
_c8E0y:
_c8E0y:
	leaq block_c8E0E_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8E0E
_c8E0I:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8E0y, .-_c8E0y


==================== Asm code ====================
2018-03-16 16:03:47.948603457 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8E0y_info:
	.quad	_c8E0y
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.949301588 UTC

.section .text
.align 8
_c8E0E:
_c8E0E:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,(%rbp)
	movq 39(%rbx),%rax
	movq %rax,8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,16(%rbp)
	jmp GHC.IO.Encoding.UTF32.$wutf32_encode_entry
	.size _c8E0E, .-_c8E0E


==================== Asm code ====================
2018-03-16 16:03:47.94994214 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8E0E_info:
	.quad	_c8E0E
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.952093328 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32_encode_closure
.type GHC.IO.Encoding.UTF32.utf32_encode_closure, @object
GHC.IO.Encoding.UTF32.utf32_encode_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32_encode_info


==================== Asm code ====================
2018-03-16 16:03:47.952730974 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32_encode_entry
.type GHC.IO.Encoding.UTF32.utf32_encode_entry, @object
GHC.IO.Encoding.UTF32.utf32_encode_entry:
_c8E1b:
	jmp GHC.IO.Encoding.UTF32.utf32_encode1_entry
	.size GHC.IO.Encoding.UTF32.utf32_encode_entry, .-GHC.IO.Encoding.UTF32.utf32_encode_entry


==================== Asm code ====================
2018-03-16 16:03:47.953295621 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32_encode_info
.type GHC.IO.Encoding.UTF32.utf32_encode_info, @object
GHC.IO.Encoding.UTF32.utf32_encode_info:
	.quad	GHC.IO.Encoding.UTF32.utf32_encode_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:03:47.955013027 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF8_bytes
.type GHC.IO.Encoding.UTF32.mkUTF8_bytes, @object
GHC.IO.Encoding.UTF32.mkUTF8_bytes:
	.asciz "UTF-32"


==================== Asm code ====================
2018-03-16 16:03:47.957566016 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF7_closure
.type GHC.IO.Encoding.UTF32.mkUTF7_closure, @object
GHC.IO.Encoding.UTF32.mkUTF7_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF7_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:47.958407776 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF7_entry
.type GHC.IO.Encoding.UTF32.mkUTF7_entry, @object
GHC.IO.Encoding.UTF32.mkUTF7_entry:
_c8E1p:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8E1q
_c8E1r:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8E1o
_c8E1n:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Encoding.UTF32.mkUTF8_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8E1q:
	jmp *-16(%r13)
_c8E1o:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF32.mkUTF7_entry, .-GHC.IO.Encoding.UTF32.mkUTF7_entry


==================== Asm code ====================
2018-03-16 16:03:47.959109331 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF7_info
.type GHC.IO.Encoding.UTF32.mkUTF7_info, @object
GHC.IO.Encoding.UTF32.mkUTF7_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF7_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:47.969960609 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32_closure
.type GHC.IO.Encoding.UTF32.mkUTF32_closure, @object
GHC.IO.Encoding.UTF32.mkUTF32_closure:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:47.971454495 UTC

.section .text
.align 8
sat_s8DeT_entry:
_c8E1T:
	movq 6(%rbx),%rax
	movq %r14,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8DeT_entry, .-sat_s8DeT_entry


==================== Asm code ====================
2018-03-16 16:03:47.972096564 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8DeT_info:
	.quad	sat_s8DeT_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:47.972719406 UTC

.section .text
.align 8
sat_s8DeP_entry:
_c8E22:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8DeP_entry, .-sat_s8DeP_entry


==================== Asm code ====================
2018-03-16 16:03:47.97334303 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8DeP_info:
	.quad	sat_s8DeP_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:03:47.97401821 UTC

.section .text
.align 8
sat_s8DeN_entry:
_c8E2a:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverEncode1_entry@gotpcrel(%rip)
	.size sat_s8DeN_entry, .-sat_s8DeN_entry


==================== Asm code ====================
2018-03-16 16:03:47.974634107 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8DeN_info:
	.quad	sat_s8DeN_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8DJN_srt


==================== Asm code ====================
2018-03-16 16:03:47.975444054 UTC

.section .text
.align 8
sat_s8DeM_entry:
_c8E2l:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8E2m
_c8E2n:
	leaq block_c8E2i_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 5(%rbx),%rax
	movq %rsi,%rbx
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8E2i
_c8E2j:
	movq (%rbx),%rax
	jmp *(%rax)
_c8E2m:
	jmp *-8(%r13)
	.size sat_s8DeM_entry, .-sat_s8DeM_entry


==================== Asm code ====================
2018-03-16 16:03:47.976106225 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8DeM_info:
	.quad	sat_s8DeM_entry
	.quad	1
	.quad	9
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:47.976812723 UTC

.section .text
.align 8
_c8E2i:
_c8E2i:
	movq 15(%rbx),%r9
	movq 7(%rbx),%r8
	movq 23(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,(%rbp)
	movq 39(%rbx),%rax
	movq %rax,8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,16(%rbp)
	jmp GHC.IO.Encoding.UTF32.$wutf32_encode_entry
	.size _c8E2i, .-_c8E2i


==================== Asm code ====================
2018-03-16 16:03:47.977543626 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8E2i_info:
	.quad	_c8E2i
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.978320725 UTC

.section .text
.align 8
sat_s8DeV_entry:
_c8E2t:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8E2u
_c8E2v:
	leaq block_c8E1J_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq GHC.Types.False_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
_c8E2u:
	jmp *-8(%r13)
	.size sat_s8DeV_entry, .-sat_s8DeV_entry


==================== Asm code ====================
2018-03-16 16:03:47.97898842 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8DeV_info:
	.quad	sat_s8DeV_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8DJN_srt


==================== Asm code ====================
2018-03-16 16:03:47.979838749 UTC

.section .text
.align 8
_c8E1J:
_c8E1J:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c8E2y
_c8E2x:
	leaq sat_s8DeT_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %rbx,-96(%r12)
	leaq sat_s8DeP_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %rbx,-80(%r12)
	leaq sat_s8DeN_info(%rip),%rax
	movq %rax,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	leaq sat_s8DeM_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %rbx,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq -53(%r12),%rax
	movq %rax,-32(%r12)
	leaq -69(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF32.mkUTF2_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq -87(%r12),%rax
	movq %rax,-8(%r12)
	leaq -102(%r12),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8E2y:
	movq $112,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8E1J, .-_c8E1J


==================== Asm code ====================
2018-03-16 16:03:47.980642733 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8E1J_info:
	.quad	_c8E1J
	.quad	1
	.quad	4294967326
	.quad	S8DJN_srt


==================== Asm code ====================
2018-03-16 16:03:47.981761109 UTC

.section .text
.align 8
sat_s8Dev_entry:
_c8E2O:
	movq 6(%rbx),%rax
	movq %r14,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Dev_entry, .-sat_s8Dev_entry


==================== Asm code ====================
2018-03-16 16:03:47.982442709 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Dev_info:
	.quad	sat_s8Dev_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:47.983047009 UTC

.section .text
.align 8
sat_s8Der_entry:
_c8E2X:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s8Der_entry, .-sat_s8Der_entry


==================== Asm code ====================
2018-03-16 16:03:47.983597549 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Der_info:
	.quad	sat_s8Der_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:03:47.984257745 UTC

.section .text
.align 8
sat_s8Dep_entry:
_c8E35:
	movq %rsi,%rdi
	movq %r14,%rsi
	movq 5(%rbx),%r14
	jmp *GHC.IO.Encoding.Failure.recoverDecode1_entry@gotpcrel(%rip)
	.size sat_s8Dep_entry, .-sat_s8Dep_entry


==================== Asm code ====================
2018-03-16 16:03:47.984830923 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Dep_info:
	.quad	sat_s8Dep_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S8DJN_srt+8


==================== Asm code ====================
2018-03-16 16:03:47.985637477 UTC

.section .text
.align 8
sat_s8Deo_entry:
_c8E3g:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8E3h
_c8E3i:
	leaq block_c8E3d_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 5(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8E3d
_c8E3e:
	movq (%rbx),%rax
	jmp *(%rax)
_c8E3h:
	jmp *-8(%r13)
	.size sat_s8Deo_entry, .-sat_s8Deo_entry


==================== Asm code ====================
2018-03-16 16:03:47.986305189 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Deo_info:
	.quad	sat_s8Deo_entry
	.quad	1
	.quad	9
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:47.986953528 UTC

.section .text
.align 8
_c8E3d:
_c8E3d:
	movq 31(%rbx),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.IO.Encoding.UTF32.$wutf32_decode_entry
	.size _c8E3d, .-_c8E3d


==================== Asm code ====================
2018-03-16 16:03:47.987554278 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8E3d_info:
	.quad	_c8E3d
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:47.988230125 UTC

.section .text
.align 8
sat_s8Dex_entry:
_c8E3o:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8E3p
_c8E3q:
	leaq block_c8E2E_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
_c8E3p:
	jmp *-8(%r13)
	.size sat_s8Dex_entry, .-sat_s8Dex_entry


==================== Asm code ====================
2018-03-16 16:03:47.988852971 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Dex_info:
	.quad	sat_s8Dex_entry
	.quad	1
	.quad	4294967305
	.quad	4294967299
	.quad	S8DJN_srt+8


==================== Asm code ====================
2018-03-16 16:03:47.989712049 UTC

.section .text
.align 8
_c8E2E:
_c8E2E:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c8E3t
_c8E3s:
	leaq sat_s8Dev_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %rbx,-96(%r12)
	leaq sat_s8Der_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %rbx,-80(%r12)
	leaq sat_s8Dep_info(%rip),%rax
	movq %rax,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	leaq sat_s8Deo_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %rbx,-48(%r12)
	movq GHC.IO.Encoding.Types.BufferCodec_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq -53(%r12),%rax
	movq %rax,-32(%r12)
	leaq -69(%r12),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF32.mkUTF2_closure+1(%rip),%rax
	movq %rax,-16(%r12)
	leaq -87(%r12),%rax
	movq %rax,-8(%r12)
	leaq -102(%r12),%rax
	movq %rax,(%r12)
	leaq -39(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8E3t:
	movq $112,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8E2E, .-_c8E2E


==================== Asm code ====================
2018-03-16 16:03:47.99048312 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8E2E_info:
	.quad	_c8E2E
	.quad	1
	.quad	4294967326
	.quad	S8DJN_srt+8


==================== Asm code ====================
2018-03-16 16:03:47.991238948 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.mkUTF32_entry
.type GHC.IO.Encoding.UTF32.mkUTF32_entry, @object
GHC.IO.Encoding.UTF32.mkUTF32_entry:
_c8E3v:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c8E3z
_c8E3y:
	leaq sat_s8DeV_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	leaq sat_s8Dex_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-32(%r12)
	movq GHC.IO.Encoding.Types.TextEncoding_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq GHC.IO.Encoding.UTF32.mkUTF7_closure(%rip),%rax
	movq %rax,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8E3z:
	movq $64,904(%r13)
	leaq GHC.IO.Encoding.UTF32.mkUTF32_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Encoding.UTF32.mkUTF32_entry, .-GHC.IO.Encoding.UTF32.mkUTF32_entry


==================== Asm code ====================
2018-03-16 16:03:47.99194886 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.mkUTF32_info
.type GHC.IO.Encoding.UTF32.mkUTF32_info, @object
GHC.IO.Encoding.UTF32.mkUTF32_info:
	.quad	GHC.IO.Encoding.UTF32.mkUTF32_entry
	.quad	0
	.quad	211119117434894
	.quad	4294967301
	.quad	S8DJN_srt


==================== Asm code ====================
2018-03-16 16:03:47.994724269 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32_closure
.type GHC.IO.Encoding.UTF32.utf32_closure, @object
GHC.IO.Encoding.UTF32.utf32_closure:
	.quad	GHC.IO.Encoding.UTF32.utf32_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:47.995583008 UTC

.section .text
.align 8
.globl GHC.IO.Encoding.UTF32.utf32_entry
.type GHC.IO.Encoding.UTF32.utf32_entry, @object
GHC.IO.Encoding.UTF32.utf32_entry:
_c8E5m:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8E5n
_c8E5o:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8E5l
_c8E5k:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq GHC.IO.Encoding.Failure.ErrorOnCodingFailure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $-16,%rbp
	jmp GHC.IO.Encoding.UTF32.mkUTF32_entry
_c8E5n:
	jmp *-16(%r13)
_c8E5l:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Encoding.UTF32.utf32_entry, .-GHC.IO.Encoding.UTF32.utf32_entry


==================== Asm code ====================
2018-03-16 16:03:47.996281288 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Encoding.UTF32.utf32_info
.type GHC.IO.Encoding.UTF32.utf32_info, @object
GHC.IO.Encoding.UTF32.utf32_info:
	.quad	GHC.IO.Encoding.UTF32.utf32_entry
	.quad	0
	.quad	4294967317
	.quad	S8DJN_srt+112


==================== Asm code ====================
2018-03-16 16:03:47.998105679 UTC

.section .data.rel.ro
.align 8
.align 1
S8DJN_srt:
	.quad	GHC.IO.Encoding.Failure.recoverEncode1_closure
	.quad	GHC.IO.Encoding.Failure.recoverDecode1_closure
	.quad	GHC.IO.Encoding.UTF32.mkUTF32le_closure
	.quad	GHC.IO.Encoding.UTF32.mkUTF32le2_closure
	.quad	GHC.IO.Encoding.Failure.recoverDecode2_closure
	.quad	lvl_r8AWo_closure
	.quad	lvl1_r8AWp_closure
	.quad	GHC.IO.Encoding.Failure.recoverEncode2_closure
	.quad	GHC.IO.Encoding.UTF32.utf32be2_closure
	.quad	lvl2_r8AWq_closure
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be_closure
	.quad	GHC.IO.Encoding.UTF32.mkUTF32be2_closure
	.quad	lvl3_r8AWr_closure
	.quad	lvl4_r8AWs_closure
	.quad	GHC.IO.Encoding.UTF32.mkUTF32_closure
	.quad	GHC.IO.Encoding.UTF32.mkUTF7_closure

