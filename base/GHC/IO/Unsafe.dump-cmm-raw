
==================== Raw Cmm ====================
2018-03-16 15:55:01.422982411 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:55:01.424643444 UTC

[section ""data" . GHC.IO.Unsafe.unsafeDupablePerformIO_closure" {
     GHC.IO.Unsafe.unsafeDupablePerformIO_closure:
         const GHC.IO.Unsafe.unsafeDupablePerformIO_info;
 },
 GHC.IO.Unsafe.unsafeDupablePerformIO_entry() //  [R2]
         { []
         }
     {offset
       cnA9: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cnAa; else goto cnAb;
       cnAa: // global
           R2 = R2;
           R1 = GHC.IO.Unsafe.unsafeDupablePerformIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnAb: // global
           I64[Sp - 8] = block_cnA7_info;
           R1 = R2;
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.IO.Unsafe.unsafeDupablePerformIO_info" {
     GHC.IO.Unsafe.unsafeDupablePerformIO_info:
         const GHC.IO.Unsafe.unsafeDupablePerformIO_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cnA7() //  [R1]
         { []
         }
     {offset
       cnA7: // global
           R1 = R1;
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cnA7_info" {
     block_cnA7_info:
         const _cnA7;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.43108771 UTC

[section ""data" . GHC.IO.Unsafe.unsafeDupableInterleaveIO1_closure" {
     GHC.IO.Unsafe.unsafeDupableInterleaveIO1_closure:
         const GHC.IO.Unsafe.unsafeDupableInterleaveIO1_info;
 },
 sat_snwP_entry() //  [R1]
         { []
         }
     {offset
       cnAv: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cnAw; else goto cnAx;
       cnAw: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cnAx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_cnAt_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_snwP_info" {
     sat_snwP_info:
         const sat_snwP_entry;
         const 1;
         const 16;
 },
 _cnAt() //  [R1]
         { []
         }
     {offset
       cnAt: // global
           R1 = R1;
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cnAt_info" {
     block_cnAt_info:
         const _cnAt;
         const 0;
         const 30;
 },
 GHC.IO.Unsafe.unsafeDupableInterleaveIO1_entry() //  [R2]
         { []
         }
     {offset
       cnAz: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cnAD; else goto cnAC;
       cnAD: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.IO.Unsafe.unsafeDupableInterleaveIO1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnAC: // global
           I64[Hp - 16] = sat_snwP_info;
           P64[Hp] = R2;
           R1 = Hp - 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.IO.Unsafe.unsafeDupableInterleaveIO1_info" {
     GHC.IO.Unsafe.unsafeDupableInterleaveIO1_info:
         const GHC.IO.Unsafe.unsafeDupableInterleaveIO1_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.437828482 UTC

[section ""data" . GHC.IO.Unsafe.unsafeDupableInterleaveIO_closure" {
     GHC.IO.Unsafe.unsafeDupableInterleaveIO_closure:
         const GHC.IO.Unsafe.unsafeDupableInterleaveIO_info;
 },
 GHC.IO.Unsafe.unsafeDupableInterleaveIO_entry() //  [R2]
         { []
         }
     {offset
       cnAU: // global
           R2 = R2;
           call GHC.IO.Unsafe.unsafeDupableInterleaveIO1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.IO.Unsafe.unsafeDupableInterleaveIO_info" {
     GHC.IO.Unsafe.unsafeDupableInterleaveIO_info:
         const GHC.IO.Unsafe.unsafeDupableInterleaveIO_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.441342152 UTC

[section ""data" . GHC.IO.Unsafe.noDuplicate1_closure" {
     GHC.IO.Unsafe.noDuplicate1_closure:
         const GHC.IO.Unsafe.noDuplicate1_info;
 },
 GHC.IO.Unsafe.noDuplicate1_entry() //  []
         { []
         }
     {offset
       cnB7: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cnB8; else goto cnB9;
       cnB8: // global
           R1 = GHC.IO.Unsafe.noDuplicate1_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       cnB9: // global
           I64[Sp - 8] = block_cnB5_info;
           Sp = Sp - 8;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.IO.Unsafe.noDuplicate1_info" {
     GHC.IO.Unsafe.noDuplicate1_info:
         const GHC.IO.Unsafe.noDuplicate1_entry;
         const 0;
         const 14;
         const 4294967299;
 },
 _cnB5() //  []
         { []
         }
     {offset
       cnB5: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cnB5_info" {
     block_cnB5_info:
         const _cnB5;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.44639397 UTC

[section ""data" . GHC.IO.Unsafe.noDuplicate_closure" {
     GHC.IO.Unsafe.noDuplicate_closure:
         const GHC.IO.Unsafe.noDuplicate_info;
 },
 GHC.IO.Unsafe.noDuplicate_entry() //  []
         { []
         }
     {offset
       cnBo: // global
           call GHC.IO.Unsafe.noDuplicate1_entry() args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.IO.Unsafe.noDuplicate_info" {
     GHC.IO.Unsafe.noDuplicate_info:
         const GHC.IO.Unsafe.noDuplicate_entry;
         const 0;
         const 14;
         const 4294967299;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.450390216 UTC

[section ""data" . unsafeInterleaveIO1_rnwE_closure" {
     unsafeInterleaveIO1_rnwE_closure:
         const unsafeInterleaveIO1_rnwE_info;
 },
 sat_snwW_entry() //  [R1]
         { []
         }
     {offset
       cnBG: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnBH; else goto cnBI;
       cnBH: // global
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       cnBI: // global
           I64[Sp - 16] = block_cnBE_info;
           P64[Sp - 8] = P64[R1 + 7];
           Sp = Sp - 16;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_snwW_info" {
     sat_snwW_info:
         const sat_snwW_entry;
         const 1;
         const 9;
         const 4294967299;
 },
 _cnBE() //  []
         { []
         }
     {offset
       cnBE: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_v_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cnBE_info" {
     block_cnBE_info:
         const _cnBE;
         const 1;
         const 30;
 },
 unsafeInterleaveIO1_rnwE_entry() //  [R2]
         { []
         }
     {offset
       cnBK: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cnBO; else goto cnBN;
       cnBO: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = unsafeInterleaveIO1_rnwE_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnBN: // global
           I64[Hp - 8] = sat_snwW_info;
           P64[Hp] = R2;
           R2 = Hp - 7;
           call GHC.IO.Unsafe.unsafeDupableInterleaveIO_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . unsafeInterleaveIO1_rnwE_info" {
     unsafeInterleaveIO1_rnwE_info:
         const unsafeInterleaveIO1_rnwE_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.45663596 UTC

[section ""data" . GHC.IO.Unsafe.unsafeInterleaveIO_closure" {
     GHC.IO.Unsafe.unsafeInterleaveIO_closure:
         const GHC.IO.Unsafe.unsafeInterleaveIO_info;
 },
 GHC.IO.Unsafe.unsafeInterleaveIO_entry() //  [R2]
         { []
         }
     {offset
       cnC5: // global
           R2 = R2;
           call unsafeInterleaveIO1_rnwE_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.IO.Unsafe.unsafeInterleaveIO_info" {
     GHC.IO.Unsafe.unsafeInterleaveIO_info:
         const GHC.IO.Unsafe.unsafeInterleaveIO_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.461315032 UTC

[section ""data" . GHC.IO.Unsafe.unsafePerformIO_closure" {
     GHC.IO.Unsafe.unsafePerformIO_closure:
         const GHC.IO.Unsafe.unsafePerformIO_info;
 },
 GHC.IO.Unsafe.unsafePerformIO_entry() //  [R2]
         { []
         }
     {offset
       cnCk: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnCl; else goto cnCm;
       cnCl: // global
           R2 = R2;
           R1 = GHC.IO.Unsafe.unsafePerformIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnCm: // global
           I64[Sp - 16] = block_cnCg_info;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.IO.Unsafe.unsafePerformIO_info" {
     GHC.IO.Unsafe.unsafePerformIO_info:
         const GHC.IO.Unsafe.unsafePerformIO_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cnCg() //  []
         { []
         }
     {offset
       cnCg: // global
           _snwX::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_cnCi_info;
           R1 = _snwX::P64;
           Sp = Sp + 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cnCg_info" {
     block_cnCg_info:
         const _cnCg;
         const 1;
         const 30;
 },
 _cnCi() //  [R1]
         { []
         }
     {offset
       cnCi: // global
           R1 = R1;
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cnCi_info" {
     block_cnCi_info:
         const _cnCi;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.467004967 UTC

[section ""cstring" . GHC.IO.Unsafe.$trModule4_bytes" {
     GHC.IO.Unsafe.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.468605337 UTC

[section ""data" . GHC.IO.Unsafe.$trModule3_closure" {
     GHC.IO.Unsafe.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.IO.Unsafe.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.470226148 UTC

[section ""cstring" . GHC.IO.Unsafe.$trModule2_bytes" {
     GHC.IO.Unsafe.$trModule2_bytes:
         I8[] [71,72,67,46,73,79,46,85,110,115,97,102,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.47186043 UTC

[section ""data" . GHC.IO.Unsafe.$trModule1_closure" {
     GHC.IO.Unsafe.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.IO.Unsafe.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.473535385 UTC

[section ""data" . GHC.IO.Unsafe.$trModule_closure" {
     GHC.IO.Unsafe.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.IO.Unsafe.$trModule3_closure+1;
         const GHC.IO.Unsafe.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.475165116 UTC

[section ""relreadonly" . Snyx_srt" { Snyx_srt:
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.541951807 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:55:01.543711402 UTC

[section ""data" . GHC.IO.Unsafe.unsafeDupablePerformIO_closure" {
     GHC.IO.Unsafe.unsafeDupablePerformIO_closure:
         const GHC.IO.Unsafe.unsafeDupablePerformIO_info;
 },
 GHC.IO.Unsafe.unsafeDupablePerformIO_entry() //  [R2]
         { []
         }
     {offset
       cnD8: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cnD9; else goto cnDa;
       cnD9: // global
           R2 = R2;
           R1 = GHC.IO.Unsafe.unsafeDupablePerformIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnDa: // global
           I64[Sp - 8] = block_cnD6_info;
           R1 = R2;
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.IO.Unsafe.unsafeDupablePerformIO_info" {
     GHC.IO.Unsafe.unsafeDupablePerformIO_info:
         const GHC.IO.Unsafe.unsafeDupablePerformIO_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cnD6() //  [R1]
         { []
         }
     {offset
       cnD6: // global
           R1 = R1;
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cnD6_info" {
     block_cnD6_info:
         const _cnD6;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.549498902 UTC

[section ""data" . GHC.IO.Unsafe.unsafeDupableInterleaveIO1_closure" {
     GHC.IO.Unsafe.unsafeDupableInterleaveIO1_closure:
         const GHC.IO.Unsafe.unsafeDupableInterleaveIO1_info;
 },
 sat_snCP_entry() //  [R1]
         { []
         }
     {offset
       cnDv: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cnDw; else goto cnDx;
       cnDw: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cnDx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_cnDt_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_snCP_info" {
     sat_snCP_info:
         const sat_snCP_entry;
         const 1;
         const 16;
 },
 _cnDt() //  [R1]
         { []
         }
     {offset
       cnDt: // global
           R1 = R1;
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cnDt_info" {
     block_cnDt_info:
         const _cnDt;
         const 0;
         const 30;
 },
 GHC.IO.Unsafe.unsafeDupableInterleaveIO1_entry() //  [R2]
         { []
         }
     {offset
       cnDz: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cnDD; else goto cnDC;
       cnDD: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.IO.Unsafe.unsafeDupableInterleaveIO1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnDC: // global
           I64[Hp - 16] = sat_snCP_info;
           P64[Hp] = R2;
           R1 = Hp - 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.IO.Unsafe.unsafeDupableInterleaveIO1_info" {
     GHC.IO.Unsafe.unsafeDupableInterleaveIO1_info:
         const GHC.IO.Unsafe.unsafeDupableInterleaveIO1_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.556880019 UTC

[section ""data" . GHC.IO.Unsafe.unsafeDupableInterleaveIO_closure" {
     GHC.IO.Unsafe.unsafeDupableInterleaveIO_closure:
         const GHC.IO.Unsafe.unsafeDupableInterleaveIO_info;
 },
 GHC.IO.Unsafe.unsafeDupableInterleaveIO_entry() //  [R2]
         { []
         }
     {offset
       cnDX: // global
           R2 = R2;
           call GHC.IO.Unsafe.unsafeDupableInterleaveIO1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.IO.Unsafe.unsafeDupableInterleaveIO_info" {
     GHC.IO.Unsafe.unsafeDupableInterleaveIO_info:
         const GHC.IO.Unsafe.unsafeDupableInterleaveIO_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.560386815 UTC

[section ""data" . GHC.IO.Unsafe.noDuplicate1_closure" {
     GHC.IO.Unsafe.noDuplicate1_closure:
         const GHC.IO.Unsafe.noDuplicate1_info;
 },
 GHC.IO.Unsafe.noDuplicate1_entry() //  []
         { []
         }
     {offset
       cnEa: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cnEb; else goto cnEc;
       cnEb: // global
           R1 = GHC.IO.Unsafe.noDuplicate1_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       cnEc: // global
           I64[Sp - 8] = block_cnE8_info;
           Sp = Sp - 8;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.IO.Unsafe.noDuplicate1_info" {
     GHC.IO.Unsafe.noDuplicate1_info:
         const GHC.IO.Unsafe.noDuplicate1_entry;
         const 0;
         const 14;
         const 4294967299;
 },
 _cnE8() //  []
         { []
         }
     {offset
       cnE8: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cnE8_info" {
     block_cnE8_info:
         const _cnE8;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.566023268 UTC

[section ""data" . GHC.IO.Unsafe.noDuplicate_closure" {
     GHC.IO.Unsafe.noDuplicate_closure:
         const GHC.IO.Unsafe.noDuplicate_info;
 },
 GHC.IO.Unsafe.noDuplicate_entry() //  []
         { []
         }
     {offset
       cnEt: // global
           call GHC.IO.Unsafe.noDuplicate1_entry() args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.IO.Unsafe.noDuplicate_info" {
     GHC.IO.Unsafe.noDuplicate_info:
         const GHC.IO.Unsafe.noDuplicate_entry;
         const 0;
         const 14;
         const 4294967299;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.56994455 UTC

[section ""data" . unsafeInterleaveIO1_rnwE_closure" {
     unsafeInterleaveIO1_rnwE_closure:
         const unsafeInterleaveIO1_rnwE_info;
 },
 sat_snCW_entry() //  [R1]
         { []
         }
     {offset
       cnEL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnEM; else goto cnEN;
       cnEM: // global
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       cnEN: // global
           I64[Sp - 16] = block_cnEJ_info;
           P64[Sp - 8] = P64[R1 + 7];
           Sp = Sp - 16;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_snCW_info" {
     sat_snCW_info:
         const sat_snCW_entry;
         const 1;
         const 9;
         const 4294967299;
 },
 _cnEJ() //  []
         { []
         }
     {offset
       cnEJ: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_v_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cnEJ_info" {
     block_cnEJ_info:
         const _cnEJ;
         const 1;
         const 30;
 },
 unsafeInterleaveIO1_rnwE_entry() //  [R2]
         { []
         }
     {offset
       cnEP: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cnET; else goto cnES;
       cnET: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = unsafeInterleaveIO1_rnwE_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnES: // global
           I64[Hp - 8] = sat_snCW_info;
           P64[Hp] = R2;
           R2 = Hp - 7;
           call GHC.IO.Unsafe.unsafeDupableInterleaveIO_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . unsafeInterleaveIO1_rnwE_info" {
     unsafeInterleaveIO1_rnwE_info:
         const unsafeInterleaveIO1_rnwE_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.576652188 UTC

[section ""data" . GHC.IO.Unsafe.unsafeInterleaveIO_closure" {
     GHC.IO.Unsafe.unsafeInterleaveIO_closure:
         const GHC.IO.Unsafe.unsafeInterleaveIO_info;
 },
 GHC.IO.Unsafe.unsafeInterleaveIO_entry() //  [R2]
         { []
         }
     {offset
       cnFc: // global
           R2 = R2;
           call unsafeInterleaveIO1_rnwE_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.IO.Unsafe.unsafeInterleaveIO_info" {
     GHC.IO.Unsafe.unsafeInterleaveIO_info:
         const GHC.IO.Unsafe.unsafeInterleaveIO_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.580479013 UTC

[section ""data" . GHC.IO.Unsafe.unsafePerformIO_closure" {
     GHC.IO.Unsafe.unsafePerformIO_closure:
         const GHC.IO.Unsafe.unsafePerformIO_info;
 },
 GHC.IO.Unsafe.unsafePerformIO_entry() //  [R2]
         { []
         }
     {offset
       cnFr: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnFs; else goto cnFt;
       cnFs: // global
           R2 = R2;
           R1 = GHC.IO.Unsafe.unsafePerformIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnFt: // global
           I64[Sp - 16] = block_cnFn_info;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.IO.Unsafe.unsafePerformIO_info" {
     GHC.IO.Unsafe.unsafePerformIO_info:
         const GHC.IO.Unsafe.unsafePerformIO_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cnFn() //  []
         { []
         }
     {offset
       cnFn: // global
           _snCX::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_cnFp_info;
           R1 = _snCX::P64;
           Sp = Sp + 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cnFn_info" {
     block_cnFn_info:
         const _cnFn;
         const 1;
         const 30;
 },
 _cnFp() //  [R1]
         { []
         }
     {offset
       cnFp: // global
           R1 = R1;
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cnFp_info" {
     block_cnFp_info:
         const _cnFp;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.586668531 UTC

[section ""cstring" . GHC.IO.Unsafe.$trModule4_bytes" {
     GHC.IO.Unsafe.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.588379851 UTC

[section ""data" . GHC.IO.Unsafe.$trModule3_closure" {
     GHC.IO.Unsafe.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.IO.Unsafe.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.590071668 UTC

[section ""cstring" . GHC.IO.Unsafe.$trModule2_bytes" {
     GHC.IO.Unsafe.$trModule2_bytes:
         I8[] [71,72,67,46,73,79,46,85,110,115,97,102,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.591783953 UTC

[section ""data" . GHC.IO.Unsafe.$trModule1_closure" {
     GHC.IO.Unsafe.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.IO.Unsafe.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.593823997 UTC

[section ""data" . GHC.IO.Unsafe.$trModule_closure" {
     GHC.IO.Unsafe.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.IO.Unsafe.$trModule3_closure+1;
         const GHC.IO.Unsafe.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:01.595980265 UTC

[section ""relreadonly" . SnFO_srt" { SnFO_srt:
 }]

