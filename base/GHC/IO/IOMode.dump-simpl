
==================== Tidy Core ====================
2018-03-16 15:59:38.719772414 UTC

Result size of Tidy Core
  = {terms: 2,578, types: 1,025, coercions: 78, joins: 8/44}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode21 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.IO.IOMode.$fReadIOMode21 = "ReadMode"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode20 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.IOMode.$fReadIOMode20
  = unpackCString# GHC.IO.IOMode.$fReadIOMode21

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode17 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.IO.IOMode.$fReadIOMode17 = "WriteMode"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode16 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.IOMode.$fReadIOMode16
  = unpackCString# GHC.IO.IOMode.$fReadIOMode17

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode13 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.IO.IOMode.$fReadIOMode13 = "AppendMode"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode12 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.IOMode.$fReadIOMode12
  = unpackCString# GHC.IO.IOMode.$fReadIOMode13

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode9 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.IO.IOMode.$fReadIOMode9 = "ReadWriteMode"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode8 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.IOMode.$fReadIOMode8
  = unpackCString# GHC.IO.IOMode.$fReadIOMode9

-- RHS size: {terms: 20, types: 7, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: IOMode -> String -> String
[GblId,
 Arity=2,
 Str=<S,1*U><L,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [140 0] 160 0}]
GHC.IO.IOMode.$w$cshowsPrec
  = \ (w_s4KDE :: IOMode) (w1_s4KDF :: String) ->
      case w_s4KDE of {
        ReadMode -> ++ @ Char GHC.IO.IOMode.$fReadIOMode20 w1_s4KDF;
        WriteMode -> ++ @ Char GHC.IO.IOMode.$fReadIOMode16 w1_s4KDF;
        AppendMode -> ++ @ Char GHC.IO.IOMode.$fReadIOMode12 w1_s4KDF;
        ReadWriteMode -> ++ @ Char GHC.IO.IOMode.$fReadIOMode8 w1_s4KDF
      }

-- RHS size: {terms: 6, types: 3, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fShowIOMode_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: Int -> IOMode -> ShowS
[GblId,
 Arity=3,
 Str=<L,A><S,1*U><L,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=True)
         Tmpl= \ _ [Occ=Dead]
                 (w1_s4KDE [Occ=Once] :: IOMode)
                 (w2_s4KDF [Occ=Once] :: String) ->
                 GHC.IO.IOMode.$w$cshowsPrec w1_s4KDE w2_s4KDF}]
GHC.IO.IOMode.$fShowIOMode_$cshowsPrec
  = \ _ [Occ=Dead] (w1_s4KDE :: IOMode) (w2_s4KDF :: String) ->
      GHC.IO.IOMode.$w$cshowsPrec w1_s4KDE w2_s4KDF

-- RHS size: {terms: 11, types: 2, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fShowIOMode_$cshow :: IOMode -> String
[GblId,
 Arity=1,
 Str=<S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (x_i1Jj2 [Occ=Once!] :: IOMode) ->
                 case x_i1Jj2 of {
                   ReadMode -> GHC.IO.IOMode.$fReadIOMode20;
                   WriteMode -> GHC.IO.IOMode.$fReadIOMode16;
                   AppendMode -> GHC.IO.IOMode.$fReadIOMode12;
                   ReadWriteMode -> GHC.IO.IOMode.$fReadIOMode8
                 }}]
GHC.IO.IOMode.$fShowIOMode_$cshow
  = \ (x_i1Jj2 :: IOMode) ->
      case x_i1Jj2 of {
        ReadMode -> GHC.IO.IOMode.$fReadIOMode20;
        WriteMode -> GHC.IO.IOMode.$fReadIOMode16;
        AppendMode -> GHC.IO.IOMode.$fReadIOMode12;
        ReadWriteMode -> GHC.IO.IOMode.$fReadIOMode8
      }

-- RHS size: {terms: 6, types: 4, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fShowIOMode_$cshowList :: [IOMode] -> ShowS
[GblId,
 Arity=2,
 Str=<S,1*U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ls_i1Mix [Occ=Once] :: [IOMode])
                 (s_i1Miy [Occ=Once] :: String) ->
                 showList__ @ IOMode GHC.IO.IOMode.$w$cshowsPrec ls_i1Mix s_i1Miy}]
GHC.IO.IOMode.$fShowIOMode_$cshowList
  = \ (ls_i1Mix :: [IOMode]) (s_i1Miy :: String) ->
      showList__ @ IOMode GHC.IO.IOMode.$w$cshowsPrec ls_i1Mix s_i1Miy

-- RHS size: {terms: 4, types: 1, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fShowIOMode [InlPrag=NOUSERINLINE CONLIKE]
  :: Show IOMode
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ ->
       GHC.Show.C:Show TYPE: IOMode
                       GHC.IO.IOMode.$fShowIOMode_$cshowsPrec
                       GHC.IO.IOMode.$fShowIOMode_$cshow
                       GHC.IO.IOMode.$fShowIOMode_$cshowList]
GHC.IO.IOMode.$fShowIOMode
  = GHC.Show.C:Show
      @ IOMode
      GHC.IO.IOMode.$fShowIOMode_$cshowsPrec
      GHC.IO.IOMode.$fShowIOMode_$cshow
      GHC.IO.IOMode.$fShowIOMode_$cshowList

-- RHS size: {terms: 5, types: 6, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode19
  :: Text.ParserCombinators.ReadPrec.Prec
     -> forall b.
        (IOMode -> Text.ParserCombinators.ReadP.P b)
        -> Text.ParserCombinators.ReadP.P b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,A><C(S),1*C1(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)
         Tmpl= \ _ [Occ=Dead]
                 (@ b_a3nJT)
                 (k_a3ngw [Occ=Once!]
                    :: IOMode -> Text.ParserCombinators.ReadP.P b_a3nJT) ->
                 k_a3ngw GHC.IO.IOMode.ReadMode}]
GHC.IO.IOMode.$fReadIOMode19
  = \ _ [Occ=Dead]
      (@ b_a3nJT)
      (k_a3ngw :: IOMode -> Text.ParserCombinators.ReadP.P b_a3nJT) ->
      k_a3ngw GHC.IO.IOMode.ReadMode

-- RHS size: {terms: 3, types: 4, coercions: 9, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode18
  :: ([Char], Text.ParserCombinators.ReadPrec.ReadPrec IOMode)
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.IO.IOMode.$fReadIOMode18
  = (GHC.IO.IOMode.$fReadIOMode20,
     GHC.IO.IOMode.$fReadIOMode19
     `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
              ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                            <IOMode>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                    <IOMode>_R)
             :: (Text.ParserCombinators.ReadPrec.Prec
                 -> forall b.
                    (IOMode -> Text.ParserCombinators.ReadP.P b)
                    -> Text.ParserCombinators.ReadP.P b :: *)
                ~R# (Text.ParserCombinators.ReadPrec.ReadPrec IOMode :: *)))

-- RHS size: {terms: 5, types: 6, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode15
  :: Text.ParserCombinators.ReadPrec.Prec
     -> forall b.
        (IOMode -> Text.ParserCombinators.ReadP.P b)
        -> Text.ParserCombinators.ReadP.P b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,A><C(S),1*C1(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)
         Tmpl= \ _ [Occ=Dead]
                 (@ b_a3nJT)
                 (k_a3ngw [Occ=Once!]
                    :: IOMode -> Text.ParserCombinators.ReadP.P b_a3nJT) ->
                 k_a3ngw GHC.IO.IOMode.WriteMode}]
GHC.IO.IOMode.$fReadIOMode15
  = \ _ [Occ=Dead]
      (@ b_a3nJT)
      (k_a3ngw :: IOMode -> Text.ParserCombinators.ReadP.P b_a3nJT) ->
      k_a3ngw GHC.IO.IOMode.WriteMode

-- RHS size: {terms: 3, types: 4, coercions: 9, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode14
  :: ([Char], Text.ParserCombinators.ReadPrec.ReadPrec IOMode)
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.IO.IOMode.$fReadIOMode14
  = (GHC.IO.IOMode.$fReadIOMode16,
     GHC.IO.IOMode.$fReadIOMode15
     `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
              ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                            <IOMode>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                    <IOMode>_R)
             :: (Text.ParserCombinators.ReadPrec.Prec
                 -> forall b.
                    (IOMode -> Text.ParserCombinators.ReadP.P b)
                    -> Text.ParserCombinators.ReadP.P b :: *)
                ~R# (Text.ParserCombinators.ReadPrec.ReadPrec IOMode :: *)))

-- RHS size: {terms: 5, types: 6, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode11
  :: Text.ParserCombinators.ReadPrec.Prec
     -> forall b.
        (IOMode -> Text.ParserCombinators.ReadP.P b)
        -> Text.ParserCombinators.ReadP.P b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,A><C(S),1*C1(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)
         Tmpl= \ _ [Occ=Dead]
                 (@ b_a3nJT)
                 (k_a3ngw [Occ=Once!]
                    :: IOMode -> Text.ParserCombinators.ReadP.P b_a3nJT) ->
                 k_a3ngw GHC.IO.IOMode.AppendMode}]
GHC.IO.IOMode.$fReadIOMode11
  = \ _ [Occ=Dead]
      (@ b_a3nJT)
      (k_a3ngw :: IOMode -> Text.ParserCombinators.ReadP.P b_a3nJT) ->
      k_a3ngw GHC.IO.IOMode.AppendMode

-- RHS size: {terms: 3, types: 4, coercions: 9, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode10
  :: ([Char], Text.ParserCombinators.ReadPrec.ReadPrec IOMode)
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.IO.IOMode.$fReadIOMode10
  = (GHC.IO.IOMode.$fReadIOMode12,
     GHC.IO.IOMode.$fReadIOMode11
     `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
              ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                            <IOMode>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                    <IOMode>_R)
             :: (Text.ParserCombinators.ReadPrec.Prec
                 -> forall b.
                    (IOMode -> Text.ParserCombinators.ReadP.P b)
                    -> Text.ParserCombinators.ReadP.P b :: *)
                ~R# (Text.ParserCombinators.ReadPrec.ReadPrec IOMode :: *)))

-- RHS size: {terms: 5, types: 6, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode7
  :: Text.ParserCombinators.ReadPrec.Prec
     -> forall b.
        (IOMode -> Text.ParserCombinators.ReadP.P b)
        -> Text.ParserCombinators.ReadP.P b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,A><C(S),1*C1(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)
         Tmpl= \ _ [Occ=Dead]
                 (@ b_a3nJT)
                 (k_a3ngw [Occ=Once!]
                    :: IOMode -> Text.ParserCombinators.ReadP.P b_a3nJT) ->
                 k_a3ngw GHC.IO.IOMode.ReadWriteMode}]
GHC.IO.IOMode.$fReadIOMode7
  = \ _ [Occ=Dead]
      (@ b_a3nJT)
      (k_a3ngw :: IOMode -> Text.ParserCombinators.ReadP.P b_a3nJT) ->
      k_a3ngw GHC.IO.IOMode.ReadWriteMode

-- RHS size: {terms: 3, types: 4, coercions: 9, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode6
  :: ([Char], Text.ParserCombinators.ReadPrec.ReadPrec IOMode)
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.IO.IOMode.$fReadIOMode6
  = (GHC.IO.IOMode.$fReadIOMode8,
     GHC.IO.IOMode.$fReadIOMode7
     `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
              ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                            <IOMode>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                    <IOMode>_R)
             :: (Text.ParserCombinators.ReadPrec.Prec
                 -> forall b.
                    (IOMode -> Text.ParserCombinators.ReadP.P b)
                    -> Text.ParserCombinators.ReadP.P b :: *)
                ~R# (Text.ParserCombinators.ReadPrec.ReadPrec IOMode :: *)))

-- RHS size: {terms: 3, types: 8, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode5
  :: [(String, Text.ParserCombinators.ReadPrec.ReadPrec IOMode)]
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.IO.IOMode.$fReadIOMode5
  = GHC.Types.:
      @ (String, Text.ParserCombinators.ReadPrec.ReadPrec IOMode)
      GHC.IO.IOMode.$fReadIOMode6
      (GHC.Types.[]
         @ (String, Text.ParserCombinators.ReadPrec.ReadPrec IOMode))

-- RHS size: {terms: 3, types: 4, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode4
  :: [(String, Text.ParserCombinators.ReadPrec.ReadPrec IOMode)]
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.IO.IOMode.$fReadIOMode4
  = GHC.Types.:
      @ (String, Text.ParserCombinators.ReadPrec.ReadPrec IOMode)
      GHC.IO.IOMode.$fReadIOMode10
      GHC.IO.IOMode.$fReadIOMode5

-- RHS size: {terms: 3, types: 4, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode3
  :: [(String, Text.ParserCombinators.ReadPrec.ReadPrec IOMode)]
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.IO.IOMode.$fReadIOMode3
  = GHC.Types.:
      @ (String, Text.ParserCombinators.ReadPrec.ReadPrec IOMode)
      GHC.IO.IOMode.$fReadIOMode14
      GHC.IO.IOMode.$fReadIOMode4

-- RHS size: {terms: 3, types: 4, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode_sps
  :: [(String, Text.ParserCombinators.ReadPrec.ReadPrec IOMode)]
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.IO.IOMode.$fReadIOMode_sps
  = GHC.Types.:
      @ (String, Text.ParserCombinators.ReadPrec.ReadPrec IOMode)
      GHC.IO.IOMode.$fReadIOMode18
      GHC.IO.IOMode.$fReadIOMode3

-- RHS size: {terms: 4, types: 2, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode2
  :: Text.ParserCombinators.ReadPrec.Prec
     -> Text.ParserCombinators.ReadP.ReadP IOMode
[GblId,
 Arity=1,
 Str=<L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (eta_B1 [Occ=Once]
                    :: Text.ParserCombinators.ReadPrec.Prec) ->
                 GHC.Read.choose2 @ IOMode GHC.IO.IOMode.$fReadIOMode_sps eta_B1}]
GHC.IO.IOMode.$fReadIOMode2
  = \ (eta_B1 :: Text.ParserCombinators.ReadPrec.Prec) ->
      GHC.Read.choose2 @ IOMode GHC.IO.IOMode.$fReadIOMode_sps eta_B1

-- RHS size: {terms: 2, types: 1, coercions: 3, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode1
  :: Text.ParserCombinators.ReadPrec.Prec
     -> forall b.
        (IOMode -> Text.ParserCombinators.ReadP.P b)
        -> Text.ParserCombinators.ReadP.P b
[GblId,
 Arity=2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 60}]
GHC.IO.IOMode.$fReadIOMode1
  = GHC.Read.list3
      @ IOMode
      (GHC.IO.IOMode.$fReadIOMode2
       `cast` (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                        <IOMode>_R)
               :: (Text.ParserCombinators.ReadPrec.Prec
                   -> Text.ParserCombinators.ReadP.ReadP IOMode :: *)
                  ~R# (Text.ParserCombinators.ReadPrec.ReadPrec IOMode :: *)))

-- RHS size: {terms: 6, types: 5, coercions: 3, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode_$creadsPrec :: Int -> ReadS IOMode
[GblId,
 Arity=1,
 Str=<L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (n_a3tmE [Occ=Once] :: Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ IOMode
                   (GHC.Read.list3
                      @ IOMode
                      (GHC.IO.IOMode.$fReadIOMode2
                       `cast` (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                        <IOMode>_R)
                               :: (Text.ParserCombinators.ReadPrec.Prec
                                   -> Text.ParserCombinators.ReadP.ReadP IOMode :: *)
                                  ~R# (Text.ParserCombinators.ReadPrec.ReadPrec IOMode :: *)))
                      n_a3tmE
                      @ IOMode
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure @ IOMode))}]
GHC.IO.IOMode.$fReadIOMode_$creadsPrec
  = \ (n_a3tmE :: Int) ->
      Text.ParserCombinators.ReadP.run
        @ IOMode
        (GHC.Read.list3
           @ IOMode
           (GHC.IO.IOMode.$fReadIOMode2
            `cast` (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <IOMode>_R)
                    :: (Text.ParserCombinators.ReadPrec.Prec
                        -> Text.ParserCombinators.ReadP.ReadP IOMode :: *)
                       ~R# (Text.ParserCombinators.ReadPrec.ReadPrec IOMode :: *)))
           n_a3tmE
           @ IOMode
           (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure @ IOMode))

-- RHS size: {terms: 2, types: 1, coercions: 9, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode_$creadListPrec
  :: Text.ParserCombinators.ReadPrec.ReadPrec [IOMode]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
GHC.IO.IOMode.$fReadIOMode_$creadListPrec
  = list
      @ IOMode
      (GHC.IO.IOMode.$fReadIOMode1
       `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                              <IOMode>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                      <IOMode>_R)
               :: (Text.ParserCombinators.ReadPrec.Prec
                   -> forall b.
                      (IOMode -> Text.ParserCombinators.ReadP.P b)
                      -> Text.ParserCombinators.ReadP.P b :: *)
                  ~R# (Text.ParserCombinators.ReadPrec.ReadPrec IOMode :: *)))

-- RHS size: {terms: 3, types: 4, coercions: 6, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode22
  :: Text.ParserCombinators.ReadP.P [IOMode]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
GHC.IO.IOMode.$fReadIOMode22
  = (((GHC.IO.IOMode.$fReadIOMode_$creadListPrec
       `cast` (Text.ParserCombinators.ReadPrec.N:ReadPrec[0] <[IOMode]>_R
               :: (Text.ParserCombinators.ReadPrec.ReadPrec [IOMode] :: *)
                  ~R# (Text.ParserCombinators.ReadPrec.Prec
                       -> Text.ParserCombinators.ReadP.ReadP [IOMode] :: *)))
        GHC.Read.$fRead()7)
     `cast` (Text.ParserCombinators.ReadP.N:ReadP[0] <[IOMode]>_R
             :: (Text.ParserCombinators.ReadP.ReadP [IOMode] :: *)
                ~R# (forall b.
                     ([IOMode] -> Text.ParserCombinators.ReadP.P b)
                     -> Text.ParserCombinators.ReadP.P b :: *)))
      @ [IOMode]
      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure @ [IOMode])

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode_$creadList :: ReadS [IOMode]
[GblId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 60}]
GHC.IO.IOMode.$fReadIOMode_$creadList
  = Text.ParserCombinators.ReadP.run
      @ [IOMode] GHC.IO.IOMode.$fReadIOMode22

-- RHS size: {terms: 5, types: 1, coercions: 9, joins: 0/0}
GHC.IO.IOMode.$fReadIOMode [InlPrag=NOUSERINLINE CONLIKE]
  :: Read IOMode
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ ->
       GHC.Read.C:Read TYPE: IOMode
                       GHC.IO.IOMode.$fReadIOMode_$creadsPrec
                       GHC.IO.IOMode.$fReadIOMode_$creadList
                       GHC.IO.IOMode.$fReadIOMode1
                       `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                                ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                              <IOMode>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                      <IOMode>_R)
                               :: (Text.ParserCombinators.ReadPrec.Prec
                                   -> forall b.
                                      (IOMode -> Text.ParserCombinators.ReadP.P b)
                                      -> Text.ParserCombinators.ReadP.P b :: *)
                                  ~R# (Text.ParserCombinators.ReadPrec.ReadPrec IOMode :: *))
                       GHC.IO.IOMode.$fReadIOMode_$creadListPrec]
GHC.IO.IOMode.$fReadIOMode
  = GHC.Read.C:Read
      @ IOMode
      GHC.IO.IOMode.$fReadIOMode_$creadsPrec
      GHC.IO.IOMode.$fReadIOMode_$creadList
      (GHC.IO.IOMode.$fReadIOMode1
       `cast` ((<Text.ParserCombinators.ReadPrec.Prec>_R
                ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                              <IOMode>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                      <IOMode>_R)
               :: (Text.ParserCombinators.ReadPrec.Prec
                   -> forall b.
                      (IOMode -> Text.ParserCombinators.ReadP.P b)
                      -> Text.ParserCombinators.ReadP.P b :: *)
                  ~R# (Text.ParserCombinators.ReadPrec.ReadPrec IOMode :: *)))
      GHC.IO.IOMode.$fReadIOMode_$creadListPrec

-- RHS size: {terms: 32, types: 7, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fEqIOMode_$c== :: IOMode -> IOMode -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [110 120] 120 80}]
GHC.IO.IOMode.$fEqIOMode_$c==
  = \ (ds_d4K8v :: IOMode) (ds1_d4K8w :: IOMode) ->
      case ds_d4K8v of {
        ReadMode ->
          case ds1_d4K8w of {
            __DEFAULT -> GHC.Types.False;
            ReadMode -> GHC.Types.True
          };
        WriteMode ->
          case ds1_d4K8w of {
            __DEFAULT -> GHC.Types.False;
            WriteMode -> GHC.Types.True
          };
        AppendMode ->
          case ds1_d4K8w of {
            __DEFAULT -> GHC.Types.False;
            AppendMode -> GHC.Types.True
          };
        ReadWriteMode ->
          case ds1_d4K8w of {
            __DEFAULT -> GHC.Types.False;
            ReadWriteMode -> GHC.Types.True
          }
      }

-- RHS size: {terms: 32, types: 7, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fEqIOMode_$c/= [InlPrag=INLINE (sat-args=2)]
  :: IOMode -> IOMode -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (x_a22b [Occ=Once!] :: IOMode)
                 (y_a22c [Occ=Once*!] :: IOMode) ->
                 case x_a22b of {
                   ReadMode ->
                     case y_a22c of {
                       __DEFAULT -> GHC.Types.True;
                       ReadMode -> GHC.Types.False
                     };
                   WriteMode ->
                     case y_a22c of {
                       __DEFAULT -> GHC.Types.True;
                       WriteMode -> GHC.Types.False
                     };
                   AppendMode ->
                     case y_a22c of {
                       __DEFAULT -> GHC.Types.True;
                       AppendMode -> GHC.Types.False
                     };
                   ReadWriteMode ->
                     case y_a22c of {
                       __DEFAULT -> GHC.Types.True;
                       ReadWriteMode -> GHC.Types.False
                     }
                 }}]
GHC.IO.IOMode.$fEqIOMode_$c/=
  = \ (eta_B2 :: IOMode) (eta1_X1N :: IOMode) ->
      case eta_B2 of {
        ReadMode ->
          case eta1_X1N of {
            __DEFAULT -> GHC.Types.True;
            ReadMode -> GHC.Types.False
          };
        WriteMode ->
          case eta1_X1N of {
            __DEFAULT -> GHC.Types.True;
            WriteMode -> GHC.Types.False
          };
        AppendMode ->
          case eta1_X1N of {
            __DEFAULT -> GHC.Types.True;
            AppendMode -> GHC.Types.False
          };
        ReadWriteMode ->
          case eta1_X1N of {
            __DEFAULT -> GHC.Types.True;
            ReadWriteMode -> GHC.Types.False
          }
      }

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fEqIOMode [InlPrag=NOUSERINLINE CONLIKE]
  :: Eq IOMode
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ ->
       GHC.Classes.C:Eq TYPE: IOMode
                        GHC.IO.IOMode.$fEqIOMode_$c==
                        GHC.IO.IOMode.$fEqIOMode_$c/=]
GHC.IO.IOMode.$fEqIOMode
  = GHC.Classes.C:Eq
      @ IOMode
      GHC.IO.IOMode.$fEqIOMode_$c==
      GHC.IO.IOMode.$fEqIOMode_$c/=

-- RHS size: {terms: 42, types: 7, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fOrdIOMode_$ccompare :: IOMode -> IOMode -> Ordering
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [140 170] 170 130}]
GHC.IO.IOMode.$fOrdIOMode_$ccompare
  = \ (a_a4K39 :: IOMode) (b_a4K3a :: IOMode) ->
      case a_a4K39 of {
        ReadMode ->
          case b_a4K3a of {
            ReadMode -> GHC.Types.EQ;
            WriteMode -> GHC.Types.LT;
            AppendMode -> GHC.Types.LT;
            ReadWriteMode -> GHC.Types.LT
          };
        WriteMode ->
          case b_a4K3a of {
            ReadMode -> GHC.Types.GT;
            WriteMode -> GHC.Types.EQ;
            AppendMode -> GHC.Types.LT;
            ReadWriteMode -> GHC.Types.LT
          };
        AppendMode ->
          case b_a4K3a of {
            __DEFAULT -> GHC.Types.GT;
            AppendMode -> GHC.Types.EQ;
            ReadWriteMode -> GHC.Types.LT
          };
        ReadWriteMode ->
          case b_a4K3a of {
            __DEFAULT -> GHC.Types.GT;
            ReadWriteMode -> GHC.Types.EQ
          }
      }

-- RHS size: {terms: 36, types: 7, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fOrdIOMode_$c< :: IOMode -> IOMode -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [110 140] 140 100}]
GHC.IO.IOMode.$fOrdIOMode_$c<
  = \ (a_a4K3d :: IOMode) (b_a4K3e :: IOMode) ->
      case a_a4K3d of {
        ReadMode ->
          case b_a4K3e of {
            ReadMode -> GHC.Types.False;
            WriteMode -> GHC.Types.True;
            AppendMode -> GHC.Types.True;
            ReadWriteMode -> GHC.Types.True
          };
        WriteMode ->
          case b_a4K3e of {
            __DEFAULT -> GHC.Types.False;
            AppendMode -> GHC.Types.True;
            ReadWriteMode -> GHC.Types.True
          };
        AppendMode ->
          case b_a4K3e of {
            __DEFAULT -> GHC.Types.False;
            ReadWriteMode -> GHC.Types.True
          };
        ReadWriteMode -> case b_a4K3e of { __DEFAULT -> GHC.Types.False }
      }

-- RHS size: {terms: 36, types: 7, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fOrdIOMode_$c<= :: IOMode -> IOMode -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [140 110] 140 100}]
GHC.IO.IOMode.$fOrdIOMode_$c<=
  = \ (a_a4K3h :: IOMode) (b_a4K3i :: IOMode) ->
      case b_a4K3i of {
        ReadMode ->
          case a_a4K3h of {
            ReadMode -> GHC.Types.True;
            WriteMode -> GHC.Types.False;
            AppendMode -> GHC.Types.False;
            ReadWriteMode -> GHC.Types.False
          };
        WriteMode ->
          case a_a4K3h of {
            __DEFAULT -> GHC.Types.True;
            AppendMode -> GHC.Types.False;
            ReadWriteMode -> GHC.Types.False
          };
        AppendMode ->
          case a_a4K3h of {
            __DEFAULT -> GHC.Types.True;
            ReadWriteMode -> GHC.Types.False
          };
        ReadWriteMode -> case a_a4K3h of { __DEFAULT -> GHC.Types.True }
      }

-- RHS size: {terms: 27, types: 6, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fOrdIOMode_$cmax :: IOMode -> IOMode -> IOMode
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [90 80] 100 60}]
GHC.IO.IOMode.$fOrdIOMode_$cmax
  = \ (x_a55d :: IOMode) (y_a55e :: IOMode) ->
      case y_a55e of {
        ReadMode -> x_a55d;
        WriteMode ->
          case x_a55d of {
            __DEFAULT -> GHC.IO.IOMode.WriteMode;
            AppendMode -> GHC.IO.IOMode.AppendMode;
            ReadWriteMode -> GHC.IO.IOMode.ReadWriteMode
          };
        AppendMode ->
          case x_a55d of {
            __DEFAULT -> GHC.IO.IOMode.AppendMode;
            ReadWriteMode -> GHC.IO.IOMode.ReadWriteMode
          };
        ReadWriteMode ->
          case x_a55d of { __DEFAULT -> GHC.IO.IOMode.ReadWriteMode }
      }

-- RHS size: {terms: 36, types: 7, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fOrdIOMode_$c>= :: IOMode -> IOMode -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [110 140] 140 100}]
GHC.IO.IOMode.$fOrdIOMode_$c>=
  = \ (a_a4K3l :: IOMode) (b_a4K3m :: IOMode) ->
      case a_a4K3l of {
        ReadMode ->
          case b_a4K3m of {
            ReadMode -> GHC.Types.True;
            WriteMode -> GHC.Types.False;
            AppendMode -> GHC.Types.False;
            ReadWriteMode -> GHC.Types.False
          };
        WriteMode ->
          case b_a4K3m of {
            __DEFAULT -> GHC.Types.True;
            AppendMode -> GHC.Types.False;
            ReadWriteMode -> GHC.Types.False
          };
        AppendMode ->
          case b_a4K3m of {
            __DEFAULT -> GHC.Types.True;
            ReadWriteMode -> GHC.Types.False
          };
        ReadWriteMode -> case b_a4K3m of { __DEFAULT -> GHC.Types.True }
      }

-- RHS size: {terms: 5, types: 2, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fOrdIOMode_$c> :: IOMode -> IOMode -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)
         Tmpl= \ (a_a4K3j [Occ=Once] :: IOMode)
                 (b_a4K3k [Occ=Once] :: IOMode) ->
                 GHC.IO.IOMode.$fOrdIOMode_$c< b_a4K3k a_a4K3j}]
GHC.IO.IOMode.$fOrdIOMode_$c>
  = \ (a_a4K3j :: IOMode) (b_a4K3k :: IOMode) ->
      GHC.IO.IOMode.$fOrdIOMode_$c< b_a4K3k a_a4K3j

-- RHS size: {terms: 27, types: 6, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fOrdIOMode_$cmin :: IOMode -> IOMode -> IOMode
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [90 80] 100 40}]
GHC.IO.IOMode.$fOrdIOMode_$cmin
  = \ (x_a55m :: IOMode) (y_a55n :: IOMode) ->
      case y_a55n of {
        ReadMode -> case x_a55m of { __DEFAULT -> GHC.IO.IOMode.ReadMode };
        WriteMode ->
          case x_a55m of wild1_X3b {
            __DEFAULT -> wild1_X3b;
            AppendMode -> GHC.IO.IOMode.WriteMode;
            ReadWriteMode -> GHC.IO.IOMode.WriteMode
          };
        AppendMode ->
          case x_a55m of wild1_X3b {
            __DEFAULT -> wild1_X3b;
            ReadWriteMode -> GHC.IO.IOMode.AppendMode
          };
        ReadWriteMode -> x_a55m
      }

-- RHS size: {terms: 9, types: 1, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fOrdIOMode [InlPrag=NOUSERINLINE CONLIKE]
  :: Ord IOMode
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ ->
       GHC.Classes.C:Ord TYPE: IOMode
                         GHC.IO.IOMode.$fEqIOMode
                         GHC.IO.IOMode.$fOrdIOMode_$ccompare
                         GHC.IO.IOMode.$fOrdIOMode_$c<
                         GHC.IO.IOMode.$fOrdIOMode_$c<=
                         GHC.IO.IOMode.$fOrdIOMode_$c>
                         GHC.IO.IOMode.$fOrdIOMode_$c>=
                         GHC.IO.IOMode.$fOrdIOMode_$cmax
                         GHC.IO.IOMode.$fOrdIOMode_$cmin]
GHC.IO.IOMode.$fOrdIOMode
  = GHC.Classes.C:Ord
      @ IOMode
      GHC.IO.IOMode.$fEqIOMode
      GHC.IO.IOMode.$fOrdIOMode_$ccompare
      GHC.IO.IOMode.$fOrdIOMode_$c<
      GHC.IO.IOMode.$fOrdIOMode_$c<=
      GHC.IO.IOMode.$fOrdIOMode_$c>
      GHC.IO.IOMode.$fOrdIOMode_$c>=
      GHC.IO.IOMode.$fOrdIOMode_$cmax
      GHC.IO.IOMode.$fOrdIOMode_$cmin

-- RHS size: {terms: 48, types: 7, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$w$cunsafeIndex [InlPrag=NOUSERINLINE[0]]
  :: IOMode -> IOMode -> Int#
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [170 200] 200 0}]
GHC.IO.IOMode.$w$cunsafeIndex
  = \ (ww_s4KE0 :: IOMode) (w_s4KDX :: IOMode) ->
      case ww_s4KE0 of {
        ReadMode ->
          case w_s4KDX of {
            ReadMode -> 0#;
            WriteMode -> 1#;
            AppendMode -> 2#;
            ReadWriteMode -> 3#
          };
        WriteMode ->
          case w_s4KDX of {
            ReadMode -> -1#;
            WriteMode -> 0#;
            AppendMode -> 1#;
            ReadWriteMode -> 2#
          };
        AppendMode ->
          case w_s4KDX of {
            ReadMode -> -2#;
            WriteMode -> -1#;
            AppendMode -> 0#;
            ReadWriteMode -> 1#
          };
        ReadWriteMode ->
          case w_s4KDX of {
            ReadMode -> -3#;
            WriteMode -> -2#;
            AppendMode -> -1#;
            ReadWriteMode -> 0#
          }
      }

-- RHS size: {terms: 12, types: 10, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fIxIOMode_$cunsafeIndex [InlPrag=NOUSERINLINE[0]]
  :: (IOMode, IOMode) -> IOMode -> Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(1*U,A)><S,1*U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s4KDW [Occ=Once!] :: (IOMode, IOMode))
                 (w1_s4KDX [Occ=Once] :: IOMode) ->
                 case w_s4KDW of { (ww1_s4KE0 [Occ=Once], _ [Occ=Dead]) ->
                 case GHC.IO.IOMode.$w$cunsafeIndex ww1_s4KE0 w1_s4KDX of ww3_s4KE5
                 { __DEFAULT ->
                 GHC.Types.I# ww3_s4KE5
                 }
                 }}]
GHC.IO.IOMode.$fIxIOMode_$cunsafeIndex
  = \ (w_s4KDW :: (IOMode, IOMode)) (w1_s4KDX :: IOMode) ->
      case w_s4KDW of { (ww1_s4KE0, ww2_s4KE1) ->
      case GHC.IO.IOMode.$w$cunsafeIndex ww1_s4KE0 w1_s4KDX of ww3_s4KE5
      { __DEFAULT ->
      GHC.Types.I# ww3_s4KE5
      }
      }

-- RHS size: {terms: 85, types: 20, coercions: 0, joins: 2/2}
GHC.IO.IOMode.$w$cinRange [InlPrag=NOUSERINLINE[0]]
  :: IOMode -> IOMode -> IOMode -> Bool
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U><S,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [62 62 119] 244 0}]
GHC.IO.IOMode.$w$cinRange
  = \ (ww_s4KEd :: IOMode)
      (ww1_s4KEe :: IOMode)
      (w_s4KEa :: IOMode) ->
      join {
        $j_s4KeW [Dmd=<C(S),1*C1(U)>] :: Int# -> Bool
        [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []]
        $j_s4KeW (a#_a4K3A [OS=OneShot]
                    :: Int#
                    Unf=OtherCon [])
          = join {
              $j1_s4KeU [Dmd=<C(S),1*C1(U)>] :: Int# -> Bool
              [LclId[JoinId(1)], Arity=1, Str=<L,U>, Unf=OtherCon []]
              $j1_s4KeU (b#_a4K3B [OS=OneShot]
                           :: Int#
                           Unf=OtherCon [])
                = case w_s4KEa of {
                    ReadMode ->
                      case >=# 0# a#_a4K3A of {
                        __DEFAULT -> GHC.Types.False;
                        1# -> tagToEnum# @ Bool (<=# 0# b#_a4K3B)
                      };
                    WriteMode ->
                      case >=# 1# a#_a4K3A of {
                        __DEFAULT -> GHC.Types.False;
                        1# -> tagToEnum# @ Bool (<=# 1# b#_a4K3B)
                      };
                    AppendMode ->
                      case >=# 2# a#_a4K3A of {
                        __DEFAULT -> GHC.Types.False;
                        1# -> tagToEnum# @ Bool (<=# 2# b#_a4K3B)
                      };
                    ReadWriteMode ->
                      case >=# 3# a#_a4K3A of {
                        __DEFAULT -> GHC.Types.False;
                        1# -> tagToEnum# @ Bool (<=# 3# b#_a4K3B)
                      }
                  } } in
            case ww1_s4KEe of {
              ReadMode -> jump $j1_s4KeU 0#;
              WriteMode -> jump $j1_s4KeU 1#;
              AppendMode -> jump $j1_s4KeU 2#;
              ReadWriteMode -> jump $j1_s4KeU 3#
            } } in
      case ww_s4KEd of {
        ReadMode -> jump $j_s4KeW 0#;
        WriteMode -> jump $j_s4KeW 1#;
        AppendMode -> jump $j_s4KeW 2#;
        ReadWriteMode -> jump $j_s4KeW 3#
      }

-- RHS size: {terms: 9, types: 9, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fIxIOMode_$cinRange [InlPrag=NOUSERINLINE[0]]
  :: (IOMode, IOMode) -> IOMode -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(1*U,1*U)><S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s4KE9 [Occ=Once!] :: (IOMode, IOMode))
                 (w1_s4KEa [Occ=Once] :: IOMode) ->
                 case w_s4KE9 of { (ww1_s4KEd [Occ=Once], ww2_s4KEe [Occ=Once]) ->
                 GHC.IO.IOMode.$w$cinRange ww1_s4KEd ww2_s4KEe w1_s4KEa
                 }}]
GHC.IO.IOMode.$fIxIOMode_$cinRange
  = \ (w_s4KE9 :: (IOMode, IOMode)) (w1_s4KEa :: IOMode) ->
      case w_s4KE9 of { (ww1_s4KEd, ww2_s4KEe) ->
      GHC.IO.IOMode.$w$cinRange ww1_s4KEd ww2_s4KEe w1_s4KEa
      }

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl_r4KYL :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl_r4KYL = GHC.Types.I# 0#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl1_r4KYM :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl1_r4KYM = GHC.Types.I# 1#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl2_r4KYN :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl2_r4KYN = GHC.Types.I# 2#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl3_r4KYO :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl3_r4KYO = GHC.Types.I# 3#

-- RHS size: {terms: 11, types: 2, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fEnumIOMode_$cfromEnum :: IOMode -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (a_a4K3O [Occ=Once!] :: IOMode) ->
                 case a_a4K3O of {
                   ReadMode -> GHC.Types.I# 0#;
                   WriteMode -> GHC.Types.I# 1#;
                   AppendMode -> GHC.Types.I# 2#;
                   ReadWriteMode -> GHC.Types.I# 3#
                 }}]
GHC.IO.IOMode.$fEnumIOMode_$cfromEnum
  = \ (a_a4K3O :: IOMode) ->
      case a_a4K3O of {
        ReadMode -> lvl_r4KYL;
        WriteMode -> lvl1_r4KYM;
        AppendMode -> lvl2_r4KYN;
        ReadWriteMode -> lvl3_r4KYO
      }

Rec {
-- RHS size: {terms: 13, types: 5, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fIxIOMode_go2 [Occ=LoopBreaker] :: Int# -> [IOMode]
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>m2, Unf=OtherCon []]
GHC.IO.IOMode.$fIxIOMode_go2
  = \ (x_i1MGD :: Int#) ->
      GHC.Types.:
        @ IOMode
        (tagToEnum# @ IOMode x_i1MGD)
        (case x_i1MGD of wild_X3k {
           __DEFAULT -> GHC.IO.IOMode.$fIxIOMode_go2 (+# wild_X3k 1#);
           0# -> GHC.Types.[] @ IOMode
         })
end Rec }

Rec {
-- RHS size: {terms: 13, types: 5, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fIxIOMode_go1 [Occ=LoopBreaker] :: Int# -> [IOMode]
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>m2, Unf=OtherCon []]
GHC.IO.IOMode.$fIxIOMode_go1
  = \ (x_i1MGD :: Int#) ->
      GHC.Types.:
        @ IOMode
        (tagToEnum# @ IOMode x_i1MGD)
        (case x_i1MGD of wild_X3k {
           __DEFAULT -> GHC.IO.IOMode.$fIxIOMode_go1 (+# wild_X3k 1#);
           1# -> GHC.Types.[] @ IOMode
         })
end Rec }

Rec {
-- RHS size: {terms: 13, types: 5, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fIxIOMode_go [Occ=LoopBreaker] :: Int# -> [IOMode]
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>m2, Unf=OtherCon []]
GHC.IO.IOMode.$fIxIOMode_go
  = \ (x_i1MGD :: Int#) ->
      GHC.Types.:
        @ IOMode
        (tagToEnum# @ IOMode x_i1MGD)
        (case x_i1MGD of wild_X3k {
           __DEFAULT -> GHC.IO.IOMode.$fIxIOMode_go (+# wild_X3k 1#);
           2# -> GHC.Types.[] @ IOMode
         })
end Rec }

Rec {
-- RHS size: {terms: 13, types: 5, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fEnumIOMode_go4 [Occ=LoopBreaker]
  :: Int# -> [IOMode]
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>m2, Unf=OtherCon []]
GHC.IO.IOMode.$fEnumIOMode_go4
  = \ (x_i1MGD :: Int#) ->
      GHC.Types.:
        @ IOMode
        (tagToEnum# @ IOMode x_i1MGD)
        (case x_i1MGD of wild_X3k {
           __DEFAULT -> GHC.IO.IOMode.$fEnumIOMode_go4 (+# wild_X3k 1#);
           3# -> GHC.Types.[] @ IOMode
         })
end Rec }

-- RHS size: {terms: 60, types: 16, coercions: 0, joins: 1/1}
GHC.IO.IOMode.$w$crange [InlPrag=NOUSERINLINE[0]]
  :: IOMode -> IOMode -> [IOMode]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [62 173] 260 0}]
GHC.IO.IOMode.$w$crange
  = \ (ww_s4KEp :: IOMode) (ww1_s4KEq :: IOMode) ->
      join {
        $j_s4Kf3 [Dmd=<C(S),1*C1(U)>] :: Int# -> [IOMode]
        [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []]
        $j_s4Kf3 (a#_a4K3p [OS=OneShot]
                    :: Int#
                    Unf=OtherCon [])
          = case ww1_s4KEq of {
              ReadMode ->
                case ># a#_a4K3p 0# of {
                  __DEFAULT -> GHC.IO.IOMode.$fIxIOMode_go2 a#_a4K3p;
                  1# -> GHC.Types.[] @ IOMode
                };
              WriteMode ->
                case ># a#_a4K3p 1# of {
                  __DEFAULT -> GHC.IO.IOMode.$fIxIOMode_go1 a#_a4K3p;
                  1# -> GHC.Types.[] @ IOMode
                };
              AppendMode ->
                case ># a#_a4K3p 2# of {
                  __DEFAULT -> GHC.IO.IOMode.$fIxIOMode_go a#_a4K3p;
                  1# -> GHC.Types.[] @ IOMode
                };
              ReadWriteMode ->
                case ># a#_a4K3p 3# of {
                  __DEFAULT -> GHC.IO.IOMode.$fEnumIOMode_go4 a#_a4K3p;
                  1# -> GHC.Types.[] @ IOMode
                }
            } } in
      case ww_s4KEp of {
        ReadMode -> jump $j_s4Kf3 0#;
        WriteMode -> jump $j_s4Kf3 1#;
        AppendMode -> jump $j_s4Kf3 2#;
        ReadWriteMode -> jump $j_s4Kf3 3#
      }

-- RHS size: {terms: 7, types: 8, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fIxIOMode_$crange [InlPrag=NOUSERINLINE[0]]
  :: (IOMode, IOMode) -> [IOMode]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(1*U,1*U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s4KEm [Occ=Once!] :: (IOMode, IOMode)) ->
                 case w_s4KEm of { (ww1_s4KEp [Occ=Once], ww2_s4KEq [Occ=Once]) ->
                 GHC.IO.IOMode.$w$crange ww1_s4KEp ww2_s4KEq
                 }}]
GHC.IO.IOMode.$fIxIOMode_$crange
  = \ (w_s4KEm :: (IOMode, IOMode)) ->
      case w_s4KEm of { (ww1_s4KEp, ww2_s4KEq) ->
      GHC.IO.IOMode.$w$crange ww1_s4KEp ww2_s4KEq
      }

-- RHS size: {terms: 56, types: 8, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$w$crangeSize [InlPrag=NOUSERINLINE[0]]
  :: IOMode -> IOMode -> Int#
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [170 200] 260 0}]
GHC.IO.IOMode.$w$crangeSize
  = \ (ww_s4KEx :: IOMode) (ww1_s4KEy :: IOMode) ->
      case GHC.IO.IOMode.$w$cinRange ww_s4KEx ww1_s4KEy ww1_s4KEy of {
        False -> 0#;
        True ->
          case ww_s4KEx of {
            ReadMode ->
              case ww1_s4KEy of {
                ReadMode -> 1#;
                WriteMode -> 2#;
                AppendMode -> 3#;
                ReadWriteMode -> 4#
              };
            WriteMode ->
              case ww1_s4KEy of {
                ReadMode -> 0#;
                WriteMode -> 1#;
                AppendMode -> 2#;
                ReadWriteMode -> 3#
              };
            AppendMode ->
              case ww1_s4KEy of {
                ReadMode -> -1#;
                WriteMode -> 0#;
                AppendMode -> 1#;
                ReadWriteMode -> 2#
              };
            ReadWriteMode ->
              case ww1_s4KEy of {
                ReadMode -> -2#;
                WriteMode -> -1#;
                AppendMode -> 0#;
                ReadWriteMode -> 1#
              }
          }
      }

-- RHS size: {terms: 11, types: 9, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fIxIOMode_$crangeSize [InlPrag=NOUSERINLINE[0]]
  :: (IOMode, IOMode) -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s4KEu [Occ=Once!] :: (IOMode, IOMode)) ->
                 case w_s4KEu of { (ww1_s4KEx [Occ=Once], ww2_s4KEy [Occ=Once]) ->
                 case GHC.IO.IOMode.$w$crangeSize ww1_s4KEx ww2_s4KEy of ww3_s4KEC
                 { __DEFAULT ->
                 GHC.Types.I# ww3_s4KEC
                 }
                 }}]
GHC.IO.IOMode.$fIxIOMode_$crangeSize
  = \ (w_s4KEu :: (IOMode, IOMode)) ->
      case w_s4KEu of { (ww1_s4KEx, ww2_s4KEy) ->
      case GHC.IO.IOMode.$w$crangeSize ww1_s4KEx ww2_s4KEy of ww3_s4KEC
      { __DEFAULT ->
      GHC.Types.I# ww3_s4KEC
      }
      }

-- RHS size: {terms: 48, types: 7, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$w$cunsafeRangeSize [InlPrag=NOUSERINLINE[0]]
  :: IOMode -> IOMode -> Int#
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [170 200] 200 0}]
GHC.IO.IOMode.$w$cunsafeRangeSize
  = \ (ww_s4KEI :: IOMode) (ww1_s4KEJ :: IOMode) ->
      case ww_s4KEI of {
        ReadMode ->
          case ww1_s4KEJ of {
            ReadMode -> 1#;
            WriteMode -> 2#;
            AppendMode -> 3#;
            ReadWriteMode -> 4#
          };
        WriteMode ->
          case ww1_s4KEJ of {
            ReadMode -> 0#;
            WriteMode -> 1#;
            AppendMode -> 2#;
            ReadWriteMode -> 3#
          };
        AppendMode ->
          case ww1_s4KEJ of {
            ReadMode -> -1#;
            WriteMode -> 0#;
            AppendMode -> 1#;
            ReadWriteMode -> 2#
          };
        ReadWriteMode ->
          case ww1_s4KEJ of {
            ReadMode -> -2#;
            WriteMode -> -1#;
            AppendMode -> 0#;
            ReadWriteMode -> 1#
          }
      }

-- RHS size: {terms: 11, types: 9, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fIxIOMode_$cunsafeRangeSize [InlPrag=NOUSERINLINE[0]]
  :: (IOMode, IOMode) -> Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(1*U,1*U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s4KEF [Occ=Once!] :: (IOMode, IOMode)) ->
                 case w_s4KEF of { (ww1_s4KEI [Occ=Once], ww2_s4KEJ [Occ=Once]) ->
                 case GHC.IO.IOMode.$w$cunsafeRangeSize ww1_s4KEI ww2_s4KEJ
                 of ww3_s4KEN
                 { __DEFAULT ->
                 GHC.Types.I# ww3_s4KEN
                 }
                 }}]
GHC.IO.IOMode.$fIxIOMode_$cunsafeRangeSize
  = \ (w_s4KEF :: (IOMode, IOMode)) ->
      case w_s4KEF of { (ww1_s4KEI, ww2_s4KEJ) ->
      case GHC.IO.IOMode.$w$cunsafeRangeSize ww1_s4KEI ww2_s4KEJ
      of ww3_s4KEN
      { __DEFAULT ->
      GHC.Types.I# ww3_s4KEN
      }
      }

-- RHS size: {terms: 20, types: 11, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fIxIOMode_$cindex [InlPrag=INLINE (sat-args=2)]
  :: (IOMode, IOMode) -> IOMode -> Int
[GblId,
 Arity=2,
 Str=<S(SS),1*U(U,1*U)><S,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (b_a1KRh :: (IOMode, IOMode)) (i_a1KRi :: IOMode) ->
                 case GHC.IO.IOMode.$fIxIOMode_$cinRange b_a1KRh i_a1KRi of {
                   False -> hopelessIndexError;
                   True -> GHC.IO.IOMode.$fIxIOMode_$cunsafeIndex b_a1KRh i_a1KRi
                 }}]
GHC.IO.IOMode.$fIxIOMode_$cindex
  = \ (eta_B2 :: (IOMode, IOMode)) (eta1_X25 :: IOMode) ->
      case eta_B2 of { (ww1_s4KEd, ww2_s4KEe) ->
      case GHC.IO.IOMode.$w$cinRange ww1_s4KEd ww2_s4KEe eta1_X25 of {
        False -> hopelessIndexError;
        True ->
          case GHC.IO.IOMode.$w$cunsafeIndex ww1_s4KEd eta1_X25 of ww3_s4KE5
          { __DEFAULT ->
          GHC.Types.I# ww3_s4KE5
          }
      }
      }

-- RHS size: {terms: 8, types: 1, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fIxIOMode [InlPrag=NOUSERINLINE CONLIKE]
  :: Ix IOMode
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ ->
       GHC.Arr.C:Ix TYPE: IOMode
                    GHC.IO.IOMode.$fOrdIOMode
                    GHC.IO.IOMode.$fIxIOMode_$crange
                    GHC.IO.IOMode.$fIxIOMode_$cindex
                    GHC.IO.IOMode.$fIxIOMode_$cunsafeIndex
                    GHC.IO.IOMode.$fIxIOMode_$cinRange
                    GHC.IO.IOMode.$fIxIOMode_$crangeSize
                    GHC.IO.IOMode.$fIxIOMode_$cunsafeRangeSize]
GHC.IO.IOMode.$fIxIOMode
  = GHC.Arr.C:Ix
      @ IOMode
      GHC.IO.IOMode.$fOrdIOMode
      GHC.IO.IOMode.$fIxIOMode_$crange
      GHC.IO.IOMode.$fIxIOMode_$cindex
      GHC.IO.IOMode.$fIxIOMode_$cunsafeIndex
      GHC.IO.IOMode.$fIxIOMode_$cinRange
      GHC.IO.IOMode.$fIxIOMode_$crangeSize
      GHC.IO.IOMode.$fIxIOMode_$cunsafeRangeSize

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl4_r4KYP :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl4_r4KYP = "error"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl5_r4KYQ :: [Char]
[GblId]
lvl5_r4KYQ = unpackCString# lvl4_r4KYP

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$trModule4 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.IOMode.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl6_r4KYR :: [Char]
[GblId]
lvl6_r4KYR = unpackCString# GHC.IO.IOMode.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$trModule2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.IO.IOMode.$trModule2 = "GHC.IO.IOMode"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl7_r4KYS :: [Char]
[GblId]
lvl7_r4KYS = unpackCString# GHC.IO.IOMode.$trModule2

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl8_r4KYT :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl8_r4KYT = "./GHC/IO/IOMode.hs"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl9_r4KYU :: [Char]
[GblId]
lvl9_r4KYU = unpackCString# lvl8_r4KYT

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl10_r4KYV :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl10_r4KYV = GHC.Types.I# 32#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl11_r4KYW :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl11_r4KYW = GHC.Types.I# 36#

-- RHS size: {terms: 8, types: 0, coercions: 0, joins: 0/0}
lvl12_r4KYX :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []]
lvl12_r4KYX
  = GHC.Stack.Types.SrcLoc
      lvl6_r4KYR
      lvl7_r4KYS
      lvl9_r4KYU
      lvl10_r4KYV
      lvl10_r4KYV
      lvl10_r4KYV
      lvl11_r4KYW

-- RHS size: {terms: 4, types: 0, coercions: 0, joins: 0/0}
lvl13_r4KYY :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []]
lvl13_r4KYY
  = GHC.Stack.Types.PushCallStack
      lvl5_r4KYQ lvl12_r4KYX GHC.Stack.Types.EmptyCallStack

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl14_r4KYZ :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl14_r4KYZ
  = "pred{IOMode}: tried to take `pred' of first tag in enumeration"#

-- RHS size: {terms: 4, types: 2, coercions: 4, joins: 0/0}
GHC.IO.IOMode.$fEnumIOMode5 :: IOMode
[GblId, Str=x]
GHC.IO.IOMode.$fEnumIOMode5
  = error
      @ 'LiftedRep
      @ IOMode
      (lvl13_r4KYY
       `cast` (Sym (GHC.Classes.N:IP[0]
                        <"callStack">_N <GHC.Stack.Types.CallStack>_N)
               :: (GHC.Stack.Types.CallStack :: *)
                  ~R# (?callStack::GHC.Stack.Types.CallStack :: Constraint)))
      (unpackCString# lvl14_r4KYZ)

-- RHS size: {terms: 11, types: 2, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fEnumIOMode_$cpred :: IOMode -> IOMode
[GblId,
 Arity=1,
 Str=<S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (a_a4K3F [Occ=Once!] :: IOMode) ->
                 case a_a4K3F of {
                   ReadMode -> GHC.IO.IOMode.$fEnumIOMode5;
                   WriteMode -> GHC.IO.IOMode.ReadMode;
                   AppendMode -> GHC.IO.IOMode.WriteMode;
                   ReadWriteMode -> GHC.IO.IOMode.AppendMode
                 }}]
GHC.IO.IOMode.$fEnumIOMode_$cpred
  = \ (a_a4K3F :: IOMode) ->
      case a_a4K3F of {
        ReadMode -> GHC.IO.IOMode.$fEnumIOMode5;
        WriteMode -> GHC.IO.IOMode.ReadMode;
        AppendMode -> GHC.IO.IOMode.WriteMode;
        ReadWriteMode -> GHC.IO.IOMode.AppendMode
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl15_r4KZ0 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl15_r4KZ0
  = "succ{IOMode}: tried to take `succ' of last tag in enumeration"#

-- RHS size: {terms: 4, types: 2, coercions: 4, joins: 0/0}
GHC.IO.IOMode.$fEnumIOMode6 :: IOMode
[GblId, Str=x]
GHC.IO.IOMode.$fEnumIOMode6
  = error
      @ 'LiftedRep
      @ IOMode
      (lvl13_r4KYY
       `cast` (Sym (GHC.Classes.N:IP[0]
                        <"callStack">_N <GHC.Stack.Types.CallStack>_N)
               :: (GHC.Stack.Types.CallStack :: *)
                  ~R# (?callStack::GHC.Stack.Types.CallStack :: Constraint)))
      (unpackCString# lvl15_r4KZ0)

-- RHS size: {terms: 11, types: 2, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fEnumIOMode_$csucc :: IOMode -> IOMode
[GblId,
 Arity=1,
 Str=<S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (a_a4K3D [Occ=Once!] :: IOMode) ->
                 case a_a4K3D of {
                   ReadMode -> GHC.IO.IOMode.WriteMode;
                   WriteMode -> GHC.IO.IOMode.AppendMode;
                   AppendMode -> GHC.IO.IOMode.ReadWriteMode;
                   ReadWriteMode -> GHC.IO.IOMode.$fEnumIOMode6
                 }}]
GHC.IO.IOMode.$fEnumIOMode_$csucc
  = \ (a_a4K3D :: IOMode) ->
      case a_a4K3D of {
        ReadMode -> GHC.IO.IOMode.WriteMode;
        WriteMode -> GHC.IO.IOMode.AppendMode;
        AppendMode -> GHC.IO.IOMode.ReadWriteMode;
        ReadWriteMode -> GHC.IO.IOMode.$fEnumIOMode6
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl16_r4KZ1 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl16_r4KZ1 = ") is outside of enumeration's range (0,"#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl17_r4KZ2 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl17_r4KZ2 = ")"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl18_r4KZ3 :: [Char]
[GblId]
lvl18_r4KZ3 = unpackCString# lvl17_r4KZ2

-- RHS size: {terms: 9, types: 10, coercions: 0, joins: 0/0}
lvl19_r4KZ4 :: [Char]
[GblId]
lvl19_r4KZ4
  = case GHC.Show.$wshowSignedInt 0# 3# lvl18_r4KZ3 of
    { (# ww5_i1MP4, ww6_i1MP5 #) ->
    GHC.Types.: @ Char ww5_i1MP4 ww6_i1MP5
    }

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
lvl20_r4KZ5 :: [Char]
[GblId]
lvl20_r4KZ5 = unpackAppendCString# lvl16_r4KZ1 lvl19_r4KZ4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl21_r4KZ6 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl21_r4KZ6 = "toEnum{IOMode}: tag ("#

-- RHS size: {terms: 14, types: 13, coercions: 4, joins: 0/0}
GHC.IO.IOMode.$wlvl [InlPrag=NOUSERINLINE[0]] :: Int# -> IOMode
[GblId, Arity=1, Str=<B,U>x, Unf=OtherCon []]
GHC.IO.IOMode.$wlvl
  = \ (ww_s4KES :: Int#) ->
      error
        @ 'LiftedRep
        @ IOMode
        (lvl13_r4KYY
         `cast` (Sym (GHC.Classes.N:IP[0]
                          <"callStack">_N <GHC.Stack.Types.CallStack>_N)
                 :: (GHC.Stack.Types.CallStack :: *)
                    ~R# (?callStack::GHC.Stack.Types.CallStack :: Constraint)))
        (unpackAppendCString#
           lvl21_r4KZ6
           (case GHC.Show.$wshowSignedInt 0# ww_s4KES lvl20_r4KZ5 of
            { (# ww5_i1MP4, ww6_i1MP5 #) ->
            GHC.Types.: @ Char ww5_i1MP4 ww6_i1MP5
            }))

-- RHS size: {terms: 19, types: 4, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$w$ctoEnum [InlPrag=NOUSERINLINE[0]]
  :: Int# -> IOMode
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 83 0}]
GHC.IO.IOMode.$w$ctoEnum
  = \ (ww_s4KEY :: Int#) ->
      case >=# ww_s4KEY 0# of {
        __DEFAULT -> GHC.IO.IOMode.$wlvl ww_s4KEY;
        1# ->
          case <=# ww_s4KEY 3# of {
            __DEFAULT -> GHC.IO.IOMode.$wlvl ww_s4KEY;
            1# -> tagToEnum# @ IOMode ww_s4KEY
          }
      }

-- RHS size: {terms: 6, types: 3, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fEnumIOMode_$ctoEnum [InlPrag=NOUSERINLINE[0]]
  :: Int -> IOMode
[GblId,
 Arity=1,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s4KEV [Occ=Once!] :: Int) ->
                 case w_s4KEV of { I# ww1_s4KEY [Occ=Once] ->
                 GHC.IO.IOMode.$w$ctoEnum ww1_s4KEY
                 }}]
GHC.IO.IOMode.$fEnumIOMode_$ctoEnum
  = \ (w_s4KEV :: Int) ->
      case w_s4KEV of { I# ww1_s4KEY ->
      GHC.IO.IOMode.$w$ctoEnum ww1_s4KEY
      }

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fEnumIOMode4 :: [IOMode]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
GHC.IO.IOMode.$fEnumIOMode4 = GHC.IO.IOMode.$fEnumIOMode_go4 0#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fEnumIOMode3 :: [IOMode]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
GHC.IO.IOMode.$fEnumIOMode3 = GHC.IO.IOMode.$fEnumIOMode_go4 1#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fEnumIOMode2 :: [IOMode]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
GHC.IO.IOMode.$fEnumIOMode2 = GHC.IO.IOMode.$fEnumIOMode_go4 2#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fEnumIOMode1 :: [IOMode]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
GHC.IO.IOMode.$fEnumIOMode1 = GHC.IO.IOMode.$fEnumIOMode_go4 3#

-- RHS size: {terms: 11, types: 2, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fEnumIOMode_$cenumFrom :: IOMode -> [IOMode]
[GblId,
 Arity=1,
 Str=<S,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [50] 40 0}]
GHC.IO.IOMode.$fEnumIOMode_$cenumFrom
  = \ (a_a4K3I :: IOMode) ->
      case a_a4K3I of {
        ReadMode -> GHC.IO.IOMode.$fEnumIOMode4;
        WriteMode -> GHC.IO.IOMode.$fEnumIOMode3;
        AppendMode -> GHC.IO.IOMode.$fEnumIOMode2;
        ReadWriteMode -> GHC.IO.IOMode.$fEnumIOMode1
      }

-- RHS size: {terms: 248, types: 95, coercions: 0, joins: 2/14}
GHC.IO.IOMode.$fEnumIOMode_$cenumFromThen
  :: IOMode -> IOMode -> [IOMode]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []]
GHC.IO.IOMode.$fEnumIOMode_$cenumFromThen
  = \ (a_a4K3K :: IOMode) (b_a4K3L :: IOMode) ->
      join {
        $j_s4Kfv [Dmd=<C(S),1*C1(U)>] :: Int# -> [IOMode]
        [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []]
        $j_s4Kfv (a#_a4K3M [OS=OneShot]
                    :: Int#
                    Unf=OtherCon [])
          = join {
              $j1_s4Kft [Dmd=<C(S),1*C1(U)>] :: Int# -> [IOMode]
              [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []]
              $j1_s4Kft (b#_a4K3N [OS=OneShot]
                           :: Int#
                           Unf=OtherCon [])
                = case ># a#_a4K3M b#_a4K3N of {
                    __DEFAULT ->
                      case >=# b#_a4K3N a#_a4K3M of {
                        __DEFAULT ->
                          case ># 3# b#_a4K3N of {
                            __DEFAULT ->
                              GHC.Types.:
                                @ IOMode
                                (tagToEnum# @ IOMode a#_a4K3M)
                                (let {
                                   delta_i2ioH [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   delta_i2ioH = -# b#_a4K3N a#_a4K3M } in
                                 let {
                                   y'_i2ioI [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   y'_i2ioI = -# 3# delta_i2ioH } in
                                 letrec {
                                   go_dn_i2ioJ [Occ=LoopBreaker] :: Int# -> [IOMode]
                                   [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                                   go_dn_i2ioJ
                                     = \ (x_i2ioK :: Int#) ->
                                         case <# x_i2ioK y'_i2ioI of {
                                           __DEFAULT ->
                                             GHC.Types.:
                                               @ IOMode
                                               (tagToEnum# @ IOMode x_i2ioK)
                                               (go_dn_i2ioJ (+# x_i2ioK delta_i2ioH));
                                           1# ->
                                             GHC.Types.:
                                               @ IOMode
                                               (tagToEnum# @ IOMode x_i2ioK)
                                               (GHC.Types.[] @ IOMode)
                                         }; } in
                                 go_dn_i2ioJ b#_a4K3N);
                            1# ->
                              case ># 3# a#_a4K3M of {
                                __DEFAULT ->
                                  GHC.Types.:
                                    @ IOMode (tagToEnum# @ IOMode a#_a4K3M) (GHC.Types.[] @ IOMode);
                                1# -> GHC.Types.[] @ IOMode
                              }
                          };
                        1# ->
                          case <# 3# b#_a4K3N of {
                            __DEFAULT ->
                              GHC.Types.:
                                @ IOMode
                                (tagToEnum# @ IOMode a#_a4K3M)
                                (let {
                                   delta_i2ioX [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   delta_i2ioX = -# b#_a4K3N a#_a4K3M } in
                                 let {
                                   y'_i2ioY [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   y'_i2ioY = -# 3# delta_i2ioX } in
                                 letrec {
                                   go_up_i2ioZ [Occ=LoopBreaker] :: Int# -> [IOMode]
                                   [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                                   go_up_i2ioZ
                                     = \ (x_i2ip0 :: Int#) ->
                                         case ># x_i2ip0 y'_i2ioY of {
                                           __DEFAULT ->
                                             GHC.Types.:
                                               @ IOMode
                                               (tagToEnum# @ IOMode x_i2ip0)
                                               (go_up_i2ioZ (+# x_i2ip0 delta_i2ioX));
                                           1# ->
                                             GHC.Types.:
                                               @ IOMode
                                               (tagToEnum# @ IOMode x_i2ip0)
                                               (GHC.Types.[] @ IOMode)
                                         }; } in
                                 go_up_i2ioZ b#_a4K3N);
                            1# ->
                              case <# 3# a#_a4K3M of {
                                __DEFAULT ->
                                  GHC.Types.:
                                    @ IOMode (tagToEnum# @ IOMode a#_a4K3M) (GHC.Types.[] @ IOMode);
                                1# -> GHC.Types.[] @ IOMode
                              }
                          }
                      };
                    1# ->
                      case >=# b#_a4K3N a#_a4K3M of {
                        __DEFAULT ->
                          case ># 0# b#_a4K3N of {
                            __DEFAULT ->
                              GHC.Types.:
                                @ IOMode
                                (tagToEnum# @ IOMode a#_a4K3M)
                                (let {
                                   delta_i2ioH [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   delta_i2ioH = -# b#_a4K3N a#_a4K3M } in
                                 let {
                                   y'_i2ioI [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   y'_i2ioI = -# 0# delta_i2ioH } in
                                 letrec {
                                   go_dn_i2ioJ [Occ=LoopBreaker] :: Int# -> [IOMode]
                                   [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                                   go_dn_i2ioJ
                                     = \ (x_i2ioK :: Int#) ->
                                         case <# x_i2ioK y'_i2ioI of {
                                           __DEFAULT ->
                                             GHC.Types.:
                                               @ IOMode
                                               (tagToEnum# @ IOMode x_i2ioK)
                                               (go_dn_i2ioJ (+# x_i2ioK delta_i2ioH));
                                           1# ->
                                             GHC.Types.:
                                               @ IOMode
                                               (tagToEnum# @ IOMode x_i2ioK)
                                               (GHC.Types.[] @ IOMode)
                                         }; } in
                                 go_dn_i2ioJ b#_a4K3N);
                            1# ->
                              case ># 0# a#_a4K3M of {
                                __DEFAULT ->
                                  GHC.Types.:
                                    @ IOMode (tagToEnum# @ IOMode a#_a4K3M) (GHC.Types.[] @ IOMode);
                                1# -> GHC.Types.[] @ IOMode
                              }
                          };
                        1# ->
                          case <# 0# b#_a4K3N of {
                            __DEFAULT ->
                              GHC.Types.:
                                @ IOMode
                                (tagToEnum# @ IOMode a#_a4K3M)
                                (let {
                                   delta_i2ioX [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   delta_i2ioX = -# b#_a4K3N a#_a4K3M } in
                                 let {
                                   y'_i2ioY [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   y'_i2ioY = -# 0# delta_i2ioX } in
                                 letrec {
                                   go_up_i2ioZ [Occ=LoopBreaker] :: Int# -> [IOMode]
                                   [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                                   go_up_i2ioZ
                                     = \ (x_i2ip0 :: Int#) ->
                                         case ># x_i2ip0 y'_i2ioY of {
                                           __DEFAULT ->
                                             GHC.Types.:
                                               @ IOMode
                                               (tagToEnum# @ IOMode x_i2ip0)
                                               (go_up_i2ioZ (+# x_i2ip0 delta_i2ioX));
                                           1# ->
                                             GHC.Types.:
                                               @ IOMode
                                               (tagToEnum# @ IOMode x_i2ip0)
                                               (GHC.Types.[] @ IOMode)
                                         }; } in
                                 go_up_i2ioZ b#_a4K3N);
                            1# ->
                              case <# 0# a#_a4K3M of {
                                __DEFAULT ->
                                  GHC.Types.:
                                    @ IOMode (tagToEnum# @ IOMode a#_a4K3M) (GHC.Types.[] @ IOMode);
                                1# -> GHC.Types.[] @ IOMode
                              }
                          }
                      }
                  } } in
            case b_a4K3L of {
              ReadMode -> jump $j1_s4Kft 0#;
              WriteMode -> jump $j1_s4Kft 1#;
              AppendMode -> jump $j1_s4Kft 2#;
              ReadWriteMode -> jump $j1_s4Kft 3#
            } } in
      case a_a4K3K of {
        ReadMode -> jump $j_s4Kfv 0#;
        WriteMode -> jump $j_s4Kfv 1#;
        AppendMode -> jump $j_s4Kfv 2#;
        ReadWriteMode -> jump $j_s4Kfv 3#
      }

Rec {
-- RHS size: {terms: 29, types: 7, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fEnumIOMode_go3 [Occ=LoopBreaker]
  :: Int# -> [IOMode]
[GblId, Arity=1, Str=<L,U>m2, Unf=OtherCon []]
GHC.IO.IOMode.$fEnumIOMode_go3
  = \ (x_i1MGD :: Int#) ->
      GHC.Types.:
        @ IOMode
        (case >=# x_i1MGD 0# of {
           __DEFAULT -> GHC.IO.IOMode.$wlvl x_i1MGD;
           1# ->
             case <=# x_i1MGD 3# of {
               __DEFAULT -> GHC.IO.IOMode.$wlvl x_i1MGD;
               1# -> tagToEnum# @ IOMode x_i1MGD
             }
         })
        (case x_i1MGD of wild_X3J {
           __DEFAULT -> GHC.IO.IOMode.$fEnumIOMode_go3 (+# wild_X3J 1#);
           0# -> GHC.Types.[] @ IOMode
         })
end Rec }

Rec {
-- RHS size: {terms: 29, types: 7, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fEnumIOMode_go2 [Occ=LoopBreaker]
  :: Int# -> [IOMode]
[GblId, Arity=1, Str=<L,U>m2, Unf=OtherCon []]
GHC.IO.IOMode.$fEnumIOMode_go2
  = \ (x_i1MGD :: Int#) ->
      GHC.Types.:
        @ IOMode
        (case >=# x_i1MGD 0# of {
           __DEFAULT -> GHC.IO.IOMode.$wlvl x_i1MGD;
           1# ->
             case <=# x_i1MGD 3# of {
               __DEFAULT -> GHC.IO.IOMode.$wlvl x_i1MGD;
               1# -> tagToEnum# @ IOMode x_i1MGD
             }
         })
        (case x_i1MGD of wild_X3J {
           __DEFAULT -> GHC.IO.IOMode.$fEnumIOMode_go2 (+# wild_X3J 1#);
           1# -> GHC.Types.[] @ IOMode
         })
end Rec }

Rec {
-- RHS size: {terms: 29, types: 7, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fEnumIOMode_go1 [Occ=LoopBreaker]
  :: Int# -> [IOMode]
[GblId, Arity=1, Str=<L,U>m2, Unf=OtherCon []]
GHC.IO.IOMode.$fEnumIOMode_go1
  = \ (x_i1MGD :: Int#) ->
      GHC.Types.:
        @ IOMode
        (case >=# x_i1MGD 0# of {
           __DEFAULT -> GHC.IO.IOMode.$wlvl x_i1MGD;
           1# ->
             case <=# x_i1MGD 3# of {
               __DEFAULT -> GHC.IO.IOMode.$wlvl x_i1MGD;
               1# -> tagToEnum# @ IOMode x_i1MGD
             }
         })
        (case x_i1MGD of wild_X3J {
           __DEFAULT -> GHC.IO.IOMode.$fEnumIOMode_go1 (+# wild_X3J 1#);
           2# -> GHC.Types.[] @ IOMode
         })
end Rec }

Rec {
-- RHS size: {terms: 29, types: 7, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fEnumIOMode_go [Occ=LoopBreaker] :: Int# -> [IOMode]
[GblId, Arity=1, Str=<L,U>m2, Unf=OtherCon []]
GHC.IO.IOMode.$fEnumIOMode_go
  = \ (x_i1MGD :: Int#) ->
      GHC.Types.:
        @ IOMode
        (case >=# x_i1MGD 0# of {
           __DEFAULT -> GHC.IO.IOMode.$wlvl x_i1MGD;
           1# ->
             case <=# x_i1MGD 3# of {
               __DEFAULT -> GHC.IO.IOMode.$wlvl x_i1MGD;
               1# -> tagToEnum# @ IOMode x_i1MGD
             }
         })
        (case x_i1MGD of wild_X3J {
           __DEFAULT -> GHC.IO.IOMode.$fEnumIOMode_go (+# wild_X3J 1#);
           3# -> GHC.Types.[] @ IOMode
         })
end Rec }

-- RHS size: {terms: 60, types: 16, coercions: 0, joins: 1/1}
GHC.IO.IOMode.$fEnumIOMode_$cenumFromTo
  :: IOMode -> IOMode -> [IOMode]
[GblId,
 Arity=2,
 Str=<S,1*U><S,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [62 173] 260 0}]
GHC.IO.IOMode.$fEnumIOMode_$cenumFromTo
  = \ (x_i2hNA :: IOMode) (y_i2hNB :: IOMode) ->
      join {
        $j_s4Kfy [Dmd=<C(S),1*C1(U)>] :: Int# -> [IOMode]
        [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []]
        $j_s4Kfy (x1_i2hNH [OS=OneShot] :: Int#)
          = case y_i2hNB of {
              ReadMode ->
                case ># x1_i2hNH 0# of {
                  __DEFAULT -> GHC.IO.IOMode.$fEnumIOMode_go3 x1_i2hNH;
                  1# -> GHC.Types.[] @ IOMode
                };
              WriteMode ->
                case ># x1_i2hNH 1# of {
                  __DEFAULT -> GHC.IO.IOMode.$fEnumIOMode_go2 x1_i2hNH;
                  1# -> GHC.Types.[] @ IOMode
                };
              AppendMode ->
                case ># x1_i2hNH 2# of {
                  __DEFAULT -> GHC.IO.IOMode.$fEnumIOMode_go1 x1_i2hNH;
                  1# -> GHC.Types.[] @ IOMode
                };
              ReadWriteMode ->
                case ># x1_i2hNH 3# of {
                  __DEFAULT -> GHC.IO.IOMode.$fEnumIOMode_go x1_i2hNH;
                  1# -> GHC.Types.[] @ IOMode
                }
            } } in
      case x_i2hNA of {
        ReadMode -> jump $j_s4Kfy 0#;
        WriteMode -> jump $j_s4Kfy 1#;
        AppendMode -> jump $j_s4Kfy 2#;
        ReadWriteMode -> jump $j_s4Kfy 3#
      }

-- RHS size: {terms: 969, types: 242, coercions: 0, joins: 2/26}
GHC.IO.IOMode.$fEnumIOMode_$cenumFromThenTo
  :: IOMode -> IOMode -> IOMode -> [IOMode]
[GblId, Arity=3, Str=<S,1*U><S,1*U><S,1*U>, Unf=OtherCon []]
GHC.IO.IOMode.$fEnumIOMode_$cenumFromThenTo
  = \ (x1_i2hNP :: IOMode)
      (x2_i2hNQ :: IOMode)
      (y_i2hNR :: IOMode) ->
      join {
        $j_s4KfD [Dmd=<C(S),1*C1(U)>] :: Int# -> [IOMode]
        [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []]
        $j_s4KfD (x4_i2hNX [OS=OneShot] :: Int#)
          = join {
              $j1_s4KfB [Dmd=<C(S),1*C1(U)>] :: Int# -> [IOMode]
              [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []]
              $j1_s4KfB (x5_i2hO1 [OS=OneShot] :: Int#)
                = case y_i2hNR of {
                    ReadMode ->
                      case >=# x5_i2hO1 x4_i2hNX of {
                        __DEFAULT ->
                          case ># 0# x5_i2hO1 of {
                            __DEFAULT ->
                              GHC.Types.:
                                @ IOMode
                                (case >=# x4_i2hNX 0# of {
                                   __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                   1# ->
                                     case <=# x4_i2hNX 3# of {
                                       __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                       1# -> tagToEnum# @ IOMode x4_i2hNX
                                     }
                                 })
                                (let {
                                   delta_i2ioH [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   delta_i2ioH = -# x5_i2hO1 x4_i2hNX } in
                                 let {
                                   y'_i2ioI [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   y'_i2ioI = -# 0# delta_i2ioH } in
                                 letrec {
                                   go_dn_i2ioJ [Occ=LoopBreaker] :: Int# -> [IOMode]
                                   [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                                   go_dn_i2ioJ
                                     = \ (x_i2ioK :: Int#) ->
                                         case <# x_i2ioK y'_i2ioI of {
                                           __DEFAULT ->
                                             GHC.Types.:
                                               @ IOMode
                                               (case >=# x_i2ioK 0# of {
                                                  __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ioK;
                                                  1# ->
                                                    case <=# x_i2ioK 3# of {
                                                      __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ioK;
                                                      1# -> tagToEnum# @ IOMode x_i2ioK
                                                    }
                                                })
                                               (go_dn_i2ioJ (+# x_i2ioK delta_i2ioH));
                                           1# ->
                                             GHC.Types.:
                                               @ IOMode
                                               (case >=# x_i2ioK 0# of {
                                                  __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ioK;
                                                  1# ->
                                                    case <=# x_i2ioK 3# of {
                                                      __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ioK;
                                                      1# -> tagToEnum# @ IOMode x_i2ioK
                                                    }
                                                })
                                               (GHC.Types.[] @ IOMode)
                                         }; } in
                                 go_dn_i2ioJ x5_i2hO1);
                            1# ->
                              case ># 0# x4_i2hNX of {
                                __DEFAULT ->
                                  GHC.Types.:
                                    @ IOMode
                                    (case >=# x4_i2hNX 0# of {
                                       __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                       1# ->
                                         case <=# x4_i2hNX 3# of {
                                           __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                           1# -> tagToEnum# @ IOMode x4_i2hNX
                                         }
                                     })
                                    (GHC.Types.[] @ IOMode);
                                1# -> GHC.Types.[] @ IOMode
                              }
                          };
                        1# ->
                          case <# 0# x5_i2hO1 of {
                            __DEFAULT ->
                              GHC.Types.:
                                @ IOMode
                                (case >=# x4_i2hNX 0# of {
                                   __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                   1# ->
                                     case <=# x4_i2hNX 3# of {
                                       __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                       1# -> tagToEnum# @ IOMode x4_i2hNX
                                     }
                                 })
                                (let {
                                   delta_i2ioX [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   delta_i2ioX = -# x5_i2hO1 x4_i2hNX } in
                                 let {
                                   y'_i2ioY [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   y'_i2ioY = -# 0# delta_i2ioX } in
                                 letrec {
                                   go_up_i2ioZ [Occ=LoopBreaker] :: Int# -> [IOMode]
                                   [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                                   go_up_i2ioZ
                                     = \ (x_i2ip0 :: Int#) ->
                                         case ># x_i2ip0 y'_i2ioY of {
                                           __DEFAULT ->
                                             GHC.Types.:
                                               @ IOMode
                                               (case >=# x_i2ip0 0# of {
                                                  __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ip0;
                                                  1# ->
                                                    case <=# x_i2ip0 3# of {
                                                      __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ip0;
                                                      1# -> tagToEnum# @ IOMode x_i2ip0
                                                    }
                                                })
                                               (go_up_i2ioZ (+# x_i2ip0 delta_i2ioX));
                                           1# ->
                                             GHC.Types.:
                                               @ IOMode
                                               (case >=# x_i2ip0 0# of {
                                                  __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ip0;
                                                  1# ->
                                                    case <=# x_i2ip0 3# of {
                                                      __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ip0;
                                                      1# -> tagToEnum# @ IOMode x_i2ip0
                                                    }
                                                })
                                               (GHC.Types.[] @ IOMode)
                                         }; } in
                                 go_up_i2ioZ x5_i2hO1);
                            1# ->
                              case <# 0# x4_i2hNX of {
                                __DEFAULT ->
                                  GHC.Types.:
                                    @ IOMode
                                    (case >=# x4_i2hNX 0# of {
                                       __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                       1# ->
                                         case <=# x4_i2hNX 3# of {
                                           __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                           1# -> tagToEnum# @ IOMode x4_i2hNX
                                         }
                                     })
                                    (GHC.Types.[] @ IOMode);
                                1# -> GHC.Types.[] @ IOMode
                              }
                          }
                      };
                    WriteMode ->
                      case >=# x5_i2hO1 x4_i2hNX of {
                        __DEFAULT ->
                          case ># 1# x5_i2hO1 of {
                            __DEFAULT ->
                              GHC.Types.:
                                @ IOMode
                                (case >=# x4_i2hNX 0# of {
                                   __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                   1# ->
                                     case <=# x4_i2hNX 3# of {
                                       __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                       1# -> tagToEnum# @ IOMode x4_i2hNX
                                     }
                                 })
                                (let {
                                   delta_i2ioH [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   delta_i2ioH = -# x5_i2hO1 x4_i2hNX } in
                                 let {
                                   y'_i2ioI [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   y'_i2ioI = -# 1# delta_i2ioH } in
                                 letrec {
                                   go_dn_i2ioJ [Occ=LoopBreaker] :: Int# -> [IOMode]
                                   [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                                   go_dn_i2ioJ
                                     = \ (x_i2ioK :: Int#) ->
                                         case <# x_i2ioK y'_i2ioI of {
                                           __DEFAULT ->
                                             GHC.Types.:
                                               @ IOMode
                                               (case >=# x_i2ioK 0# of {
                                                  __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ioK;
                                                  1# ->
                                                    case <=# x_i2ioK 3# of {
                                                      __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ioK;
                                                      1# -> tagToEnum# @ IOMode x_i2ioK
                                                    }
                                                })
                                               (go_dn_i2ioJ (+# x_i2ioK delta_i2ioH));
                                           1# ->
                                             GHC.Types.:
                                               @ IOMode
                                               (case >=# x_i2ioK 0# of {
                                                  __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ioK;
                                                  1# ->
                                                    case <=# x_i2ioK 3# of {
                                                      __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ioK;
                                                      1# -> tagToEnum# @ IOMode x_i2ioK
                                                    }
                                                })
                                               (GHC.Types.[] @ IOMode)
                                         }; } in
                                 go_dn_i2ioJ x5_i2hO1);
                            1# ->
                              case ># 1# x4_i2hNX of {
                                __DEFAULT ->
                                  GHC.Types.:
                                    @ IOMode
                                    (case >=# x4_i2hNX 0# of {
                                       __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                       1# ->
                                         case <=# x4_i2hNX 3# of {
                                           __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                           1# -> tagToEnum# @ IOMode x4_i2hNX
                                         }
                                     })
                                    (GHC.Types.[] @ IOMode);
                                1# -> GHC.Types.[] @ IOMode
                              }
                          };
                        1# ->
                          case <# 1# x5_i2hO1 of {
                            __DEFAULT ->
                              GHC.Types.:
                                @ IOMode
                                (case >=# x4_i2hNX 0# of {
                                   __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                   1# ->
                                     case <=# x4_i2hNX 3# of {
                                       __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                       1# -> tagToEnum# @ IOMode x4_i2hNX
                                     }
                                 })
                                (let {
                                   delta_i2ioX [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   delta_i2ioX = -# x5_i2hO1 x4_i2hNX } in
                                 let {
                                   y'_i2ioY [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   y'_i2ioY = -# 1# delta_i2ioX } in
                                 letrec {
                                   go_up_i2ioZ [Occ=LoopBreaker] :: Int# -> [IOMode]
                                   [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                                   go_up_i2ioZ
                                     = \ (x_i2ip0 :: Int#) ->
                                         case ># x_i2ip0 y'_i2ioY of {
                                           __DEFAULT ->
                                             GHC.Types.:
                                               @ IOMode
                                               (case >=# x_i2ip0 0# of {
                                                  __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ip0;
                                                  1# ->
                                                    case <=# x_i2ip0 3# of {
                                                      __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ip0;
                                                      1# -> tagToEnum# @ IOMode x_i2ip0
                                                    }
                                                })
                                               (go_up_i2ioZ (+# x_i2ip0 delta_i2ioX));
                                           1# ->
                                             GHC.Types.:
                                               @ IOMode
                                               (case >=# x_i2ip0 0# of {
                                                  __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ip0;
                                                  1# ->
                                                    case <=# x_i2ip0 3# of {
                                                      __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ip0;
                                                      1# -> tagToEnum# @ IOMode x_i2ip0
                                                    }
                                                })
                                               (GHC.Types.[] @ IOMode)
                                         }; } in
                                 go_up_i2ioZ x5_i2hO1);
                            1# ->
                              case <# 1# x4_i2hNX of {
                                __DEFAULT ->
                                  GHC.Types.:
                                    @ IOMode
                                    (case >=# x4_i2hNX 0# of {
                                       __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                       1# ->
                                         case <=# x4_i2hNX 3# of {
                                           __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                           1# -> tagToEnum# @ IOMode x4_i2hNX
                                         }
                                     })
                                    (GHC.Types.[] @ IOMode);
                                1# -> GHC.Types.[] @ IOMode
                              }
                          }
                      };
                    AppendMode ->
                      case >=# x5_i2hO1 x4_i2hNX of {
                        __DEFAULT ->
                          case ># 2# x5_i2hO1 of {
                            __DEFAULT ->
                              GHC.Types.:
                                @ IOMode
                                (case >=# x4_i2hNX 0# of {
                                   __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                   1# ->
                                     case <=# x4_i2hNX 3# of {
                                       __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                       1# -> tagToEnum# @ IOMode x4_i2hNX
                                     }
                                 })
                                (let {
                                   delta_i2ioH [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   delta_i2ioH = -# x5_i2hO1 x4_i2hNX } in
                                 let {
                                   y'_i2ioI [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   y'_i2ioI = -# 2# delta_i2ioH } in
                                 letrec {
                                   go_dn_i2ioJ [Occ=LoopBreaker] :: Int# -> [IOMode]
                                   [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                                   go_dn_i2ioJ
                                     = \ (x_i2ioK :: Int#) ->
                                         case <# x_i2ioK y'_i2ioI of {
                                           __DEFAULT ->
                                             GHC.Types.:
                                               @ IOMode
                                               (case >=# x_i2ioK 0# of {
                                                  __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ioK;
                                                  1# ->
                                                    case <=# x_i2ioK 3# of {
                                                      __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ioK;
                                                      1# -> tagToEnum# @ IOMode x_i2ioK
                                                    }
                                                })
                                               (go_dn_i2ioJ (+# x_i2ioK delta_i2ioH));
                                           1# ->
                                             GHC.Types.:
                                               @ IOMode
                                               (case >=# x_i2ioK 0# of {
                                                  __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ioK;
                                                  1# ->
                                                    case <=# x_i2ioK 3# of {
                                                      __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ioK;
                                                      1# -> tagToEnum# @ IOMode x_i2ioK
                                                    }
                                                })
                                               (GHC.Types.[] @ IOMode)
                                         }; } in
                                 go_dn_i2ioJ x5_i2hO1);
                            1# ->
                              case ># 2# x4_i2hNX of {
                                __DEFAULT ->
                                  GHC.Types.:
                                    @ IOMode
                                    (case >=# x4_i2hNX 0# of {
                                       __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                       1# ->
                                         case <=# x4_i2hNX 3# of {
                                           __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                           1# -> tagToEnum# @ IOMode x4_i2hNX
                                         }
                                     })
                                    (GHC.Types.[] @ IOMode);
                                1# -> GHC.Types.[] @ IOMode
                              }
                          };
                        1# ->
                          case <# 2# x5_i2hO1 of {
                            __DEFAULT ->
                              GHC.Types.:
                                @ IOMode
                                (case >=# x4_i2hNX 0# of {
                                   __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                   1# ->
                                     case <=# x4_i2hNX 3# of {
                                       __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                       1# -> tagToEnum# @ IOMode x4_i2hNX
                                     }
                                 })
                                (let {
                                   delta_i2ioX [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   delta_i2ioX = -# x5_i2hO1 x4_i2hNX } in
                                 let {
                                   y'_i2ioY [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   y'_i2ioY = -# 2# delta_i2ioX } in
                                 letrec {
                                   go_up_i2ioZ [Occ=LoopBreaker] :: Int# -> [IOMode]
                                   [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                                   go_up_i2ioZ
                                     = \ (x_i2ip0 :: Int#) ->
                                         case ># x_i2ip0 y'_i2ioY of {
                                           __DEFAULT ->
                                             GHC.Types.:
                                               @ IOMode
                                               (case >=# x_i2ip0 0# of {
                                                  __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ip0;
                                                  1# ->
                                                    case <=# x_i2ip0 3# of {
                                                      __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ip0;
                                                      1# -> tagToEnum# @ IOMode x_i2ip0
                                                    }
                                                })
                                               (go_up_i2ioZ (+# x_i2ip0 delta_i2ioX));
                                           1# ->
                                             GHC.Types.:
                                               @ IOMode
                                               (case >=# x_i2ip0 0# of {
                                                  __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ip0;
                                                  1# ->
                                                    case <=# x_i2ip0 3# of {
                                                      __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ip0;
                                                      1# -> tagToEnum# @ IOMode x_i2ip0
                                                    }
                                                })
                                               (GHC.Types.[] @ IOMode)
                                         }; } in
                                 go_up_i2ioZ x5_i2hO1);
                            1# ->
                              case <# 2# x4_i2hNX of {
                                __DEFAULT ->
                                  GHC.Types.:
                                    @ IOMode
                                    (case >=# x4_i2hNX 0# of {
                                       __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                       1# ->
                                         case <=# x4_i2hNX 3# of {
                                           __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                           1# -> tagToEnum# @ IOMode x4_i2hNX
                                         }
                                     })
                                    (GHC.Types.[] @ IOMode);
                                1# -> GHC.Types.[] @ IOMode
                              }
                          }
                      };
                    ReadWriteMode ->
                      case >=# x5_i2hO1 x4_i2hNX of {
                        __DEFAULT ->
                          case ># 3# x5_i2hO1 of {
                            __DEFAULT ->
                              GHC.Types.:
                                @ IOMode
                                (case >=# x4_i2hNX 0# of {
                                   __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                   1# ->
                                     case <=# x4_i2hNX 3# of {
                                       __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                       1# -> tagToEnum# @ IOMode x4_i2hNX
                                     }
                                 })
                                (let {
                                   delta_i2ioH [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   delta_i2ioH = -# x5_i2hO1 x4_i2hNX } in
                                 let {
                                   y'_i2ioI [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   y'_i2ioI = -# 3# delta_i2ioH } in
                                 letrec {
                                   go_dn_i2ioJ [Occ=LoopBreaker] :: Int# -> [IOMode]
                                   [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                                   go_dn_i2ioJ
                                     = \ (x_i2ioK :: Int#) ->
                                         case <# x_i2ioK y'_i2ioI of {
                                           __DEFAULT ->
                                             GHC.Types.:
                                               @ IOMode
                                               (case >=# x_i2ioK 0# of {
                                                  __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ioK;
                                                  1# ->
                                                    case <=# x_i2ioK 3# of {
                                                      __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ioK;
                                                      1# -> tagToEnum# @ IOMode x_i2ioK
                                                    }
                                                })
                                               (go_dn_i2ioJ (+# x_i2ioK delta_i2ioH));
                                           1# ->
                                             GHC.Types.:
                                               @ IOMode
                                               (case >=# x_i2ioK 0# of {
                                                  __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ioK;
                                                  1# ->
                                                    case <=# x_i2ioK 3# of {
                                                      __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ioK;
                                                      1# -> tagToEnum# @ IOMode x_i2ioK
                                                    }
                                                })
                                               (GHC.Types.[] @ IOMode)
                                         }; } in
                                 go_dn_i2ioJ x5_i2hO1);
                            1# ->
                              case ># 3# x4_i2hNX of {
                                __DEFAULT ->
                                  GHC.Types.:
                                    @ IOMode
                                    (case >=# x4_i2hNX 0# of {
                                       __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                       1# ->
                                         case <=# x4_i2hNX 3# of {
                                           __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                           1# -> tagToEnum# @ IOMode x4_i2hNX
                                         }
                                     })
                                    (GHC.Types.[] @ IOMode);
                                1# -> GHC.Types.[] @ IOMode
                              }
                          };
                        1# ->
                          case <# 3# x5_i2hO1 of {
                            __DEFAULT ->
                              GHC.Types.:
                                @ IOMode
                                (case >=# x4_i2hNX 0# of {
                                   __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                   1# ->
                                     case <=# x4_i2hNX 3# of {
                                       __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                       1# -> tagToEnum# @ IOMode x4_i2hNX
                                     }
                                 })
                                (let {
                                   delta_i2ioX [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   delta_i2ioX = -# x5_i2hO1 x4_i2hNX } in
                                 let {
                                   y'_i2ioY [Dmd=<S,U>] :: Int#
                                   [LclId]
                                   y'_i2ioY = -# 3# delta_i2ioX } in
                                 letrec {
                                   go_up_i2ioZ [Occ=LoopBreaker] :: Int# -> [IOMode]
                                   [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                                   go_up_i2ioZ
                                     = \ (x_i2ip0 :: Int#) ->
                                         case ># x_i2ip0 y'_i2ioY of {
                                           __DEFAULT ->
                                             GHC.Types.:
                                               @ IOMode
                                               (case >=# x_i2ip0 0# of {
                                                  __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ip0;
                                                  1# ->
                                                    case <=# x_i2ip0 3# of {
                                                      __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ip0;
                                                      1# -> tagToEnum# @ IOMode x_i2ip0
                                                    }
                                                })
                                               (go_up_i2ioZ (+# x_i2ip0 delta_i2ioX));
                                           1# ->
                                             GHC.Types.:
                                               @ IOMode
                                               (case >=# x_i2ip0 0# of {
                                                  __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ip0;
                                                  1# ->
                                                    case <=# x_i2ip0 3# of {
                                                      __DEFAULT -> GHC.IO.IOMode.$wlvl x_i2ip0;
                                                      1# -> tagToEnum# @ IOMode x_i2ip0
                                                    }
                                                })
                                               (GHC.Types.[] @ IOMode)
                                         }; } in
                                 go_up_i2ioZ x5_i2hO1);
                            1# ->
                              case <# 3# x4_i2hNX of {
                                __DEFAULT ->
                                  GHC.Types.:
                                    @ IOMode
                                    (case >=# x4_i2hNX 0# of {
                                       __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                       1# ->
                                         case <=# x4_i2hNX 3# of {
                                           __DEFAULT -> GHC.IO.IOMode.$wlvl x4_i2hNX;
                                           1# -> tagToEnum# @ IOMode x4_i2hNX
                                         }
                                     })
                                    (GHC.Types.[] @ IOMode);
                                1# -> GHC.Types.[] @ IOMode
                              }
                          }
                      }
                  } } in
            case x2_i2hNQ of {
              ReadMode -> jump $j1_s4KfB 0#;
              WriteMode -> jump $j1_s4KfB 1#;
              AppendMode -> jump $j1_s4KfB 2#;
              ReadWriteMode -> jump $j1_s4KfB 3#
            } } in
      case x1_i2hNP of {
        ReadMode -> jump $j_s4KfD 0#;
        WriteMode -> jump $j_s4KfD 1#;
        AppendMode -> jump $j_s4KfD 2#;
        ReadWriteMode -> jump $j_s4KfD 3#
      }

-- RHS size: {terms: 9, types: 1, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$fEnumIOMode [InlPrag=NOUSERINLINE CONLIKE]
  :: Enum IOMode
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ ->
       GHC.Enum.C:Enum TYPE: IOMode
                       GHC.IO.IOMode.$fEnumIOMode_$csucc
                       GHC.IO.IOMode.$fEnumIOMode_$cpred
                       GHC.IO.IOMode.$fEnumIOMode_$ctoEnum
                       GHC.IO.IOMode.$fEnumIOMode_$cfromEnum
                       GHC.IO.IOMode.$fEnumIOMode_$cenumFrom
                       GHC.IO.IOMode.$fEnumIOMode_$cenumFromThen
                       GHC.IO.IOMode.$fEnumIOMode_$cenumFromTo
                       GHC.IO.IOMode.$fEnumIOMode_$cenumFromThenTo]
GHC.IO.IOMode.$fEnumIOMode
  = GHC.Enum.C:Enum
      @ IOMode
      GHC.IO.IOMode.$fEnumIOMode_$csucc
      GHC.IO.IOMode.$fEnumIOMode_$cpred
      GHC.IO.IOMode.$fEnumIOMode_$ctoEnum
      GHC.IO.IOMode.$fEnumIOMode_$cfromEnum
      GHC.IO.IOMode.$fEnumIOMode_$cenumFrom
      GHC.IO.IOMode.$fEnumIOMode_$cenumFromThen
      GHC.IO.IOMode.$fEnumIOMode_$cenumFromTo
      GHC.IO.IOMode.$fEnumIOMode_$cenumFromThenTo

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$trModule3 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.IOMode.$trModule3
  = GHC.Types.TrNameS GHC.IO.IOMode.$trModule4

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$trModule1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.IOMode.$trModule1
  = GHC.Types.TrNameS GHC.IO.IOMode.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$trModule :: Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.IO.IOMode.$trModule
  = GHC.Types.Module
      GHC.IO.IOMode.$trModule3 GHC.IO.IOMode.$trModule1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$tcIOMode2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.IO.IOMode.$tcIOMode2 = "IOMode"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$tcIOMode1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.IOMode.$tcIOMode1
  = GHC.Types.TrNameS GHC.IO.IOMode.$tcIOMode2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$tcIOMode :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.IO.IOMode.$tcIOMode
  = GHC.Types.TyCon
      9818555080744742578##
      14348064797489060312##
      GHC.IO.IOMode.$trModule
      GHC.IO.IOMode.$tcIOMode1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$tc'AppendMode1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
GHC.IO.IOMode.$tc'AppendMode1
  = GHC.Types.KindRepTyConApp
      GHC.IO.IOMode.$tcIOMode (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$tc'ReadMode2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.IO.IOMode.$tc'ReadMode2 = "'ReadMode"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$tc'ReadMode1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.IOMode.$tc'ReadMode1
  = GHC.Types.TrNameS GHC.IO.IOMode.$tc'ReadMode2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$tc'ReadMode :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.IO.IOMode.$tc'ReadMode
  = GHC.Types.TyCon
      17697021977009842408##
      16081808542294250782##
      GHC.IO.IOMode.$trModule
      GHC.IO.IOMode.$tc'ReadMode1
      0#
      GHC.IO.IOMode.$tc'AppendMode1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$tc'WriteMode2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.IO.IOMode.$tc'WriteMode2 = "'WriteMode"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$tc'WriteMode1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.IOMode.$tc'WriteMode1
  = GHC.Types.TrNameS GHC.IO.IOMode.$tc'WriteMode2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$tc'WriteMode :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.IO.IOMode.$tc'WriteMode
  = GHC.Types.TyCon
      16610458722029011495##
      11554819901902375488##
      GHC.IO.IOMode.$trModule
      GHC.IO.IOMode.$tc'WriteMode1
      0#
      GHC.IO.IOMode.$tc'AppendMode1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$tc'AppendMode3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.IO.IOMode.$tc'AppendMode3 = "'AppendMode"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$tc'AppendMode2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.IOMode.$tc'AppendMode2
  = GHC.Types.TrNameS GHC.IO.IOMode.$tc'AppendMode3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$tc'AppendMode :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.IO.IOMode.$tc'AppendMode
  = GHC.Types.TyCon
      3610623883618650464##
      11131639874085434472##
      GHC.IO.IOMode.$trModule
      GHC.IO.IOMode.$tc'AppendMode2
      0#
      GHC.IO.IOMode.$tc'AppendMode1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$tc'ReadWriteMode2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.IO.IOMode.$tc'ReadWriteMode2 = "'ReadWriteMode"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$tc'ReadWriteMode1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.IOMode.$tc'ReadWriteMode1
  = GHC.Types.TrNameS GHC.IO.IOMode.$tc'ReadWriteMode2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.IO.IOMode.$tc'ReadWriteMode :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.IO.IOMode.$tc'ReadWriteMode
  = GHC.Types.TyCon
      626157189396725199##
      9407417215311302278##
      GHC.IO.IOMode.$trModule
      GHC.IO.IOMode.$tc'ReadWriteMode1
      0#
      GHC.IO.IOMode.$tc'AppendMode1


