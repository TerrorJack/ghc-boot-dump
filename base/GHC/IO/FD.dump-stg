
==================== Pre unarise: ====================
2018-03-16 16:05:55.063862053 UTC

GHC.IO.FD.$WFD [InlPrag=INLINE[2]]
  :: Foreign.C.Types.CInt -> GHC.Types.Int -> GHC.IO.FD.FD
[GblId[DataConWrapper],
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_saWVe dt_saWVf]
        case dt_saWVe of {
          GHC.Int.I32# dt_saWVh [Occ=Once] ->
              case dt_saWVf of {
                GHC.Types.I# dt_saWVj [Occ=Once] ->
                    GHC.IO.FD.FD [dt_saWVh dt_saWVj];
              };
        };

GHC.IO.FD.$fBufferedIOFD5 [Occ=LoopBreaker]
  :: GHC.Base.String
     -> GHC.Types.IO System.Posix.Types.CSsize
     -> GHC.Types.IO System.Posix.Types.CSsize
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           System.Posix.Types.CSsize #)
[GblId,
 Arity=4,
 Str=<L,U><C(S(SS(S))),C(U(U,1*U(U)))><L,1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [loc_saWVk f_saWVl on_block_saWVm s_saWVn]
        case f_saWVl s_saWVn of {
          (#,#) ipv_saWVp [Occ=Once*] ipv1_saWVq [Occ=Once] ->
              case ipv1_saWVq of wild_saWVr {
                GHC.Int.I64# x_saWVs [Occ=Once!] ->
                    case x_saWVs of {
                      __DEFAULT -> ds1_saWVo;
                      -1# ->
                          case __pkg_ccall base-4.11.0.0 [ipv_saWVp] of {
                            (#,#) ds_saWVw [Occ=Once*] ds2_saWVx [Occ=Once] ->
                                case narrow32Int# [ds2_saWVx] of {
                                  __DEFAULT -> Foreign.C.Error.throwErrno1 loc_saWVk ds_saWVw;
                                  4# ->
                                      GHC.IO.FD.$fBufferedIOFD5
                                          loc_saWVk f_saWVl on_block_saWVm ds_saWVw;
                                  11# -> on_block_saWVm ds_saWVw;
                                };
                          };
                    };
              };
        };

lvl_raWUX :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.fdWrite"#;

lvl1_raWUY :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_raWUX;

GHC.IO.FD.$fBufferedIOFD9 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.fdReadNonBlocking"#;

GHC.IO.FD.$fBufferedIOFD8 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fBufferedIOFD9;

lvl2_raWUZ :: GHC.Int.Int64
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I64#! [-1#];

GHC.IO.FD.$fBufferedIOFD3
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           System.Posix.Types.CSsize #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [s_saWVz] (#,#) [s_saWVz lvl2_raWUZ];

GHC.IO.FD.$fBufferedIOFD2 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

GHC.IO.FD.$fBufferedIOFD10 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [-1#];

GHC.IO.FD.$wreadRawBufferPtrNoBlock [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.Word#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=7,
 Str=<L,U><S,U><S,1*U><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saWVA
           ww_saWVB
           ww1_saWVC
           ww2_saWVD
           ww3_saWVE
           ww4_saWVF
           w1_saWVG]
        let-no-escape {
          $sdo_read_saWVH [Occ=Once*!T[2], Dmd=<L,1*C1(C1(U(U,U)))>]
            :: GHC.Types.IO System.Posix.Types.CSsize
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
          [LclId[JoinId(2)],
           Arity=2,
           Str=<C(S(SS(S))),C(U(U,1*U(U)))><S,U>,
           Unf=OtherCon []] =
              sat-only [w_saWVA] \r [call_saWVI s_saWVJ]
                  case
                      GHC.IO.FD.$fBufferedIOFD5
                          w_saWVA call_saWVI GHC.IO.FD.$fBufferedIOFD3 s_saWVJ
                  of
                  { (#,#) ipv_saWVL [Occ=Once*] ipv1_saWVM [Occ=Once] ->
                        case ipv1_saWVM of {
                          GHC.Int.I64# x_saWVO [Occ=Once!] ->
                              case x_saWVO of wild1_saWVP {
                                __DEFAULT ->
                                    let {
                                      sat_saWVQ [Occ=Once] :: GHC.Types.Int
                                      [LclId] =
                                          CCCS GHC.Types.I#! [wild1_saWVP];
                                    } in  (#,#) [ipv_saWVL sat_saWVQ];
                                -1# -> (#,#) [ipv_saWVL GHC.IO.FD.$fBufferedIOFD2];
                                0# -> (#,#) [ipv_saWVL GHC.IO.FD.$fBufferedIOFD10];
                              };
                        };
                  };
        } in 
          case ww1_saWVC of {
            __DEFAULT ->
                let {
                  sat_saWVZ [Occ=Once] :: GHC.Types.IO System.Posix.Types.CSsize
                  [LclId] =
                      [ww_saWVB ww2_saWVD ww3_saWVE ww4_saWVF] \r [ds9_saWVS]
                          case plusAddr# [ww2_saWVD ww3_saWVE] of sat_saWVU {
                            __DEFAULT ->
                                case
                                    __pkg_ccall base-4.11.0.0 [ww_saWVB
                                                               sat_saWVU
                                                               ww4_saWVF
                                                               ds9_saWVS]
                                of
                                { (#,#) ds10_saWVW [Occ=Once] ds11_saWVX [Occ=Once] ->
                                      let {
                                        sat_saWVY [Occ=Once] :: GHC.Int.Int64
                                        [LclId] =
                                            CCCS GHC.Int.I64#! [ds11_saWVX];
                                      } in  (#,#) [ds10_saWVW sat_saWVY];
                                };
                          };
                } in  $sdo_read_saWVH sat_saWVZ w1_saWVG;
            0# ->
                case __pkg_ccall base-4.11.0.0 [ww_saWVB 0## 0# 0## w1_saWVG] of {
                  (#,#) ds_saWW2 [Occ=Once*] ds1_saWW3 [Occ=Once] ->
                      case narrow32Int# [ds1_saWW3] of {
                        __DEFAULT ->
                            let {
                              sat_saWWc [Occ=Once] :: GHC.Types.IO System.Posix.Types.CSsize
                              [LclId] =
                                  [ww_saWVB ww2_saWVD ww3_saWVE ww4_saWVF] \r [eta_saWW5]
                                      case plusAddr# [ww2_saWVD ww3_saWVE] of sat_saWW7 {
                                        __DEFAULT ->
                                            case
                                                __pkg_ccall_GC base-4.11.0.0 [ww_saWVB
                                                                              sat_saWW7
                                                                              ww4_saWVF
                                                                              eta_saWW5]
                                            of
                                            { (#,#) ds10_saWW9 [Occ=Once] ds11_saWWa [Occ=Once] ->
                                                  let {
                                                    sat_saWWb [Occ=Once] :: GHC.Int.Int64
                                                    [LclId] =
                                                        CCCS GHC.Int.I64#! [ds11_saWWa];
                                                  } in  (#,#) [ds10_saWW9 sat_saWWb];
                                            };
                                      };
                            } in  $sdo_read_saWVH sat_saWWc ds_saWW2;
                        0# -> (#,#) [ds_saWW2 GHC.IO.FD.$fBufferedIOFD2];
                      };
                };
          };

GHC.IO.FD.readRawBufferPtrNoBlock1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saWWd w1_saWWe w2_saWWf w3_saWWg w4_saWWh w5_saWWi]
        case w1_saWWe of {
          GHC.IO.FD.FD ww1_saWWk [Occ=Once] ww2_saWWl [Occ=Once] ->
              case w2_saWWf of {
                GHC.Ptr.Ptr ww4_saWWn [Occ=Once] ->
                    case w3_saWWg of {
                      GHC.Types.I# ww6_saWWp [Occ=Once] ->
                          case w4_saWWh of {
                            GHC.Word.W64# ww8_saWWr [Occ=Once] ->
                                GHC.IO.FD.$wreadRawBufferPtrNoBlock
                                    w_saWWd
                                    ww1_saWWk
                                    ww2_saWWl
                                    ww4_saWWn
                                    ww6_saWWp
                                    ww8_saWWr
                                    w5_saWWi;
                          };
                    };
              };
        };

GHC.IO.FD.$w$creadNonBlocking [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Base.Maybe GHC.Types.Int #)
[GblId,
 Arity=5,
 Str=<S,U><S,1*U><S,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_saWWs ww1_saWWt ww2_saWWu ww3_saWWv w_saWWw]
        case int2Word# [ww3_saWWv] of sat_saWWx {
          __DEFAULT ->
              case
                  GHC.IO.FD.$wreadRawBufferPtrNoBlock
                      GHC.IO.FD.$fBufferedIOFD8
                      ww_saWWs
                      ww1_saWWt
                      ww2_saWWu
                      0#
                      sat_saWWx
                      w_saWWw
              of
              { (#,#) ipv_saWWz [Occ=Once*] ipv1_saWWA [Occ=Once!] ->
                    case ipv1_saWWA of wild_saWWB {
                      GHC.Types.I# ds_saWWC [Occ=Once!] ->
                          case ds_saWWC of {
                            __DEFAULT ->
                                let {
                                  sat_saWWE [Occ=Once] :: GHC.Base.Maybe GHC.Types.Int
                                  [LclId] =
                                      CCCS GHC.Base.Just! [wild_saWWB];
                                } in  (#,#) [ipv_saWWz sat_saWWE];
                            -1# -> (#,#) [ipv_saWWz GHC.Base.Nothing];
                          };
                    };
              };
        };

GHC.IO.FD.$fRawIOFD3 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Base.Maybe GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saWWF w1_saWWG w2_saWWH w3_saWWI]
        case w_saWWF of {
          GHC.IO.FD.FD ww1_saWWK [Occ=Once] ww2_saWWL [Occ=Once] ->
              case w1_saWWG of {
                GHC.Ptr.Ptr ww4_saWWN [Occ=Once] ->
                    case w2_saWWH of {
                      GHC.Types.I# ww6_saWWP [Occ=Once] ->
                          GHC.IO.FD.$w$creadNonBlocking
                              ww1_saWWK ww2_saWWL ww4_saWWN ww6_saWWP w3_saWWI;
                    };
              };
        };

GHC.IO.FD.$fBufferedIOFD4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.fdWriteNonBlocking"#;

GHC.IO.FD.$fBufferedIOFD_loc :: GHC.Base.String
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fBufferedIOFD4;

GHC.IO.FD.$fBufferedIOFD14
  :: System.Posix.Types.CSsize -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [ds1_saWWQ]
        case ds1_saWWQ of {
          GHC.Int.I64# x_saWWS [Occ=Once!] ->
              case x_saWWS of {
                __DEFAULT -> GHC.Types.False [];
                -1# -> GHC.Types.True [];
              };
        };

GHC.IO.FD.$fBufferedIOFD13 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.fdRead"#;

GHC.IO.FD.$fBufferedIOFD12 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fBufferedIOFD13;

GHC.IO.FD.$wreadRawBufferPtr [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.Word#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=7,
 Str=<L,U><S,U><S,1*U><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saWWU
           ww_saWWV
           ww1_saWWW
           ww2_saWWX
           ww3_saWWY
           ww4_saWWZ
           w1_saWX0]
        let-no-escape {
          $sdo_read_saWX1 [Occ=Once*!T[2], Dmd=<L,1*C1(C1(U(U,U)))>]
            :: GHC.Types.IO System.Posix.Types.CSsize
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
          [LclId[JoinId(2)],
           Arity=2,
           Str=<C(S),C(U(U,U))><S,U>,
           Unf=OtherCon []] =
              sat-only [w_saWWU ww_saWWV] \r [eta_saWX2 eta1_saWX3]
                  let {
                    sat_saWXe [Occ=Once] :: GHC.Types.IO ()
                    [LclId] =
                        [ww_saWWV] \r [eta2_saWX4]
                            case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                              (#,#) _ [Occ=Dead] ds1_saWX8 [Occ=Once!] ->
                                  case ds1_saWX8 of {
                                    __DEFAULT ->
                                        case narrow32Int# [ww_saWWV] of sat_saWXa {
                                          __DEFAULT ->
                                              let {
                                                sat_saWXb [Occ=Once] :: System.Posix.Types.Fd
                                                [LclId] =
                                                    CCCS GHC.Int.I32#! [sat_saWXa];
                                              } in 
                                                GHC.Event.Thread.threadWaitRead1
                                                    GHC.Event.Internal.evtRead sat_saWXb eta2_saWX4;
                                        };
                                    0# ->
                                        case narrow32Int# [ww_saWWV] of sat_saWXc {
                                          __DEFAULT ->
                                              case waitRead# [sat_saWXc eta2_saWX4] of s'_saWXd {
                                                __DEFAULT -> (#,#) [s'_saWXd GHC.Tuple.()];
                                              };
                                        };
                                  };
                            };
                  } in 
                    case
                        Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                            GHC.IO.FD.$fBufferedIOFD14 w_saWWU eta_saWX2 sat_saWXe eta1_saWX3
                    of
                    { (#,#) ipv_saWXg [Occ=Once] ipv1_saWXh [Occ=Once] ->
                          let {
                            sat_saWXk [Occ=Once] :: GHC.Types.Int
                            [LclId] =
                                [ipv1_saWXh] \u []
                                    case ipv1_saWXh of {
                                      GHC.Int.I64# x#_saWXj [Occ=Once] -> GHC.Types.I# [x#_saWXj];
                                    };
                          } in  (#,#) [ipv_saWXg sat_saWXk];
                    };
        } in 
          case ww1_saWWW of {
            __DEFAULT ->
                let {
                  sat_saWXt [Occ=Once] :: GHC.Types.IO System.Posix.Types.CSsize
                  [LclId] =
                      [ww_saWWV ww2_saWWX ww3_saWWY ww4_saWWZ] \r [eta_saWXm]
                          case plusAddr# [ww2_saWWX ww3_saWWY] of sat_saWXo {
                            __DEFAULT ->
                                case
                                    __pkg_ccall base-4.11.0.0 [ww_saWWV
                                                               sat_saWXo
                                                               ww4_saWWZ
                                                               eta_saWXm]
                                of
                                { (#,#) ds10_saWXq [Occ=Once] ds11_saWXr [Occ=Once] ->
                                      let {
                                        sat_saWXs [Occ=Once] :: GHC.Int.Int64
                                        [LclId] =
                                            CCCS GHC.Int.I64#! [ds11_saWXr];
                                      } in  (#,#) [ds10_saWXq sat_saWXs];
                                };
                          };
                } in  $sdo_read_saWX1 sat_saWXt w1_saWX0;
            0# ->
                case __pkg_ccall base-4.11.0.0 [ww_saWWV 0## 0# 0## w1_saWX0] of {
                  (#,#) ds_saWXw [Occ=Once*] ds1_saWXx [Occ=Once] ->
                      let-no-escape {
                        $w$j_saWXy [InlPrag=NOUSERINLINE[0],
                                    Occ=Once*!T[2],
                                    Dmd=<L,1*C1(C1(U(U,U)))>]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> GHC.Prim.Int#
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                        [LclId[JoinId(2)], Arity=2, Str=<L,U><S,1*U>, Unf=OtherCon []] =
                            sat-only [ww_saWWV
                                      ww2_saWWX
                                      ww3_saWWY
                                      ww4_saWWZ
                                      $sdo_read_saWX1] \r [w2_saWXz ww5_saWXA]
                                let-no-escape {
                                  read_saWXB [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                                  [LclId[JoinId(1)], Arity=1, Str=<L,U>, Unf=OtherCon []] =
                                      sat-only [ww_saWWV
                                                ww2_saWWX
                                                ww3_saWWY
                                                ww4_saWWZ
                                                $sdo_read_saWX1] \r [eta_saWXC]
                                          case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                                            (#,#) _ [Occ=Dead] ds3_saWXG [Occ=Once!] ->
                                                case ds3_saWXG of {
                                                  __DEFAULT ->
                                                      let {
                                                        sat_saWXP [Occ=Once]
                                                          :: GHC.Types.IO System.Posix.Types.CSsize
                                                        [LclId] =
                                                            [ww_saWWV
                                                             ww2_saWWX
                                                             ww3_saWWY
                                                             ww4_saWWZ] \r [ds9_saWXI]
                                                                case
                                                                    plusAddr# [ww2_saWWX ww3_saWWY]
                                                                of
                                                                sat_saWXK
                                                                { __DEFAULT ->
                                                                      case
                                                                          __pkg_ccall_GC base-4.11.0.0 [ww_saWWV
                                                                                                        sat_saWXK
                                                                                                        ww4_saWWZ
                                                                                                        ds9_saWXI]
                                                                      of
                                                                      { (#,#) ds10_saWXM [Occ=Once]
                                                                              ds11_saWXN [Occ=Once] ->
                                                                            let {
                                                                              sat_saWXO [Occ=Once]
                                                                                :: GHC.Int.Int64
                                                                              [LclId] =
                                                                                  CCCS GHC.Int.I64#! [ds11_saWXN];
                                                                            } in 
                                                                              (#,#) [ds10_saWXM
                                                                                     sat_saWXO];
                                                                      };
                                                                };
                                                      } in  $sdo_read_saWX1 sat_saWXP eta_saWXC;
                                                  0# ->
                                                      let {
                                                        sat_saWXX [Occ=Once]
                                                          :: GHC.Types.IO System.Posix.Types.CSsize
                                                        [LclId] =
                                                            [ww_saWWV
                                                             ww2_saWWX
                                                             ww3_saWWY
                                                             ww4_saWWZ] \r [eta1_saWXQ]
                                                                case
                                                                    plusAddr# [ww2_saWWX ww3_saWWY]
                                                                of
                                                                sat_saWXS
                                                                { __DEFAULT ->
                                                                      case
                                                                          __pkg_ccall base-4.11.0.0 [ww_saWWV
                                                                                                     sat_saWXS
                                                                                                     ww4_saWWZ
                                                                                                     eta1_saWXQ]
                                                                      of
                                                                      { (#,#) ds10_saWXU [Occ=Once]
                                                                              ds11_saWXV [Occ=Once] ->
                                                                            let {
                                                                              sat_saWXW [Occ=Once]
                                                                                :: GHC.Int.Int64
                                                                              [LclId] =
                                                                                  CCCS GHC.Int.I64#! [ds11_saWXV];
                                                                            } in 
                                                                              (#,#) [ds10_saWXU
                                                                                     sat_saWXW];
                                                                      };
                                                                };
                                                      } in  $sdo_read_saWX1 sat_saWXX eta_saWXC;
                                                };
                                          };
                                } in 
                                  case ww5_saWXA of {
                                    __DEFAULT -> read_saWXB w2_saWXz;
                                    0# ->
                                        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                                          (#,#) _ [Occ=Dead] ds3_saWY2 [Occ=Once!] ->
                                              case ds3_saWY2 of {
                                                __DEFAULT ->
                                                    case narrow32Int# [ww_saWWV] of sat_saWY4 {
                                                      __DEFAULT ->
                                                          let {
                                                            sat_saWY5 [Occ=Once]
                                                              :: System.Posix.Types.Fd
                                                            [LclId] =
                                                                CCCS GHC.Int.I32#! [sat_saWY4];
                                                          } in 
                                                            case
                                                                GHC.Event.Thread.threadWaitRead1
                                                                    GHC.Event.Internal.evtRead
                                                                    sat_saWY5
                                                                    w2_saWXz
                                                            of
                                                            { (#,#) ipv_saWY7 [Occ=Once]
                                                                    _ [Occ=Dead] ->
                                                                  read_saWXB ipv_saWY7;
                                                            };
                                                    };
                                                0# ->
                                                    case narrow32Int# [ww_saWWV] of sat_saWY9 {
                                                      __DEFAULT ->
                                                          case
                                                              waitRead# [sat_saWY9 w2_saWXz]
                                                          of
                                                          s'_saWYa
                                                          { __DEFAULT -> read_saWXB s'_saWYa;
                                                          };
                                                    };
                                              };
                                        };
                                  };
                      } in 
                        case narrow32Int# [ds1_saWXx] of wild2_saWYb {
                          __DEFAULT -> $w$j_saWXy ds_saWXw wild2_saWYb;
                          -1# ->
                              case Foreign.C.Error.throwErrno1 w_saWWU ds_saWXw of {
                                (#,#) ipv_saWYd [Occ=Once] ipv1_saWYe [Occ=Once] ->
                                    case ipv1_saWYe of {
                                      GHC.Int.I32# ww6_saWYg [Occ=Once] ->
                                          $w$j_saWXy ipv_saWYd ww6_saWYg;
                                    };
                              };
                        };
                };
          };

GHC.IO.FD.$fRawIOFD5 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saWYh w1_saWYi w2_saWYj w3_saWYk w4_saWYl w5_saWYm]
        case w1_saWYi of {
          GHC.IO.FD.FD ww1_saWYo [Occ=Once] ww2_saWYp [Occ=Once] ->
              case w2_saWYj of {
                GHC.Ptr.Ptr ww4_saWYr [Occ=Once] ->
                    case w3_saWYk of {
                      GHC.Types.I# ww6_saWYt [Occ=Once] ->
                          case w4_saWYl of {
                            GHC.Word.W64# ww8_saWYv [Occ=Once] ->
                                GHC.IO.FD.$wreadRawBufferPtr
                                    w_saWYh
                                    ww1_saWYo
                                    ww2_saWYp
                                    ww4_saWYr
                                    ww6_saWYt
                                    ww8_saWYv
                                    w5_saWYm;
                          };
                    };
              };
        };

GHC.IO.FD.$fRawIOFD4
  :: GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [fd_saWYw ptr_saWYx bytes_saWYy s_saWYz]
        case fd_saWYw of {
          GHC.IO.FD.FD ww1_saWYB [Occ=Once] ww2_saWYC [Occ=Once] ->
              case ptr_saWYx of {
                GHC.Ptr.Ptr ww4_saWYE [Occ=Once] ->
                    case bytes_saWYy of {
                      GHC.Types.I# x#_saWYG [Occ=Once] ->
                          case int2Word# [x#_saWYG] of sat_saWYH {
                            __DEFAULT ->
                                GHC.IO.FD.$wreadRawBufferPtr
                                    GHC.IO.FD.$fBufferedIOFD12
                                    ww1_saWYB
                                    ww2_saWYC
                                    ww4_saWYE
                                    0#
                                    sat_saWYH
                                    s_saWYz;
                          };
                    };
              };
        };

GHC.IO.FD.$wwriteRawBufferPtr [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.Word#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId,
 Arity=7,
 Str=<L,U><S,U><S,1*U><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saWYI
           ww_saWYJ
           ww1_saWYK
           ww2_saWYL
           ww3_saWYM
           ww4_saWYN
           w1_saWYO]
        let-no-escape {
          $sdo_write_saWYP [Occ=Once*!T[2], Dmd=<L,1*C1(C1(U(U,U)))>]
            :: GHC.Types.IO System.Posix.Types.CSsize
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
          [LclId[JoinId(2)],
           Arity=2,
           Str=<C(S),C(U(U,U))><S,U>,
           Unf=OtherCon []] =
              sat-only [w_saWYI ww_saWYJ] \r [eta_saWYQ eta1_saWYR]
                  let {
                    sat_saWZ2 [Occ=Once] :: GHC.Types.IO ()
                    [LclId] =
                        [ww_saWYJ] \r [eta2_saWYS]
                            case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                              (#,#) _ [Occ=Dead] ds1_saWYW [Occ=Once!] ->
                                  case ds1_saWYW of {
                                    __DEFAULT ->
                                        case narrow32Int# [ww_saWYJ] of sat_saWYY {
                                          __DEFAULT ->
                                              let {
                                                sat_saWYZ [Occ=Once] :: System.Posix.Types.Fd
                                                [LclId] =
                                                    CCCS GHC.Int.I32#! [sat_saWYY];
                                              } in 
                                                GHC.Event.Thread.threadWaitRead1
                                                    GHC.Event.Internal.evtWrite
                                                    sat_saWYZ
                                                    eta2_saWYS;
                                        };
                                    0# ->
                                        case narrow32Int# [ww_saWYJ] of sat_saWZ0 {
                                          __DEFAULT ->
                                              case waitWrite# [sat_saWZ0 eta2_saWYS] of s'_saWZ1 {
                                                __DEFAULT -> (#,#) [s'_saWZ1 GHC.Tuple.()];
                                              };
                                        };
                                  };
                            };
                  } in 
                    case
                        Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                            GHC.IO.FD.$fBufferedIOFD14 w_saWYI eta_saWYQ sat_saWZ2 eta1_saWYR
                    of
                    { (#,#) ipv_saWZ4 [Occ=Once] ipv1_saWZ5 [Occ=Once] ->
                          let {
                            sat_saWZ9 [Occ=Once] :: Foreign.C.Types.CInt
                            [LclId] =
                                [ipv1_saWZ5] \u []
                                    case ipv1_saWZ5 of {
                                      GHC.Int.I64# x#_saWZ7 [Occ=Once] ->
                                          case narrow32Int# [x#_saWZ7] of sat_saWZ8 {
                                            __DEFAULT -> GHC.Int.I32# [sat_saWZ8];
                                          };
                                    };
                          } in  (#,#) [ipv_saWZ4 sat_saWZ9];
                    };
        } in 
          case ww1_saWYK of {
            __DEFAULT ->
                let {
                  sat_saWZi [Occ=Once] :: GHC.Types.IO System.Posix.Types.CSsize
                  [LclId] =
                      [ww_saWYJ ww2_saWYL ww3_saWYM ww4_saWYN] \r [eta_saWZb]
                          case plusAddr# [ww2_saWYL ww3_saWYM] of sat_saWZd {
                            __DEFAULT ->
                                case
                                    __pkg_ccall base-4.11.0.0 [ww_saWYJ
                                                               sat_saWZd
                                                               ww4_saWYN
                                                               eta_saWZb]
                                of
                                { (#,#) ds10_saWZf [Occ=Once] ds11_saWZg [Occ=Once] ->
                                      let {
                                        sat_saWZh [Occ=Once] :: GHC.Int.Int64
                                        [LclId] =
                                            CCCS GHC.Int.I64#! [ds11_saWZg];
                                      } in  (#,#) [ds10_saWZf sat_saWZh];
                                };
                          };
                } in  $sdo_write_saWYP sat_saWZi w1_saWYO;
            0# ->
                case __pkg_ccall base-4.11.0.0 [ww_saWYJ 1## 0# 0## w1_saWYO] of {
                  (#,#) ds_saWZl [Occ=Once*] ds1_saWZm [Occ=Once] ->
                      let-no-escape {
                        write_saWZn [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
                        [LclId[JoinId(1)], Arity=1, Str=<L,U>, Unf=OtherCon []] =
                            sat-only [ww_saWYJ
                                      ww2_saWYL
                                      ww3_saWYM
                                      ww4_saWYN
                                      $sdo_write_saWYP] \r [eta_saWZo]
                                case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                                  (#,#) _ [Occ=Dead] ds3_saWZs [Occ=Once!] ->
                                      case ds3_saWZs of {
                                        __DEFAULT ->
                                            let {
                                              sat_saWZB [Occ=Once]
                                                :: GHC.Types.IO System.Posix.Types.CSsize
                                              [LclId] =
                                                  [ww_saWYJ
                                                   ww2_saWYL
                                                   ww3_saWYM
                                                   ww4_saWYN] \r [ds9_saWZu]
                                                      case
                                                          plusAddr# [ww2_saWYL ww3_saWYM]
                                                      of
                                                      sat_saWZw
                                                      { __DEFAULT ->
                                                            case
                                                                __pkg_ccall_GC base-4.11.0.0 [ww_saWYJ
                                                                                              sat_saWZw
                                                                                              ww4_saWYN
                                                                                              ds9_saWZu]
                                                            of
                                                            { (#,#) ds10_saWZy [Occ=Once]
                                                                    ds11_saWZz [Occ=Once] ->
                                                                  let {
                                                                    sat_saWZA [Occ=Once]
                                                                      :: GHC.Int.Int64
                                                                    [LclId] =
                                                                        CCCS GHC.Int.I64#! [ds11_saWZz];
                                                                  } in 
                                                                    (#,#) [ds10_saWZy sat_saWZA];
                                                            };
                                                      };
                                            } in  $sdo_write_saWYP sat_saWZB eta_saWZo;
                                        0# ->
                                            let {
                                              sat_saWZJ [Occ=Once]
                                                :: GHC.Types.IO System.Posix.Types.CSsize
                                              [LclId] =
                                                  [ww_saWYJ
                                                   ww2_saWYL
                                                   ww3_saWYM
                                                   ww4_saWYN] \r [eta1_saWZC]
                                                      case
                                                          plusAddr# [ww2_saWYL ww3_saWYM]
                                                      of
                                                      sat_saWZE
                                                      { __DEFAULT ->
                                                            case
                                                                __pkg_ccall base-4.11.0.0 [ww_saWYJ
                                                                                           sat_saWZE
                                                                                           ww4_saWYN
                                                                                           eta1_saWZC]
                                                            of
                                                            { (#,#) ds10_saWZG [Occ=Once]
                                                                    ds11_saWZH [Occ=Once] ->
                                                                  let {
                                                                    sat_saWZI [Occ=Once]
                                                                      :: GHC.Int.Int64
                                                                    [LclId] =
                                                                        CCCS GHC.Int.I64#! [ds11_saWZH];
                                                                  } in 
                                                                    (#,#) [ds10_saWZG sat_saWZI];
                                                            };
                                                      };
                                            } in  $sdo_write_saWYP sat_saWZJ eta_saWZo;
                                      };
                                };
                      } in 
                        case narrow32Int# [ds1_saWZm] of {
                          __DEFAULT -> write_saWZn ds_saWZl;
                          0# ->
                              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                                (#,#) _ [Occ=Dead] ds3_saWZO [Occ=Once!] ->
                                    case ds3_saWZO of {
                                      __DEFAULT ->
                                          case narrow32Int# [ww_saWYJ] of sat_saWZQ {
                                            __DEFAULT ->
                                                let {
                                                  sat_saWZR [Occ=Once] :: System.Posix.Types.Fd
                                                  [LclId] =
                                                      CCCS GHC.Int.I32#! [sat_saWZQ];
                                                } in 
                                                  case
                                                      GHC.Event.Thread.threadWaitRead1
                                                          GHC.Event.Internal.evtWrite
                                                          sat_saWZR
                                                          ds_saWZl
                                                  of
                                                  { (#,#) ipv_saWZT [Occ=Once] _ [Occ=Dead] ->
                                                        write_saWZn ipv_saWZT;
                                                  };
                                          };
                                      0# ->
                                          case narrow32Int# [ww_saWYJ] of sat_saWZV {
                                            __DEFAULT ->
                                                case waitWrite# [sat_saWZV ds_saWZl] of s'_saWZW {
                                                  __DEFAULT -> write_saWZn s'_saWZW;
                                                };
                                          };
                                    };
                              };
                        };
                };
          };

GHC.IO.FD.writeRawBufferPtr1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saWZX w1_saWZY w2_saWZZ w3_saX00 w4_saX01 w5_saX02]
        case w1_saWZY of {
          GHC.IO.FD.FD ww1_saX04 [Occ=Once] ww2_saX05 [Occ=Once] ->
              case w2_saWZZ of {
                GHC.Ptr.Ptr ww4_saX07 [Occ=Once] ->
                    case w3_saX00 of {
                      GHC.Types.I# ww6_saX09 [Occ=Once] ->
                          case w4_saX01 of {
                            GHC.Word.W64# ww8_saX0b [Occ=Once] ->
                                GHC.IO.FD.$wwriteRawBufferPtr
                                    w_saWZX
                                    ww1_saX04
                                    ww2_saX05
                                    ww4_saX07
                                    ww6_saX09
                                    ww8_saX0b
                                    w5_saX02;
                          };
                    };
              };
        };

GHC.IO.FD.$wfdWrite [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=5, Str=<S,U><S,U><S,U><S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_saX0c ww1_saX0d ww2_saX0e ww3_saX0f w_saX0g]
        case int2Word# [ww3_saX0f] of sat_saX0h {
          __DEFAULT ->
              case
                  GHC.IO.FD.$wwriteRawBufferPtr
                      lvl1_raWUY ww_saX0c ww1_saX0d ww2_saX0e 0# sat_saX0h w_saX0g
              of
              { (#,#) ipv_saX0j [Occ=Once*] ipv1_saX0k [Occ=Once] ->
                    case ipv1_saX0k of {
                      GHC.Int.I32# x#_saX0m ->
                          case <# [x#_saX0m ww3_saX0f] of {
                            __DEFAULT -> (#,#) [ipv_saX0j GHC.Tuple.()];
                            1# ->
                                case -# [ww3_saX0f x#_saX0m] of sat_saX0p {
                                  __DEFAULT ->
                                      case plusAddr# [ww2_saX0e x#_saX0m] of sat_saX0o {
                                        __DEFAULT ->
                                            GHC.IO.FD.$wfdWrite
                                                ww_saX0c ww1_saX0d sat_saX0o sat_saX0p ipv_saX0j;
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.FD.$fRawIOFD2 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saX0q w1_saX0r w2_saX0s w3_saX0t]
        case w_saX0q of {
          GHC.IO.FD.FD ww1_saX0v [Occ=Once] ww2_saX0w [Occ=Once] ->
              case w1_saX0r of {
                GHC.Ptr.Ptr ww4_saX0y [Occ=Once] ->
                    case w2_saX0s of {
                      GHC.Types.I# ww6_saX0A [Occ=Once] ->
                          GHC.IO.FD.$wfdWrite
                              ww1_saX0v ww2_saX0w ww4_saX0y ww6_saX0A w3_saX0t;
                    };
              };
        };

GHC.IO.FD.$w$cwriteNonBlocking [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=5,
 Str=<S,U><S,1*U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_saX0B ww1_saX0C ww2_saX0D ww3_saX0E w_saX0F]
        case ww1_saX0C of {
          __DEFAULT ->
              let {
                sat_saX0O [Occ=Once] :: GHC.Types.IO System.Posix.Types.CSsize
                [LclId] =
                    [ww_saX0B ww2_saX0D ww3_saX0E] \r [eta_saX0H]
                        case int2Word# [ww3_saX0E] of sat_saX0J {
                          __DEFAULT ->
                              case
                                  __pkg_ccall base-4.11.0.0 [ww_saX0B ww2_saX0D sat_saX0J eta_saX0H]
                              of
                              { (#,#) ds10_saX0L [Occ=Once] ds11_saX0M [Occ=Once] ->
                                    let {
                                      sat_saX0N [Occ=Once] :: GHC.Int.Int64
                                      [LclId] =
                                          CCCS GHC.Int.I64#! [ds11_saX0M];
                                    } in  (#,#) [ds10_saX0L sat_saX0N];
                              };
                        };
              } in 
                case
                    GHC.IO.FD.$fBufferedIOFD5
                        GHC.IO.FD.$fBufferedIOFD_loc
                        sat_saX0O
                        GHC.IO.FD.$fBufferedIOFD3
                        w_saX0F
                of
                { (#,#) ipv_saX0Q [Occ=Once*] ipv1_saX0R [Occ=Once] ->
                      case ipv1_saX0R of {
                        GHC.Int.I64# x_saX0T [Occ=Once!] ->
                            case x_saX0T of wild2_saX0U {
                              __DEFAULT ->
                                  case narrow32Int# [wild2_saX0U] of sat_saX0V {
                                    __DEFAULT ->
                                        let {
                                          sat_saX0W [Occ=Once] :: GHC.Types.Int
                                          [LclId] =
                                              CCCS GHC.Types.I#! [sat_saX0V];
                                        } in  (#,#) [ipv_saX0Q sat_saX0W];
                                  };
                              -1# -> (#,#) [ipv_saX0Q GHC.IO.FD.$fBufferedIOFD2];
                            };
                      };
                };
          0# ->
              case __pkg_ccall base-4.11.0.0 [ww_saX0B 1## 0# 0## w_saX0F] of {
                (#,#) ds_saX0Z [Occ=Once*] ds1_saX10 [Occ=Once] ->
                    case narrow32Int# [ds1_saX10] of {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                            (#,#) _ [Occ=Dead] ds3_saX15 [Occ=Once!] ->
                                case ds3_saX15 of {
                                  __DEFAULT ->
                                      let {
                                        sat_saX1e [Occ=Once]
                                          :: GHC.Types.IO System.Posix.Types.CSsize
                                        [LclId] =
                                            [ww_saX0B ww2_saX0D ww3_saX0E] \r [ds9_saX17]
                                                case int2Word# [ww3_saX0E] of sat_saX19 {
                                                  __DEFAULT ->
                                                      case
                                                          __pkg_ccall_GC base-4.11.0.0 [ww_saX0B
                                                                                        ww2_saX0D
                                                                                        sat_saX19
                                                                                        ds9_saX17]
                                                      of
                                                      { (#,#) ds10_saX1b [Occ=Once]
                                                              ds11_saX1c [Occ=Once] ->
                                                            let {
                                                              sat_saX1d [Occ=Once] :: GHC.Int.Int64
                                                              [LclId] =
                                                                  CCCS GHC.Int.I64#! [ds11_saX1c];
                                                            } in  (#,#) [ds10_saX1b sat_saX1d];
                                                      };
                                                };
                                      } in 
                                        case
                                            GHC.IO.FD.$fBufferedIOFD5
                                                GHC.IO.FD.$fBufferedIOFD_loc
                                                sat_saX1e
                                                GHC.IO.FD.$fBufferedIOFD3
                                                ds_saX0Z
                                        of
                                        { (#,#) ipv_saX1g [Occ=Once*] ipv1_saX1h [Occ=Once] ->
                                              case ipv1_saX1h of {
                                                GHC.Int.I64# x_saX1j [Occ=Once!] ->
                                                    case x_saX1j of wild6_saX1k {
                                                      __DEFAULT ->
                                                          case
                                                              narrow32Int# [wild6_saX1k]
                                                          of
                                                          sat_saX1l
                                                          { __DEFAULT ->
                                                                let {
                                                                  sat_saX1m [Occ=Once]
                                                                    :: GHC.Types.Int
                                                                  [LclId] =
                                                                      CCCS GHC.Types.I#! [sat_saX1l];
                                                                } in  (#,#) [ipv_saX1g sat_saX1m];
                                                          };
                                                      -1# ->
                                                          (#,#) [ipv_saX1g
                                                                 GHC.IO.FD.$fBufferedIOFD2];
                                                    };
                                              };
                                        };
                                  0# ->
                                      let {
                                        sat_saX1u [Occ=Once]
                                          :: GHC.Types.IO System.Posix.Types.CSsize
                                        [LclId] =
                                            [ww_saX0B ww2_saX0D ww3_saX0E] \r [eta_saX1n]
                                                case int2Word# [ww3_saX0E] of sat_saX1p {
                                                  __DEFAULT ->
                                                      case
                                                          __pkg_ccall base-4.11.0.0 [ww_saX0B
                                                                                     ww2_saX0D
                                                                                     sat_saX1p
                                                                                     eta_saX1n]
                                                      of
                                                      { (#,#) ds10_saX1r [Occ=Once]
                                                              ds11_saX1s [Occ=Once] ->
                                                            let {
                                                              sat_saX1t [Occ=Once] :: GHC.Int.Int64
                                                              [LclId] =
                                                                  CCCS GHC.Int.I64#! [ds11_saX1s];
                                                            } in  (#,#) [ds10_saX1r sat_saX1t];
                                                      };
                                                };
                                      } in 
                                        case
                                            GHC.IO.FD.$fBufferedIOFD5
                                                GHC.IO.FD.$fBufferedIOFD_loc
                                                sat_saX1u
                                                GHC.IO.FD.$fBufferedIOFD3
                                                ds_saX0Z
                                        of
                                        { (#,#) ipv_saX1w [Occ=Once*] ipv1_saX1x [Occ=Once] ->
                                              case ipv1_saX1x of {
                                                GHC.Int.I64# x_saX1z [Occ=Once!] ->
                                                    case x_saX1z of wild6_saX1A {
                                                      __DEFAULT ->
                                                          case
                                                              narrow32Int# [wild6_saX1A]
                                                          of
                                                          sat_saX1B
                                                          { __DEFAULT ->
                                                                let {
                                                                  sat_saX1C [Occ=Once]
                                                                    :: GHC.Types.Int
                                                                  [LclId] =
                                                                      CCCS GHC.Types.I#! [sat_saX1B];
                                                                } in  (#,#) [ipv_saX1w sat_saX1C];
                                                          };
                                                      -1# ->
                                                          (#,#) [ipv_saX1w
                                                                 GHC.IO.FD.$fBufferedIOFD2];
                                                    };
                                              };
                                        };
                                };
                          };
                      0# -> (#,#) [ds_saX0Z GHC.IO.FD.$fBufferedIOFD2];
                    };
              };
        };

GHC.IO.FD.$fRawIOFD1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saX1D w1_saX1E w2_saX1F w3_saX1G]
        case w_saX1D of {
          GHC.IO.FD.FD ww1_saX1I [Occ=Once] ww2_saX1J [Occ=Once] ->
              case w1_saX1E of {
                GHC.Ptr.Ptr ww4_saX1L [Occ=Once] ->
                    case w2_saX1F of {
                      GHC.Types.I# ww6_saX1N [Occ=Once] ->
                          GHC.IO.FD.$w$cwriteNonBlocking
                              ww1_saX1I ww2_saX1J ww4_saX1L ww6_saX1N w3_saX1G;
                    };
              };
        };

GHC.IO.FD.$fRawIOFD [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.IO.Device.RawIO GHC.IO.FD.FD
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.IO.Device.C:RawIO! [GHC.IO.FD.$fRawIOFD4
                                          GHC.IO.FD.$fRawIOFD3
                                          GHC.IO.FD.$fRawIOFD2
                                          GHC.IO.FD.$fRawIOFD1];

GHC.IO.FD.$fBufferedIOFD_$swriteBuf1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Word.Word8 #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,U)><S(SLLLSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w1_saX1O w2_saX1P w3_saX1Q]
        case w2_saX1P of {
          GHC.IO.Buffer.Buffer ww1_saX1S
                               ww2_saX1T
                               ww3_saX1U [Occ=Once]
                               ww4_saX1V [Occ=Once]
                               ww5_saX1W
                               ww6_saX1X [Occ=Once] ->
              case w1_saX1O of {
                GHC.IO.FD.FD ww8_saX1Z [Occ=Once] ww9_saX20 [Occ=Once] ->
                    case -# [ww6_saX1X ww5_saX1W] of sat_saX22 {
                      __DEFAULT ->
                          case plusAddr# [ww1_saX1S ww5_saX1W] of sat_saX21 {
                            __DEFAULT ->
                                case
                                    GHC.IO.FD.$wfdWrite
                                        ww8_saX1Z ww9_saX20 sat_saX21 sat_saX22 w3_saX1Q
                                of
                                { (#,#) ipv_saX24 [Occ=Once] _ [Occ=Dead] ->
                                      case touch# [ww2_saX1T ipv_saX24] of s'_saX26 {
                                        __DEFAULT ->
                                            let {
                                              sat_saX27 [Occ=Once]
                                                :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                              [LclId] =
                                                  CCCS GHC.IO.Buffer.Buffer! [ww1_saX1S
                                                                              ww2_saX1T
                                                                              ww3_saX1U
                                                                              ww4_saX1V
                                                                              0#
                                                                              0#];
                                            } in  (#,#) [s'_saX26 sat_saX27];
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.FD.fdIsNonBlocking :: GHC.IO.FD.FD -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LS),1*U(A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_saX28]
        case ds_saX28 of {
          GHC.IO.FD.FD _ [Occ=Dead] dt1_saX2b [Occ=Once] ->
              GHC.Types.I# [dt1_saX2b];
        };

GHC.IO.FD.fdFD :: GHC.IO.FD.FD -> Foreign.C.Types.CInt
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_saX2c]
        case ds_saX2c of {
          GHC.IO.FD.FD dt_saX2e [Occ=Once] _ [Occ=Dead] ->
              GHC.Int.I32# [dt_saX2e];
        };

GHC.IO.FD.$fShowFD_$cshow :: GHC.IO.FD.FD -> GHC.Base.String
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)>m2,
 Unf=OtherCon []] =
    [] \r [fd_saX2g]
        case fd_saX2g of {
          GHC.IO.FD.FD dt_saX2i [Occ=Once] _ [Occ=Dead] ->
              case GHC.Show.$wshowSignedInt 0# dt_saX2i GHC.Types.[] of {
                (#,#) ww5_saX2l [Occ=Once] ww6_saX2m [Occ=Once] ->
                    : [ww5_saX2l ww6_saX2m];
              };
        };

GHC.IO.FD.$fBufferedIOFD15
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Word.Word8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,A><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [_dev_saX2n state_saX2o s_saX2p]
        case newMutVar# [GHC.ForeignPtr.NoFinalizers s_saX2p] of {
          (#,#) ipv_saX2r [Occ=Once] ipv1_saX2s [Occ=Once] ->
              case newPinnedByteArray# [8192# ipv_saX2r] of {
                (#,#) ipv2_saX2u [Occ=Once] ipv3_saX2v ->
                    let {
                      sat_saX2x [Occ=Once] :: GHC.ForeignPtr.ForeignPtrContents
                      [LclId] =
                          CCCS GHC.ForeignPtr.MallocPtr! [ipv3_saX2v ipv1_saX2s];
                    } in 
                      case byteArrayContents# [ipv3_saX2v] of sat_saX2w {
                        __DEFAULT ->
                            let {
                              sat_saX2y [Occ=Once] :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                              [LclId] =
                                  CCCS GHC.IO.Buffer.Buffer! [sat_saX2w
                                                              sat_saX2x
                                                              state_saX2o
                                                              8192#
                                                              0#
                                                              0#];
                            } in  (#,#) [ipv2_saX2u sat_saX2y];
                      };
              };
        };

GHC.IO.FD.$fIODeviceFD12
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=2, Str=<L,1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [fd_saX2z eta_saX2A]
        let {
          sat_saX2E [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_saX2z] \s []
                  case fd_saX2z of {
                    GHC.IO.FD.FD dt_saX2C [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_saX2C];
                  };
        } in  System.Posix.Internals.fdFileSize1 sat_saX2E eta_saX2A;

GHC.IO.FD.$fIODeviceFD9
  :: GHC.IO.FD.FD
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<L,1*U(U,A)><L,1*U><S,U>, Unf=OtherCon []] =
    [] \r [fd_saX2F on_saX2G eta_saX2H]
        let {
          sat_saX2L [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_saX2F] \s []
                  case fd_saX2F of {
                    GHC.IO.FD.FD dt_saX2J [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_saX2J];
                  };
        } in  System.Posix.Internals.setEcho1 sat_saX2L on_saX2G eta_saX2H;

GHC.IO.FD.$fIODeviceFD8
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId, Arity=2, Str=<L,1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [fd_saX2M eta_saX2N]
        let {
          sat_saX2R [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_saX2M] \s []
                  case fd_saX2M of {
                    GHC.IO.FD.FD dt_saX2P [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_saX2P];
                  };
        } in 
          System.Posix.Internals.getEcho3
              sat_saX2R System.Posix.Internals.getEcho2 eta_saX2N;

GHC.IO.FD.$fIODeviceFD7
  :: GHC.IO.FD.FD
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<L,1*U(U,A)><L,1*U><S,U>, Unf=OtherCon []] =
    [] \r [fd_saX2S raw_saX2T eta_saX2U]
        let {
          sat_saX30 [Occ=Once] :: GHC.Types.Bool
          [LclId] =
              [raw_saX2T] \u []
                  case raw_saX2T of {
                    GHC.Types.False -> GHC.Types.True [];
                    GHC.Types.True -> GHC.Types.False [];
                  }; } in
        let {
          sat_saX2Y [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_saX2S] \s []
                  case fd_saX2S of {
                    GHC.IO.FD.FD dt_saX2W [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_saX2W];
                  };
        } in 
          System.Posix.Internals.setCooked1 sat_saX2Y sat_saX30 eta_saX2U;

GHC.IO.FD.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.IO.FD.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.FD.$trModule4];

GHC.IO.FD.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD"#;

GHC.IO.FD.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.FD.$trModule2];

GHC.IO.FD.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.IO.FD.$trModule3
                                     GHC.IO.FD.$trModule1];

$krep_raWV0 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcInt
                                              GHC.Types.[]];

$krep1_raWV1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCInt
                                              GHC.Types.[]];

GHC.IO.FD.$tcFD2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "FD"#;

GHC.IO.FD.$tcFD1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.FD.$tcFD2];

GHC.IO.FD.$tcFD :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10838815552519039062##
                                    15546290101957756376##
                                    GHC.IO.FD.$trModule
                                    GHC.IO.FD.$tcFD1
                                    0#
                                    GHC.Types.krep$*];

$krep2_raWV2 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.IO.FD.$tcFD
                                              GHC.Types.[]];

$krep3_raWV3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_raWV0 $krep2_raWV2];

GHC.IO.FD.$tc'FD1 [InlPrag=NOUSERINLINE[~]] :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_raWV1 $krep3_raWV3];

GHC.IO.FD.$tc'FD3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'FD"#;

GHC.IO.FD.$tc'FD2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.FD.$tc'FD3];

GHC.IO.FD.$tc'FD :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9025179437427398028##
                                    18071003818566613836##
                                    GHC.IO.FD.$trModule
                                    GHC.IO.FD.$tc'FD2
                                    0#
                                    GHC.IO.FD.$tc'FD1];

GHC.IO.FD.$fShowFD_$cshowsPrec
  :: GHC.Types.Int -> GHC.IO.FD.FD -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,A><S(SL),1*U(U,A)><L,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_saX31 x_saX32 s_saX33]
        case x_saX32 of {
          GHC.IO.FD.FD dt_saX35 [Occ=Once] _ [Occ=Dead] ->
              case GHC.Show.$wshowSignedInt 0# dt_saX35 GHC.Types.[] of {
                (#,#) ww5_saX38 [Occ=Once] ww6_saX39 [Occ=Once] ->
                    let {
                      sat_saX3a [Occ=Once] :: [GHC.Types.Char]
                      [LclId] =
                          CCCS :! [ww5_saX38 ww6_saX39];
                    } in  GHC.Base.++ sat_saX3a s_saX33;
              };
        };

GHC.IO.FD.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int# -> GHC.Base.String -> [GHC.Types.Char]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U>,
 Unf=OtherCon []] =
    [] \r [ww_saX3b w_saX3c]
        case GHC.Show.$wshowSignedInt 0# ww_saX3b GHC.Types.[] of {
          (#,#) ww5_saX3e [Occ=Once] ww6_saX3f [Occ=Once] ->
              let {
                sat_saX3g [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    CCCS :! [ww5_saX3e ww6_saX3f];
              } in  GHC.Base.++ sat_saX3g w_saX3c;
        };

GHC.IO.FD.$fShowFD1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><L,1*U>,
 Unf=OtherCon []] =
    [] \r [w_saX3h w1_saX3i]
        case w_saX3h of {
          GHC.IO.FD.FD ww1_saX3k [Occ=Once] _ [Occ=Dead] ->
              GHC.IO.FD.$wlvl ww1_saX3k w1_saX3i;
        };

GHC.IO.FD.$fShowFD_$cshowList :: [GHC.IO.FD.FD] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=OtherCon []] =
    [] \r [ls_saX3m s_saX3n]
        GHC.Show.showList__ GHC.IO.FD.$fShowFD1 ls_saX3m s_saX3n;

GHC.IO.FD.$fShowFD [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.IO.FD.FD
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.IO.FD.$fShowFD_$cshowsPrec
                                    GHC.IO.FD.$fShowFD_$cshow
                                    GHC.IO.FD.$fShowFD_$cshowList];

output_flags_raWV4 :: GHC.Int.Int32
[GblId] =
    [] \u []
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
          (#,#) _ [Occ=Dead] ds1_saX3r [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds3_saX3v [Occ=Once] ->
                    case narrow32Int# [ds3_saX3v] of sat_saX3y {
                      __DEFAULT ->
                          case int2Word# [sat_saX3y] of sat_saX3z {
                            __DEFAULT ->
                                case narrow32Int# [ds1_saX3r] of sat_saX3w {
                                  __DEFAULT ->
                                      case int2Word# [sat_saX3w] of sat_saX3x {
                                        __DEFAULT ->
                                            case or# [sat_saX3x sat_saX3z] of sat_saX3A {
                                              __DEFAULT ->
                                                  case word2Int# [sat_saX3A] of sat_saX3B {
                                                    __DEFAULT -> GHC.Int.I32# [sat_saX3B];
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

write_flags_raWV5 :: GHC.Int.Int32
[GblId] =
    [] \u []
        case output_flags_raWV4 of {
          GHC.Int.I32# x#_saX3D [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds1_saX3H [Occ=Once] ->
                    case narrow32Int# [ds1_saX3H] of sat_saX3J {
                      __DEFAULT ->
                          case int2Word# [sat_saX3J] of sat_saX3K {
                            __DEFAULT ->
                                case int2Word# [x#_saX3D] of sat_saX3I {
                                  __DEFAULT ->
                                      case or# [sat_saX3I sat_saX3K] of sat_saX3L {
                                        __DEFAULT ->
                                            case word2Int# [sat_saX3L] of sat_saX3M {
                                              __DEFAULT -> GHC.Int.I32# [sat_saX3M];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

append_flags_raWV6 :: GHC.Int.Int32
[GblId] =
    [] \u []
        case write_flags_raWV5 of {
          GHC.Int.I32# x#_saX3O [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds1_saX3S [Occ=Once] ->
                    case narrow32Int# [ds1_saX3S] of sat_saX3U {
                      __DEFAULT ->
                          case int2Word# [sat_saX3U] of sat_saX3V {
                            __DEFAULT ->
                                case int2Word# [x#_saX3O] of sat_saX3T {
                                  __DEFAULT ->
                                      case or# [sat_saX3T sat_saX3V] of sat_saX3W {
                                        __DEFAULT ->
                                            case word2Int# [sat_saX3W] of sat_saX3X {
                                              __DEFAULT -> GHC.Int.I32# [sat_saX3X];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

rw_flags_raWV7 :: GHC.Int.Int32
[GblId] =
    [] \u []
        case output_flags_raWV4 of {
          GHC.Int.I32# x#_saX3Z [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds1_saX43 [Occ=Once] ->
                    case narrow32Int# [ds1_saX43] of sat_saX45 {
                      __DEFAULT ->
                          case int2Word# [sat_saX45] of sat_saX46 {
                            __DEFAULT ->
                                case int2Word# [x#_saX3Z] of sat_saX44 {
                                  __DEFAULT ->
                                      case or# [sat_saX44 sat_saX46] of sat_saX47 {
                                        __DEFAULT ->
                                            case word2Int# [sat_saX47] of sat_saX48 {
                                              __DEFAULT -> GHC.Int.I32# [sat_saX48];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

read_flags_raWV8 :: GHC.Int.Int32
[GblId] =
    [] \u []
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
          (#,#) _ [Occ=Dead] ds1_saX4c [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds3_saX4g [Occ=Once] ->
                    case narrow32Int# [ds3_saX4g] of sat_saX4j {
                      __DEFAULT ->
                          case int2Word# [sat_saX4j] of sat_saX4k {
                            __DEFAULT ->
                                case narrow32Int# [ds1_saX4c] of sat_saX4h {
                                  __DEFAULT ->
                                      case int2Word# [sat_saX4h] of sat_saX4i {
                                        __DEFAULT ->
                                            case or# [sat_saX4i sat_saX4k] of sat_saX4l {
                                              __DEFAULT ->
                                                  case word2Int# [sat_saX4l] of sat_saX4m {
                                                    __DEFAULT -> GHC.Int.I32# [sat_saX4m];
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.FD.$fIODeviceFD16
  :: System.Posix.Types.COff -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [ds1_saX4n]
        case ds1_saX4n of {
          GHC.Int.I64# x_saX4p [Occ=Once!] ->
              case x_saX4p of {
                __DEFAULT -> GHC.Types.False [];
                -1# -> GHC.Types.True [];
              };
        };

GHC.IO.FD.$fIODeviceFD15 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetPosn"#;

GHC.IO.FD.$fIODeviceFD14 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fIODeviceFD15;

GHC.IO.FD.$w$ctell [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=2, Str=<L,U><L,U>, Unf=OtherCon []] =
    [] \r [ww_saX4r w_saX4s]
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
          (#,#) _ [Occ=Dead] ds1_saX4w [Occ=Once] ->
              let {
                sat_saX4E [Occ=Once] :: GHC.Types.IO System.Posix.Types.COff
                [LclId] =
                    [ww_saX4r ds1_saX4w] \r [ds9_saX4x]
                        case narrow32Int# [ds1_saX4w] of sat_saX4z {
                          __DEFAULT ->
                              case
                                  __pkg_ccall base-4.11.0.0 [ww_saX4r 0# sat_saX4z ds9_saX4x]
                              of
                              { (#,#) ds10_saX4B [Occ=Once] ds11_saX4C [Occ=Once] ->
                                    let {
                                      sat_saX4D [Occ=Once] :: GHC.Int.Int64
                                      [LclId] =
                                          CCCS GHC.Int.I64#! [ds11_saX4C];
                                    } in  (#,#) [ds10_saX4B sat_saX4D];
                              };
                        };
              } in 
                case
                    Foreign.C.Error.throwErrnoIfMinus1Retry2
                        GHC.IO.FD.$fIODeviceFD16 GHC.IO.FD.$fIODeviceFD14 sat_saX4E w_saX4s
                of
                { (#,#) ipv_saX4G [Occ=Once] ipv1_saX4H [Occ=Once] ->
                      let {
                        sat_saX4I [Occ=Once] :: GHC.Integer.Type.Integer
                        [LclId] =
                            [ipv1_saX4H] \u [] GHC.Int.$fIntegralInt64_$ctoInteger ipv1_saX4H;
                      } in  (#,#) [ipv_saX4G sat_saX4I];
                };
        };

GHC.IO.FD.$fIODeviceFD13 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=2, Str=<S(SL),1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [w_saX4J w1_saX4K]
        case w_saX4J of {
          GHC.IO.FD.FD ww1_saX4M [Occ=Once] _ [Occ=Dead] ->
              GHC.IO.FD.$w$ctell ww1_saX4M w1_saX4K;
        };

GHC.IO.FD.$fIODeviceFD19 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "seek"#;

GHC.IO.FD.$fIODeviceFD18 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fIODeviceFD19;

GHC.IO.FD.$w$cseek [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.IO.Device.SeekMode
     -> GHC.Integer.Type.Integer
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=4, Str=<L,U><S,1*U><S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ww_saX4O w_saX4P w1_saX4Q w2_saX4R]
        case GHC.Integer.Type.integerToInt w1_saX4Q of wild_saX4S {
          __DEFAULT ->
              let-no-escape {
                $j_saX4T [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                  :: GHC.Prim.Int# -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                    sat-only [ww_saX4O w2_saX4R wild_saX4S] \r [ds8_saX4U]
                        let {
                          sat_saX51 [Occ=Once] :: GHC.Types.IO System.Posix.Types.COff
                          [LclId] =
                              [ww_saX4O wild_saX4S ds8_saX4U] \r [ds9_saX4V]
                                  case
                                      __pkg_ccall base-4.11.0.0 [ww_saX4O
                                                                 wild_saX4S
                                                                 ds8_saX4U
                                                                 ds9_saX4V]
                                  of
                                  { (#,#) ds10_saX4Y [Occ=Once] ds11_saX4Z [Occ=Once] ->
                                        let {
                                          sat_saX50 [Occ=Once] :: GHC.Int.Int64
                                          [LclId] =
                                              CCCS GHC.Int.I64#! [ds11_saX4Z];
                                        } in  (#,#) [ds10_saX4Y sat_saX50];
                                  };
                        } in 
                          case
                              Foreign.C.Error.throwErrnoIfMinus1Retry2
                                  GHC.IO.FD.$fIODeviceFD16
                                  GHC.IO.FD.$fIODeviceFD18
                                  sat_saX51
                                  w2_saX4R
                          of
                          { (#,#) ipv_saX53 [Occ=Once] _ [Occ=Dead] ->
                                (#,#) [ipv_saX53 GHC.Tuple.()];
                          };
              } in 
                case w_saX4P of {
                  GHC.IO.Device.AbsoluteSeek ->
                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                        (#,#) _ [Occ=Dead] ds1_saX59 [Occ=Once] ->
                            case narrow32Int# [ds1_saX59] of sat_saX5a {
                              __DEFAULT -> $j_saX4T sat_saX5a;
                            };
                      };
                  GHC.IO.Device.RelativeSeek ->
                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                        (#,#) _ [Occ=Dead] ds1_saX5e [Occ=Once] ->
                            case narrow32Int# [ds1_saX5e] of sat_saX5f {
                              __DEFAULT -> $j_saX4T sat_saX5f;
                            };
                      };
                  GHC.IO.Device.SeekFromEnd ->
                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                        (#,#) _ [Occ=Dead] ds1_saX5j [Occ=Once] ->
                            case narrow32Int# [ds1_saX5j] of sat_saX5k {
                              __DEFAULT -> $j_saX4T sat_saX5k;
                            };
                      };
                };
        };

GHC.IO.FD.$fIODeviceFD17 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.Device.SeekMode
     -> GHC.Integer.Type.Integer
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<S(SL),1*U(U,A)><S,1*U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saX5l w1_saX5m w2_saX5n w3_saX5o]
        case w_saX5l of {
          GHC.IO.FD.FD ww1_saX5q [Occ=Once] _ [Occ=Dead] ->
              GHC.IO.FD.$w$cseek ww1_saX5q w1_saX5m w2_saX5n w3_saX5o;
        };

GHC.IO.FD.stdin :: GHC.IO.FD.FD
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.FD.FD! [0# 0#];

GHC.IO.FD.stdout :: GHC.IO.FD.FD
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.FD.FD! [1# 0#];

GHC.IO.FD.stderr :: GHC.IO.FD.FD
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.FD.FD! [2# 0#];

lvl3_raWV9 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.setSize"#;

lvl4_raWVa :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl3_raWV9;

GHC.IO.FD.$fIODeviceFD11
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [ds_saX5s ds2_saX5t]
        case narrow32Int# [ds2_saX5t] of sat_saX5u {
          __DEFAULT -> Foreign.C.Error.$wlvl lvl4_raWVa sat_saX5u ds_saX5s;
        };

GHC.IO.FD.$wsetSize [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Integer.Type.Integer
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<S,U><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [ww_saX5v w_saX5w w1_saX5x]
        case GHC.Integer.Type.integerToInt w_saX5w of wild_saX5y {
          __DEFAULT ->
              case __pkg_ccall base-4.11.0.0 [ww_saX5v wild_saX5y w1_saX5x] of {
                (#,#) ds7_saX5B [Occ=Once*] ds8_saX5C [Occ=Once] ->
                    case narrow32Int# [ds8_saX5C] of {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [ds7_saX5B] of {
                            (#,#) ds_saX5G [Occ=Once] ds2_saX5H [Occ=Once] ->
                                GHC.IO.FD.$fIODeviceFD11 ds_saX5G ds2_saX5H;
                          };
                      0# -> (#,#) [ds7_saX5B GHC.Tuple.()];
                    };
              };
        };

GHC.IO.FD.$fIODeviceFD10 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Integer.Type.Integer
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Str=<S(SL),1*U(U,A)><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saX5J w1_saX5K w2_saX5L]
        case w_saX5J of {
          GHC.IO.FD.FD ww1_saX5N [Occ=Once] _ [Occ=Dead] ->
              GHC.IO.FD.$wsetSize ww1_saX5N w1_saX5K w2_saX5L;
        };

GHC.IO.FD.writeRawBufferPtr
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Types.IO Foreign.C.Types.CInt
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.FD.writeRawBufferPtr1
            eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.FD.readRawBufferPtrNoBlock
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.FD.readRawBufferPtrNoBlock1
            eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.FD.readRawBufferPtr
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.FD.$fRawIOFD5 eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.FD.$w$cfillReadBuffer0 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Base.Maybe GHC.Types.Int,
            GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=9,
 Str=<S,U><S,1*U><S,U><L,U><L,U><S,U><L,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_saX5P
           ww1_saX5Q
           ww2_saX5R
           ww3_saX5S
           ww4_saX5T
           ww5_saX5U
           ww6_saX5V
           ww7_saX5W
           w_saX5X]
        case -# [ww5_saX5U ww7_saX5W] of sat_saX5Z {
          __DEFAULT ->
              case int2Word# [sat_saX5Z] of sat_saX60 {
                __DEFAULT ->
                    case plusAddr# [ww2_saX5R ww7_saX5W] of sat_saX5Y {
                      __DEFAULT ->
                          case
                              GHC.IO.FD.$wreadRawBufferPtrNoBlock
                                  GHC.IO.FD.$fBufferedIOFD8
                                  ww_saX5P
                                  ww1_saX5Q
                                  sat_saX5Y
                                  0#
                                  sat_saX60
                                  w_saX5X
                          of
                          { (#,#) ipv_saX62 [Occ=Once*] ipv1_saX63 [Occ=Once!] ->
                                case ipv1_saX63 of wild_saX64 {
                                  GHC.Types.I# ds_saX65 [Occ=Once!] ->
                                      case ds_saX65 of ds2_saX66 {
                                        __DEFAULT ->
                                            case touch# [ww3_saX5S ipv_saX62] of s'_saX67 {
                                              __DEFAULT ->
                                                  case +# [ww7_saX5W ds2_saX66] of sat_saX69 {
                                                    __DEFAULT ->
                                                        let {
                                                          sat_saX6a [Occ=Once]
                                                            :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                                          [LclId] =
                                                              CCCS GHC.IO.Buffer.Buffer! [ww2_saX5R
                                                                                          ww3_saX5S
                                                                                          ww4_saX5T
                                                                                          ww5_saX5U
                                                                                          ww6_saX5V
                                                                                          sat_saX69]; } in
                                                        let {
                                                          sat_saX68 [Occ=Once]
                                                            :: GHC.Base.Maybe GHC.Types.Int
                                                          [LclId] =
                                                              CCCS GHC.Base.Just! [wild_saX64]; } in
                                                        let {
                                                          sat_saX6b [Occ=Once]
                                                            :: (GHC.Base.Maybe GHC.Types.Int,
                                                                GHC.IO.Buffer.Buffer GHC.Word.Word8)
                                                          [LclId] =
                                                              CCCS (,)! [sat_saX68 sat_saX6a];
                                                        } in  (#,#) [s'_saX67 sat_saX6b];
                                                  };
                                            };
                                        -1# ->
                                            case touch# [ww3_saX5S ipv_saX62] of s'_saX6c {
                                              __DEFAULT ->
                                                  let {
                                                    sat_saX6d [Occ=Once]
                                                      :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                                    [LclId] =
                                                        CCCS GHC.IO.Buffer.Buffer! [ww2_saX5R
                                                                                    ww3_saX5S
                                                                                    ww4_saX5T
                                                                                    ww5_saX5U
                                                                                    ww6_saX5V
                                                                                    ww7_saX5W]; } in
                                                  let {
                                                    sat_saX6e [Occ=Once]
                                                      :: (GHC.Base.Maybe GHC.Types.Int,
                                                          GHC.IO.Buffer.Buffer GHC.Word.Word8)
                                                    [LclId] =
                                                        CCCS (,)! [GHC.Base.Nothing sat_saX6d];
                                                  } in  (#,#) [s'_saX6c sat_saX6e];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.FD.$fBufferedIOFD7 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Base.Maybe GHC.Types.Int,
            GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,1*U)><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saX6f w1_saX6g w2_saX6h]
        case w_saX6f of {
          GHC.IO.FD.FD ww1_saX6j [Occ=Once] ww2_saX6k [Occ=Once] ->
              case w1_saX6g of {
                GHC.IO.Buffer.Buffer ww4_saX6m [Occ=Once]
                                     ww5_saX6n [Occ=Once]
                                     ww6_saX6o [Occ=Once]
                                     ww7_saX6p [Occ=Once]
                                     ww8_saX6q [Occ=Once]
                                     ww9_saX6r [Occ=Once] ->
                    GHC.IO.FD.$w$cfillReadBuffer0
                        ww1_saX6j
                        ww2_saX6k
                        ww4_saX6m
                        ww5_saX6n
                        ww6_saX6o
                        ww7_saX6p
                        ww8_saX6q
                        ww9_saX6r
                        w2_saX6h;
              };
        };

GHC.IO.FD.$w$cflushWriteBuffer0 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=9,
 Str=<S,U><S,1*U><S,U><L,U><L,U><L,U><S,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_saX6s
           ww1_saX6t
           ww2_saX6u
           ww3_saX6v
           ww4_saX6w
           ww5_saX6x
           ww6_saX6y
           ww7_saX6z
           w_saX6A]
        case -# [ww7_saX6z ww6_saX6y] of sat_saX6C {
          __DEFAULT ->
              case plusAddr# [ww2_saX6u ww6_saX6y] of sat_saX6B {
                __DEFAULT ->
                    case
                        GHC.IO.FD.$w$cwriteNonBlocking
                            ww_saX6s ww1_saX6t sat_saX6B sat_saX6C w_saX6A
                    of
                    { (#,#) ipv_saX6E [Occ=Once] ipv1_saX6F ->
                          case touch# [ww3_saX6v ipv_saX6E] of s'_saX6G {
                            __DEFAULT ->
                                let {
                                  sat_saX6L [Occ=Once] :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                  [LclId] =
                                      [ww2_saX6u
                                       ww3_saX6v
                                       ww4_saX6w
                                       ww5_saX6x
                                       ww6_saX6y
                                       ww7_saX6z
                                       ipv1_saX6F] \u []
                                          case ipv1_saX6F of {
                                            GHC.Types.I# y_saX6I [Occ=Once] ->
                                                case +# [ww6_saX6y y_saX6I] of x_saX6J [Dmd=<S,U>] {
                                                  __DEFAULT ->
                                                      case ==# [x_saX6J ww7_saX6z] of {
                                                        __DEFAULT ->
                                                            GHC.IO.Buffer.Buffer [ww2_saX6u
                                                                                  ww3_saX6v
                                                                                  ww4_saX6w
                                                                                  ww5_saX6x
                                                                                  x_saX6J
                                                                                  ww7_saX6z];
                                                        1# ->
                                                            GHC.IO.Buffer.Buffer [ww2_saX6u
                                                                                  ww3_saX6v
                                                                                  ww4_saX6w
                                                                                  ww5_saX6x
                                                                                  0#
                                                                                  0#];
                                                      };
                                                };
                                          }; } in
                                let {
                                  sat_saX6M [Occ=Once]
                                    :: (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8)
                                  [LclId] =
                                      CCCS (,)! [ipv1_saX6F sat_saX6L];
                                } in  (#,#) [s'_saX6G sat_saX6M];
                          };
                    };
              };
        };

GHC.IO.FD.$fBufferedIOFD1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,1*U)><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saX6N w1_saX6O w2_saX6P]
        case w_saX6N of {
          GHC.IO.FD.FD ww1_saX6R [Occ=Once] ww2_saX6S [Occ=Once] ->
              case w1_saX6O of {
                GHC.IO.Buffer.Buffer ww4_saX6U [Occ=Once]
                                     ww5_saX6V [Occ=Once]
                                     ww6_saX6W [Occ=Once]
                                     ww7_saX6X [Occ=Once]
                                     ww8_saX6Y [Occ=Once]
                                     ww9_saX6Z [Occ=Once] ->
                    GHC.IO.FD.$w$cflushWriteBuffer0
                        ww1_saX6R
                        ww2_saX6S
                        ww4_saX6U
                        ww5_saX6V
                        ww6_saX6W
                        ww7_saX6X
                        ww8_saX6Y
                        ww9_saX6Z
                        w2_saX6P;
              };
        };

GHC.IO.FD.$fIODeviceFD21
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [fd_saX70 s_saX71]
        case fd_saX70 of {
          GHC.IO.FD.FD dt_saX73 [Occ=Once] _ [Occ=Dead] ->
              case __pkg_ccall base-4.11.0.0 [dt_saX73 s_saX71] of {
                (#,#) ds4_saX77 [Occ=Once] ds5_saX78 [Occ=Once] ->
                    let {
                      sat_saX7a [Occ=Once] :: GHC.Types.Bool
                      [LclId] =
                          [ds5_saX78] \u []
                              case narrow32Int# [ds5_saX78] of {
                                __DEFAULT -> GHC.Types.True [];
                                0# -> GHC.Types.False [];
                              };
                    } in  (#,#) [ds4_saX77 sat_saX7a];
              };
        };

GHC.IO.FD.$fIODeviceFD25 :: Foreign.C.Types.CInt -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [ds1_saX7b]
        case ds1_saX7b of {
          GHC.Int.I32# x_saX7d [Occ=Once!] ->
              case x_saX7d of {
                __DEFAULT -> GHC.Types.False [];
                -1# -> GHC.Types.True [];
              };
        };

GHC.IO.FD.$fIODeviceFD29 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.ready"#;

GHC.IO.FD.$fIODeviceFD28 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fIODeviceFD29;

GHC.IO.FD.$w$cready [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId, Arity=4, Str=<S,U><S,1*U><S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_saX7f w_saX7g ww1_saX7h w1_saX7i]
        let-no-escape {
          $j_saX7j [Occ=Once*!T[1], Dmd=<C(S),1*C1(U(U,U))>]
            :: GHC.Prim.Int#
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
          [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
              sat-only [ww_saX7f ww1_saX7h w1_saX7i] \r [i_saX7k]
                  let {
                    sat_saX7u [Occ=Once] :: GHC.Types.IO Foreign.C.Types.CInt
                    [LclId] =
                        [ww_saX7f ww1_saX7h i_saX7k] \r [ds_saX7l]
                            case int2Word# [i_saX7k] of sat_saX7n {
                              __DEFAULT ->
                                  case narrow8Word# [sat_saX7n] of sat_saX7o {
                                    __DEFAULT ->
                                        case
                                            __pkg_ccall_GC base-4.11.0.0 [ww_saX7f
                                                                          sat_saX7o
                                                                          ww1_saX7h
                                                                          0##
                                                                          ds_saX7l]
                                        of
                                        { (#,#) ds1_saX7q [Occ=Once] ds2_saX7r [Occ=Once] ->
                                              case narrow32Int# [ds2_saX7r] of sat_saX7s {
                                                __DEFAULT ->
                                                    let {
                                                      sat_saX7t [Occ=Once] :: GHC.Int.Int32
                                                      [LclId] =
                                                          CCCS GHC.Int.I32#! [sat_saX7s];
                                                    } in  (#,#) [ds1_saX7q sat_saX7t];
                                              };
                                        };
                                  };
                            };
                  } in 
                    case
                        Foreign.C.Error.throwErrnoIfMinus1Retry2
                            GHC.IO.FD.$fIODeviceFD25
                            GHC.IO.FD.$fIODeviceFD28
                            sat_saX7u
                            w1_saX7i
                    of
                    { (#,#) ipv_saX7w [Occ=Once] ipv1_saX7x [Occ=Once] ->
                          let {
                            sat_saX7B [Occ=Once] :: GHC.Types.Bool
                            [LclId] =
                                [ipv1_saX7x] \u []
                                    case ipv1_saX7x of {
                                      GHC.Int.I32# x#_saX7z [Occ=Once!] ->
                                          case x#_saX7z of {
                                            __DEFAULT -> GHC.Enum.$fEnumBool1;
                                            0# -> GHC.Types.False [];
                                            1# -> GHC.Types.True [];
                                          };
                                    };
                          } in  (#,#) [ipv_saX7w sat_saX7B];
                    };
        } in 
          case w_saX7g of {
            GHC.Types.False -> $j_saX7j 0#;
            GHC.Types.True -> $j_saX7j 1#;
          };

GHC.IO.FD.$fIODeviceFD27 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Types.Bool
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=4,
 Str=<S(SL),1*U(U,A)><S,1*U><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saX7D w1_saX7E w2_saX7F w3_saX7G]
        case w_saX7D of {
          GHC.IO.FD.FD ww1_saX7I [Occ=Once] _ [Occ=Dead] ->
              case w2_saX7F of {
                GHC.Types.I# ww4_saX7L [Occ=Once] ->
                    GHC.IO.FD.$w$cready ww1_saX7I w1_saX7E ww4_saX7L w3_saX7G;
              };
        };

GHC.IO.FD.setNonBlockingMode1
  :: GHC.IO.FD.FD
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FD.FD #)
[GblId, Arity=3, Str=<S(SL),1*U(U,A)><L,U><S,U>, Unf=OtherCon []] =
    [] \r [fd_saX7M set_saX7N s_saX7O]
        case fd_saX7M of {
          GHC.IO.FD.FD dt_saX7Q _ [Occ=Dead] ->
              case
                  System.Posix.Internals.$wsetNonBlockingFD
                      dt_saX7Q set_saX7N s_saX7O
              of
              { (#,#) ipv_saX7T [Occ=Once] _ [Occ=Dead] ->
                    let {
                      sat_saX7W [Occ=Once] :: GHC.IO.FD.FD
                      [LclId] =
                          [set_saX7N dt_saX7Q] \u []
                              case set_saX7N of {
                                GHC.Types.False -> GHC.IO.FD.FD [dt_saX7Q 0#];
                                GHC.Types.True -> GHC.IO.FD.FD [dt_saX7Q 1#];
                              };
                    } in  (#,#) [ipv_saX7T sat_saX7W];
              };
        };

GHC.IO.FD.setNonBlockingMode
  :: GHC.IO.FD.FD -> GHC.Types.Bool -> GHC.Types.IO GHC.IO.FD.FD
[GblId, Arity=3, Str=<S(SL),1*U(U,A)><L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.IO.FD.setNonBlockingMode1 eta_B3 eta_B2 eta_B1;

lvl5_raWVb :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.dup2"#;

lvl6_raWVc :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl5_raWVb;

GHC.IO.FD.$fIODeviceFD2
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [ds2_saX7X ds3_saX7Y]
        case narrow32Int# [ds3_saX7Y] of sat_saX7Z {
          __DEFAULT -> Foreign.C.Error.$wlvl lvl6_raWVc sat_saX7Z ds2_saX7X;
        };

GHC.IO.FD.$w$cdup2 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FD.FD #)
[GblId, Arity=4, Str=<S,U><L,U><S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_saX80 ww1_saX81 ww2_saX82 w_saX83]
        case __pkg_ccall base-4.11.0.0 [ww_saX80 ww2_saX82 w_saX83] of {
          (#,#) ds7_saX86 [Occ=Once*] ds8_saX87 [Occ=Once] ->
              case narrow32Int# [ds8_saX87] of {
                __DEFAULT ->
                    let {
                      sat_saX89 [Occ=Once] :: GHC.IO.FD.FD
                      [LclId] =
                          CCCS GHC.IO.FD.FD! [ww2_saX82 ww1_saX81];
                    } in  (#,#) [ds7_saX86 sat_saX89];
                -1# ->
                    case __pkg_ccall base-4.11.0.0 [ds7_saX86] of {
                      (#,#) ds2_saX8c [Occ=Once] ds3_saX8d [Occ=Once] ->
                          GHC.IO.FD.$fIODeviceFD2 ds2_saX8c ds3_saX8d;
                    };
              };
        };

GHC.IO.FD.$fIODeviceFD1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FD.FD #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,U)><S(SL),1*U(U,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saX8f w1_saX8g w2_saX8h]
        case w_saX8f of {
          GHC.IO.FD.FD ww1_saX8j [Occ=Once] ww2_saX8k [Occ=Once] ->
              case w1_saX8g of {
                GHC.IO.FD.FD ww4_saX8m [Occ=Once] _ [Occ=Dead] ->
                    GHC.IO.FD.$w$cdup2 ww1_saX8j ww2_saX8k ww4_saX8m w2_saX8h;
              };
        };

GHC.IO.FD.$fIODeviceFD5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.dup"#;

GHC.IO.FD.$fIODeviceFD4 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fIODeviceFD5;

GHC.IO.FD.$w$cdup [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FD.FD #)
[GblId, Arity=3, Str=<S,U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_saX8o ww1_saX8p w_saX8q]
        case __pkg_ccall base-4.11.0.0 [ww_saX8o w_saX8q] of {
          (#,#) ds4_saX8t [Occ=Once*] ds5_saX8u [Occ=Once] ->
              case narrow32Int# [ds5_saX8u] of wild1_saX8v {
                __DEFAULT ->
                    let {
                      sat_saX8w [Occ=Once] :: GHC.IO.FD.FD
                      [LclId] =
                          CCCS GHC.IO.FD.FD! [wild1_saX8v ww1_saX8p];
                    } in  (#,#) [ds4_saX8t sat_saX8w];
                -1# ->
                    case
                        Foreign.C.Error.throwErrno1 GHC.IO.FD.$fIODeviceFD4 ds4_saX8t
                    of
                    { (#,#) ipv_saX8y [Occ=Once] ipv1_saX8z [Occ=Once] ->
                          let {
                            sat_saX8C [Occ=Once] :: GHC.IO.FD.FD
                            [LclId] =
                                [ww1_saX8p ipv1_saX8z] \u []
                                    case ipv1_saX8z of {
                                      GHC.Int.I32# dt1_saX8B [Occ=Once] ->
                                          GHC.IO.FD.FD [dt1_saX8B ww1_saX8p];
                                    };
                          } in  (#,#) [ipv_saX8y sat_saX8C];
                    };
              };
        };

GHC.IO.FD.$fIODeviceFD3 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FD.FD #)
[GblId, Arity=2, Str=<S(SS),1*U(U,U)><S,U>, Unf=OtherCon []] =
    [] \r [w_saX8D w1_saX8E]
        case w_saX8D of {
          GHC.IO.FD.FD ww1_saX8G [Occ=Once] ww2_saX8H [Occ=Once] ->
              GHC.IO.FD.$w$cdup ww1_saX8G ww2_saX8H w1_saX8E;
        };

GHC.IO.FD.$fIODeviceFD6
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Device.IODeviceType #)
[GblId, Arity=2, Str=<L,1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [fd_saX8I s_saX8J]
        let {
          sat_saX8N [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_saX8I] \s []
                  case fd_saX8I of {
                    GHC.IO.FD.FD dt_saX8L [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_saX8L];
                  };
        } in 
          case System.Posix.Internals.fdStat1 sat_saX8N s_saX8J of {
            (#,#) ipv_saX8P [Occ=Once] ipv1_saX8Q [Occ=Once!] ->
                case ipv1_saX8Q of {
                  (,,) ty_saX8S [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                      (#,#) [ipv_saX8P ty_saX8S];
                };
          };

GHC.IO.FD.$fIODeviceFD20
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId, Arity=2, Str=<L,1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [fd_saX8V s_saX8W]
        let {
          sat_saX90 [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_saX8V] \s []
                  case fd_saX8V of {
                    GHC.IO.FD.FD dt_saX8Y [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_saX8Y];
                  };
        } in 
          case System.Posix.Internals.fdStat1 sat_saX90 s_saX8W of {
            (#,#) ipv_saX92 [Occ=Once] ipv1_saX93 [Occ=Once!] ->
                case ipv1_saX93 of {
                  (,,) ty_saX95 [Occ=Once!] _ [Occ=Dead] _ [Occ=Dead] ->
                      let {
                        sat_saX99 [Occ=Once] :: GHC.Types.Bool
                        [LclId] =
                            [ty_saX95] \u []
                                case ty_saX95 of {
                                  __DEFAULT -> GHC.Types.False [];
                                  GHC.IO.Device.RegularFile -> GHC.Types.True [];
                                  GHC.IO.Device.RawDevice -> GHC.Types.True [];
                                };
                      } in  (#,#) [ipv_saX92 sat_saX99];
                };
          };

GHC.IO.FD.release1
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [fd_saX9a s_saX9b]
        case fd_saX9a of {
          GHC.IO.FD.FD dt_saX9d [Occ=Once] _ [Occ=Dead] ->
              case __pkg_ccall base-4.11.0.0 [dt_saX9d s_saX9b] of {
                (#,#) ds_saX9h [Occ=Once] _ [Occ=Dead] ->
                    (#,#) [ds_saX9h GHC.Tuple.()];
              };
        };

GHC.IO.FD.release :: GHC.IO.FD.FD -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.IO.FD.release1 eta_B2 eta_B1;

GHC.IO.FD.$fIODeviceFD24 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.close"#;

GHC.IO.FD.$fIODeviceFD23 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fIODeviceFD24;

GHC.IO.FD.$wclose [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_saX9j w_saX9k]
        let {
          sat_saX9t [Occ=Once] :: GHC.Types.IO Foreign.C.Types.CInt
          [LclId] =
              [ww_saX9j] \r [ds3_saX9l]
                  case narrow32Int# [ww_saX9j] of sat_saX9n {
                    __DEFAULT ->
                        case __pkg_ccall base-4.11.0.0 [sat_saX9n ds3_saX9l] of {
                          (#,#) ds4_saX9p [Occ=Once] ds5_saX9q [Occ=Once] ->
                              case narrow32Int# [ds5_saX9q] of sat_saX9r {
                                __DEFAULT ->
                                    let {
                                      sat_saX9s [Occ=Once] :: GHC.Int.Int32
                                      [LclId] =
                                          CCCS GHC.Int.I32#! [sat_saX9r];
                                    } in  (#,#) [ds4_saX9p sat_saX9s];
                              };
                        };
                  };
        } in 
          case
              Foreign.C.Error.throwErrnoIfMinus1Retry2
                  GHC.IO.FD.$fIODeviceFD25 GHC.IO.FD.$fIODeviceFD23 sat_saX9t w_saX9k
          of
          { (#,#) ipv_saX9v [Occ=Once] _ [Occ=Dead] ->
                (#,#) [ipv_saX9v GHC.Tuple.()];
          };

GHC.IO.FD.$fIODeviceFD26 [InlPrag=NOUSERINLINE[0]]
  :: System.Posix.Types.Fd
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [w_saX9x w1_saX9y]
        case w_saX9x of {
          GHC.Int.I32# ww1_saX9A [Occ=Once] ->
              GHC.IO.FD.$wclose ww1_saX9A w1_saX9y;
        };

GHC.IO.FD.$w$cclose [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_saX9B w_saX9C]
        case __pkg_ccall base-4.11.0.0 [ww_saX9B w_saX9C] of {
          (#,#) ds_saX9F [Occ=Once*] _ [Occ=Dead] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds3_saX9K [Occ=Once!] ->
                    case ds3_saX9K of {
                      __DEFAULT ->
                          case narrow32Int# [ww_saX9B] of sat_saX9M {
                            __DEFAULT ->
                                let {
                                  sat_saX9N [Occ=Once] :: System.Posix.Types.Fd
                                  [LclId] =
                                      CCCS GHC.Int.I32#! [sat_saX9M];
                                } in 
                                  GHC.Event.Thread.closeFdWith1
                                      GHC.IO.FD.$fIODeviceFD26 sat_saX9N ds_saX9F;
                          };
                      0# ->
                          let {
                            sat_saX9W [Occ=Once] :: GHC.Types.IO Foreign.C.Types.CInt
                            [LclId] =
                                [ww_saX9B] \r [ds4_saX9O]
                                    case narrow32Int# [ww_saX9B] of sat_saX9Q {
                                      __DEFAULT ->
                                          case __pkg_ccall base-4.11.0.0 [sat_saX9Q ds4_saX9O] of {
                                            (#,#) ds5_saX9S [Occ=Once] ds6_saX9T [Occ=Once] ->
                                                case narrow32Int# [ds6_saX9T] of sat_saX9U {
                                                  __DEFAULT ->
                                                      let {
                                                        sat_saX9V [Occ=Once] :: GHC.Int.Int32
                                                        [LclId] =
                                                            CCCS GHC.Int.I32#! [sat_saX9U];
                                                      } in  (#,#) [ds5_saX9S sat_saX9V];
                                                };
                                          };
                                    };
                          } in 
                            case
                                Foreign.C.Error.throwErrnoIfMinus1Retry2
                                    GHC.IO.FD.$fIODeviceFD25
                                    GHC.IO.FD.$fIODeviceFD23
                                    sat_saX9W
                                    ds_saX9F
                            of
                            { (#,#) ipv_saX9Y [Occ=Once] _ [Occ=Dead] ->
                                  (#,#) [ipv_saX9Y GHC.Tuple.()];
                            };
                    };
              };
        };

GHC.IO.FD.$fIODeviceFD22 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Str=<S(SL),1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [w_saXa0 w1_saXa1]
        case w_saXa0 of {
          GHC.IO.FD.FD ww1_saXa3 [Occ=Once] _ [Occ=Dead] ->
              GHC.IO.FD.$w$cclose ww1_saXa3 w1_saXa1;
        };

GHC.IO.FD.$fIODeviceFD [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.IO.Device.IODevice GHC.IO.FD.FD
[GblId[DFunId]] =
    CCS_DONT_CARE GHC.IO.Device.C:IODevice! [GHC.IO.FD.$fIODeviceFD27
                                             GHC.IO.FD.$fIODeviceFD22
                                             GHC.IO.FD.$fIODeviceFD21
                                             GHC.IO.FD.$fIODeviceFD20
                                             GHC.IO.FD.$fIODeviceFD17
                                             GHC.IO.FD.$fIODeviceFD13
                                             GHC.IO.FD.$fIODeviceFD12
                                             GHC.IO.FD.$fIODeviceFD10
                                             GHC.IO.FD.$fIODeviceFD9
                                             GHC.IO.FD.$fIODeviceFD8
                                             GHC.IO.FD.$fIODeviceFD7
                                             GHC.IO.FD.$fIODeviceFD6
                                             GHC.IO.FD.$fIODeviceFD3
                                             GHC.IO.FD.$fIODeviceFD1];

GHC.IO.FD.mkFD7 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "openFile"#;

GHC.IO.FD.mkFD6 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.mkFD7;

GHC.IO.FD.mkFD11 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "is a directory"#;

GHC.IO.FD.mkFD10 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.mkFD11;

GHC.IO.FD.mkFD9 :: GHC.IO.Exception.IOException
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Exception.IOError! [GHC.Base.Nothing
                                             GHC.IO.Exception.InappropriateType
                                             GHC.IO.FD.mkFD6
                                             GHC.IO.FD.mkFD10
                                             GHC.Base.Nothing
                                             GHC.Base.Nothing];

GHC.IO.FD.mkFD8 :: GHC.Exception.SomeException
[GblId] =
    [] \u []
        GHC.IO.Exception.$fExceptionIOException_$ctoException
            GHC.IO.FD.mkFD9;

GHC.IO.FD.mkFD5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "file is locked"#;

GHC.IO.FD.mkFD4 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.mkFD5;

GHC.IO.FD.mkFD3 :: GHC.IO.Exception.IOException
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Exception.IOError! [GHC.Base.Nothing
                                             GHC.IO.Exception.ResourceBusy
                                             GHC.IO.FD.mkFD6
                                             GHC.IO.FD.mkFD4
                                             GHC.Base.Nothing
                                             GHC.Base.Nothing];

GHC.IO.FD.mkFD2 :: GHC.Exception.SomeException
[GblId] =
    [] \u []
        GHC.IO.Exception.$fExceptionIOException_$ctoException
            GHC.IO.FD.mkFD3;

GHC.IO.FD.$wmkFD [InlPrag=NOUSERINLINE[0]]
  :: Foreign.C.Types.CInt
     -> GHC.IO.IOMode.IOMode
     -> GHC.Base.Maybe
          (GHC.IO.Device.IODeviceType, System.Posix.Types.CDev,
           System.Posix.Types.CIno)
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
[GblId,
 Arity=5,
 Str=<L,U(U)><L,1*U><S,1*U><L,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saXa5 w1_saXa6 w2_saXa7 w3_saXa8 w4_saXa9]
        let-no-escape {
          $w$j_saXaa [InlPrag=NOUSERINLINE[0],
                      Occ=Once*!T[4],
                      Dmd=<L,1*C1(C1(C1(C1(U(U,U)))))>]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> GHC.IO.Device.IODeviceType
               -> System.Posix.Types.CDev
               -> System.Posix.Types.CIno
               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                     (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
          [LclId[JoinId(4)],
           Arity=4,
           Str=<S,U><S,1*U><L,1*U(U)><L,1*U(U)>,
           Unf=OtherCon []] =
              sat-only [w_saXa5 w1_saXa6 w3_saXa8] \r [w5_saXab
                                                       ww_saXac
                                                       ww1_saXad
                                                       ww2_saXae]
                  case ww_saXac of wild_saXaf {
                    __DEFAULT ->
                        let {
                          sat_saXaj [Occ=Once] :: GHC.IO.FD.FD
                          [LclId] =
                              [w_saXa5 w3_saXa8] \u []
                                  case w_saXa5 of {
                                    GHC.Int.I32# dt1_saXah [Occ=Once*] ->
                                        case w3_saXa8 of {
                                          GHC.Types.False -> GHC.IO.FD.FD [dt1_saXah 0#];
                                          GHC.Types.True -> GHC.IO.FD.FD [dt1_saXah 1#];
                                        };
                                  }; } in
                        let {
                          sat_saXak [Occ=Once] :: (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType)
                          [LclId] =
                              CCCS (,)! [sat_saXaj wild_saXaf];
                        } in  (#,#) [w5_saXab sat_saXak];
                    GHC.IO.Device.Directory -> raiseIO# [GHC.IO.FD.mkFD8 w5_saXab];
                    GHC.IO.Device.RegularFile ->
                        case w_saXa5 of {
                          GHC.Int.I32# ds1_saXan ->
                              case ww1_saXad of {
                                GHC.Word.W64# x#_saXap ->
                                    case word2Int# [x#_saXap] of i#_saXaq [Dmd=<S,U>] {
                                      __DEFAULT ->
                                          let-no-escape {
                                            $j_saXar [Occ=Once*!T[1], Dmd=<C(S),1*C1(U(U,U))>]
                                              :: GHC.Prim.Word#
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
                                            [LclId[JoinId(1)],
                                             Arity=1,
                                             Str=<S,U>,
                                             Unf=OtherCon []] =
                                                sat-only [w1_saXa6
                                                          w3_saXa8
                                                          w5_saXab
                                                          ww2_saXae
                                                          ds1_saXan] \r [wild2_saXas]
                                                    case ww2_saXae of {
                                                      GHC.Word.W64# x#1_saXau ->
                                                          case
                                                              word2Int# [x#1_saXau]
                                                          of
                                                          i#1_saXav [Dmd=<S,U>]
                                                          { __DEFAULT ->
                                                                let-no-escape {
                                                                  $j1_saXaw [Occ=Once*!T[1],
                                                                             Dmd=<C(S),1*C1(U(U,U))>]
                                                                    :: GHC.Prim.Word#
                                                                       -> (# GHC.Prim.State#
                                                                               GHC.Prim.RealWorld,
                                                                             (GHC.IO.FD.FD,
                                                                              GHC.IO.Device.IODeviceType) #)
                                                                  [LclId[JoinId(1)],
                                                                   Arity=1,
                                                                   Str=<S,U>,
                                                                   Unf=OtherCon []] =
                                                                      sat-only [w1_saXa6
                                                                                w3_saXa8
                                                                                w5_saXab
                                                                                ds1_saXan
                                                                                wild2_saXas] \r [wild4_saXax]
                                                                          let-no-escape {
                                                                            $j2_saXay [Occ=Once*!T[1],
                                                                                       Dmd=<C(S),1*C1(U(U,U))>]
                                                                              :: GHC.Prim.Int#
                                                                                 -> (# GHC.Prim.State#
                                                                                         GHC.Prim.RealWorld,
                                                                                       (GHC.IO.FD.FD,
                                                                                        GHC.IO.Device.IODeviceType) #)
                                                                            [LclId[JoinId(1)],
                                                                             Arity=1,
                                                                             Str=<S,U>,
                                                                             Unf=OtherCon []] =
                                                                                sat-only [w3_saXa8
                                                                                          w5_saXab
                                                                                          ds1_saXan
                                                                                          wild2_saXas
                                                                                          wild4_saXax] \r [ds2_saXaz]
                                                                                    case
                                                                                        __pkg_ccall base-4.11.0.0 [ds1_saXan
                                                                                                                   wild2_saXas
                                                                                                                   wild4_saXax
                                                                                                                   ds2_saXaz
                                                                                                                   w5_saXab]
                                                                                    of
                                                                                    { (#,#) ds3_saXaC [Occ=Once*]
                                                                                            ds4_saXaD [Occ=Once] ->
                                                                                          case
                                                                                              narrow32Int# [ds4_saXaD]
                                                                                          of
                                                                                          { __DEFAULT ->
                                                                                                let {
                                                                                                  sat_saXaG [Occ=Once]
                                                                                                    :: GHC.IO.FD.FD
                                                                                                  [LclId] =
                                                                                                      [w3_saXa8
                                                                                                       ds1_saXan] \u []
                                                                                                          case
                                                                                                              w3_saXa8
                                                                                                          of
                                                                                                          { GHC.Types.False ->
                                                                                                                GHC.IO.FD.FD [ds1_saXan
                                                                                                                              0#];
                                                                                                            GHC.Types.True ->
                                                                                                                GHC.IO.FD.FD [ds1_saXan
                                                                                                                              1#];
                                                                                                          }; } in
                                                                                                let {
                                                                                                  sat_saXaH [Occ=Once]
                                                                                                    :: (GHC.IO.FD.FD,
                                                                                                        GHC.IO.Device.IODeviceType)
                                                                                                  [LclId] =
                                                                                                      CCCS (,)! [sat_saXaG
                                                                                                                 GHC.IO.Device.RegularFile];
                                                                                                } in 
                                                                                                  (#,#) [ds3_saXaC
                                                                                                         sat_saXaH];
                                                                                            -1# ->
                                                                                                raiseIO# [GHC.IO.FD.mkFD2
                                                                                                          ds3_saXaC];
                                                                                          };
                                                                                    };
                                                                          } in 
                                                                            case w1_saXa6 of {
                                                                              __DEFAULT ->
                                                                                  $j2_saXay 1#;
                                                                              GHC.IO.IOMode.ReadMode ->
                                                                                  $j2_saXay 0#;
                                                                            };
                                                                } in 
                                                                  case >=# [i#1_saXav 0#] of {
                                                                    __DEFAULT ->
                                                                        $j1_saXaw x#1_saXau;
                                                                    1# ->
                                                                        case
                                                                            int2Word# [i#1_saXav]
                                                                        of
                                                                        sat_saXaL
                                                                        { __DEFAULT ->
                                                                              $j1_saXaw sat_saXaL;
                                                                        };
                                                                  };
                                                          };
                                                    };
                                          } in 
                                            case >=# [i#_saXaq 0#] of {
                                              __DEFAULT -> $j_saXar x#_saXap;
                                              1# ->
                                                  case int2Word# [i#_saXaq] of sat_saXaN {
                                                    __DEFAULT -> $j_saXar sat_saXaN;
                                                  };
                                            };
                                    };
                              };
                        };
                  };
        } in 
          case w2_saXa7 of {
            GHC.Base.Nothing ->
                case System.Posix.Internals.fdStat1 w_saXa5 w4_saXa9 of {
                  (#,#) ipv_saXaQ [Occ=Once] ipv1_saXaR [Occ=Once!] ->
                      case ipv1_saXaR of {
                        (,,) ww1_saXaT [Occ=Once]
                             ww2_saXaU [Occ=Once]
                             ww3_saXaV [Occ=Once] ->
                            $w$j_saXaa ipv_saXaQ ww1_saXaT ww2_saXaU ww3_saXaV;
                      };
                };
            GHC.Base.Just stat_saXaW [Occ=Once!] ->
                case stat_saXaW of {
                  (,,) ww1_saXaY [Occ=Once]
                       ww2_saXaZ [Occ=Once]
                       ww3_saXb0 [Occ=Once] ->
                      $w$j_saXaa w4_saXa9 ww1_saXaY ww2_saXaZ ww3_saXb0;
                };
          };

GHC.IO.FD.mkFD1 [InlPrag=NOUSERINLINE[0]]
  :: Foreign.C.Types.CInt
     -> GHC.IO.IOMode.IOMode
     -> GHC.Base.Maybe
          (GHC.IO.Device.IODeviceType, System.Posix.Types.CDev,
           System.Posix.Types.CIno)
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
[GblId,
 Arity=6,
 Str=<L,U(U)><L,1*U><S,1*U><L,A><L,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saXb1 w1_saXb2 w2_saXb3 w3_saXb4 w4_saXb5 w5_saXb6]
        GHC.IO.FD.$wmkFD w_saXb1 w1_saXb2 w2_saXb3 w4_saXb5 w5_saXb6;

GHC.IO.FD.mkFD
  :: Foreign.C.Types.CInt
     -> GHC.IO.IOMode.IOMode
     -> GHC.Base.Maybe
          (GHC.IO.Device.IODeviceType, System.Posix.Types.CDev,
           System.Posix.Types.CIno)
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.Types.IO (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType)
[GblId,
 Arity=6,
 Str=<L,U(U)><L,1*U><S,1*U><L,A><L,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.FD.mkFD1 eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.FD.openFile1
  :: GHC.IO.FilePath
     -> GHC.IO.IOMode.IOMode
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
[GblId, Arity=4, Str=<L,U><L,U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [filepath_saXb7 iomode_saXb8 non_blocking_saXb9 s_saXba]
        case GHC.IO.Encoding.getFileSystemEncoding s_saXba of {
          (#,#) ipv_saXbc [Occ=Once] ipv1_saXbd [Occ=Once] ->
              let {
                sat_saXcZ [Occ=Once]
                  :: GHC.Foreign.CString
                     -> GHC.Types.IO (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType)
                [LclId] =
                    [iomode_saXb8 non_blocking_saXb9] \r [f_saXbe eta_saXbf]
                        case f_saXbe of {
                          GHC.Ptr.Ptr ds4_saXbh [Occ=Once] ->
                              let-no-escape {
                                $j_saXbi [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                                  :: GHC.Prim.Int#
                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                           (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
                                [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                    sat-only [iomode_saXb8
                                              non_blocking_saXb9
                                              eta_saXbf
                                              ds4_saXbh] \r [ds6_saXbj]
                                        let {
                                          sat_saXbr [Occ=Once] :: GHC.Types.IO Foreign.C.Types.CInt
                                          [LclId] =
                                              [ds4_saXbh ds6_saXbj] \r [ds9_saXbk]
                                                  case
                                                      __pkg_ccall_GC base-4.11.0.0 [ds4_saXbh
                                                                                    ds6_saXbj
                                                                                    438##
                                                                                    ds9_saXbk]
                                                  of
                                                  { (#,#) ds10_saXbn [Occ=Once]
                                                          ds11_saXbo [Occ=Once] ->
                                                        case
                                                            narrow32Int# [ds11_saXbo]
                                                        of
                                                        sat_saXbp
                                                        { __DEFAULT ->
                                                              let {
                                                                sat_saXbq [Occ=Once]
                                                                  :: GHC.Int.Int32
                                                                [LclId] =
                                                                    CCCS GHC.Int.I32#! [sat_saXbp];
                                                              } in  (#,#) [ds10_saXbn sat_saXbq];
                                                        };
                                                  };
                                        } in 
                                          case
                                              Foreign.C.Error.throwErrnoIfMinus1Retry2
                                                  GHC.IO.FD.$fIODeviceFD25
                                                  GHC.IO.FD.mkFD6
                                                  sat_saXbr
                                                  eta_saXbf
                                          of
                                          { (#,#) ipv2_saXbt [Occ=Once] ipv3_saXbu ->
                                                let {
                                                  sat_saXbJ [Occ=Once]
                                                    :: GHC.Exception.SomeException
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             (GHC.IO.FD.FD,
                                                              GHC.IO.Device.IODeviceType) #)
                                                  [LclId] =
                                                      [ipv3_saXbu] \r [ds9_saXbx]
                                                          case ds9_saXbx of {
                                                            GHC.Exception.SomeException $dException_saXbz [Occ=Once]
                                                                                        e1_saXbA [Occ=Once] ->
                                                                let {
                                                                  sat_saXbI [Occ=OnceT[0]]
                                                                    :: GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                       -> (# GHC.Prim.State#
                                                                               GHC.Prim.RealWorld,
                                                                             (GHC.IO.FD.FD,
                                                                              GHC.IO.Device.IODeviceType) #)
                                                                  [LclId] =
                                                                      [ipv3_saXbu
                                                                       $dException_saXbz
                                                                       e1_saXbA] \r [s1_saXbB]
                                                                          case ipv3_saXbu of {
                                                                            GHC.Int.I32# ds11_saXbD [Occ=Once] ->
                                                                                case
                                                                                    __pkg_ccall base-4.11.0.0 [ds11_saXbD
                                                                                                               s1_saXbB]
                                                                                of
                                                                                { (#,#) ds12_saXbG [Occ=Once]
                                                                                        _ [Occ=Dead] ->
                                                                                      GHC.IO.throwIO1
                                                                                          $dException_saXbz
                                                                                          e1_saXbA
                                                                                          ds12_saXbG;
                                                                                };
                                                                          };
                                                                } in  sat_saXbI;
                                                          }; } in
                                                let {
                                                  sat_saXbw [Occ=Once]
                                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             (GHC.IO.FD.FD,
                                                              GHC.IO.Device.IODeviceType) #)
                                                  [LclId] =
                                                      [iomode_saXb8
                                                       non_blocking_saXb9
                                                       ipv3_saXbu] \r [w_saXbv]
                                                          GHC.IO.FD.$wmkFD
                                                              ipv3_saXbu
                                                              iomode_saXb8
                                                              GHC.Base.Nothing
                                                              non_blocking_saXb9
                                                              w_saXbv;
                                                } in 
                                                  case
                                                      catch# [sat_saXbw sat_saXbJ ipv2_saXbt]
                                                  of
                                                  ds9_saXbK
                                                  { (#,#) ipv4_saXbL [Occ=Once]
                                                          ipv5_saXbM [Occ=Once!] ->
                                                        case ipv5_saXbM of {
                                                          (,) fD_saXbO [Occ=Once!]
                                                              fd_type_saXbP [Occ=Once!] ->
                                                              case iomode_saXb8 of {
                                                                __DEFAULT -> ds9_saXbK;
                                                                GHC.IO.IOMode.WriteMode ->
                                                                    case fd_type_saXbP of {
                                                                      __DEFAULT -> ds9_saXbK;
                                                                      GHC.IO.Device.RegularFile ->
                                                                          case
                                                                              fD_saXbO
                                                                          of
                                                                          wild3_saXbS
                                                                          { GHC.IO.FD.FD dt_saXbT [Occ=Once]
                                                                                         _ [Occ=Dead] ->
                                                                                case
                                                                                    __pkg_ccall base-4.11.0.0 [dt_saXbT
                                                                                                               0#
                                                                                                               ipv4_saXbL]
                                                                                of
                                                                                { (#,#) ds7_saXbX [Occ=Once*]
                                                                                        ds8_saXbY [Occ=Once] ->
                                                                                      case
                                                                                          narrow32Int# [ds8_saXbY]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                __pkg_ccall base-4.11.0.0 [ds7_saXbX]
                                                                                            of
                                                                                            { (#,#) ds_saXc2 [Occ=Once]
                                                                                                    ds10_saXc3 [Occ=Once] ->
                                                                                                  GHC.IO.FD.$fIODeviceFD11
                                                                                                      ds_saXc2
                                                                                                      ds10_saXc3;
                                                                                            };
                                                                                        0# ->
                                                                                            let {
                                                                                              sat_saXc5 [Occ=Once]
                                                                                                :: (GHC.IO.FD.FD,
                                                                                                    GHC.IO.Device.IODeviceType)
                                                                                              [LclId] =
                                                                                                  CCCS (,)! [wild3_saXbS
                                                                                                             GHC.IO.Device.RegularFile];
                                                                                            } in 
                                                                                              (#,#) [ds7_saXbX
                                                                                                     sat_saXc5];
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                          };
                              } in 
                                case non_blocking_saXb9 of {
                                  GHC.Types.False ->
                                      case iomode_saXb8 of {
                                        GHC.IO.IOMode.ReadMode ->
                                            case read_flags_raWV8 of {
                                              GHC.Int.I32# ds6_saXc9 [Occ=Once] ->
                                                  $j_saXbi ds6_saXc9;
                                            };
                                        GHC.IO.IOMode.WriteMode ->
                                            case write_flags_raWV5 of {
                                              GHC.Int.I32# ds6_saXcb [Occ=Once] ->
                                                  $j_saXbi ds6_saXcb;
                                            };
                                        GHC.IO.IOMode.AppendMode ->
                                            case append_flags_raWV6 of {
                                              GHC.Int.I32# ds6_saXcd [Occ=Once] ->
                                                  $j_saXbi ds6_saXcd;
                                            };
                                        GHC.IO.IOMode.ReadWriteMode ->
                                            case rw_flags_raWV7 of {
                                              GHC.Int.I32# ds6_saXcf [Occ=Once] ->
                                                  $j_saXbi ds6_saXcf;
                                            };
                                      };
                                  GHC.Types.True ->
                                      case iomode_saXb8 of {
                                        GHC.IO.IOMode.ReadMode ->
                                            case read_flags_raWV8 of {
                                              GHC.Int.I32# x#_saXci [Occ=Once] ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#]
                                                  of
                                                  { (#,#) _ [Occ=Dead] ds2_saXcm [Occ=Once] ->
                                                        case narrow32Int# [ds2_saXcm] of sat_saXco {
                                                          __DEFAULT ->
                                                              case
                                                                  int2Word# [sat_saXco]
                                                              of
                                                              sat_saXcp
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#_saXci]
                                                                    of
                                                                    sat_saXcn
                                                                    { __DEFAULT ->
                                                                          case
                                                                              or# [sat_saXcn
                                                                                   sat_saXcp]
                                                                          of
                                                                          sat_saXcq
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    word2Int# [sat_saXcq]
                                                                                of
                                                                                sat_saXcr
                                                                                { __DEFAULT ->
                                                                                      $j_saXbi
                                                                                          sat_saXcr;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                        GHC.IO.IOMode.WriteMode ->
                                            case write_flags_raWV5 of {
                                              GHC.Int.I32# x#_saXct [Occ=Once] ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#]
                                                  of
                                                  { (#,#) _ [Occ=Dead] ds2_saXcx [Occ=Once] ->
                                                        case narrow32Int# [ds2_saXcx] of sat_saXcz {
                                                          __DEFAULT ->
                                                              case
                                                                  int2Word# [sat_saXcz]
                                                              of
                                                              sat_saXcA
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#_saXct]
                                                                    of
                                                                    sat_saXcy
                                                                    { __DEFAULT ->
                                                                          case
                                                                              or# [sat_saXcy
                                                                                   sat_saXcA]
                                                                          of
                                                                          sat_saXcB
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    word2Int# [sat_saXcB]
                                                                                of
                                                                                sat_saXcC
                                                                                { __DEFAULT ->
                                                                                      $j_saXbi
                                                                                          sat_saXcC;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                        GHC.IO.IOMode.AppendMode ->
                                            case append_flags_raWV6 of {
                                              GHC.Int.I32# x#_saXcE [Occ=Once] ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#]
                                                  of
                                                  { (#,#) _ [Occ=Dead] ds2_saXcI [Occ=Once] ->
                                                        case narrow32Int# [ds2_saXcI] of sat_saXcK {
                                                          __DEFAULT ->
                                                              case
                                                                  int2Word# [sat_saXcK]
                                                              of
                                                              sat_saXcL
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#_saXcE]
                                                                    of
                                                                    sat_saXcJ
                                                                    { __DEFAULT ->
                                                                          case
                                                                              or# [sat_saXcJ
                                                                                   sat_saXcL]
                                                                          of
                                                                          sat_saXcM
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    word2Int# [sat_saXcM]
                                                                                of
                                                                                sat_saXcN
                                                                                { __DEFAULT ->
                                                                                      $j_saXbi
                                                                                          sat_saXcN;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                        GHC.IO.IOMode.ReadWriteMode ->
                                            case rw_flags_raWV7 of {
                                              GHC.Int.I32# x#_saXcP [Occ=Once] ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#]
                                                  of
                                                  { (#,#) _ [Occ=Dead] ds2_saXcT [Occ=Once] ->
                                                        case narrow32Int# [ds2_saXcT] of sat_saXcV {
                                                          __DEFAULT ->
                                                              case
                                                                  int2Word# [sat_saXcV]
                                                              of
                                                              sat_saXcW
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#_saXcP]
                                                                    of
                                                                    sat_saXcU
                                                                    { __DEFAULT ->
                                                                          case
                                                                              or# [sat_saXcU
                                                                                   sat_saXcW]
                                                                          of
                                                                          sat_saXcX
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    word2Int# [sat_saXcX]
                                                                                of
                                                                                sat_saXcY
                                                                                { __DEFAULT ->
                                                                                      $j_saXbi
                                                                                          sat_saXcY;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                        };
              } in 
                GHC.Foreign.charIsRepresentable3
                    ipv1_saXbd filepath_saXb7 sat_saXcZ ipv_saXbc;
        };

GHC.IO.FD.openFile
  :: GHC.IO.FilePath
     -> GHC.IO.IOMode.IOMode
     -> GHC.Types.Bool
     -> GHC.Types.IO (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType)
[GblId, Arity=4, Str=<L,U><L,U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.FD.openFile1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.FD.$w$cfillReadBuffer [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=9,
 Str=<S,U><S,1*U><S,U><L,U><L,U><S,U><L,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_saXd0
           ww1_saXd1
           ww2_saXd2
           ww3_saXd3
           ww4_saXd4
           ww5_saXd5
           ww6_saXd6
           ww7_saXd7
           w_saXd8]
        case -# [ww5_saXd5 ww7_saXd7] of sat_saXda {
          __DEFAULT ->
              case int2Word# [sat_saXda] of sat_saXdb {
                __DEFAULT ->
                    case plusAddr# [ww2_saXd2 ww7_saXd7] of sat_saXd9 {
                      __DEFAULT ->
                          case
                              GHC.IO.FD.$wreadRawBufferPtr
                                  GHC.IO.FD.$fBufferedIOFD12
                                  ww_saXd0
                                  ww1_saXd1
                                  sat_saXd9
                                  0#
                                  sat_saXdb
                                  w_saXd8
                          of
                          { (#,#) ipv_saXdd [Occ=Once] ipv1_saXde ->
                                case touch# [ww3_saXd3 ipv_saXdd] of s'_saXdf {
                                  __DEFAULT ->
                                      let {
                                        sat_saXdj [Occ=Once] :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                        [LclId] =
                                            [ww2_saXd2
                                             ww3_saXd3
                                             ww4_saXd4
                                             ww5_saXd5
                                             ww6_saXd6
                                             ww7_saXd7
                                             ipv1_saXde] \u []
                                                case ipv1_saXde of {
                                                  GHC.Types.I# y_saXdh [Occ=Once] ->
                                                      case +# [ww7_saXd7 y_saXdh] of sat_saXdi {
                                                        __DEFAULT ->
                                                            GHC.IO.Buffer.Buffer [ww2_saXd2
                                                                                  ww3_saXd3
                                                                                  ww4_saXd4
                                                                                  ww5_saXd5
                                                                                  ww6_saXd6
                                                                                  sat_saXdi];
                                                      };
                                                }; } in
                                      let {
                                        sat_saXdk [Occ=Once]
                                          :: (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8)
                                        [LclId] =
                                            CCCS (,)! [ipv1_saXde sat_saXdj];
                                      } in  (#,#) [s'_saXdf sat_saXdk];
                                };
                          };
                    };
              };
        };

GHC.IO.FD.$fBufferedIOFD11 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,1*U)><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saXdl w1_saXdm w2_saXdn]
        case w_saXdl of {
          GHC.IO.FD.FD ww1_saXdp [Occ=Once] ww2_saXdq [Occ=Once] ->
              case w1_saXdm of {
                GHC.IO.Buffer.Buffer ww4_saXds [Occ=Once]
                                     ww5_saXdt [Occ=Once]
                                     ww6_saXdu [Occ=Once]
                                     ww7_saXdv [Occ=Once]
                                     ww8_saXdw [Occ=Once]
                                     ww9_saXdx [Occ=Once] ->
                    GHC.IO.FD.$w$cfillReadBuffer
                        ww1_saXdp
                        ww2_saXdq
                        ww4_saXds
                        ww5_saXdt
                        ww6_saXdu
                        ww7_saXdv
                        ww8_saXdw
                        ww9_saXdx
                        w2_saXdn;
              };
        };

GHC.IO.FD.$fBufferedIOFD6
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Word.Word8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,A><L,1*U(U,U,A,U,A,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [_dev_saXdy buf_saXdz s_saXdA]
        let {
          sat_saXdI [Occ=Once] :: GHC.IO.Buffer.Buffer GHC.Word.Word8
          [LclId] =
              [buf_saXdz] \u []
                  case buf_saXdz of {
                    GHC.IO.Buffer.Buffer dt_saXdC [Occ=Once]
                                         dt1_saXdD [Occ=Once]
                                         _ [Occ=Dead]
                                         dt2_saXdF [Occ=Once]
                                         _ [Occ=Dead]
                                         _ [Occ=Dead] ->
                        GHC.IO.Buffer.Buffer [dt_saXdC
                                              dt1_saXdD
                                              GHC.IO.Buffer.WriteBuffer
                                              dt2_saXdF
                                              0#
                                              0#];
                  };
        } in  (#,#) [s_saXdA sat_saXdI];

GHC.IO.FD.$fBufferedIOFD [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.IO.BufferedIO.BufferedIO GHC.IO.FD.FD
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.IO.BufferedIO.C:BufferedIO! [GHC.IO.FD.$fBufferedIOFD15
                                                   GHC.IO.FD.$fBufferedIOFD11
                                                   GHC.IO.FD.$fBufferedIOFD7
                                                   GHC.IO.FD.$fBufferedIOFD6
                                                   GHC.IO.FD.$fBufferedIOFD_$swriteBuf1
                                                   GHC.IO.FD.$fBufferedIOFD1];

GHC.IO.FD.FD :: GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.IO.FD.FD
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.IO.FD.FD [eta_B2 eta_B1];


==================== STG syntax: ====================
2018-03-16 16:05:55.119215332 UTC

GHC.IO.FD.$WFD [InlPrag=INLINE[2]]
  :: Foreign.C.Types.CInt -> GHC.Types.Int -> GHC.IO.FD.FD
[GblId[DataConWrapper],
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_saWVe dt_saWVf]
        case dt_saWVe of {
          GHC.Int.I32# dt_saWVh [Occ=Once] ->
              case dt_saWVf of {
                GHC.Types.I# dt_saWVj [Occ=Once] ->
                    GHC.IO.FD.FD [dt_saWVh dt_saWVj];
              };
        };

GHC.IO.FD.$fBufferedIOFD5 [Occ=LoopBreaker]
  :: GHC.Base.String
     -> GHC.Types.IO System.Posix.Types.CSsize
     -> GHC.Types.IO System.Posix.Types.CSsize
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           System.Posix.Types.CSsize #)
[GblId,
 Arity=4,
 Str=<L,U><C(S(SS(S))),C(U(U,1*U(U)))><L,1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [loc_saWVk f_saWVl on_block_saWVm void_0E]
        case f_saWVl GHC.Prim.void# of {
          Unit# ipv1_saWVq [Occ=Once] ->
              case ipv1_saWVq of wild_saWVr {
                GHC.Int.I64# x_saWVs [Occ=Once!] ->
                    case x_saWVs of {
                      __DEFAULT -> Unit# [ipv1_saWVq];
                      -1# ->
                          case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                            Unit# ds2_saWVx [Occ=Once] ->
                                case narrow32Int# [ds2_saWVx] of {
                                  __DEFAULT -> Foreign.C.Error.throwErrno1 loc_saWVk GHC.Prim.void#;
                                  4# ->
                                      GHC.IO.FD.$fBufferedIOFD5
                                          loc_saWVk f_saWVl on_block_saWVm GHC.Prim.void#;
                                  11# -> on_block_saWVm GHC.Prim.void#;
                                };
                          };
                    };
              };
        };

lvl_raWUX :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.fdWrite"#;

lvl1_raWUY :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_raWUX;

GHC.IO.FD.$fBufferedIOFD9 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.fdReadNonBlocking"#;

GHC.IO.FD.$fBufferedIOFD8 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fBufferedIOFD9;

lvl2_raWUZ :: GHC.Int.Int64
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I64#! [-1#];

GHC.IO.FD.$fBufferedIOFD3
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           System.Posix.Types.CSsize #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E] Unit# [lvl2_raWUZ];

GHC.IO.FD.$fBufferedIOFD2 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

GHC.IO.FD.$fBufferedIOFD10 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [-1#];

GHC.IO.FD.$wreadRawBufferPtrNoBlock [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.Word#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=7,
 Str=<L,U><S,U><S,1*U><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saWVA
           ww_saWVB
           ww1_saWVC
           ww2_saWVD
           ww3_saWVE
           ww4_saWVF
           void_0E]
        let-no-escape {
          $sdo_read_saWVH [Occ=Once*!T[2], Dmd=<L,1*C1(C1(U(U,U)))>]
            :: GHC.Types.IO System.Posix.Types.CSsize
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
          [LclId[JoinId(2)],
           Arity=2,
           Str=<C(S(SS(S))),C(U(U,1*U(U)))><S,U>,
           Unf=OtherCon []] =
              sat-only [w_saWVA] \r [call_saWVI void_0E]
                  case
                      GHC.IO.FD.$fBufferedIOFD5
                          w_saWVA call_saWVI GHC.IO.FD.$fBufferedIOFD3 GHC.Prim.void#
                  of
                  { Unit# ipv1_saWVM [Occ=Once] ->
                        case ipv1_saWVM of {
                          GHC.Int.I64# x_saWVO [Occ=Once!] ->
                              case x_saWVO of wild1_saWVP {
                                __DEFAULT ->
                                    let {
                                      sat_saWVQ [Occ=Once] :: GHC.Types.Int
                                      [LclId] =
                                          CCCS GHC.Types.I#! [wild1_saWVP];
                                    } in  Unit# [sat_saWVQ];
                                -1# -> Unit# [GHC.IO.FD.$fBufferedIOFD2];
                                0# -> Unit# [GHC.IO.FD.$fBufferedIOFD10];
                              };
                        };
                  };
        } in 
          case ww1_saWVC of {
            __DEFAULT ->
                let {
                  sat_saWVZ [Occ=Once] :: GHC.Types.IO System.Posix.Types.CSsize
                  [LclId] =
                      [ww_saWVB ww2_saWVD ww3_saWVE ww4_saWVF] \r [void_0E]
                          case plusAddr# [ww2_saWVD ww3_saWVE] of sat_saWVU {
                            __DEFAULT ->
                                case
                                    __pkg_ccall base-4.11.0.0 [ww_saWVB
                                                               sat_saWVU
                                                               ww4_saWVF
                                                               GHC.Prim.void#]
                                of
                                { Unit# ds11_saWVX [Occ=Once] ->
                                      let {
                                        sat_saWVY [Occ=Once] :: GHC.Int.Int64
                                        [LclId] =
                                            CCCS GHC.Int.I64#! [ds11_saWVX];
                                      } in  Unit# [sat_saWVY];
                                };
                          };
                } in  $sdo_read_saWVH sat_saWVZ GHC.Prim.void#;
            0# ->
                case
                    __pkg_ccall base-4.11.0.0 [ww_saWVB 0## 0# 0## GHC.Prim.void#]
                of
                { Unit# ds1_saWW3 [Occ=Once] ->
                      case narrow32Int# [ds1_saWW3] of {
                        __DEFAULT ->
                            let {
                              sat_saWWc [Occ=Once] :: GHC.Types.IO System.Posix.Types.CSsize
                              [LclId] =
                                  [ww_saWVB ww2_saWVD ww3_saWVE ww4_saWVF] \r [void_0E]
                                      case plusAddr# [ww2_saWVD ww3_saWVE] of sat_saWW7 {
                                        __DEFAULT ->
                                            case
                                                __pkg_ccall_GC base-4.11.0.0 [ww_saWVB
                                                                              sat_saWW7
                                                                              ww4_saWVF
                                                                              GHC.Prim.void#]
                                            of
                                            { Unit# ds11_saWWa [Occ=Once] ->
                                                  let {
                                                    sat_saWWb [Occ=Once] :: GHC.Int.Int64
                                                    [LclId] =
                                                        CCCS GHC.Int.I64#! [ds11_saWWa];
                                                  } in  Unit# [sat_saWWb];
                                            };
                                      };
                            } in  $sdo_read_saWVH sat_saWWc GHC.Prim.void#;
                        0# -> Unit# [GHC.IO.FD.$fBufferedIOFD2];
                      };
                };
          };

GHC.IO.FD.readRawBufferPtrNoBlock1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saWWd w1_saWWe w2_saWWf w3_saWWg w4_saWWh void_0E]
        case w1_saWWe of {
          GHC.IO.FD.FD ww1_saWWk [Occ=Once] ww2_saWWl [Occ=Once] ->
              case w2_saWWf of {
                GHC.Ptr.Ptr ww4_saWWn [Occ=Once] ->
                    case w3_saWWg of {
                      GHC.Types.I# ww6_saWWp [Occ=Once] ->
                          case w4_saWWh of {
                            GHC.Word.W64# ww8_saWWr [Occ=Once] ->
                                GHC.IO.FD.$wreadRawBufferPtrNoBlock
                                    w_saWWd
                                    ww1_saWWk
                                    ww2_saWWl
                                    ww4_saWWn
                                    ww6_saWWp
                                    ww8_saWWr
                                    GHC.Prim.void#;
                          };
                    };
              };
        };

GHC.IO.FD.$w$creadNonBlocking [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Base.Maybe GHC.Types.Int #)
[GblId,
 Arity=5,
 Str=<S,U><S,1*U><S,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_saWWs ww1_saWWt ww2_saWWu ww3_saWWv void_0E]
        case int2Word# [ww3_saWWv] of sat_saWWx {
          __DEFAULT ->
              case
                  GHC.IO.FD.$wreadRawBufferPtrNoBlock
                      GHC.IO.FD.$fBufferedIOFD8
                      ww_saWWs
                      ww1_saWWt
                      ww2_saWWu
                      0#
                      sat_saWWx
                      GHC.Prim.void#
              of
              { Unit# ipv1_saWWA [Occ=Once!] ->
                    case ipv1_saWWA of wild_saWWB {
                      GHC.Types.I# ds_saWWC [Occ=Once!] ->
                          case ds_saWWC of {
                            __DEFAULT ->
                                let {
                                  sat_saWWE [Occ=Once] :: GHC.Base.Maybe GHC.Types.Int
                                  [LclId] =
                                      CCCS GHC.Base.Just! [wild_saWWB];
                                } in  Unit# [sat_saWWE];
                            -1# -> Unit# [GHC.Base.Nothing];
                          };
                    };
              };
        };

GHC.IO.FD.$fRawIOFD3 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Base.Maybe GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saWWF w1_saWWG w2_saWWH void_0E]
        case w_saWWF of {
          GHC.IO.FD.FD ww1_saWWK [Occ=Once] ww2_saWWL [Occ=Once] ->
              case w1_saWWG of {
                GHC.Ptr.Ptr ww4_saWWN [Occ=Once] ->
                    case w2_saWWH of {
                      GHC.Types.I# ww6_saWWP [Occ=Once] ->
                          GHC.IO.FD.$w$creadNonBlocking
                              ww1_saWWK ww2_saWWL ww4_saWWN ww6_saWWP GHC.Prim.void#;
                    };
              };
        };

GHC.IO.FD.$fBufferedIOFD4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.fdWriteNonBlocking"#;

GHC.IO.FD.$fBufferedIOFD_loc :: GHC.Base.String
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fBufferedIOFD4;

GHC.IO.FD.$fBufferedIOFD14
  :: System.Posix.Types.CSsize -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [ds1_saWWQ]
        case ds1_saWWQ of {
          GHC.Int.I64# x_saWWS [Occ=Once!] ->
              case x_saWWS of {
                __DEFAULT -> GHC.Types.False [];
                -1# -> GHC.Types.True [];
              };
        };

GHC.IO.FD.$fBufferedIOFD13 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.fdRead"#;

GHC.IO.FD.$fBufferedIOFD12 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fBufferedIOFD13;

GHC.IO.FD.$wreadRawBufferPtr [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.Word#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=7,
 Str=<L,U><S,U><S,1*U><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saWWU
           ww_saWWV
           ww1_saWWW
           ww2_saWWX
           ww3_saWWY
           ww4_saWWZ
           void_0E]
        let-no-escape {
          $sdo_read_saWX1 [Occ=Once*!T[2], Dmd=<L,1*C1(C1(U(U,U)))>]
            :: GHC.Types.IO System.Posix.Types.CSsize
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
          [LclId[JoinId(2)],
           Arity=2,
           Str=<C(S),C(U(U,U))><S,U>,
           Unf=OtherCon []] =
              sat-only [w_saWWU ww_saWWV] \r [eta_saWX2 void_0E]
                  let {
                    sat_saWXe [Occ=Once] :: GHC.Types.IO ()
                    [LclId] =
                        [ww_saWWV] \r [void_0E]
                            case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                              Unit# ds1_saWX8 [Occ=Once!] ->
                                  case ds1_saWX8 of {
                                    __DEFAULT ->
                                        case narrow32Int# [ww_saWWV] of sat_saWXa {
                                          __DEFAULT ->
                                              let {
                                                sat_saWXb [Occ=Once] :: System.Posix.Types.Fd
                                                [LclId] =
                                                    CCCS GHC.Int.I32#! [sat_saWXa];
                                              } in 
                                                GHC.Event.Thread.threadWaitRead1
                                                    GHC.Event.Internal.evtRead
                                                    sat_saWXb
                                                    GHC.Prim.void#;
                                        };
                                    0# ->
                                        case narrow32Int# [ww_saWWV] of sat_saWXc {
                                          __DEFAULT ->
                                              case
                                                  waitRead# [sat_saWXc GHC.Prim.void#]
                                              of
                                              s'_saWXd
                                              { (##) -> Unit# [GHC.Tuple.()];
                                              };
                                        };
                                  };
                            };
                  } in 
                    case
                        Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                            GHC.IO.FD.$fBufferedIOFD14
                            w_saWWU
                            eta_saWX2
                            sat_saWXe
                            GHC.Prim.void#
                    of
                    { Unit# ipv1_saWXh [Occ=Once] ->
                          let {
                            sat_saWXk [Occ=Once] :: GHC.Types.Int
                            [LclId] =
                                [ipv1_saWXh] \u []
                                    case ipv1_saWXh of {
                                      GHC.Int.I64# x#_saWXj [Occ=Once] -> GHC.Types.I# [x#_saWXj];
                                    };
                          } in  Unit# [sat_saWXk];
                    };
        } in 
          case ww1_saWWW of {
            __DEFAULT ->
                let {
                  sat_saWXt [Occ=Once] :: GHC.Types.IO System.Posix.Types.CSsize
                  [LclId] =
                      [ww_saWWV ww2_saWWX ww3_saWWY ww4_saWWZ] \r [void_0E]
                          case plusAddr# [ww2_saWWX ww3_saWWY] of sat_saWXo {
                            __DEFAULT ->
                                case
                                    __pkg_ccall base-4.11.0.0 [ww_saWWV
                                                               sat_saWXo
                                                               ww4_saWWZ
                                                               GHC.Prim.void#]
                                of
                                { Unit# ds11_saWXr [Occ=Once] ->
                                      let {
                                        sat_saWXs [Occ=Once] :: GHC.Int.Int64
                                        [LclId] =
                                            CCCS GHC.Int.I64#! [ds11_saWXr];
                                      } in  Unit# [sat_saWXs];
                                };
                          };
                } in  $sdo_read_saWX1 sat_saWXt GHC.Prim.void#;
            0# ->
                case
                    __pkg_ccall base-4.11.0.0 [ww_saWWV 0## 0# 0## GHC.Prim.void#]
                of
                { Unit# ds1_saWXx [Occ=Once] ->
                      let-no-escape {
                        $w$j_saWXy [InlPrag=NOUSERINLINE[0],
                                    Occ=Once*!T[2],
                                    Dmd=<L,1*C1(C1(U(U,U)))>]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> GHC.Prim.Int#
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                        [LclId[JoinId(2)], Arity=2, Str=<L,U><S,1*U>, Unf=OtherCon []] =
                            sat-only [ww_saWWV
                                      ww2_saWWX
                                      ww3_saWWY
                                      ww4_saWWZ
                                      $sdo_read_saWX1] \r [void_0E ww5_saWXA]
                                let-no-escape {
                                  read_saWXB [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                                  [LclId[JoinId(1)], Arity=1, Str=<L,U>, Unf=OtherCon []] =
                                      sat-only [ww_saWWV
                                                ww2_saWWX
                                                ww3_saWWY
                                                ww4_saWWZ
                                                $sdo_read_saWX1] \r [void_0E]
                                          case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                                            Unit# ds3_saWXG [Occ=Once!] ->
                                                case ds3_saWXG of {
                                                  __DEFAULT ->
                                                      let {
                                                        sat_saWXP [Occ=Once]
                                                          :: GHC.Types.IO System.Posix.Types.CSsize
                                                        [LclId] =
                                                            [ww_saWWV
                                                             ww2_saWWX
                                                             ww3_saWWY
                                                             ww4_saWWZ] \r [void_0E]
                                                                case
                                                                    plusAddr# [ww2_saWWX ww3_saWWY]
                                                                of
                                                                sat_saWXK
                                                                { __DEFAULT ->
                                                                      case
                                                                          __pkg_ccall_GC base-4.11.0.0 [ww_saWWV
                                                                                                        sat_saWXK
                                                                                                        ww4_saWWZ
                                                                                                        GHC.Prim.void#]
                                                                      of
                                                                      { Unit# ds11_saWXN [Occ=Once] ->
                                                                            let {
                                                                              sat_saWXO [Occ=Once]
                                                                                :: GHC.Int.Int64
                                                                              [LclId] =
                                                                                  CCCS GHC.Int.I64#! [ds11_saWXN];
                                                                            } in  Unit# [sat_saWXO];
                                                                      };
                                                                };
                                                      } in 
                                                        $sdo_read_saWX1 sat_saWXP GHC.Prim.void#;
                                                  0# ->
                                                      let {
                                                        sat_saWXX [Occ=Once]
                                                          :: GHC.Types.IO System.Posix.Types.CSsize
                                                        [LclId] =
                                                            [ww_saWWV
                                                             ww2_saWWX
                                                             ww3_saWWY
                                                             ww4_saWWZ] \r [void_0E]
                                                                case
                                                                    plusAddr# [ww2_saWWX ww3_saWWY]
                                                                of
                                                                sat_saWXS
                                                                { __DEFAULT ->
                                                                      case
                                                                          __pkg_ccall base-4.11.0.0 [ww_saWWV
                                                                                                     sat_saWXS
                                                                                                     ww4_saWWZ
                                                                                                     GHC.Prim.void#]
                                                                      of
                                                                      { Unit# ds11_saWXV [Occ=Once] ->
                                                                            let {
                                                                              sat_saWXW [Occ=Once]
                                                                                :: GHC.Int.Int64
                                                                              [LclId] =
                                                                                  CCCS GHC.Int.I64#! [ds11_saWXV];
                                                                            } in  Unit# [sat_saWXW];
                                                                      };
                                                                };
                                                      } in 
                                                        $sdo_read_saWX1 sat_saWXX GHC.Prim.void#;
                                                };
                                          };
                                } in 
                                  case ww5_saWXA of {
                                    __DEFAULT -> read_saWXB GHC.Prim.void#;
                                    0# ->
                                        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                                          Unit# ds3_saWY2 [Occ=Once!] ->
                                              case ds3_saWY2 of {
                                                __DEFAULT ->
                                                    case narrow32Int# [ww_saWWV] of sat_saWY4 {
                                                      __DEFAULT ->
                                                          let {
                                                            sat_saWY5 [Occ=Once]
                                                              :: System.Posix.Types.Fd
                                                            [LclId] =
                                                                CCCS GHC.Int.I32#! [sat_saWY4];
                                                          } in 
                                                            case
                                                                GHC.Event.Thread.threadWaitRead1
                                                                    GHC.Event.Internal.evtRead
                                                                    sat_saWY5
                                                                    GHC.Prim.void#
                                                            of
                                                            { Unit# _ [Occ=Dead] ->
                                                                  read_saWXB GHC.Prim.void#;
                                                            };
                                                    };
                                                0# ->
                                                    case narrow32Int# [ww_saWWV] of sat_saWY9 {
                                                      __DEFAULT ->
                                                          case
                                                              waitRead# [sat_saWY9 GHC.Prim.void#]
                                                          of
                                                          s'_saWYa
                                                          { (##) -> read_saWXB GHC.Prim.void#;
                                                          };
                                                    };
                                              };
                                        };
                                  };
                      } in 
                        case narrow32Int# [ds1_saWXx] of wild2_saWYb {
                          __DEFAULT -> $w$j_saWXy GHC.Prim.void# wild2_saWYb;
                          -1# ->
                              case Foreign.C.Error.throwErrno1 w_saWWU GHC.Prim.void# of {
                                Unit# ipv1_saWYe [Occ=Once] ->
                                    case ipv1_saWYe of {
                                      GHC.Int.I32# ww6_saWYg [Occ=Once] ->
                                          $w$j_saWXy GHC.Prim.void# ww6_saWYg;
                                    };
                              };
                        };
                };
          };

GHC.IO.FD.$fRawIOFD5 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saWYh w1_saWYi w2_saWYj w3_saWYk w4_saWYl void_0E]
        case w1_saWYi of {
          GHC.IO.FD.FD ww1_saWYo [Occ=Once] ww2_saWYp [Occ=Once] ->
              case w2_saWYj of {
                GHC.Ptr.Ptr ww4_saWYr [Occ=Once] ->
                    case w3_saWYk of {
                      GHC.Types.I# ww6_saWYt [Occ=Once] ->
                          case w4_saWYl of {
                            GHC.Word.W64# ww8_saWYv [Occ=Once] ->
                                GHC.IO.FD.$wreadRawBufferPtr
                                    w_saWYh
                                    ww1_saWYo
                                    ww2_saWYp
                                    ww4_saWYr
                                    ww6_saWYt
                                    ww8_saWYv
                                    GHC.Prim.void#;
                          };
                    };
              };
        };

GHC.IO.FD.$fRawIOFD4
  :: GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [fd_saWYw ptr_saWYx bytes_saWYy void_0E]
        case fd_saWYw of {
          GHC.IO.FD.FD ww1_saWYB [Occ=Once] ww2_saWYC [Occ=Once] ->
              case ptr_saWYx of {
                GHC.Ptr.Ptr ww4_saWYE [Occ=Once] ->
                    case bytes_saWYy of {
                      GHC.Types.I# x#_saWYG [Occ=Once] ->
                          case int2Word# [x#_saWYG] of sat_saWYH {
                            __DEFAULT ->
                                GHC.IO.FD.$wreadRawBufferPtr
                                    GHC.IO.FD.$fBufferedIOFD12
                                    ww1_saWYB
                                    ww2_saWYC
                                    ww4_saWYE
                                    0#
                                    sat_saWYH
                                    GHC.Prim.void#;
                          };
                    };
              };
        };

GHC.IO.FD.$wwriteRawBufferPtr [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.Word#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId,
 Arity=7,
 Str=<L,U><S,U><S,1*U><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saWYI
           ww_saWYJ
           ww1_saWYK
           ww2_saWYL
           ww3_saWYM
           ww4_saWYN
           void_0E]
        let-no-escape {
          $sdo_write_saWYP [Occ=Once*!T[2], Dmd=<L,1*C1(C1(U(U,U)))>]
            :: GHC.Types.IO System.Posix.Types.CSsize
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
          [LclId[JoinId(2)],
           Arity=2,
           Str=<C(S),C(U(U,U))><S,U>,
           Unf=OtherCon []] =
              sat-only [w_saWYI ww_saWYJ] \r [eta_saWYQ void_0E]
                  let {
                    sat_saWZ2 [Occ=Once] :: GHC.Types.IO ()
                    [LclId] =
                        [ww_saWYJ] \r [void_0E]
                            case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                              Unit# ds1_saWYW [Occ=Once!] ->
                                  case ds1_saWYW of {
                                    __DEFAULT ->
                                        case narrow32Int# [ww_saWYJ] of sat_saWYY {
                                          __DEFAULT ->
                                              let {
                                                sat_saWYZ [Occ=Once] :: System.Posix.Types.Fd
                                                [LclId] =
                                                    CCCS GHC.Int.I32#! [sat_saWYY];
                                              } in 
                                                GHC.Event.Thread.threadWaitRead1
                                                    GHC.Event.Internal.evtWrite
                                                    sat_saWYZ
                                                    GHC.Prim.void#;
                                        };
                                    0# ->
                                        case narrow32Int# [ww_saWYJ] of sat_saWZ0 {
                                          __DEFAULT ->
                                              case
                                                  waitWrite# [sat_saWZ0 GHC.Prim.void#]
                                              of
                                              s'_saWZ1
                                              { (##) -> Unit# [GHC.Tuple.()];
                                              };
                                        };
                                  };
                            };
                  } in 
                    case
                        Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                            GHC.IO.FD.$fBufferedIOFD14
                            w_saWYI
                            eta_saWYQ
                            sat_saWZ2
                            GHC.Prim.void#
                    of
                    { Unit# ipv1_saWZ5 [Occ=Once] ->
                          let {
                            sat_saWZ9 [Occ=Once] :: Foreign.C.Types.CInt
                            [LclId] =
                                [ipv1_saWZ5] \u []
                                    case ipv1_saWZ5 of {
                                      GHC.Int.I64# x#_saWZ7 [Occ=Once] ->
                                          case narrow32Int# [x#_saWZ7] of sat_saWZ8 {
                                            __DEFAULT -> GHC.Int.I32# [sat_saWZ8];
                                          };
                                    };
                          } in  Unit# [sat_saWZ9];
                    };
        } in 
          case ww1_saWYK of {
            __DEFAULT ->
                let {
                  sat_saWZi [Occ=Once] :: GHC.Types.IO System.Posix.Types.CSsize
                  [LclId] =
                      [ww_saWYJ ww2_saWYL ww3_saWYM ww4_saWYN] \r [void_0E]
                          case plusAddr# [ww2_saWYL ww3_saWYM] of sat_saWZd {
                            __DEFAULT ->
                                case
                                    __pkg_ccall base-4.11.0.0 [ww_saWYJ
                                                               sat_saWZd
                                                               ww4_saWYN
                                                               GHC.Prim.void#]
                                of
                                { Unit# ds11_saWZg [Occ=Once] ->
                                      let {
                                        sat_saWZh [Occ=Once] :: GHC.Int.Int64
                                        [LclId] =
                                            CCCS GHC.Int.I64#! [ds11_saWZg];
                                      } in  Unit# [sat_saWZh];
                                };
                          };
                } in  $sdo_write_saWYP sat_saWZi GHC.Prim.void#;
            0# ->
                case
                    __pkg_ccall base-4.11.0.0 [ww_saWYJ 1## 0# 0## GHC.Prim.void#]
                of
                { Unit# ds1_saWZm [Occ=Once] ->
                      let-no-escape {
                        write_saWZn [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
                        [LclId[JoinId(1)], Arity=1, Str=<L,U>, Unf=OtherCon []] =
                            sat-only [ww_saWYJ
                                      ww2_saWYL
                                      ww3_saWYM
                                      ww4_saWYN
                                      $sdo_write_saWYP] \r [void_0E]
                                case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                                  Unit# ds3_saWZs [Occ=Once!] ->
                                      case ds3_saWZs of {
                                        __DEFAULT ->
                                            let {
                                              sat_saWZB [Occ=Once]
                                                :: GHC.Types.IO System.Posix.Types.CSsize
                                              [LclId] =
                                                  [ww_saWYJ
                                                   ww2_saWYL
                                                   ww3_saWYM
                                                   ww4_saWYN] \r [void_0E]
                                                      case
                                                          plusAddr# [ww2_saWYL ww3_saWYM]
                                                      of
                                                      sat_saWZw
                                                      { __DEFAULT ->
                                                            case
                                                                __pkg_ccall_GC base-4.11.0.0 [ww_saWYJ
                                                                                              sat_saWZw
                                                                                              ww4_saWYN
                                                                                              GHC.Prim.void#]
                                                            of
                                                            { Unit# ds11_saWZz [Occ=Once] ->
                                                                  let {
                                                                    sat_saWZA [Occ=Once]
                                                                      :: GHC.Int.Int64
                                                                    [LclId] =
                                                                        CCCS GHC.Int.I64#! [ds11_saWZz];
                                                                  } in  Unit# [sat_saWZA];
                                                            };
                                                      };
                                            } in  $sdo_write_saWYP sat_saWZB GHC.Prim.void#;
                                        0# ->
                                            let {
                                              sat_saWZJ [Occ=Once]
                                                :: GHC.Types.IO System.Posix.Types.CSsize
                                              [LclId] =
                                                  [ww_saWYJ
                                                   ww2_saWYL
                                                   ww3_saWYM
                                                   ww4_saWYN] \r [void_0E]
                                                      case
                                                          plusAddr# [ww2_saWYL ww3_saWYM]
                                                      of
                                                      sat_saWZE
                                                      { __DEFAULT ->
                                                            case
                                                                __pkg_ccall base-4.11.0.0 [ww_saWYJ
                                                                                           sat_saWZE
                                                                                           ww4_saWYN
                                                                                           GHC.Prim.void#]
                                                            of
                                                            { Unit# ds11_saWZH [Occ=Once] ->
                                                                  let {
                                                                    sat_saWZI [Occ=Once]
                                                                      :: GHC.Int.Int64
                                                                    [LclId] =
                                                                        CCCS GHC.Int.I64#! [ds11_saWZH];
                                                                  } in  Unit# [sat_saWZI];
                                                            };
                                                      };
                                            } in  $sdo_write_saWYP sat_saWZJ GHC.Prim.void#;
                                      };
                                };
                      } in 
                        case narrow32Int# [ds1_saWZm] of {
                          __DEFAULT -> write_saWZn GHC.Prim.void#;
                          0# ->
                              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                                Unit# ds3_saWZO [Occ=Once!] ->
                                    case ds3_saWZO of {
                                      __DEFAULT ->
                                          case narrow32Int# [ww_saWYJ] of sat_saWZQ {
                                            __DEFAULT ->
                                                let {
                                                  sat_saWZR [Occ=Once] :: System.Posix.Types.Fd
                                                  [LclId] =
                                                      CCCS GHC.Int.I32#! [sat_saWZQ];
                                                } in 
                                                  case
                                                      GHC.Event.Thread.threadWaitRead1
                                                          GHC.Event.Internal.evtWrite
                                                          sat_saWZR
                                                          GHC.Prim.void#
                                                  of
                                                  { Unit# _ [Occ=Dead] ->
                                                        write_saWZn GHC.Prim.void#;
                                                  };
                                          };
                                      0# ->
                                          case narrow32Int# [ww_saWYJ] of sat_saWZV {
                                            __DEFAULT ->
                                                case
                                                    waitWrite# [sat_saWZV GHC.Prim.void#]
                                                of
                                                s'_saWZW
                                                { (##) -> write_saWZn GHC.Prim.void#;
                                                };
                                          };
                                    };
                              };
                        };
                };
          };

GHC.IO.FD.writeRawBufferPtr1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saWZX w1_saWZY w2_saWZZ w3_saX00 w4_saX01 void_0E]
        case w1_saWZY of {
          GHC.IO.FD.FD ww1_saX04 [Occ=Once] ww2_saX05 [Occ=Once] ->
              case w2_saWZZ of {
                GHC.Ptr.Ptr ww4_saX07 [Occ=Once] ->
                    case w3_saX00 of {
                      GHC.Types.I# ww6_saX09 [Occ=Once] ->
                          case w4_saX01 of {
                            GHC.Word.W64# ww8_saX0b [Occ=Once] ->
                                GHC.IO.FD.$wwriteRawBufferPtr
                                    w_saWZX
                                    ww1_saX04
                                    ww2_saX05
                                    ww4_saX07
                                    ww6_saX09
                                    ww8_saX0b
                                    GHC.Prim.void#;
                          };
                    };
              };
        };

GHC.IO.FD.$wfdWrite [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=5, Str=<S,U><S,U><S,U><S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_saX0c ww1_saX0d ww2_saX0e ww3_saX0f void_0E]
        case int2Word# [ww3_saX0f] of sat_saX0h {
          __DEFAULT ->
              case
                  GHC.IO.FD.$wwriteRawBufferPtr
                      lvl1_raWUY ww_saX0c ww1_saX0d ww2_saX0e 0# sat_saX0h GHC.Prim.void#
              of
              { Unit# ipv1_saX0k [Occ=Once] ->
                    case ipv1_saX0k of {
                      GHC.Int.I32# x#_saX0m ->
                          case <# [x#_saX0m ww3_saX0f] of {
                            __DEFAULT -> Unit# [GHC.Tuple.()];
                            1# ->
                                case -# [ww3_saX0f x#_saX0m] of sat_saX0p {
                                  __DEFAULT ->
                                      case plusAddr# [ww2_saX0e x#_saX0m] of sat_saX0o {
                                        __DEFAULT ->
                                            GHC.IO.FD.$wfdWrite
                                                ww_saX0c
                                                ww1_saX0d
                                                sat_saX0o
                                                sat_saX0p
                                                GHC.Prim.void#;
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.FD.$fRawIOFD2 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saX0q w1_saX0r w2_saX0s void_0E]
        case w_saX0q of {
          GHC.IO.FD.FD ww1_saX0v [Occ=Once] ww2_saX0w [Occ=Once] ->
              case w1_saX0r of {
                GHC.Ptr.Ptr ww4_saX0y [Occ=Once] ->
                    case w2_saX0s of {
                      GHC.Types.I# ww6_saX0A [Occ=Once] ->
                          GHC.IO.FD.$wfdWrite
                              ww1_saX0v ww2_saX0w ww4_saX0y ww6_saX0A GHC.Prim.void#;
                    };
              };
        };

GHC.IO.FD.$w$cwriteNonBlocking [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=5,
 Str=<S,U><S,1*U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_saX0B ww1_saX0C ww2_saX0D ww3_saX0E void_0E]
        case ww1_saX0C of {
          __DEFAULT ->
              let {
                sat_saX0O [Occ=Once] :: GHC.Types.IO System.Posix.Types.CSsize
                [LclId] =
                    [ww_saX0B ww2_saX0D ww3_saX0E] \r [void_0E]
                        case int2Word# [ww3_saX0E] of sat_saX0J {
                          __DEFAULT ->
                              case
                                  __pkg_ccall base-4.11.0.0 [ww_saX0B
                                                             ww2_saX0D
                                                             sat_saX0J
                                                             GHC.Prim.void#]
                              of
                              { Unit# ds11_saX0M [Occ=Once] ->
                                    let {
                                      sat_saX0N [Occ=Once] :: GHC.Int.Int64
                                      [LclId] =
                                          CCCS GHC.Int.I64#! [ds11_saX0M];
                                    } in  Unit# [sat_saX0N];
                              };
                        };
              } in 
                case
                    GHC.IO.FD.$fBufferedIOFD5
                        GHC.IO.FD.$fBufferedIOFD_loc
                        sat_saX0O
                        GHC.IO.FD.$fBufferedIOFD3
                        GHC.Prim.void#
                of
                { Unit# ipv1_saX0R [Occ=Once] ->
                      case ipv1_saX0R of {
                        GHC.Int.I64# x_saX0T [Occ=Once!] ->
                            case x_saX0T of wild2_saX0U {
                              __DEFAULT ->
                                  case narrow32Int# [wild2_saX0U] of sat_saX0V {
                                    __DEFAULT ->
                                        let {
                                          sat_saX0W [Occ=Once] :: GHC.Types.Int
                                          [LclId] =
                                              CCCS GHC.Types.I#! [sat_saX0V];
                                        } in  Unit# [sat_saX0W];
                                  };
                              -1# -> Unit# [GHC.IO.FD.$fBufferedIOFD2];
                            };
                      };
                };
          0# ->
              case
                  __pkg_ccall base-4.11.0.0 [ww_saX0B 1## 0# 0## GHC.Prim.void#]
              of
              { Unit# ds1_saX10 [Occ=Once] ->
                    case narrow32Int# [ds1_saX10] of {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                            Unit# ds3_saX15 [Occ=Once!] ->
                                case ds3_saX15 of {
                                  __DEFAULT ->
                                      let {
                                        sat_saX1e [Occ=Once]
                                          :: GHC.Types.IO System.Posix.Types.CSsize
                                        [LclId] =
                                            [ww_saX0B ww2_saX0D ww3_saX0E] \r [void_0E]
                                                case int2Word# [ww3_saX0E] of sat_saX19 {
                                                  __DEFAULT ->
                                                      case
                                                          __pkg_ccall_GC base-4.11.0.0 [ww_saX0B
                                                                                        ww2_saX0D
                                                                                        sat_saX19
                                                                                        GHC.Prim.void#]
                                                      of
                                                      { Unit# ds11_saX1c [Occ=Once] ->
                                                            let {
                                                              sat_saX1d [Occ=Once] :: GHC.Int.Int64
                                                              [LclId] =
                                                                  CCCS GHC.Int.I64#! [ds11_saX1c];
                                                            } in  Unit# [sat_saX1d];
                                                      };
                                                };
                                      } in 
                                        case
                                            GHC.IO.FD.$fBufferedIOFD5
                                                GHC.IO.FD.$fBufferedIOFD_loc
                                                sat_saX1e
                                                GHC.IO.FD.$fBufferedIOFD3
                                                GHC.Prim.void#
                                        of
                                        { Unit# ipv1_saX1h [Occ=Once] ->
                                              case ipv1_saX1h of {
                                                GHC.Int.I64# x_saX1j [Occ=Once!] ->
                                                    case x_saX1j of wild6_saX1k {
                                                      __DEFAULT ->
                                                          case
                                                              narrow32Int# [wild6_saX1k]
                                                          of
                                                          sat_saX1l
                                                          { __DEFAULT ->
                                                                let {
                                                                  sat_saX1m [Occ=Once]
                                                                    :: GHC.Types.Int
                                                                  [LclId] =
                                                                      CCCS GHC.Types.I#! [sat_saX1l];
                                                                } in  Unit# [sat_saX1m];
                                                          };
                                                      -1# -> Unit# [GHC.IO.FD.$fBufferedIOFD2];
                                                    };
                                              };
                                        };
                                  0# ->
                                      let {
                                        sat_saX1u [Occ=Once]
                                          :: GHC.Types.IO System.Posix.Types.CSsize
                                        [LclId] =
                                            [ww_saX0B ww2_saX0D ww3_saX0E] \r [void_0E]
                                                case int2Word# [ww3_saX0E] of sat_saX1p {
                                                  __DEFAULT ->
                                                      case
                                                          __pkg_ccall base-4.11.0.0 [ww_saX0B
                                                                                     ww2_saX0D
                                                                                     sat_saX1p
                                                                                     GHC.Prim.void#]
                                                      of
                                                      { Unit# ds11_saX1s [Occ=Once] ->
                                                            let {
                                                              sat_saX1t [Occ=Once] :: GHC.Int.Int64
                                                              [LclId] =
                                                                  CCCS GHC.Int.I64#! [ds11_saX1s];
                                                            } in  Unit# [sat_saX1t];
                                                      };
                                                };
                                      } in 
                                        case
                                            GHC.IO.FD.$fBufferedIOFD5
                                                GHC.IO.FD.$fBufferedIOFD_loc
                                                sat_saX1u
                                                GHC.IO.FD.$fBufferedIOFD3
                                                GHC.Prim.void#
                                        of
                                        { Unit# ipv1_saX1x [Occ=Once] ->
                                              case ipv1_saX1x of {
                                                GHC.Int.I64# x_saX1z [Occ=Once!] ->
                                                    case x_saX1z of wild6_saX1A {
                                                      __DEFAULT ->
                                                          case
                                                              narrow32Int# [wild6_saX1A]
                                                          of
                                                          sat_saX1B
                                                          { __DEFAULT ->
                                                                let {
                                                                  sat_saX1C [Occ=Once]
                                                                    :: GHC.Types.Int
                                                                  [LclId] =
                                                                      CCCS GHC.Types.I#! [sat_saX1B];
                                                                } in  Unit# [sat_saX1C];
                                                          };
                                                      -1# -> Unit# [GHC.IO.FD.$fBufferedIOFD2];
                                                    };
                                              };
                                        };
                                };
                          };
                      0# -> Unit# [GHC.IO.FD.$fBufferedIOFD2];
                    };
              };
        };

GHC.IO.FD.$fRawIOFD1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saX1D w1_saX1E w2_saX1F void_0E]
        case w_saX1D of {
          GHC.IO.FD.FD ww1_saX1I [Occ=Once] ww2_saX1J [Occ=Once] ->
              case w1_saX1E of {
                GHC.Ptr.Ptr ww4_saX1L [Occ=Once] ->
                    case w2_saX1F of {
                      GHC.Types.I# ww6_saX1N [Occ=Once] ->
                          GHC.IO.FD.$w$cwriteNonBlocking
                              ww1_saX1I ww2_saX1J ww4_saX1L ww6_saX1N GHC.Prim.void#;
                    };
              };
        };

GHC.IO.FD.$fRawIOFD [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.IO.Device.RawIO GHC.IO.FD.FD
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.IO.Device.C:RawIO! [GHC.IO.FD.$fRawIOFD4
                                          GHC.IO.FD.$fRawIOFD3
                                          GHC.IO.FD.$fRawIOFD2
                                          GHC.IO.FD.$fRawIOFD1];

GHC.IO.FD.$fBufferedIOFD_$swriteBuf1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Word.Word8 #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,U)><S(SLLLSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w1_saX1O w2_saX1P void_0E]
        case w2_saX1P of {
          GHC.IO.Buffer.Buffer ww1_saX1S
                               ww2_saX1T
                               ww3_saX1U [Occ=Once]
                               ww4_saX1V [Occ=Once]
                               ww5_saX1W
                               ww6_saX1X [Occ=Once] ->
              case w1_saX1O of {
                GHC.IO.FD.FD ww8_saX1Z [Occ=Once] ww9_saX20 [Occ=Once] ->
                    case -# [ww6_saX1X ww5_saX1W] of sat_saX22 {
                      __DEFAULT ->
                          case plusAddr# [ww1_saX1S ww5_saX1W] of sat_saX21 {
                            __DEFAULT ->
                                case
                                    GHC.IO.FD.$wfdWrite
                                        ww8_saX1Z ww9_saX20 sat_saX21 sat_saX22 GHC.Prim.void#
                                of
                                { Unit# _ [Occ=Dead] ->
                                      case touch# [ww2_saX1T GHC.Prim.void#] of s'_saX26 {
                                        (##) ->
                                            let {
                                              sat_saX27 [Occ=Once]
                                                :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                              [LclId] =
                                                  CCCS GHC.IO.Buffer.Buffer! [ww1_saX1S
                                                                              ww2_saX1T
                                                                              ww3_saX1U
                                                                              ww4_saX1V
                                                                              0#
                                                                              0#];
                                            } in  Unit# [sat_saX27];
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.FD.fdIsNonBlocking :: GHC.IO.FD.FD -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LS),1*U(A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_saX28]
        case ds_saX28 of {
          GHC.IO.FD.FD _ [Occ=Dead] dt1_saX2b [Occ=Once] ->
              GHC.Types.I# [dt1_saX2b];
        };

GHC.IO.FD.fdFD :: GHC.IO.FD.FD -> Foreign.C.Types.CInt
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_saX2c]
        case ds_saX2c of {
          GHC.IO.FD.FD dt_saX2e [Occ=Once] _ [Occ=Dead] ->
              GHC.Int.I32# [dt_saX2e];
        };

GHC.IO.FD.$fShowFD_$cshow :: GHC.IO.FD.FD -> GHC.Base.String
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)>m2,
 Unf=OtherCon []] =
    [] \r [fd_saX2g]
        case fd_saX2g of {
          GHC.IO.FD.FD dt_saX2i [Occ=Once] _ [Occ=Dead] ->
              case GHC.Show.$wshowSignedInt 0# dt_saX2i GHC.Types.[] of {
                (#,#) ww5_saX2l [Occ=Once] ww6_saX2m [Occ=Once] ->
                    : [ww5_saX2l ww6_saX2m];
              };
        };

GHC.IO.FD.$fBufferedIOFD15
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Word.Word8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,A><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [_dev_saX2n state_saX2o void_0E]
        case newMutVar# [GHC.ForeignPtr.NoFinalizers GHC.Prim.void#] of {
          Unit# ipv1_saX2s [Occ=Once] ->
              case newPinnedByteArray# [8192# GHC.Prim.void#] of {
                Unit# ipv3_saX2v ->
                    let {
                      sat_saX2x [Occ=Once] :: GHC.ForeignPtr.ForeignPtrContents
                      [LclId] =
                          CCCS GHC.ForeignPtr.MallocPtr! [ipv3_saX2v ipv1_saX2s];
                    } in 
                      case byteArrayContents# [ipv3_saX2v] of sat_saX2w {
                        __DEFAULT ->
                            let {
                              sat_saX2y [Occ=Once] :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                              [LclId] =
                                  CCCS GHC.IO.Buffer.Buffer! [sat_saX2w
                                                              sat_saX2x
                                                              state_saX2o
                                                              8192#
                                                              0#
                                                              0#];
                            } in  Unit# [sat_saX2y];
                      };
              };
        };

GHC.IO.FD.$fIODeviceFD12
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=2, Str=<L,1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [fd_saX2z void_0E]
        let {
          sat_saX2E [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_saX2z] \s []
                  case fd_saX2z of {
                    GHC.IO.FD.FD dt_saX2C [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_saX2C];
                  };
        } in  System.Posix.Internals.fdFileSize1 sat_saX2E GHC.Prim.void#;

GHC.IO.FD.$fIODeviceFD9
  :: GHC.IO.FD.FD
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<L,1*U(U,A)><L,1*U><S,U>, Unf=OtherCon []] =
    [] \r [fd_saX2F on_saX2G void_0E]
        let {
          sat_saX2L [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_saX2F] \s []
                  case fd_saX2F of {
                    GHC.IO.FD.FD dt_saX2J [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_saX2J];
                  };
        } in 
          System.Posix.Internals.setEcho1 sat_saX2L on_saX2G GHC.Prim.void#;

GHC.IO.FD.$fIODeviceFD8
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId, Arity=2, Str=<L,1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [fd_saX2M void_0E]
        let {
          sat_saX2R [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_saX2M] \s []
                  case fd_saX2M of {
                    GHC.IO.FD.FD dt_saX2P [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_saX2P];
                  };
        } in 
          System.Posix.Internals.getEcho3
              sat_saX2R System.Posix.Internals.getEcho2 GHC.Prim.void#;

GHC.IO.FD.$fIODeviceFD7
  :: GHC.IO.FD.FD
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<L,1*U(U,A)><L,1*U><S,U>, Unf=OtherCon []] =
    [] \r [fd_saX2S raw_saX2T void_0E]
        let {
          sat_saX30 [Occ=Once] :: GHC.Types.Bool
          [LclId] =
              [raw_saX2T] \u []
                  case raw_saX2T of {
                    GHC.Types.False -> GHC.Types.True [];
                    GHC.Types.True -> GHC.Types.False [];
                  }; } in
        let {
          sat_saX2Y [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_saX2S] \s []
                  case fd_saX2S of {
                    GHC.IO.FD.FD dt_saX2W [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_saX2W];
                  };
        } in 
          System.Posix.Internals.setCooked1
              sat_saX2Y sat_saX30 GHC.Prim.void#;

GHC.IO.FD.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.IO.FD.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.FD.$trModule4];

GHC.IO.FD.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD"#;

GHC.IO.FD.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.FD.$trModule2];

GHC.IO.FD.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.IO.FD.$trModule3
                                     GHC.IO.FD.$trModule1];

$krep_raWV0 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcInt
                                              GHC.Types.[]];

$krep1_raWV1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCInt
                                              GHC.Types.[]];

GHC.IO.FD.$tcFD2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "FD"#;

GHC.IO.FD.$tcFD1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.FD.$tcFD2];

GHC.IO.FD.$tcFD :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10838815552519039062##
                                    15546290101957756376##
                                    GHC.IO.FD.$trModule
                                    GHC.IO.FD.$tcFD1
                                    0#
                                    GHC.Types.krep$*];

$krep2_raWV2 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.IO.FD.$tcFD
                                              GHC.Types.[]];

$krep3_raWV3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_raWV0 $krep2_raWV2];

GHC.IO.FD.$tc'FD1 [InlPrag=NOUSERINLINE[~]] :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_raWV1 $krep3_raWV3];

GHC.IO.FD.$tc'FD3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'FD"#;

GHC.IO.FD.$tc'FD2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.FD.$tc'FD3];

GHC.IO.FD.$tc'FD :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9025179437427398028##
                                    18071003818566613836##
                                    GHC.IO.FD.$trModule
                                    GHC.IO.FD.$tc'FD2
                                    0#
                                    GHC.IO.FD.$tc'FD1];

GHC.IO.FD.$fShowFD_$cshowsPrec
  :: GHC.Types.Int -> GHC.IO.FD.FD -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,A><S(SL),1*U(U,A)><L,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_saX31 x_saX32 s_saX33]
        case x_saX32 of {
          GHC.IO.FD.FD dt_saX35 [Occ=Once] _ [Occ=Dead] ->
              case GHC.Show.$wshowSignedInt 0# dt_saX35 GHC.Types.[] of {
                (#,#) ww5_saX38 [Occ=Once] ww6_saX39 [Occ=Once] ->
                    let {
                      sat_saX3a [Occ=Once] :: [GHC.Types.Char]
                      [LclId] =
                          CCCS :! [ww5_saX38 ww6_saX39];
                    } in  GHC.Base.++ sat_saX3a s_saX33;
              };
        };

GHC.IO.FD.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int# -> GHC.Base.String -> [GHC.Types.Char]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U>,
 Unf=OtherCon []] =
    [] \r [ww_saX3b w_saX3c]
        case GHC.Show.$wshowSignedInt 0# ww_saX3b GHC.Types.[] of {
          (#,#) ww5_saX3e [Occ=Once] ww6_saX3f [Occ=Once] ->
              let {
                sat_saX3g [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    CCCS :! [ww5_saX3e ww6_saX3f];
              } in  GHC.Base.++ sat_saX3g w_saX3c;
        };

GHC.IO.FD.$fShowFD1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><L,1*U>,
 Unf=OtherCon []] =
    [] \r [w_saX3h w1_saX3i]
        case w_saX3h of {
          GHC.IO.FD.FD ww1_saX3k [Occ=Once] _ [Occ=Dead] ->
              GHC.IO.FD.$wlvl ww1_saX3k w1_saX3i;
        };

GHC.IO.FD.$fShowFD_$cshowList :: [GHC.IO.FD.FD] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=OtherCon []] =
    [] \r [ls_saX3m s_saX3n]
        GHC.Show.showList__ GHC.IO.FD.$fShowFD1 ls_saX3m s_saX3n;

GHC.IO.FD.$fShowFD [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.IO.FD.FD
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.IO.FD.$fShowFD_$cshowsPrec
                                    GHC.IO.FD.$fShowFD_$cshow
                                    GHC.IO.FD.$fShowFD_$cshowList];

output_flags_raWV4 :: GHC.Int.Int32
[GblId] =
    [] \u []
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
          Unit# ds1_saX3r [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                Unit# ds3_saX3v [Occ=Once] ->
                    case narrow32Int# [ds3_saX3v] of sat_saX3y {
                      __DEFAULT ->
                          case int2Word# [sat_saX3y] of sat_saX3z {
                            __DEFAULT ->
                                case narrow32Int# [ds1_saX3r] of sat_saX3w {
                                  __DEFAULT ->
                                      case int2Word# [sat_saX3w] of sat_saX3x {
                                        __DEFAULT ->
                                            case or# [sat_saX3x sat_saX3z] of sat_saX3A {
                                              __DEFAULT ->
                                                  case word2Int# [sat_saX3A] of sat_saX3B {
                                                    __DEFAULT -> GHC.Int.I32# [sat_saX3B];
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

write_flags_raWV5 :: GHC.Int.Int32
[GblId] =
    [] \u []
        case output_flags_raWV4 of {
          GHC.Int.I32# x#_saX3D [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                Unit# ds1_saX3H [Occ=Once] ->
                    case narrow32Int# [ds1_saX3H] of sat_saX3J {
                      __DEFAULT ->
                          case int2Word# [sat_saX3J] of sat_saX3K {
                            __DEFAULT ->
                                case int2Word# [x#_saX3D] of sat_saX3I {
                                  __DEFAULT ->
                                      case or# [sat_saX3I sat_saX3K] of sat_saX3L {
                                        __DEFAULT ->
                                            case word2Int# [sat_saX3L] of sat_saX3M {
                                              __DEFAULT -> GHC.Int.I32# [sat_saX3M];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

append_flags_raWV6 :: GHC.Int.Int32
[GblId] =
    [] \u []
        case write_flags_raWV5 of {
          GHC.Int.I32# x#_saX3O [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                Unit# ds1_saX3S [Occ=Once] ->
                    case narrow32Int# [ds1_saX3S] of sat_saX3U {
                      __DEFAULT ->
                          case int2Word# [sat_saX3U] of sat_saX3V {
                            __DEFAULT ->
                                case int2Word# [x#_saX3O] of sat_saX3T {
                                  __DEFAULT ->
                                      case or# [sat_saX3T sat_saX3V] of sat_saX3W {
                                        __DEFAULT ->
                                            case word2Int# [sat_saX3W] of sat_saX3X {
                                              __DEFAULT -> GHC.Int.I32# [sat_saX3X];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

rw_flags_raWV7 :: GHC.Int.Int32
[GblId] =
    [] \u []
        case output_flags_raWV4 of {
          GHC.Int.I32# x#_saX3Z [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                Unit# ds1_saX43 [Occ=Once] ->
                    case narrow32Int# [ds1_saX43] of sat_saX45 {
                      __DEFAULT ->
                          case int2Word# [sat_saX45] of sat_saX46 {
                            __DEFAULT ->
                                case int2Word# [x#_saX3Z] of sat_saX44 {
                                  __DEFAULT ->
                                      case or# [sat_saX44 sat_saX46] of sat_saX47 {
                                        __DEFAULT ->
                                            case word2Int# [sat_saX47] of sat_saX48 {
                                              __DEFAULT -> GHC.Int.I32# [sat_saX48];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

read_flags_raWV8 :: GHC.Int.Int32
[GblId] =
    [] \u []
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
          Unit# ds1_saX4c [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                Unit# ds3_saX4g [Occ=Once] ->
                    case narrow32Int# [ds3_saX4g] of sat_saX4j {
                      __DEFAULT ->
                          case int2Word# [sat_saX4j] of sat_saX4k {
                            __DEFAULT ->
                                case narrow32Int# [ds1_saX4c] of sat_saX4h {
                                  __DEFAULT ->
                                      case int2Word# [sat_saX4h] of sat_saX4i {
                                        __DEFAULT ->
                                            case or# [sat_saX4i sat_saX4k] of sat_saX4l {
                                              __DEFAULT ->
                                                  case word2Int# [sat_saX4l] of sat_saX4m {
                                                    __DEFAULT -> GHC.Int.I32# [sat_saX4m];
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.FD.$fIODeviceFD16
  :: System.Posix.Types.COff -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [ds1_saX4n]
        case ds1_saX4n of {
          GHC.Int.I64# x_saX4p [Occ=Once!] ->
              case x_saX4p of {
                __DEFAULT -> GHC.Types.False [];
                -1# -> GHC.Types.True [];
              };
        };

GHC.IO.FD.$fIODeviceFD15 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetPosn"#;

GHC.IO.FD.$fIODeviceFD14 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fIODeviceFD15;

GHC.IO.FD.$w$ctell [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=2, Str=<L,U><L,U>, Unf=OtherCon []] =
    [] \r [ww_saX4r void_0E]
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
          Unit# ds1_saX4w [Occ=Once] ->
              let {
                sat_saX4E [Occ=Once] :: GHC.Types.IO System.Posix.Types.COff
                [LclId] =
                    [ww_saX4r ds1_saX4w] \r [void_0E]
                        case narrow32Int# [ds1_saX4w] of sat_saX4z {
                          __DEFAULT ->
                              case
                                  __pkg_ccall base-4.11.0.0 [ww_saX4r 0# sat_saX4z GHC.Prim.void#]
                              of
                              { Unit# ds11_saX4C [Occ=Once] ->
                                    let {
                                      sat_saX4D [Occ=Once] :: GHC.Int.Int64
                                      [LclId] =
                                          CCCS GHC.Int.I64#! [ds11_saX4C];
                                    } in  Unit# [sat_saX4D];
                              };
                        };
              } in 
                case
                    Foreign.C.Error.throwErrnoIfMinus1Retry2
                        GHC.IO.FD.$fIODeviceFD16
                        GHC.IO.FD.$fIODeviceFD14
                        sat_saX4E
                        GHC.Prim.void#
                of
                { Unit# ipv1_saX4H [Occ=Once] ->
                      let {
                        sat_saX4I [Occ=Once] :: GHC.Integer.Type.Integer
                        [LclId] =
                            [ipv1_saX4H] \u [] GHC.Int.$fIntegralInt64_$ctoInteger ipv1_saX4H;
                      } in  Unit# [sat_saX4I];
                };
        };

GHC.IO.FD.$fIODeviceFD13 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=2, Str=<S(SL),1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [w_saX4J void_0E]
        case w_saX4J of {
          GHC.IO.FD.FD ww1_saX4M [Occ=Once] _ [Occ=Dead] ->
              GHC.IO.FD.$w$ctell ww1_saX4M GHC.Prim.void#;
        };

GHC.IO.FD.$fIODeviceFD19 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "seek"#;

GHC.IO.FD.$fIODeviceFD18 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fIODeviceFD19;

GHC.IO.FD.$w$cseek [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.IO.Device.SeekMode
     -> GHC.Integer.Type.Integer
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=4, Str=<L,U><S,1*U><S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ww_saX4O w_saX4P w1_saX4Q void_0E]
        case GHC.Integer.Type.integerToInt w1_saX4Q of wild_saX4S {
          __DEFAULT ->
              let-no-escape {
                $j_saX4T [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                  :: GHC.Prim.Int# -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                    sat-only [ww_saX4O wild_saX4S] \r [ds8_saX4U]
                        let {
                          sat_saX51 [Occ=Once] :: GHC.Types.IO System.Posix.Types.COff
                          [LclId] =
                              [ww_saX4O wild_saX4S ds8_saX4U] \r [void_0E]
                                  case
                                      __pkg_ccall base-4.11.0.0 [ww_saX4O
                                                                 wild_saX4S
                                                                 ds8_saX4U
                                                                 GHC.Prim.void#]
                                  of
                                  { Unit# ds11_saX4Z [Occ=Once] ->
                                        let {
                                          sat_saX50 [Occ=Once] :: GHC.Int.Int64
                                          [LclId] =
                                              CCCS GHC.Int.I64#! [ds11_saX4Z];
                                        } in  Unit# [sat_saX50];
                                  };
                        } in 
                          case
                              Foreign.C.Error.throwErrnoIfMinus1Retry2
                                  GHC.IO.FD.$fIODeviceFD16
                                  GHC.IO.FD.$fIODeviceFD18
                                  sat_saX51
                                  GHC.Prim.void#
                          of
                          { Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
                          };
              } in 
                case w_saX4P of {
                  GHC.IO.Device.AbsoluteSeek ->
                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                        Unit# ds1_saX59 [Occ=Once] ->
                            case narrow32Int# [ds1_saX59] of sat_saX5a {
                              __DEFAULT -> $j_saX4T sat_saX5a;
                            };
                      };
                  GHC.IO.Device.RelativeSeek ->
                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                        Unit# ds1_saX5e [Occ=Once] ->
                            case narrow32Int# [ds1_saX5e] of sat_saX5f {
                              __DEFAULT -> $j_saX4T sat_saX5f;
                            };
                      };
                  GHC.IO.Device.SeekFromEnd ->
                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                        Unit# ds1_saX5j [Occ=Once] ->
                            case narrow32Int# [ds1_saX5j] of sat_saX5k {
                              __DEFAULT -> $j_saX4T sat_saX5k;
                            };
                      };
                };
        };

GHC.IO.FD.$fIODeviceFD17 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.Device.SeekMode
     -> GHC.Integer.Type.Integer
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<S(SL),1*U(U,A)><S,1*U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saX5l w1_saX5m w2_saX5n void_0E]
        case w_saX5l of {
          GHC.IO.FD.FD ww1_saX5q [Occ=Once] _ [Occ=Dead] ->
              GHC.IO.FD.$w$cseek ww1_saX5q w1_saX5m w2_saX5n GHC.Prim.void#;
        };

GHC.IO.FD.stdin :: GHC.IO.FD.FD
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.FD.FD! [0# 0#];

GHC.IO.FD.stdout :: GHC.IO.FD.FD
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.FD.FD! [1# 0#];

GHC.IO.FD.stderr :: GHC.IO.FD.FD
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.FD.FD! [2# 0#];

lvl3_raWV9 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.setSize"#;

lvl4_raWVa :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl3_raWV9;

GHC.IO.FD.$fIODeviceFD11
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [void_0E ds2_saX5t]
        case narrow32Int# [ds2_saX5t] of sat_saX5u {
          __DEFAULT ->
              Foreign.C.Error.$wlvl lvl4_raWVa sat_saX5u GHC.Prim.void#;
        };

GHC.IO.FD.$wsetSize [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Integer.Type.Integer
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<S,U><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [ww_saX5v w_saX5w void_0E]
        case GHC.Integer.Type.integerToInt w_saX5w of wild_saX5y {
          __DEFAULT ->
              case
                  __pkg_ccall base-4.11.0.0 [ww_saX5v wild_saX5y GHC.Prim.void#]
              of
              { Unit# ds8_saX5C [Occ=Once] ->
                    case narrow32Int# [ds8_saX5C] of {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                            Unit# ds2_saX5H [Occ=Once] ->
                                GHC.IO.FD.$fIODeviceFD11 GHC.Prim.void# ds2_saX5H;
                          };
                      0# -> Unit# [GHC.Tuple.()];
                    };
              };
        };

GHC.IO.FD.$fIODeviceFD10 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Integer.Type.Integer
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Str=<S(SL),1*U(U,A)><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saX5J w1_saX5K void_0E]
        case w_saX5J of {
          GHC.IO.FD.FD ww1_saX5N [Occ=Once] _ [Occ=Dead] ->
              GHC.IO.FD.$wsetSize ww1_saX5N w1_saX5K GHC.Prim.void#;
        };

GHC.IO.FD.writeRawBufferPtr
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Types.IO Foreign.C.Types.CInt
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.FD.writeRawBufferPtr1
            eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.FD.readRawBufferPtrNoBlock
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.FD.readRawBufferPtrNoBlock1
            eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.FD.readRawBufferPtr
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.FD.$fRawIOFD5
            eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.FD.$w$cfillReadBuffer0 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Base.Maybe GHC.Types.Int,
            GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=9,
 Str=<S,U><S,1*U><S,U><L,U><L,U><S,U><L,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_saX5P
           ww1_saX5Q
           ww2_saX5R
           ww3_saX5S
           ww4_saX5T
           ww5_saX5U
           ww6_saX5V
           ww7_saX5W
           void_0E]
        case -# [ww5_saX5U ww7_saX5W] of sat_saX5Z {
          __DEFAULT ->
              case int2Word# [sat_saX5Z] of sat_saX60 {
                __DEFAULT ->
                    case plusAddr# [ww2_saX5R ww7_saX5W] of sat_saX5Y {
                      __DEFAULT ->
                          case
                              GHC.IO.FD.$wreadRawBufferPtrNoBlock
                                  GHC.IO.FD.$fBufferedIOFD8
                                  ww_saX5P
                                  ww1_saX5Q
                                  sat_saX5Y
                                  0#
                                  sat_saX60
                                  GHC.Prim.void#
                          of
                          { Unit# ipv1_saX63 [Occ=Once!] ->
                                case ipv1_saX63 of wild_saX64 {
                                  GHC.Types.I# ds_saX65 [Occ=Once!] ->
                                      case ds_saX65 of ds2_saX66 {
                                        __DEFAULT ->
                                            case touch# [ww3_saX5S GHC.Prim.void#] of s'_saX67 {
                                              (##) ->
                                                  case +# [ww7_saX5W ds2_saX66] of sat_saX69 {
                                                    __DEFAULT ->
                                                        let {
                                                          sat_saX6a [Occ=Once]
                                                            :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                                          [LclId] =
                                                              CCCS GHC.IO.Buffer.Buffer! [ww2_saX5R
                                                                                          ww3_saX5S
                                                                                          ww4_saX5T
                                                                                          ww5_saX5U
                                                                                          ww6_saX5V
                                                                                          sat_saX69]; } in
                                                        let {
                                                          sat_saX68 [Occ=Once]
                                                            :: GHC.Base.Maybe GHC.Types.Int
                                                          [LclId] =
                                                              CCCS GHC.Base.Just! [wild_saX64]; } in
                                                        let {
                                                          sat_saX6b [Occ=Once]
                                                            :: (GHC.Base.Maybe GHC.Types.Int,
                                                                GHC.IO.Buffer.Buffer GHC.Word.Word8)
                                                          [LclId] =
                                                              CCCS (,)! [sat_saX68 sat_saX6a];
                                                        } in  Unit# [sat_saX6b];
                                                  };
                                            };
                                        -1# ->
                                            case touch# [ww3_saX5S GHC.Prim.void#] of s'_saX6c {
                                              (##) ->
                                                  let {
                                                    sat_saX6d [Occ=Once]
                                                      :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                                    [LclId] =
                                                        CCCS GHC.IO.Buffer.Buffer! [ww2_saX5R
                                                                                    ww3_saX5S
                                                                                    ww4_saX5T
                                                                                    ww5_saX5U
                                                                                    ww6_saX5V
                                                                                    ww7_saX5W]; } in
                                                  let {
                                                    sat_saX6e [Occ=Once]
                                                      :: (GHC.Base.Maybe GHC.Types.Int,
                                                          GHC.IO.Buffer.Buffer GHC.Word.Word8)
                                                    [LclId] =
                                                        CCCS (,)! [GHC.Base.Nothing sat_saX6d];
                                                  } in  Unit# [sat_saX6e];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.FD.$fBufferedIOFD7 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Base.Maybe GHC.Types.Int,
            GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,1*U)><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saX6f w1_saX6g void_0E]
        case w_saX6f of {
          GHC.IO.FD.FD ww1_saX6j [Occ=Once] ww2_saX6k [Occ=Once] ->
              case w1_saX6g of {
                GHC.IO.Buffer.Buffer ww4_saX6m [Occ=Once]
                                     ww5_saX6n [Occ=Once]
                                     ww6_saX6o [Occ=Once]
                                     ww7_saX6p [Occ=Once]
                                     ww8_saX6q [Occ=Once]
                                     ww9_saX6r [Occ=Once] ->
                    GHC.IO.FD.$w$cfillReadBuffer0
                        ww1_saX6j
                        ww2_saX6k
                        ww4_saX6m
                        ww5_saX6n
                        ww6_saX6o
                        ww7_saX6p
                        ww8_saX6q
                        ww9_saX6r
                        GHC.Prim.void#;
              };
        };

GHC.IO.FD.$w$cflushWriteBuffer0 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=9,
 Str=<S,U><S,1*U><S,U><L,U><L,U><L,U><S,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_saX6s
           ww1_saX6t
           ww2_saX6u
           ww3_saX6v
           ww4_saX6w
           ww5_saX6x
           ww6_saX6y
           ww7_saX6z
           void_0E]
        case -# [ww7_saX6z ww6_saX6y] of sat_saX6C {
          __DEFAULT ->
              case plusAddr# [ww2_saX6u ww6_saX6y] of sat_saX6B {
                __DEFAULT ->
                    case
                        GHC.IO.FD.$w$cwriteNonBlocking
                            ww_saX6s ww1_saX6t sat_saX6B sat_saX6C GHC.Prim.void#
                    of
                    { Unit# ipv1_saX6F ->
                          case touch# [ww3_saX6v GHC.Prim.void#] of s'_saX6G {
                            (##) ->
                                let {
                                  sat_saX6L [Occ=Once] :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                  [LclId] =
                                      [ww2_saX6u
                                       ww3_saX6v
                                       ww4_saX6w
                                       ww5_saX6x
                                       ww6_saX6y
                                       ww7_saX6z
                                       ipv1_saX6F] \u []
                                          case ipv1_saX6F of {
                                            GHC.Types.I# y_saX6I [Occ=Once] ->
                                                case +# [ww6_saX6y y_saX6I] of x_saX6J [Dmd=<S,U>] {
                                                  __DEFAULT ->
                                                      case ==# [x_saX6J ww7_saX6z] of {
                                                        __DEFAULT ->
                                                            GHC.IO.Buffer.Buffer [ww2_saX6u
                                                                                  ww3_saX6v
                                                                                  ww4_saX6w
                                                                                  ww5_saX6x
                                                                                  x_saX6J
                                                                                  ww7_saX6z];
                                                        1# ->
                                                            GHC.IO.Buffer.Buffer [ww2_saX6u
                                                                                  ww3_saX6v
                                                                                  ww4_saX6w
                                                                                  ww5_saX6x
                                                                                  0#
                                                                                  0#];
                                                      };
                                                };
                                          }; } in
                                let {
                                  sat_saX6M [Occ=Once]
                                    :: (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8)
                                  [LclId] =
                                      CCCS (,)! [ipv1_saX6F sat_saX6L];
                                } in  Unit# [sat_saX6M];
                          };
                    };
              };
        };

GHC.IO.FD.$fBufferedIOFD1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,1*U)><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saX6N w1_saX6O void_0E]
        case w_saX6N of {
          GHC.IO.FD.FD ww1_saX6R [Occ=Once] ww2_saX6S [Occ=Once] ->
              case w1_saX6O of {
                GHC.IO.Buffer.Buffer ww4_saX6U [Occ=Once]
                                     ww5_saX6V [Occ=Once]
                                     ww6_saX6W [Occ=Once]
                                     ww7_saX6X [Occ=Once]
                                     ww8_saX6Y [Occ=Once]
                                     ww9_saX6Z [Occ=Once] ->
                    GHC.IO.FD.$w$cflushWriteBuffer0
                        ww1_saX6R
                        ww2_saX6S
                        ww4_saX6U
                        ww5_saX6V
                        ww6_saX6W
                        ww7_saX6X
                        ww8_saX6Y
                        ww9_saX6Z
                        GHC.Prim.void#;
              };
        };

GHC.IO.FD.$fIODeviceFD21
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [fd_saX70 void_0E]
        case fd_saX70 of {
          GHC.IO.FD.FD dt_saX73 [Occ=Once] _ [Occ=Dead] ->
              case __pkg_ccall base-4.11.0.0 [dt_saX73 GHC.Prim.void#] of {
                Unit# ds5_saX78 [Occ=Once] ->
                    let {
                      sat_saX7a [Occ=Once] :: GHC.Types.Bool
                      [LclId] =
                          [ds5_saX78] \u []
                              case narrow32Int# [ds5_saX78] of {
                                __DEFAULT -> GHC.Types.True [];
                                0# -> GHC.Types.False [];
                              };
                    } in  Unit# [sat_saX7a];
              };
        };

GHC.IO.FD.$fIODeviceFD25 :: Foreign.C.Types.CInt -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [ds1_saX7b]
        case ds1_saX7b of {
          GHC.Int.I32# x_saX7d [Occ=Once!] ->
              case x_saX7d of {
                __DEFAULT -> GHC.Types.False [];
                -1# -> GHC.Types.True [];
              };
        };

GHC.IO.FD.$fIODeviceFD29 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.ready"#;

GHC.IO.FD.$fIODeviceFD28 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fIODeviceFD29;

GHC.IO.FD.$w$cready [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId, Arity=4, Str=<S,U><S,1*U><S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_saX7f w_saX7g ww1_saX7h void_0E]
        let-no-escape {
          $j_saX7j [Occ=Once*!T[1], Dmd=<C(S),1*C1(U(U,U))>]
            :: GHC.Prim.Int#
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
          [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
              sat-only [ww_saX7f ww1_saX7h] \r [i_saX7k]
                  let {
                    sat_saX7u [Occ=Once] :: GHC.Types.IO Foreign.C.Types.CInt
                    [LclId] =
                        [ww_saX7f ww1_saX7h i_saX7k] \r [void_0E]
                            case int2Word# [i_saX7k] of sat_saX7n {
                              __DEFAULT ->
                                  case narrow8Word# [sat_saX7n] of sat_saX7o {
                                    __DEFAULT ->
                                        case
                                            __pkg_ccall_GC base-4.11.0.0 [ww_saX7f
                                                                          sat_saX7o
                                                                          ww1_saX7h
                                                                          0##
                                                                          GHC.Prim.void#]
                                        of
                                        { Unit# ds2_saX7r [Occ=Once] ->
                                              case narrow32Int# [ds2_saX7r] of sat_saX7s {
                                                __DEFAULT ->
                                                    let {
                                                      sat_saX7t [Occ=Once] :: GHC.Int.Int32
                                                      [LclId] =
                                                          CCCS GHC.Int.I32#! [sat_saX7s];
                                                    } in  Unit# [sat_saX7t];
                                              };
                                        };
                                  };
                            };
                  } in 
                    case
                        Foreign.C.Error.throwErrnoIfMinus1Retry2
                            GHC.IO.FD.$fIODeviceFD25
                            GHC.IO.FD.$fIODeviceFD28
                            sat_saX7u
                            GHC.Prim.void#
                    of
                    { Unit# ipv1_saX7x [Occ=Once] ->
                          let {
                            sat_saX7B [Occ=Once] :: GHC.Types.Bool
                            [LclId] =
                                [ipv1_saX7x] \u []
                                    case ipv1_saX7x of {
                                      GHC.Int.I32# x#_saX7z [Occ=Once!] ->
                                          case x#_saX7z of {
                                            __DEFAULT -> GHC.Enum.$fEnumBool1;
                                            0# -> GHC.Types.False [];
                                            1# -> GHC.Types.True [];
                                          };
                                    };
                          } in  Unit# [sat_saX7B];
                    };
        } in 
          case w_saX7g of {
            GHC.Types.False -> $j_saX7j 0#;
            GHC.Types.True -> $j_saX7j 1#;
          };

GHC.IO.FD.$fIODeviceFD27 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Types.Bool
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=4,
 Str=<S(SL),1*U(U,A)><S,1*U><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saX7D w1_saX7E w2_saX7F void_0E]
        case w_saX7D of {
          GHC.IO.FD.FD ww1_saX7I [Occ=Once] _ [Occ=Dead] ->
              case w2_saX7F of {
                GHC.Types.I# ww4_saX7L [Occ=Once] ->
                    GHC.IO.FD.$w$cready ww1_saX7I w1_saX7E ww4_saX7L GHC.Prim.void#;
              };
        };

GHC.IO.FD.setNonBlockingMode1
  :: GHC.IO.FD.FD
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FD.FD #)
[GblId, Arity=3, Str=<S(SL),1*U(U,A)><L,U><S,U>, Unf=OtherCon []] =
    [] \r [fd_saX7M set_saX7N void_0E]
        case fd_saX7M of {
          GHC.IO.FD.FD dt_saX7Q _ [Occ=Dead] ->
              case
                  System.Posix.Internals.$wsetNonBlockingFD
                      dt_saX7Q set_saX7N GHC.Prim.void#
              of
              { Unit# _ [Occ=Dead] ->
                    let {
                      sat_saX7W [Occ=Once] :: GHC.IO.FD.FD
                      [LclId] =
                          [set_saX7N dt_saX7Q] \u []
                              case set_saX7N of {
                                GHC.Types.False -> GHC.IO.FD.FD [dt_saX7Q 0#];
                                GHC.Types.True -> GHC.IO.FD.FD [dt_saX7Q 1#];
                              };
                    } in  Unit# [sat_saX7W];
              };
        };

GHC.IO.FD.setNonBlockingMode
  :: GHC.IO.FD.FD -> GHC.Types.Bool -> GHC.Types.IO GHC.IO.FD.FD
[GblId, Arity=3, Str=<S(SL),1*U(U,A)><L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.IO.FD.setNonBlockingMode1 eta_B3 eta_B2 GHC.Prim.void#;

lvl5_raWVb :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.dup2"#;

lvl6_raWVc :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl5_raWVb;

GHC.IO.FD.$fIODeviceFD2
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [void_0E ds3_saX7Y]
        case narrow32Int# [ds3_saX7Y] of sat_saX7Z {
          __DEFAULT ->
              Foreign.C.Error.$wlvl lvl6_raWVc sat_saX7Z GHC.Prim.void#;
        };

GHC.IO.FD.$w$cdup2 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FD.FD #)
[GblId, Arity=4, Str=<S,U><L,U><S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_saX80 ww1_saX81 ww2_saX82 void_0E]
        case
            __pkg_ccall base-4.11.0.0 [ww_saX80 ww2_saX82 GHC.Prim.void#]
        of
        { Unit# ds8_saX87 [Occ=Once] ->
              case narrow32Int# [ds8_saX87] of {
                __DEFAULT ->
                    let {
                      sat_saX89 [Occ=Once] :: GHC.IO.FD.FD
                      [LclId] =
                          CCCS GHC.IO.FD.FD! [ww2_saX82 ww1_saX81];
                    } in  Unit# [sat_saX89];
                -1# ->
                    case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                      Unit# ds3_saX8d [Occ=Once] ->
                          GHC.IO.FD.$fIODeviceFD2 GHC.Prim.void# ds3_saX8d;
                    };
              };
        };

GHC.IO.FD.$fIODeviceFD1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FD.FD #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,U)><S(SL),1*U(U,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saX8f w1_saX8g void_0E]
        case w_saX8f of {
          GHC.IO.FD.FD ww1_saX8j [Occ=Once] ww2_saX8k [Occ=Once] ->
              case w1_saX8g of {
                GHC.IO.FD.FD ww4_saX8m [Occ=Once] _ [Occ=Dead] ->
                    GHC.IO.FD.$w$cdup2 ww1_saX8j ww2_saX8k ww4_saX8m GHC.Prim.void#;
              };
        };

GHC.IO.FD.$fIODeviceFD5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.dup"#;

GHC.IO.FD.$fIODeviceFD4 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fIODeviceFD5;

GHC.IO.FD.$w$cdup [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FD.FD #)
[GblId, Arity=3, Str=<S,U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_saX8o ww1_saX8p void_0E]
        case __pkg_ccall base-4.11.0.0 [ww_saX8o GHC.Prim.void#] of {
          Unit# ds5_saX8u [Occ=Once] ->
              case narrow32Int# [ds5_saX8u] of wild1_saX8v {
                __DEFAULT ->
                    let {
                      sat_saX8w [Occ=Once] :: GHC.IO.FD.FD
                      [LclId] =
                          CCCS GHC.IO.FD.FD! [wild1_saX8v ww1_saX8p];
                    } in  Unit# [sat_saX8w];
                -1# ->
                    case
                        Foreign.C.Error.throwErrno1 GHC.IO.FD.$fIODeviceFD4 GHC.Prim.void#
                    of
                    { Unit# ipv1_saX8z [Occ=Once] ->
                          let {
                            sat_saX8C [Occ=Once] :: GHC.IO.FD.FD
                            [LclId] =
                                [ww1_saX8p ipv1_saX8z] \u []
                                    case ipv1_saX8z of {
                                      GHC.Int.I32# dt1_saX8B [Occ=Once] ->
                                          GHC.IO.FD.FD [dt1_saX8B ww1_saX8p];
                                    };
                          } in  Unit# [sat_saX8C];
                    };
              };
        };

GHC.IO.FD.$fIODeviceFD3 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FD.FD #)
[GblId, Arity=2, Str=<S(SS),1*U(U,U)><S,U>, Unf=OtherCon []] =
    [] \r [w_saX8D void_0E]
        case w_saX8D of {
          GHC.IO.FD.FD ww1_saX8G [Occ=Once] ww2_saX8H [Occ=Once] ->
              GHC.IO.FD.$w$cdup ww1_saX8G ww2_saX8H GHC.Prim.void#;
        };

GHC.IO.FD.$fIODeviceFD6
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Device.IODeviceType #)
[GblId, Arity=2, Str=<L,1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [fd_saX8I void_0E]
        let {
          sat_saX8N [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_saX8I] \s []
                  case fd_saX8I of {
                    GHC.IO.FD.FD dt_saX8L [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_saX8L];
                  };
        } in 
          case System.Posix.Internals.fdStat1 sat_saX8N GHC.Prim.void# of {
            Unit# ipv1_saX8Q [Occ=Once!] ->
                case ipv1_saX8Q of {
                  (,,) ty_saX8S [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                      Unit# [ty_saX8S];
                };
          };

GHC.IO.FD.$fIODeviceFD20
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId, Arity=2, Str=<L,1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [fd_saX8V void_0E]
        let {
          sat_saX90 [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_saX8V] \s []
                  case fd_saX8V of {
                    GHC.IO.FD.FD dt_saX8Y [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_saX8Y];
                  };
        } in 
          case System.Posix.Internals.fdStat1 sat_saX90 GHC.Prim.void# of {
            Unit# ipv1_saX93 [Occ=Once!] ->
                case ipv1_saX93 of {
                  (,,) ty_saX95 [Occ=Once!] _ [Occ=Dead] _ [Occ=Dead] ->
                      let {
                        sat_saX99 [Occ=Once] :: GHC.Types.Bool
                        [LclId] =
                            [ty_saX95] \u []
                                case ty_saX95 of {
                                  __DEFAULT -> GHC.Types.False [];
                                  GHC.IO.Device.RegularFile -> GHC.Types.True [];
                                  GHC.IO.Device.RawDevice -> GHC.Types.True [];
                                };
                      } in  Unit# [sat_saX99];
                };
          };

GHC.IO.FD.release1
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [fd_saX9a void_0E]
        case fd_saX9a of {
          GHC.IO.FD.FD dt_saX9d [Occ=Once] _ [Occ=Dead] ->
              case __pkg_ccall base-4.11.0.0 [dt_saX9d GHC.Prim.void#] of {
                Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
              };
        };

GHC.IO.FD.release :: GHC.IO.FD.FD -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E] GHC.IO.FD.release1 eta_B2 GHC.Prim.void#;

GHC.IO.FD.$fIODeviceFD24 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.close"#;

GHC.IO.FD.$fIODeviceFD23 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fIODeviceFD24;

GHC.IO.FD.$wclose [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_saX9j void_0E]
        let {
          sat_saX9t [Occ=Once] :: GHC.Types.IO Foreign.C.Types.CInt
          [LclId] =
              [ww_saX9j] \r [void_0E]
                  case narrow32Int# [ww_saX9j] of sat_saX9n {
                    __DEFAULT ->
                        case __pkg_ccall base-4.11.0.0 [sat_saX9n GHC.Prim.void#] of {
                          Unit# ds5_saX9q [Occ=Once] ->
                              case narrow32Int# [ds5_saX9q] of sat_saX9r {
                                __DEFAULT ->
                                    let {
                                      sat_saX9s [Occ=Once] :: GHC.Int.Int32
                                      [LclId] =
                                          CCCS GHC.Int.I32#! [sat_saX9r];
                                    } in  Unit# [sat_saX9s];
                              };
                        };
                  };
        } in 
          case
              Foreign.C.Error.throwErrnoIfMinus1Retry2
                  GHC.IO.FD.$fIODeviceFD25
                  GHC.IO.FD.$fIODeviceFD23
                  sat_saX9t
                  GHC.Prim.void#
          of
          { Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
          };

GHC.IO.FD.$fIODeviceFD26 [InlPrag=NOUSERINLINE[0]]
  :: System.Posix.Types.Fd
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [w_saX9x void_0E]
        case w_saX9x of {
          GHC.Int.I32# ww1_saX9A [Occ=Once] ->
              GHC.IO.FD.$wclose ww1_saX9A GHC.Prim.void#;
        };

GHC.IO.FD.$w$cclose [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_saX9B void_0E]
        case __pkg_ccall base-4.11.0.0 [ww_saX9B GHC.Prim.void#] of {
          Unit# _ [Occ=Dead] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                Unit# ds3_saX9K [Occ=Once!] ->
                    case ds3_saX9K of {
                      __DEFAULT ->
                          case narrow32Int# [ww_saX9B] of sat_saX9M {
                            __DEFAULT ->
                                let {
                                  sat_saX9N [Occ=Once] :: System.Posix.Types.Fd
                                  [LclId] =
                                      CCCS GHC.Int.I32#! [sat_saX9M];
                                } in 
                                  GHC.Event.Thread.closeFdWith1
                                      GHC.IO.FD.$fIODeviceFD26 sat_saX9N GHC.Prim.void#;
                          };
                      0# ->
                          let {
                            sat_saX9W [Occ=Once] :: GHC.Types.IO Foreign.C.Types.CInt
                            [LclId] =
                                [ww_saX9B] \r [void_0E]
                                    case narrow32Int# [ww_saX9B] of sat_saX9Q {
                                      __DEFAULT ->
                                          case
                                              __pkg_ccall base-4.11.0.0 [sat_saX9Q GHC.Prim.void#]
                                          of
                                          { Unit# ds6_saX9T [Occ=Once] ->
                                                case narrow32Int# [ds6_saX9T] of sat_saX9U {
                                                  __DEFAULT ->
                                                      let {
                                                        sat_saX9V [Occ=Once] :: GHC.Int.Int32
                                                        [LclId] =
                                                            CCCS GHC.Int.I32#! [sat_saX9U];
                                                      } in  Unit# [sat_saX9V];
                                                };
                                          };
                                    };
                          } in 
                            case
                                Foreign.C.Error.throwErrnoIfMinus1Retry2
                                    GHC.IO.FD.$fIODeviceFD25
                                    GHC.IO.FD.$fIODeviceFD23
                                    sat_saX9W
                                    GHC.Prim.void#
                            of
                            { Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
                            };
                    };
              };
        };

GHC.IO.FD.$fIODeviceFD22 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Str=<S(SL),1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [w_saXa0 void_0E]
        case w_saXa0 of {
          GHC.IO.FD.FD ww1_saXa3 [Occ=Once] _ [Occ=Dead] ->
              GHC.IO.FD.$w$cclose ww1_saXa3 GHC.Prim.void#;
        };

GHC.IO.FD.$fIODeviceFD [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.IO.Device.IODevice GHC.IO.FD.FD
[GblId[DFunId]] =
    CCS_DONT_CARE GHC.IO.Device.C:IODevice! [GHC.IO.FD.$fIODeviceFD27
                                             GHC.IO.FD.$fIODeviceFD22
                                             GHC.IO.FD.$fIODeviceFD21
                                             GHC.IO.FD.$fIODeviceFD20
                                             GHC.IO.FD.$fIODeviceFD17
                                             GHC.IO.FD.$fIODeviceFD13
                                             GHC.IO.FD.$fIODeviceFD12
                                             GHC.IO.FD.$fIODeviceFD10
                                             GHC.IO.FD.$fIODeviceFD9
                                             GHC.IO.FD.$fIODeviceFD8
                                             GHC.IO.FD.$fIODeviceFD7
                                             GHC.IO.FD.$fIODeviceFD6
                                             GHC.IO.FD.$fIODeviceFD3
                                             GHC.IO.FD.$fIODeviceFD1];

GHC.IO.FD.mkFD7 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "openFile"#;

GHC.IO.FD.mkFD6 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.mkFD7;

GHC.IO.FD.mkFD11 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "is a directory"#;

GHC.IO.FD.mkFD10 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.mkFD11;

GHC.IO.FD.mkFD9 :: GHC.IO.Exception.IOException
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Exception.IOError! [GHC.Base.Nothing
                                             GHC.IO.Exception.InappropriateType
                                             GHC.IO.FD.mkFD6
                                             GHC.IO.FD.mkFD10
                                             GHC.Base.Nothing
                                             GHC.Base.Nothing];

GHC.IO.FD.mkFD8 :: GHC.Exception.SomeException
[GblId] =
    [] \u []
        GHC.IO.Exception.$fExceptionIOException_$ctoException
            GHC.IO.FD.mkFD9;

GHC.IO.FD.mkFD5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "file is locked"#;

GHC.IO.FD.mkFD4 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.mkFD5;

GHC.IO.FD.mkFD3 :: GHC.IO.Exception.IOException
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Exception.IOError! [GHC.Base.Nothing
                                             GHC.IO.Exception.ResourceBusy
                                             GHC.IO.FD.mkFD6
                                             GHC.IO.FD.mkFD4
                                             GHC.Base.Nothing
                                             GHC.Base.Nothing];

GHC.IO.FD.mkFD2 :: GHC.Exception.SomeException
[GblId] =
    [] \u []
        GHC.IO.Exception.$fExceptionIOException_$ctoException
            GHC.IO.FD.mkFD3;

GHC.IO.FD.$wmkFD [InlPrag=NOUSERINLINE[0]]
  :: Foreign.C.Types.CInt
     -> GHC.IO.IOMode.IOMode
     -> GHC.Base.Maybe
          (GHC.IO.Device.IODeviceType, System.Posix.Types.CDev,
           System.Posix.Types.CIno)
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
[GblId,
 Arity=5,
 Str=<L,U(U)><L,1*U><S,1*U><L,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saXa5 w1_saXa6 w2_saXa7 w3_saXa8 void_0E]
        let-no-escape {
          $w$j_saXaa [InlPrag=NOUSERINLINE[0],
                      Occ=Once*!T[4],
                      Dmd=<L,1*C1(C1(C1(C1(U(U,U)))))>]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> GHC.IO.Device.IODeviceType
               -> System.Posix.Types.CDev
               -> System.Posix.Types.CIno
               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                     (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
          [LclId[JoinId(4)],
           Arity=4,
           Str=<S,U><S,1*U><L,1*U(U)><L,1*U(U)>,
           Unf=OtherCon []] =
              sat-only [w_saXa5 w1_saXa6 w3_saXa8] \r [void_0E
                                                       ww_saXac
                                                       ww1_saXad
                                                       ww2_saXae]
                  case ww_saXac of wild_saXaf {
                    __DEFAULT ->
                        let {
                          sat_saXaj [Occ=Once] :: GHC.IO.FD.FD
                          [LclId] =
                              [w_saXa5 w3_saXa8] \u []
                                  case w_saXa5 of {
                                    GHC.Int.I32# dt1_saXah [Occ=Once*] ->
                                        case w3_saXa8 of {
                                          GHC.Types.False -> GHC.IO.FD.FD [dt1_saXah 0#];
                                          GHC.Types.True -> GHC.IO.FD.FD [dt1_saXah 1#];
                                        };
                                  }; } in
                        let {
                          sat_saXak [Occ=Once] :: (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType)
                          [LclId] =
                              CCCS (,)! [sat_saXaj wild_saXaf];
                        } in  Unit# [sat_saXak];
                    GHC.IO.Device.Directory ->
                        raiseIO# [GHC.IO.FD.mkFD8 GHC.Prim.void#];
                    GHC.IO.Device.RegularFile ->
                        case w_saXa5 of {
                          GHC.Int.I32# ds1_saXan ->
                              case ww1_saXad of {
                                GHC.Word.W64# x#_saXap ->
                                    case word2Int# [x#_saXap] of i#_saXaq [Dmd=<S,U>] {
                                      __DEFAULT ->
                                          let-no-escape {
                                            $j_saXar [Occ=Once*!T[1], Dmd=<C(S),1*C1(U(U,U))>]
                                              :: GHC.Prim.Word#
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
                                            [LclId[JoinId(1)],
                                             Arity=1,
                                             Str=<S,U>,
                                             Unf=OtherCon []] =
                                                sat-only [w1_saXa6
                                                          w3_saXa8
                                                          ww2_saXae
                                                          ds1_saXan] \r [wild2_saXas]
                                                    case ww2_saXae of {
                                                      GHC.Word.W64# x#1_saXau ->
                                                          case
                                                              word2Int# [x#1_saXau]
                                                          of
                                                          i#1_saXav [Dmd=<S,U>]
                                                          { __DEFAULT ->
                                                                let-no-escape {
                                                                  $j1_saXaw [Occ=Once*!T[1],
                                                                             Dmd=<C(S),1*C1(U(U,U))>]
                                                                    :: GHC.Prim.Word#
                                                                       -> (# GHC.Prim.State#
                                                                               GHC.Prim.RealWorld,
                                                                             (GHC.IO.FD.FD,
                                                                              GHC.IO.Device.IODeviceType) #)
                                                                  [LclId[JoinId(1)],
                                                                   Arity=1,
                                                                   Str=<S,U>,
                                                                   Unf=OtherCon []] =
                                                                      sat-only [w1_saXa6
                                                                                w3_saXa8
                                                                                ds1_saXan
                                                                                wild2_saXas] \r [wild4_saXax]
                                                                          let-no-escape {
                                                                            $j2_saXay [Occ=Once*!T[1],
                                                                                       Dmd=<C(S),1*C1(U(U,U))>]
                                                                              :: GHC.Prim.Int#
                                                                                 -> (# GHC.Prim.State#
                                                                                         GHC.Prim.RealWorld,
                                                                                       (GHC.IO.FD.FD,
                                                                                        GHC.IO.Device.IODeviceType) #)
                                                                            [LclId[JoinId(1)],
                                                                             Arity=1,
                                                                             Str=<S,U>,
                                                                             Unf=OtherCon []] =
                                                                                sat-only [w3_saXa8
                                                                                          ds1_saXan
                                                                                          wild2_saXas
                                                                                          wild4_saXax] \r [ds2_saXaz]
                                                                                    case
                                                                                        __pkg_ccall base-4.11.0.0 [ds1_saXan
                                                                                                                   wild2_saXas
                                                                                                                   wild4_saXax
                                                                                                                   ds2_saXaz
                                                                                                                   GHC.Prim.void#]
                                                                                    of
                                                                                    { Unit# ds4_saXaD [Occ=Once] ->
                                                                                          case
                                                                                              narrow32Int# [ds4_saXaD]
                                                                                          of
                                                                                          { __DEFAULT ->
                                                                                                let {
                                                                                                  sat_saXaG [Occ=Once]
                                                                                                    :: GHC.IO.FD.FD
                                                                                                  [LclId] =
                                                                                                      [w3_saXa8
                                                                                                       ds1_saXan] \u []
                                                                                                          case
                                                                                                              w3_saXa8
                                                                                                          of
                                                                                                          { GHC.Types.False ->
                                                                                                                GHC.IO.FD.FD [ds1_saXan
                                                                                                                              0#];
                                                                                                            GHC.Types.True ->
                                                                                                                GHC.IO.FD.FD [ds1_saXan
                                                                                                                              1#];
                                                                                                          }; } in
                                                                                                let {
                                                                                                  sat_saXaH [Occ=Once]
                                                                                                    :: (GHC.IO.FD.FD,
                                                                                                        GHC.IO.Device.IODeviceType)
                                                                                                  [LclId] =
                                                                                                      CCCS (,)! [sat_saXaG
                                                                                                                 GHC.IO.Device.RegularFile];
                                                                                                } in 
                                                                                                  Unit# [sat_saXaH];
                                                                                            -1# ->
                                                                                                raiseIO# [GHC.IO.FD.mkFD2
                                                                                                          GHC.Prim.void#];
                                                                                          };
                                                                                    };
                                                                          } in 
                                                                            case w1_saXa6 of {
                                                                              __DEFAULT ->
                                                                                  $j2_saXay 1#;
                                                                              GHC.IO.IOMode.ReadMode ->
                                                                                  $j2_saXay 0#;
                                                                            };
                                                                } in 
                                                                  case >=# [i#1_saXav 0#] of {
                                                                    __DEFAULT ->
                                                                        $j1_saXaw x#1_saXau;
                                                                    1# ->
                                                                        case
                                                                            int2Word# [i#1_saXav]
                                                                        of
                                                                        sat_saXaL
                                                                        { __DEFAULT ->
                                                                              $j1_saXaw sat_saXaL;
                                                                        };
                                                                  };
                                                          };
                                                    };
                                          } in 
                                            case >=# [i#_saXaq 0#] of {
                                              __DEFAULT -> $j_saXar x#_saXap;
                                              1# ->
                                                  case int2Word# [i#_saXaq] of sat_saXaN {
                                                    __DEFAULT -> $j_saXar sat_saXaN;
                                                  };
                                            };
                                    };
                              };
                        };
                  };
        } in 
          case w2_saXa7 of {
            GHC.Base.Nothing ->
                case System.Posix.Internals.fdStat1 w_saXa5 GHC.Prim.void# of {
                  Unit# ipv1_saXaR [Occ=Once!] ->
                      case ipv1_saXaR of {
                        (,,) ww1_saXaT [Occ=Once]
                             ww2_saXaU [Occ=Once]
                             ww3_saXaV [Occ=Once] ->
                            $w$j_saXaa GHC.Prim.void# ww1_saXaT ww2_saXaU ww3_saXaV;
                      };
                };
            GHC.Base.Just stat_saXaW [Occ=Once!] ->
                case stat_saXaW of {
                  (,,) ww1_saXaY [Occ=Once]
                       ww2_saXaZ [Occ=Once]
                       ww3_saXb0 [Occ=Once] ->
                      $w$j_saXaa GHC.Prim.void# ww1_saXaY ww2_saXaZ ww3_saXb0;
                };
          };

GHC.IO.FD.mkFD1 [InlPrag=NOUSERINLINE[0]]
  :: Foreign.C.Types.CInt
     -> GHC.IO.IOMode.IOMode
     -> GHC.Base.Maybe
          (GHC.IO.Device.IODeviceType, System.Posix.Types.CDev,
           System.Posix.Types.CIno)
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
[GblId,
 Arity=6,
 Str=<L,U(U)><L,1*U><S,1*U><L,A><L,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saXb1 w1_saXb2 w2_saXb3 w3_saXb4 w4_saXb5 void_0E]
        GHC.IO.FD.$wmkFD w_saXb1 w1_saXb2 w2_saXb3 w4_saXb5 GHC.Prim.void#;

GHC.IO.FD.mkFD
  :: Foreign.C.Types.CInt
     -> GHC.IO.IOMode.IOMode
     -> GHC.Base.Maybe
          (GHC.IO.Device.IODeviceType, System.Posix.Types.CDev,
           System.Posix.Types.CIno)
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.Types.IO (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType)
[GblId,
 Arity=6,
 Str=<L,U(U)><L,1*U><S,1*U><L,A><L,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.FD.mkFD1 eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.FD.openFile1
  :: GHC.IO.FilePath
     -> GHC.IO.IOMode.IOMode
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
[GblId, Arity=4, Str=<L,U><L,U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [filepath_saXb7 iomode_saXb8 non_blocking_saXb9 void_0E]
        case GHC.IO.Encoding.getFileSystemEncoding GHC.Prim.void# of {
          Unit# ipv1_saXbd [Occ=Once] ->
              let {
                sat_saXcZ [Occ=Once]
                  :: GHC.Foreign.CString
                     -> GHC.Types.IO (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType)
                [LclId] =
                    [iomode_saXb8 non_blocking_saXb9] \r [f_saXbe void_0E]
                        case f_saXbe of {
                          GHC.Ptr.Ptr ds4_saXbh [Occ=Once] ->
                              let-no-escape {
                                $j_saXbi [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                                  :: GHC.Prim.Int#
                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                           (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
                                [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                    sat-only [iomode_saXb8
                                              non_blocking_saXb9
                                              ds4_saXbh] \r [ds6_saXbj]
                                        let {
                                          sat_saXbr [Occ=Once] :: GHC.Types.IO Foreign.C.Types.CInt
                                          [LclId] =
                                              [ds4_saXbh ds6_saXbj] \r [void_0E]
                                                  case
                                                      __pkg_ccall_GC base-4.11.0.0 [ds4_saXbh
                                                                                    ds6_saXbj
                                                                                    438##
                                                                                    GHC.Prim.void#]
                                                  of
                                                  { Unit# ds11_saXbo [Occ=Once] ->
                                                        case
                                                            narrow32Int# [ds11_saXbo]
                                                        of
                                                        sat_saXbp
                                                        { __DEFAULT ->
                                                              let {
                                                                sat_saXbq [Occ=Once]
                                                                  :: GHC.Int.Int32
                                                                [LclId] =
                                                                    CCCS GHC.Int.I32#! [sat_saXbp];
                                                              } in  Unit# [sat_saXbq];
                                                        };
                                                  };
                                        } in 
                                          case
                                              Foreign.C.Error.throwErrnoIfMinus1Retry2
                                                  GHC.IO.FD.$fIODeviceFD25
                                                  GHC.IO.FD.mkFD6
                                                  sat_saXbr
                                                  GHC.Prim.void#
                                          of
                                          { Unit# ipv3_saXbu ->
                                                let {
                                                  sat_saXbJ [Occ=Once]
                                                    :: GHC.Exception.SomeException
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             (GHC.IO.FD.FD,
                                                              GHC.IO.Device.IODeviceType) #)
                                                  [LclId] =
                                                      [ipv3_saXbu] \r [ds9_saXbx]
                                                          case ds9_saXbx of {
                                                            GHC.Exception.SomeException $dException_saXbz [Occ=Once]
                                                                                        e1_saXbA [Occ=Once] ->
                                                                let {
                                                                  sat_saXbI [Occ=OnceT[0]]
                                                                    :: GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                       -> (# GHC.Prim.State#
                                                                               GHC.Prim.RealWorld,
                                                                             (GHC.IO.FD.FD,
                                                                              GHC.IO.Device.IODeviceType) #)
                                                                  [LclId] =
                                                                      [ipv3_saXbu
                                                                       $dException_saXbz
                                                                       e1_saXbA] \r [void_0E]
                                                                          case ipv3_saXbu of {
                                                                            GHC.Int.I32# ds11_saXbD [Occ=Once] ->
                                                                                case
                                                                                    __pkg_ccall base-4.11.0.0 [ds11_saXbD
                                                                                                               GHC.Prim.void#]
                                                                                of
                                                                                { Unit# _ [Occ=Dead] ->
                                                                                      GHC.IO.throwIO1
                                                                                          $dException_saXbz
                                                                                          e1_saXbA
                                                                                          GHC.Prim.void#;
                                                                                };
                                                                          };
                                                                } in  sat_saXbI;
                                                          }; } in
                                                let {
                                                  sat_saXbw [Occ=Once]
                                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             (GHC.IO.FD.FD,
                                                              GHC.IO.Device.IODeviceType) #)
                                                  [LclId] =
                                                      [iomode_saXb8
                                                       non_blocking_saXb9
                                                       ipv3_saXbu] \r [void_0E]
                                                          GHC.IO.FD.$wmkFD
                                                              ipv3_saXbu
                                                              iomode_saXb8
                                                              GHC.Base.Nothing
                                                              non_blocking_saXb9
                                                              GHC.Prim.void#;
                                                } in 
                                                  case
                                                      catch# [sat_saXbw sat_saXbJ GHC.Prim.void#]
                                                  of
                                                  ds9_saXbK
                                                  { Unit# ipv5_saXbM [Occ=Once!] ->
                                                        case ipv5_saXbM of {
                                                          (,) fD_saXbO [Occ=Once!]
                                                              fd_type_saXbP [Occ=Once!] ->
                                                              case iomode_saXb8 of {
                                                                __DEFAULT -> Unit# [ipv5_saXbM];
                                                                GHC.IO.IOMode.WriteMode ->
                                                                    case fd_type_saXbP of {
                                                                      __DEFAULT ->
                                                                          Unit# [ipv5_saXbM];
                                                                      GHC.IO.Device.RegularFile ->
                                                                          case
                                                                              fD_saXbO
                                                                          of
                                                                          wild3_saXbS
                                                                          { GHC.IO.FD.FD dt_saXbT [Occ=Once]
                                                                                         _ [Occ=Dead] ->
                                                                                case
                                                                                    __pkg_ccall base-4.11.0.0 [dt_saXbT
                                                                                                               0#
                                                                                                               GHC.Prim.void#]
                                                                                of
                                                                                { Unit# ds8_saXbY [Occ=Once] ->
                                                                                      case
                                                                                          narrow32Int# [ds8_saXbY]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                __pkg_ccall base-4.11.0.0 [GHC.Prim.void#]
                                                                                            of
                                                                                            { Unit# ds10_saXc3 [Occ=Once] ->
                                                                                                  GHC.IO.FD.$fIODeviceFD11
                                                                                                      GHC.Prim.void#
                                                                                                      ds10_saXc3;
                                                                                            };
                                                                                        0# ->
                                                                                            let {
                                                                                              sat_saXc5 [Occ=Once]
                                                                                                :: (GHC.IO.FD.FD,
                                                                                                    GHC.IO.Device.IODeviceType)
                                                                                              [LclId] =
                                                                                                  CCCS (,)! [wild3_saXbS
                                                                                                             GHC.IO.Device.RegularFile];
                                                                                            } in 
                                                                                              Unit# [sat_saXc5];
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                          };
                              } in 
                                case non_blocking_saXb9 of {
                                  GHC.Types.False ->
                                      case iomode_saXb8 of {
                                        GHC.IO.IOMode.ReadMode ->
                                            case read_flags_raWV8 of {
                                              GHC.Int.I32# ds6_saXc9 [Occ=Once] ->
                                                  $j_saXbi ds6_saXc9;
                                            };
                                        GHC.IO.IOMode.WriteMode ->
                                            case write_flags_raWV5 of {
                                              GHC.Int.I32# ds6_saXcb [Occ=Once] ->
                                                  $j_saXbi ds6_saXcb;
                                            };
                                        GHC.IO.IOMode.AppendMode ->
                                            case append_flags_raWV6 of {
                                              GHC.Int.I32# ds6_saXcd [Occ=Once] ->
                                                  $j_saXbi ds6_saXcd;
                                            };
                                        GHC.IO.IOMode.ReadWriteMode ->
                                            case rw_flags_raWV7 of {
                                              GHC.Int.I32# ds6_saXcf [Occ=Once] ->
                                                  $j_saXbi ds6_saXcf;
                                            };
                                      };
                                  GHC.Types.True ->
                                      case iomode_saXb8 of {
                                        GHC.IO.IOMode.ReadMode ->
                                            case read_flags_raWV8 of {
                                              GHC.Int.I32# x#_saXci [Occ=Once] ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#]
                                                  of
                                                  { Unit# ds2_saXcm [Occ=Once] ->
                                                        case narrow32Int# [ds2_saXcm] of sat_saXco {
                                                          __DEFAULT ->
                                                              case
                                                                  int2Word# [sat_saXco]
                                                              of
                                                              sat_saXcp
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#_saXci]
                                                                    of
                                                                    sat_saXcn
                                                                    { __DEFAULT ->
                                                                          case
                                                                              or# [sat_saXcn
                                                                                   sat_saXcp]
                                                                          of
                                                                          sat_saXcq
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    word2Int# [sat_saXcq]
                                                                                of
                                                                                sat_saXcr
                                                                                { __DEFAULT ->
                                                                                      $j_saXbi
                                                                                          sat_saXcr;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                        GHC.IO.IOMode.WriteMode ->
                                            case write_flags_raWV5 of {
                                              GHC.Int.I32# x#_saXct [Occ=Once] ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#]
                                                  of
                                                  { Unit# ds2_saXcx [Occ=Once] ->
                                                        case narrow32Int# [ds2_saXcx] of sat_saXcz {
                                                          __DEFAULT ->
                                                              case
                                                                  int2Word# [sat_saXcz]
                                                              of
                                                              sat_saXcA
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#_saXct]
                                                                    of
                                                                    sat_saXcy
                                                                    { __DEFAULT ->
                                                                          case
                                                                              or# [sat_saXcy
                                                                                   sat_saXcA]
                                                                          of
                                                                          sat_saXcB
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    word2Int# [sat_saXcB]
                                                                                of
                                                                                sat_saXcC
                                                                                { __DEFAULT ->
                                                                                      $j_saXbi
                                                                                          sat_saXcC;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                        GHC.IO.IOMode.AppendMode ->
                                            case append_flags_raWV6 of {
                                              GHC.Int.I32# x#_saXcE [Occ=Once] ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#]
                                                  of
                                                  { Unit# ds2_saXcI [Occ=Once] ->
                                                        case narrow32Int# [ds2_saXcI] of sat_saXcK {
                                                          __DEFAULT ->
                                                              case
                                                                  int2Word# [sat_saXcK]
                                                              of
                                                              sat_saXcL
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#_saXcE]
                                                                    of
                                                                    sat_saXcJ
                                                                    { __DEFAULT ->
                                                                          case
                                                                              or# [sat_saXcJ
                                                                                   sat_saXcL]
                                                                          of
                                                                          sat_saXcM
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    word2Int# [sat_saXcM]
                                                                                of
                                                                                sat_saXcN
                                                                                { __DEFAULT ->
                                                                                      $j_saXbi
                                                                                          sat_saXcN;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                        GHC.IO.IOMode.ReadWriteMode ->
                                            case rw_flags_raWV7 of {
                                              GHC.Int.I32# x#_saXcP [Occ=Once] ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#]
                                                  of
                                                  { Unit# ds2_saXcT [Occ=Once] ->
                                                        case narrow32Int# [ds2_saXcT] of sat_saXcV {
                                                          __DEFAULT ->
                                                              case
                                                                  int2Word# [sat_saXcV]
                                                              of
                                                              sat_saXcW
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#_saXcP]
                                                                    of
                                                                    sat_saXcU
                                                                    { __DEFAULT ->
                                                                          case
                                                                              or# [sat_saXcU
                                                                                   sat_saXcW]
                                                                          of
                                                                          sat_saXcX
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    word2Int# [sat_saXcX]
                                                                                of
                                                                                sat_saXcY
                                                                                { __DEFAULT ->
                                                                                      $j_saXbi
                                                                                          sat_saXcY;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                        };
              } in 
                GHC.Foreign.charIsRepresentable3
                    ipv1_saXbd filepath_saXb7 sat_saXcZ GHC.Prim.void#;
        };

GHC.IO.FD.openFile
  :: GHC.IO.FilePath
     -> GHC.IO.IOMode.IOMode
     -> GHC.Types.Bool
     -> GHC.Types.IO (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType)
[GblId, Arity=4, Str=<L,U><L,U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.FD.openFile1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.FD.$w$cfillReadBuffer [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=9,
 Str=<S,U><S,1*U><S,U><L,U><L,U><S,U><L,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_saXd0
           ww1_saXd1
           ww2_saXd2
           ww3_saXd3
           ww4_saXd4
           ww5_saXd5
           ww6_saXd6
           ww7_saXd7
           void_0E]
        case -# [ww5_saXd5 ww7_saXd7] of sat_saXda {
          __DEFAULT ->
              case int2Word# [sat_saXda] of sat_saXdb {
                __DEFAULT ->
                    case plusAddr# [ww2_saXd2 ww7_saXd7] of sat_saXd9 {
                      __DEFAULT ->
                          case
                              GHC.IO.FD.$wreadRawBufferPtr
                                  GHC.IO.FD.$fBufferedIOFD12
                                  ww_saXd0
                                  ww1_saXd1
                                  sat_saXd9
                                  0#
                                  sat_saXdb
                                  GHC.Prim.void#
                          of
                          { Unit# ipv1_saXde ->
                                case touch# [ww3_saXd3 GHC.Prim.void#] of s'_saXdf {
                                  (##) ->
                                      let {
                                        sat_saXdj [Occ=Once] :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                        [LclId] =
                                            [ww2_saXd2
                                             ww3_saXd3
                                             ww4_saXd4
                                             ww5_saXd5
                                             ww6_saXd6
                                             ww7_saXd7
                                             ipv1_saXde] \u []
                                                case ipv1_saXde of {
                                                  GHC.Types.I# y_saXdh [Occ=Once] ->
                                                      case +# [ww7_saXd7 y_saXdh] of sat_saXdi {
                                                        __DEFAULT ->
                                                            GHC.IO.Buffer.Buffer [ww2_saXd2
                                                                                  ww3_saXd3
                                                                                  ww4_saXd4
                                                                                  ww5_saXd5
                                                                                  ww6_saXd6
                                                                                  sat_saXdi];
                                                      };
                                                }; } in
                                      let {
                                        sat_saXdk [Occ=Once]
                                          :: (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8)
                                        [LclId] =
                                            CCCS (,)! [ipv1_saXde sat_saXdj];
                                      } in  Unit# [sat_saXdk];
                                };
                          };
                    };
              };
        };

GHC.IO.FD.$fBufferedIOFD11 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,1*U)><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_saXdl w1_saXdm void_0E]
        case w_saXdl of {
          GHC.IO.FD.FD ww1_saXdp [Occ=Once] ww2_saXdq [Occ=Once] ->
              case w1_saXdm of {
                GHC.IO.Buffer.Buffer ww4_saXds [Occ=Once]
                                     ww5_saXdt [Occ=Once]
                                     ww6_saXdu [Occ=Once]
                                     ww7_saXdv [Occ=Once]
                                     ww8_saXdw [Occ=Once]
                                     ww9_saXdx [Occ=Once] ->
                    GHC.IO.FD.$w$cfillReadBuffer
                        ww1_saXdp
                        ww2_saXdq
                        ww4_saXds
                        ww5_saXdt
                        ww6_saXdu
                        ww7_saXdv
                        ww8_saXdw
                        ww9_saXdx
                        GHC.Prim.void#;
              };
        };

GHC.IO.FD.$fBufferedIOFD6
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Word.Word8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,A><L,1*U(U,U,A,U,A,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [_dev_saXdy buf_saXdz void_0E]
        let {
          sat_saXdI [Occ=Once] :: GHC.IO.Buffer.Buffer GHC.Word.Word8
          [LclId] =
              [buf_saXdz] \u []
                  case buf_saXdz of {
                    GHC.IO.Buffer.Buffer dt_saXdC [Occ=Once]
                                         dt1_saXdD [Occ=Once]
                                         _ [Occ=Dead]
                                         dt2_saXdF [Occ=Once]
                                         _ [Occ=Dead]
                                         _ [Occ=Dead] ->
                        GHC.IO.Buffer.Buffer [dt_saXdC
                                              dt1_saXdD
                                              GHC.IO.Buffer.WriteBuffer
                                              dt2_saXdF
                                              0#
                                              0#];
                  };
        } in  Unit# [sat_saXdI];

GHC.IO.FD.$fBufferedIOFD [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.IO.BufferedIO.BufferedIO GHC.IO.FD.FD
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.IO.BufferedIO.C:BufferedIO! [GHC.IO.FD.$fBufferedIOFD15
                                                   GHC.IO.FD.$fBufferedIOFD11
                                                   GHC.IO.FD.$fBufferedIOFD7
                                                   GHC.IO.FD.$fBufferedIOFD6
                                                   GHC.IO.FD.$fBufferedIOFD_$swriteBuf1
                                                   GHC.IO.FD.$fBufferedIOFD1];

GHC.IO.FD.FD :: GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.IO.FD.FD
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.IO.FD.FD [eta_B2 eta_B1];


==================== Pre unarise: ====================
2018-03-16 16:06:00.199261623 UTC

GHC.IO.FD.$WFD [InlPrag=INLINE[2]]
  :: Foreign.C.Types.CInt -> GHC.Types.Int -> GHC.IO.FD.FD
[GblId[DataConWrapper],
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_sb0nX dt_sb0nY]
        case dt_sb0nX of {
          GHC.Int.I32# dt_sb0o0 [Occ=Once] ->
              case dt_sb0nY of {
                GHC.Types.I# dt_sb0o2 [Occ=Once] ->
                    GHC.IO.FD.FD [dt_sb0o0 dt_sb0o2];
              };
        };

GHC.IO.FD.$fBufferedIOFD5 [Occ=LoopBreaker]
  :: GHC.Base.String
     -> GHC.Types.IO System.Posix.Types.CSsize
     -> GHC.Types.IO System.Posix.Types.CSsize
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           System.Posix.Types.CSsize #)
[GblId,
 Arity=4,
 Str=<L,U><C(S(SS(S))),C(U(U,1*U(U)))><L,1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [loc_sb0o3 f_sb0o4 on_block_sb0o5 s_sb0o6]
        case f_sb0o4 s_sb0o6 of {
          (#,#) ipv_sb0o8 [Occ=Once*] ipv1_sb0o9 [Occ=Once] ->
              case ipv1_sb0o9 of wild_sb0oa {
                GHC.Int.I64# x_sb0ob [Occ=Once!] ->
                    case x_sb0ob of {
                      __DEFAULT -> ds1_sb0o7;
                      -1# ->
                          case __pkg_ccall base-4.11.0.0 [ipv_sb0o8] of {
                            (#,#) ds_sb0of [Occ=Once*] ds2_sb0og [Occ=Once] ->
                                case narrow32Int# [ds2_sb0og] of {
                                  __DEFAULT -> Foreign.C.Error.throwErrno1 loc_sb0o3 ds_sb0of;
                                  4# ->
                                      GHC.IO.FD.$fBufferedIOFD5
                                          loc_sb0o3 f_sb0o4 on_block_sb0o5 ds_sb0of;
                                  11# -> on_block_sb0o5 ds_sb0of;
                                };
                          };
                    };
              };
        };

lvl_raWUX :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.fdWrite"#;

lvl1_raWUY :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_raWUX;

GHC.IO.FD.$fBufferedIOFD9 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.fdReadNonBlocking"#;

GHC.IO.FD.$fBufferedIOFD8 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fBufferedIOFD9;

lvl2_raWUZ :: GHC.Int.Int64
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I64#! [-1#];

GHC.IO.FD.$fBufferedIOFD3
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           System.Posix.Types.CSsize #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [s_sb0oi] (#,#) [s_sb0oi lvl2_raWUZ];

GHC.IO.FD.$fBufferedIOFD2 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

GHC.IO.FD.$fBufferedIOFD10 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [-1#];

GHC.IO.FD.$wreadRawBufferPtrNoBlock [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.Word#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=7,
 Str=<L,U><S,U><S,1*U><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0oj
           ww_sb0ok
           ww1_sb0ol
           ww2_sb0om
           ww3_sb0on
           ww4_sb0oo
           w1_sb0op]
        let-no-escape {
          $sdo_read_sb0oq [Occ=Once*!T[2], Dmd=<L,1*C1(C1(U(U,U)))>]
            :: GHC.Types.IO System.Posix.Types.CSsize
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
          [LclId[JoinId(2)],
           Arity=2,
           Str=<C(S(SS(S))),C(U(U,1*U(U)))><S,U>,
           Unf=OtherCon []] =
              sat-only [w_sb0oj] \r [call_sb0or s_sb0os]
                  case
                      GHC.IO.FD.$fBufferedIOFD5
                          w_sb0oj call_sb0or GHC.IO.FD.$fBufferedIOFD3 s_sb0os
                  of
                  { (#,#) ipv_sb0ou [Occ=Once*] ipv1_sb0ov [Occ=Once] ->
                        case ipv1_sb0ov of {
                          GHC.Int.I64# x_sb0ox [Occ=Once!] ->
                              case x_sb0ox of wild1_sb0oy {
                                __DEFAULT ->
                                    let {
                                      sat_sb0oz [Occ=Once] :: GHC.Types.Int
                                      [LclId] =
                                          CCCS GHC.Types.I#! [wild1_sb0oy];
                                    } in  (#,#) [ipv_sb0ou sat_sb0oz];
                                -1# -> (#,#) [ipv_sb0ou GHC.IO.FD.$fBufferedIOFD2];
                                0# -> (#,#) [ipv_sb0ou GHC.IO.FD.$fBufferedIOFD10];
                              };
                        };
                  };
        } in 
          case ww1_sb0ol of {
            __DEFAULT ->
                let {
                  sat_sb0oI [Occ=Once] :: GHC.Types.IO System.Posix.Types.CSsize
                  [LclId] =
                      [ww_sb0ok ww2_sb0om ww3_sb0on ww4_sb0oo] \r [ds9_sb0oB]
                          case plusAddr# [ww2_sb0om ww3_sb0on] of sat_sb0oD {
                            __DEFAULT ->
                                case
                                    __pkg_ccall base-4.11.0.0 [ww_sb0ok
                                                               sat_sb0oD
                                                               ww4_sb0oo
                                                               ds9_sb0oB]
                                of
                                { (#,#) ds10_sb0oF [Occ=Once] ds11_sb0oG [Occ=Once] ->
                                      let {
                                        sat_sb0oH [Occ=Once] :: GHC.Int.Int64
                                        [LclId] =
                                            CCCS GHC.Int.I64#! [ds11_sb0oG];
                                      } in  (#,#) [ds10_sb0oF sat_sb0oH];
                                };
                          };
                } in  $sdo_read_sb0oq sat_sb0oI w1_sb0op;
            0# ->
                case __pkg_ccall base-4.11.0.0 [ww_sb0ok 0## 0# 0## w1_sb0op] of {
                  (#,#) ds_sb0oL [Occ=Once*] ds1_sb0oM [Occ=Once] ->
                      case narrow32Int# [ds1_sb0oM] of {
                        __DEFAULT ->
                            let {
                              sat_sb0oV [Occ=Once] :: GHC.Types.IO System.Posix.Types.CSsize
                              [LclId] =
                                  [ww_sb0ok ww2_sb0om ww3_sb0on ww4_sb0oo] \r [eta_sb0oO]
                                      case plusAddr# [ww2_sb0om ww3_sb0on] of sat_sb0oQ {
                                        __DEFAULT ->
                                            case
                                                __pkg_ccall_GC base-4.11.0.0 [ww_sb0ok
                                                                              sat_sb0oQ
                                                                              ww4_sb0oo
                                                                              eta_sb0oO]
                                            of
                                            { (#,#) ds10_sb0oS [Occ=Once] ds11_sb0oT [Occ=Once] ->
                                                  let {
                                                    sat_sb0oU [Occ=Once] :: GHC.Int.Int64
                                                    [LclId] =
                                                        CCCS GHC.Int.I64#! [ds11_sb0oT];
                                                  } in  (#,#) [ds10_sb0oS sat_sb0oU];
                                            };
                                      };
                            } in  $sdo_read_sb0oq sat_sb0oV ds_sb0oL;
                        0# -> (#,#) [ds_sb0oL GHC.IO.FD.$fBufferedIOFD2];
                      };
                };
          };

GHC.IO.FD.readRawBufferPtrNoBlock1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0oW w1_sb0oX w2_sb0oY w3_sb0oZ w4_sb0p0 w5_sb0p1]
        case w1_sb0oX of {
          GHC.IO.FD.FD ww1_sb0p3 [Occ=Once] ww2_sb0p4 [Occ=Once] ->
              case w2_sb0oY of {
                GHC.Ptr.Ptr ww4_sb0p6 [Occ=Once] ->
                    case w3_sb0oZ of {
                      GHC.Types.I# ww6_sb0p8 [Occ=Once] ->
                          case w4_sb0p0 of {
                            GHC.Word.W64# ww8_sb0pa [Occ=Once] ->
                                GHC.IO.FD.$wreadRawBufferPtrNoBlock
                                    w_sb0oW
                                    ww1_sb0p3
                                    ww2_sb0p4
                                    ww4_sb0p6
                                    ww6_sb0p8
                                    ww8_sb0pa
                                    w5_sb0p1;
                          };
                    };
              };
        };

GHC.IO.FD.$w$creadNonBlocking [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Base.Maybe GHC.Types.Int #)
[GblId,
 Arity=5,
 Str=<S,U><S,1*U><S,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sb0pb ww1_sb0pc ww2_sb0pd ww3_sb0pe w_sb0pf]
        case int2Word# [ww3_sb0pe] of sat_sb0pg {
          __DEFAULT ->
              case
                  GHC.IO.FD.$wreadRawBufferPtrNoBlock
                      GHC.IO.FD.$fBufferedIOFD8
                      ww_sb0pb
                      ww1_sb0pc
                      ww2_sb0pd
                      0#
                      sat_sb0pg
                      w_sb0pf
              of
              { (#,#) ipv_sb0pi [Occ=Once*] ipv1_sb0pj [Occ=Once!] ->
                    case ipv1_sb0pj of wild_sb0pk {
                      GHC.Types.I# ds_sb0pl [Occ=Once!] ->
                          case ds_sb0pl of {
                            __DEFAULT ->
                                let {
                                  sat_sb0pn [Occ=Once] :: GHC.Base.Maybe GHC.Types.Int
                                  [LclId] =
                                      CCCS GHC.Base.Just! [wild_sb0pk];
                                } in  (#,#) [ipv_sb0pi sat_sb0pn];
                            -1# -> (#,#) [ipv_sb0pi GHC.Base.Nothing];
                          };
                    };
              };
        };

GHC.IO.FD.$fRawIOFD3 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Base.Maybe GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0po w1_sb0pp w2_sb0pq w3_sb0pr]
        case w_sb0po of {
          GHC.IO.FD.FD ww1_sb0pt [Occ=Once] ww2_sb0pu [Occ=Once] ->
              case w1_sb0pp of {
                GHC.Ptr.Ptr ww4_sb0pw [Occ=Once] ->
                    case w2_sb0pq of {
                      GHC.Types.I# ww6_sb0py [Occ=Once] ->
                          GHC.IO.FD.$w$creadNonBlocking
                              ww1_sb0pt ww2_sb0pu ww4_sb0pw ww6_sb0py w3_sb0pr;
                    };
              };
        };

GHC.IO.FD.$fBufferedIOFD4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.fdWriteNonBlocking"#;

GHC.IO.FD.$fBufferedIOFD_loc :: GHC.Base.String
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fBufferedIOFD4;

GHC.IO.FD.$fBufferedIOFD14
  :: System.Posix.Types.CSsize -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [ds1_sb0pz]
        case ds1_sb0pz of {
          GHC.Int.I64# x_sb0pB [Occ=Once!] ->
              case x_sb0pB of {
                __DEFAULT -> GHC.Types.False [];
                -1# -> GHC.Types.True [];
              };
        };

GHC.IO.FD.$fBufferedIOFD13 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.fdRead"#;

GHC.IO.FD.$fBufferedIOFD12 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fBufferedIOFD13;

GHC.IO.FD.$wreadRawBufferPtr [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.Word#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=7,
 Str=<L,U><S,U><S,1*U><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0pD
           ww_sb0pE
           ww1_sb0pF
           ww2_sb0pG
           ww3_sb0pH
           ww4_sb0pI
           w1_sb0pJ]
        let-no-escape {
          $sdo_read_sb0pK [Occ=Once*!T[2], Dmd=<L,1*C1(C1(U(U,U)))>]
            :: GHC.Types.IO System.Posix.Types.CSsize
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
          [LclId[JoinId(2)],
           Arity=2,
           Str=<C(S),C(U(U,U))><S,U>,
           Unf=OtherCon []] =
              sat-only [w_sb0pD ww_sb0pE] \r [eta_sb0pL eta1_sb0pM]
                  let {
                    sat_sb0pX [Occ=Once] :: GHC.Types.IO ()
                    [LclId] =
                        [ww_sb0pE] \r [eta2_sb0pN]
                            case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                              (#,#) _ [Occ=Dead] ds1_sb0pR [Occ=Once!] ->
                                  case ds1_sb0pR of {
                                    __DEFAULT ->
                                        case narrow32Int# [ww_sb0pE] of sat_sb0pT {
                                          __DEFAULT ->
                                              let {
                                                sat_sb0pU [Occ=Once] :: System.Posix.Types.Fd
                                                [LclId] =
                                                    CCCS GHC.Int.I32#! [sat_sb0pT];
                                              } in 
                                                GHC.Event.Thread.threadWaitRead1
                                                    GHC.Event.Internal.evtRead sat_sb0pU eta2_sb0pN;
                                        };
                                    0# ->
                                        case narrow32Int# [ww_sb0pE] of sat_sb0pV {
                                          __DEFAULT ->
                                              case waitRead# [sat_sb0pV eta2_sb0pN] of s'_sb0pW {
                                                __DEFAULT -> (#,#) [s'_sb0pW GHC.Tuple.()];
                                              };
                                        };
                                  };
                            };
                  } in 
                    case
                        Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                            GHC.IO.FD.$fBufferedIOFD14 w_sb0pD eta_sb0pL sat_sb0pX eta1_sb0pM
                    of
                    { (#,#) ipv_sb0pZ [Occ=Once] ipv1_sb0q0 [Occ=Once] ->
                          let {
                            sat_sb0q3 [Occ=Once] :: GHC.Types.Int
                            [LclId] =
                                [ipv1_sb0q0] \u []
                                    case ipv1_sb0q0 of {
                                      GHC.Int.I64# x#_sb0q2 [Occ=Once] -> GHC.Types.I# [x#_sb0q2];
                                    };
                          } in  (#,#) [ipv_sb0pZ sat_sb0q3];
                    };
        } in 
          case ww1_sb0pF of {
            __DEFAULT ->
                let {
                  sat_sb0qc [Occ=Once] :: GHC.Types.IO System.Posix.Types.CSsize
                  [LclId] =
                      [ww_sb0pE ww2_sb0pG ww3_sb0pH ww4_sb0pI] \r [eta_sb0q5]
                          case plusAddr# [ww2_sb0pG ww3_sb0pH] of sat_sb0q7 {
                            __DEFAULT ->
                                case
                                    __pkg_ccall base-4.11.0.0 [ww_sb0pE
                                                               sat_sb0q7
                                                               ww4_sb0pI
                                                               eta_sb0q5]
                                of
                                { (#,#) ds10_sb0q9 [Occ=Once] ds11_sb0qa [Occ=Once] ->
                                      let {
                                        sat_sb0qb [Occ=Once] :: GHC.Int.Int64
                                        [LclId] =
                                            CCCS GHC.Int.I64#! [ds11_sb0qa];
                                      } in  (#,#) [ds10_sb0q9 sat_sb0qb];
                                };
                          };
                } in  $sdo_read_sb0pK sat_sb0qc w1_sb0pJ;
            0# ->
                case __pkg_ccall base-4.11.0.0 [ww_sb0pE 0## 0# 0## w1_sb0pJ] of {
                  (#,#) ds_sb0qf [Occ=Once*] ds1_sb0qg [Occ=Once] ->
                      let-no-escape {
                        $w$j_sb0qh [InlPrag=NOUSERINLINE[0],
                                    Occ=Once*!T[2],
                                    Dmd=<L,1*C1(C1(U(U,U)))>]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> GHC.Prim.Int#
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                        [LclId[JoinId(2)], Arity=2, Str=<L,U><S,1*U>, Unf=OtherCon []] =
                            sat-only [ww_sb0pE
                                      ww2_sb0pG
                                      ww3_sb0pH
                                      ww4_sb0pI
                                      $sdo_read_sb0pK] \r [w2_sb0qi ww5_sb0qj]
                                let-no-escape {
                                  read_sb0qk [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                                  [LclId[JoinId(1)], Arity=1, Str=<L,U>, Unf=OtherCon []] =
                                      sat-only [ww_sb0pE
                                                ww2_sb0pG
                                                ww3_sb0pH
                                                ww4_sb0pI
                                                $sdo_read_sb0pK] \r [eta_sb0ql]
                                          case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                                            (#,#) _ [Occ=Dead] ds3_sb0qp [Occ=Once!] ->
                                                case ds3_sb0qp of {
                                                  __DEFAULT ->
                                                      let {
                                                        sat_sb0qy [Occ=Once]
                                                          :: GHC.Types.IO System.Posix.Types.CSsize
                                                        [LclId] =
                                                            [ww_sb0pE
                                                             ww2_sb0pG
                                                             ww3_sb0pH
                                                             ww4_sb0pI] \r [ds9_sb0qr]
                                                                case
                                                                    plusAddr# [ww2_sb0pG ww3_sb0pH]
                                                                of
                                                                sat_sb0qt
                                                                { __DEFAULT ->
                                                                      case
                                                                          __pkg_ccall_GC base-4.11.0.0 [ww_sb0pE
                                                                                                        sat_sb0qt
                                                                                                        ww4_sb0pI
                                                                                                        ds9_sb0qr]
                                                                      of
                                                                      { (#,#) ds10_sb0qv [Occ=Once]
                                                                              ds11_sb0qw [Occ=Once] ->
                                                                            let {
                                                                              sat_sb0qx [Occ=Once]
                                                                                :: GHC.Int.Int64
                                                                              [LclId] =
                                                                                  CCCS GHC.Int.I64#! [ds11_sb0qw];
                                                                            } in 
                                                                              (#,#) [ds10_sb0qv
                                                                                     sat_sb0qx];
                                                                      };
                                                                };
                                                      } in  $sdo_read_sb0pK sat_sb0qy eta_sb0ql;
                                                  0# ->
                                                      let {
                                                        sat_sb0qG [Occ=Once]
                                                          :: GHC.Types.IO System.Posix.Types.CSsize
                                                        [LclId] =
                                                            [ww_sb0pE
                                                             ww2_sb0pG
                                                             ww3_sb0pH
                                                             ww4_sb0pI] \r [eta1_sb0qz]
                                                                case
                                                                    plusAddr# [ww2_sb0pG ww3_sb0pH]
                                                                of
                                                                sat_sb0qB
                                                                { __DEFAULT ->
                                                                      case
                                                                          __pkg_ccall base-4.11.0.0 [ww_sb0pE
                                                                                                     sat_sb0qB
                                                                                                     ww4_sb0pI
                                                                                                     eta1_sb0qz]
                                                                      of
                                                                      { (#,#) ds10_sb0qD [Occ=Once]
                                                                              ds11_sb0qE [Occ=Once] ->
                                                                            let {
                                                                              sat_sb0qF [Occ=Once]
                                                                                :: GHC.Int.Int64
                                                                              [LclId] =
                                                                                  CCCS GHC.Int.I64#! [ds11_sb0qE];
                                                                            } in 
                                                                              (#,#) [ds10_sb0qD
                                                                                     sat_sb0qF];
                                                                      };
                                                                };
                                                      } in  $sdo_read_sb0pK sat_sb0qG eta_sb0ql;
                                                };
                                          };
                                } in 
                                  case ww5_sb0qj of {
                                    __DEFAULT -> read_sb0qk w2_sb0qi;
                                    0# ->
                                        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                                          (#,#) _ [Occ=Dead] ds3_sb0qL [Occ=Once!] ->
                                              case ds3_sb0qL of {
                                                __DEFAULT ->
                                                    case narrow32Int# [ww_sb0pE] of sat_sb0qN {
                                                      __DEFAULT ->
                                                          let {
                                                            sat_sb0qO [Occ=Once]
                                                              :: System.Posix.Types.Fd
                                                            [LclId] =
                                                                CCCS GHC.Int.I32#! [sat_sb0qN];
                                                          } in 
                                                            case
                                                                GHC.Event.Thread.threadWaitRead1
                                                                    GHC.Event.Internal.evtRead
                                                                    sat_sb0qO
                                                                    w2_sb0qi
                                                            of
                                                            { (#,#) ipv_sb0qQ [Occ=Once]
                                                                    _ [Occ=Dead] ->
                                                                  read_sb0qk ipv_sb0qQ;
                                                            };
                                                    };
                                                0# ->
                                                    case narrow32Int# [ww_sb0pE] of sat_sb0qS {
                                                      __DEFAULT ->
                                                          case
                                                              waitRead# [sat_sb0qS w2_sb0qi]
                                                          of
                                                          s'_sb0qT
                                                          { __DEFAULT -> read_sb0qk s'_sb0qT;
                                                          };
                                                    };
                                              };
                                        };
                                  };
                      } in 
                        case narrow32Int# [ds1_sb0qg] of wild2_sb0qU {
                          __DEFAULT -> $w$j_sb0qh ds_sb0qf wild2_sb0qU;
                          -1# ->
                              case Foreign.C.Error.throwErrno1 w_sb0pD ds_sb0qf of {
                                (#,#) ipv_sb0qW [Occ=Once] ipv1_sb0qX [Occ=Once] ->
                                    case ipv1_sb0qX of {
                                      GHC.Int.I32# ww6_sb0qZ [Occ=Once] ->
                                          $w$j_sb0qh ipv_sb0qW ww6_sb0qZ;
                                    };
                              };
                        };
                };
          };

GHC.IO.FD.$fRawIOFD5 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0r0 w1_sb0r1 w2_sb0r2 w3_sb0r3 w4_sb0r4 w5_sb0r5]
        case w1_sb0r1 of {
          GHC.IO.FD.FD ww1_sb0r7 [Occ=Once] ww2_sb0r8 [Occ=Once] ->
              case w2_sb0r2 of {
                GHC.Ptr.Ptr ww4_sb0ra [Occ=Once] ->
                    case w3_sb0r3 of {
                      GHC.Types.I# ww6_sb0rc [Occ=Once] ->
                          case w4_sb0r4 of {
                            GHC.Word.W64# ww8_sb0re [Occ=Once] ->
                                GHC.IO.FD.$wreadRawBufferPtr
                                    w_sb0r0
                                    ww1_sb0r7
                                    ww2_sb0r8
                                    ww4_sb0ra
                                    ww6_sb0rc
                                    ww8_sb0re
                                    w5_sb0r5;
                          };
                    };
              };
        };

GHC.IO.FD.$fRawIOFD4
  :: GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [fd_sb0rf ptr_sb0rg bytes_sb0rh s_sb0ri]
        case fd_sb0rf of {
          GHC.IO.FD.FD ww1_sb0rk [Occ=Once] ww2_sb0rl [Occ=Once] ->
              case ptr_sb0rg of {
                GHC.Ptr.Ptr ww4_sb0rn [Occ=Once] ->
                    case bytes_sb0rh of {
                      GHC.Types.I# x#_sb0rp [Occ=Once] ->
                          case int2Word# [x#_sb0rp] of sat_sb0rq {
                            __DEFAULT ->
                                GHC.IO.FD.$wreadRawBufferPtr
                                    GHC.IO.FD.$fBufferedIOFD12
                                    ww1_sb0rk
                                    ww2_sb0rl
                                    ww4_sb0rn
                                    0#
                                    sat_sb0rq
                                    s_sb0ri;
                          };
                    };
              };
        };

GHC.IO.FD.$wwriteRawBufferPtr [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.Word#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId,
 Arity=7,
 Str=<L,U><S,U><S,1*U><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0rr
           ww_sb0rs
           ww1_sb0rt
           ww2_sb0ru
           ww3_sb0rv
           ww4_sb0rw
           w1_sb0rx]
        let-no-escape {
          $sdo_write_sb0ry [Occ=Once*!T[2], Dmd=<L,1*C1(C1(U(U,U)))>]
            :: GHC.Types.IO System.Posix.Types.CSsize
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
          [LclId[JoinId(2)],
           Arity=2,
           Str=<C(S),C(U(U,U))><S,U>,
           Unf=OtherCon []] =
              sat-only [w_sb0rr ww_sb0rs] \r [eta_sb0rz eta1_sb0rA]
                  let {
                    sat_sb0rL [Occ=Once] :: GHC.Types.IO ()
                    [LclId] =
                        [ww_sb0rs] \r [eta2_sb0rB]
                            case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                              (#,#) _ [Occ=Dead] ds1_sb0rF [Occ=Once!] ->
                                  case ds1_sb0rF of {
                                    __DEFAULT ->
                                        case narrow32Int# [ww_sb0rs] of sat_sb0rH {
                                          __DEFAULT ->
                                              let {
                                                sat_sb0rI [Occ=Once] :: System.Posix.Types.Fd
                                                [LclId] =
                                                    CCCS GHC.Int.I32#! [sat_sb0rH];
                                              } in 
                                                GHC.Event.Thread.threadWaitRead1
                                                    GHC.Event.Internal.evtWrite
                                                    sat_sb0rI
                                                    eta2_sb0rB;
                                        };
                                    0# ->
                                        case narrow32Int# [ww_sb0rs] of sat_sb0rJ {
                                          __DEFAULT ->
                                              case waitWrite# [sat_sb0rJ eta2_sb0rB] of s'_sb0rK {
                                                __DEFAULT -> (#,#) [s'_sb0rK GHC.Tuple.()];
                                              };
                                        };
                                  };
                            };
                  } in 
                    case
                        Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                            GHC.IO.FD.$fBufferedIOFD14 w_sb0rr eta_sb0rz sat_sb0rL eta1_sb0rA
                    of
                    { (#,#) ipv_sb0rN [Occ=Once] ipv1_sb0rO [Occ=Once] ->
                          let {
                            sat_sb0rS [Occ=Once] :: Foreign.C.Types.CInt
                            [LclId] =
                                [ipv1_sb0rO] \u []
                                    case ipv1_sb0rO of {
                                      GHC.Int.I64# x#_sb0rQ [Occ=Once] ->
                                          case narrow32Int# [x#_sb0rQ] of sat_sb0rR {
                                            __DEFAULT -> GHC.Int.I32# [sat_sb0rR];
                                          };
                                    };
                          } in  (#,#) [ipv_sb0rN sat_sb0rS];
                    };
        } in 
          case ww1_sb0rt of {
            __DEFAULT ->
                let {
                  sat_sb0s1 [Occ=Once] :: GHC.Types.IO System.Posix.Types.CSsize
                  [LclId] =
                      [ww_sb0rs ww2_sb0ru ww3_sb0rv ww4_sb0rw] \r [eta_sb0rU]
                          case plusAddr# [ww2_sb0ru ww3_sb0rv] of sat_sb0rW {
                            __DEFAULT ->
                                case
                                    __pkg_ccall base-4.11.0.0 [ww_sb0rs
                                                               sat_sb0rW
                                                               ww4_sb0rw
                                                               eta_sb0rU]
                                of
                                { (#,#) ds10_sb0rY [Occ=Once] ds11_sb0rZ [Occ=Once] ->
                                      let {
                                        sat_sb0s0 [Occ=Once] :: GHC.Int.Int64
                                        [LclId] =
                                            CCCS GHC.Int.I64#! [ds11_sb0rZ];
                                      } in  (#,#) [ds10_sb0rY sat_sb0s0];
                                };
                          };
                } in  $sdo_write_sb0ry sat_sb0s1 w1_sb0rx;
            0# ->
                case __pkg_ccall base-4.11.0.0 [ww_sb0rs 1## 0# 0## w1_sb0rx] of {
                  (#,#) ds_sb0s4 [Occ=Once*] ds1_sb0s5 [Occ=Once] ->
                      let-no-escape {
                        write_sb0s6 [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
                        [LclId[JoinId(1)], Arity=1, Str=<L,U>, Unf=OtherCon []] =
                            sat-only [ww_sb0rs
                                      ww2_sb0ru
                                      ww3_sb0rv
                                      ww4_sb0rw
                                      $sdo_write_sb0ry] \r [eta_sb0s7]
                                case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                                  (#,#) _ [Occ=Dead] ds3_sb0sb [Occ=Once!] ->
                                      case ds3_sb0sb of {
                                        __DEFAULT ->
                                            let {
                                              sat_sb0sk [Occ=Once]
                                                :: GHC.Types.IO System.Posix.Types.CSsize
                                              [LclId] =
                                                  [ww_sb0rs
                                                   ww2_sb0ru
                                                   ww3_sb0rv
                                                   ww4_sb0rw] \r [ds9_sb0sd]
                                                      case
                                                          plusAddr# [ww2_sb0ru ww3_sb0rv]
                                                      of
                                                      sat_sb0sf
                                                      { __DEFAULT ->
                                                            case
                                                                __pkg_ccall_GC base-4.11.0.0 [ww_sb0rs
                                                                                              sat_sb0sf
                                                                                              ww4_sb0rw
                                                                                              ds9_sb0sd]
                                                            of
                                                            { (#,#) ds10_sb0sh [Occ=Once]
                                                                    ds11_sb0si [Occ=Once] ->
                                                                  let {
                                                                    sat_sb0sj [Occ=Once]
                                                                      :: GHC.Int.Int64
                                                                    [LclId] =
                                                                        CCCS GHC.Int.I64#! [ds11_sb0si];
                                                                  } in 
                                                                    (#,#) [ds10_sb0sh sat_sb0sj];
                                                            };
                                                      };
                                            } in  $sdo_write_sb0ry sat_sb0sk eta_sb0s7;
                                        0# ->
                                            let {
                                              sat_sb0ss [Occ=Once]
                                                :: GHC.Types.IO System.Posix.Types.CSsize
                                              [LclId] =
                                                  [ww_sb0rs
                                                   ww2_sb0ru
                                                   ww3_sb0rv
                                                   ww4_sb0rw] \r [eta1_sb0sl]
                                                      case
                                                          plusAddr# [ww2_sb0ru ww3_sb0rv]
                                                      of
                                                      sat_sb0sn
                                                      { __DEFAULT ->
                                                            case
                                                                __pkg_ccall base-4.11.0.0 [ww_sb0rs
                                                                                           sat_sb0sn
                                                                                           ww4_sb0rw
                                                                                           eta1_sb0sl]
                                                            of
                                                            { (#,#) ds10_sb0sp [Occ=Once]
                                                                    ds11_sb0sq [Occ=Once] ->
                                                                  let {
                                                                    sat_sb0sr [Occ=Once]
                                                                      :: GHC.Int.Int64
                                                                    [LclId] =
                                                                        CCCS GHC.Int.I64#! [ds11_sb0sq];
                                                                  } in 
                                                                    (#,#) [ds10_sb0sp sat_sb0sr];
                                                            };
                                                      };
                                            } in  $sdo_write_sb0ry sat_sb0ss eta_sb0s7;
                                      };
                                };
                      } in 
                        case narrow32Int# [ds1_sb0s5] of {
                          __DEFAULT -> write_sb0s6 ds_sb0s4;
                          0# ->
                              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                                (#,#) _ [Occ=Dead] ds3_sb0sx [Occ=Once!] ->
                                    case ds3_sb0sx of {
                                      __DEFAULT ->
                                          case narrow32Int# [ww_sb0rs] of sat_sb0sz {
                                            __DEFAULT ->
                                                let {
                                                  sat_sb0sA [Occ=Once] :: System.Posix.Types.Fd
                                                  [LclId] =
                                                      CCCS GHC.Int.I32#! [sat_sb0sz];
                                                } in 
                                                  case
                                                      GHC.Event.Thread.threadWaitRead1
                                                          GHC.Event.Internal.evtWrite
                                                          sat_sb0sA
                                                          ds_sb0s4
                                                  of
                                                  { (#,#) ipv_sb0sC [Occ=Once] _ [Occ=Dead] ->
                                                        write_sb0s6 ipv_sb0sC;
                                                  };
                                          };
                                      0# ->
                                          case narrow32Int# [ww_sb0rs] of sat_sb0sE {
                                            __DEFAULT ->
                                                case waitWrite# [sat_sb0sE ds_sb0s4] of s'_sb0sF {
                                                  __DEFAULT -> write_sb0s6 s'_sb0sF;
                                                };
                                          };
                                    };
                              };
                        };
                };
          };

GHC.IO.FD.writeRawBufferPtr1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0sG w1_sb0sH w2_sb0sI w3_sb0sJ w4_sb0sK w5_sb0sL]
        case w1_sb0sH of {
          GHC.IO.FD.FD ww1_sb0sN [Occ=Once] ww2_sb0sO [Occ=Once] ->
              case w2_sb0sI of {
                GHC.Ptr.Ptr ww4_sb0sQ [Occ=Once] ->
                    case w3_sb0sJ of {
                      GHC.Types.I# ww6_sb0sS [Occ=Once] ->
                          case w4_sb0sK of {
                            GHC.Word.W64# ww8_sb0sU [Occ=Once] ->
                                GHC.IO.FD.$wwriteRawBufferPtr
                                    w_sb0sG
                                    ww1_sb0sN
                                    ww2_sb0sO
                                    ww4_sb0sQ
                                    ww6_sb0sS
                                    ww8_sb0sU
                                    w5_sb0sL;
                          };
                    };
              };
        };

GHC.IO.FD.$wfdWrite [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=5, Str=<S,U><S,U><S,U><S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_sb0sV ww1_sb0sW ww2_sb0sX ww3_sb0sY w_sb0sZ]
        case int2Word# [ww3_sb0sY] of sat_sb0t0 {
          __DEFAULT ->
              case
                  GHC.IO.FD.$wwriteRawBufferPtr
                      lvl1_raWUY ww_sb0sV ww1_sb0sW ww2_sb0sX 0# sat_sb0t0 w_sb0sZ
              of
              { (#,#) ipv_sb0t2 [Occ=Once*] ipv1_sb0t3 [Occ=Once] ->
                    case ipv1_sb0t3 of {
                      GHC.Int.I32# x#_sb0t5 ->
                          case <# [x#_sb0t5 ww3_sb0sY] of {
                            __DEFAULT -> (#,#) [ipv_sb0t2 GHC.Tuple.()];
                            1# ->
                                case -# [ww3_sb0sY x#_sb0t5] of sat_sb0t8 {
                                  __DEFAULT ->
                                      case plusAddr# [ww2_sb0sX x#_sb0t5] of sat_sb0t7 {
                                        __DEFAULT ->
                                            GHC.IO.FD.$wfdWrite
                                                ww_sb0sV ww1_sb0sW sat_sb0t7 sat_sb0t8 ipv_sb0t2;
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.FD.$fRawIOFD2 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0t9 w1_sb0ta w2_sb0tb w3_sb0tc]
        case w_sb0t9 of {
          GHC.IO.FD.FD ww1_sb0te [Occ=Once] ww2_sb0tf [Occ=Once] ->
              case w1_sb0ta of {
                GHC.Ptr.Ptr ww4_sb0th [Occ=Once] ->
                    case w2_sb0tb of {
                      GHC.Types.I# ww6_sb0tj [Occ=Once] ->
                          GHC.IO.FD.$wfdWrite
                              ww1_sb0te ww2_sb0tf ww4_sb0th ww6_sb0tj w3_sb0tc;
                    };
              };
        };

GHC.IO.FD.$w$cwriteNonBlocking [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=5,
 Str=<S,U><S,1*U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sb0tk ww1_sb0tl ww2_sb0tm ww3_sb0tn w_sb0to]
        case ww1_sb0tl of {
          __DEFAULT ->
              let {
                sat_sb0tx [Occ=Once] :: GHC.Types.IO System.Posix.Types.CSsize
                [LclId] =
                    [ww_sb0tk ww2_sb0tm ww3_sb0tn] \r [eta_sb0tq]
                        case int2Word# [ww3_sb0tn] of sat_sb0ts {
                          __DEFAULT ->
                              case
                                  __pkg_ccall base-4.11.0.0 [ww_sb0tk ww2_sb0tm sat_sb0ts eta_sb0tq]
                              of
                              { (#,#) ds10_sb0tu [Occ=Once] ds11_sb0tv [Occ=Once] ->
                                    let {
                                      sat_sb0tw [Occ=Once] :: GHC.Int.Int64
                                      [LclId] =
                                          CCCS GHC.Int.I64#! [ds11_sb0tv];
                                    } in  (#,#) [ds10_sb0tu sat_sb0tw];
                              };
                        };
              } in 
                case
                    GHC.IO.FD.$fBufferedIOFD5
                        GHC.IO.FD.$fBufferedIOFD_loc
                        sat_sb0tx
                        GHC.IO.FD.$fBufferedIOFD3
                        w_sb0to
                of
                { (#,#) ipv_sb0tz [Occ=Once*] ipv1_sb0tA [Occ=Once] ->
                      case ipv1_sb0tA of {
                        GHC.Int.I64# x_sb0tC [Occ=Once!] ->
                            case x_sb0tC of wild2_sb0tD {
                              __DEFAULT ->
                                  case narrow32Int# [wild2_sb0tD] of sat_sb0tE {
                                    __DEFAULT ->
                                        let {
                                          sat_sb0tF [Occ=Once] :: GHC.Types.Int
                                          [LclId] =
                                              CCCS GHC.Types.I#! [sat_sb0tE];
                                        } in  (#,#) [ipv_sb0tz sat_sb0tF];
                                  };
                              -1# -> (#,#) [ipv_sb0tz GHC.IO.FD.$fBufferedIOFD2];
                            };
                      };
                };
          0# ->
              case __pkg_ccall base-4.11.0.0 [ww_sb0tk 1## 0# 0## w_sb0to] of {
                (#,#) ds_sb0tI [Occ=Once*] ds1_sb0tJ [Occ=Once] ->
                    case narrow32Int# [ds1_sb0tJ] of {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                            (#,#) _ [Occ=Dead] ds3_sb0tO [Occ=Once!] ->
                                case ds3_sb0tO of {
                                  __DEFAULT ->
                                      let {
                                        sat_sb0tX [Occ=Once]
                                          :: GHC.Types.IO System.Posix.Types.CSsize
                                        [LclId] =
                                            [ww_sb0tk ww2_sb0tm ww3_sb0tn] \r [ds9_sb0tQ]
                                                case int2Word# [ww3_sb0tn] of sat_sb0tS {
                                                  __DEFAULT ->
                                                      case
                                                          __pkg_ccall_GC base-4.11.0.0 [ww_sb0tk
                                                                                        ww2_sb0tm
                                                                                        sat_sb0tS
                                                                                        ds9_sb0tQ]
                                                      of
                                                      { (#,#) ds10_sb0tU [Occ=Once]
                                                              ds11_sb0tV [Occ=Once] ->
                                                            let {
                                                              sat_sb0tW [Occ=Once] :: GHC.Int.Int64
                                                              [LclId] =
                                                                  CCCS GHC.Int.I64#! [ds11_sb0tV];
                                                            } in  (#,#) [ds10_sb0tU sat_sb0tW];
                                                      };
                                                };
                                      } in 
                                        case
                                            GHC.IO.FD.$fBufferedIOFD5
                                                GHC.IO.FD.$fBufferedIOFD_loc
                                                sat_sb0tX
                                                GHC.IO.FD.$fBufferedIOFD3
                                                ds_sb0tI
                                        of
                                        { (#,#) ipv_sb0tZ [Occ=Once*] ipv1_sb0u0 [Occ=Once] ->
                                              case ipv1_sb0u0 of {
                                                GHC.Int.I64# x_sb0u2 [Occ=Once!] ->
                                                    case x_sb0u2 of wild6_sb0u3 {
                                                      __DEFAULT ->
                                                          case
                                                              narrow32Int# [wild6_sb0u3]
                                                          of
                                                          sat_sb0u4
                                                          { __DEFAULT ->
                                                                let {
                                                                  sat_sb0u5 [Occ=Once]
                                                                    :: GHC.Types.Int
                                                                  [LclId] =
                                                                      CCCS GHC.Types.I#! [sat_sb0u4];
                                                                } in  (#,#) [ipv_sb0tZ sat_sb0u5];
                                                          };
                                                      -1# ->
                                                          (#,#) [ipv_sb0tZ
                                                                 GHC.IO.FD.$fBufferedIOFD2];
                                                    };
                                              };
                                        };
                                  0# ->
                                      let {
                                        sat_sb0ud [Occ=Once]
                                          :: GHC.Types.IO System.Posix.Types.CSsize
                                        [LclId] =
                                            [ww_sb0tk ww2_sb0tm ww3_sb0tn] \r [eta_sb0u6]
                                                case int2Word# [ww3_sb0tn] of sat_sb0u8 {
                                                  __DEFAULT ->
                                                      case
                                                          __pkg_ccall base-4.11.0.0 [ww_sb0tk
                                                                                     ww2_sb0tm
                                                                                     sat_sb0u8
                                                                                     eta_sb0u6]
                                                      of
                                                      { (#,#) ds10_sb0ua [Occ=Once]
                                                              ds11_sb0ub [Occ=Once] ->
                                                            let {
                                                              sat_sb0uc [Occ=Once] :: GHC.Int.Int64
                                                              [LclId] =
                                                                  CCCS GHC.Int.I64#! [ds11_sb0ub];
                                                            } in  (#,#) [ds10_sb0ua sat_sb0uc];
                                                      };
                                                };
                                      } in 
                                        case
                                            GHC.IO.FD.$fBufferedIOFD5
                                                GHC.IO.FD.$fBufferedIOFD_loc
                                                sat_sb0ud
                                                GHC.IO.FD.$fBufferedIOFD3
                                                ds_sb0tI
                                        of
                                        { (#,#) ipv_sb0uf [Occ=Once*] ipv1_sb0ug [Occ=Once] ->
                                              case ipv1_sb0ug of {
                                                GHC.Int.I64# x_sb0ui [Occ=Once!] ->
                                                    case x_sb0ui of wild6_sb0uj {
                                                      __DEFAULT ->
                                                          case
                                                              narrow32Int# [wild6_sb0uj]
                                                          of
                                                          sat_sb0uk
                                                          { __DEFAULT ->
                                                                let {
                                                                  sat_sb0ul [Occ=Once]
                                                                    :: GHC.Types.Int
                                                                  [LclId] =
                                                                      CCCS GHC.Types.I#! [sat_sb0uk];
                                                                } in  (#,#) [ipv_sb0uf sat_sb0ul];
                                                          };
                                                      -1# ->
                                                          (#,#) [ipv_sb0uf
                                                                 GHC.IO.FD.$fBufferedIOFD2];
                                                    };
                                              };
                                        };
                                };
                          };
                      0# -> (#,#) [ds_sb0tI GHC.IO.FD.$fBufferedIOFD2];
                    };
              };
        };

GHC.IO.FD.$fRawIOFD1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0um w1_sb0un w2_sb0uo w3_sb0up]
        case w_sb0um of {
          GHC.IO.FD.FD ww1_sb0ur [Occ=Once] ww2_sb0us [Occ=Once] ->
              case w1_sb0un of {
                GHC.Ptr.Ptr ww4_sb0uu [Occ=Once] ->
                    case w2_sb0uo of {
                      GHC.Types.I# ww6_sb0uw [Occ=Once] ->
                          GHC.IO.FD.$w$cwriteNonBlocking
                              ww1_sb0ur ww2_sb0us ww4_sb0uu ww6_sb0uw w3_sb0up;
                    };
              };
        };

GHC.IO.FD.$fRawIOFD [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.IO.Device.RawIO GHC.IO.FD.FD
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.IO.Device.C:RawIO! [GHC.IO.FD.$fRawIOFD4
                                          GHC.IO.FD.$fRawIOFD3
                                          GHC.IO.FD.$fRawIOFD2
                                          GHC.IO.FD.$fRawIOFD1];

GHC.IO.FD.$fBufferedIOFD_$swriteBuf1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Word.Word8 #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,U)><S(SLLLSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w1_sb0ux w2_sb0uy w3_sb0uz]
        case w2_sb0uy of {
          GHC.IO.Buffer.Buffer ww1_sb0uB
                               ww2_sb0uC
                               ww3_sb0uD [Occ=Once]
                               ww4_sb0uE [Occ=Once]
                               ww5_sb0uF
                               ww6_sb0uG [Occ=Once] ->
              case w1_sb0ux of {
                GHC.IO.FD.FD ww8_sb0uI [Occ=Once] ww9_sb0uJ [Occ=Once] ->
                    case -# [ww6_sb0uG ww5_sb0uF] of sat_sb0uL {
                      __DEFAULT ->
                          case plusAddr# [ww1_sb0uB ww5_sb0uF] of sat_sb0uK {
                            __DEFAULT ->
                                case
                                    GHC.IO.FD.$wfdWrite
                                        ww8_sb0uI ww9_sb0uJ sat_sb0uK sat_sb0uL w3_sb0uz
                                of
                                { (#,#) ipv_sb0uN [Occ=Once] _ [Occ=Dead] ->
                                      case touch# [ww2_sb0uC ipv_sb0uN] of s'_sb0uP {
                                        __DEFAULT ->
                                            let {
                                              sat_sb0uQ [Occ=Once]
                                                :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                              [LclId] =
                                                  CCCS GHC.IO.Buffer.Buffer! [ww1_sb0uB
                                                                              ww2_sb0uC
                                                                              ww3_sb0uD
                                                                              ww4_sb0uE
                                                                              0#
                                                                              0#];
                                            } in  (#,#) [s'_sb0uP sat_sb0uQ];
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.FD.fdIsNonBlocking :: GHC.IO.FD.FD -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LS),1*U(A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_sb0uR]
        case ds_sb0uR of {
          GHC.IO.FD.FD _ [Occ=Dead] dt1_sb0uU [Occ=Once] ->
              GHC.Types.I# [dt1_sb0uU];
        };

GHC.IO.FD.fdFD :: GHC.IO.FD.FD -> Foreign.C.Types.CInt
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_sb0uV]
        case ds_sb0uV of {
          GHC.IO.FD.FD dt_sb0uX [Occ=Once] _ [Occ=Dead] ->
              GHC.Int.I32# [dt_sb0uX];
        };

GHC.IO.FD.$fShowFD_$cshow :: GHC.IO.FD.FD -> GHC.Base.String
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)>m2,
 Unf=OtherCon []] =
    [] \r [fd_sb0uZ]
        case fd_sb0uZ of {
          GHC.IO.FD.FD dt_sb0v1 [Occ=Once] _ [Occ=Dead] ->
              case GHC.Show.$wshowSignedInt 0# dt_sb0v1 GHC.Types.[] of {
                (#,#) ww5_sb0v4 [Occ=Once] ww6_sb0v5 [Occ=Once] ->
                    : [ww5_sb0v4 ww6_sb0v5];
              };
        };

GHC.IO.FD.$fBufferedIOFD15
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Word.Word8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,A><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [_dev_sb0v6 state_sb0v7 s_sb0v8]
        case newMutVar# [GHC.ForeignPtr.NoFinalizers s_sb0v8] of {
          (#,#) ipv_sb0va [Occ=Once] ipv1_sb0vb [Occ=Once] ->
              case newPinnedByteArray# [8192# ipv_sb0va] of {
                (#,#) ipv2_sb0vd [Occ=Once] ipv3_sb0ve ->
                    let {
                      sat_sb0vg [Occ=Once] :: GHC.ForeignPtr.ForeignPtrContents
                      [LclId] =
                          CCCS GHC.ForeignPtr.MallocPtr! [ipv3_sb0ve ipv1_sb0vb];
                    } in 
                      case byteArrayContents# [ipv3_sb0ve] of sat_sb0vf {
                        __DEFAULT ->
                            let {
                              sat_sb0vh [Occ=Once] :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                              [LclId] =
                                  CCCS GHC.IO.Buffer.Buffer! [sat_sb0vf
                                                              sat_sb0vg
                                                              state_sb0v7
                                                              8192#
                                                              0#
                                                              0#];
                            } in  (#,#) [ipv2_sb0vd sat_sb0vh];
                      };
              };
        };

GHC.IO.FD.$fIODeviceFD12
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=2, Str=<L,1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [fd_sb0vi eta_sb0vj]
        let {
          sat_sb0vn [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_sb0vi] \s []
                  case fd_sb0vi of {
                    GHC.IO.FD.FD dt_sb0vl [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_sb0vl];
                  };
        } in  System.Posix.Internals.fdFileSize1 sat_sb0vn eta_sb0vj;

GHC.IO.FD.$fIODeviceFD9
  :: GHC.IO.FD.FD
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<L,1*U(U,A)><L,1*U><S,U>, Unf=OtherCon []] =
    [] \r [fd_sb0vo on_sb0vp eta_sb0vq]
        let {
          sat_sb0vu [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_sb0vo] \s []
                  case fd_sb0vo of {
                    GHC.IO.FD.FD dt_sb0vs [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_sb0vs];
                  };
        } in  System.Posix.Internals.setEcho1 sat_sb0vu on_sb0vp eta_sb0vq;

GHC.IO.FD.$fIODeviceFD8
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId, Arity=2, Str=<L,1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [fd_sb0vv eta_sb0vw]
        let {
          sat_sb0vA [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_sb0vv] \s []
                  case fd_sb0vv of {
                    GHC.IO.FD.FD dt_sb0vy [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_sb0vy];
                  };
        } in 
          System.Posix.Internals.getEcho3
              sat_sb0vA System.Posix.Internals.getEcho2 eta_sb0vw;

GHC.IO.FD.$fIODeviceFD7
  :: GHC.IO.FD.FD
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<L,1*U(U,A)><L,1*U><S,U>, Unf=OtherCon []] =
    [] \r [fd_sb0vB raw_sb0vC eta_sb0vD]
        let {
          sat_sb0vJ [Occ=Once] :: GHC.Types.Bool
          [LclId] =
              [raw_sb0vC] \u []
                  case raw_sb0vC of {
                    GHC.Types.False -> GHC.Types.True [];
                    GHC.Types.True -> GHC.Types.False [];
                  }; } in
        let {
          sat_sb0vH [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_sb0vB] \s []
                  case fd_sb0vB of {
                    GHC.IO.FD.FD dt_sb0vF [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_sb0vF];
                  };
        } in 
          System.Posix.Internals.setCooked1 sat_sb0vH sat_sb0vJ eta_sb0vD;

GHC.IO.FD.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.IO.FD.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.FD.$trModule4];

GHC.IO.FD.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD"#;

GHC.IO.FD.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.FD.$trModule2];

GHC.IO.FD.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.IO.FD.$trModule3
                                     GHC.IO.FD.$trModule1];

$krep_raWV0 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcInt
                                              GHC.Types.[]];

$krep1_raWV1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCInt
                                              GHC.Types.[]];

GHC.IO.FD.$tcFD2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "FD"#;

GHC.IO.FD.$tcFD1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.FD.$tcFD2];

GHC.IO.FD.$tcFD :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10838815552519039062##
                                    15546290101957756376##
                                    GHC.IO.FD.$trModule
                                    GHC.IO.FD.$tcFD1
                                    0#
                                    GHC.Types.krep$*];

$krep2_raWV2 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.IO.FD.$tcFD
                                              GHC.Types.[]];

$krep3_raWV3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_raWV0 $krep2_raWV2];

GHC.IO.FD.$tc'FD1 [InlPrag=NOUSERINLINE[~]] :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_raWV1 $krep3_raWV3];

GHC.IO.FD.$tc'FD3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'FD"#;

GHC.IO.FD.$tc'FD2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.FD.$tc'FD3];

GHC.IO.FD.$tc'FD :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9025179437427398028##
                                    18071003818566613836##
                                    GHC.IO.FD.$trModule
                                    GHC.IO.FD.$tc'FD2
                                    0#
                                    GHC.IO.FD.$tc'FD1];

GHC.IO.FD.$fShowFD_$cshowsPrec
  :: GHC.Types.Int -> GHC.IO.FD.FD -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,A><S(SL),1*U(U,A)><L,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_sb0vK x_sb0vL s_sb0vM]
        case x_sb0vL of {
          GHC.IO.FD.FD dt_sb0vO [Occ=Once] _ [Occ=Dead] ->
              case GHC.Show.$wshowSignedInt 0# dt_sb0vO GHC.Types.[] of {
                (#,#) ww5_sb0vR [Occ=Once] ww6_sb0vS [Occ=Once] ->
                    let {
                      sat_sb0vT [Occ=Once] :: [GHC.Types.Char]
                      [LclId] =
                          CCCS :! [ww5_sb0vR ww6_sb0vS];
                    } in  GHC.Base.++ sat_sb0vT s_sb0vM;
              };
        };

GHC.IO.FD.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int# -> GHC.Base.String -> [GHC.Types.Char]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U>,
 Unf=OtherCon []] =
    [] \r [ww_sb0vU w_sb0vV]
        case GHC.Show.$wshowSignedInt 0# ww_sb0vU GHC.Types.[] of {
          (#,#) ww5_sb0vX [Occ=Once] ww6_sb0vY [Occ=Once] ->
              let {
                sat_sb0vZ [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    CCCS :! [ww5_sb0vX ww6_sb0vY];
              } in  GHC.Base.++ sat_sb0vZ w_sb0vV;
        };

GHC.IO.FD.$fShowFD1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><L,1*U>,
 Unf=OtherCon []] =
    [] \r [w_sb0w0 w1_sb0w1]
        case w_sb0w0 of {
          GHC.IO.FD.FD ww1_sb0w3 [Occ=Once] _ [Occ=Dead] ->
              GHC.IO.FD.$wlvl ww1_sb0w3 w1_sb0w1;
        };

GHC.IO.FD.$fShowFD_$cshowList :: [GHC.IO.FD.FD] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=OtherCon []] =
    [] \r [ls_sb0w5 s_sb0w6]
        GHC.Show.showList__ GHC.IO.FD.$fShowFD1 ls_sb0w5 s_sb0w6;

GHC.IO.FD.$fShowFD [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.IO.FD.FD
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.IO.FD.$fShowFD_$cshowsPrec
                                    GHC.IO.FD.$fShowFD_$cshow
                                    GHC.IO.FD.$fShowFD_$cshowList];

output_flags_raWV4 :: GHC.Int.Int32
[GblId] =
    [] \u []
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
          (#,#) _ [Occ=Dead] ds1_sb0wa [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds3_sb0we [Occ=Once] ->
                    case narrow32Int# [ds3_sb0we] of sat_sb0wh {
                      __DEFAULT ->
                          case int2Word# [sat_sb0wh] of sat_sb0wi {
                            __DEFAULT ->
                                case narrow32Int# [ds1_sb0wa] of sat_sb0wf {
                                  __DEFAULT ->
                                      case int2Word# [sat_sb0wf] of sat_sb0wg {
                                        __DEFAULT ->
                                            case or# [sat_sb0wg sat_sb0wi] of sat_sb0wj {
                                              __DEFAULT ->
                                                  case word2Int# [sat_sb0wj] of sat_sb0wk {
                                                    __DEFAULT -> GHC.Int.I32# [sat_sb0wk];
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

write_flags_raWV5 :: GHC.Int.Int32
[GblId] =
    [] \u []
        case output_flags_raWV4 of {
          GHC.Int.I32# x#_sb0wm [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds1_sb0wq [Occ=Once] ->
                    case narrow32Int# [ds1_sb0wq] of sat_sb0ws {
                      __DEFAULT ->
                          case int2Word# [sat_sb0ws] of sat_sb0wt {
                            __DEFAULT ->
                                case int2Word# [x#_sb0wm] of sat_sb0wr {
                                  __DEFAULT ->
                                      case or# [sat_sb0wr sat_sb0wt] of sat_sb0wu {
                                        __DEFAULT ->
                                            case word2Int# [sat_sb0wu] of sat_sb0wv {
                                              __DEFAULT -> GHC.Int.I32# [sat_sb0wv];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

append_flags_raWV6 :: GHC.Int.Int32
[GblId] =
    [] \u []
        case write_flags_raWV5 of {
          GHC.Int.I32# x#_sb0wx [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds1_sb0wB [Occ=Once] ->
                    case narrow32Int# [ds1_sb0wB] of sat_sb0wD {
                      __DEFAULT ->
                          case int2Word# [sat_sb0wD] of sat_sb0wE {
                            __DEFAULT ->
                                case int2Word# [x#_sb0wx] of sat_sb0wC {
                                  __DEFAULT ->
                                      case or# [sat_sb0wC sat_sb0wE] of sat_sb0wF {
                                        __DEFAULT ->
                                            case word2Int# [sat_sb0wF] of sat_sb0wG {
                                              __DEFAULT -> GHC.Int.I32# [sat_sb0wG];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

rw_flags_raWV7 :: GHC.Int.Int32
[GblId] =
    [] \u []
        case output_flags_raWV4 of {
          GHC.Int.I32# x#_sb0wI [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds1_sb0wM [Occ=Once] ->
                    case narrow32Int# [ds1_sb0wM] of sat_sb0wO {
                      __DEFAULT ->
                          case int2Word# [sat_sb0wO] of sat_sb0wP {
                            __DEFAULT ->
                                case int2Word# [x#_sb0wI] of sat_sb0wN {
                                  __DEFAULT ->
                                      case or# [sat_sb0wN sat_sb0wP] of sat_sb0wQ {
                                        __DEFAULT ->
                                            case word2Int# [sat_sb0wQ] of sat_sb0wR {
                                              __DEFAULT -> GHC.Int.I32# [sat_sb0wR];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

read_flags_raWV8 :: GHC.Int.Int32
[GblId] =
    [] \u []
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
          (#,#) _ [Occ=Dead] ds1_sb0wV [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds3_sb0wZ [Occ=Once] ->
                    case narrow32Int# [ds3_sb0wZ] of sat_sb0x2 {
                      __DEFAULT ->
                          case int2Word# [sat_sb0x2] of sat_sb0x3 {
                            __DEFAULT ->
                                case narrow32Int# [ds1_sb0wV] of sat_sb0x0 {
                                  __DEFAULT ->
                                      case int2Word# [sat_sb0x0] of sat_sb0x1 {
                                        __DEFAULT ->
                                            case or# [sat_sb0x1 sat_sb0x3] of sat_sb0x4 {
                                              __DEFAULT ->
                                                  case word2Int# [sat_sb0x4] of sat_sb0x5 {
                                                    __DEFAULT -> GHC.Int.I32# [sat_sb0x5];
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.FD.$fIODeviceFD16
  :: System.Posix.Types.COff -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [ds1_sb0x6]
        case ds1_sb0x6 of {
          GHC.Int.I64# x_sb0x8 [Occ=Once!] ->
              case x_sb0x8 of {
                __DEFAULT -> GHC.Types.False [];
                -1# -> GHC.Types.True [];
              };
        };

GHC.IO.FD.$fIODeviceFD15 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetPosn"#;

GHC.IO.FD.$fIODeviceFD14 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fIODeviceFD15;

GHC.IO.FD.$w$ctell [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=2, Str=<L,U><L,U>, Unf=OtherCon []] =
    [] \r [ww_sb0xa w_sb0xb]
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
          (#,#) _ [Occ=Dead] ds1_sb0xf [Occ=Once] ->
              let {
                sat_sb0xn [Occ=Once] :: GHC.Types.IO System.Posix.Types.COff
                [LclId] =
                    [ww_sb0xa ds1_sb0xf] \r [ds9_sb0xg]
                        case narrow32Int# [ds1_sb0xf] of sat_sb0xi {
                          __DEFAULT ->
                              case
                                  __pkg_ccall base-4.11.0.0 [ww_sb0xa 0# sat_sb0xi ds9_sb0xg]
                              of
                              { (#,#) ds10_sb0xk [Occ=Once] ds11_sb0xl [Occ=Once] ->
                                    let {
                                      sat_sb0xm [Occ=Once] :: GHC.Int.Int64
                                      [LclId] =
                                          CCCS GHC.Int.I64#! [ds11_sb0xl];
                                    } in  (#,#) [ds10_sb0xk sat_sb0xm];
                              };
                        };
              } in 
                case
                    Foreign.C.Error.throwErrnoIfMinus1Retry2
                        GHC.IO.FD.$fIODeviceFD16 GHC.IO.FD.$fIODeviceFD14 sat_sb0xn w_sb0xb
                of
                { (#,#) ipv_sb0xp [Occ=Once] ipv1_sb0xq [Occ=Once] ->
                      let {
                        sat_sb0xr [Occ=Once] :: GHC.Integer.Type.Integer
                        [LclId] =
                            [ipv1_sb0xq] \u [] GHC.Int.$fIntegralInt64_$ctoInteger ipv1_sb0xq;
                      } in  (#,#) [ipv_sb0xp sat_sb0xr];
                };
        };

GHC.IO.FD.$fIODeviceFD13 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=2, Str=<S(SL),1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [w_sb0xs w1_sb0xt]
        case w_sb0xs of {
          GHC.IO.FD.FD ww1_sb0xv [Occ=Once] _ [Occ=Dead] ->
              GHC.IO.FD.$w$ctell ww1_sb0xv w1_sb0xt;
        };

GHC.IO.FD.$fIODeviceFD19 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "seek"#;

GHC.IO.FD.$fIODeviceFD18 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fIODeviceFD19;

GHC.IO.FD.$w$cseek [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.IO.Device.SeekMode
     -> GHC.Integer.Type.Integer
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=4, Str=<L,U><S,1*U><S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ww_sb0xx w_sb0xy w1_sb0xz w2_sb0xA]
        case GHC.Integer.Type.integerToInt w1_sb0xz of wild_sb0xB {
          __DEFAULT ->
              let-no-escape {
                $j_sb0xC [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                  :: GHC.Prim.Int# -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                    sat-only [ww_sb0xx w2_sb0xA wild_sb0xB] \r [ds8_sb0xD]
                        let {
                          sat_sb0xK [Occ=Once] :: GHC.Types.IO System.Posix.Types.COff
                          [LclId] =
                              [ww_sb0xx wild_sb0xB ds8_sb0xD] \r [ds9_sb0xE]
                                  case
                                      __pkg_ccall base-4.11.0.0 [ww_sb0xx
                                                                 wild_sb0xB
                                                                 ds8_sb0xD
                                                                 ds9_sb0xE]
                                  of
                                  { (#,#) ds10_sb0xH [Occ=Once] ds11_sb0xI [Occ=Once] ->
                                        let {
                                          sat_sb0xJ [Occ=Once] :: GHC.Int.Int64
                                          [LclId] =
                                              CCCS GHC.Int.I64#! [ds11_sb0xI];
                                        } in  (#,#) [ds10_sb0xH sat_sb0xJ];
                                  };
                        } in 
                          case
                              Foreign.C.Error.throwErrnoIfMinus1Retry2
                                  GHC.IO.FD.$fIODeviceFD16
                                  GHC.IO.FD.$fIODeviceFD18
                                  sat_sb0xK
                                  w2_sb0xA
                          of
                          { (#,#) ipv_sb0xM [Occ=Once] _ [Occ=Dead] ->
                                (#,#) [ipv_sb0xM GHC.Tuple.()];
                          };
              } in 
                case w_sb0xy of {
                  GHC.IO.Device.AbsoluteSeek ->
                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                        (#,#) _ [Occ=Dead] ds1_sb0xS [Occ=Once] ->
                            case narrow32Int# [ds1_sb0xS] of sat_sb0xT {
                              __DEFAULT -> $j_sb0xC sat_sb0xT;
                            };
                      };
                  GHC.IO.Device.RelativeSeek ->
                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                        (#,#) _ [Occ=Dead] ds1_sb0xX [Occ=Once] ->
                            case narrow32Int# [ds1_sb0xX] of sat_sb0xY {
                              __DEFAULT -> $j_sb0xC sat_sb0xY;
                            };
                      };
                  GHC.IO.Device.SeekFromEnd ->
                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                        (#,#) _ [Occ=Dead] ds1_sb0y2 [Occ=Once] ->
                            case narrow32Int# [ds1_sb0y2] of sat_sb0y3 {
                              __DEFAULT -> $j_sb0xC sat_sb0y3;
                            };
                      };
                };
        };

GHC.IO.FD.$fIODeviceFD17 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.Device.SeekMode
     -> GHC.Integer.Type.Integer
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<S(SL),1*U(U,A)><S,1*U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0y4 w1_sb0y5 w2_sb0y6 w3_sb0y7]
        case w_sb0y4 of {
          GHC.IO.FD.FD ww1_sb0y9 [Occ=Once] _ [Occ=Dead] ->
              GHC.IO.FD.$w$cseek ww1_sb0y9 w1_sb0y5 w2_sb0y6 w3_sb0y7;
        };

GHC.IO.FD.stdin :: GHC.IO.FD.FD
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.FD.FD! [0# 0#];

GHC.IO.FD.stdout :: GHC.IO.FD.FD
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.FD.FD! [1# 0#];

GHC.IO.FD.stderr :: GHC.IO.FD.FD
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.FD.FD! [2# 0#];

lvl3_raWV9 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.setSize"#;

lvl4_raWVa :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl3_raWV9;

GHC.IO.FD.$fIODeviceFD11
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [ds_sb0yb ds2_sb0yc]
        case narrow32Int# [ds2_sb0yc] of sat_sb0yd {
          __DEFAULT -> Foreign.C.Error.$wlvl lvl4_raWVa sat_sb0yd ds_sb0yb;
        };

GHC.IO.FD.$wsetSize [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Integer.Type.Integer
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<S,U><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [ww_sb0ye w_sb0yf w1_sb0yg]
        case GHC.Integer.Type.integerToInt w_sb0yf of wild_sb0yh {
          __DEFAULT ->
              case __pkg_ccall base-4.11.0.0 [ww_sb0ye wild_sb0yh w1_sb0yg] of {
                (#,#) ds7_sb0yk [Occ=Once*] ds8_sb0yl [Occ=Once] ->
                    case narrow32Int# [ds8_sb0yl] of {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [ds7_sb0yk] of {
                            (#,#) ds_sb0yp [Occ=Once] ds2_sb0yq [Occ=Once] ->
                                GHC.IO.FD.$fIODeviceFD11 ds_sb0yp ds2_sb0yq;
                          };
                      0# -> (#,#) [ds7_sb0yk GHC.Tuple.()];
                    };
              };
        };

GHC.IO.FD.$fIODeviceFD10 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Integer.Type.Integer
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Str=<S(SL),1*U(U,A)><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0ys w1_sb0yt w2_sb0yu]
        case w_sb0ys of {
          GHC.IO.FD.FD ww1_sb0yw [Occ=Once] _ [Occ=Dead] ->
              GHC.IO.FD.$wsetSize ww1_sb0yw w1_sb0yt w2_sb0yu;
        };

GHC.IO.FD.writeRawBufferPtr
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Types.IO Foreign.C.Types.CInt
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.FD.writeRawBufferPtr1
            eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.FD.readRawBufferPtrNoBlock
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.FD.readRawBufferPtrNoBlock1
            eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.FD.readRawBufferPtr
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.FD.$fRawIOFD5 eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.FD.$w$cfillReadBuffer0 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Base.Maybe GHC.Types.Int,
            GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=9,
 Str=<S,U><S,1*U><S,U><L,U><L,U><S,U><L,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sb0yy
           ww1_sb0yz
           ww2_sb0yA
           ww3_sb0yB
           ww4_sb0yC
           ww5_sb0yD
           ww6_sb0yE
           ww7_sb0yF
           w_sb0yG]
        case -# [ww5_sb0yD ww7_sb0yF] of sat_sb0yI {
          __DEFAULT ->
              case int2Word# [sat_sb0yI] of sat_sb0yJ {
                __DEFAULT ->
                    case plusAddr# [ww2_sb0yA ww7_sb0yF] of sat_sb0yH {
                      __DEFAULT ->
                          case
                              GHC.IO.FD.$wreadRawBufferPtrNoBlock
                                  GHC.IO.FD.$fBufferedIOFD8
                                  ww_sb0yy
                                  ww1_sb0yz
                                  sat_sb0yH
                                  0#
                                  sat_sb0yJ
                                  w_sb0yG
                          of
                          { (#,#) ipv_sb0yL [Occ=Once*] ipv1_sb0yM [Occ=Once!] ->
                                case ipv1_sb0yM of wild_sb0yN {
                                  GHC.Types.I# ds_sb0yO [Occ=Once!] ->
                                      case ds_sb0yO of ds2_sb0yP {
                                        __DEFAULT ->
                                            case touch# [ww3_sb0yB ipv_sb0yL] of s'_sb0yQ {
                                              __DEFAULT ->
                                                  case +# [ww7_sb0yF ds2_sb0yP] of sat_sb0yS {
                                                    __DEFAULT ->
                                                        let {
                                                          sat_sb0yT [Occ=Once]
                                                            :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                                          [LclId] =
                                                              CCCS GHC.IO.Buffer.Buffer! [ww2_sb0yA
                                                                                          ww3_sb0yB
                                                                                          ww4_sb0yC
                                                                                          ww5_sb0yD
                                                                                          ww6_sb0yE
                                                                                          sat_sb0yS]; } in
                                                        let {
                                                          sat_sb0yR [Occ=Once]
                                                            :: GHC.Base.Maybe GHC.Types.Int
                                                          [LclId] =
                                                              CCCS GHC.Base.Just! [wild_sb0yN]; } in
                                                        let {
                                                          sat_sb0yU [Occ=Once]
                                                            :: (GHC.Base.Maybe GHC.Types.Int,
                                                                GHC.IO.Buffer.Buffer GHC.Word.Word8)
                                                          [LclId] =
                                                              CCCS (,)! [sat_sb0yR sat_sb0yT];
                                                        } in  (#,#) [s'_sb0yQ sat_sb0yU];
                                                  };
                                            };
                                        -1# ->
                                            case touch# [ww3_sb0yB ipv_sb0yL] of s'_sb0yV {
                                              __DEFAULT ->
                                                  let {
                                                    sat_sb0yW [Occ=Once]
                                                      :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                                    [LclId] =
                                                        CCCS GHC.IO.Buffer.Buffer! [ww2_sb0yA
                                                                                    ww3_sb0yB
                                                                                    ww4_sb0yC
                                                                                    ww5_sb0yD
                                                                                    ww6_sb0yE
                                                                                    ww7_sb0yF]; } in
                                                  let {
                                                    sat_sb0yX [Occ=Once]
                                                      :: (GHC.Base.Maybe GHC.Types.Int,
                                                          GHC.IO.Buffer.Buffer GHC.Word.Word8)
                                                    [LclId] =
                                                        CCCS (,)! [GHC.Base.Nothing sat_sb0yW];
                                                  } in  (#,#) [s'_sb0yV sat_sb0yX];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.FD.$fBufferedIOFD7 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Base.Maybe GHC.Types.Int,
            GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,1*U)><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0yY w1_sb0yZ w2_sb0z0]
        case w_sb0yY of {
          GHC.IO.FD.FD ww1_sb0z2 [Occ=Once] ww2_sb0z3 [Occ=Once] ->
              case w1_sb0yZ of {
                GHC.IO.Buffer.Buffer ww4_sb0z5 [Occ=Once]
                                     ww5_sb0z6 [Occ=Once]
                                     ww6_sb0z7 [Occ=Once]
                                     ww7_sb0z8 [Occ=Once]
                                     ww8_sb0z9 [Occ=Once]
                                     ww9_sb0za [Occ=Once] ->
                    GHC.IO.FD.$w$cfillReadBuffer0
                        ww1_sb0z2
                        ww2_sb0z3
                        ww4_sb0z5
                        ww5_sb0z6
                        ww6_sb0z7
                        ww7_sb0z8
                        ww8_sb0z9
                        ww9_sb0za
                        w2_sb0z0;
              };
        };

GHC.IO.FD.$w$cflushWriteBuffer0 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=9,
 Str=<S,U><S,1*U><S,U><L,U><L,U><L,U><S,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sb0zb
           ww1_sb0zc
           ww2_sb0zd
           ww3_sb0ze
           ww4_sb0zf
           ww5_sb0zg
           ww6_sb0zh
           ww7_sb0zi
           w_sb0zj]
        case -# [ww7_sb0zi ww6_sb0zh] of sat_sb0zl {
          __DEFAULT ->
              case plusAddr# [ww2_sb0zd ww6_sb0zh] of sat_sb0zk {
                __DEFAULT ->
                    case
                        GHC.IO.FD.$w$cwriteNonBlocking
                            ww_sb0zb ww1_sb0zc sat_sb0zk sat_sb0zl w_sb0zj
                    of
                    { (#,#) ipv_sb0zn [Occ=Once] ipv1_sb0zo ->
                          case touch# [ww3_sb0ze ipv_sb0zn] of s'_sb0zp {
                            __DEFAULT ->
                                let {
                                  sat_sb0zu [Occ=Once] :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                  [LclId] =
                                      [ww2_sb0zd
                                       ww3_sb0ze
                                       ww4_sb0zf
                                       ww5_sb0zg
                                       ww6_sb0zh
                                       ww7_sb0zi
                                       ipv1_sb0zo] \u []
                                          case ipv1_sb0zo of {
                                            GHC.Types.I# y_sb0zr [Occ=Once] ->
                                                case +# [ww6_sb0zh y_sb0zr] of x_sb0zs [Dmd=<S,U>] {
                                                  __DEFAULT ->
                                                      case ==# [x_sb0zs ww7_sb0zi] of {
                                                        __DEFAULT ->
                                                            GHC.IO.Buffer.Buffer [ww2_sb0zd
                                                                                  ww3_sb0ze
                                                                                  ww4_sb0zf
                                                                                  ww5_sb0zg
                                                                                  x_sb0zs
                                                                                  ww7_sb0zi];
                                                        1# ->
                                                            GHC.IO.Buffer.Buffer [ww2_sb0zd
                                                                                  ww3_sb0ze
                                                                                  ww4_sb0zf
                                                                                  ww5_sb0zg
                                                                                  0#
                                                                                  0#];
                                                      };
                                                };
                                          }; } in
                                let {
                                  sat_sb0zv [Occ=Once]
                                    :: (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8)
                                  [LclId] =
                                      CCCS (,)! [ipv1_sb0zo sat_sb0zu];
                                } in  (#,#) [s'_sb0zp sat_sb0zv];
                          };
                    };
              };
        };

GHC.IO.FD.$fBufferedIOFD1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,1*U)><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0zw w1_sb0zx w2_sb0zy]
        case w_sb0zw of {
          GHC.IO.FD.FD ww1_sb0zA [Occ=Once] ww2_sb0zB [Occ=Once] ->
              case w1_sb0zx of {
                GHC.IO.Buffer.Buffer ww4_sb0zD [Occ=Once]
                                     ww5_sb0zE [Occ=Once]
                                     ww6_sb0zF [Occ=Once]
                                     ww7_sb0zG [Occ=Once]
                                     ww8_sb0zH [Occ=Once]
                                     ww9_sb0zI [Occ=Once] ->
                    GHC.IO.FD.$w$cflushWriteBuffer0
                        ww1_sb0zA
                        ww2_sb0zB
                        ww4_sb0zD
                        ww5_sb0zE
                        ww6_sb0zF
                        ww7_sb0zG
                        ww8_sb0zH
                        ww9_sb0zI
                        w2_sb0zy;
              };
        };

GHC.IO.FD.$fIODeviceFD21
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [fd_sb0zJ s_sb0zK]
        case fd_sb0zJ of {
          GHC.IO.FD.FD dt_sb0zM [Occ=Once] _ [Occ=Dead] ->
              case __pkg_ccall base-4.11.0.0 [dt_sb0zM s_sb0zK] of {
                (#,#) ds4_sb0zQ [Occ=Once] ds5_sb0zR [Occ=Once] ->
                    let {
                      sat_sb0zT [Occ=Once] :: GHC.Types.Bool
                      [LclId] =
                          [ds5_sb0zR] \u []
                              case narrow32Int# [ds5_sb0zR] of {
                                __DEFAULT -> GHC.Types.True [];
                                0# -> GHC.Types.False [];
                              };
                    } in  (#,#) [ds4_sb0zQ sat_sb0zT];
              };
        };

GHC.IO.FD.$fIODeviceFD25 :: Foreign.C.Types.CInt -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [ds1_sb0zU]
        case ds1_sb0zU of {
          GHC.Int.I32# x_sb0zW [Occ=Once!] ->
              case x_sb0zW of {
                __DEFAULT -> GHC.Types.False [];
                -1# -> GHC.Types.True [];
              };
        };

GHC.IO.FD.$fIODeviceFD29 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.ready"#;

GHC.IO.FD.$fIODeviceFD28 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fIODeviceFD29;

GHC.IO.FD.$w$cready [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId, Arity=4, Str=<S,U><S,1*U><S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_sb0zY w_sb0zZ ww1_sb0A0 w1_sb0A1]
        let-no-escape {
          $j_sb0A2 [Occ=Once*!T[1], Dmd=<C(S),1*C1(U(U,U))>]
            :: GHC.Prim.Int#
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
          [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
              sat-only [ww_sb0zY ww1_sb0A0 w1_sb0A1] \r [i_sb0A3]
                  let {
                    sat_sb0Ad [Occ=Once] :: GHC.Types.IO Foreign.C.Types.CInt
                    [LclId] =
                        [ww_sb0zY ww1_sb0A0 i_sb0A3] \r [ds_sb0A4]
                            case int2Word# [i_sb0A3] of sat_sb0A6 {
                              __DEFAULT ->
                                  case narrow8Word# [sat_sb0A6] of sat_sb0A7 {
                                    __DEFAULT ->
                                        case
                                            __pkg_ccall_GC base-4.11.0.0 [ww_sb0zY
                                                                          sat_sb0A7
                                                                          ww1_sb0A0
                                                                          0##
                                                                          ds_sb0A4]
                                        of
                                        { (#,#) ds1_sb0A9 [Occ=Once] ds2_sb0Aa [Occ=Once] ->
                                              case narrow32Int# [ds2_sb0Aa] of sat_sb0Ab {
                                                __DEFAULT ->
                                                    let {
                                                      sat_sb0Ac [Occ=Once] :: GHC.Int.Int32
                                                      [LclId] =
                                                          CCCS GHC.Int.I32#! [sat_sb0Ab];
                                                    } in  (#,#) [ds1_sb0A9 sat_sb0Ac];
                                              };
                                        };
                                  };
                            };
                  } in 
                    case
                        Foreign.C.Error.throwErrnoIfMinus1Retry2
                            GHC.IO.FD.$fIODeviceFD25
                            GHC.IO.FD.$fIODeviceFD28
                            sat_sb0Ad
                            w1_sb0A1
                    of
                    { (#,#) ipv_sb0Af [Occ=Once] ipv1_sb0Ag [Occ=Once] ->
                          let {
                            sat_sb0Ak [Occ=Once] :: GHC.Types.Bool
                            [LclId] =
                                [ipv1_sb0Ag] \u []
                                    case ipv1_sb0Ag of {
                                      GHC.Int.I32# x#_sb0Ai [Occ=Once!] ->
                                          case x#_sb0Ai of {
                                            __DEFAULT -> GHC.Enum.$fEnumBool1;
                                            0# -> GHC.Types.False [];
                                            1# -> GHC.Types.True [];
                                          };
                                    };
                          } in  (#,#) [ipv_sb0Af sat_sb0Ak];
                    };
        } in 
          case w_sb0zZ of {
            GHC.Types.False -> $j_sb0A2 0#;
            GHC.Types.True -> $j_sb0A2 1#;
          };

GHC.IO.FD.$fIODeviceFD27 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Types.Bool
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=4,
 Str=<S(SL),1*U(U,A)><S,1*U><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0Am w1_sb0An w2_sb0Ao w3_sb0Ap]
        case w_sb0Am of {
          GHC.IO.FD.FD ww1_sb0Ar [Occ=Once] _ [Occ=Dead] ->
              case w2_sb0Ao of {
                GHC.Types.I# ww4_sb0Au [Occ=Once] ->
                    GHC.IO.FD.$w$cready ww1_sb0Ar w1_sb0An ww4_sb0Au w3_sb0Ap;
              };
        };

GHC.IO.FD.setNonBlockingMode1
  :: GHC.IO.FD.FD
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FD.FD #)
[GblId, Arity=3, Str=<S(SL),1*U(U,A)><L,U><S,U>, Unf=OtherCon []] =
    [] \r [fd_sb0Av set_sb0Aw s_sb0Ax]
        case fd_sb0Av of {
          GHC.IO.FD.FD dt_sb0Az _ [Occ=Dead] ->
              case
                  System.Posix.Internals.$wsetNonBlockingFD
                      dt_sb0Az set_sb0Aw s_sb0Ax
              of
              { (#,#) ipv_sb0AC [Occ=Once] _ [Occ=Dead] ->
                    let {
                      sat_sb0AF [Occ=Once] :: GHC.IO.FD.FD
                      [LclId] =
                          [set_sb0Aw dt_sb0Az] \u []
                              case set_sb0Aw of {
                                GHC.Types.False -> GHC.IO.FD.FD [dt_sb0Az 0#];
                                GHC.Types.True -> GHC.IO.FD.FD [dt_sb0Az 1#];
                              };
                    } in  (#,#) [ipv_sb0AC sat_sb0AF];
              };
        };

GHC.IO.FD.setNonBlockingMode
  :: GHC.IO.FD.FD -> GHC.Types.Bool -> GHC.Types.IO GHC.IO.FD.FD
[GblId, Arity=3, Str=<S(SL),1*U(U,A)><L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.IO.FD.setNonBlockingMode1 eta_B3 eta_B2 eta_B1;

lvl5_raWVb :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.dup2"#;

lvl6_raWVc :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl5_raWVb;

GHC.IO.FD.$fIODeviceFD2
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [ds2_sb0AG ds3_sb0AH]
        case narrow32Int# [ds3_sb0AH] of sat_sb0AI {
          __DEFAULT -> Foreign.C.Error.$wlvl lvl6_raWVc sat_sb0AI ds2_sb0AG;
        };

GHC.IO.FD.$w$cdup2 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FD.FD #)
[GblId, Arity=4, Str=<S,U><L,U><S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_sb0AJ ww1_sb0AK ww2_sb0AL w_sb0AM]
        case __pkg_ccall base-4.11.0.0 [ww_sb0AJ ww2_sb0AL w_sb0AM] of {
          (#,#) ds7_sb0AP [Occ=Once*] ds8_sb0AQ [Occ=Once] ->
              case narrow32Int# [ds8_sb0AQ] of {
                __DEFAULT ->
                    let {
                      sat_sb0AS [Occ=Once] :: GHC.IO.FD.FD
                      [LclId] =
                          CCCS GHC.IO.FD.FD! [ww2_sb0AL ww1_sb0AK];
                    } in  (#,#) [ds7_sb0AP sat_sb0AS];
                -1# ->
                    case __pkg_ccall base-4.11.0.0 [ds7_sb0AP] of {
                      (#,#) ds2_sb0AV [Occ=Once] ds3_sb0AW [Occ=Once] ->
                          GHC.IO.FD.$fIODeviceFD2 ds2_sb0AV ds3_sb0AW;
                    };
              };
        };

GHC.IO.FD.$fIODeviceFD1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FD.FD #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,U)><S(SL),1*U(U,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0AY w1_sb0AZ w2_sb0B0]
        case w_sb0AY of {
          GHC.IO.FD.FD ww1_sb0B2 [Occ=Once] ww2_sb0B3 [Occ=Once] ->
              case w1_sb0AZ of {
                GHC.IO.FD.FD ww4_sb0B5 [Occ=Once] _ [Occ=Dead] ->
                    GHC.IO.FD.$w$cdup2 ww1_sb0B2 ww2_sb0B3 ww4_sb0B5 w2_sb0B0;
              };
        };

GHC.IO.FD.$fIODeviceFD5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.dup"#;

GHC.IO.FD.$fIODeviceFD4 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fIODeviceFD5;

GHC.IO.FD.$w$cdup [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FD.FD #)
[GblId, Arity=3, Str=<S,U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_sb0B7 ww1_sb0B8 w_sb0B9]
        case __pkg_ccall base-4.11.0.0 [ww_sb0B7 w_sb0B9] of {
          (#,#) ds4_sb0Bc [Occ=Once*] ds5_sb0Bd [Occ=Once] ->
              case narrow32Int# [ds5_sb0Bd] of wild1_sb0Be {
                __DEFAULT ->
                    let {
                      sat_sb0Bf [Occ=Once] :: GHC.IO.FD.FD
                      [LclId] =
                          CCCS GHC.IO.FD.FD! [wild1_sb0Be ww1_sb0B8];
                    } in  (#,#) [ds4_sb0Bc sat_sb0Bf];
                -1# ->
                    case
                        Foreign.C.Error.throwErrno1 GHC.IO.FD.$fIODeviceFD4 ds4_sb0Bc
                    of
                    { (#,#) ipv_sb0Bh [Occ=Once] ipv1_sb0Bi [Occ=Once] ->
                          let {
                            sat_sb0Bl [Occ=Once] :: GHC.IO.FD.FD
                            [LclId] =
                                [ww1_sb0B8 ipv1_sb0Bi] \u []
                                    case ipv1_sb0Bi of {
                                      GHC.Int.I32# dt1_sb0Bk [Occ=Once] ->
                                          GHC.IO.FD.FD [dt1_sb0Bk ww1_sb0B8];
                                    };
                          } in  (#,#) [ipv_sb0Bh sat_sb0Bl];
                    };
              };
        };

GHC.IO.FD.$fIODeviceFD3 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FD.FD #)
[GblId, Arity=2, Str=<S(SS),1*U(U,U)><S,U>, Unf=OtherCon []] =
    [] \r [w_sb0Bm w1_sb0Bn]
        case w_sb0Bm of {
          GHC.IO.FD.FD ww1_sb0Bp [Occ=Once] ww2_sb0Bq [Occ=Once] ->
              GHC.IO.FD.$w$cdup ww1_sb0Bp ww2_sb0Bq w1_sb0Bn;
        };

GHC.IO.FD.$fIODeviceFD6
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Device.IODeviceType #)
[GblId, Arity=2, Str=<L,1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [fd_sb0Br s_sb0Bs]
        let {
          sat_sb0Bw [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_sb0Br] \s []
                  case fd_sb0Br of {
                    GHC.IO.FD.FD dt_sb0Bu [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_sb0Bu];
                  };
        } in 
          case System.Posix.Internals.fdStat1 sat_sb0Bw s_sb0Bs of {
            (#,#) ipv_sb0By [Occ=Once] ipv1_sb0Bz [Occ=Once!] ->
                case ipv1_sb0Bz of {
                  (,,) ty_sb0BB [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                      (#,#) [ipv_sb0By ty_sb0BB];
                };
          };

GHC.IO.FD.$fIODeviceFD20
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId, Arity=2, Str=<L,1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [fd_sb0BE s_sb0BF]
        let {
          sat_sb0BJ [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_sb0BE] \s []
                  case fd_sb0BE of {
                    GHC.IO.FD.FD dt_sb0BH [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_sb0BH];
                  };
        } in 
          case System.Posix.Internals.fdStat1 sat_sb0BJ s_sb0BF of {
            (#,#) ipv_sb0BL [Occ=Once] ipv1_sb0BM [Occ=Once!] ->
                case ipv1_sb0BM of {
                  (,,) ty_sb0BO [Occ=Once!] _ [Occ=Dead] _ [Occ=Dead] ->
                      let {
                        sat_sb0BS [Occ=Once] :: GHC.Types.Bool
                        [LclId] =
                            [ty_sb0BO] \u []
                                case ty_sb0BO of {
                                  __DEFAULT -> GHC.Types.False [];
                                  GHC.IO.Device.RegularFile -> GHC.Types.True [];
                                  GHC.IO.Device.RawDevice -> GHC.Types.True [];
                                };
                      } in  (#,#) [ipv_sb0BL sat_sb0BS];
                };
          };

GHC.IO.FD.release1
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [fd_sb0BT s_sb0BU]
        case fd_sb0BT of {
          GHC.IO.FD.FD dt_sb0BW [Occ=Once] _ [Occ=Dead] ->
              case __pkg_ccall base-4.11.0.0 [dt_sb0BW s_sb0BU] of {
                (#,#) ds_sb0C0 [Occ=Once] _ [Occ=Dead] ->
                    (#,#) [ds_sb0C0 GHC.Tuple.()];
              };
        };

GHC.IO.FD.release :: GHC.IO.FD.FD -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.IO.FD.release1 eta_B2 eta_B1;

GHC.IO.FD.$fIODeviceFD24 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.close"#;

GHC.IO.FD.$fIODeviceFD23 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fIODeviceFD24;

GHC.IO.FD.$wclose [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_sb0C2 w_sb0C3]
        let {
          sat_sb0Cc [Occ=Once] :: GHC.Types.IO Foreign.C.Types.CInt
          [LclId] =
              [ww_sb0C2] \r [ds3_sb0C4]
                  case narrow32Int# [ww_sb0C2] of sat_sb0C6 {
                    __DEFAULT ->
                        case __pkg_ccall base-4.11.0.0 [sat_sb0C6 ds3_sb0C4] of {
                          (#,#) ds4_sb0C8 [Occ=Once] ds5_sb0C9 [Occ=Once] ->
                              case narrow32Int# [ds5_sb0C9] of sat_sb0Ca {
                                __DEFAULT ->
                                    let {
                                      sat_sb0Cb [Occ=Once] :: GHC.Int.Int32
                                      [LclId] =
                                          CCCS GHC.Int.I32#! [sat_sb0Ca];
                                    } in  (#,#) [ds4_sb0C8 sat_sb0Cb];
                              };
                        };
                  };
        } in 
          case
              Foreign.C.Error.throwErrnoIfMinus1Retry2
                  GHC.IO.FD.$fIODeviceFD25 GHC.IO.FD.$fIODeviceFD23 sat_sb0Cc w_sb0C3
          of
          { (#,#) ipv_sb0Ce [Occ=Once] _ [Occ=Dead] ->
                (#,#) [ipv_sb0Ce GHC.Tuple.()];
          };

GHC.IO.FD.$fIODeviceFD26 [InlPrag=NOUSERINLINE[0]]
  :: System.Posix.Types.Fd
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [w_sb0Cg w1_sb0Ch]
        case w_sb0Cg of {
          GHC.Int.I32# ww1_sb0Cj [Occ=Once] ->
              GHC.IO.FD.$wclose ww1_sb0Cj w1_sb0Ch;
        };

GHC.IO.FD.$w$cclose [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_sb0Ck w_sb0Cl]
        case __pkg_ccall base-4.11.0.0 [ww_sb0Ck w_sb0Cl] of {
          (#,#) ds_sb0Co [Occ=Once*] _ [Occ=Dead] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds3_sb0Ct [Occ=Once!] ->
                    case ds3_sb0Ct of {
                      __DEFAULT ->
                          case narrow32Int# [ww_sb0Ck] of sat_sb0Cv {
                            __DEFAULT ->
                                let {
                                  sat_sb0Cw [Occ=Once] :: System.Posix.Types.Fd
                                  [LclId] =
                                      CCCS GHC.Int.I32#! [sat_sb0Cv];
                                } in 
                                  GHC.Event.Thread.closeFdWith1
                                      GHC.IO.FD.$fIODeviceFD26 sat_sb0Cw ds_sb0Co;
                          };
                      0# ->
                          let {
                            sat_sb0CF [Occ=Once] :: GHC.Types.IO Foreign.C.Types.CInt
                            [LclId] =
                                [ww_sb0Ck] \r [ds4_sb0Cx]
                                    case narrow32Int# [ww_sb0Ck] of sat_sb0Cz {
                                      __DEFAULT ->
                                          case __pkg_ccall base-4.11.0.0 [sat_sb0Cz ds4_sb0Cx] of {
                                            (#,#) ds5_sb0CB [Occ=Once] ds6_sb0CC [Occ=Once] ->
                                                case narrow32Int# [ds6_sb0CC] of sat_sb0CD {
                                                  __DEFAULT ->
                                                      let {
                                                        sat_sb0CE [Occ=Once] :: GHC.Int.Int32
                                                        [LclId] =
                                                            CCCS GHC.Int.I32#! [sat_sb0CD];
                                                      } in  (#,#) [ds5_sb0CB sat_sb0CE];
                                                };
                                          };
                                    };
                          } in 
                            case
                                Foreign.C.Error.throwErrnoIfMinus1Retry2
                                    GHC.IO.FD.$fIODeviceFD25
                                    GHC.IO.FD.$fIODeviceFD23
                                    sat_sb0CF
                                    ds_sb0Co
                            of
                            { (#,#) ipv_sb0CH [Occ=Once] _ [Occ=Dead] ->
                                  (#,#) [ipv_sb0CH GHC.Tuple.()];
                            };
                    };
              };
        };

GHC.IO.FD.$fIODeviceFD22 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Str=<S(SL),1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [w_sb0CJ w1_sb0CK]
        case w_sb0CJ of {
          GHC.IO.FD.FD ww1_sb0CM [Occ=Once] _ [Occ=Dead] ->
              GHC.IO.FD.$w$cclose ww1_sb0CM w1_sb0CK;
        };

GHC.IO.FD.$fIODeviceFD [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.IO.Device.IODevice GHC.IO.FD.FD
[GblId[DFunId]] =
    CCS_DONT_CARE GHC.IO.Device.C:IODevice! [GHC.IO.FD.$fIODeviceFD27
                                             GHC.IO.FD.$fIODeviceFD22
                                             GHC.IO.FD.$fIODeviceFD21
                                             GHC.IO.FD.$fIODeviceFD20
                                             GHC.IO.FD.$fIODeviceFD17
                                             GHC.IO.FD.$fIODeviceFD13
                                             GHC.IO.FD.$fIODeviceFD12
                                             GHC.IO.FD.$fIODeviceFD10
                                             GHC.IO.FD.$fIODeviceFD9
                                             GHC.IO.FD.$fIODeviceFD8
                                             GHC.IO.FD.$fIODeviceFD7
                                             GHC.IO.FD.$fIODeviceFD6
                                             GHC.IO.FD.$fIODeviceFD3
                                             GHC.IO.FD.$fIODeviceFD1];

GHC.IO.FD.mkFD7 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "openFile"#;

GHC.IO.FD.mkFD6 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.mkFD7;

GHC.IO.FD.mkFD11 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "is a directory"#;

GHC.IO.FD.mkFD10 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.mkFD11;

GHC.IO.FD.mkFD9 :: GHC.IO.Exception.IOException
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Exception.IOError! [GHC.Base.Nothing
                                             GHC.IO.Exception.InappropriateType
                                             GHC.IO.FD.mkFD6
                                             GHC.IO.FD.mkFD10
                                             GHC.Base.Nothing
                                             GHC.Base.Nothing];

GHC.IO.FD.mkFD8 :: GHC.Exception.SomeException
[GblId] =
    [] \u []
        GHC.IO.Exception.$fExceptionIOException_$ctoException
            GHC.IO.FD.mkFD9;

GHC.IO.FD.mkFD5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "file is locked"#;

GHC.IO.FD.mkFD4 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.mkFD5;

GHC.IO.FD.mkFD3 :: GHC.IO.Exception.IOException
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Exception.IOError! [GHC.Base.Nothing
                                             GHC.IO.Exception.ResourceBusy
                                             GHC.IO.FD.mkFD6
                                             GHC.IO.FD.mkFD4
                                             GHC.Base.Nothing
                                             GHC.Base.Nothing];

GHC.IO.FD.mkFD2 :: GHC.Exception.SomeException
[GblId] =
    [] \u []
        GHC.IO.Exception.$fExceptionIOException_$ctoException
            GHC.IO.FD.mkFD3;

GHC.IO.FD.$wmkFD [InlPrag=NOUSERINLINE[0]]
  :: Foreign.C.Types.CInt
     -> GHC.IO.IOMode.IOMode
     -> GHC.Base.Maybe
          (GHC.IO.Device.IODeviceType, System.Posix.Types.CDev,
           System.Posix.Types.CIno)
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
[GblId,
 Arity=5,
 Str=<L,U(U)><L,1*U><S,1*U><L,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0CO w1_sb0CP w2_sb0CQ w3_sb0CR w4_sb0CS]
        let-no-escape {
          $w$j_sb0CT [InlPrag=NOUSERINLINE[0],
                      Occ=Once*!T[4],
                      Dmd=<L,1*C1(C1(C1(C1(U(U,U)))))>]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> GHC.IO.Device.IODeviceType
               -> System.Posix.Types.CDev
               -> System.Posix.Types.CIno
               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                     (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
          [LclId[JoinId(4)],
           Arity=4,
           Str=<S,U><S,1*U><L,1*U(U)><L,1*U(U)>,
           Unf=OtherCon []] =
              sat-only [w_sb0CO w1_sb0CP w3_sb0CR] \r [w5_sb0CU
                                                       ww_sb0CV
                                                       ww1_sb0CW
                                                       ww2_sb0CX]
                  case ww_sb0CV of wild_sb0CY {
                    __DEFAULT ->
                        let {
                          sat_sb0D2 [Occ=Once] :: GHC.IO.FD.FD
                          [LclId] =
                              [w_sb0CO w3_sb0CR] \u []
                                  case w_sb0CO of {
                                    GHC.Int.I32# dt1_sb0D0 [Occ=Once*] ->
                                        case w3_sb0CR of {
                                          GHC.Types.False -> GHC.IO.FD.FD [dt1_sb0D0 0#];
                                          GHC.Types.True -> GHC.IO.FD.FD [dt1_sb0D0 1#];
                                        };
                                  }; } in
                        let {
                          sat_sb0D3 [Occ=Once] :: (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType)
                          [LclId] =
                              CCCS (,)! [sat_sb0D2 wild_sb0CY];
                        } in  (#,#) [w5_sb0CU sat_sb0D3];
                    GHC.IO.Device.Directory -> raiseIO# [GHC.IO.FD.mkFD8 w5_sb0CU];
                    GHC.IO.Device.RegularFile ->
                        case w_sb0CO of {
                          GHC.Int.I32# ds1_sb0D6 ->
                              case ww1_sb0CW of {
                                GHC.Word.W64# x#_sb0D8 ->
                                    case word2Int# [x#_sb0D8] of i#_sb0D9 [Dmd=<S,U>] {
                                      __DEFAULT ->
                                          let-no-escape {
                                            $j_sb0Da [Occ=Once*!T[1], Dmd=<C(S),1*C1(U(U,U))>]
                                              :: GHC.Prim.Word#
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
                                            [LclId[JoinId(1)],
                                             Arity=1,
                                             Str=<S,U>,
                                             Unf=OtherCon []] =
                                                sat-only [w1_sb0CP
                                                          w3_sb0CR
                                                          w5_sb0CU
                                                          ww2_sb0CX
                                                          ds1_sb0D6] \r [wild2_sb0Db]
                                                    case ww2_sb0CX of {
                                                      GHC.Word.W64# x#1_sb0Dd ->
                                                          case
                                                              word2Int# [x#1_sb0Dd]
                                                          of
                                                          i#1_sb0De [Dmd=<S,U>]
                                                          { __DEFAULT ->
                                                                let-no-escape {
                                                                  $j1_sb0Df [Occ=Once*!T[1],
                                                                             Dmd=<C(S),1*C1(U(U,U))>]
                                                                    :: GHC.Prim.Word#
                                                                       -> (# GHC.Prim.State#
                                                                               GHC.Prim.RealWorld,
                                                                             (GHC.IO.FD.FD,
                                                                              GHC.IO.Device.IODeviceType) #)
                                                                  [LclId[JoinId(1)],
                                                                   Arity=1,
                                                                   Str=<S,U>,
                                                                   Unf=OtherCon []] =
                                                                      sat-only [w1_sb0CP
                                                                                w3_sb0CR
                                                                                w5_sb0CU
                                                                                ds1_sb0D6
                                                                                wild2_sb0Db] \r [wild4_sb0Dg]
                                                                          let-no-escape {
                                                                            $j2_sb0Dh [Occ=Once*!T[1],
                                                                                       Dmd=<C(S),1*C1(U(U,U))>]
                                                                              :: GHC.Prim.Int#
                                                                                 -> (# GHC.Prim.State#
                                                                                         GHC.Prim.RealWorld,
                                                                                       (GHC.IO.FD.FD,
                                                                                        GHC.IO.Device.IODeviceType) #)
                                                                            [LclId[JoinId(1)],
                                                                             Arity=1,
                                                                             Str=<S,U>,
                                                                             Unf=OtherCon []] =
                                                                                sat-only [w3_sb0CR
                                                                                          w5_sb0CU
                                                                                          ds1_sb0D6
                                                                                          wild2_sb0Db
                                                                                          wild4_sb0Dg] \r [ds2_sb0Di]
                                                                                    case
                                                                                        __pkg_ccall base-4.11.0.0 [ds1_sb0D6
                                                                                                                   wild2_sb0Db
                                                                                                                   wild4_sb0Dg
                                                                                                                   ds2_sb0Di
                                                                                                                   w5_sb0CU]
                                                                                    of
                                                                                    { (#,#) ds3_sb0Dl [Occ=Once*]
                                                                                            ds4_sb0Dm [Occ=Once] ->
                                                                                          case
                                                                                              narrow32Int# [ds4_sb0Dm]
                                                                                          of
                                                                                          { __DEFAULT ->
                                                                                                let {
                                                                                                  sat_sb0Dp [Occ=Once]
                                                                                                    :: GHC.IO.FD.FD
                                                                                                  [LclId] =
                                                                                                      [w3_sb0CR
                                                                                                       ds1_sb0D6] \u []
                                                                                                          case
                                                                                                              w3_sb0CR
                                                                                                          of
                                                                                                          { GHC.Types.False ->
                                                                                                                GHC.IO.FD.FD [ds1_sb0D6
                                                                                                                              0#];
                                                                                                            GHC.Types.True ->
                                                                                                                GHC.IO.FD.FD [ds1_sb0D6
                                                                                                                              1#];
                                                                                                          }; } in
                                                                                                let {
                                                                                                  sat_sb0Dq [Occ=Once]
                                                                                                    :: (GHC.IO.FD.FD,
                                                                                                        GHC.IO.Device.IODeviceType)
                                                                                                  [LclId] =
                                                                                                      CCCS (,)! [sat_sb0Dp
                                                                                                                 GHC.IO.Device.RegularFile];
                                                                                                } in 
                                                                                                  (#,#) [ds3_sb0Dl
                                                                                                         sat_sb0Dq];
                                                                                            -1# ->
                                                                                                raiseIO# [GHC.IO.FD.mkFD2
                                                                                                          ds3_sb0Dl];
                                                                                          };
                                                                                    };
                                                                          } in 
                                                                            case w1_sb0CP of {
                                                                              __DEFAULT ->
                                                                                  $j2_sb0Dh 1#;
                                                                              GHC.IO.IOMode.ReadMode ->
                                                                                  $j2_sb0Dh 0#;
                                                                            };
                                                                } in 
                                                                  case >=# [i#1_sb0De 0#] of {
                                                                    __DEFAULT ->
                                                                        $j1_sb0Df x#1_sb0Dd;
                                                                    1# ->
                                                                        case
                                                                            int2Word# [i#1_sb0De]
                                                                        of
                                                                        sat_sb0Du
                                                                        { __DEFAULT ->
                                                                              $j1_sb0Df sat_sb0Du;
                                                                        };
                                                                  };
                                                          };
                                                    };
                                          } in 
                                            case >=# [i#_sb0D9 0#] of {
                                              __DEFAULT -> $j_sb0Da x#_sb0D8;
                                              1# ->
                                                  case int2Word# [i#_sb0D9] of sat_sb0Dw {
                                                    __DEFAULT -> $j_sb0Da sat_sb0Dw;
                                                  };
                                            };
                                    };
                              };
                        };
                  };
        } in 
          case w2_sb0CQ of {
            GHC.Base.Nothing ->
                case System.Posix.Internals.fdStat1 w_sb0CO w4_sb0CS of {
                  (#,#) ipv_sb0Dz [Occ=Once] ipv1_sb0DA [Occ=Once!] ->
                      case ipv1_sb0DA of {
                        (,,) ww1_sb0DC [Occ=Once]
                             ww2_sb0DD [Occ=Once]
                             ww3_sb0DE [Occ=Once] ->
                            $w$j_sb0CT ipv_sb0Dz ww1_sb0DC ww2_sb0DD ww3_sb0DE;
                      };
                };
            GHC.Base.Just stat_sb0DF [Occ=Once!] ->
                case stat_sb0DF of {
                  (,,) ww1_sb0DH [Occ=Once]
                       ww2_sb0DI [Occ=Once]
                       ww3_sb0DJ [Occ=Once] ->
                      $w$j_sb0CT w4_sb0CS ww1_sb0DH ww2_sb0DI ww3_sb0DJ;
                };
          };

GHC.IO.FD.mkFD1 [InlPrag=NOUSERINLINE[0]]
  :: Foreign.C.Types.CInt
     -> GHC.IO.IOMode.IOMode
     -> GHC.Base.Maybe
          (GHC.IO.Device.IODeviceType, System.Posix.Types.CDev,
           System.Posix.Types.CIno)
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
[GblId,
 Arity=6,
 Str=<L,U(U)><L,1*U><S,1*U><L,A><L,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0DK w1_sb0DL w2_sb0DM w3_sb0DN w4_sb0DO w5_sb0DP]
        GHC.IO.FD.$wmkFD w_sb0DK w1_sb0DL w2_sb0DM w4_sb0DO w5_sb0DP;

GHC.IO.FD.mkFD
  :: Foreign.C.Types.CInt
     -> GHC.IO.IOMode.IOMode
     -> GHC.Base.Maybe
          (GHC.IO.Device.IODeviceType, System.Posix.Types.CDev,
           System.Posix.Types.CIno)
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.Types.IO (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType)
[GblId,
 Arity=6,
 Str=<L,U(U)><L,1*U><S,1*U><L,A><L,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.FD.mkFD1 eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.FD.openFile1
  :: GHC.IO.FilePath
     -> GHC.IO.IOMode.IOMode
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
[GblId, Arity=4, Str=<L,U><L,U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [filepath_sb0DQ iomode_sb0DR non_blocking_sb0DS s_sb0DT]
        case GHC.IO.Encoding.getFileSystemEncoding s_sb0DT of {
          (#,#) ipv_sb0DV [Occ=Once] ipv1_sb0DW [Occ=Once] ->
              let {
                sat_sb0FI [Occ=Once]
                  :: GHC.Foreign.CString
                     -> GHC.Types.IO (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType)
                [LclId] =
                    [iomode_sb0DR non_blocking_sb0DS] \r [f_sb0DX eta_sb0DY]
                        case f_sb0DX of {
                          GHC.Ptr.Ptr ds4_sb0E0 [Occ=Once] ->
                              let-no-escape {
                                $j_sb0E1 [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                                  :: GHC.Prim.Int#
                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                           (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
                                [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                    sat-only [iomode_sb0DR
                                              non_blocking_sb0DS
                                              eta_sb0DY
                                              ds4_sb0E0] \r [ds6_sb0E2]
                                        let {
                                          sat_sb0Ea [Occ=Once] :: GHC.Types.IO Foreign.C.Types.CInt
                                          [LclId] =
                                              [ds4_sb0E0 ds6_sb0E2] \r [ds9_sb0E3]
                                                  case
                                                      __pkg_ccall_GC base-4.11.0.0 [ds4_sb0E0
                                                                                    ds6_sb0E2
                                                                                    438##
                                                                                    ds9_sb0E3]
                                                  of
                                                  { (#,#) ds10_sb0E6 [Occ=Once]
                                                          ds11_sb0E7 [Occ=Once] ->
                                                        case
                                                            narrow32Int# [ds11_sb0E7]
                                                        of
                                                        sat_sb0E8
                                                        { __DEFAULT ->
                                                              let {
                                                                sat_sb0E9 [Occ=Once]
                                                                  :: GHC.Int.Int32
                                                                [LclId] =
                                                                    CCCS GHC.Int.I32#! [sat_sb0E8];
                                                              } in  (#,#) [ds10_sb0E6 sat_sb0E9];
                                                        };
                                                  };
                                        } in 
                                          case
                                              Foreign.C.Error.throwErrnoIfMinus1Retry2
                                                  GHC.IO.FD.$fIODeviceFD25
                                                  GHC.IO.FD.mkFD6
                                                  sat_sb0Ea
                                                  eta_sb0DY
                                          of
                                          { (#,#) ipv2_sb0Ec [Occ=Once] ipv3_sb0Ed ->
                                                let {
                                                  sat_sb0Es [Occ=Once]
                                                    :: GHC.Exception.SomeException
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             (GHC.IO.FD.FD,
                                                              GHC.IO.Device.IODeviceType) #)
                                                  [LclId] =
                                                      [ipv3_sb0Ed] \r [ds9_sb0Eg]
                                                          case ds9_sb0Eg of {
                                                            GHC.Exception.SomeException $dException_sb0Ei [Occ=Once]
                                                                                        e1_sb0Ej [Occ=Once] ->
                                                                let {
                                                                  sat_sb0Er [Occ=OnceT[0]]
                                                                    :: GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                       -> (# GHC.Prim.State#
                                                                               GHC.Prim.RealWorld,
                                                                             (GHC.IO.FD.FD,
                                                                              GHC.IO.Device.IODeviceType) #)
                                                                  [LclId] =
                                                                      [ipv3_sb0Ed
                                                                       $dException_sb0Ei
                                                                       e1_sb0Ej] \r [s1_sb0Ek]
                                                                          case ipv3_sb0Ed of {
                                                                            GHC.Int.I32# ds11_sb0Em [Occ=Once] ->
                                                                                case
                                                                                    __pkg_ccall base-4.11.0.0 [ds11_sb0Em
                                                                                                               s1_sb0Ek]
                                                                                of
                                                                                { (#,#) ds12_sb0Ep [Occ=Once]
                                                                                        _ [Occ=Dead] ->
                                                                                      GHC.IO.throwIO1
                                                                                          $dException_sb0Ei
                                                                                          e1_sb0Ej
                                                                                          ds12_sb0Ep;
                                                                                };
                                                                          };
                                                                } in  sat_sb0Er;
                                                          }; } in
                                                let {
                                                  sat_sb0Ef [Occ=Once]
                                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             (GHC.IO.FD.FD,
                                                              GHC.IO.Device.IODeviceType) #)
                                                  [LclId] =
                                                      [iomode_sb0DR
                                                       non_blocking_sb0DS
                                                       ipv3_sb0Ed] \r [w_sb0Ee]
                                                          GHC.IO.FD.$wmkFD
                                                              ipv3_sb0Ed
                                                              iomode_sb0DR
                                                              GHC.Base.Nothing
                                                              non_blocking_sb0DS
                                                              w_sb0Ee;
                                                } in 
                                                  case
                                                      catch# [sat_sb0Ef sat_sb0Es ipv2_sb0Ec]
                                                  of
                                                  ds9_sb0Et
                                                  { (#,#) ipv4_sb0Eu [Occ=Once]
                                                          ipv5_sb0Ev [Occ=Once!] ->
                                                        case ipv5_sb0Ev of {
                                                          (,) fD_sb0Ex [Occ=Once!]
                                                              fd_type_sb0Ey [Occ=Once!] ->
                                                              case iomode_sb0DR of {
                                                                __DEFAULT -> ds9_sb0Et;
                                                                GHC.IO.IOMode.WriteMode ->
                                                                    case fd_type_sb0Ey of {
                                                                      __DEFAULT -> ds9_sb0Et;
                                                                      GHC.IO.Device.RegularFile ->
                                                                          case
                                                                              fD_sb0Ex
                                                                          of
                                                                          wild3_sb0EB
                                                                          { GHC.IO.FD.FD dt_sb0EC [Occ=Once]
                                                                                         _ [Occ=Dead] ->
                                                                                case
                                                                                    __pkg_ccall base-4.11.0.0 [dt_sb0EC
                                                                                                               0#
                                                                                                               ipv4_sb0Eu]
                                                                                of
                                                                                { (#,#) ds7_sb0EG [Occ=Once*]
                                                                                        ds8_sb0EH [Occ=Once] ->
                                                                                      case
                                                                                          narrow32Int# [ds8_sb0EH]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                __pkg_ccall base-4.11.0.0 [ds7_sb0EG]
                                                                                            of
                                                                                            { (#,#) ds_sb0EL [Occ=Once]
                                                                                                    ds10_sb0EM [Occ=Once] ->
                                                                                                  GHC.IO.FD.$fIODeviceFD11
                                                                                                      ds_sb0EL
                                                                                                      ds10_sb0EM;
                                                                                            };
                                                                                        0# ->
                                                                                            let {
                                                                                              sat_sb0EO [Occ=Once]
                                                                                                :: (GHC.IO.FD.FD,
                                                                                                    GHC.IO.Device.IODeviceType)
                                                                                              [LclId] =
                                                                                                  CCCS (,)! [wild3_sb0EB
                                                                                                             GHC.IO.Device.RegularFile];
                                                                                            } in 
                                                                                              (#,#) [ds7_sb0EG
                                                                                                     sat_sb0EO];
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                          };
                              } in 
                                case non_blocking_sb0DS of {
                                  GHC.Types.False ->
                                      case iomode_sb0DR of {
                                        GHC.IO.IOMode.ReadMode ->
                                            case read_flags_raWV8 of {
                                              GHC.Int.I32# ds6_sb0ES [Occ=Once] ->
                                                  $j_sb0E1 ds6_sb0ES;
                                            };
                                        GHC.IO.IOMode.WriteMode ->
                                            case write_flags_raWV5 of {
                                              GHC.Int.I32# ds6_sb0EU [Occ=Once] ->
                                                  $j_sb0E1 ds6_sb0EU;
                                            };
                                        GHC.IO.IOMode.AppendMode ->
                                            case append_flags_raWV6 of {
                                              GHC.Int.I32# ds6_sb0EW [Occ=Once] ->
                                                  $j_sb0E1 ds6_sb0EW;
                                            };
                                        GHC.IO.IOMode.ReadWriteMode ->
                                            case rw_flags_raWV7 of {
                                              GHC.Int.I32# ds6_sb0EY [Occ=Once] ->
                                                  $j_sb0E1 ds6_sb0EY;
                                            };
                                      };
                                  GHC.Types.True ->
                                      case iomode_sb0DR of {
                                        GHC.IO.IOMode.ReadMode ->
                                            case read_flags_raWV8 of {
                                              GHC.Int.I32# x#_sb0F1 [Occ=Once] ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#]
                                                  of
                                                  { (#,#) _ [Occ=Dead] ds2_sb0F5 [Occ=Once] ->
                                                        case narrow32Int# [ds2_sb0F5] of sat_sb0F7 {
                                                          __DEFAULT ->
                                                              case
                                                                  int2Word# [sat_sb0F7]
                                                              of
                                                              sat_sb0F8
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#_sb0F1]
                                                                    of
                                                                    sat_sb0F6
                                                                    { __DEFAULT ->
                                                                          case
                                                                              or# [sat_sb0F6
                                                                                   sat_sb0F8]
                                                                          of
                                                                          sat_sb0F9
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    word2Int# [sat_sb0F9]
                                                                                of
                                                                                sat_sb0Fa
                                                                                { __DEFAULT ->
                                                                                      $j_sb0E1
                                                                                          sat_sb0Fa;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                        GHC.IO.IOMode.WriteMode ->
                                            case write_flags_raWV5 of {
                                              GHC.Int.I32# x#_sb0Fc [Occ=Once] ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#]
                                                  of
                                                  { (#,#) _ [Occ=Dead] ds2_sb0Fg [Occ=Once] ->
                                                        case narrow32Int# [ds2_sb0Fg] of sat_sb0Fi {
                                                          __DEFAULT ->
                                                              case
                                                                  int2Word# [sat_sb0Fi]
                                                              of
                                                              sat_sb0Fj
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#_sb0Fc]
                                                                    of
                                                                    sat_sb0Fh
                                                                    { __DEFAULT ->
                                                                          case
                                                                              or# [sat_sb0Fh
                                                                                   sat_sb0Fj]
                                                                          of
                                                                          sat_sb0Fk
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    word2Int# [sat_sb0Fk]
                                                                                of
                                                                                sat_sb0Fl
                                                                                { __DEFAULT ->
                                                                                      $j_sb0E1
                                                                                          sat_sb0Fl;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                        GHC.IO.IOMode.AppendMode ->
                                            case append_flags_raWV6 of {
                                              GHC.Int.I32# x#_sb0Fn [Occ=Once] ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#]
                                                  of
                                                  { (#,#) _ [Occ=Dead] ds2_sb0Fr [Occ=Once] ->
                                                        case narrow32Int# [ds2_sb0Fr] of sat_sb0Ft {
                                                          __DEFAULT ->
                                                              case
                                                                  int2Word# [sat_sb0Ft]
                                                              of
                                                              sat_sb0Fu
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#_sb0Fn]
                                                                    of
                                                                    sat_sb0Fs
                                                                    { __DEFAULT ->
                                                                          case
                                                                              or# [sat_sb0Fs
                                                                                   sat_sb0Fu]
                                                                          of
                                                                          sat_sb0Fv
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    word2Int# [sat_sb0Fv]
                                                                                of
                                                                                sat_sb0Fw
                                                                                { __DEFAULT ->
                                                                                      $j_sb0E1
                                                                                          sat_sb0Fw;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                        GHC.IO.IOMode.ReadWriteMode ->
                                            case rw_flags_raWV7 of {
                                              GHC.Int.I32# x#_sb0Fy [Occ=Once] ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#]
                                                  of
                                                  { (#,#) _ [Occ=Dead] ds2_sb0FC [Occ=Once] ->
                                                        case narrow32Int# [ds2_sb0FC] of sat_sb0FE {
                                                          __DEFAULT ->
                                                              case
                                                                  int2Word# [sat_sb0FE]
                                                              of
                                                              sat_sb0FF
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#_sb0Fy]
                                                                    of
                                                                    sat_sb0FD
                                                                    { __DEFAULT ->
                                                                          case
                                                                              or# [sat_sb0FD
                                                                                   sat_sb0FF]
                                                                          of
                                                                          sat_sb0FG
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    word2Int# [sat_sb0FG]
                                                                                of
                                                                                sat_sb0FH
                                                                                { __DEFAULT ->
                                                                                      $j_sb0E1
                                                                                          sat_sb0FH;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                        };
              } in 
                GHC.Foreign.charIsRepresentable3
                    ipv1_sb0DW filepath_sb0DQ sat_sb0FI ipv_sb0DV;
        };

GHC.IO.FD.openFile
  :: GHC.IO.FilePath
     -> GHC.IO.IOMode.IOMode
     -> GHC.Types.Bool
     -> GHC.Types.IO (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType)
[GblId, Arity=4, Str=<L,U><L,U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.FD.openFile1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.FD.$w$cfillReadBuffer [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=9,
 Str=<S,U><S,1*U><S,U><L,U><L,U><S,U><L,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sb0FJ
           ww1_sb0FK
           ww2_sb0FL
           ww3_sb0FM
           ww4_sb0FN
           ww5_sb0FO
           ww6_sb0FP
           ww7_sb0FQ
           w_sb0FR]
        case -# [ww5_sb0FO ww7_sb0FQ] of sat_sb0FT {
          __DEFAULT ->
              case int2Word# [sat_sb0FT] of sat_sb0FU {
                __DEFAULT ->
                    case plusAddr# [ww2_sb0FL ww7_sb0FQ] of sat_sb0FS {
                      __DEFAULT ->
                          case
                              GHC.IO.FD.$wreadRawBufferPtr
                                  GHC.IO.FD.$fBufferedIOFD12
                                  ww_sb0FJ
                                  ww1_sb0FK
                                  sat_sb0FS
                                  0#
                                  sat_sb0FU
                                  w_sb0FR
                          of
                          { (#,#) ipv_sb0FW [Occ=Once] ipv1_sb0FX ->
                                case touch# [ww3_sb0FM ipv_sb0FW] of s'_sb0FY {
                                  __DEFAULT ->
                                      let {
                                        sat_sb0G2 [Occ=Once] :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                        [LclId] =
                                            [ww2_sb0FL
                                             ww3_sb0FM
                                             ww4_sb0FN
                                             ww5_sb0FO
                                             ww6_sb0FP
                                             ww7_sb0FQ
                                             ipv1_sb0FX] \u []
                                                case ipv1_sb0FX of {
                                                  GHC.Types.I# y_sb0G0 [Occ=Once] ->
                                                      case +# [ww7_sb0FQ y_sb0G0] of sat_sb0G1 {
                                                        __DEFAULT ->
                                                            GHC.IO.Buffer.Buffer [ww2_sb0FL
                                                                                  ww3_sb0FM
                                                                                  ww4_sb0FN
                                                                                  ww5_sb0FO
                                                                                  ww6_sb0FP
                                                                                  sat_sb0G1];
                                                      };
                                                }; } in
                                      let {
                                        sat_sb0G3 [Occ=Once]
                                          :: (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8)
                                        [LclId] =
                                            CCCS (,)! [ipv1_sb0FX sat_sb0G2];
                                      } in  (#,#) [s'_sb0FY sat_sb0G3];
                                };
                          };
                    };
              };
        };

GHC.IO.FD.$fBufferedIOFD11 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,1*U)><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0G4 w1_sb0G5 w2_sb0G6]
        case w_sb0G4 of {
          GHC.IO.FD.FD ww1_sb0G8 [Occ=Once] ww2_sb0G9 [Occ=Once] ->
              case w1_sb0G5 of {
                GHC.IO.Buffer.Buffer ww4_sb0Gb [Occ=Once]
                                     ww5_sb0Gc [Occ=Once]
                                     ww6_sb0Gd [Occ=Once]
                                     ww7_sb0Ge [Occ=Once]
                                     ww8_sb0Gf [Occ=Once]
                                     ww9_sb0Gg [Occ=Once] ->
                    GHC.IO.FD.$w$cfillReadBuffer
                        ww1_sb0G8
                        ww2_sb0G9
                        ww4_sb0Gb
                        ww5_sb0Gc
                        ww6_sb0Gd
                        ww7_sb0Ge
                        ww8_sb0Gf
                        ww9_sb0Gg
                        w2_sb0G6;
              };
        };

GHC.IO.FD.$fBufferedIOFD6
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Word.Word8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,A><L,1*U(U,U,A,U,A,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [_dev_sb0Gh buf_sb0Gi s_sb0Gj]
        let {
          sat_sb0Gr [Occ=Once] :: GHC.IO.Buffer.Buffer GHC.Word.Word8
          [LclId] =
              [buf_sb0Gi] \u []
                  case buf_sb0Gi of {
                    GHC.IO.Buffer.Buffer dt_sb0Gl [Occ=Once]
                                         dt1_sb0Gm [Occ=Once]
                                         _ [Occ=Dead]
                                         dt2_sb0Go [Occ=Once]
                                         _ [Occ=Dead]
                                         _ [Occ=Dead] ->
                        GHC.IO.Buffer.Buffer [dt_sb0Gl
                                              dt1_sb0Gm
                                              GHC.IO.Buffer.WriteBuffer
                                              dt2_sb0Go
                                              0#
                                              0#];
                  };
        } in  (#,#) [s_sb0Gj sat_sb0Gr];

GHC.IO.FD.$fBufferedIOFD [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.IO.BufferedIO.BufferedIO GHC.IO.FD.FD
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.IO.BufferedIO.C:BufferedIO! [GHC.IO.FD.$fBufferedIOFD15
                                                   GHC.IO.FD.$fBufferedIOFD11
                                                   GHC.IO.FD.$fBufferedIOFD7
                                                   GHC.IO.FD.$fBufferedIOFD6
                                                   GHC.IO.FD.$fBufferedIOFD_$swriteBuf1
                                                   GHC.IO.FD.$fBufferedIOFD1];

GHC.IO.FD.FD :: GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.IO.FD.FD
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.IO.FD.FD [eta_B2 eta_B1];


==================== STG syntax: ====================
2018-03-16 16:06:00.269434338 UTC

GHC.IO.FD.$WFD [InlPrag=INLINE[2]]
  :: Foreign.C.Types.CInt -> GHC.Types.Int -> GHC.IO.FD.FD
[GblId[DataConWrapper],
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_sb0nX dt_sb0nY]
        case dt_sb0nX of {
          GHC.Int.I32# dt_sb0o0 [Occ=Once] ->
              case dt_sb0nY of {
                GHC.Types.I# dt_sb0o2 [Occ=Once] ->
                    GHC.IO.FD.FD [dt_sb0o0 dt_sb0o2];
              };
        };

GHC.IO.FD.$fBufferedIOFD5 [Occ=LoopBreaker]
  :: GHC.Base.String
     -> GHC.Types.IO System.Posix.Types.CSsize
     -> GHC.Types.IO System.Posix.Types.CSsize
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           System.Posix.Types.CSsize #)
[GblId,
 Arity=4,
 Str=<L,U><C(S(SS(S))),C(U(U,1*U(U)))><L,1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [loc_sb0o3 f_sb0o4 on_block_sb0o5 void_0E]
        case f_sb0o4 GHC.Prim.void# of {
          Unit# ipv1_sb0o9 [Occ=Once] ->
              case ipv1_sb0o9 of wild_sb0oa {
                GHC.Int.I64# x_sb0ob [Occ=Once!] ->
                    case x_sb0ob of {
                      __DEFAULT -> Unit# [ipv1_sb0o9];
                      -1# ->
                          case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                            Unit# ds2_sb0og [Occ=Once] ->
                                case narrow32Int# [ds2_sb0og] of {
                                  __DEFAULT -> Foreign.C.Error.throwErrno1 loc_sb0o3 GHC.Prim.void#;
                                  4# ->
                                      GHC.IO.FD.$fBufferedIOFD5
                                          loc_sb0o3 f_sb0o4 on_block_sb0o5 GHC.Prim.void#;
                                  11# -> on_block_sb0o5 GHC.Prim.void#;
                                };
                          };
                    };
              };
        };

lvl_raWUX :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.fdWrite"#;

lvl1_raWUY :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_raWUX;

GHC.IO.FD.$fBufferedIOFD9 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.fdReadNonBlocking"#;

GHC.IO.FD.$fBufferedIOFD8 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fBufferedIOFD9;

lvl2_raWUZ :: GHC.Int.Int64
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I64#! [-1#];

GHC.IO.FD.$fBufferedIOFD3
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           System.Posix.Types.CSsize #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E] Unit# [lvl2_raWUZ];

GHC.IO.FD.$fBufferedIOFD2 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

GHC.IO.FD.$fBufferedIOFD10 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [-1#];

GHC.IO.FD.$wreadRawBufferPtrNoBlock [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.Word#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=7,
 Str=<L,U><S,U><S,1*U><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0oj
           ww_sb0ok
           ww1_sb0ol
           ww2_sb0om
           ww3_sb0on
           ww4_sb0oo
           void_0E]
        let-no-escape {
          $sdo_read_sb0oq [Occ=Once*!T[2], Dmd=<L,1*C1(C1(U(U,U)))>]
            :: GHC.Types.IO System.Posix.Types.CSsize
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
          [LclId[JoinId(2)],
           Arity=2,
           Str=<C(S(SS(S))),C(U(U,1*U(U)))><S,U>,
           Unf=OtherCon []] =
              sat-only [w_sb0oj] \r [call_sb0or void_0E]
                  case
                      GHC.IO.FD.$fBufferedIOFD5
                          w_sb0oj call_sb0or GHC.IO.FD.$fBufferedIOFD3 GHC.Prim.void#
                  of
                  { Unit# ipv1_sb0ov [Occ=Once] ->
                        case ipv1_sb0ov of {
                          GHC.Int.I64# x_sb0ox [Occ=Once!] ->
                              case x_sb0ox of wild1_sb0oy {
                                __DEFAULT ->
                                    let {
                                      sat_sb0oz [Occ=Once] :: GHC.Types.Int
                                      [LclId] =
                                          CCCS GHC.Types.I#! [wild1_sb0oy];
                                    } in  Unit# [sat_sb0oz];
                                -1# -> Unit# [GHC.IO.FD.$fBufferedIOFD2];
                                0# -> Unit# [GHC.IO.FD.$fBufferedIOFD10];
                              };
                        };
                  };
        } in 
          case ww1_sb0ol of {
            __DEFAULT ->
                let {
                  sat_sb0oI [Occ=Once] :: GHC.Types.IO System.Posix.Types.CSsize
                  [LclId] =
                      [ww_sb0ok ww2_sb0om ww3_sb0on ww4_sb0oo] \r [void_0E]
                          case plusAddr# [ww2_sb0om ww3_sb0on] of sat_sb0oD {
                            __DEFAULT ->
                                case
                                    __pkg_ccall base-4.11.0.0 [ww_sb0ok
                                                               sat_sb0oD
                                                               ww4_sb0oo
                                                               GHC.Prim.void#]
                                of
                                { Unit# ds11_sb0oG [Occ=Once] ->
                                      let {
                                        sat_sb0oH [Occ=Once] :: GHC.Int.Int64
                                        [LclId] =
                                            CCCS GHC.Int.I64#! [ds11_sb0oG];
                                      } in  Unit# [sat_sb0oH];
                                };
                          };
                } in  $sdo_read_sb0oq sat_sb0oI GHC.Prim.void#;
            0# ->
                case
                    __pkg_ccall base-4.11.0.0 [ww_sb0ok 0## 0# 0## GHC.Prim.void#]
                of
                { Unit# ds1_sb0oM [Occ=Once] ->
                      case narrow32Int# [ds1_sb0oM] of {
                        __DEFAULT ->
                            let {
                              sat_sb0oV [Occ=Once] :: GHC.Types.IO System.Posix.Types.CSsize
                              [LclId] =
                                  [ww_sb0ok ww2_sb0om ww3_sb0on ww4_sb0oo] \r [void_0E]
                                      case plusAddr# [ww2_sb0om ww3_sb0on] of sat_sb0oQ {
                                        __DEFAULT ->
                                            case
                                                __pkg_ccall_GC base-4.11.0.0 [ww_sb0ok
                                                                              sat_sb0oQ
                                                                              ww4_sb0oo
                                                                              GHC.Prim.void#]
                                            of
                                            { Unit# ds11_sb0oT [Occ=Once] ->
                                                  let {
                                                    sat_sb0oU [Occ=Once] :: GHC.Int.Int64
                                                    [LclId] =
                                                        CCCS GHC.Int.I64#! [ds11_sb0oT];
                                                  } in  Unit# [sat_sb0oU];
                                            };
                                      };
                            } in  $sdo_read_sb0oq sat_sb0oV GHC.Prim.void#;
                        0# -> Unit# [GHC.IO.FD.$fBufferedIOFD2];
                      };
                };
          };

GHC.IO.FD.readRawBufferPtrNoBlock1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0oW w1_sb0oX w2_sb0oY w3_sb0oZ w4_sb0p0 void_0E]
        case w1_sb0oX of {
          GHC.IO.FD.FD ww1_sb0p3 [Occ=Once] ww2_sb0p4 [Occ=Once] ->
              case w2_sb0oY of {
                GHC.Ptr.Ptr ww4_sb0p6 [Occ=Once] ->
                    case w3_sb0oZ of {
                      GHC.Types.I# ww6_sb0p8 [Occ=Once] ->
                          case w4_sb0p0 of {
                            GHC.Word.W64# ww8_sb0pa [Occ=Once] ->
                                GHC.IO.FD.$wreadRawBufferPtrNoBlock
                                    w_sb0oW
                                    ww1_sb0p3
                                    ww2_sb0p4
                                    ww4_sb0p6
                                    ww6_sb0p8
                                    ww8_sb0pa
                                    GHC.Prim.void#;
                          };
                    };
              };
        };

GHC.IO.FD.$w$creadNonBlocking [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Base.Maybe GHC.Types.Int #)
[GblId,
 Arity=5,
 Str=<S,U><S,1*U><S,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sb0pb ww1_sb0pc ww2_sb0pd ww3_sb0pe void_0E]
        case int2Word# [ww3_sb0pe] of sat_sb0pg {
          __DEFAULT ->
              case
                  GHC.IO.FD.$wreadRawBufferPtrNoBlock
                      GHC.IO.FD.$fBufferedIOFD8
                      ww_sb0pb
                      ww1_sb0pc
                      ww2_sb0pd
                      0#
                      sat_sb0pg
                      GHC.Prim.void#
              of
              { Unit# ipv1_sb0pj [Occ=Once!] ->
                    case ipv1_sb0pj of wild_sb0pk {
                      GHC.Types.I# ds_sb0pl [Occ=Once!] ->
                          case ds_sb0pl of {
                            __DEFAULT ->
                                let {
                                  sat_sb0pn [Occ=Once] :: GHC.Base.Maybe GHC.Types.Int
                                  [LclId] =
                                      CCCS GHC.Base.Just! [wild_sb0pk];
                                } in  Unit# [sat_sb0pn];
                            -1# -> Unit# [GHC.Base.Nothing];
                          };
                    };
              };
        };

GHC.IO.FD.$fRawIOFD3 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Base.Maybe GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0po w1_sb0pp w2_sb0pq void_0E]
        case w_sb0po of {
          GHC.IO.FD.FD ww1_sb0pt [Occ=Once] ww2_sb0pu [Occ=Once] ->
              case w1_sb0pp of {
                GHC.Ptr.Ptr ww4_sb0pw [Occ=Once] ->
                    case w2_sb0pq of {
                      GHC.Types.I# ww6_sb0py [Occ=Once] ->
                          GHC.IO.FD.$w$creadNonBlocking
                              ww1_sb0pt ww2_sb0pu ww4_sb0pw ww6_sb0py GHC.Prim.void#;
                    };
              };
        };

GHC.IO.FD.$fBufferedIOFD4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.fdWriteNonBlocking"#;

GHC.IO.FD.$fBufferedIOFD_loc :: GHC.Base.String
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fBufferedIOFD4;

GHC.IO.FD.$fBufferedIOFD14
  :: System.Posix.Types.CSsize -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [ds1_sb0pz]
        case ds1_sb0pz of {
          GHC.Int.I64# x_sb0pB [Occ=Once!] ->
              case x_sb0pB of {
                __DEFAULT -> GHC.Types.False [];
                -1# -> GHC.Types.True [];
              };
        };

GHC.IO.FD.$fBufferedIOFD13 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.fdRead"#;

GHC.IO.FD.$fBufferedIOFD12 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fBufferedIOFD13;

GHC.IO.FD.$wreadRawBufferPtr [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.Word#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=7,
 Str=<L,U><S,U><S,1*U><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0pD
           ww_sb0pE
           ww1_sb0pF
           ww2_sb0pG
           ww3_sb0pH
           ww4_sb0pI
           void_0E]
        let-no-escape {
          $sdo_read_sb0pK [Occ=Once*!T[2], Dmd=<L,1*C1(C1(U(U,U)))>]
            :: GHC.Types.IO System.Posix.Types.CSsize
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
          [LclId[JoinId(2)],
           Arity=2,
           Str=<C(S),C(U(U,U))><S,U>,
           Unf=OtherCon []] =
              sat-only [w_sb0pD ww_sb0pE] \r [eta_sb0pL void_0E]
                  let {
                    sat_sb0pX [Occ=Once] :: GHC.Types.IO ()
                    [LclId] =
                        [ww_sb0pE] \r [void_0E]
                            case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                              Unit# ds1_sb0pR [Occ=Once!] ->
                                  case ds1_sb0pR of {
                                    __DEFAULT ->
                                        case narrow32Int# [ww_sb0pE] of sat_sb0pT {
                                          __DEFAULT ->
                                              let {
                                                sat_sb0pU [Occ=Once] :: System.Posix.Types.Fd
                                                [LclId] =
                                                    CCCS GHC.Int.I32#! [sat_sb0pT];
                                              } in 
                                                GHC.Event.Thread.threadWaitRead1
                                                    GHC.Event.Internal.evtRead
                                                    sat_sb0pU
                                                    GHC.Prim.void#;
                                        };
                                    0# ->
                                        case narrow32Int# [ww_sb0pE] of sat_sb0pV {
                                          __DEFAULT ->
                                              case
                                                  waitRead# [sat_sb0pV GHC.Prim.void#]
                                              of
                                              s'_sb0pW
                                              { (##) -> Unit# [GHC.Tuple.()];
                                              };
                                        };
                                  };
                            };
                  } in 
                    case
                        Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                            GHC.IO.FD.$fBufferedIOFD14
                            w_sb0pD
                            eta_sb0pL
                            sat_sb0pX
                            GHC.Prim.void#
                    of
                    { Unit# ipv1_sb0q0 [Occ=Once] ->
                          let {
                            sat_sb0q3 [Occ=Once] :: GHC.Types.Int
                            [LclId] =
                                [ipv1_sb0q0] \u []
                                    case ipv1_sb0q0 of {
                                      GHC.Int.I64# x#_sb0q2 [Occ=Once] -> GHC.Types.I# [x#_sb0q2];
                                    };
                          } in  Unit# [sat_sb0q3];
                    };
        } in 
          case ww1_sb0pF of {
            __DEFAULT ->
                let {
                  sat_sb0qc [Occ=Once] :: GHC.Types.IO System.Posix.Types.CSsize
                  [LclId] =
                      [ww_sb0pE ww2_sb0pG ww3_sb0pH ww4_sb0pI] \r [void_0E]
                          case plusAddr# [ww2_sb0pG ww3_sb0pH] of sat_sb0q7 {
                            __DEFAULT ->
                                case
                                    __pkg_ccall base-4.11.0.0 [ww_sb0pE
                                                               sat_sb0q7
                                                               ww4_sb0pI
                                                               GHC.Prim.void#]
                                of
                                { Unit# ds11_sb0qa [Occ=Once] ->
                                      let {
                                        sat_sb0qb [Occ=Once] :: GHC.Int.Int64
                                        [LclId] =
                                            CCCS GHC.Int.I64#! [ds11_sb0qa];
                                      } in  Unit# [sat_sb0qb];
                                };
                          };
                } in  $sdo_read_sb0pK sat_sb0qc GHC.Prim.void#;
            0# ->
                case
                    __pkg_ccall base-4.11.0.0 [ww_sb0pE 0## 0# 0## GHC.Prim.void#]
                of
                { Unit# ds1_sb0qg [Occ=Once] ->
                      let-no-escape {
                        $w$j_sb0qh [InlPrag=NOUSERINLINE[0],
                                    Occ=Once*!T[2],
                                    Dmd=<L,1*C1(C1(U(U,U)))>]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> GHC.Prim.Int#
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                        [LclId[JoinId(2)], Arity=2, Str=<L,U><S,1*U>, Unf=OtherCon []] =
                            sat-only [ww_sb0pE
                                      ww2_sb0pG
                                      ww3_sb0pH
                                      ww4_sb0pI
                                      $sdo_read_sb0pK] \r [void_0E ww5_sb0qj]
                                let-no-escape {
                                  read_sb0qk [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                                  [LclId[JoinId(1)], Arity=1, Str=<L,U>, Unf=OtherCon []] =
                                      sat-only [ww_sb0pE
                                                ww2_sb0pG
                                                ww3_sb0pH
                                                ww4_sb0pI
                                                $sdo_read_sb0pK] \r [void_0E]
                                          case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                                            Unit# ds3_sb0qp [Occ=Once!] ->
                                                case ds3_sb0qp of {
                                                  __DEFAULT ->
                                                      let {
                                                        sat_sb0qy [Occ=Once]
                                                          :: GHC.Types.IO System.Posix.Types.CSsize
                                                        [LclId] =
                                                            [ww_sb0pE
                                                             ww2_sb0pG
                                                             ww3_sb0pH
                                                             ww4_sb0pI] \r [void_0E]
                                                                case
                                                                    plusAddr# [ww2_sb0pG ww3_sb0pH]
                                                                of
                                                                sat_sb0qt
                                                                { __DEFAULT ->
                                                                      case
                                                                          __pkg_ccall_GC base-4.11.0.0 [ww_sb0pE
                                                                                                        sat_sb0qt
                                                                                                        ww4_sb0pI
                                                                                                        GHC.Prim.void#]
                                                                      of
                                                                      { Unit# ds11_sb0qw [Occ=Once] ->
                                                                            let {
                                                                              sat_sb0qx [Occ=Once]
                                                                                :: GHC.Int.Int64
                                                                              [LclId] =
                                                                                  CCCS GHC.Int.I64#! [ds11_sb0qw];
                                                                            } in  Unit# [sat_sb0qx];
                                                                      };
                                                                };
                                                      } in 
                                                        $sdo_read_sb0pK sat_sb0qy GHC.Prim.void#;
                                                  0# ->
                                                      let {
                                                        sat_sb0qG [Occ=Once]
                                                          :: GHC.Types.IO System.Posix.Types.CSsize
                                                        [LclId] =
                                                            [ww_sb0pE
                                                             ww2_sb0pG
                                                             ww3_sb0pH
                                                             ww4_sb0pI] \r [void_0E]
                                                                case
                                                                    plusAddr# [ww2_sb0pG ww3_sb0pH]
                                                                of
                                                                sat_sb0qB
                                                                { __DEFAULT ->
                                                                      case
                                                                          __pkg_ccall base-4.11.0.0 [ww_sb0pE
                                                                                                     sat_sb0qB
                                                                                                     ww4_sb0pI
                                                                                                     GHC.Prim.void#]
                                                                      of
                                                                      { Unit# ds11_sb0qE [Occ=Once] ->
                                                                            let {
                                                                              sat_sb0qF [Occ=Once]
                                                                                :: GHC.Int.Int64
                                                                              [LclId] =
                                                                                  CCCS GHC.Int.I64#! [ds11_sb0qE];
                                                                            } in  Unit# [sat_sb0qF];
                                                                      };
                                                                };
                                                      } in 
                                                        $sdo_read_sb0pK sat_sb0qG GHC.Prim.void#;
                                                };
                                          };
                                } in 
                                  case ww5_sb0qj of {
                                    __DEFAULT -> read_sb0qk GHC.Prim.void#;
                                    0# ->
                                        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                                          Unit# ds3_sb0qL [Occ=Once!] ->
                                              case ds3_sb0qL of {
                                                __DEFAULT ->
                                                    case narrow32Int# [ww_sb0pE] of sat_sb0qN {
                                                      __DEFAULT ->
                                                          let {
                                                            sat_sb0qO [Occ=Once]
                                                              :: System.Posix.Types.Fd
                                                            [LclId] =
                                                                CCCS GHC.Int.I32#! [sat_sb0qN];
                                                          } in 
                                                            case
                                                                GHC.Event.Thread.threadWaitRead1
                                                                    GHC.Event.Internal.evtRead
                                                                    sat_sb0qO
                                                                    GHC.Prim.void#
                                                            of
                                                            { Unit# _ [Occ=Dead] ->
                                                                  read_sb0qk GHC.Prim.void#;
                                                            };
                                                    };
                                                0# ->
                                                    case narrow32Int# [ww_sb0pE] of sat_sb0qS {
                                                      __DEFAULT ->
                                                          case
                                                              waitRead# [sat_sb0qS GHC.Prim.void#]
                                                          of
                                                          s'_sb0qT
                                                          { (##) -> read_sb0qk GHC.Prim.void#;
                                                          };
                                                    };
                                              };
                                        };
                                  };
                      } in 
                        case narrow32Int# [ds1_sb0qg] of wild2_sb0qU {
                          __DEFAULT -> $w$j_sb0qh GHC.Prim.void# wild2_sb0qU;
                          -1# ->
                              case Foreign.C.Error.throwErrno1 w_sb0pD GHC.Prim.void# of {
                                Unit# ipv1_sb0qX [Occ=Once] ->
                                    case ipv1_sb0qX of {
                                      GHC.Int.I32# ww6_sb0qZ [Occ=Once] ->
                                          $w$j_sb0qh GHC.Prim.void# ww6_sb0qZ;
                                    };
                              };
                        };
                };
          };

GHC.IO.FD.$fRawIOFD5 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0r0 w1_sb0r1 w2_sb0r2 w3_sb0r3 w4_sb0r4 void_0E]
        case w1_sb0r1 of {
          GHC.IO.FD.FD ww1_sb0r7 [Occ=Once] ww2_sb0r8 [Occ=Once] ->
              case w2_sb0r2 of {
                GHC.Ptr.Ptr ww4_sb0ra [Occ=Once] ->
                    case w3_sb0r3 of {
                      GHC.Types.I# ww6_sb0rc [Occ=Once] ->
                          case w4_sb0r4 of {
                            GHC.Word.W64# ww8_sb0re [Occ=Once] ->
                                GHC.IO.FD.$wreadRawBufferPtr
                                    w_sb0r0
                                    ww1_sb0r7
                                    ww2_sb0r8
                                    ww4_sb0ra
                                    ww6_sb0rc
                                    ww8_sb0re
                                    GHC.Prim.void#;
                          };
                    };
              };
        };

GHC.IO.FD.$fRawIOFD4
  :: GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [fd_sb0rf ptr_sb0rg bytes_sb0rh void_0E]
        case fd_sb0rf of {
          GHC.IO.FD.FD ww1_sb0rk [Occ=Once] ww2_sb0rl [Occ=Once] ->
              case ptr_sb0rg of {
                GHC.Ptr.Ptr ww4_sb0rn [Occ=Once] ->
                    case bytes_sb0rh of {
                      GHC.Types.I# x#_sb0rp [Occ=Once] ->
                          case int2Word# [x#_sb0rp] of sat_sb0rq {
                            __DEFAULT ->
                                GHC.IO.FD.$wreadRawBufferPtr
                                    GHC.IO.FD.$fBufferedIOFD12
                                    ww1_sb0rk
                                    ww2_sb0rl
                                    ww4_sb0rn
                                    0#
                                    sat_sb0rq
                                    GHC.Prim.void#;
                          };
                    };
              };
        };

GHC.IO.FD.$wwriteRawBufferPtr [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.Word#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId,
 Arity=7,
 Str=<L,U><S,U><S,1*U><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0rr
           ww_sb0rs
           ww1_sb0rt
           ww2_sb0ru
           ww3_sb0rv
           ww4_sb0rw
           void_0E]
        let-no-escape {
          $sdo_write_sb0ry [Occ=Once*!T[2], Dmd=<L,1*C1(C1(U(U,U)))>]
            :: GHC.Types.IO System.Posix.Types.CSsize
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
          [LclId[JoinId(2)],
           Arity=2,
           Str=<C(S),C(U(U,U))><S,U>,
           Unf=OtherCon []] =
              sat-only [w_sb0rr ww_sb0rs] \r [eta_sb0rz void_0E]
                  let {
                    sat_sb0rL [Occ=Once] :: GHC.Types.IO ()
                    [LclId] =
                        [ww_sb0rs] \r [void_0E]
                            case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                              Unit# ds1_sb0rF [Occ=Once!] ->
                                  case ds1_sb0rF of {
                                    __DEFAULT ->
                                        case narrow32Int# [ww_sb0rs] of sat_sb0rH {
                                          __DEFAULT ->
                                              let {
                                                sat_sb0rI [Occ=Once] :: System.Posix.Types.Fd
                                                [LclId] =
                                                    CCCS GHC.Int.I32#! [sat_sb0rH];
                                              } in 
                                                GHC.Event.Thread.threadWaitRead1
                                                    GHC.Event.Internal.evtWrite
                                                    sat_sb0rI
                                                    GHC.Prim.void#;
                                        };
                                    0# ->
                                        case narrow32Int# [ww_sb0rs] of sat_sb0rJ {
                                          __DEFAULT ->
                                              case
                                                  waitWrite# [sat_sb0rJ GHC.Prim.void#]
                                              of
                                              s'_sb0rK
                                              { (##) -> Unit# [GHC.Tuple.()];
                                              };
                                        };
                                  };
                            };
                  } in 
                    case
                        Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                            GHC.IO.FD.$fBufferedIOFD14
                            w_sb0rr
                            eta_sb0rz
                            sat_sb0rL
                            GHC.Prim.void#
                    of
                    { Unit# ipv1_sb0rO [Occ=Once] ->
                          let {
                            sat_sb0rS [Occ=Once] :: Foreign.C.Types.CInt
                            [LclId] =
                                [ipv1_sb0rO] \u []
                                    case ipv1_sb0rO of {
                                      GHC.Int.I64# x#_sb0rQ [Occ=Once] ->
                                          case narrow32Int# [x#_sb0rQ] of sat_sb0rR {
                                            __DEFAULT -> GHC.Int.I32# [sat_sb0rR];
                                          };
                                    };
                          } in  Unit# [sat_sb0rS];
                    };
        } in 
          case ww1_sb0rt of {
            __DEFAULT ->
                let {
                  sat_sb0s1 [Occ=Once] :: GHC.Types.IO System.Posix.Types.CSsize
                  [LclId] =
                      [ww_sb0rs ww2_sb0ru ww3_sb0rv ww4_sb0rw] \r [void_0E]
                          case plusAddr# [ww2_sb0ru ww3_sb0rv] of sat_sb0rW {
                            __DEFAULT ->
                                case
                                    __pkg_ccall base-4.11.0.0 [ww_sb0rs
                                                               sat_sb0rW
                                                               ww4_sb0rw
                                                               GHC.Prim.void#]
                                of
                                { Unit# ds11_sb0rZ [Occ=Once] ->
                                      let {
                                        sat_sb0s0 [Occ=Once] :: GHC.Int.Int64
                                        [LclId] =
                                            CCCS GHC.Int.I64#! [ds11_sb0rZ];
                                      } in  Unit# [sat_sb0s0];
                                };
                          };
                } in  $sdo_write_sb0ry sat_sb0s1 GHC.Prim.void#;
            0# ->
                case
                    __pkg_ccall base-4.11.0.0 [ww_sb0rs 1## 0# 0## GHC.Prim.void#]
                of
                { Unit# ds1_sb0s5 [Occ=Once] ->
                      let-no-escape {
                        write_sb0s6 [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                          :: GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
                        [LclId[JoinId(1)], Arity=1, Str=<L,U>, Unf=OtherCon []] =
                            sat-only [ww_sb0rs
                                      ww2_sb0ru
                                      ww3_sb0rv
                                      ww4_sb0rw
                                      $sdo_write_sb0ry] \r [void_0E]
                                case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                                  Unit# ds3_sb0sb [Occ=Once!] ->
                                      case ds3_sb0sb of {
                                        __DEFAULT ->
                                            let {
                                              sat_sb0sk [Occ=Once]
                                                :: GHC.Types.IO System.Posix.Types.CSsize
                                              [LclId] =
                                                  [ww_sb0rs
                                                   ww2_sb0ru
                                                   ww3_sb0rv
                                                   ww4_sb0rw] \r [void_0E]
                                                      case
                                                          plusAddr# [ww2_sb0ru ww3_sb0rv]
                                                      of
                                                      sat_sb0sf
                                                      { __DEFAULT ->
                                                            case
                                                                __pkg_ccall_GC base-4.11.0.0 [ww_sb0rs
                                                                                              sat_sb0sf
                                                                                              ww4_sb0rw
                                                                                              GHC.Prim.void#]
                                                            of
                                                            { Unit# ds11_sb0si [Occ=Once] ->
                                                                  let {
                                                                    sat_sb0sj [Occ=Once]
                                                                      :: GHC.Int.Int64
                                                                    [LclId] =
                                                                        CCCS GHC.Int.I64#! [ds11_sb0si];
                                                                  } in  Unit# [sat_sb0sj];
                                                            };
                                                      };
                                            } in  $sdo_write_sb0ry sat_sb0sk GHC.Prim.void#;
                                        0# ->
                                            let {
                                              sat_sb0ss [Occ=Once]
                                                :: GHC.Types.IO System.Posix.Types.CSsize
                                              [LclId] =
                                                  [ww_sb0rs
                                                   ww2_sb0ru
                                                   ww3_sb0rv
                                                   ww4_sb0rw] \r [void_0E]
                                                      case
                                                          plusAddr# [ww2_sb0ru ww3_sb0rv]
                                                      of
                                                      sat_sb0sn
                                                      { __DEFAULT ->
                                                            case
                                                                __pkg_ccall base-4.11.0.0 [ww_sb0rs
                                                                                           sat_sb0sn
                                                                                           ww4_sb0rw
                                                                                           GHC.Prim.void#]
                                                            of
                                                            { Unit# ds11_sb0sq [Occ=Once] ->
                                                                  let {
                                                                    sat_sb0sr [Occ=Once]
                                                                      :: GHC.Int.Int64
                                                                    [LclId] =
                                                                        CCCS GHC.Int.I64#! [ds11_sb0sq];
                                                                  } in  Unit# [sat_sb0sr];
                                                            };
                                                      };
                                            } in  $sdo_write_sb0ry sat_sb0ss GHC.Prim.void#;
                                      };
                                };
                      } in 
                        case narrow32Int# [ds1_sb0s5] of {
                          __DEFAULT -> write_sb0s6 GHC.Prim.void#;
                          0# ->
                              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                                Unit# ds3_sb0sx [Occ=Once!] ->
                                    case ds3_sb0sx of {
                                      __DEFAULT ->
                                          case narrow32Int# [ww_sb0rs] of sat_sb0sz {
                                            __DEFAULT ->
                                                let {
                                                  sat_sb0sA [Occ=Once] :: System.Posix.Types.Fd
                                                  [LclId] =
                                                      CCCS GHC.Int.I32#! [sat_sb0sz];
                                                } in 
                                                  case
                                                      GHC.Event.Thread.threadWaitRead1
                                                          GHC.Event.Internal.evtWrite
                                                          sat_sb0sA
                                                          GHC.Prim.void#
                                                  of
                                                  { Unit# _ [Occ=Dead] ->
                                                        write_sb0s6 GHC.Prim.void#;
                                                  };
                                          };
                                      0# ->
                                          case narrow32Int# [ww_sb0rs] of sat_sb0sE {
                                            __DEFAULT ->
                                                case
                                                    waitWrite# [sat_sb0sE GHC.Prim.void#]
                                                of
                                                s'_sb0sF
                                                { (##) -> write_sb0s6 GHC.Prim.void#;
                                                };
                                          };
                                    };
                              };
                        };
                };
          };

GHC.IO.FD.writeRawBufferPtr1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0sG w1_sb0sH w2_sb0sI w3_sb0sJ w4_sb0sK void_0E]
        case w1_sb0sH of {
          GHC.IO.FD.FD ww1_sb0sN [Occ=Once] ww2_sb0sO [Occ=Once] ->
              case w2_sb0sI of {
                GHC.Ptr.Ptr ww4_sb0sQ [Occ=Once] ->
                    case w3_sb0sJ of {
                      GHC.Types.I# ww6_sb0sS [Occ=Once] ->
                          case w4_sb0sK of {
                            GHC.Word.W64# ww8_sb0sU [Occ=Once] ->
                                GHC.IO.FD.$wwriteRawBufferPtr
                                    w_sb0sG
                                    ww1_sb0sN
                                    ww2_sb0sO
                                    ww4_sb0sQ
                                    ww6_sb0sS
                                    ww8_sb0sU
                                    GHC.Prim.void#;
                          };
                    };
              };
        };

GHC.IO.FD.$wfdWrite [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=5, Str=<S,U><S,U><S,U><S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_sb0sV ww1_sb0sW ww2_sb0sX ww3_sb0sY void_0E]
        case int2Word# [ww3_sb0sY] of sat_sb0t0 {
          __DEFAULT ->
              case
                  GHC.IO.FD.$wwriteRawBufferPtr
                      lvl1_raWUY ww_sb0sV ww1_sb0sW ww2_sb0sX 0# sat_sb0t0 GHC.Prim.void#
              of
              { Unit# ipv1_sb0t3 [Occ=Once] ->
                    case ipv1_sb0t3 of {
                      GHC.Int.I32# x#_sb0t5 ->
                          case <# [x#_sb0t5 ww3_sb0sY] of {
                            __DEFAULT -> Unit# [GHC.Tuple.()];
                            1# ->
                                case -# [ww3_sb0sY x#_sb0t5] of sat_sb0t8 {
                                  __DEFAULT ->
                                      case plusAddr# [ww2_sb0sX x#_sb0t5] of sat_sb0t7 {
                                        __DEFAULT ->
                                            GHC.IO.FD.$wfdWrite
                                                ww_sb0sV
                                                ww1_sb0sW
                                                sat_sb0t7
                                                sat_sb0t8
                                                GHC.Prim.void#;
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.FD.$fRawIOFD2 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0t9 w1_sb0ta w2_sb0tb void_0E]
        case w_sb0t9 of {
          GHC.IO.FD.FD ww1_sb0te [Occ=Once] ww2_sb0tf [Occ=Once] ->
              case w1_sb0ta of {
                GHC.Ptr.Ptr ww4_sb0th [Occ=Once] ->
                    case w2_sb0tb of {
                      GHC.Types.I# ww6_sb0tj [Occ=Once] ->
                          GHC.IO.FD.$wfdWrite
                              ww1_sb0te ww2_sb0tf ww4_sb0th ww6_sb0tj GHC.Prim.void#;
                    };
              };
        };

GHC.IO.FD.$w$cwriteNonBlocking [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=5,
 Str=<S,U><S,1*U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sb0tk ww1_sb0tl ww2_sb0tm ww3_sb0tn void_0E]
        case ww1_sb0tl of {
          __DEFAULT ->
              let {
                sat_sb0tx [Occ=Once] :: GHC.Types.IO System.Posix.Types.CSsize
                [LclId] =
                    [ww_sb0tk ww2_sb0tm ww3_sb0tn] \r [void_0E]
                        case int2Word# [ww3_sb0tn] of sat_sb0ts {
                          __DEFAULT ->
                              case
                                  __pkg_ccall base-4.11.0.0 [ww_sb0tk
                                                             ww2_sb0tm
                                                             sat_sb0ts
                                                             GHC.Prim.void#]
                              of
                              { Unit# ds11_sb0tv [Occ=Once] ->
                                    let {
                                      sat_sb0tw [Occ=Once] :: GHC.Int.Int64
                                      [LclId] =
                                          CCCS GHC.Int.I64#! [ds11_sb0tv];
                                    } in  Unit# [sat_sb0tw];
                              };
                        };
              } in 
                case
                    GHC.IO.FD.$fBufferedIOFD5
                        GHC.IO.FD.$fBufferedIOFD_loc
                        sat_sb0tx
                        GHC.IO.FD.$fBufferedIOFD3
                        GHC.Prim.void#
                of
                { Unit# ipv1_sb0tA [Occ=Once] ->
                      case ipv1_sb0tA of {
                        GHC.Int.I64# x_sb0tC [Occ=Once!] ->
                            case x_sb0tC of wild2_sb0tD {
                              __DEFAULT ->
                                  case narrow32Int# [wild2_sb0tD] of sat_sb0tE {
                                    __DEFAULT ->
                                        let {
                                          sat_sb0tF [Occ=Once] :: GHC.Types.Int
                                          [LclId] =
                                              CCCS GHC.Types.I#! [sat_sb0tE];
                                        } in  Unit# [sat_sb0tF];
                                  };
                              -1# -> Unit# [GHC.IO.FD.$fBufferedIOFD2];
                            };
                      };
                };
          0# ->
              case
                  __pkg_ccall base-4.11.0.0 [ww_sb0tk 1## 0# 0## GHC.Prim.void#]
              of
              { Unit# ds1_sb0tJ [Occ=Once] ->
                    case narrow32Int# [ds1_sb0tJ] of {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                            Unit# ds3_sb0tO [Occ=Once!] ->
                                case ds3_sb0tO of {
                                  __DEFAULT ->
                                      let {
                                        sat_sb0tX [Occ=Once]
                                          :: GHC.Types.IO System.Posix.Types.CSsize
                                        [LclId] =
                                            [ww_sb0tk ww2_sb0tm ww3_sb0tn] \r [void_0E]
                                                case int2Word# [ww3_sb0tn] of sat_sb0tS {
                                                  __DEFAULT ->
                                                      case
                                                          __pkg_ccall_GC base-4.11.0.0 [ww_sb0tk
                                                                                        ww2_sb0tm
                                                                                        sat_sb0tS
                                                                                        GHC.Prim.void#]
                                                      of
                                                      { Unit# ds11_sb0tV [Occ=Once] ->
                                                            let {
                                                              sat_sb0tW [Occ=Once] :: GHC.Int.Int64
                                                              [LclId] =
                                                                  CCCS GHC.Int.I64#! [ds11_sb0tV];
                                                            } in  Unit# [sat_sb0tW];
                                                      };
                                                };
                                      } in 
                                        case
                                            GHC.IO.FD.$fBufferedIOFD5
                                                GHC.IO.FD.$fBufferedIOFD_loc
                                                sat_sb0tX
                                                GHC.IO.FD.$fBufferedIOFD3
                                                GHC.Prim.void#
                                        of
                                        { Unit# ipv1_sb0u0 [Occ=Once] ->
                                              case ipv1_sb0u0 of {
                                                GHC.Int.I64# x_sb0u2 [Occ=Once!] ->
                                                    case x_sb0u2 of wild6_sb0u3 {
                                                      __DEFAULT ->
                                                          case
                                                              narrow32Int# [wild6_sb0u3]
                                                          of
                                                          sat_sb0u4
                                                          { __DEFAULT ->
                                                                let {
                                                                  sat_sb0u5 [Occ=Once]
                                                                    :: GHC.Types.Int
                                                                  [LclId] =
                                                                      CCCS GHC.Types.I#! [sat_sb0u4];
                                                                } in  Unit# [sat_sb0u5];
                                                          };
                                                      -1# -> Unit# [GHC.IO.FD.$fBufferedIOFD2];
                                                    };
                                              };
                                        };
                                  0# ->
                                      let {
                                        sat_sb0ud [Occ=Once]
                                          :: GHC.Types.IO System.Posix.Types.CSsize
                                        [LclId] =
                                            [ww_sb0tk ww2_sb0tm ww3_sb0tn] \r [void_0E]
                                                case int2Word# [ww3_sb0tn] of sat_sb0u8 {
                                                  __DEFAULT ->
                                                      case
                                                          __pkg_ccall base-4.11.0.0 [ww_sb0tk
                                                                                     ww2_sb0tm
                                                                                     sat_sb0u8
                                                                                     GHC.Prim.void#]
                                                      of
                                                      { Unit# ds11_sb0ub [Occ=Once] ->
                                                            let {
                                                              sat_sb0uc [Occ=Once] :: GHC.Int.Int64
                                                              [LclId] =
                                                                  CCCS GHC.Int.I64#! [ds11_sb0ub];
                                                            } in  Unit# [sat_sb0uc];
                                                      };
                                                };
                                      } in 
                                        case
                                            GHC.IO.FD.$fBufferedIOFD5
                                                GHC.IO.FD.$fBufferedIOFD_loc
                                                sat_sb0ud
                                                GHC.IO.FD.$fBufferedIOFD3
                                                GHC.Prim.void#
                                        of
                                        { Unit# ipv1_sb0ug [Occ=Once] ->
                                              case ipv1_sb0ug of {
                                                GHC.Int.I64# x_sb0ui [Occ=Once!] ->
                                                    case x_sb0ui of wild6_sb0uj {
                                                      __DEFAULT ->
                                                          case
                                                              narrow32Int# [wild6_sb0uj]
                                                          of
                                                          sat_sb0uk
                                                          { __DEFAULT ->
                                                                let {
                                                                  sat_sb0ul [Occ=Once]
                                                                    :: GHC.Types.Int
                                                                  [LclId] =
                                                                      CCCS GHC.Types.I#! [sat_sb0uk];
                                                                } in  Unit# [sat_sb0ul];
                                                          };
                                                      -1# -> Unit# [GHC.IO.FD.$fBufferedIOFD2];
                                                    };
                                              };
                                        };
                                };
                          };
                      0# -> Unit# [GHC.IO.FD.$fBufferedIOFD2];
                    };
              };
        };

GHC.IO.FD.$fRawIOFD1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0um w1_sb0un w2_sb0uo void_0E]
        case w_sb0um of {
          GHC.IO.FD.FD ww1_sb0ur [Occ=Once] ww2_sb0us [Occ=Once] ->
              case w1_sb0un of {
                GHC.Ptr.Ptr ww4_sb0uu [Occ=Once] ->
                    case w2_sb0uo of {
                      GHC.Types.I# ww6_sb0uw [Occ=Once] ->
                          GHC.IO.FD.$w$cwriteNonBlocking
                              ww1_sb0ur ww2_sb0us ww4_sb0uu ww6_sb0uw GHC.Prim.void#;
                    };
              };
        };

GHC.IO.FD.$fRawIOFD [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.IO.Device.RawIO GHC.IO.FD.FD
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.IO.Device.C:RawIO! [GHC.IO.FD.$fRawIOFD4
                                          GHC.IO.FD.$fRawIOFD3
                                          GHC.IO.FD.$fRawIOFD2
                                          GHC.IO.FD.$fRawIOFD1];

GHC.IO.FD.$fBufferedIOFD_$swriteBuf1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Word.Word8 #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,U)><S(SLLLSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w1_sb0ux w2_sb0uy void_0E]
        case w2_sb0uy of {
          GHC.IO.Buffer.Buffer ww1_sb0uB
                               ww2_sb0uC
                               ww3_sb0uD [Occ=Once]
                               ww4_sb0uE [Occ=Once]
                               ww5_sb0uF
                               ww6_sb0uG [Occ=Once] ->
              case w1_sb0ux of {
                GHC.IO.FD.FD ww8_sb0uI [Occ=Once] ww9_sb0uJ [Occ=Once] ->
                    case -# [ww6_sb0uG ww5_sb0uF] of sat_sb0uL {
                      __DEFAULT ->
                          case plusAddr# [ww1_sb0uB ww5_sb0uF] of sat_sb0uK {
                            __DEFAULT ->
                                case
                                    GHC.IO.FD.$wfdWrite
                                        ww8_sb0uI ww9_sb0uJ sat_sb0uK sat_sb0uL GHC.Prim.void#
                                of
                                { Unit# _ [Occ=Dead] ->
                                      case touch# [ww2_sb0uC GHC.Prim.void#] of s'_sb0uP {
                                        (##) ->
                                            let {
                                              sat_sb0uQ [Occ=Once]
                                                :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                              [LclId] =
                                                  CCCS GHC.IO.Buffer.Buffer! [ww1_sb0uB
                                                                              ww2_sb0uC
                                                                              ww3_sb0uD
                                                                              ww4_sb0uE
                                                                              0#
                                                                              0#];
                                            } in  Unit# [sat_sb0uQ];
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.FD.fdIsNonBlocking :: GHC.IO.FD.FD -> GHC.Types.Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LS),1*U(A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_sb0uR]
        case ds_sb0uR of {
          GHC.IO.FD.FD _ [Occ=Dead] dt1_sb0uU [Occ=Once] ->
              GHC.Types.I# [dt1_sb0uU];
        };

GHC.IO.FD.fdFD :: GHC.IO.FD.FD -> Foreign.C.Types.CInt
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_sb0uV]
        case ds_sb0uV of {
          GHC.IO.FD.FD dt_sb0uX [Occ=Once] _ [Occ=Dead] ->
              GHC.Int.I32# [dt_sb0uX];
        };

GHC.IO.FD.$fShowFD_$cshow :: GHC.IO.FD.FD -> GHC.Base.String
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)>m2,
 Unf=OtherCon []] =
    [] \r [fd_sb0uZ]
        case fd_sb0uZ of {
          GHC.IO.FD.FD dt_sb0v1 [Occ=Once] _ [Occ=Dead] ->
              case GHC.Show.$wshowSignedInt 0# dt_sb0v1 GHC.Types.[] of {
                (#,#) ww5_sb0v4 [Occ=Once] ww6_sb0v5 [Occ=Once] ->
                    : [ww5_sb0v4 ww6_sb0v5];
              };
        };

GHC.IO.FD.$fBufferedIOFD15
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Word.Word8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,A><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [_dev_sb0v6 state_sb0v7 void_0E]
        case newMutVar# [GHC.ForeignPtr.NoFinalizers GHC.Prim.void#] of {
          Unit# ipv1_sb0vb [Occ=Once] ->
              case newPinnedByteArray# [8192# GHC.Prim.void#] of {
                Unit# ipv3_sb0ve ->
                    let {
                      sat_sb0vg [Occ=Once] :: GHC.ForeignPtr.ForeignPtrContents
                      [LclId] =
                          CCCS GHC.ForeignPtr.MallocPtr! [ipv3_sb0ve ipv1_sb0vb];
                    } in 
                      case byteArrayContents# [ipv3_sb0ve] of sat_sb0vf {
                        __DEFAULT ->
                            let {
                              sat_sb0vh [Occ=Once] :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                              [LclId] =
                                  CCCS GHC.IO.Buffer.Buffer! [sat_sb0vf
                                                              sat_sb0vg
                                                              state_sb0v7
                                                              8192#
                                                              0#
                                                              0#];
                            } in  Unit# [sat_sb0vh];
                      };
              };
        };

GHC.IO.FD.$fIODeviceFD12
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=2, Str=<L,1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [fd_sb0vi void_0E]
        let {
          sat_sb0vn [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_sb0vi] \s []
                  case fd_sb0vi of {
                    GHC.IO.FD.FD dt_sb0vl [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_sb0vl];
                  };
        } in  System.Posix.Internals.fdFileSize1 sat_sb0vn GHC.Prim.void#;

GHC.IO.FD.$fIODeviceFD9
  :: GHC.IO.FD.FD
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<L,1*U(U,A)><L,1*U><S,U>, Unf=OtherCon []] =
    [] \r [fd_sb0vo on_sb0vp void_0E]
        let {
          sat_sb0vu [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_sb0vo] \s []
                  case fd_sb0vo of {
                    GHC.IO.FD.FD dt_sb0vs [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_sb0vs];
                  };
        } in 
          System.Posix.Internals.setEcho1 sat_sb0vu on_sb0vp GHC.Prim.void#;

GHC.IO.FD.$fIODeviceFD8
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId, Arity=2, Str=<L,1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [fd_sb0vv void_0E]
        let {
          sat_sb0vA [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_sb0vv] \s []
                  case fd_sb0vv of {
                    GHC.IO.FD.FD dt_sb0vy [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_sb0vy];
                  };
        } in 
          System.Posix.Internals.getEcho3
              sat_sb0vA System.Posix.Internals.getEcho2 GHC.Prim.void#;

GHC.IO.FD.$fIODeviceFD7
  :: GHC.IO.FD.FD
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<L,1*U(U,A)><L,1*U><S,U>, Unf=OtherCon []] =
    [] \r [fd_sb0vB raw_sb0vC void_0E]
        let {
          sat_sb0vJ [Occ=Once] :: GHC.Types.Bool
          [LclId] =
              [raw_sb0vC] \u []
                  case raw_sb0vC of {
                    GHC.Types.False -> GHC.Types.True [];
                    GHC.Types.True -> GHC.Types.False [];
                  }; } in
        let {
          sat_sb0vH [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_sb0vB] \s []
                  case fd_sb0vB of {
                    GHC.IO.FD.FD dt_sb0vF [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_sb0vF];
                  };
        } in 
          System.Posix.Internals.setCooked1
              sat_sb0vH sat_sb0vJ GHC.Prim.void#;

GHC.IO.FD.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.IO.FD.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.FD.$trModule4];

GHC.IO.FD.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD"#;

GHC.IO.FD.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.FD.$trModule2];

GHC.IO.FD.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.IO.FD.$trModule3
                                     GHC.IO.FD.$trModule1];

$krep_raWV0 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcInt
                                              GHC.Types.[]];

$krep1_raWV1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCInt
                                              GHC.Types.[]];

GHC.IO.FD.$tcFD2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "FD"#;

GHC.IO.FD.$tcFD1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.FD.$tcFD2];

GHC.IO.FD.$tcFD :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10838815552519039062##
                                    15546290101957756376##
                                    GHC.IO.FD.$trModule
                                    GHC.IO.FD.$tcFD1
                                    0#
                                    GHC.Types.krep$*];

$krep2_raWV2 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.IO.FD.$tcFD
                                              GHC.Types.[]];

$krep3_raWV3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_raWV0 $krep2_raWV2];

GHC.IO.FD.$tc'FD1 [InlPrag=NOUSERINLINE[~]] :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_raWV1 $krep3_raWV3];

GHC.IO.FD.$tc'FD3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'FD"#;

GHC.IO.FD.$tc'FD2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.FD.$tc'FD3];

GHC.IO.FD.$tc'FD :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9025179437427398028##
                                    18071003818566613836##
                                    GHC.IO.FD.$trModule
                                    GHC.IO.FD.$tc'FD2
                                    0#
                                    GHC.IO.FD.$tc'FD1];

GHC.IO.FD.$fShowFD_$cshowsPrec
  :: GHC.Types.Int -> GHC.IO.FD.FD -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,A><S(SL),1*U(U,A)><L,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_sb0vK x_sb0vL s_sb0vM]
        case x_sb0vL of {
          GHC.IO.FD.FD dt_sb0vO [Occ=Once] _ [Occ=Dead] ->
              case GHC.Show.$wshowSignedInt 0# dt_sb0vO GHC.Types.[] of {
                (#,#) ww5_sb0vR [Occ=Once] ww6_sb0vS [Occ=Once] ->
                    let {
                      sat_sb0vT [Occ=Once] :: [GHC.Types.Char]
                      [LclId] =
                          CCCS :! [ww5_sb0vR ww6_sb0vS];
                    } in  GHC.Base.++ sat_sb0vT s_sb0vM;
              };
        };

GHC.IO.FD.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int# -> GHC.Base.String -> [GHC.Types.Char]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U>,
 Unf=OtherCon []] =
    [] \r [ww_sb0vU w_sb0vV]
        case GHC.Show.$wshowSignedInt 0# ww_sb0vU GHC.Types.[] of {
          (#,#) ww5_sb0vX [Occ=Once] ww6_sb0vY [Occ=Once] ->
              let {
                sat_sb0vZ [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    CCCS :! [ww5_sb0vX ww6_sb0vY];
              } in  GHC.Base.++ sat_sb0vZ w_sb0vV;
        };

GHC.IO.FD.$fShowFD1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><L,1*U>,
 Unf=OtherCon []] =
    [] \r [w_sb0w0 w1_sb0w1]
        case w_sb0w0 of {
          GHC.IO.FD.FD ww1_sb0w3 [Occ=Once] _ [Occ=Dead] ->
              GHC.IO.FD.$wlvl ww1_sb0w3 w1_sb0w1;
        };

GHC.IO.FD.$fShowFD_$cshowList :: [GHC.IO.FD.FD] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=OtherCon []] =
    [] \r [ls_sb0w5 s_sb0w6]
        GHC.Show.showList__ GHC.IO.FD.$fShowFD1 ls_sb0w5 s_sb0w6;

GHC.IO.FD.$fShowFD [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.IO.FD.FD
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.IO.FD.$fShowFD_$cshowsPrec
                                    GHC.IO.FD.$fShowFD_$cshow
                                    GHC.IO.FD.$fShowFD_$cshowList];

output_flags_raWV4 :: GHC.Int.Int32
[GblId] =
    [] \u []
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
          Unit# ds1_sb0wa [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                Unit# ds3_sb0we [Occ=Once] ->
                    case narrow32Int# [ds3_sb0we] of sat_sb0wh {
                      __DEFAULT ->
                          case int2Word# [sat_sb0wh] of sat_sb0wi {
                            __DEFAULT ->
                                case narrow32Int# [ds1_sb0wa] of sat_sb0wf {
                                  __DEFAULT ->
                                      case int2Word# [sat_sb0wf] of sat_sb0wg {
                                        __DEFAULT ->
                                            case or# [sat_sb0wg sat_sb0wi] of sat_sb0wj {
                                              __DEFAULT ->
                                                  case word2Int# [sat_sb0wj] of sat_sb0wk {
                                                    __DEFAULT -> GHC.Int.I32# [sat_sb0wk];
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

write_flags_raWV5 :: GHC.Int.Int32
[GblId] =
    [] \u []
        case output_flags_raWV4 of {
          GHC.Int.I32# x#_sb0wm [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                Unit# ds1_sb0wq [Occ=Once] ->
                    case narrow32Int# [ds1_sb0wq] of sat_sb0ws {
                      __DEFAULT ->
                          case int2Word# [sat_sb0ws] of sat_sb0wt {
                            __DEFAULT ->
                                case int2Word# [x#_sb0wm] of sat_sb0wr {
                                  __DEFAULT ->
                                      case or# [sat_sb0wr sat_sb0wt] of sat_sb0wu {
                                        __DEFAULT ->
                                            case word2Int# [sat_sb0wu] of sat_sb0wv {
                                              __DEFAULT -> GHC.Int.I32# [sat_sb0wv];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

append_flags_raWV6 :: GHC.Int.Int32
[GblId] =
    [] \u []
        case write_flags_raWV5 of {
          GHC.Int.I32# x#_sb0wx [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                Unit# ds1_sb0wB [Occ=Once] ->
                    case narrow32Int# [ds1_sb0wB] of sat_sb0wD {
                      __DEFAULT ->
                          case int2Word# [sat_sb0wD] of sat_sb0wE {
                            __DEFAULT ->
                                case int2Word# [x#_sb0wx] of sat_sb0wC {
                                  __DEFAULT ->
                                      case or# [sat_sb0wC sat_sb0wE] of sat_sb0wF {
                                        __DEFAULT ->
                                            case word2Int# [sat_sb0wF] of sat_sb0wG {
                                              __DEFAULT -> GHC.Int.I32# [sat_sb0wG];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

rw_flags_raWV7 :: GHC.Int.Int32
[GblId] =
    [] \u []
        case output_flags_raWV4 of {
          GHC.Int.I32# x#_sb0wI [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                Unit# ds1_sb0wM [Occ=Once] ->
                    case narrow32Int# [ds1_sb0wM] of sat_sb0wO {
                      __DEFAULT ->
                          case int2Word# [sat_sb0wO] of sat_sb0wP {
                            __DEFAULT ->
                                case int2Word# [x#_sb0wI] of sat_sb0wN {
                                  __DEFAULT ->
                                      case or# [sat_sb0wN sat_sb0wP] of sat_sb0wQ {
                                        __DEFAULT ->
                                            case word2Int# [sat_sb0wQ] of sat_sb0wR {
                                              __DEFAULT -> GHC.Int.I32# [sat_sb0wR];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

read_flags_raWV8 :: GHC.Int.Int32
[GblId] =
    [] \u []
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
          Unit# ds1_sb0wV [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                Unit# ds3_sb0wZ [Occ=Once] ->
                    case narrow32Int# [ds3_sb0wZ] of sat_sb0x2 {
                      __DEFAULT ->
                          case int2Word# [sat_sb0x2] of sat_sb0x3 {
                            __DEFAULT ->
                                case narrow32Int# [ds1_sb0wV] of sat_sb0x0 {
                                  __DEFAULT ->
                                      case int2Word# [sat_sb0x0] of sat_sb0x1 {
                                        __DEFAULT ->
                                            case or# [sat_sb0x1 sat_sb0x3] of sat_sb0x4 {
                                              __DEFAULT ->
                                                  case word2Int# [sat_sb0x4] of sat_sb0x5 {
                                                    __DEFAULT -> GHC.Int.I32# [sat_sb0x5];
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.FD.$fIODeviceFD16
  :: System.Posix.Types.COff -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [ds1_sb0x6]
        case ds1_sb0x6 of {
          GHC.Int.I64# x_sb0x8 [Occ=Once!] ->
              case x_sb0x8 of {
                __DEFAULT -> GHC.Types.False [];
                -1# -> GHC.Types.True [];
              };
        };

GHC.IO.FD.$fIODeviceFD15 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetPosn"#;

GHC.IO.FD.$fIODeviceFD14 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fIODeviceFD15;

GHC.IO.FD.$w$ctell [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=2, Str=<L,U><L,U>, Unf=OtherCon []] =
    [] \r [ww_sb0xa void_0E]
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
          Unit# ds1_sb0xf [Occ=Once] ->
              let {
                sat_sb0xn [Occ=Once] :: GHC.Types.IO System.Posix.Types.COff
                [LclId] =
                    [ww_sb0xa ds1_sb0xf] \r [void_0E]
                        case narrow32Int# [ds1_sb0xf] of sat_sb0xi {
                          __DEFAULT ->
                              case
                                  __pkg_ccall base-4.11.0.0 [ww_sb0xa 0# sat_sb0xi GHC.Prim.void#]
                              of
                              { Unit# ds11_sb0xl [Occ=Once] ->
                                    let {
                                      sat_sb0xm [Occ=Once] :: GHC.Int.Int64
                                      [LclId] =
                                          CCCS GHC.Int.I64#! [ds11_sb0xl];
                                    } in  Unit# [sat_sb0xm];
                              };
                        };
              } in 
                case
                    Foreign.C.Error.throwErrnoIfMinus1Retry2
                        GHC.IO.FD.$fIODeviceFD16
                        GHC.IO.FD.$fIODeviceFD14
                        sat_sb0xn
                        GHC.Prim.void#
                of
                { Unit# ipv1_sb0xq [Occ=Once] ->
                      let {
                        sat_sb0xr [Occ=Once] :: GHC.Integer.Type.Integer
                        [LclId] =
                            [ipv1_sb0xq] \u [] GHC.Int.$fIntegralInt64_$ctoInteger ipv1_sb0xq;
                      } in  Unit# [sat_sb0xr];
                };
        };

GHC.IO.FD.$fIODeviceFD13 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=2, Str=<S(SL),1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [w_sb0xs void_0E]
        case w_sb0xs of {
          GHC.IO.FD.FD ww1_sb0xv [Occ=Once] _ [Occ=Dead] ->
              GHC.IO.FD.$w$ctell ww1_sb0xv GHC.Prim.void#;
        };

GHC.IO.FD.$fIODeviceFD19 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "seek"#;

GHC.IO.FD.$fIODeviceFD18 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fIODeviceFD19;

GHC.IO.FD.$w$cseek [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.IO.Device.SeekMode
     -> GHC.Integer.Type.Integer
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=4, Str=<L,U><S,1*U><S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ww_sb0xx w_sb0xy w1_sb0xz void_0E]
        case GHC.Integer.Type.integerToInt w1_sb0xz of wild_sb0xB {
          __DEFAULT ->
              let-no-escape {
                $j_sb0xC [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                  :: GHC.Prim.Int# -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                    sat-only [ww_sb0xx wild_sb0xB] \r [ds8_sb0xD]
                        let {
                          sat_sb0xK [Occ=Once] :: GHC.Types.IO System.Posix.Types.COff
                          [LclId] =
                              [ww_sb0xx wild_sb0xB ds8_sb0xD] \r [void_0E]
                                  case
                                      __pkg_ccall base-4.11.0.0 [ww_sb0xx
                                                                 wild_sb0xB
                                                                 ds8_sb0xD
                                                                 GHC.Prim.void#]
                                  of
                                  { Unit# ds11_sb0xI [Occ=Once] ->
                                        let {
                                          sat_sb0xJ [Occ=Once] :: GHC.Int.Int64
                                          [LclId] =
                                              CCCS GHC.Int.I64#! [ds11_sb0xI];
                                        } in  Unit# [sat_sb0xJ];
                                  };
                        } in 
                          case
                              Foreign.C.Error.throwErrnoIfMinus1Retry2
                                  GHC.IO.FD.$fIODeviceFD16
                                  GHC.IO.FD.$fIODeviceFD18
                                  sat_sb0xK
                                  GHC.Prim.void#
                          of
                          { Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
                          };
              } in 
                case w_sb0xy of {
                  GHC.IO.Device.AbsoluteSeek ->
                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                        Unit# ds1_sb0xS [Occ=Once] ->
                            case narrow32Int# [ds1_sb0xS] of sat_sb0xT {
                              __DEFAULT -> $j_sb0xC sat_sb0xT;
                            };
                      };
                  GHC.IO.Device.RelativeSeek ->
                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                        Unit# ds1_sb0xX [Occ=Once] ->
                            case narrow32Int# [ds1_sb0xX] of sat_sb0xY {
                              __DEFAULT -> $j_sb0xC sat_sb0xY;
                            };
                      };
                  GHC.IO.Device.SeekFromEnd ->
                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                        Unit# ds1_sb0y2 [Occ=Once] ->
                            case narrow32Int# [ds1_sb0y2] of sat_sb0y3 {
                              __DEFAULT -> $j_sb0xC sat_sb0y3;
                            };
                      };
                };
        };

GHC.IO.FD.$fIODeviceFD17 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.Device.SeekMode
     -> GHC.Integer.Type.Integer
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<S(SL),1*U(U,A)><S,1*U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0y4 w1_sb0y5 w2_sb0y6 void_0E]
        case w_sb0y4 of {
          GHC.IO.FD.FD ww1_sb0y9 [Occ=Once] _ [Occ=Dead] ->
              GHC.IO.FD.$w$cseek ww1_sb0y9 w1_sb0y5 w2_sb0y6 GHC.Prim.void#;
        };

GHC.IO.FD.stdin :: GHC.IO.FD.FD
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.FD.FD! [0# 0#];

GHC.IO.FD.stdout :: GHC.IO.FD.FD
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.FD.FD! [1# 0#];

GHC.IO.FD.stderr :: GHC.IO.FD.FD
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.FD.FD! [2# 0#];

lvl3_raWV9 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.setSize"#;

lvl4_raWVa :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl3_raWV9;

GHC.IO.FD.$fIODeviceFD11
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [void_0E ds2_sb0yc]
        case narrow32Int# [ds2_sb0yc] of sat_sb0yd {
          __DEFAULT ->
              Foreign.C.Error.$wlvl lvl4_raWVa sat_sb0yd GHC.Prim.void#;
        };

GHC.IO.FD.$wsetSize [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Integer.Type.Integer
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<S,U><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [ww_sb0ye w_sb0yf void_0E]
        case GHC.Integer.Type.integerToInt w_sb0yf of wild_sb0yh {
          __DEFAULT ->
              case
                  __pkg_ccall base-4.11.0.0 [ww_sb0ye wild_sb0yh GHC.Prim.void#]
              of
              { Unit# ds8_sb0yl [Occ=Once] ->
                    case narrow32Int# [ds8_sb0yl] of {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                            Unit# ds2_sb0yq [Occ=Once] ->
                                GHC.IO.FD.$fIODeviceFD11 GHC.Prim.void# ds2_sb0yq;
                          };
                      0# -> Unit# [GHC.Tuple.()];
                    };
              };
        };

GHC.IO.FD.$fIODeviceFD10 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Integer.Type.Integer
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Str=<S(SL),1*U(U,A)><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0ys w1_sb0yt void_0E]
        case w_sb0ys of {
          GHC.IO.FD.FD ww1_sb0yw [Occ=Once] _ [Occ=Dead] ->
              GHC.IO.FD.$wsetSize ww1_sb0yw w1_sb0yt GHC.Prim.void#;
        };

GHC.IO.FD.writeRawBufferPtr
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Types.IO Foreign.C.Types.CInt
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.FD.writeRawBufferPtr1
            eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.FD.readRawBufferPtrNoBlock
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.FD.readRawBufferPtrNoBlock1
            eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.FD.readRawBufferPtr
  :: GHC.Base.String
     -> GHC.IO.FD.FD
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> Foreign.C.Types.CSize
     -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.FD.$fRawIOFD5
            eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.FD.$w$cfillReadBuffer0 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Base.Maybe GHC.Types.Int,
            GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=9,
 Str=<S,U><S,1*U><S,U><L,U><L,U><S,U><L,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sb0yy
           ww1_sb0yz
           ww2_sb0yA
           ww3_sb0yB
           ww4_sb0yC
           ww5_sb0yD
           ww6_sb0yE
           ww7_sb0yF
           void_0E]
        case -# [ww5_sb0yD ww7_sb0yF] of sat_sb0yI {
          __DEFAULT ->
              case int2Word# [sat_sb0yI] of sat_sb0yJ {
                __DEFAULT ->
                    case plusAddr# [ww2_sb0yA ww7_sb0yF] of sat_sb0yH {
                      __DEFAULT ->
                          case
                              GHC.IO.FD.$wreadRawBufferPtrNoBlock
                                  GHC.IO.FD.$fBufferedIOFD8
                                  ww_sb0yy
                                  ww1_sb0yz
                                  sat_sb0yH
                                  0#
                                  sat_sb0yJ
                                  GHC.Prim.void#
                          of
                          { Unit# ipv1_sb0yM [Occ=Once!] ->
                                case ipv1_sb0yM of wild_sb0yN {
                                  GHC.Types.I# ds_sb0yO [Occ=Once!] ->
                                      case ds_sb0yO of ds2_sb0yP {
                                        __DEFAULT ->
                                            case touch# [ww3_sb0yB GHC.Prim.void#] of s'_sb0yQ {
                                              (##) ->
                                                  case +# [ww7_sb0yF ds2_sb0yP] of sat_sb0yS {
                                                    __DEFAULT ->
                                                        let {
                                                          sat_sb0yT [Occ=Once]
                                                            :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                                          [LclId] =
                                                              CCCS GHC.IO.Buffer.Buffer! [ww2_sb0yA
                                                                                          ww3_sb0yB
                                                                                          ww4_sb0yC
                                                                                          ww5_sb0yD
                                                                                          ww6_sb0yE
                                                                                          sat_sb0yS]; } in
                                                        let {
                                                          sat_sb0yR [Occ=Once]
                                                            :: GHC.Base.Maybe GHC.Types.Int
                                                          [LclId] =
                                                              CCCS GHC.Base.Just! [wild_sb0yN]; } in
                                                        let {
                                                          sat_sb0yU [Occ=Once]
                                                            :: (GHC.Base.Maybe GHC.Types.Int,
                                                                GHC.IO.Buffer.Buffer GHC.Word.Word8)
                                                          [LclId] =
                                                              CCCS (,)! [sat_sb0yR sat_sb0yT];
                                                        } in  Unit# [sat_sb0yU];
                                                  };
                                            };
                                        -1# ->
                                            case touch# [ww3_sb0yB GHC.Prim.void#] of s'_sb0yV {
                                              (##) ->
                                                  let {
                                                    sat_sb0yW [Occ=Once]
                                                      :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                                    [LclId] =
                                                        CCCS GHC.IO.Buffer.Buffer! [ww2_sb0yA
                                                                                    ww3_sb0yB
                                                                                    ww4_sb0yC
                                                                                    ww5_sb0yD
                                                                                    ww6_sb0yE
                                                                                    ww7_sb0yF]; } in
                                                  let {
                                                    sat_sb0yX [Occ=Once]
                                                      :: (GHC.Base.Maybe GHC.Types.Int,
                                                          GHC.IO.Buffer.Buffer GHC.Word.Word8)
                                                    [LclId] =
                                                        CCCS (,)! [GHC.Base.Nothing sat_sb0yW];
                                                  } in  Unit# [sat_sb0yX];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.FD.$fBufferedIOFD7 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Base.Maybe GHC.Types.Int,
            GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,1*U)><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0yY w1_sb0yZ void_0E]
        case w_sb0yY of {
          GHC.IO.FD.FD ww1_sb0z2 [Occ=Once] ww2_sb0z3 [Occ=Once] ->
              case w1_sb0yZ of {
                GHC.IO.Buffer.Buffer ww4_sb0z5 [Occ=Once]
                                     ww5_sb0z6 [Occ=Once]
                                     ww6_sb0z7 [Occ=Once]
                                     ww7_sb0z8 [Occ=Once]
                                     ww8_sb0z9 [Occ=Once]
                                     ww9_sb0za [Occ=Once] ->
                    GHC.IO.FD.$w$cfillReadBuffer0
                        ww1_sb0z2
                        ww2_sb0z3
                        ww4_sb0z5
                        ww5_sb0z6
                        ww6_sb0z7
                        ww7_sb0z8
                        ww8_sb0z9
                        ww9_sb0za
                        GHC.Prim.void#;
              };
        };

GHC.IO.FD.$w$cflushWriteBuffer0 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=9,
 Str=<S,U><S,1*U><S,U><L,U><L,U><L,U><S,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sb0zb
           ww1_sb0zc
           ww2_sb0zd
           ww3_sb0ze
           ww4_sb0zf
           ww5_sb0zg
           ww6_sb0zh
           ww7_sb0zi
           void_0E]
        case -# [ww7_sb0zi ww6_sb0zh] of sat_sb0zl {
          __DEFAULT ->
              case plusAddr# [ww2_sb0zd ww6_sb0zh] of sat_sb0zk {
                __DEFAULT ->
                    case
                        GHC.IO.FD.$w$cwriteNonBlocking
                            ww_sb0zb ww1_sb0zc sat_sb0zk sat_sb0zl GHC.Prim.void#
                    of
                    { Unit# ipv1_sb0zo ->
                          case touch# [ww3_sb0ze GHC.Prim.void#] of s'_sb0zp {
                            (##) ->
                                let {
                                  sat_sb0zu [Occ=Once] :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                  [LclId] =
                                      [ww2_sb0zd
                                       ww3_sb0ze
                                       ww4_sb0zf
                                       ww5_sb0zg
                                       ww6_sb0zh
                                       ww7_sb0zi
                                       ipv1_sb0zo] \u []
                                          case ipv1_sb0zo of {
                                            GHC.Types.I# y_sb0zr [Occ=Once] ->
                                                case +# [ww6_sb0zh y_sb0zr] of x_sb0zs [Dmd=<S,U>] {
                                                  __DEFAULT ->
                                                      case ==# [x_sb0zs ww7_sb0zi] of {
                                                        __DEFAULT ->
                                                            GHC.IO.Buffer.Buffer [ww2_sb0zd
                                                                                  ww3_sb0ze
                                                                                  ww4_sb0zf
                                                                                  ww5_sb0zg
                                                                                  x_sb0zs
                                                                                  ww7_sb0zi];
                                                        1# ->
                                                            GHC.IO.Buffer.Buffer [ww2_sb0zd
                                                                                  ww3_sb0ze
                                                                                  ww4_sb0zf
                                                                                  ww5_sb0zg
                                                                                  0#
                                                                                  0#];
                                                      };
                                                };
                                          }; } in
                                let {
                                  sat_sb0zv [Occ=Once]
                                    :: (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8)
                                  [LclId] =
                                      CCCS (,)! [ipv1_sb0zo sat_sb0zu];
                                } in  Unit# [sat_sb0zv];
                          };
                    };
              };
        };

GHC.IO.FD.$fBufferedIOFD1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,1*U)><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0zw w1_sb0zx void_0E]
        case w_sb0zw of {
          GHC.IO.FD.FD ww1_sb0zA [Occ=Once] ww2_sb0zB [Occ=Once] ->
              case w1_sb0zx of {
                GHC.IO.Buffer.Buffer ww4_sb0zD [Occ=Once]
                                     ww5_sb0zE [Occ=Once]
                                     ww6_sb0zF [Occ=Once]
                                     ww7_sb0zG [Occ=Once]
                                     ww8_sb0zH [Occ=Once]
                                     ww9_sb0zI [Occ=Once] ->
                    GHC.IO.FD.$w$cflushWriteBuffer0
                        ww1_sb0zA
                        ww2_sb0zB
                        ww4_sb0zD
                        ww5_sb0zE
                        ww6_sb0zF
                        ww7_sb0zG
                        ww8_sb0zH
                        ww9_sb0zI
                        GHC.Prim.void#;
              };
        };

GHC.IO.FD.$fIODeviceFD21
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [fd_sb0zJ void_0E]
        case fd_sb0zJ of {
          GHC.IO.FD.FD dt_sb0zM [Occ=Once] _ [Occ=Dead] ->
              case __pkg_ccall base-4.11.0.0 [dt_sb0zM GHC.Prim.void#] of {
                Unit# ds5_sb0zR [Occ=Once] ->
                    let {
                      sat_sb0zT [Occ=Once] :: GHC.Types.Bool
                      [LclId] =
                          [ds5_sb0zR] \u []
                              case narrow32Int# [ds5_sb0zR] of {
                                __DEFAULT -> GHC.Types.True [];
                                0# -> GHC.Types.False [];
                              };
                    } in  Unit# [sat_sb0zT];
              };
        };

GHC.IO.FD.$fIODeviceFD25 :: Foreign.C.Types.CInt -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [ds1_sb0zU]
        case ds1_sb0zU of {
          GHC.Int.I32# x_sb0zW [Occ=Once!] ->
              case x_sb0zW of {
                __DEFAULT -> GHC.Types.False [];
                -1# -> GHC.Types.True [];
              };
        };

GHC.IO.FD.$fIODeviceFD29 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.ready"#;

GHC.IO.FD.$fIODeviceFD28 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fIODeviceFD29;

GHC.IO.FD.$w$cready [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId, Arity=4, Str=<S,U><S,1*U><S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_sb0zY w_sb0zZ ww1_sb0A0 void_0E]
        let-no-escape {
          $j_sb0A2 [Occ=Once*!T[1], Dmd=<C(S),1*C1(U(U,U))>]
            :: GHC.Prim.Int#
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
          [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
              sat-only [ww_sb0zY ww1_sb0A0] \r [i_sb0A3]
                  let {
                    sat_sb0Ad [Occ=Once] :: GHC.Types.IO Foreign.C.Types.CInt
                    [LclId] =
                        [ww_sb0zY ww1_sb0A0 i_sb0A3] \r [void_0E]
                            case int2Word# [i_sb0A3] of sat_sb0A6 {
                              __DEFAULT ->
                                  case narrow8Word# [sat_sb0A6] of sat_sb0A7 {
                                    __DEFAULT ->
                                        case
                                            __pkg_ccall_GC base-4.11.0.0 [ww_sb0zY
                                                                          sat_sb0A7
                                                                          ww1_sb0A0
                                                                          0##
                                                                          GHC.Prim.void#]
                                        of
                                        { Unit# ds2_sb0Aa [Occ=Once] ->
                                              case narrow32Int# [ds2_sb0Aa] of sat_sb0Ab {
                                                __DEFAULT ->
                                                    let {
                                                      sat_sb0Ac [Occ=Once] :: GHC.Int.Int32
                                                      [LclId] =
                                                          CCCS GHC.Int.I32#! [sat_sb0Ab];
                                                    } in  Unit# [sat_sb0Ac];
                                              };
                                        };
                                  };
                            };
                  } in 
                    case
                        Foreign.C.Error.throwErrnoIfMinus1Retry2
                            GHC.IO.FD.$fIODeviceFD25
                            GHC.IO.FD.$fIODeviceFD28
                            sat_sb0Ad
                            GHC.Prim.void#
                    of
                    { Unit# ipv1_sb0Ag [Occ=Once] ->
                          let {
                            sat_sb0Ak [Occ=Once] :: GHC.Types.Bool
                            [LclId] =
                                [ipv1_sb0Ag] \u []
                                    case ipv1_sb0Ag of {
                                      GHC.Int.I32# x#_sb0Ai [Occ=Once!] ->
                                          case x#_sb0Ai of {
                                            __DEFAULT -> GHC.Enum.$fEnumBool1;
                                            0# -> GHC.Types.False [];
                                            1# -> GHC.Types.True [];
                                          };
                                    };
                          } in  Unit# [sat_sb0Ak];
                    };
        } in 
          case w_sb0zZ of {
            GHC.Types.False -> $j_sb0A2 0#;
            GHC.Types.True -> $j_sb0A2 1#;
          };

GHC.IO.FD.$fIODeviceFD27 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Types.Bool
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=4,
 Str=<S(SL),1*U(U,A)><S,1*U><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0Am w1_sb0An w2_sb0Ao void_0E]
        case w_sb0Am of {
          GHC.IO.FD.FD ww1_sb0Ar [Occ=Once] _ [Occ=Dead] ->
              case w2_sb0Ao of {
                GHC.Types.I# ww4_sb0Au [Occ=Once] ->
                    GHC.IO.FD.$w$cready ww1_sb0Ar w1_sb0An ww4_sb0Au GHC.Prim.void#;
              };
        };

GHC.IO.FD.setNonBlockingMode1
  :: GHC.IO.FD.FD
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FD.FD #)
[GblId, Arity=3, Str=<S(SL),1*U(U,A)><L,U><S,U>, Unf=OtherCon []] =
    [] \r [fd_sb0Av set_sb0Aw void_0E]
        case fd_sb0Av of {
          GHC.IO.FD.FD dt_sb0Az _ [Occ=Dead] ->
              case
                  System.Posix.Internals.$wsetNonBlockingFD
                      dt_sb0Az set_sb0Aw GHC.Prim.void#
              of
              { Unit# _ [Occ=Dead] ->
                    let {
                      sat_sb0AF [Occ=Once] :: GHC.IO.FD.FD
                      [LclId] =
                          [set_sb0Aw dt_sb0Az] \u []
                              case set_sb0Aw of {
                                GHC.Types.False -> GHC.IO.FD.FD [dt_sb0Az 0#];
                                GHC.Types.True -> GHC.IO.FD.FD [dt_sb0Az 1#];
                              };
                    } in  Unit# [sat_sb0AF];
              };
        };

GHC.IO.FD.setNonBlockingMode
  :: GHC.IO.FD.FD -> GHC.Types.Bool -> GHC.Types.IO GHC.IO.FD.FD
[GblId, Arity=3, Str=<S(SL),1*U(U,A)><L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.IO.FD.setNonBlockingMode1 eta_B3 eta_B2 GHC.Prim.void#;

lvl5_raWVb :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.dup2"#;

lvl6_raWVc :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl5_raWVb;

GHC.IO.FD.$fIODeviceFD2
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [void_0E ds3_sb0AH]
        case narrow32Int# [ds3_sb0AH] of sat_sb0AI {
          __DEFAULT ->
              Foreign.C.Error.$wlvl lvl6_raWVc sat_sb0AI GHC.Prim.void#;
        };

GHC.IO.FD.$w$cdup2 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FD.FD #)
[GblId, Arity=4, Str=<S,U><L,U><S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_sb0AJ ww1_sb0AK ww2_sb0AL void_0E]
        case
            __pkg_ccall base-4.11.0.0 [ww_sb0AJ ww2_sb0AL GHC.Prim.void#]
        of
        { Unit# ds8_sb0AQ [Occ=Once] ->
              case narrow32Int# [ds8_sb0AQ] of {
                __DEFAULT ->
                    let {
                      sat_sb0AS [Occ=Once] :: GHC.IO.FD.FD
                      [LclId] =
                          CCCS GHC.IO.FD.FD! [ww2_sb0AL ww1_sb0AK];
                    } in  Unit# [sat_sb0AS];
                -1# ->
                    case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                      Unit# ds3_sb0AW [Occ=Once] ->
                          GHC.IO.FD.$fIODeviceFD2 GHC.Prim.void# ds3_sb0AW;
                    };
              };
        };

GHC.IO.FD.$fIODeviceFD1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FD.FD #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,U)><S(SL),1*U(U,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0AY w1_sb0AZ void_0E]
        case w_sb0AY of {
          GHC.IO.FD.FD ww1_sb0B2 [Occ=Once] ww2_sb0B3 [Occ=Once] ->
              case w1_sb0AZ of {
                GHC.IO.FD.FD ww4_sb0B5 [Occ=Once] _ [Occ=Dead] ->
                    GHC.IO.FD.$w$cdup2 ww1_sb0B2 ww2_sb0B3 ww4_sb0B5 GHC.Prim.void#;
              };
        };

GHC.IO.FD.$fIODeviceFD5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.dup"#;

GHC.IO.FD.$fIODeviceFD4 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fIODeviceFD5;

GHC.IO.FD.$w$cdup [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FD.FD #)
[GblId, Arity=3, Str=<S,U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_sb0B7 ww1_sb0B8 void_0E]
        case __pkg_ccall base-4.11.0.0 [ww_sb0B7 GHC.Prim.void#] of {
          Unit# ds5_sb0Bd [Occ=Once] ->
              case narrow32Int# [ds5_sb0Bd] of wild1_sb0Be {
                __DEFAULT ->
                    let {
                      sat_sb0Bf [Occ=Once] :: GHC.IO.FD.FD
                      [LclId] =
                          CCCS GHC.IO.FD.FD! [wild1_sb0Be ww1_sb0B8];
                    } in  Unit# [sat_sb0Bf];
                -1# ->
                    case
                        Foreign.C.Error.throwErrno1 GHC.IO.FD.$fIODeviceFD4 GHC.Prim.void#
                    of
                    { Unit# ipv1_sb0Bi [Occ=Once] ->
                          let {
                            sat_sb0Bl [Occ=Once] :: GHC.IO.FD.FD
                            [LclId] =
                                [ww1_sb0B8 ipv1_sb0Bi] \u []
                                    case ipv1_sb0Bi of {
                                      GHC.Int.I32# dt1_sb0Bk [Occ=Once] ->
                                          GHC.IO.FD.FD [dt1_sb0Bk ww1_sb0B8];
                                    };
                          } in  Unit# [sat_sb0Bl];
                    };
              };
        };

GHC.IO.FD.$fIODeviceFD3 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FD.FD #)
[GblId, Arity=2, Str=<S(SS),1*U(U,U)><S,U>, Unf=OtherCon []] =
    [] \r [w_sb0Bm void_0E]
        case w_sb0Bm of {
          GHC.IO.FD.FD ww1_sb0Bp [Occ=Once] ww2_sb0Bq [Occ=Once] ->
              GHC.IO.FD.$w$cdup ww1_sb0Bp ww2_sb0Bq GHC.Prim.void#;
        };

GHC.IO.FD.$fIODeviceFD6
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Device.IODeviceType #)
[GblId, Arity=2, Str=<L,1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [fd_sb0Br void_0E]
        let {
          sat_sb0Bw [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_sb0Br] \s []
                  case fd_sb0Br of {
                    GHC.IO.FD.FD dt_sb0Bu [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_sb0Bu];
                  };
        } in 
          case System.Posix.Internals.fdStat1 sat_sb0Bw GHC.Prim.void# of {
            Unit# ipv1_sb0Bz [Occ=Once!] ->
                case ipv1_sb0Bz of {
                  (,,) ty_sb0BB [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                      Unit# [ty_sb0BB];
                };
          };

GHC.IO.FD.$fIODeviceFD20
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId, Arity=2, Str=<L,1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [fd_sb0BE void_0E]
        let {
          sat_sb0BJ [Occ=Once, Dmd=<L,1*U(U)>] :: System.Posix.Internals.FD
          [LclId] =
              [fd_sb0BE] \s []
                  case fd_sb0BE of {
                    GHC.IO.FD.FD dt_sb0BH [Occ=Once] _ [Occ=Dead] ->
                        GHC.Int.I32# [dt_sb0BH];
                  };
        } in 
          case System.Posix.Internals.fdStat1 sat_sb0BJ GHC.Prim.void# of {
            Unit# ipv1_sb0BM [Occ=Once!] ->
                case ipv1_sb0BM of {
                  (,,) ty_sb0BO [Occ=Once!] _ [Occ=Dead] _ [Occ=Dead] ->
                      let {
                        sat_sb0BS [Occ=Once] :: GHC.Types.Bool
                        [LclId] =
                            [ty_sb0BO] \u []
                                case ty_sb0BO of {
                                  __DEFAULT -> GHC.Types.False [];
                                  GHC.IO.Device.RegularFile -> GHC.Types.True [];
                                  GHC.IO.Device.RawDevice -> GHC.Types.True [];
                                };
                      } in  Unit# [sat_sb0BS];
                };
          };

GHC.IO.FD.release1
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [fd_sb0BT void_0E]
        case fd_sb0BT of {
          GHC.IO.FD.FD dt_sb0BW [Occ=Once] _ [Occ=Dead] ->
              case __pkg_ccall base-4.11.0.0 [dt_sb0BW GHC.Prim.void#] of {
                Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
              };
        };

GHC.IO.FD.release :: GHC.IO.FD.FD -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E] GHC.IO.FD.release1 eta_B2 GHC.Prim.void#;

GHC.IO.FD.$fIODeviceFD24 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.FD.close"#;

GHC.IO.FD.$fIODeviceFD23 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.$fIODeviceFD24;

GHC.IO.FD.$wclose [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_sb0C2 void_0E]
        let {
          sat_sb0Cc [Occ=Once] :: GHC.Types.IO Foreign.C.Types.CInt
          [LclId] =
              [ww_sb0C2] \r [void_0E]
                  case narrow32Int# [ww_sb0C2] of sat_sb0C6 {
                    __DEFAULT ->
                        case __pkg_ccall base-4.11.0.0 [sat_sb0C6 GHC.Prim.void#] of {
                          Unit# ds5_sb0C9 [Occ=Once] ->
                              case narrow32Int# [ds5_sb0C9] of sat_sb0Ca {
                                __DEFAULT ->
                                    let {
                                      sat_sb0Cb [Occ=Once] :: GHC.Int.Int32
                                      [LclId] =
                                          CCCS GHC.Int.I32#! [sat_sb0Ca];
                                    } in  Unit# [sat_sb0Cb];
                              };
                        };
                  };
        } in 
          case
              Foreign.C.Error.throwErrnoIfMinus1Retry2
                  GHC.IO.FD.$fIODeviceFD25
                  GHC.IO.FD.$fIODeviceFD23
                  sat_sb0Cc
                  GHC.Prim.void#
          of
          { Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
          };

GHC.IO.FD.$fIODeviceFD26 [InlPrag=NOUSERINLINE[0]]
  :: System.Posix.Types.Fd
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [w_sb0Cg void_0E]
        case w_sb0Cg of {
          GHC.Int.I32# ww1_sb0Cj [Occ=Once] ->
              GHC.IO.FD.$wclose ww1_sb0Cj GHC.Prim.void#;
        };

GHC.IO.FD.$w$cclose [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_sb0Ck void_0E]
        case __pkg_ccall base-4.11.0.0 [ww_sb0Ck GHC.Prim.void#] of {
          Unit# _ [Occ=Dead] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                Unit# ds3_sb0Ct [Occ=Once!] ->
                    case ds3_sb0Ct of {
                      __DEFAULT ->
                          case narrow32Int# [ww_sb0Ck] of sat_sb0Cv {
                            __DEFAULT ->
                                let {
                                  sat_sb0Cw [Occ=Once] :: System.Posix.Types.Fd
                                  [LclId] =
                                      CCCS GHC.Int.I32#! [sat_sb0Cv];
                                } in 
                                  GHC.Event.Thread.closeFdWith1
                                      GHC.IO.FD.$fIODeviceFD26 sat_sb0Cw GHC.Prim.void#;
                          };
                      0# ->
                          let {
                            sat_sb0CF [Occ=Once] :: GHC.Types.IO Foreign.C.Types.CInt
                            [LclId] =
                                [ww_sb0Ck] \r [void_0E]
                                    case narrow32Int# [ww_sb0Ck] of sat_sb0Cz {
                                      __DEFAULT ->
                                          case
                                              __pkg_ccall base-4.11.0.0 [sat_sb0Cz GHC.Prim.void#]
                                          of
                                          { Unit# ds6_sb0CC [Occ=Once] ->
                                                case narrow32Int# [ds6_sb0CC] of sat_sb0CD {
                                                  __DEFAULT ->
                                                      let {
                                                        sat_sb0CE [Occ=Once] :: GHC.Int.Int32
                                                        [LclId] =
                                                            CCCS GHC.Int.I32#! [sat_sb0CD];
                                                      } in  Unit# [sat_sb0CE];
                                                };
                                          };
                                    };
                          } in 
                            case
                                Foreign.C.Error.throwErrnoIfMinus1Retry2
                                    GHC.IO.FD.$fIODeviceFD25
                                    GHC.IO.FD.$fIODeviceFD23
                                    sat_sb0CF
                                    GHC.Prim.void#
                            of
                            { Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
                            };
                    };
              };
        };

GHC.IO.FD.$fIODeviceFD22 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Str=<S(SL),1*U(U,A)><S,U>, Unf=OtherCon []] =
    [] \r [w_sb0CJ void_0E]
        case w_sb0CJ of {
          GHC.IO.FD.FD ww1_sb0CM [Occ=Once] _ [Occ=Dead] ->
              GHC.IO.FD.$w$cclose ww1_sb0CM GHC.Prim.void#;
        };

GHC.IO.FD.$fIODeviceFD [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.IO.Device.IODevice GHC.IO.FD.FD
[GblId[DFunId]] =
    CCS_DONT_CARE GHC.IO.Device.C:IODevice! [GHC.IO.FD.$fIODeviceFD27
                                             GHC.IO.FD.$fIODeviceFD22
                                             GHC.IO.FD.$fIODeviceFD21
                                             GHC.IO.FD.$fIODeviceFD20
                                             GHC.IO.FD.$fIODeviceFD17
                                             GHC.IO.FD.$fIODeviceFD13
                                             GHC.IO.FD.$fIODeviceFD12
                                             GHC.IO.FD.$fIODeviceFD10
                                             GHC.IO.FD.$fIODeviceFD9
                                             GHC.IO.FD.$fIODeviceFD8
                                             GHC.IO.FD.$fIODeviceFD7
                                             GHC.IO.FD.$fIODeviceFD6
                                             GHC.IO.FD.$fIODeviceFD3
                                             GHC.IO.FD.$fIODeviceFD1];

GHC.IO.FD.mkFD7 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "openFile"#;

GHC.IO.FD.mkFD6 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.mkFD7;

GHC.IO.FD.mkFD11 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "is a directory"#;

GHC.IO.FD.mkFD10 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.mkFD11;

GHC.IO.FD.mkFD9 :: GHC.IO.Exception.IOException
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Exception.IOError! [GHC.Base.Nothing
                                             GHC.IO.Exception.InappropriateType
                                             GHC.IO.FD.mkFD6
                                             GHC.IO.FD.mkFD10
                                             GHC.Base.Nothing
                                             GHC.Base.Nothing];

GHC.IO.FD.mkFD8 :: GHC.Exception.SomeException
[GblId] =
    [] \u []
        GHC.IO.Exception.$fExceptionIOException_$ctoException
            GHC.IO.FD.mkFD9;

GHC.IO.FD.mkFD5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "file is locked"#;

GHC.IO.FD.mkFD4 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.FD.mkFD5;

GHC.IO.FD.mkFD3 :: GHC.IO.Exception.IOException
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Exception.IOError! [GHC.Base.Nothing
                                             GHC.IO.Exception.ResourceBusy
                                             GHC.IO.FD.mkFD6
                                             GHC.IO.FD.mkFD4
                                             GHC.Base.Nothing
                                             GHC.Base.Nothing];

GHC.IO.FD.mkFD2 :: GHC.Exception.SomeException
[GblId] =
    [] \u []
        GHC.IO.Exception.$fExceptionIOException_$ctoException
            GHC.IO.FD.mkFD3;

GHC.IO.FD.$wmkFD [InlPrag=NOUSERINLINE[0]]
  :: Foreign.C.Types.CInt
     -> GHC.IO.IOMode.IOMode
     -> GHC.Base.Maybe
          (GHC.IO.Device.IODeviceType, System.Posix.Types.CDev,
           System.Posix.Types.CIno)
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
[GblId,
 Arity=5,
 Str=<L,U(U)><L,1*U><S,1*U><L,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0CO w1_sb0CP w2_sb0CQ w3_sb0CR void_0E]
        let-no-escape {
          $w$j_sb0CT [InlPrag=NOUSERINLINE[0],
                      Occ=Once*!T[4],
                      Dmd=<L,1*C1(C1(C1(C1(U(U,U)))))>]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> GHC.IO.Device.IODeviceType
               -> System.Posix.Types.CDev
               -> System.Posix.Types.CIno
               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                     (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
          [LclId[JoinId(4)],
           Arity=4,
           Str=<S,U><S,1*U><L,1*U(U)><L,1*U(U)>,
           Unf=OtherCon []] =
              sat-only [w_sb0CO w1_sb0CP w3_sb0CR] \r [void_0E
                                                       ww_sb0CV
                                                       ww1_sb0CW
                                                       ww2_sb0CX]
                  case ww_sb0CV of wild_sb0CY {
                    __DEFAULT ->
                        let {
                          sat_sb0D2 [Occ=Once] :: GHC.IO.FD.FD
                          [LclId] =
                              [w_sb0CO w3_sb0CR] \u []
                                  case w_sb0CO of {
                                    GHC.Int.I32# dt1_sb0D0 [Occ=Once*] ->
                                        case w3_sb0CR of {
                                          GHC.Types.False -> GHC.IO.FD.FD [dt1_sb0D0 0#];
                                          GHC.Types.True -> GHC.IO.FD.FD [dt1_sb0D0 1#];
                                        };
                                  }; } in
                        let {
                          sat_sb0D3 [Occ=Once] :: (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType)
                          [LclId] =
                              CCCS (,)! [sat_sb0D2 wild_sb0CY];
                        } in  Unit# [sat_sb0D3];
                    GHC.IO.Device.Directory ->
                        raiseIO# [GHC.IO.FD.mkFD8 GHC.Prim.void#];
                    GHC.IO.Device.RegularFile ->
                        case w_sb0CO of {
                          GHC.Int.I32# ds1_sb0D6 ->
                              case ww1_sb0CW of {
                                GHC.Word.W64# x#_sb0D8 ->
                                    case word2Int# [x#_sb0D8] of i#_sb0D9 [Dmd=<S,U>] {
                                      __DEFAULT ->
                                          let-no-escape {
                                            $j_sb0Da [Occ=Once*!T[1], Dmd=<C(S),1*C1(U(U,U))>]
                                              :: GHC.Prim.Word#
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
                                            [LclId[JoinId(1)],
                                             Arity=1,
                                             Str=<S,U>,
                                             Unf=OtherCon []] =
                                                sat-only [w1_sb0CP
                                                          w3_sb0CR
                                                          ww2_sb0CX
                                                          ds1_sb0D6] \r [wild2_sb0Db]
                                                    case ww2_sb0CX of {
                                                      GHC.Word.W64# x#1_sb0Dd ->
                                                          case
                                                              word2Int# [x#1_sb0Dd]
                                                          of
                                                          i#1_sb0De [Dmd=<S,U>]
                                                          { __DEFAULT ->
                                                                let-no-escape {
                                                                  $j1_sb0Df [Occ=Once*!T[1],
                                                                             Dmd=<C(S),1*C1(U(U,U))>]
                                                                    :: GHC.Prim.Word#
                                                                       -> (# GHC.Prim.State#
                                                                               GHC.Prim.RealWorld,
                                                                             (GHC.IO.FD.FD,
                                                                              GHC.IO.Device.IODeviceType) #)
                                                                  [LclId[JoinId(1)],
                                                                   Arity=1,
                                                                   Str=<S,U>,
                                                                   Unf=OtherCon []] =
                                                                      sat-only [w1_sb0CP
                                                                                w3_sb0CR
                                                                                ds1_sb0D6
                                                                                wild2_sb0Db] \r [wild4_sb0Dg]
                                                                          let-no-escape {
                                                                            $j2_sb0Dh [Occ=Once*!T[1],
                                                                                       Dmd=<C(S),1*C1(U(U,U))>]
                                                                              :: GHC.Prim.Int#
                                                                                 -> (# GHC.Prim.State#
                                                                                         GHC.Prim.RealWorld,
                                                                                       (GHC.IO.FD.FD,
                                                                                        GHC.IO.Device.IODeviceType) #)
                                                                            [LclId[JoinId(1)],
                                                                             Arity=1,
                                                                             Str=<S,U>,
                                                                             Unf=OtherCon []] =
                                                                                sat-only [w3_sb0CR
                                                                                          ds1_sb0D6
                                                                                          wild2_sb0Db
                                                                                          wild4_sb0Dg] \r [ds2_sb0Di]
                                                                                    case
                                                                                        __pkg_ccall base-4.11.0.0 [ds1_sb0D6
                                                                                                                   wild2_sb0Db
                                                                                                                   wild4_sb0Dg
                                                                                                                   ds2_sb0Di
                                                                                                                   GHC.Prim.void#]
                                                                                    of
                                                                                    { Unit# ds4_sb0Dm [Occ=Once] ->
                                                                                          case
                                                                                              narrow32Int# [ds4_sb0Dm]
                                                                                          of
                                                                                          { __DEFAULT ->
                                                                                                let {
                                                                                                  sat_sb0Dp [Occ=Once]
                                                                                                    :: GHC.IO.FD.FD
                                                                                                  [LclId] =
                                                                                                      [w3_sb0CR
                                                                                                       ds1_sb0D6] \u []
                                                                                                          case
                                                                                                              w3_sb0CR
                                                                                                          of
                                                                                                          { GHC.Types.False ->
                                                                                                                GHC.IO.FD.FD [ds1_sb0D6
                                                                                                                              0#];
                                                                                                            GHC.Types.True ->
                                                                                                                GHC.IO.FD.FD [ds1_sb0D6
                                                                                                                              1#];
                                                                                                          }; } in
                                                                                                let {
                                                                                                  sat_sb0Dq [Occ=Once]
                                                                                                    :: (GHC.IO.FD.FD,
                                                                                                        GHC.IO.Device.IODeviceType)
                                                                                                  [LclId] =
                                                                                                      CCCS (,)! [sat_sb0Dp
                                                                                                                 GHC.IO.Device.RegularFile];
                                                                                                } in 
                                                                                                  Unit# [sat_sb0Dq];
                                                                                            -1# ->
                                                                                                raiseIO# [GHC.IO.FD.mkFD2
                                                                                                          GHC.Prim.void#];
                                                                                          };
                                                                                    };
                                                                          } in 
                                                                            case w1_sb0CP of {
                                                                              __DEFAULT ->
                                                                                  $j2_sb0Dh 1#;
                                                                              GHC.IO.IOMode.ReadMode ->
                                                                                  $j2_sb0Dh 0#;
                                                                            };
                                                                } in 
                                                                  case >=# [i#1_sb0De 0#] of {
                                                                    __DEFAULT ->
                                                                        $j1_sb0Df x#1_sb0Dd;
                                                                    1# ->
                                                                        case
                                                                            int2Word# [i#1_sb0De]
                                                                        of
                                                                        sat_sb0Du
                                                                        { __DEFAULT ->
                                                                              $j1_sb0Df sat_sb0Du;
                                                                        };
                                                                  };
                                                          };
                                                    };
                                          } in 
                                            case >=# [i#_sb0D9 0#] of {
                                              __DEFAULT -> $j_sb0Da x#_sb0D8;
                                              1# ->
                                                  case int2Word# [i#_sb0D9] of sat_sb0Dw {
                                                    __DEFAULT -> $j_sb0Da sat_sb0Dw;
                                                  };
                                            };
                                    };
                              };
                        };
                  };
        } in 
          case w2_sb0CQ of {
            GHC.Base.Nothing ->
                case System.Posix.Internals.fdStat1 w_sb0CO GHC.Prim.void# of {
                  Unit# ipv1_sb0DA [Occ=Once!] ->
                      case ipv1_sb0DA of {
                        (,,) ww1_sb0DC [Occ=Once]
                             ww2_sb0DD [Occ=Once]
                             ww3_sb0DE [Occ=Once] ->
                            $w$j_sb0CT GHC.Prim.void# ww1_sb0DC ww2_sb0DD ww3_sb0DE;
                      };
                };
            GHC.Base.Just stat_sb0DF [Occ=Once!] ->
                case stat_sb0DF of {
                  (,,) ww1_sb0DH [Occ=Once]
                       ww2_sb0DI [Occ=Once]
                       ww3_sb0DJ [Occ=Once] ->
                      $w$j_sb0CT GHC.Prim.void# ww1_sb0DH ww2_sb0DI ww3_sb0DJ;
                };
          };

GHC.IO.FD.mkFD1 [InlPrag=NOUSERINLINE[0]]
  :: Foreign.C.Types.CInt
     -> GHC.IO.IOMode.IOMode
     -> GHC.Base.Maybe
          (GHC.IO.Device.IODeviceType, System.Posix.Types.CDev,
           System.Posix.Types.CIno)
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
[GblId,
 Arity=6,
 Str=<L,U(U)><L,1*U><S,1*U><L,A><L,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0DK w1_sb0DL w2_sb0DM w3_sb0DN w4_sb0DO void_0E]
        GHC.IO.FD.$wmkFD w_sb0DK w1_sb0DL w2_sb0DM w4_sb0DO GHC.Prim.void#;

GHC.IO.FD.mkFD
  :: Foreign.C.Types.CInt
     -> GHC.IO.IOMode.IOMode
     -> GHC.Base.Maybe
          (GHC.IO.Device.IODeviceType, System.Posix.Types.CDev,
           System.Posix.Types.CIno)
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.Types.IO (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType)
[GblId,
 Arity=6,
 Str=<L,U(U)><L,1*U><S,1*U><L,A><L,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.FD.mkFD1 eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.FD.openFile1
  :: GHC.IO.FilePath
     -> GHC.IO.IOMode.IOMode
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
[GblId, Arity=4, Str=<L,U><L,U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [filepath_sb0DQ iomode_sb0DR non_blocking_sb0DS void_0E]
        case GHC.IO.Encoding.getFileSystemEncoding GHC.Prim.void# of {
          Unit# ipv1_sb0DW [Occ=Once] ->
              let {
                sat_sb0FI [Occ=Once]
                  :: GHC.Foreign.CString
                     -> GHC.Types.IO (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType)
                [LclId] =
                    [iomode_sb0DR non_blocking_sb0DS] \r [f_sb0DX void_0E]
                        case f_sb0DX of {
                          GHC.Ptr.Ptr ds4_sb0E0 [Occ=Once] ->
                              let-no-escape {
                                $j_sb0E1 [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                                  :: GHC.Prim.Int#
                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                           (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType) #)
                                [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                    sat-only [iomode_sb0DR
                                              non_blocking_sb0DS
                                              ds4_sb0E0] \r [ds6_sb0E2]
                                        let {
                                          sat_sb0Ea [Occ=Once] :: GHC.Types.IO Foreign.C.Types.CInt
                                          [LclId] =
                                              [ds4_sb0E0 ds6_sb0E2] \r [void_0E]
                                                  case
                                                      __pkg_ccall_GC base-4.11.0.0 [ds4_sb0E0
                                                                                    ds6_sb0E2
                                                                                    438##
                                                                                    GHC.Prim.void#]
                                                  of
                                                  { Unit# ds11_sb0E7 [Occ=Once] ->
                                                        case
                                                            narrow32Int# [ds11_sb0E7]
                                                        of
                                                        sat_sb0E8
                                                        { __DEFAULT ->
                                                              let {
                                                                sat_sb0E9 [Occ=Once]
                                                                  :: GHC.Int.Int32
                                                                [LclId] =
                                                                    CCCS GHC.Int.I32#! [sat_sb0E8];
                                                              } in  Unit# [sat_sb0E9];
                                                        };
                                                  };
                                        } in 
                                          case
                                              Foreign.C.Error.throwErrnoIfMinus1Retry2
                                                  GHC.IO.FD.$fIODeviceFD25
                                                  GHC.IO.FD.mkFD6
                                                  sat_sb0Ea
                                                  GHC.Prim.void#
                                          of
                                          { Unit# ipv3_sb0Ed ->
                                                let {
                                                  sat_sb0Es [Occ=Once]
                                                    :: GHC.Exception.SomeException
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             (GHC.IO.FD.FD,
                                                              GHC.IO.Device.IODeviceType) #)
                                                  [LclId] =
                                                      [ipv3_sb0Ed] \r [ds9_sb0Eg]
                                                          case ds9_sb0Eg of {
                                                            GHC.Exception.SomeException $dException_sb0Ei [Occ=Once]
                                                                                        e1_sb0Ej [Occ=Once] ->
                                                                let {
                                                                  sat_sb0Er [Occ=OnceT[0]]
                                                                    :: GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                       -> (# GHC.Prim.State#
                                                                               GHC.Prim.RealWorld,
                                                                             (GHC.IO.FD.FD,
                                                                              GHC.IO.Device.IODeviceType) #)
                                                                  [LclId] =
                                                                      [ipv3_sb0Ed
                                                                       $dException_sb0Ei
                                                                       e1_sb0Ej] \r [void_0E]
                                                                          case ipv3_sb0Ed of {
                                                                            GHC.Int.I32# ds11_sb0Em [Occ=Once] ->
                                                                                case
                                                                                    __pkg_ccall base-4.11.0.0 [ds11_sb0Em
                                                                                                               GHC.Prim.void#]
                                                                                of
                                                                                { Unit# _ [Occ=Dead] ->
                                                                                      GHC.IO.throwIO1
                                                                                          $dException_sb0Ei
                                                                                          e1_sb0Ej
                                                                                          GHC.Prim.void#;
                                                                                };
                                                                          };
                                                                } in  sat_sb0Er;
                                                          }; } in
                                                let {
                                                  sat_sb0Ef [Occ=Once]
                                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             (GHC.IO.FD.FD,
                                                              GHC.IO.Device.IODeviceType) #)
                                                  [LclId] =
                                                      [iomode_sb0DR
                                                       non_blocking_sb0DS
                                                       ipv3_sb0Ed] \r [void_0E]
                                                          GHC.IO.FD.$wmkFD
                                                              ipv3_sb0Ed
                                                              iomode_sb0DR
                                                              GHC.Base.Nothing
                                                              non_blocking_sb0DS
                                                              GHC.Prim.void#;
                                                } in 
                                                  case
                                                      catch# [sat_sb0Ef sat_sb0Es GHC.Prim.void#]
                                                  of
                                                  ds9_sb0Et
                                                  { Unit# ipv5_sb0Ev [Occ=Once!] ->
                                                        case ipv5_sb0Ev of {
                                                          (,) fD_sb0Ex [Occ=Once!]
                                                              fd_type_sb0Ey [Occ=Once!] ->
                                                              case iomode_sb0DR of {
                                                                __DEFAULT -> Unit# [ipv5_sb0Ev];
                                                                GHC.IO.IOMode.WriteMode ->
                                                                    case fd_type_sb0Ey of {
                                                                      __DEFAULT ->
                                                                          Unit# [ipv5_sb0Ev];
                                                                      GHC.IO.Device.RegularFile ->
                                                                          case
                                                                              fD_sb0Ex
                                                                          of
                                                                          wild3_sb0EB
                                                                          { GHC.IO.FD.FD dt_sb0EC [Occ=Once]
                                                                                         _ [Occ=Dead] ->
                                                                                case
                                                                                    __pkg_ccall base-4.11.0.0 [dt_sb0EC
                                                                                                               0#
                                                                                                               GHC.Prim.void#]
                                                                                of
                                                                                { Unit# ds8_sb0EH [Occ=Once] ->
                                                                                      case
                                                                                          narrow32Int# [ds8_sb0EH]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                __pkg_ccall base-4.11.0.0 [GHC.Prim.void#]
                                                                                            of
                                                                                            { Unit# ds10_sb0EM [Occ=Once] ->
                                                                                                  GHC.IO.FD.$fIODeviceFD11
                                                                                                      GHC.Prim.void#
                                                                                                      ds10_sb0EM;
                                                                                            };
                                                                                        0# ->
                                                                                            let {
                                                                                              sat_sb0EO [Occ=Once]
                                                                                                :: (GHC.IO.FD.FD,
                                                                                                    GHC.IO.Device.IODeviceType)
                                                                                              [LclId] =
                                                                                                  CCCS (,)! [wild3_sb0EB
                                                                                                             GHC.IO.Device.RegularFile];
                                                                                            } in 
                                                                                              Unit# [sat_sb0EO];
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                          };
                              } in 
                                case non_blocking_sb0DS of {
                                  GHC.Types.False ->
                                      case iomode_sb0DR of {
                                        GHC.IO.IOMode.ReadMode ->
                                            case read_flags_raWV8 of {
                                              GHC.Int.I32# ds6_sb0ES [Occ=Once] ->
                                                  $j_sb0E1 ds6_sb0ES;
                                            };
                                        GHC.IO.IOMode.WriteMode ->
                                            case write_flags_raWV5 of {
                                              GHC.Int.I32# ds6_sb0EU [Occ=Once] ->
                                                  $j_sb0E1 ds6_sb0EU;
                                            };
                                        GHC.IO.IOMode.AppendMode ->
                                            case append_flags_raWV6 of {
                                              GHC.Int.I32# ds6_sb0EW [Occ=Once] ->
                                                  $j_sb0E1 ds6_sb0EW;
                                            };
                                        GHC.IO.IOMode.ReadWriteMode ->
                                            case rw_flags_raWV7 of {
                                              GHC.Int.I32# ds6_sb0EY [Occ=Once] ->
                                                  $j_sb0E1 ds6_sb0EY;
                                            };
                                      };
                                  GHC.Types.True ->
                                      case iomode_sb0DR of {
                                        GHC.IO.IOMode.ReadMode ->
                                            case read_flags_raWV8 of {
                                              GHC.Int.I32# x#_sb0F1 [Occ=Once] ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#]
                                                  of
                                                  { Unit# ds2_sb0F5 [Occ=Once] ->
                                                        case narrow32Int# [ds2_sb0F5] of sat_sb0F7 {
                                                          __DEFAULT ->
                                                              case
                                                                  int2Word# [sat_sb0F7]
                                                              of
                                                              sat_sb0F8
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#_sb0F1]
                                                                    of
                                                                    sat_sb0F6
                                                                    { __DEFAULT ->
                                                                          case
                                                                              or# [sat_sb0F6
                                                                                   sat_sb0F8]
                                                                          of
                                                                          sat_sb0F9
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    word2Int# [sat_sb0F9]
                                                                                of
                                                                                sat_sb0Fa
                                                                                { __DEFAULT ->
                                                                                      $j_sb0E1
                                                                                          sat_sb0Fa;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                        GHC.IO.IOMode.WriteMode ->
                                            case write_flags_raWV5 of {
                                              GHC.Int.I32# x#_sb0Fc [Occ=Once] ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#]
                                                  of
                                                  { Unit# ds2_sb0Fg [Occ=Once] ->
                                                        case narrow32Int# [ds2_sb0Fg] of sat_sb0Fi {
                                                          __DEFAULT ->
                                                              case
                                                                  int2Word# [sat_sb0Fi]
                                                              of
                                                              sat_sb0Fj
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#_sb0Fc]
                                                                    of
                                                                    sat_sb0Fh
                                                                    { __DEFAULT ->
                                                                          case
                                                                              or# [sat_sb0Fh
                                                                                   sat_sb0Fj]
                                                                          of
                                                                          sat_sb0Fk
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    word2Int# [sat_sb0Fk]
                                                                                of
                                                                                sat_sb0Fl
                                                                                { __DEFAULT ->
                                                                                      $j_sb0E1
                                                                                          sat_sb0Fl;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                        GHC.IO.IOMode.AppendMode ->
                                            case append_flags_raWV6 of {
                                              GHC.Int.I32# x#_sb0Fn [Occ=Once] ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#]
                                                  of
                                                  { Unit# ds2_sb0Fr [Occ=Once] ->
                                                        case narrow32Int# [ds2_sb0Fr] of sat_sb0Ft {
                                                          __DEFAULT ->
                                                              case
                                                                  int2Word# [sat_sb0Ft]
                                                              of
                                                              sat_sb0Fu
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#_sb0Fn]
                                                                    of
                                                                    sat_sb0Fs
                                                                    { __DEFAULT ->
                                                                          case
                                                                              or# [sat_sb0Fs
                                                                                   sat_sb0Fu]
                                                                          of
                                                                          sat_sb0Fv
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    word2Int# [sat_sb0Fv]
                                                                                of
                                                                                sat_sb0Fw
                                                                                { __DEFAULT ->
                                                                                      $j_sb0E1
                                                                                          sat_sb0Fw;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                        GHC.IO.IOMode.ReadWriteMode ->
                                            case rw_flags_raWV7 of {
                                              GHC.Int.I32# x#_sb0Fy [Occ=Once] ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#]
                                                  of
                                                  { Unit# ds2_sb0FC [Occ=Once] ->
                                                        case narrow32Int# [ds2_sb0FC] of sat_sb0FE {
                                                          __DEFAULT ->
                                                              case
                                                                  int2Word# [sat_sb0FE]
                                                              of
                                                              sat_sb0FF
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#_sb0Fy]
                                                                    of
                                                                    sat_sb0FD
                                                                    { __DEFAULT ->
                                                                          case
                                                                              or# [sat_sb0FD
                                                                                   sat_sb0FF]
                                                                          of
                                                                          sat_sb0FG
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    word2Int# [sat_sb0FG]
                                                                                of
                                                                                sat_sb0FH
                                                                                { __DEFAULT ->
                                                                                      $j_sb0E1
                                                                                          sat_sb0FH;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                        };
              } in 
                GHC.Foreign.charIsRepresentable3
                    ipv1_sb0DW filepath_sb0DQ sat_sb0FI GHC.Prim.void#;
        };

GHC.IO.FD.openFile
  :: GHC.IO.FilePath
     -> GHC.IO.IOMode.IOMode
     -> GHC.Types.Bool
     -> GHC.Types.IO (GHC.IO.FD.FD, GHC.IO.Device.IODeviceType)
[GblId, Arity=4, Str=<L,U><L,U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.FD.openFile1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.FD.$w$cfillReadBuffer [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=9,
 Str=<S,U><S,1*U><S,U><L,U><L,U><S,U><L,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sb0FJ
           ww1_sb0FK
           ww2_sb0FL
           ww3_sb0FM
           ww4_sb0FN
           ww5_sb0FO
           ww6_sb0FP
           ww7_sb0FQ
           void_0E]
        case -# [ww5_sb0FO ww7_sb0FQ] of sat_sb0FT {
          __DEFAULT ->
              case int2Word# [sat_sb0FT] of sat_sb0FU {
                __DEFAULT ->
                    case plusAddr# [ww2_sb0FL ww7_sb0FQ] of sat_sb0FS {
                      __DEFAULT ->
                          case
                              GHC.IO.FD.$wreadRawBufferPtr
                                  GHC.IO.FD.$fBufferedIOFD12
                                  ww_sb0FJ
                                  ww1_sb0FK
                                  sat_sb0FS
                                  0#
                                  sat_sb0FU
                                  GHC.Prim.void#
                          of
                          { Unit# ipv1_sb0FX ->
                                case touch# [ww3_sb0FM GHC.Prim.void#] of s'_sb0FY {
                                  (##) ->
                                      let {
                                        sat_sb0G2 [Occ=Once] :: GHC.IO.Buffer.Buffer GHC.Word.Word8
                                        [LclId] =
                                            [ww2_sb0FL
                                             ww3_sb0FM
                                             ww4_sb0FN
                                             ww5_sb0FO
                                             ww6_sb0FP
                                             ww7_sb0FQ
                                             ipv1_sb0FX] \u []
                                                case ipv1_sb0FX of {
                                                  GHC.Types.I# y_sb0G0 [Occ=Once] ->
                                                      case +# [ww7_sb0FQ y_sb0G0] of sat_sb0G1 {
                                                        __DEFAULT ->
                                                            GHC.IO.Buffer.Buffer [ww2_sb0FL
                                                                                  ww3_sb0FM
                                                                                  ww4_sb0FN
                                                                                  ww5_sb0FO
                                                                                  ww6_sb0FP
                                                                                  sat_sb0G1];
                                                      };
                                                }; } in
                                      let {
                                        sat_sb0G3 [Occ=Once]
                                          :: (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8)
                                        [LclId] =
                                            CCCS (,)! [ipv1_sb0FX sat_sb0G2];
                                      } in  Unit# [sat_sb0G3];
                                };
                          };
                    };
              };
        };

GHC.IO.FD.$fBufferedIOFD11 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Types.Int, GHC.IO.Buffer.Buffer GHC.Word.Word8) #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,1*U)><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb0G4 w1_sb0G5 void_0E]
        case w_sb0G4 of {
          GHC.IO.FD.FD ww1_sb0G8 [Occ=Once] ww2_sb0G9 [Occ=Once] ->
              case w1_sb0G5 of {
                GHC.IO.Buffer.Buffer ww4_sb0Gb [Occ=Once]
                                     ww5_sb0Gc [Occ=Once]
                                     ww6_sb0Gd [Occ=Once]
                                     ww7_sb0Ge [Occ=Once]
                                     ww8_sb0Gf [Occ=Once]
                                     ww9_sb0Gg [Occ=Once] ->
                    GHC.IO.FD.$w$cfillReadBuffer
                        ww1_sb0G8
                        ww2_sb0G9
                        ww4_sb0Gb
                        ww5_sb0Gc
                        ww6_sb0Gd
                        ww7_sb0Ge
                        ww8_sb0Gf
                        ww9_sb0Gg
                        GHC.Prim.void#;
              };
        };

GHC.IO.FD.$fBufferedIOFD6
  :: GHC.IO.FD.FD
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.Buffer GHC.Word.Word8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,A><L,1*U(U,U,A,U,A,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [_dev_sb0Gh buf_sb0Gi void_0E]
        let {
          sat_sb0Gr [Occ=Once] :: GHC.IO.Buffer.Buffer GHC.Word.Word8
          [LclId] =
              [buf_sb0Gi] \u []
                  case buf_sb0Gi of {
                    GHC.IO.Buffer.Buffer dt_sb0Gl [Occ=Once]
                                         dt1_sb0Gm [Occ=Once]
                                         _ [Occ=Dead]
                                         dt2_sb0Go [Occ=Once]
                                         _ [Occ=Dead]
                                         _ [Occ=Dead] ->
                        GHC.IO.Buffer.Buffer [dt_sb0Gl
                                              dt1_sb0Gm
                                              GHC.IO.Buffer.WriteBuffer
                                              dt2_sb0Go
                                              0#
                                              0#];
                  };
        } in  Unit# [sat_sb0Gr];

GHC.IO.FD.$fBufferedIOFD [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.IO.BufferedIO.BufferedIO GHC.IO.FD.FD
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.IO.BufferedIO.C:BufferedIO! [GHC.IO.FD.$fBufferedIOFD15
                                                   GHC.IO.FD.$fBufferedIOFD11
                                                   GHC.IO.FD.$fBufferedIOFD7
                                                   GHC.IO.FD.$fBufferedIOFD6
                                                   GHC.IO.FD.$fBufferedIOFD_$swriteBuf1
                                                   GHC.IO.FD.$fBufferedIOFD1];

GHC.IO.FD.FD :: GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.IO.FD.FD
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.IO.FD.FD [eta_B2 eta_B1];

