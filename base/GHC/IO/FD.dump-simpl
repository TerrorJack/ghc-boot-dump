
==================== Tidy Core ====================
2018-03-16 16:05:54.973806372 UTC

Result size of Tidy Core
  = {terms: 2,481, types: 3,432, coercions: 441, joins: 13/16}

-- RHS size: {terms: 11, types: 6, coercions: 1, joins: 0/0}
GHC.IO.FD.$WFD [InlPrag=INLINE[2]] :: CInt -> Int -> FD
[GblId[DataConWrapper],
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (dt_aaUf1 [Occ=Once] :: CInt)
                 (dt_aaUf2 [Occ=Once!] :: Int) ->
                 case dt_aaUf1
                      `cast` (Foreign.C.Types.N:CInt[0] :: (CInt :: *) ~R# (Int32 :: *))
                 of
                 { GHC.Int.I32# dt_aaUf4 [Occ=Once] ->
                 case dt_aaUf2 of { I# dt_aaUf5 [Occ=Once] ->
                 GHC.IO.FD.FD dt_aaUf4 dt_aaUf5
                 }
                 }}]
GHC.IO.FD.$WFD
  = \ (dt_aaUf1 [Occ=Once] :: CInt) (dt_aaUf2 [Occ=Once!] :: Int) ->
      case dt_aaUf1
           `cast` (Foreign.C.Types.N:CInt[0] :: (CInt :: *) ~R# (Int32 :: *))
      of
      { GHC.Int.I32# dt_aaUf4 [Occ=Once] ->
      case dt_aaUf2 of { I# dt_aaUf5 [Occ=Once] ->
      GHC.IO.FD.FD dt_aaUf4 dt_aaUf5
      }
      }

Rec {
-- RHS size: {terms: 38, types: 41, coercions: 7, joins: 0/0}
GHC.IO.FD.$fBufferedIOFD5 [Occ=LoopBreaker]
  :: String
     -> IO CSsize
     -> IO CSsize
     -> State# RealWorld
     -> (# State# RealWorld, CSsize #)
[GblId,
 Arity=4,
 Str=<L,U><C(S(SS(S))),C(U(U,1*U(U)))><L,1*C1(U(U,U))><S,U>,
 Unf=OtherCon []]
GHC.IO.FD.$fBufferedIOFD5
  = \ (loc_aaUeC :: String)
      (f_aaUeD :: IO CSsize)
      (on_block_aaUeE :: IO CSsize)
      (s_i7IAv :: State# RealWorld) ->
      case (f_aaUeD
            `cast` (GHC.Types.N:IO[0] <CSsize>_R
                    :: (IO CSsize :: *)
                       ~R# (State# RealWorld -> (# State# RealWorld, CSsize #) :: *)))
             s_i7IAv
      of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      case ipv1_i7IAz
           `cast` (System.Posix.Types.N:CSsize[0]
                   :: (CSsize :: *) ~R# (Int64 :: *))
      of wild_i9hHz
      { GHC.Int.I64# x_i9hHB ->
      case x_i9hHB of {
        __DEFAULT ->
          (# ipv_i7IAy,
             wild_i9hHz
             `cast` (Sym (System.Posix.Types.N:CSsize[0])
                     :: (Int64 :: *) ~R# (CSsize :: *)) #);
        -1# ->
          case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iaobJ
                 ipv_i7IAy
          of
          { (# ds_iaobM, ds2_iaobN #) ->
          case narrow32Int# ds2_iaobN of {
            __DEFAULT ->
              Foreign.C.Error.throwErrno1 @ CSsize loc_aaUeC ds_iaobM;
            4# ->
              GHC.IO.FD.$fBufferedIOFD5
                loc_aaUeC f_aaUeD on_block_aaUeE ds_iaobM;
            11# ->
              (on_block_aaUeE
               `cast` (GHC.Types.N:IO[0] <CSsize>_R
                       :: (IO CSsize :: *)
                          ~R# (State# RealWorld -> (# State# RealWorld, CSsize #) :: *)))
                ds_iaobM
          }
          }
      }
      }
      }
end Rec }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_raWUX :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl_raWUX = "GHC.IO.FD.fdWrite"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl1_raWUY :: [Char]
[GblId]
lvl1_raWUY = unpackCString# lvl_raWUX

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$fBufferedIOFD9 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 80 0}]
GHC.IO.FD.$fBufferedIOFD9 = "GHC.IO.FD.fdReadNonBlocking"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$fBufferedIOFD8 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.FD.$fBufferedIOFD8
  = unpackCString# GHC.IO.FD.$fBufferedIOFD9

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl2_raWUZ :: Int64
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl2_raWUZ = GHC.Int.I64# -1#

-- RHS size: {terms: 4, types: 9, coercions: 2, joins: 0/0}
GHC.IO.FD.$fBufferedIOFD3
  :: State# RealWorld -> (# State# RealWorld, CSsize #)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (s_i7IAV [Occ=Once] :: State# RealWorld) ->
                 (# s_i7IAV,
                    (GHC.Int.I64# -1#)
                    `cast` (Sym (System.Posix.Types.N:CSsize[0])
                            :: (Int64 :: *) ~R# (CSsize :: *)) #)}]
GHC.IO.FD.$fBufferedIOFD3
  = \ (s_i7IAV :: State# RealWorld) ->
      (# s_i7IAV,
         lvl2_raWUZ
         `cast` (Sym (System.Posix.Types.N:CSsize[0])
                 :: (Int64 :: *) ~R# (CSsize :: *)) #)

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$fBufferedIOFD2 :: Int
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.FD.$fBufferedIOFD2 = GHC.Types.I# 0#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$fBufferedIOFD10 :: Int
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.FD.$fBufferedIOFD10 = GHC.Types.I# -1#

-- RHS size: {terms: 87, types: 119, coercions: 10, joins: 1/1}
GHC.IO.FD.$wreadRawBufferPtrNoBlock [InlPrag=NOUSERINLINE[0]]
  :: String
     -> Int#
     -> Int#
     -> Addr#
     -> Int#
     -> Word#
     -> State# RealWorld
     -> (# State# RealWorld, Int #)
[GblId,
 Arity=7,
 Str=<L,U><S,U><S,1*U><L,U><L,U><L,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 85 0 0 0 0] 311 30}]
GHC.IO.FD.$wreadRawBufferPtrNoBlock
  = \ (w_saWpd :: String)
      (ww_saWpl :: Int#)
      (ww1_saWpm :: Int#)
      (ww2_saWpq :: Addr#)
      (ww3_saWpu :: Int#)
      (ww4_saWpy :: Word#)
      (w1_saWpi :: State# RealWorld) ->
      join {
        $sdo_read_saVjC [Dmd=<L,1*C1(C1(U(U,U)))>]
          :: IO CSsize -> State# RealWorld -> (# State# RealWorld, Int #)
        [LclId[JoinId(2)],
         Arity=2,
         Str=<C(S(SS(S))),C(U(U,1*U(U)))><S,U>,
         Unf=OtherCon []]
        $sdo_read_saVjC (call_aaUe9 [OS=OneShot] :: IO CSsize)
                        (s_i7IAv [OS=OneShot] :: State# RealWorld)
          = case GHC.IO.FD.$fBufferedIOFD5
                   w_saWpd
                   call_aaUe9
                   (GHC.IO.FD.$fBufferedIOFD3
                    `cast` (Sym (GHC.Types.N:IO[0] <CSsize>_R)
                            :: (State# RealWorld -> (# State# RealWorld, CSsize #) :: *)
                               ~R# (IO CSsize :: *)))
                   s_i7IAv
            of
            { (# ipv_i7IAy, ipv1_i7IAz #) ->
            case ipv1_i7IAz
                 `cast` (System.Posix.Types.N:CSsize[0]
                         :: (CSsize :: *) ~R# (Int64 :: *))
            of
            { GHC.Int.I64# x_i9hHB ->
            case x_i9hHB of wild1_X32 {
              __DEFAULT -> (# ipv_i7IAy, GHC.Types.I# wild1_X32 #);
              -1# -> (# ipv_i7IAy, GHC.IO.FD.$fBufferedIOFD2 #);
              0# -> (# ipv_i7IAy, GHC.IO.FD.$fBufferedIOFD10 #)
            }
            }
            } } in
      case ww1_saWpm of {
        __DEFAULT ->
          jump $sdo_read_saVjC
            ((\ (ds9_iao7v :: State# RealWorld) ->
                case {__pkg_ccall base-4.11.0.0 Int#
                           -> Addr#
                           -> Word#
                           -> State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iao7w
                       ww_saWpl (plusAddr# ww2_saWpq ww3_saWpu) ww4_saWpy ds9_iao7v
                of
                { (# ds10_iao7B, ds11_iao7C #) ->
                (# ds10_iao7B, GHC.Int.I64# ds11_iao7C #)
                })
             `cast` (Sym (GHC.Types.N:IO[0] (System.Posix.Types.N:CSsize[0]))
                     :: (State# RealWorld -> (# State# RealWorld, Int64 #) :: *)
                        ~R# (IO CSsize :: *)))
            w1_saWpi;
        0# ->
          case {__pkg_ccall base-4.11.0.0 Int#
                           -> Word#
                           -> Int#
                           -> Word#
                           -> State# RealWorld
                           -> (# State# RealWorld, Int# #)}_daUQ4
                 ww_saWpl 0## 0# 0## w1_saWpi
          of
          { (# ds_daUQ2, ds1_daUQ1 #) ->
          case narrow32Int# ds1_daUQ1 of {
            __DEFAULT ->
              jump $sdo_read_saVjC
                ((\ (eta_X2H :: State# RealWorld) ->
                    case {__pkg_ccall_GC base-4.11.0.0 Int#
                              -> Addr#
                              -> Word#
                              -> State# RealWorld
                              -> (# State# RealWorld, Int# #)}_iaUHB
                           ww_saWpl (plusAddr# ww2_saWpq ww3_saWpu) ww4_saWpy eta_X2H
                    of
                    { (# ds10_iaUHG, ds11_iaUHH #) ->
                    (# ds10_iaUHG, GHC.Int.I64# ds11_iaUHH #)
                    })
                 `cast` (Sym (GHC.Types.N:IO[0] (System.Posix.Types.N:CSsize[0]))
                         :: (State# RealWorld -> (# State# RealWorld, Int64 #) :: *)
                            ~R# (IO CSsize :: *)))
                ds_daUQ2;
            0# -> (# ds_daUQ2, GHC.IO.FD.$fBufferedIOFD2 #)
          }
          }
      }

-- RHS size: {terms: 26, types: 18, coercions: 1, joins: 0/0}
GHC.IO.FD.readRawBufferPtrNoBlock1 [InlPrag=NOUSERINLINE[0]]
  :: String
     -> FD
     -> Ptr Word8
     -> Int
     -> CSize
     -> State# RealWorld
     -> (# State# RealWorld, Int #)
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=6,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_saWpd [Occ=Once] :: String)
                 (w1_saWpe [Occ=Once!] :: FD)
                 (w2_saWpf [Occ=Once!] :: Ptr Word8)
                 (w3_saWpg [Occ=Once!] :: Int)
                 (w4_saWph [Occ=Once] :: CSize)
                 (w5_saWpi [Occ=Once] :: State# RealWorld) ->
                 case w1_saWpe of { FD ww1_saWpl [Occ=Once] ww2_saWpm [Occ=Once] ->
                 case w2_saWpf of { GHC.Ptr.Ptr ww4_saWpq [Occ=Once] ->
                 case w3_saWpg of { I# ww6_saWpu [Occ=Once] ->
                 case w4_saWph
                      `cast` (Foreign.C.Types.N:CSize[0]
                              :: (CSize :: *) ~R# (Word64 :: *))
                 of
                 { GHC.Word.W64# ww8_saWpy [Occ=Once] ->
                 GHC.IO.FD.$wreadRawBufferPtrNoBlock
                   w_saWpd ww1_saWpl ww2_saWpm ww4_saWpq ww6_saWpu ww8_saWpy w5_saWpi
                 }
                 }
                 }
                 }}]
GHC.IO.FD.readRawBufferPtrNoBlock1
  = \ (w_saWpd :: String)
      (w1_saWpe :: FD)
      (w2_saWpf :: Ptr Word8)
      (w3_saWpg :: Int)
      (w4_saWph :: CSize)
      (w5_saWpi :: State# RealWorld) ->
      case w1_saWpe of { FD ww1_saWpl ww2_saWpm ->
      case w2_saWpf of { GHC.Ptr.Ptr ww4_saWpq ->
      case w3_saWpg of { I# ww6_saWpu ->
      case w4_saWph
           `cast` (Foreign.C.Types.N:CSize[0]
                   :: (CSize :: *) ~R# (Word64 :: *))
      of
      { GHC.Word.W64# ww8_saWpy ->
      GHC.IO.FD.$wreadRawBufferPtrNoBlock
        w_saWpd ww1_saWpl ww2_saWpm ww4_saWpq ww6_saWpu ww8_saWpy w5_saWpi
      }
      }
      }
      }

-- RHS size: {terms: 30, types: 38, coercions: 0, joins: 0/0}
GHC.IO.FD.$w$creadNonBlocking [InlPrag=NOUSERINLINE[0]]
  :: Int#
     -> Int#
     -> Addr#
     -> Int#
     -> State# RealWorld
     -> (# State# RealWorld, Maybe Int #)
[GblId,
 Arity=5,
 Str=<S,U><S,1*U><S,U><S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0 0 0] 120 60}]
GHC.IO.FD.$w$creadNonBlocking
  = \ (ww_saWpH :: Int#)
      (ww1_saWpI :: Int#)
      (ww2_saWpM :: Addr#)
      (ww3_saWpQ :: Int#)
      (w_saWpE :: State# RealWorld) ->
      case GHC.IO.FD.$wreadRawBufferPtrNoBlock
             GHC.IO.FD.$fBufferedIOFD8
             ww_saWpH
             ww1_saWpI
             ww2_saWpM
             0#
             (int2Word# ww3_saWpQ)
             w_saWpE
      of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      case ipv1_i7IAz of wild_X37 { I# ds_daUId ->
      case ds_daUId of {
        __DEFAULT -> (# ipv_i7IAy, GHC.Base.Just @ Int wild_X37 #);
        -1# -> (# ipv_i7IAy, GHC.Base.Nothing @ Int #)
      }
      }
      }

-- RHS size: {terms: 19, types: 14, coercions: 0, joins: 0/0}
GHC.IO.FD.$fRawIOFD3 [InlPrag=NOUSERINLINE[0]]
  :: FD
     -> Ptr Word8
     -> Int
     -> State# RealWorld
     -> (# State# RealWorld, Maybe Int #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_saWpB [Occ=Once!] :: FD)
                 (w1_saWpC [Occ=Once!] :: Ptr Word8)
                 (w2_saWpD [Occ=Once!] :: Int)
                 (w3_saWpE [Occ=Once] :: State# RealWorld) ->
                 case w_saWpB of { FD ww1_saWpH [Occ=Once] ww2_saWpI [Occ=Once] ->
                 case w1_saWpC of { GHC.Ptr.Ptr ww4_saWpM [Occ=Once] ->
                 case w2_saWpD of { I# ww6_saWpQ [Occ=Once] ->
                 GHC.IO.FD.$w$creadNonBlocking
                   ww1_saWpH ww2_saWpI ww4_saWpM ww6_saWpQ w3_saWpE
                 }
                 }
                 }}]
GHC.IO.FD.$fRawIOFD3
  = \ (w_saWpB :: FD)
      (w1_saWpC :: Ptr Word8)
      (w2_saWpD :: Int)
      (w3_saWpE :: State# RealWorld) ->
      case w_saWpB of { FD ww1_saWpH ww2_saWpI ->
      case w1_saWpC of { GHC.Ptr.Ptr ww4_saWpM ->
      case w2_saWpD of { I# ww6_saWpQ ->
      GHC.IO.FD.$w$creadNonBlocking
        ww1_saWpH ww2_saWpI ww4_saWpM ww6_saWpQ w3_saWpE
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$fBufferedIOFD4 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 80 0}]
GHC.IO.FD.$fBufferedIOFD4 = "GHC.IO.FD.fdWriteNonBlocking"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$fBufferedIOFD_loc :: String
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.FD.$fBufferedIOFD_loc
  = unpackCString# GHC.IO.FD.$fBufferedIOFD4

-- RHS size: {terms: 10, types: 4, coercions: 1, joins: 0/0}
GHC.IO.FD.$fBufferedIOFD14 :: CSsize -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds1_iaUWH [Occ=Once] :: CSsize) ->
                 case ds1_iaUWH
                      `cast` (System.Posix.Types.N:CSsize[0]
                              :: (CSsize :: *) ~R# (Int64 :: *))
                 of
                 { GHC.Int.I64# x_i9hHB [Occ=Once!] ->
                 case x_i9hHB of {
                   __DEFAULT -> GHC.Types.False;
                   -1# -> GHC.Types.True
                 }
                 }}]
GHC.IO.FD.$fBufferedIOFD14
  = \ (ds1_iaUWH :: CSsize) ->
      case ds1_iaUWH
           `cast` (System.Posix.Types.N:CSsize[0]
                   :: (CSsize :: *) ~R# (Int64 :: *))
      of
      { GHC.Int.I64# x_i9hHB ->
      case x_i9hHB of {
        __DEFAULT -> GHC.Types.False;
        -1# -> GHC.Types.True
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$fBufferedIOFD13 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.IO.FD.$fBufferedIOFD13 = "GHC.IO.FD.fdRead"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$fBufferedIOFD12 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.FD.$fBufferedIOFD12
  = unpackCString# GHC.IO.FD.$fBufferedIOFD13

-- RHS size: {terms: 172, types: 222, coercions: 24, joins: 3/3}
GHC.IO.FD.$wreadRawBufferPtr [InlPrag=NOUSERINLINE[0]]
  :: String
     -> Int#
     -> Int#
     -> Addr#
     -> Int#
     -> Word#
     -> State# RealWorld
     -> (# State# RealWorld, Int #)
[GblId,
 Arity=7,
 Str=<L,U><S,U><S,1*U><L,U><L,U><L,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 85 0 0 0 0] 630 0}]
GHC.IO.FD.$wreadRawBufferPtr
  = \ (w_saWq3 :: String)
      (ww_saWqb :: Int#)
      (ww1_saWqc :: Int#)
      (ww2_saWqg :: Addr#)
      (ww3_saWqk :: Int#)
      (ww4_saWqo :: Word#)
      (w1_saWq8 :: State# RealWorld) ->
      join {
        $sdo_read_saVjk [Dmd=<L,1*C1(C1(U(U,U)))>]
          :: IO CSsize -> State# RealWorld -> (# State# RealWorld, Int #)
        [LclId[JoinId(2)],
         Arity=2,
         Str=<C(S),C(U(U,U))><S,U>,
         Unf=OtherCon []]
        $sdo_read_saVjk (eta_B2 [OS=OneShot] :: IO CSsize)
                        (eta1_X2H [OS=OneShot] :: State# RealWorld)
          = case Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                   @ CSsize
                   @ ()
                   GHC.IO.FD.$fBufferedIOFD14
                   w_saWq3
                   eta_B2
                   ((\ (eta2_Xa :: State# RealWorld) ->
                       case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_daTrC
                              realWorld#
                       of
                       { (# ds_daTrB, ds1_daTrA #) ->
                       case ds1_daTrA of {
                         __DEFAULT ->
                           GHC.Event.Thread.threadWaitRead1
                             GHC.Event.Internal.evtRead
                             ((GHC.Int.I32# (narrow32Int# ww_saWqb))
                              `cast` (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (System.Posix.Types.N:Fd[0])
                                      :: (Int32 :: *) ~R# (Fd :: *)))
                             eta2_Xa;
                         0# ->
                           case waitRead# @ RealWorld (narrow32Int# ww_saWqb) eta2_Xa
                           of s'_aaTmD
                           { __DEFAULT ->
                           (# s'_aaTmD, GHC.Tuple.() #)
                           }
                       }
                       })
                    `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                            :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                               ~R# (IO () :: *)))
                   eta1_X2H
            of
            { (# ipv_i7Vb3, ipv1_i7Vb4 #) ->
            (# ipv_i7Vb3,
               case ipv1_i7Vb4
                    `cast` (System.Posix.Types.N:CSsize[0]
                            :: (CSsize :: *) ~R# (Int64 :: *))
               of
               { GHC.Int.I64# x#_i9hAN ->
               GHC.Types.I# x#_i9hAN
               } #)
            } } in
      case ww1_saWqc of {
        __DEFAULT ->
          jump $sdo_read_saVjk
            ((\ (eta_X2J :: State# RealWorld) ->
                case {__pkg_ccall base-4.11.0.0 Int#
                           -> Addr#
                           -> Word#
                           -> State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iao7w
                       ww_saWqb (plusAddr# ww2_saWqg ww3_saWqk) ww4_saWqo eta_X2J
                of
                { (# ds10_iao7B, ds11_iao7C #) ->
                (# ds10_iao7B, GHC.Int.I64# ds11_iao7C #)
                })
             `cast` (Sym (GHC.Types.N:IO[0] (System.Posix.Types.N:CSsize[0]))
                     :: (State# RealWorld -> (# State# RealWorld, Int64 #) :: *)
                        ~R# (IO CSsize :: *)))
            w1_saWq8;
        0# ->
          case {__pkg_ccall base-4.11.0.0 Int#
                           -> Word#
                           -> Int#
                           -> Word#
                           -> State# RealWorld
                           -> (# State# RealWorld, Int# #)}_daUQ4
                 ww_saWqb 0## 0# 0## w1_saWq8
          of
          { (# ds_daUQ2, ds1_daUQ1 #) ->
          join {
            $w$j_saWq2 [InlPrag=NOUSERINLINE[0], Dmd=<L,1*C1(C1(U(U,U)))>]
              :: State# RealWorld -> Int# -> (# State# RealWorld, Int #)
            [LclId[JoinId(2)], Arity=2, Str=<L,U><S,1*U>, Unf=OtherCon []]
            $w$j_saWq2 (w2_saWpW [OS=OneShot] :: State# RealWorld)
                       (ww5_saWq0 [OS=OneShot] :: Int#)
              = join {
                  read_saVj5 [Dmd=<L,1*C1(U(U,U))>]
                    :: State# RealWorld -> (# State# RealWorld, Int #)
                  [LclId[JoinId(1)], Arity=1, Str=<L,U>, Unf=OtherCon []]
                  read_saVj5 (eta_X2O [OS=OneShot] :: State# RealWorld)
                    = case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_daUPN
                             realWorld#
                      of
                      { (# ds2_daUPM, ds3_daUPL #) ->
                      case ds3_daUPL of {
                        __DEFAULT ->
                          jump $sdo_read_saVjk
                            ((\ (ds9_iaUHA :: State# RealWorld) ->
                                case {__pkg_ccall_GC base-4.11.0.0 Int#
                              -> Addr#
                              -> Word#
                              -> State# RealWorld
                              -> (# State# RealWorld, Int# #)}_iaUHB
                                       ww_saWqb (plusAddr# ww2_saWqg ww3_saWqk) ww4_saWqo ds9_iaUHA
                                of
                                { (# ds10_iaUHG, ds11_iaUHH #) ->
                                (# ds10_iaUHG, GHC.Int.I64# ds11_iaUHH #)
                                })
                             `cast` (Sym (GHC.Types.N:IO[0] (System.Posix.Types.N:CSsize[0]))
                                     :: (State# RealWorld -> (# State# RealWorld, Int64 #) :: *)
                                        ~R# (IO CSsize :: *)))
                            eta_X2O;
                        0# ->
                          jump $sdo_read_saVjk
                            ((\ (eta1_X2J :: State# RealWorld) ->
                                case {__pkg_ccall base-4.11.0.0 Int#
                           -> Addr#
                           -> Word#
                           -> State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iao7w
                                       ww_saWqb (plusAddr# ww2_saWqg ww3_saWqk) ww4_saWqo eta1_X2J
                                of
                                { (# ds10_iao7B, ds11_iao7C #) ->
                                (# ds10_iao7B, GHC.Int.I64# ds11_iao7C #)
                                })
                             `cast` (Sym (GHC.Types.N:IO[0] (System.Posix.Types.N:CSsize[0]))
                                     :: (State# RealWorld -> (# State# RealWorld, Int64 #) :: *)
                                        ~R# (IO CSsize :: *)))
                            eta_X2O
                      }
                      } } in
                case ww5_saWq0 of {
                  __DEFAULT -> jump read_saVj5 w2_saWpW;
                  0# ->
                    case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_daTrC
                           realWorld#
                    of
                    { (# ds2_daTrB, ds3_daTrA #) ->
                    case ds3_daTrA of {
                      __DEFAULT ->
                        case GHC.Event.Thread.threadWaitRead1
                               GHC.Event.Internal.evtRead
                               ((GHC.Int.I32# (narrow32Int# ww_saWqb))
                                `cast` (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (System.Posix.Types.N:Fd[0])
                                        :: (Int32 :: *) ~R# (Fd :: *)))
                               w2_saWpW
                        of
                        { (# ipv_i7JiK, ipv1_i7JiL #) ->
                        jump read_saVj5 ipv_i7JiK
                        };
                      0# ->
                        case waitRead# @ RealWorld (narrow32Int# ww_saWqb) w2_saWpW
                        of s'_aaTmD
                        { __DEFAULT ->
                        jump read_saVj5 s'_aaTmD
                        }
                    }
                    }
                } } in
          case narrow32Int# ds1_daUQ1 of wild2_X3v {
            __DEFAULT -> jump $w$j_saWq2 ds_daUQ2 wild2_X3v;
            -1# ->
              case Foreign.C.Error.throwErrno1 @ CInt w_saWq3 ds_daUQ2 of
              { (# ipv_i7IAy, ipv1_i7IAz #) ->
              case ipv1_i7IAz
                   `cast` (Foreign.C.Types.N:CInt[0] :: (CInt :: *) ~R# (Int32 :: *))
              of
              { GHC.Int.I32# ww6_saWq0 ->
              jump $w$j_saWq2 ipv_i7IAy ww6_saWq0
              }
              }
          }
          }
      }

-- RHS size: {terms: 26, types: 18, coercions: 1, joins: 0/0}
GHC.IO.FD.$fRawIOFD5 [InlPrag=NOUSERINLINE[0]]
  :: String
     -> FD
     -> Ptr Word8
     -> Int
     -> CSize
     -> State# RealWorld
     -> (# State# RealWorld, Int #)
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=6,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_saWq3 [Occ=Once] :: String)
                 (w1_saWq4 [Occ=Once!] :: FD)
                 (w2_saWq5 [Occ=Once!] :: Ptr Word8)
                 (w3_saWq6 [Occ=Once!] :: Int)
                 (w4_saWq7 [Occ=Once] :: CSize)
                 (w5_saWq8 [Occ=Once] :: State# RealWorld) ->
                 case w1_saWq4 of { FD ww1_saWqb [Occ=Once] ww2_saWqc [Occ=Once] ->
                 case w2_saWq5 of { GHC.Ptr.Ptr ww4_saWqg [Occ=Once] ->
                 case w3_saWq6 of { I# ww6_saWqk [Occ=Once] ->
                 case w4_saWq7
                      `cast` (Foreign.C.Types.N:CSize[0]
                              :: (CSize :: *) ~R# (Word64 :: *))
                 of
                 { GHC.Word.W64# ww8_saWqo [Occ=Once] ->
                 GHC.IO.FD.$wreadRawBufferPtr
                   w_saWq3 ww1_saWqb ww2_saWqc ww4_saWqg ww6_saWqk ww8_saWqo w5_saWq8
                 }
                 }
                 }
                 }}]
GHC.IO.FD.$fRawIOFD5
  = \ (w_saWq3 :: String)
      (w1_saWq4 :: FD)
      (w2_saWq5 :: Ptr Word8)
      (w3_saWq6 :: Int)
      (w4_saWq7 :: CSize)
      (w5_saWq8 :: State# RealWorld) ->
      case w1_saWq4 of { FD ww1_saWqb ww2_saWqc ->
      case w2_saWq5 of { GHC.Ptr.Ptr ww4_saWqg ->
      case w3_saWq6 of { I# ww6_saWqk ->
      case w4_saWq7
           `cast` (Foreign.C.Types.N:CSize[0]
                   :: (CSize :: *) ~R# (Word64 :: *))
      of
      { GHC.Word.W64# ww8_saWqo ->
      GHC.IO.FD.$wreadRawBufferPtr
        w_saWq3 ww1_saWqb ww2_saWqc ww4_saWqg ww6_saWqk ww8_saWqo w5_saWq8
      }
      }
      }
      }

-- RHS size: {terms: 22, types: 14, coercions: 0, joins: 0/0}
GHC.IO.FD.$fRawIOFD4
  :: FD
     -> Ptr Word8
     -> Int
     -> State# RealWorld
     -> (# State# RealWorld, Int #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (fd_aaUdy [Occ=Once] :: FD)
                 (ptr_aaUdz [Occ=Once] :: Ptr Word8)
                 (bytes_aaUdA [Occ=Once!] :: Int)
                 (s_i7IAv [Occ=Once] :: State# RealWorld) ->
                 case bytes_aaUdA of { I# x#_i7NZc [Occ=Once] ->
                 GHC.IO.FD.$fRawIOFD5
                   GHC.IO.FD.$fBufferedIOFD12
                   fd_aaUdy
                   ptr_aaUdz
                   GHC.IO.FD.$fBufferedIOFD2
                   ((GHC.Word.W64# (int2Word# x#_i7NZc))
                    `cast` (Sym (Foreign.C.Types.N:CSize[0])
                            :: (Word64 :: *) ~R# (CSize :: *)))
                   s_i7IAv
                 }}]
GHC.IO.FD.$fRawIOFD4
  = \ (fd_aaUdy :: FD)
      (ptr_aaUdz :: Ptr Word8)
      (bytes_aaUdA :: Int)
      (s_i7IAv :: State# RealWorld) ->
      case fd_aaUdy of { FD ww1_saWqb ww2_saWqc ->
      case ptr_aaUdz of { GHC.Ptr.Ptr ww4_saWqg ->
      case bytes_aaUdA of { I# x#_i7NZc ->
      GHC.IO.FD.$wreadRawBufferPtr
        GHC.IO.FD.$fBufferedIOFD12
        ww1_saWqb
        ww2_saWqc
        ww4_saWqg
        0#
        (int2Word# x#_i7NZc)
        s_i7IAv
      }
      }
      }

-- RHS size: {terms: 152, types: 193, coercions: 25, joins: 2/2}
GHC.IO.FD.$wwriteRawBufferPtr [InlPrag=NOUSERINLINE[0]]
  :: String
     -> Int#
     -> Int#
     -> Addr#
     -> Int#
     -> Word#
     -> State# RealWorld
     -> (# State# RealWorld, CInt #)
[GblId,
 Arity=7,
 Str=<L,U><S,U><S,1*U><L,U><L,U><L,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 85 0 0 0 0] 563 0}]
GHC.IO.FD.$wwriteRawBufferPtr
  = \ (w_saWqu :: String)
      (ww_saWqC :: Int#)
      (ww1_saWqD :: Int#)
      (ww2_saWqH :: Addr#)
      (ww3_saWqL :: Int#)
      (ww4_saWqP :: Word#)
      (w1_saWqz :: State# RealWorld) ->
      join {
        $sdo_write_saVjW [Dmd=<L,1*C1(C1(U(U,U)))>]
          :: IO CSsize -> State# RealWorld -> (# State# RealWorld, CInt #)
        [LclId[JoinId(2)],
         Arity=2,
         Str=<C(S),C(U(U,U))><S,U>,
         Unf=OtherCon []]
        $sdo_write_saVjW (eta_B2 [OS=OneShot] :: IO CSsize)
                         (eta1_X2t [OS=OneShot] :: State# RealWorld)
          = case Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                   @ CSsize
                   @ ()
                   GHC.IO.FD.$fBufferedIOFD14
                   w_saWqu
                   eta_B2
                   ((\ (eta2_Xa :: State# RealWorld) ->
                       case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_daTrC
                              realWorld#
                       of
                       { (# ds_daTrB, ds1_daTrA #) ->
                       case ds1_daTrA of {
                         __DEFAULT ->
                           GHC.Event.Thread.threadWaitRead1
                             GHC.Event.Internal.evtWrite
                             ((GHC.Int.I32# (narrow32Int# ww_saWqC))
                              `cast` (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (System.Posix.Types.N:Fd[0])
                                      :: (Int32 :: *) ~R# (Fd :: *)))
                             eta2_Xa;
                         0# ->
                           case waitWrite# @ RealWorld (narrow32Int# ww_saWqC) eta2_Xa
                           of s'_aaTmH
                           { __DEFAULT ->
                           (# s'_aaTmH, GHC.Tuple.() #)
                           }
                       }
                       })
                    `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                            :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                               ~R# (IO () :: *)))
                   eta1_X2t
            of
            { (# ipv_i7Vb3, ipv1_i7Vb4 #) ->
            (# ipv_i7Vb3,
               case ipv1_i7Vb4
                    `cast` (System.Posix.Types.N:CSsize[0]
                            :: (CSsize :: *) ~R# (Int64 :: *))
               of
               { GHC.Int.I64# x#_i9hAN ->
               (GHC.Int.I32# (narrow32Int# x#_i9hAN))
               `cast` (Sym (Foreign.C.Types.N:CInt[0])
                       :: (Int32 :: *) ~R# (CInt :: *))
               } #)
            } } in
      case ww1_saWqD of {
        __DEFAULT ->
          jump $sdo_write_saVjW
            ((\ (eta_X2v :: State# RealWorld) ->
                case {__pkg_ccall base-4.11.0.0 Int#
                           -> Addr#
                           -> Word#
                           -> State# RealWorld
                           -> (# State# RealWorld, Int# #)}_ia4JF
                       ww_saWqC (plusAddr# ww2_saWqH ww3_saWqL) ww4_saWqP eta_X2v
                of
                { (# ds10_ia4JK, ds11_ia4JL #) ->
                (# ds10_ia4JK, GHC.Int.I64# ds11_ia4JL #)
                })
             `cast` (Sym (GHC.Types.N:IO[0] (System.Posix.Types.N:CSsize[0]))
                     :: (State# RealWorld -> (# State# RealWorld, Int64 #) :: *)
                        ~R# (IO CSsize :: *)))
            w1_saWqz;
        0# ->
          case {__pkg_ccall base-4.11.0.0 Int#
                           -> Word#
                           -> Int#
                           -> Word#
                           -> State# RealWorld
                           -> (# State# RealWorld, Int# #)}_daUQ4
                 ww_saWqC 1## 0# 0## w1_saWqz
          of
          { (# ds_daUQ2, ds1_daUQ1 #) ->
          join {
            write_saVjH [Dmd=<L,1*C1(U(U,U))>]
              :: State# RealWorld -> (# State# RealWorld, CInt #)
            [LclId[JoinId(1)], Arity=1, Str=<L,U>, Unf=OtherCon []]
            write_saVjH (eta_X2A [OS=OneShot] :: State# RealWorld)
              = case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_daUPN
                       realWorld#
                of
                { (# ds2_daUPM, ds3_daUPL #) ->
                case ds3_daUPL of {
                  __DEFAULT ->
                    jump $sdo_write_saVjW
                      ((\ (ds9_iaUGK :: State# RealWorld) ->
                          case {__pkg_ccall_GC base-4.11.0.0 Int#
                              -> Addr#
                              -> Word#
                              -> State# RealWorld
                              -> (# State# RealWorld, Int# #)}_iaUGL
                                 ww_saWqC (plusAddr# ww2_saWqH ww3_saWqL) ww4_saWqP ds9_iaUGK
                          of
                          { (# ds10_iaUGQ, ds11_iaUGR #) ->
                          (# ds10_iaUGQ, GHC.Int.I64# ds11_iaUGR #)
                          })
                       `cast` (Sym (GHC.Types.N:IO[0] (System.Posix.Types.N:CSsize[0]))
                               :: (State# RealWorld -> (# State# RealWorld, Int64 #) :: *)
                                  ~R# (IO CSsize :: *)))
                      eta_X2A;
                  0# ->
                    jump $sdo_write_saVjW
                      ((\ (eta1_X2v :: State# RealWorld) ->
                          case {__pkg_ccall base-4.11.0.0 Int#
                           -> Addr#
                           -> Word#
                           -> State# RealWorld
                           -> (# State# RealWorld, Int# #)}_ia4JF
                                 ww_saWqC (plusAddr# ww2_saWqH ww3_saWqL) ww4_saWqP eta1_X2v
                          of
                          { (# ds10_ia4JK, ds11_ia4JL #) ->
                          (# ds10_ia4JK, GHC.Int.I64# ds11_ia4JL #)
                          })
                       `cast` (Sym (GHC.Types.N:IO[0] (System.Posix.Types.N:CSsize[0]))
                               :: (State# RealWorld -> (# State# RealWorld, Int64 #) :: *)
                                  ~R# (IO CSsize :: *)))
                      eta_X2A
                }
                } } in
          case narrow32Int# ds1_daUQ1 of {
            __DEFAULT -> jump write_saVjH ds_daUQ2;
            0# ->
              case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_daTrC
                     realWorld#
              of
              { (# ds2_daTrB, ds3_daTrA #) ->
              case ds3_daTrA of {
                __DEFAULT ->
                  case GHC.Event.Thread.threadWaitRead1
                         GHC.Event.Internal.evtWrite
                         ((GHC.Int.I32# (narrow32Int# ww_saWqC))
                          `cast` (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (System.Posix.Types.N:Fd[0])
                                  :: (Int32 :: *) ~R# (Fd :: *)))
                         ds_daUQ2
                  of
                  { (# ipv_i7JiK, ipv1_i7JiL #) ->
                  jump write_saVjH ipv_i7JiK
                  };
                0# ->
                  case waitWrite# @ RealWorld (narrow32Int# ww_saWqC) ds_daUQ2
                  of s'_aaTmH
                  { __DEFAULT ->
                  jump write_saVjH s'_aaTmH
                  }
              }
              }
          }
          }
      }

-- RHS size: {terms: 26, types: 18, coercions: 1, joins: 0/0}
GHC.IO.FD.writeRawBufferPtr1 [InlPrag=NOUSERINLINE[0]]
  :: String
     -> FD
     -> Ptr Word8
     -> Int
     -> CSize
     -> State# RealWorld
     -> (# State# RealWorld, CInt #)
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=6,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_saWqu [Occ=Once] :: String)
                 (w1_saWqv [Occ=Once!] :: FD)
                 (w2_saWqw [Occ=Once!] :: Ptr Word8)
                 (w3_saWqx [Occ=Once!] :: Int)
                 (w4_saWqy [Occ=Once] :: CSize)
                 (w5_saWqz [Occ=Once] :: State# RealWorld) ->
                 case w1_saWqv of { FD ww1_saWqC [Occ=Once] ww2_saWqD [Occ=Once] ->
                 case w2_saWqw of { GHC.Ptr.Ptr ww4_saWqH [Occ=Once] ->
                 case w3_saWqx of { I# ww6_saWqL [Occ=Once] ->
                 case w4_saWqy
                      `cast` (Foreign.C.Types.N:CSize[0]
                              :: (CSize :: *) ~R# (Word64 :: *))
                 of
                 { GHC.Word.W64# ww8_saWqP [Occ=Once] ->
                 GHC.IO.FD.$wwriteRawBufferPtr
                   w_saWqu ww1_saWqC ww2_saWqD ww4_saWqH ww6_saWqL ww8_saWqP w5_saWqz
                 }
                 }
                 }
                 }}]
GHC.IO.FD.writeRawBufferPtr1
  = \ (w_saWqu :: String)
      (w1_saWqv :: FD)
      (w2_saWqw :: Ptr Word8)
      (w3_saWqx :: Int)
      (w4_saWqy :: CSize)
      (w5_saWqz :: State# RealWorld) ->
      case w1_saWqv of { FD ww1_saWqC ww2_saWqD ->
      case w2_saWqw of { GHC.Ptr.Ptr ww4_saWqH ->
      case w3_saWqx of { I# ww6_saWqL ->
      case w4_saWqy
           `cast` (Foreign.C.Types.N:CSize[0]
                   :: (CSize :: *) ~R# (Word64 :: *))
      of
      { GHC.Word.W64# ww8_saWqP ->
      GHC.IO.FD.$wwriteRawBufferPtr
        w_saWqu ww1_saWqC ww2_saWqD ww4_saWqH ww6_saWqL ww8_saWqP w5_saWqz
      }
      }
      }
      }

Rec {
-- RHS size: {terms: 38, types: 27, coercions: 1, joins: 0/0}
GHC.IO.FD.$wfdWrite [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: Int#
     -> Int#
     -> Addr#
     -> Int#
     -> State# RealWorld
     -> (# State# RealWorld, () #)
[GblId, Arity=5, Str=<S,U><S,U><S,U><S,U><S,U>, Unf=OtherCon []]
GHC.IO.FD.$wfdWrite
  = \ (ww_saWqY :: Int#)
      (ww1_saWqZ :: Int#)
      (ww2_saWr3 :: Addr#)
      (ww3_saWr7 :: Int#)
      (w_saWqV :: State# RealWorld) ->
      case GHC.IO.FD.$wwriteRawBufferPtr
             lvl1_raWUY
             ww_saWqY
             ww1_saWqZ
             ww2_saWr3
             0#
             (int2Word# ww3_saWr7)
             w_saWqV
      of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      case ipv1_i7IAz
           `cast` (Foreign.C.Types.N:CInt[0] :: (CInt :: *) ~R# (Int32 :: *))
      of
      { GHC.Int.I32# x#_i7O0N ->
      case <# x#_i7O0N ww3_saWr7 of {
        __DEFAULT -> (# ipv_i7IAy, GHC.Tuple.() #);
        1# ->
          GHC.IO.FD.$wfdWrite
            ww_saWqY
            ww1_saWqZ
            (plusAddr# ww2_saWr3 x#_i7O0N)
            (-# ww3_saWr7 x#_i7O0N)
            ipv_i7IAy
      }
      }
      }
end Rec }

-- RHS size: {terms: 19, types: 14, coercions: 0, joins: 0/0}
GHC.IO.FD.$fRawIOFD2 [InlPrag=NOUSERINLINE[0]]
  :: FD
     -> Ptr Word8
     -> Int
     -> State# RealWorld
     -> (# State# RealWorld, () #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_saWqS [Occ=Once!] :: FD)
                 (w1_saWqT [Occ=Once!] :: Ptr Word8)
                 (w2_saWqU [Occ=Once!] :: Int)
                 (w3_saWqV [Occ=Once] :: State# RealWorld) ->
                 case w_saWqS of { FD ww1_saWqY [Occ=Once] ww2_saWqZ [Occ=Once] ->
                 case w1_saWqT of { GHC.Ptr.Ptr ww4_saWr3 [Occ=Once] ->
                 case w2_saWqU of { I# ww6_saWr7 [Occ=Once] ->
                 GHC.IO.FD.$wfdWrite
                   ww1_saWqY ww2_saWqZ ww4_saWr3 ww6_saWr7 w3_saWqV
                 }
                 }
                 }}]
GHC.IO.FD.$fRawIOFD2
  = \ (w_saWqS :: FD)
      (w1_saWqT :: Ptr Word8)
      (w2_saWqU :: Int)
      (w3_saWqV :: State# RealWorld) ->
      case w_saWqS of { FD ww1_saWqY ww2_saWqZ ->
      case w1_saWqT of { GHC.Ptr.Ptr ww4_saWr3 ->
      case w2_saWqU of { I# ww6_saWr7 ->
      GHC.IO.FD.$wfdWrite
        ww1_saWqY ww2_saWqZ ww4_saWr3 ww6_saWr7 w3_saWqV
      }
      }
      }

-- RHS size: {terms: 135, types: 182, coercions: 21, joins: 0/0}
GHC.IO.FD.$w$cwriteNonBlocking [InlPrag=NOUSERINLINE[0]]
  :: Int#
     -> Int#
     -> Addr#
     -> Int#
     -> State# RealWorld
     -> (# State# RealWorld, Int #)
[GblId,
 Arity=5,
 Str=<S,U><S,1*U><L,U><L,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 171 0 0 0] 554 210}]
GHC.IO.FD.$w$cwriteNonBlocking
  = \ (ww_saWrg :: Int#)
      (ww1_saWrh :: Int#)
      (ww2_saWrl :: Addr#)
      (ww3_saWrp :: Int#)
      (w_saWrd :: State# RealWorld) ->
      case ww1_saWrh of {
        __DEFAULT ->
          case GHC.IO.FD.$fBufferedIOFD5
                 GHC.IO.FD.$fBufferedIOFD_loc
                 ((\ (eta_B1 :: State# RealWorld) ->
                     case {__pkg_ccall base-4.11.0.0 Int#
                           -> Addr#
                           -> Word#
                           -> State# RealWorld
                           -> (# State# RealWorld, Int# #)}_ia4JF
                            ww_saWrg ww2_saWrl (int2Word# ww3_saWrp) eta_B1
                     of
                     { (# ds10_ia4JK, ds11_ia4JL #) ->
                     (# ds10_ia4JK, GHC.Int.I64# ds11_ia4JL #)
                     })
                  `cast` (Sym (GHC.Types.N:IO[0] (System.Posix.Types.N:CSsize[0]))
                          :: (State# RealWorld -> (# State# RealWorld, Int64 #) :: *)
                             ~R# (IO CSsize :: *)))
                 (GHC.IO.FD.$fBufferedIOFD3
                  `cast` (Sym (GHC.Types.N:IO[0] <CSsize>_R)
                          :: (State# RealWorld -> (# State# RealWorld, CSsize #) :: *)
                             ~R# (IO CSsize :: *)))
                 w_saWrd
          of
          { (# ipv_i7IAy, ipv1_i7IAz #) ->
          case ipv1_i7IAz
               `cast` (System.Posix.Types.N:CSsize[0]
                       :: (CSsize :: *) ~R# (Int64 :: *))
          of
          { GHC.Int.I64# x_i9hHB ->
          case x_i9hHB of wild2_X3j {
            __DEFAULT ->
              (# ipv_i7IAy, GHC.Types.I# (narrow32Int# wild2_X3j) #);
            -1# -> (# ipv_i7IAy, GHC.IO.FD.$fBufferedIOFD2 #)
          }
          }
          };
        0# ->
          case {__pkg_ccall base-4.11.0.0 Int#
                           -> Word#
                           -> Int#
                           -> Word#
                           -> State# RealWorld
                           -> (# State# RealWorld, Int# #)}_daUQ4
                 ww_saWrg 1## 0# 0## w_saWrd
          of
          { (# ds_daUQ2, ds1_daUQ1 #) ->
          case narrow32Int# ds1_daUQ1 of {
            __DEFAULT ->
              case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_daUPN
                     realWorld#
              of
              { (# ds2_daUPM, ds3_daUPL #) ->
              case ds3_daUPL of {
                __DEFAULT ->
                  case GHC.IO.FD.$fBufferedIOFD5
                         GHC.IO.FD.$fBufferedIOFD_loc
                         ((\ (ds9_iaUGK :: State# RealWorld) ->
                             case {__pkg_ccall_GC base-4.11.0.0 Int#
                              -> Addr#
                              -> Word#
                              -> State# RealWorld
                              -> (# State# RealWorld, Int# #)}_iaUGL
                                    ww_saWrg ww2_saWrl (int2Word# ww3_saWrp) ds9_iaUGK
                             of
                             { (# ds10_iaUGQ, ds11_iaUGR #) ->
                             (# ds10_iaUGQ, GHC.Int.I64# ds11_iaUGR #)
                             })
                          `cast` (Sym (GHC.Types.N:IO[0] (System.Posix.Types.N:CSsize[0]))
                                  :: (State# RealWorld -> (# State# RealWorld, Int64 #) :: *)
                                     ~R# (IO CSsize :: *)))
                         (GHC.IO.FD.$fBufferedIOFD3
                          `cast` (Sym (GHC.Types.N:IO[0] <CSsize>_R)
                                  :: (State# RealWorld -> (# State# RealWorld, CSsize #) :: *)
                                     ~R# (IO CSsize :: *)))
                         ds_daUQ2
                  of
                  { (# ipv_X7IGc, ipv1_X7IGe #) ->
                  case ipv1_X7IGe
                       `cast` (System.Posix.Types.N:CSsize[0]
                               :: (CSsize :: *) ~R# (Int64 :: *))
                  of
                  { GHC.Int.I64# x_i9hHB ->
                  case x_i9hHB of wild6_X3A {
                    __DEFAULT ->
                      (# ipv_X7IGc, GHC.Types.I# (narrow32Int# wild6_X3A) #);
                    -1# -> (# ipv_X7IGc, GHC.IO.FD.$fBufferedIOFD2 #)
                  }
                  }
                  };
                0# ->
                  case GHC.IO.FD.$fBufferedIOFD5
                         GHC.IO.FD.$fBufferedIOFD_loc
                         ((\ (eta_B1 :: State# RealWorld) ->
                             case {__pkg_ccall base-4.11.0.0 Int#
                           -> Addr#
                           -> Word#
                           -> State# RealWorld
                           -> (# State# RealWorld, Int# #)}_ia4JF
                                    ww_saWrg ww2_saWrl (int2Word# ww3_saWrp) eta_B1
                             of
                             { (# ds10_ia4JK, ds11_ia4JL #) ->
                             (# ds10_ia4JK, GHC.Int.I64# ds11_ia4JL #)
                             })
                          `cast` (Sym (GHC.Types.N:IO[0] (System.Posix.Types.N:CSsize[0]))
                                  :: (State# RealWorld -> (# State# RealWorld, Int64 #) :: *)
                                     ~R# (IO CSsize :: *)))
                         (GHC.IO.FD.$fBufferedIOFD3
                          `cast` (Sym (GHC.Types.N:IO[0] <CSsize>_R)
                                  :: (State# RealWorld -> (# State# RealWorld, CSsize #) :: *)
                                     ~R# (IO CSsize :: *)))
                         ds_daUQ2
                  of
                  { (# ipv_X7IGc, ipv1_X7IGe #) ->
                  case ipv1_X7IGe
                       `cast` (System.Posix.Types.N:CSsize[0]
                               :: (CSsize :: *) ~R# (Int64 :: *))
                  of
                  { GHC.Int.I64# x_i9hHB ->
                  case x_i9hHB of wild6_X3B {
                    __DEFAULT ->
                      (# ipv_X7IGc, GHC.Types.I# (narrow32Int# wild6_X3B) #);
                    -1# -> (# ipv_X7IGc, GHC.IO.FD.$fBufferedIOFD2 #)
                  }
                  }
                  }
              }
              };
            0# -> (# ds_daUQ2, GHC.IO.FD.$fBufferedIOFD2 #)
          }
          }
      }

-- RHS size: {terms: 19, types: 14, coercions: 0, joins: 0/0}
GHC.IO.FD.$fRawIOFD1 [InlPrag=NOUSERINLINE[0]]
  :: FD
     -> Ptr Word8
     -> Int
     -> State# RealWorld
     -> (# State# RealWorld, Int #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_saWra [Occ=Once!] :: FD)
                 (w1_saWrb [Occ=Once!] :: Ptr Word8)
                 (w2_saWrc [Occ=Once!] :: Int)
                 (w3_saWrd [Occ=Once] :: State# RealWorld) ->
                 case w_saWra of { FD ww1_saWrg [Occ=Once] ww2_saWrh [Occ=Once] ->
                 case w1_saWrb of { GHC.Ptr.Ptr ww4_saWrl [Occ=Once] ->
                 case w2_saWrc of { I# ww6_saWrp [Occ=Once] ->
                 GHC.IO.FD.$w$cwriteNonBlocking
                   ww1_saWrg ww2_saWrh ww4_saWrl ww6_saWrp w3_saWrd
                 }
                 }
                 }}]
GHC.IO.FD.$fRawIOFD1
  = \ (w_saWra :: FD)
      (w1_saWrb :: Ptr Word8)
      (w2_saWrc :: Int)
      (w3_saWrd :: State# RealWorld) ->
      case w_saWra of { FD ww1_saWrg ww2_saWrh ->
      case w1_saWrb of { GHC.Ptr.Ptr ww4_saWrl ->
      case w2_saWrc of { I# ww6_saWrp ->
      GHC.IO.FD.$w$cwriteNonBlocking
        ww1_saWrg ww2_saWrh ww4_saWrl ww6_saWrp w3_saWrd
      }
      }
      }

-- RHS size: {terms: 5, types: 1, coercions: 41, joins: 0/0}
GHC.IO.FD.$fRawIOFD [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.IO.Device.RawIO FD
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ ->
       GHC.IO.Device.C:RawIO TYPE: FD
                             GHC.IO.FD.$fRawIOFD4
                             `cast` (<FD>_R
                                     ->_R <Ptr Word8>_R
                                     ->_R <Int>_R
                                     ->_R Sym (GHC.Types.N:IO[0] <Int>_R)
                                     :: (FD
                                         -> Ptr Word8
                                         -> Int
                                         -> State# RealWorld
                                         -> (# State# RealWorld, Int #) :: *)
                                        ~R# (FD -> Ptr Word8 -> Int -> IO Int :: *))
                             GHC.IO.FD.$fRawIOFD3
                             `cast` (<FD>_R
                                     ->_R <Ptr Word8>_R
                                     ->_R <Int>_R
                                     ->_R Sym (GHC.Types.N:IO[0] <Maybe Int>_R)
                                     :: (FD
                                         -> Ptr Word8
                                         -> Int
                                         -> State# RealWorld
                                         -> (# State# RealWorld, Maybe Int #) :: *)
                                        ~R# (FD -> Ptr Word8 -> Int -> IO (Maybe Int) :: *))
                             GHC.IO.FD.$fRawIOFD2
                             `cast` (<FD>_R
                                     ->_R <Ptr Word8>_R
                                     ->_R <Int>_R
                                     ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                                     :: (FD
                                         -> Ptr Word8
                                         -> Int
                                         -> State# RealWorld
                                         -> (# State# RealWorld, () #) :: *)
                                        ~R# (FD -> Ptr Word8 -> Int -> IO () :: *))
                             GHC.IO.FD.$fRawIOFD1
                             `cast` (<FD>_R
                                     ->_R <Ptr Word8>_R
                                     ->_R <Int>_R
                                     ->_R Sym (GHC.Types.N:IO[0] <Int>_R)
                                     :: (FD
                                         -> Ptr Word8
                                         -> Int
                                         -> State# RealWorld
                                         -> (# State# RealWorld, Int #) :: *)
                                        ~R# (FD -> Ptr Word8 -> Int -> IO Int :: *))]
GHC.IO.FD.$fRawIOFD
  = GHC.IO.Device.C:RawIO
      @ FD
      (GHC.IO.FD.$fRawIOFD4
       `cast` (<FD>_R
               ->_R <Ptr Word8>_R
               ->_R <Int>_R
               ->_R Sym (GHC.Types.N:IO[0] <Int>_R)
               :: (FD
                   -> Ptr Word8
                   -> Int
                   -> State# RealWorld
                   -> (# State# RealWorld, Int #) :: *)
                  ~R# (FD -> Ptr Word8 -> Int -> IO Int :: *)))
      (GHC.IO.FD.$fRawIOFD3
       `cast` (<FD>_R
               ->_R <Ptr Word8>_R
               ->_R <Int>_R
               ->_R Sym (GHC.Types.N:IO[0] <Maybe Int>_R)
               :: (FD
                   -> Ptr Word8
                   -> Int
                   -> State# RealWorld
                   -> (# State# RealWorld, Maybe Int #) :: *)
                  ~R# (FD -> Ptr Word8 -> Int -> IO (Maybe Int) :: *)))
      (GHC.IO.FD.$fRawIOFD2
       `cast` (<FD>_R
               ->_R <Ptr Word8>_R
               ->_R <Int>_R
               ->_R Sym (GHC.Types.N:IO[0] <()>_R)
               :: (FD
                   -> Ptr Word8
                   -> Int
                   -> State# RealWorld
                   -> (# State# RealWorld, () #) :: *)
                  ~R# (FD -> Ptr Word8 -> Int -> IO () :: *)))
      (GHC.IO.FD.$fRawIOFD1
       `cast` (<FD>_R
               ->_R <Ptr Word8>_R
               ->_R <Int>_R
               ->_R Sym (GHC.Types.N:IO[0] <Int>_R)
               :: (FD
                   -> Ptr Word8
                   -> Int
                   -> State# RealWorld
                   -> (# State# RealWorld, Int #) :: *)
                  ~R# (FD -> Ptr Word8 -> Int -> IO Int :: *)))

-- RHS size: {terms: 35, types: 40, coercions: 0, joins: 0/0}
GHC.IO.FD.$fBufferedIOFD_$swriteBuf1 [InlPrag=NOUSERINLINE[0]]
  :: FD
     -> Buffer Word8
     -> State# RealWorld
     -> (# State# RealWorld, Buffer Word8 #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,U)><S(SLLLSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w1_iaV6g [Occ=Once!] :: FD)
                 (w2_iaV6h [Occ=Once!] :: Buffer Word8)
                 (w3_iaV6i [Occ=Once] :: State# RealWorld) ->
                 case w2_iaV6h of
                 { Buffer ww1_iaV6n ww2_iaV6o ww3_iaV6p [Occ=Once]
                          ww4_iaV6q [Occ=Once] ww5_iaV6r ww6_iaV6s [Occ=Once] ->
                 case w1_iaV6g of { FD ww8_saWqY [Occ=Once] ww9_saWqZ [Occ=Once] ->
                 case GHC.IO.FD.$wfdWrite
                        ww8_saWqY
                        ww9_saWqZ
                        (plusAddr# ww1_iaV6n ww5_iaV6r)
                        (-# ww6_iaV6s ww5_iaV6r)
                        w3_iaV6i
                 of
                 { (# ipv_iaVkR [Occ=Once], _ [Occ=Dead] #) ->
                 case touch#
                        @ 'LiftedRep
                        @ GHC.ForeignPtr.ForeignPtrContents
                        ww2_iaV6o
                        ipv_iaVkR
                 of s'_iaVkU
                 { __DEFAULT ->
                 (# s'_iaVkU,
                    GHC.IO.Buffer.Buffer
                      @ Word8 ww1_iaV6n ww2_iaV6o ww3_iaV6p ww4_iaV6q 0# 0# #)
                 }
                 }
                 }
                 }}]
GHC.IO.FD.$fBufferedIOFD_$swriteBuf1
  = \ (w1_iaV6g :: FD)
      (w2_iaV6h :: Buffer Word8)
      (w3_iaV6i :: State# RealWorld) ->
      case w2_iaV6h of
      { Buffer ww1_iaV6n ww2_iaV6o ww3_iaV6p ww4_iaV6q ww5_iaV6r
               ww6_iaV6s ->
      case w1_iaV6g of { FD ww8_saWqY ww9_saWqZ ->
      case GHC.IO.FD.$wfdWrite
             ww8_saWqY
             ww9_saWqZ
             (plusAddr# ww1_iaV6n ww5_iaV6r)
             (-# ww6_iaV6s ww5_iaV6r)
             w3_iaV6i
      of
      { (# ipv_iaVkR, ipv1_iaVkS #) ->
      case touch#
             @ 'LiftedRep
             @ GHC.ForeignPtr.ForeignPtrContents
             ww2_iaV6o
             ipv_iaVkR
      of s'_iaVkU
      { __DEFAULT ->
      (# s'_iaVkU,
         GHC.IO.Buffer.Buffer
           @ Word8 ww1_iaV6n ww2_iaV6o ww3_iaV6p ww4_iaV6q 0# 0# #)
      }
      }
      }
      }

-- RHS size: {terms: 6, types: 4, coercions: 0, joins: 0/0}
fdIsNonBlocking :: FD -> Int
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LS),1*U(A,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_daUOz [Occ=Once!] :: FD) ->
                 case ds_daUOz of { FD _ [Occ=Dead] dt1_daUQw [Occ=Once] ->
                 GHC.Types.I# dt1_daUQw
                 }}]
fdIsNonBlocking
  = \ (ds_daUOz :: FD) ->
      case ds_daUOz of { FD dt_daUQv dt1_daUQw ->
      GHC.Types.I# dt1_daUQw
      }

-- RHS size: {terms: 6, types: 4, coercions: 2, joins: 0/0}
fdFD :: FD -> CInt
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_daUOv [Occ=Once!] :: FD) ->
                 case ds_daUOv of { FD dt_daUQt [Occ=Once] _ [Occ=Dead] ->
                 (GHC.Int.I32# dt_daUQt)
                 `cast` (Sym (Foreign.C.Types.N:CInt[0])
                         :: (Int32 :: *) ~R# (CInt :: *))
                 }}]
fdFD
  = \ (ds_daUOv :: FD) ->
      case ds_daUOv of { FD dt_daUQt dt1_daUQu ->
      (GHC.Int.I32# dt_daUQt)
      `cast` (Sym (Foreign.C.Types.N:CInt[0])
              :: (Int32 :: *) ~R# (CInt :: *))
      }

-- RHS size: {terms: 13, types: 15, coercions: 0, joins: 0/0}
GHC.IO.FD.$fShowFD_$cshow :: FD -> String
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)>m2,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (fd_aaUcs [Occ=Once!] :: FD) ->
                 case fd_aaUcs of { FD dt_daUQt [Occ=Once] _ [Occ=Dead] ->
                 case GHC.Show.$wshowSignedInt 0# dt_daUQt (GHC.Types.[] @ Char) of
                 { (# ww5_i9gYK [Occ=Once], ww6_i9gYL [Occ=Once] #) ->
                 GHC.Types.: @ Char ww5_i9gYK ww6_i9gYL
                 }
                 }}]
GHC.IO.FD.$fShowFD_$cshow
  = \ (fd_aaUcs :: FD) ->
      case fd_aaUcs of { FD dt_daUQt dt1_daUQu ->
      case GHC.Show.$wshowSignedInt 0# dt_daUQt (GHC.Types.[] @ Char) of
      { (# ww5_i9gYK, ww6_i9gYL #) ->
      GHC.Types.: @ Char ww5_i9gYK ww6_i9gYL
      }
      }

-- RHS size: {terms: 25, types: 44, coercions: 5, joins: 0/0}
GHC.IO.FD.$fBufferedIOFD15
  :: FD
     -> BufferState
     -> State# RealWorld
     -> (# State# RealWorld, Buffer Word8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,A><L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ _ [Occ=Dead]
                 (state_aaUcj [Occ=Once] :: BufferState)
                 (s_ia4Y1 [Occ=Once] :: State# RealWorld) ->
                 case newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        s_ia4Y1
                 of
                 { (# ipv_ia4Y9 [Occ=Once], ipv1_ia4Ya [Occ=Once] #) ->
                 case newPinnedByteArray# @ RealWorld 8192# ipv_ia4Y9 of
                 { (# ipv2_ia4Ye [Occ=Once], ipv3_ia4Yf #) ->
                 (# ipv2_ia4Ye,
                    GHC.IO.Buffer.Buffer
                      @ Word8
                      (byteArrayContents#
                         (ipv3_ia4Yf
                          `cast` (UnsafeCo representational (MutableByteArray#
                                                               RealWorld) ByteArray#
                                  :: (MutableByteArray# RealWorld :: TYPE 'UnliftedRep)
                                     ~R# (ByteArray# :: TYPE 'UnliftedRep))))
                      (GHC.ForeignPtr.MallocPtr ipv3_ia4Yf ipv1_ia4Ya)
                      state_aaUcj
                      8192#
                      0#
                      0# #)
                 }
                 }}]
GHC.IO.FD.$fBufferedIOFD15
  = \ _ [Occ=Dead]
      (state_aaUcj :: BufferState)
      (s_ia4Y1 :: State# RealWorld) ->
      case newMutVar#
             @ GHC.ForeignPtr.Finalizers
             @ RealWorld
             GHC.ForeignPtr.NoFinalizers
             s_ia4Y1
      of
      { (# ipv_ia4Y9, ipv1_ia4Ya #) ->
      case newPinnedByteArray# @ RealWorld 8192# ipv_ia4Y9 of
      { (# ipv2_ia4Ye, ipv3_ia4Yf #) ->
      (# ipv2_ia4Ye,
         GHC.IO.Buffer.Buffer
           @ Word8
           (byteArrayContents#
              (ipv3_ia4Yf
               `cast` (UnsafeCo representational (MutableByteArray#
                                                    RealWorld) ByteArray#
                       :: (MutableByteArray# RealWorld :: TYPE 'UnliftedRep)
                          ~R# (ByteArray# :: TYPE 'UnliftedRep))))
           (GHC.ForeignPtr.MallocPtr ipv3_ia4Yf ipv1_ia4Ya)
           state_aaUcj
           8192#
           0#
           0# #)
      }
      }

-- RHS size: {terms: 9, types: 6, coercions: 2, joins: 0/0}
GHC.IO.FD.$fIODeviceFD12
  :: FD -> State# RealWorld -> (# State# RealWorld, Integer #)
[GblId,
 Arity=2,
 Str=<L,1*U(U,A)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (fd_aaUdd [Occ=Once!] :: FD)
                 (eta_B1 [Occ=Once] :: State# RealWorld) ->
                 System.Posix.Internals.fdFileSize1
                   (case fd_aaUdd of { FD dt_daUQt [Occ=Once] _ [Occ=Dead] ->
                    (GHC.Int.I32# dt_daUQt)
                    `cast` (Sym (Foreign.C.Types.N:CInt[0])
                            :: (Int32 :: *) ~R# (CInt :: *))
                    })
                   eta_B1}]
GHC.IO.FD.$fIODeviceFD12
  = \ (fd_aaUdd :: FD) (eta_B1 :: State# RealWorld) ->
      System.Posix.Internals.fdFileSize1
        (case fd_aaUdd of { FD dt_daUQt dt1_daUQu ->
         (GHC.Int.I32# dt_daUQt)
         `cast` (Sym (Foreign.C.Types.N:CInt[0])
                 :: (Int32 :: *) ~R# (CInt :: *))
         })
        eta_B1

-- RHS size: {terms: 11, types: 7, coercions: 2, joins: 0/0}
GHC.IO.FD.$fIODeviceFD9
  :: FD -> Bool -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=3,
 Str=<L,1*U(U,A)><L,1*U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (fd_aaUdt [Occ=Once!] :: FD)
                 (on_aaUdu [Occ=Once] :: Bool)
                 (eta_B1 [Occ=Once] :: State# RealWorld) ->
                 System.Posix.Internals.setEcho1
                   (case fd_aaUdt of { FD dt_daUQt [Occ=Once] _ [Occ=Dead] ->
                    (GHC.Int.I32# dt_daUQt)
                    `cast` (Sym (Foreign.C.Types.N:CInt[0])
                            :: (Int32 :: *) ~R# (CInt :: *))
                    })
                   on_aaUdu
                   eta_B1}]
GHC.IO.FD.$fIODeviceFD9
  = \ (fd_aaUdt :: FD)
      (on_aaUdu :: Bool)
      (eta_B1 :: State# RealWorld) ->
      System.Posix.Internals.setEcho1
        (case fd_aaUdt of { FD dt_daUQt dt1_daUQu ->
         (GHC.Int.I32# dt_daUQt)
         `cast` (Sym (Foreign.C.Types.N:CInt[0])
                 :: (Int32 :: *) ~R# (CInt :: *))
         })
        on_aaUdu
        eta_B1

-- RHS size: {terms: 10, types: 7, coercions: 8, joins: 0/0}
GHC.IO.FD.$fIODeviceFD8
  :: FD -> State# RealWorld -> (# State# RealWorld, Bool #)
[GblId,
 Arity=2,
 Str=<L,1*U(U,A)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (fd_aaUdv [Occ=Once!] :: FD)
                 (eta_iaUSq [Occ=Once] :: State# RealWorld) ->
                 System.Posix.Internals.getEcho3
                   @ Bool
                   (case fd_aaUdv of { FD dt_daUQt [Occ=Once] _ [Occ=Dead] ->
                    (GHC.Int.I32# dt_daUQt)
                    `cast` (Sym (Foreign.C.Types.N:CInt[0])
                            :: (Int32 :: *) ~R# (CInt :: *))
                    })
                   (System.Posix.Internals.getEcho2
                    `cast` (<Ptr CTermios>_R ->_R Sym (GHC.Types.N:IO[0] <Bool>_R)
                            :: (Ptr CTermios
                                -> State# RealWorld -> (# State# RealWorld, Bool #) :: *)
                               ~R# (Ptr CTermios -> IO Bool :: *)))
                   eta_iaUSq}]
GHC.IO.FD.$fIODeviceFD8
  = \ (fd_aaUdv :: FD) (eta_iaUSq :: State# RealWorld) ->
      System.Posix.Internals.getEcho3
        @ Bool
        (case fd_aaUdv of { FD dt_daUQt dt1_daUQu ->
         (GHC.Int.I32# dt_daUQt)
         `cast` (Sym (Foreign.C.Types.N:CInt[0])
                 :: (Int32 :: *) ~R# (CInt :: *))
         })
        (System.Posix.Internals.getEcho2
         `cast` (<Ptr CTermios>_R ->_R Sym (GHC.Types.N:IO[0] <Bool>_R)
                 :: (Ptr CTermios
                     -> State# RealWorld -> (# State# RealWorld, Bool #) :: *)
                    ~R# (Ptr CTermios -> IO Bool :: *)))
        eta_iaUSq

-- RHS size: {terms: 16, types: 8, coercions: 2, joins: 0/0}
GHC.IO.FD.$fIODeviceFD7
  :: FD -> Bool -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=3,
 Str=<L,1*U(U,A)><L,1*U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (fd_aaUdw [Occ=Once!] :: FD)
                 (raw_aaUdx [Occ=Once!] :: Bool)
                 (eta_B1 [Occ=Once] :: State# RealWorld) ->
                 System.Posix.Internals.setCooked1
                   (case fd_aaUdw of { FD dt_daUQt [Occ=Once] _ [Occ=Dead] ->
                    (GHC.Int.I32# dt_daUQt)
                    `cast` (Sym (Foreign.C.Types.N:CInt[0])
                            :: (Int32 :: *) ~R# (CInt :: *))
                    })
                   (case raw_aaUdx of {
                      False -> GHC.Types.True;
                      True -> GHC.Types.False
                    })
                   eta_B1}]
GHC.IO.FD.$fIODeviceFD7
  = \ (fd_aaUdw :: FD)
      (raw_aaUdx :: Bool)
      (eta_B1 :: State# RealWorld) ->
      System.Posix.Internals.setCooked1
        (case fd_aaUdw of { FD dt_daUQt dt1_daUQu ->
         (GHC.Int.I32# dt_daUQt)
         `cast` (Sym (Foreign.C.Types.N:CInt[0])
                 :: (Int32 :: *) ~R# (CInt :: *))
         })
        (case raw_aaUdx of {
           False -> GHC.Types.True;
           True -> GHC.Types.False
         })
        eta_B1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$trModule4 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.FD.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$trModule3 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.FD.$trModule3 = GHC.Types.TrNameS GHC.IO.FD.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$trModule2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.IO.FD.$trModule2 = "GHC.IO.FD"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$trModule1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.FD.$trModule1 = GHC.Types.TrNameS GHC.IO.FD.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$trModule :: Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.IO.FD.$trModule
  = GHC.Types.Module GHC.IO.FD.$trModule3 GHC.IO.FD.$trModule1

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_raWV0 :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep_raWV0
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcInt (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep1_raWV1 :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep1_raWV1
  = GHC.Types.KindRepTyConApp
      Foreign.C.Types.$tcCInt (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$tcFD2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.FD.$tcFD2 = "FD"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$tcFD1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.FD.$tcFD1 = GHC.Types.TrNameS GHC.IO.FD.$tcFD2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$tcFD :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.IO.FD.$tcFD
  = GHC.Types.TyCon
      10838815552519039062##
      15546290101957756376##
      GHC.IO.FD.$trModule
      GHC.IO.FD.$tcFD1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep2_raWV2 :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep2_raWV2
  = GHC.Types.KindRepTyConApp
      GHC.IO.FD.$tcFD (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep3_raWV3 :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep3_raWV3 = GHC.Types.KindRepFun $krep_raWV0 $krep2_raWV2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$tc'FD1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.IO.FD.$tc'FD1 = GHC.Types.KindRepFun $krep1_raWV1 $krep3_raWV3

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$tc'FD3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.FD.$tc'FD3 = "'FD"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$tc'FD2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.IO.FD.$tc'FD2 = GHC.Types.TrNameS GHC.IO.FD.$tc'FD3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$tc'FD :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.IO.FD.$tc'FD
  = GHC.Types.TyCon
      9025179437427398028##
      18071003818566613836##
      GHC.IO.FD.$trModule
      GHC.IO.FD.$tc'FD2
      0#
      GHC.IO.FD.$tc'FD1

-- RHS size: {terms: 17, types: 18, coercions: 0, joins: 0/0}
GHC.IO.FD.$fShowFD_$cshowsPrec :: Int -> FD -> ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,A><S(SL),1*U(U,A)><L,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ _ [Occ=Dead]
                 (x_i7QGZ [Occ=Once!] :: FD)
                 (s_i7QH0 [Occ=Once] :: String) ->
                 case x_i7QGZ of { FD dt_daUQt [Occ=Once] _ [Occ=Dead] ->
                 case GHC.Show.$wshowSignedInt 0# dt_daUQt (GHC.Types.[] @ Char) of
                 { (# ww5_i9gYK [Occ=Once], ww6_i9gYL [Occ=Once] #) ->
                 augment
                   @ Char
                   (\ (@ b_i7JbU)
                      (c_i7JbV [Occ=Once, OS=OneShot] :: Char -> b_i7JbU -> b_i7JbU)
                      (n_i7JbW [Occ=Once, OS=OneShot] :: b_i7JbU) ->
                      foldr
                        @ Char
                        @ b_i7JbU
                        c_i7JbV
                        n_i7JbW
                        (GHC.Types.: @ Char ww5_i9gYK ww6_i9gYL))
                   s_i7QH0
                 }
                 }}]
GHC.IO.FD.$fShowFD_$cshowsPrec
  = \ _ [Occ=Dead] (x_i7QGZ :: FD) (s_i7QH0 :: String) ->
      case x_i7QGZ of { FD dt_daUQt dt1_daUQu ->
      case GHC.Show.$wshowSignedInt 0# dt_daUQt (GHC.Types.[] @ Char) of
      { (# ww5_i9gYK, ww6_i9gYL #) ->
      ++ @ Char (GHC.Types.: @ Char ww5_i9gYK ww6_i9gYL) s_i7QH0
      }
      }

-- RHS size: {terms: 13, types: 14, coercions: 0, joins: 0/0}
GHC.IO.FD.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: Int# -> String -> [Char]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 90 0}]
GHC.IO.FD.$wlvl
  = \ (ww_saWrw :: Int#) (w_saWrt :: String) ->
      case GHC.Show.$wshowSignedInt 0# ww_saWrw (GHC.Types.[] @ Char) of
      { (# ww5_i9gYK, ww6_i9gYL #) ->
      ++ @ Char (GHC.Types.: @ Char ww5_i9gYK ww6_i9gYL) w_saWrt
      }

-- RHS size: {terms: 8, types: 5, coercions: 0, joins: 0/0}
GHC.IO.FD.$fShowFD1 [InlPrag=NOUSERINLINE[0]] :: FD -> ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><L,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_saWrs [Occ=Once!] :: FD)
                 (w1_saWrt [Occ=Once] :: String) ->
                 case w_saWrs of { FD ww1_saWrw [Occ=Once] _ [Occ=Dead] ->
                 GHC.IO.FD.$wlvl ww1_saWrw w1_saWrt
                 }}]
GHC.IO.FD.$fShowFD1
  = \ (w_saWrs :: FD) (w1_saWrt :: String) ->
      case w_saWrs of { FD ww1_saWrw ww2_saWrx ->
      GHC.IO.FD.$wlvl ww1_saWrw w1_saWrt
      }

-- RHS size: {terms: 6, types: 4, coercions: 0, joins: 0/0}
GHC.IO.FD.$fShowFD_$cshowList :: [FD] -> ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ls_i7JaB [Occ=Once] :: [FD])
                 (s_i7JaC [Occ=Once] :: String) ->
                 showList__ @ FD GHC.IO.FD.$fShowFD1 ls_i7JaB s_i7JaC}]
GHC.IO.FD.$fShowFD_$cshowList
  = \ (ls_i7JaB :: [FD]) (s_i7JaC :: String) ->
      showList__ @ FD GHC.IO.FD.$fShowFD1 ls_i7JaB s_i7JaC

-- RHS size: {terms: 4, types: 1, coercions: 0, joins: 0/0}
GHC.IO.FD.$fShowFD [InlPrag=NOUSERINLINE CONLIKE] :: Show FD
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ ->
       GHC.Show.C:Show TYPE: FD
                       GHC.IO.FD.$fShowFD_$cshowsPrec
                       GHC.IO.FD.$fShowFD_$cshow
                       GHC.IO.FD.$fShowFD_$cshowList]
GHC.IO.FD.$fShowFD
  = GHC.Show.C:Show
      @ FD
      GHC.IO.FD.$fShowFD_$cshowsPrec
      GHC.IO.FD.$fShowFD_$cshow
      GHC.IO.FD.$fShowFD_$cshowList

-- RHS size: {terms: 17, types: 22, coercions: 0, joins: 0/0}
output_flags_raWV4 :: Int32
[GblId]
output_flags_raWV4
  = case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iaUME
           realWorld#
    of
    { (# ds_iaUMH, ds1_iaUMI #) ->
    case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iaUML
           realWorld#
    of
    { (# ds2_iaUMO, ds3_iaUMP #) ->
    GHC.Int.I32#
      (word2Int#
         (or#
            (int2Word# (narrow32Int# ds1_iaUMI))
            (int2Word# (narrow32Int# ds3_iaUMP))))
    }
    }

-- RHS size: {terms: 15, types: 13, coercions: 0, joins: 0/0}
write_flags_raWV5 :: Int32
[GblId]
write_flags_raWV5
  = case output_flags_raWV4 of { GHC.Int.I32# x#_i9h2C ->
    case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iaUMS
           realWorld#
    of
    { (# ds_iaUMV, ds1_iaUMW #) ->
    GHC.Int.I32#
      (word2Int#
         (or# (int2Word# x#_i9h2C) (int2Word# (narrow32Int# ds1_iaUMW))))
    }
    }

-- RHS size: {terms: 15, types: 13, coercions: 0, joins: 0/0}
append_flags_raWV6 :: Int32
[GblId]
append_flags_raWV6
  = case write_flags_raWV5 of { GHC.Int.I32# x#_i9h2C ->
    case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iaUMZ
           realWorld#
    of
    { (# ds_iaUN2, ds1_iaUN3 #) ->
    GHC.Int.I32#
      (word2Int#
         (or# (int2Word# x#_i9h2C) (int2Word# (narrow32Int# ds1_iaUN3))))
    }
    }

-- RHS size: {terms: 15, types: 13, coercions: 0, joins: 0/0}
rw_flags_raWV7 :: Int32
[GblId]
rw_flags_raWV7
  = case output_flags_raWV4 of { GHC.Int.I32# x#_i9h2C ->
    case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iaUN6
           realWorld#
    of
    { (# ds_iaUN9, ds1_iaUNa #) ->
    GHC.Int.I32#
      (word2Int#
         (or# (int2Word# x#_i9h2C) (int2Word# (narrow32Int# ds1_iaUNa))))
    }
    }

-- RHS size: {terms: 17, types: 22, coercions: 0, joins: 0/0}
read_flags_raWV8 :: Int32
[GblId]
read_flags_raWV8
  = case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iaUME
           realWorld#
    of
    { (# ds_iaUMH, ds1_iaUMI #) ->
    case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iaUNd
           realWorld#
    of
    { (# ds2_iaUNg, ds3_iaUNh #) ->
    GHC.Int.I32#
      (word2Int#
         (or#
            (int2Word# (narrow32Int# ds1_iaUMI))
            (int2Word# (narrow32Int# ds3_iaUNh))))
    }
    }

-- RHS size: {terms: 10, types: 4, coercions: 1, joins: 0/0}
GHC.IO.FD.$fIODeviceFD16 :: COff -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds1_iaUV1 [Occ=Once] :: COff) ->
                 case ds1_iaUV1
                      `cast` (System.Posix.Types.N:COff[0]
                              :: (COff :: *) ~R# (Int64 :: *))
                 of
                 { GHC.Int.I64# x_i9hHB [Occ=Once!] ->
                 case x_i9hHB of {
                   __DEFAULT -> GHC.Types.False;
                   -1# -> GHC.Types.True
                 }
                 }}]
GHC.IO.FD.$fIODeviceFD16
  = \ (ds1_iaUV1 :: COff) ->
      case ds1_iaUV1
           `cast` (System.Posix.Types.N:COff[0]
                   :: (COff :: *) ~R# (Int64 :: *))
      of
      { GHC.Int.I64# x_i9hHB ->
      case x_i9hHB of {
        __DEFAULT -> GHC.Types.False;
        -1# -> GHC.Types.True
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$fIODeviceFD15 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.IO.FD.$fIODeviceFD15 = "hGetPosn"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$fIODeviceFD14 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.FD.$fIODeviceFD14 = unpackCString# GHC.IO.FD.$fIODeviceFD15

-- RHS size: {terms: 29, types: 53, coercions: 4, joins: 0/0}
GHC.IO.FD.$w$ctell [InlPrag=NOUSERINLINE[0]]
  :: Int# -> State# RealWorld -> (# State# RealWorld, Integer #)
[GblId,
 Arity=2,
 Str=<L,U><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 131 30}]
GHC.IO.FD.$w$ctell
  = \ (ww_saWrE :: Int#) (w_saWrB :: State# RealWorld) ->
      case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iaUKJ
             realWorld#
      of
      { (# ds_iaUKM, ds1_iaUKN #) ->
      case Foreign.C.Error.throwErrnoIfMinus1Retry2
             @ COff
             GHC.IO.FD.$fIODeviceFD16
             GHC.IO.FD.$fIODeviceFD14
             ((\ (ds9_iaUKA :: State# RealWorld) ->
                 case {__pkg_ccall base-4.11.0.0 Int#
                           -> Int#
                           -> Int#
                           -> State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iaUKB
                        ww_saWrE 0# (narrow32Int# ds1_iaUKN) ds9_iaUKA
                 of
                 { (# ds10_iaUKG, ds11_iaUKH #) ->
                 (# ds10_iaUKG, GHC.Int.I64# ds11_iaUKH #)
                 })
              `cast` (Sym (GHC.Types.N:IO[0] (System.Posix.Types.N:COff[0]))
                      :: (State# RealWorld -> (# State# RealWorld, Int64 #) :: *)
                         ~R# (IO COff :: *)))
             w_saWrB
      of
      { (# ipv_i7Vb3, ipv1_i7Vb4 #) ->
      (# ipv_i7Vb3,
         GHC.Int.$fIntegralInt64_$ctoInteger
           (ipv1_i7Vb4
            `cast` (System.Posix.Types.N:COff[0]
                    :: (COff :: *) ~R# (Int64 :: *))) #)
      }
      }

-- RHS size: {terms: 8, types: 6, coercions: 0, joins: 0/0}
GHC.IO.FD.$fIODeviceFD13 [InlPrag=NOUSERINLINE[0]]
  :: FD -> State# RealWorld -> (# State# RealWorld, Integer #)
[GblId,
 Arity=2,
 Str=<S(SL),1*U(U,A)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_saWrA [Occ=Once!] :: FD)
                 (w1_saWrB [Occ=Once] :: State# RealWorld) ->
                 case w_saWrA of { FD ww1_saWrE [Occ=Once] _ [Occ=Dead] ->
                 GHC.IO.FD.$w$ctell ww1_saWrE w1_saWrB
                 }}]
GHC.IO.FD.$fIODeviceFD13
  = \ (w_saWrA :: FD) (w1_saWrB :: State# RealWorld) ->
      case w_saWrA of { FD ww1_saWrE ww2_saWrF ->
      GHC.IO.FD.$w$ctell ww1_saWrE w1_saWrB
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$fIODeviceFD19 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.FD.$fIODeviceFD19 = "seek"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$fIODeviceFD18 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.FD.$fIODeviceFD18 = unpackCString# GHC.IO.FD.$fIODeviceFD19

-- RHS size: {terms: 57, types: 89, coercions: 3, joins: 1/1}
GHC.IO.FD.$w$cseek [InlPrag=NOUSERINLINE[0]]
  :: Int#
     -> SeekMode
     -> Integer
     -> State# RealWorld
     -> (# State# RealWorld, () #)
[GblId,
 Arity=4,
 Str=<L,U><S,1*U><S,1*U><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 70 0 0] 205 0}]
GHC.IO.FD.$w$cseek
  = \ (ww_saWrP :: Int#)
      (w_saWrK :: SeekMode)
      (w1_saWrL :: Integer)
      (w2_saWrM :: State# RealWorld) ->
      case integerToInt w1_saWrL of wild_i9hFe { __DEFAULT ->
      join {
        $j_saVrW [Dmd=<L,1*C1(U(U,U))>]
          :: Int# -> (# State# RealWorld, () #)
        [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []]
        $j_saVrW (ds8_iaUKC [OS=OneShot] :: Int#)
          = case Foreign.C.Error.throwErrnoIfMinus1Retry2
                   @ COff
                   GHC.IO.FD.$fIODeviceFD16
                   GHC.IO.FD.$fIODeviceFD18
                   ((\ (ds9_iaUKA :: State# RealWorld) ->
                       case {__pkg_ccall base-4.11.0.0 Int#
                           -> Int#
                           -> Int#
                           -> State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iaUKB
                              ww_saWrP wild_i9hFe ds8_iaUKC ds9_iaUKA
                       of
                       { (# ds10_iaUKG, ds11_iaUKH #) ->
                       (# ds10_iaUKG, GHC.Int.I64# ds11_iaUKH #)
                       })
                    `cast` (Sym (GHC.Types.N:IO[0] (System.Posix.Types.N:COff[0]))
                            :: (State# RealWorld -> (# State# RealWorld, Int64 #) :: *)
                               ~R# (IO COff :: *)))
                   w2_saWrM
            of
            { (# ipv_iaUL2, ipv1_iaUL3 #) ->
            (# ipv_iaUL2, GHC.Tuple.() #)
            } } in
      case w_saWrK of {
        AbsoluteSeek ->
          case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iaUL7
                 realWorld#
          of
          { (# ds_iaULa, ds1_iaULb #) ->
          jump $j_saVrW (narrow32Int# ds1_iaULb)
          };
        RelativeSeek ->
          case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iaUKJ
                 realWorld#
          of
          { (# ds_iaUKM, ds1_iaUKN #) ->
          jump $j_saVrW (narrow32Int# ds1_iaUKN)
          };
        SeekFromEnd ->
          case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iaULd
                 realWorld#
          of
          { (# ds_iaULg, ds1_iaULh #) ->
          jump $j_saVrW (narrow32Int# ds1_iaULh)
          }
      }
      }

-- RHS size: {terms: 12, types: 8, coercions: 0, joins: 0/0}
GHC.IO.FD.$fIODeviceFD17 [InlPrag=NOUSERINLINE[0]]
  :: FD
     -> SeekMode
     -> Integer
     -> State# RealWorld
     -> (# State# RealWorld, () #)
[GblId,
 Arity=4,
 Str=<S(SL),1*U(U,A)><S,1*U><S,1*U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_saWrJ [Occ=Once!] :: FD)
                 (w1_saWrK [Occ=Once] :: SeekMode)
                 (w2_saWrL [Occ=Once] :: Integer)
                 (w3_saWrM [Occ=Once] :: State# RealWorld) ->
                 case w_saWrJ of { FD ww1_saWrP [Occ=Once] _ [Occ=Dead] ->
                 GHC.IO.FD.$w$cseek ww1_saWrP w1_saWrK w2_saWrL w3_saWrM
                 }}]
GHC.IO.FD.$fIODeviceFD17
  = \ (w_saWrJ :: FD)
      (w1_saWrK :: SeekMode)
      (w2_saWrL :: Integer)
      (w3_saWrM :: State# RealWorld) ->
      case w_saWrJ of { FD ww1_saWrP ww2_saWrQ ->
      GHC.IO.FD.$w$cseek ww1_saWrP w1_saWrK w2_saWrL w3_saWrM
      }

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
stdin :: FD
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
stdin = GHC.IO.FD.FD 0# 0#

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
stdout :: FD
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
stdout = GHC.IO.FD.FD 1# 0#

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
stderr :: FD
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
stderr = GHC.IO.FD.FD 2# 0#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl3_raWV9 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl3_raWV9 = "GHC.IO.FD.setSize"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl4_raWVa :: [Char]
[GblId]
lvl4_raWVa = unpackCString# lvl3_raWV9

-- RHS size: {terms: 7, types: 4, coercions: 0, joins: 0/0}
GHC.IO.FD.$fIODeviceFD11
  :: State# RealWorld -> Int# -> (# State# RealWorld, CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []]
GHC.IO.FD.$fIODeviceFD11
  = \ (ds_iaUVP :: State# RealWorld) (ds2_iaUVQ :: Int#) ->
      Foreign.C.Error.$wlvl
        @ CInt lvl4_raWVa (narrow32Int# ds2_iaUVQ) ds_iaUVP

-- RHS size: {terms: 29, types: 43, coercions: 0, joins: 0/0}
GHC.IO.FD.$wsetSize [InlPrag=NOUSERINLINE[0]]
  :: Int#
     -> Integer -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=3,
 Str=<S,U><S,1*U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0 0] 111 30}]
GHC.IO.FD.$wsetSize
  = \ (ww_saWs0 :: Int#)
      (w_saWrW :: Integer)
      (w1_saWrX :: State# RealWorld) ->
      case integerToInt w_saWrW of wild_i9hFe { __DEFAULT ->
      case {__pkg_ccall base-4.11.0.0 Int#
                           -> Int# -> State# RealWorld -> (# State# RealWorld, Int# #)}_iaUKc
             ww_saWs0 wild_i9hFe w1_saWrX
      of
      { (# ds7_iaUKh, ds8_iaUKi #) ->
      case narrow32Int# ds8_iaUKi of {
        __DEFAULT ->
          case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iaUVL
                 ds7_iaUKh
          of
          { (# ds_iaUVP, ds2_iaUVQ #) ->
          case GHC.IO.FD.$fIODeviceFD11 ds_iaUVP ds2_iaUVQ of wild4_00 { }
          };
        0# -> (# ds7_iaUKh, GHC.Tuple.() #)
      }
      }
      }

-- RHS size: {terms: 10, types: 7, coercions: 0, joins: 0/0}
GHC.IO.FD.$fIODeviceFD10 [InlPrag=NOUSERINLINE[0]]
  :: FD -> Integer -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=3,
 Str=<S(SL),1*U(U,A)><S,1*U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_saWrV [Occ=Once!] :: FD)
                 (w1_saWrW [Occ=Once] :: Integer)
                 (w2_saWrX [Occ=Once] :: State# RealWorld) ->
                 case w_saWrV of { FD ww1_saWs0 [Occ=Once] _ [Occ=Dead] ->
                 GHC.IO.FD.$wsetSize ww1_saWs0 w1_saWrW w2_saWrX
                 }}]
GHC.IO.FD.$fIODeviceFD10
  = \ (w_saWrV :: FD)
      (w1_saWrW :: Integer)
      (w2_saWrX :: State# RealWorld) ->
      case w_saWrV of { FD ww1_saWs0 ww2_saWs1 ->
      GHC.IO.FD.$wsetSize ww1_saWs0 w1_saWrW w2_saWrX
      }

-- RHS size: {terms: 1, types: 0, coercions: 14, joins: 0/0}
writeRawBufferPtr
  :: String -> FD -> Ptr Word8 -> Int -> CSize -> IO CInt
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.FD.writeRawBufferPtr1
               `cast` (<String>_R
                       ->_R <FD>_R
                       ->_R <Ptr Word8>_R
                       ->_R <Int>_R
                       ->_R <CSize>_R
                       ->_R Sym (GHC.Types.N:IO[0] <CInt>_R)
                       :: (String
                           -> FD
                           -> Ptr Word8
                           -> Int
                           -> CSize
                           -> State# RealWorld
                           -> (# State# RealWorld, CInt #) :: *)
                          ~R# (String -> FD -> Ptr Word8 -> Int -> CSize -> IO CInt :: *))}]
writeRawBufferPtr
  = GHC.IO.FD.writeRawBufferPtr1
    `cast` (<String>_R
            ->_R <FD>_R
            ->_R <Ptr Word8>_R
            ->_R <Int>_R
            ->_R <CSize>_R
            ->_R Sym (GHC.Types.N:IO[0] <CInt>_R)
            :: (String
                -> FD
                -> Ptr Word8
                -> Int
                -> CSize
                -> State# RealWorld
                -> (# State# RealWorld, CInt #) :: *)
               ~R# (String -> FD -> Ptr Word8 -> Int -> CSize -> IO CInt :: *))

-- RHS size: {terms: 1, types: 0, coercions: 14, joins: 0/0}
readRawBufferPtrNoBlock
  :: String -> FD -> Ptr Word8 -> Int -> CSize -> IO Int
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.FD.readRawBufferPtrNoBlock1
               `cast` (<String>_R
                       ->_R <FD>_R
                       ->_R <Ptr Word8>_R
                       ->_R <Int>_R
                       ->_R <CSize>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Int>_R)
                       :: (String
                           -> FD
                           -> Ptr Word8
                           -> Int
                           -> CSize
                           -> State# RealWorld
                           -> (# State# RealWorld, Int #) :: *)
                          ~R# (String -> FD -> Ptr Word8 -> Int -> CSize -> IO Int :: *))}]
readRawBufferPtrNoBlock
  = GHC.IO.FD.readRawBufferPtrNoBlock1
    `cast` (<String>_R
            ->_R <FD>_R
            ->_R <Ptr Word8>_R
            ->_R <Int>_R
            ->_R <CSize>_R
            ->_R Sym (GHC.Types.N:IO[0] <Int>_R)
            :: (String
                -> FD
                -> Ptr Word8
                -> Int
                -> CSize
                -> State# RealWorld
                -> (# State# RealWorld, Int #) :: *)
               ~R# (String -> FD -> Ptr Word8 -> Int -> CSize -> IO Int :: *))

-- RHS size: {terms: 1, types: 0, coercions: 14, joins: 0/0}
readRawBufferPtr
  :: String -> FD -> Ptr Word8 -> Int -> CSize -> IO Int
[GblId,
 Arity=6,
 Str=<L,U><S(SS),1*U(U,1*U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.FD.$fRawIOFD5
               `cast` (<String>_R
                       ->_R <FD>_R
                       ->_R <Ptr Word8>_R
                       ->_R <Int>_R
                       ->_R <CSize>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Int>_R)
                       :: (String
                           -> FD
                           -> Ptr Word8
                           -> Int
                           -> CSize
                           -> State# RealWorld
                           -> (# State# RealWorld, Int #) :: *)
                          ~R# (String -> FD -> Ptr Word8 -> Int -> CSize -> IO Int :: *))}]
readRawBufferPtr
  = GHC.IO.FD.$fRawIOFD5
    `cast` (<String>_R
            ->_R <FD>_R
            ->_R <Ptr Word8>_R
            ->_R <Int>_R
            ->_R <CSize>_R
            ->_R Sym (GHC.Types.N:IO[0] <Int>_R)
            :: (String
                -> FD
                -> Ptr Word8
                -> Int
                -> CSize
                -> State# RealWorld
                -> (# State# RealWorld, Int #) :: *)
               ~R# (String -> FD -> Ptr Word8 -> Int -> CSize -> IO Int :: *))

-- RHS size: {terms: 66, types: 66, coercions: 0, joins: 0/0}
GHC.IO.FD.$w$cfillReadBuffer0 [InlPrag=NOUSERINLINE[0]]
  :: Int#
     -> Int#
     -> Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> BufferState
     -> Int#
     -> Int#
     -> Int#
     -> State# RealWorld
     -> (# State# RealWorld, (Maybe Int, Buffer Word8) #)
[GblId,
 Arity=9,
 Str=<S,U><S,1*U><S,U><L,U><L,U><S,U><L,U><S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0 0 0 0 0 0 0] 163 60}]
GHC.IO.FD.$w$cfillReadBuffer0
  = \ (ww_saWs9 :: Int#)
      (ww1_saWsa :: Int#)
      (ww2_saWse :: Addr#)
      (ww3_saWsf :: GHC.ForeignPtr.ForeignPtrContents)
      (ww4_saWsg :: BufferState)
      (ww5_saWsh :: Int#)
      (ww6_saWsi :: Int#)
      (ww7_saWsj :: Int#)
      (w_saWs6 :: State# RealWorld) ->
      case GHC.IO.FD.$wreadRawBufferPtrNoBlock
             GHC.IO.FD.$fBufferedIOFD8
             ww_saWs9
             ww1_saWsa
             (plusAddr# ww2_saWse ww7_saWsj)
             0#
             (int2Word# (-# ww5_saWsh ww7_saWsj))
             w_saWs6
      of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      case ipv1_i7IAz of wild_X37 { I# ds_daUId ->
      case ds_daUId of ds2_XaUJ5 {
        __DEFAULT ->
          case touch#
                 @ 'LiftedRep
                 @ GHC.ForeignPtr.ForeignPtrContents
                 ww3_saWsf
                 ipv_i7IAy
          of s'_iaVlA
          { __DEFAULT ->
          (# s'_iaVlA,
             (GHC.Base.Just @ Int wild_X37,
              GHC.IO.Buffer.Buffer
                @ Word8
                ww2_saWse
                ww3_saWsf
                ww4_saWsg
                ww5_saWsh
                ww6_saWsi
                (+# ww7_saWsj ds2_XaUJ5)) #)
          };
        -1# ->
          case touch#
                 @ 'LiftedRep
                 @ GHC.ForeignPtr.ForeignPtrContents
                 ww3_saWsf
                 ipv_i7IAy
          of s'_iaVlA
          { __DEFAULT ->
          (# s'_iaVlA,
             (GHC.Base.Nothing @ Int,
              GHC.IO.Buffer.Buffer
                @ Word8
                ww2_saWse
                ww3_saWsf
                ww4_saWsg
                ww5_saWsh
                ww6_saWsi
                ww7_saWsj) #)
          }
      }
      }
      }

-- RHS size: {terms: 19, types: 16, coercions: 0, joins: 0/0}
GHC.IO.FD.$fBufferedIOFD7 [InlPrag=NOUSERINLINE[0]]
  :: FD
     -> Buffer Word8
     -> State# RealWorld
     -> (# State# RealWorld, (Maybe Int, Buffer Word8) #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,1*U)><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_saWs4 [Occ=Once!] :: FD)
                 (w1_saWs5 [Occ=Once!] :: Buffer Word8)
                 (w2_saWs6 [Occ=Once] :: State# RealWorld) ->
                 case w_saWs4 of { FD ww1_saWs9 [Occ=Once] ww2_saWsa [Occ=Once] ->
                 case w1_saWs5 of
                 { Buffer ww4_saWse [Occ=Once] ww5_saWsf [Occ=Once]
                          ww6_saWsg [Occ=Once] ww7_saWsh [Occ=Once] ww8_saWsi [Occ=Once]
                          ww9_saWsj [Occ=Once] ->
                 GHC.IO.FD.$w$cfillReadBuffer0
                   ww1_saWs9
                   ww2_saWsa
                   ww4_saWse
                   ww5_saWsf
                   ww6_saWsg
                   ww7_saWsh
                   ww8_saWsi
                   ww9_saWsj
                   w2_saWs6
                 }
                 }}]
GHC.IO.FD.$fBufferedIOFD7
  = \ (w_saWs4 :: FD)
      (w1_saWs5 :: Buffer Word8)
      (w2_saWs6 :: State# RealWorld) ->
      case w_saWs4 of { FD ww1_saWs9 ww2_saWsa ->
      case w1_saWs5 of
      { Buffer ww4_saWse ww5_saWsf ww6_saWsg ww7_saWsh ww8_saWsi
               ww9_saWsj ->
      GHC.IO.FD.$w$cfillReadBuffer0
        ww1_saWs9
        ww2_saWsa
        ww4_saWse
        ww5_saWsf
        ww6_saWsg
        ww7_saWsh
        ww8_saWsi
        ww9_saWsj
        w2_saWs6
      }
      }

-- RHS size: {terms: 57, types: 44, coercions: 0, joins: 0/1}
GHC.IO.FD.$w$cflushWriteBuffer0 [InlPrag=NOUSERINLINE[0]]
  :: Int#
     -> Int#
     -> Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> BufferState
     -> Int#
     -> Int#
     -> Int#
     -> State# RealWorld
     -> (# State# RealWorld, (Int, Buffer Word8) #)
[GblId,
 Arity=9,
 Str=<S,U><S,1*U><S,U><L,U><L,U><L,U><S,U><S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0 0 0 0 0 0 0] 124 30}]
GHC.IO.FD.$w$cflushWriteBuffer0
  = \ (ww_saWsr :: Int#)
      (ww1_saWss :: Int#)
      (ww2_saWsw :: Addr#)
      (ww3_saWsx :: GHC.ForeignPtr.ForeignPtrContents)
      (ww4_saWsy :: BufferState)
      (ww5_saWsz :: Int#)
      (ww6_saWsA :: Int#)
      (ww7_saWsB :: Int#)
      (w_saWso :: State# RealWorld) ->
      case GHC.IO.FD.$w$cwriteNonBlocking
             ww_saWsr
             ww1_saWss
             (plusAddr# ww2_saWsw ww6_saWsA)
             (-# ww7_saWsB ww6_saWsA)
             w_saWso
      of
      { (# ipv_iaVl9, ipv1_iaVla #) ->
      case touch#
             @ 'LiftedRep
             @ GHC.ForeignPtr.ForeignPtrContents
             ww3_saWsx
             ipv_iaVl9
      of s'_iaVlc
      { __DEFAULT ->
      (# s'_iaVlc,
         (ipv1_iaVla,
          case ipv1_iaVla of { I# y_iaVlg ->
          let {
            x_iaVlf [Dmd=<S,U>] :: Int#
            [LclId]
            x_iaVlf = +# ww6_saWsA y_iaVlg } in
          case ==# x_iaVlf ww7_saWsB of {
            __DEFAULT ->
              GHC.IO.Buffer.Buffer
                @ Word8 ww2_saWsw ww3_saWsx ww4_saWsy ww5_saWsz x_iaVlf ww7_saWsB;
            1# ->
              GHC.IO.Buffer.Buffer
                @ Word8 ww2_saWsw ww3_saWsx ww4_saWsy ww5_saWsz 0# 0#
          }
          }) #)
      }
      }

-- RHS size: {terms: 19, types: 16, coercions: 0, joins: 0/0}
GHC.IO.FD.$fBufferedIOFD1 [InlPrag=NOUSERINLINE[0]]
  :: FD
     -> Buffer Word8
     -> State# RealWorld
     -> (# State# RealWorld, (Int, Buffer Word8) #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,1*U)><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_saWsm [Occ=Once!] :: FD)
                 (w1_saWsn [Occ=Once!] :: Buffer Word8)
                 (w2_saWso [Occ=Once] :: State# RealWorld) ->
                 case w_saWsm of { FD ww1_saWsr [Occ=Once] ww2_saWss [Occ=Once] ->
                 case w1_saWsn of
                 { Buffer ww4_saWsw [Occ=Once] ww5_saWsx [Occ=Once]
                          ww6_saWsy [Occ=Once] ww7_saWsz [Occ=Once] ww8_saWsA [Occ=Once]
                          ww9_saWsB [Occ=Once] ->
                 GHC.IO.FD.$w$cflushWriteBuffer0
                   ww1_saWsr
                   ww2_saWss
                   ww4_saWsw
                   ww5_saWsx
                   ww6_saWsy
                   ww7_saWsz
                   ww8_saWsA
                   ww9_saWsB
                   w2_saWso
                 }
                 }}]
GHC.IO.FD.$fBufferedIOFD1
  = \ (w_saWsm :: FD)
      (w1_saWsn :: Buffer Word8)
      (w2_saWso :: State# RealWorld) ->
      case w_saWsm of { FD ww1_saWsr ww2_saWss ->
      case w1_saWsn of
      { Buffer ww4_saWsw ww5_saWsx ww6_saWsy ww7_saWsz ww8_saWsA
               ww9_saWsB ->
      GHC.IO.FD.$w$cflushWriteBuffer0
        ww1_saWsr
        ww2_saWss
        ww4_saWsw
        ww5_saWsx
        ww6_saWsy
        ww7_saWsz
        ww8_saWsA
        ww9_saWsB
        w2_saWso
      }
      }

-- RHS size: {terms: 19, types: 25, coercions: 0, joins: 0/0}
GHC.IO.FD.$fIODeviceFD21
  :: FD -> State# RealWorld -> (# State# RealWorld, Bool #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (fd_aaUds [Occ=Once!] :: FD)
                 (s_i7IAv [Occ=Once] :: State# RealWorld) ->
                 case fd_aaUds of { FD dt_daUQt [Occ=Once] _ [Occ=Dead] ->
                 case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_iaUIu
                        dt_daUQt s_i7IAv
                 of
                 { (# ds4_iaUIz [Occ=Once], ds5_iaUIA [Occ=Once] #) ->
                 (# ds4_iaUIz,
                    case narrow32Int# ds5_iaUIA of {
                      __DEFAULT -> GHC.Types.True;
                      0# -> GHC.Types.False
                    } #)
                 }
                 }}]
GHC.IO.FD.$fIODeviceFD21
  = \ (fd_aaUds :: FD) (s_i7IAv :: State# RealWorld) ->
      case fd_aaUds of { FD dt_daUQt dt1_daUQu ->
      case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_iaUIu
             dt_daUQt s_i7IAv
      of
      { (# ds4_iaUIz, ds5_iaUIA #) ->
      (# ds4_iaUIz,
         case narrow32Int# ds5_iaUIA of {
           __DEFAULT -> GHC.Types.True;
           0# -> GHC.Types.False
         } #)
      }
      }

-- RHS size: {terms: 10, types: 4, coercions: 1, joins: 0/0}
GHC.IO.FD.$fIODeviceFD25 :: CInt -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds1_iaUV1 [Occ=Once] :: CInt) ->
                 case ds1_iaUV1
                      `cast` (Foreign.C.Types.N:CInt[0] :: (CInt :: *) ~R# (Int32 :: *))
                 of
                 { GHC.Int.I32# x_i8hv8 [Occ=Once!] ->
                 case x_i8hv8 of {
                   __DEFAULT -> GHC.Types.False;
                   -1# -> GHC.Types.True
                 }
                 }}]
GHC.IO.FD.$fIODeviceFD25
  = \ (ds1_iaUV1 :: CInt) ->
      case ds1_iaUV1
           `cast` (Foreign.C.Types.N:CInt[0] :: (CInt :: *) ~R# (Int32 :: *))
      of
      { GHC.Int.I32# x_i8hv8 ->
      case x_i8hv8 of {
        __DEFAULT -> GHC.Types.False;
        -1# -> GHC.Types.True
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$fIODeviceFD29 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.IO.FD.$fIODeviceFD29 = "GHC.IO.FD.ready"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$fIODeviceFD28 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.FD.$fIODeviceFD28 = unpackCString# GHC.IO.FD.$fIODeviceFD29

-- RHS size: {terms: 49, types: 58, coercions: 4, joins: 1/1}
GHC.IO.FD.$w$cready [InlPrag=NOUSERINLINE[0]]
  :: Int#
     -> Bool -> Int# -> State# RealWorld -> (# State# RealWorld, Bool #)
[GblId,
 Arity=4,
 Str=<S,U><S,1*U><S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 34 0 0] 190 0}]
GHC.IO.FD.$w$cready
  = \ (ww_saWsL :: Int#)
      (w_saWsG :: Bool)
      (ww1_saWsQ :: Int#)
      (w1_saWsI :: State# RealWorld) ->
      join {
        $j_saVIE [Dmd=<C(S),1*C1(U(U,U))>]
          :: Int# -> (# State# RealWorld, Bool #)
        [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []]
        $j_saVIE (i_i9n5y [OS=OneShot] :: Int#)
          = case Foreign.C.Error.throwErrnoIfMinus1Retry2
                   @ CInt
                   GHC.IO.FD.$fIODeviceFD25
                   GHC.IO.FD.$fIODeviceFD28
                   ((\ (ds_daUQk :: State# RealWorld) ->
                       case {__pkg_ccall_GC base-4.11.0.0 Int#
                              -> Word#
                              -> Int#
                              -> Word#
                              -> State# RealWorld
                              -> (# State# RealWorld, Int# #)}_daUQl
                              ww_saWsL (narrow8Word# (int2Word# i_i9n5y)) ww1_saWsQ 0## ds_daUQk
                       of
                       { (# ds1_daUQj, ds2_daUQi #) ->
                       (# ds1_daUQj, GHC.Int.I32# (narrow32Int# ds2_daUQi) #)
                       })
                    `cast` (Sym (GHC.Types.N:IO[0] (Foreign.C.Types.N:CInt[0]))
                            :: (State# RealWorld -> (# State# RealWorld, Int32 #) :: *)
                               ~R# (IO CInt :: *)))
                   w1_saWsI
            of
            { (# ipv_i7IAy, ipv1_i7IAz #) ->
            (# ipv_i7IAy,
               case ipv1_i7IAz
                    `cast` (Foreign.C.Types.N:CInt[0] :: (CInt :: *) ~R# (Int32 :: *))
               of
               { GHC.Int.I32# x#_i7O0N ->
               case x#_i7O0N of {
                 __DEFAULT -> GHC.Enum.$fEnumBool1;
                 0# -> GHC.Types.False;
                 1# -> GHC.Types.True
               }
               } #)
            } } in
      case w_saWsG of {
        False -> jump $j_saVIE 0#;
        True -> jump $j_saVIE 1#
      }

-- RHS size: {terms: 15, types: 10, coercions: 0, joins: 0/0}
GHC.IO.FD.$fIODeviceFD27 [InlPrag=NOUSERINLINE[0]]
  :: FD
     -> Bool -> Int -> State# RealWorld -> (# State# RealWorld, Bool #)
[GblId,
 Arity=4,
 Str=<S(SL),1*U(U,A)><S,1*U><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_saWsF [Occ=Once!] :: FD)
                 (w1_saWsG [Occ=Once] :: Bool)
                 (w2_saWsH [Occ=Once!] :: Int)
                 (w3_saWsI [Occ=Once] :: State# RealWorld) ->
                 case w_saWsF of { FD ww1_saWsL [Occ=Once] _ [Occ=Dead] ->
                 case w2_saWsH of { I# ww4_saWsQ [Occ=Once] ->
                 GHC.IO.FD.$w$cready ww1_saWsL w1_saWsG ww4_saWsQ w3_saWsI
                 }
                 }}]
GHC.IO.FD.$fIODeviceFD27
  = \ (w_saWsF :: FD)
      (w1_saWsG :: Bool)
      (w2_saWsH :: Int)
      (w3_saWsI :: State# RealWorld) ->
      case w_saWsF of { FD ww1_saWsL ww2_saWsM ->
      case w2_saWsH of { I# ww4_saWsQ ->
      GHC.IO.FD.$w$cready ww1_saWsL w1_saWsG ww4_saWsQ w3_saWsI
      }
      }

-- RHS size: {terms: 24, types: 26, coercions: 0, joins: 0/0}
GHC.IO.FD.setNonBlockingMode1
  :: FD -> Bool -> State# RealWorld -> (# State# RealWorld, FD #)
[GblId,
 Arity=3,
 Str=<S(SL),1*U(U,A)><L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (fd_aaUdm [Occ=Once!] :: FD)
                 (set_aaUdn :: Bool)
                 (s_i7JiH [Occ=Once] :: State# RealWorld) ->
                 case fd_aaUdm of { FD dt_daUQt _ [Occ=Dead] ->
                 case System.Posix.Internals.$wsetNonBlockingFD
                        dt_daUQt set_aaUdn s_i7JiH
                 of
                 { (# ipv_i7JiK [Occ=Once], _ [Occ=Dead] #) ->
                 (# ipv_i7JiK,
                    case set_aaUdn of {
                      False -> GHC.IO.FD.FD dt_daUQt 0#;
                      True -> GHC.IO.FD.FD dt_daUQt 1#
                    } #)
                 }
                 }}]
GHC.IO.FD.setNonBlockingMode1
  = \ (fd_aaUdm :: FD)
      (set_aaUdn :: Bool)
      (s_i7JiH :: State# RealWorld) ->
      case fd_aaUdm of { FD dt_daUQt dt1_daUQu ->
      case System.Posix.Internals.$wsetNonBlockingFD
             dt_daUQt set_aaUdn s_i7JiH
      of
      { (# ipv_i7JiK, ipv1_i7JiL #) ->
      (# ipv_i7JiK,
         case set_aaUdn of {
           False -> GHC.IO.FD.FD dt_daUQt 0#;
           True -> GHC.IO.FD.FD dt_daUQt 1#
         } #)
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 7, joins: 0/0}
setNonBlockingMode :: FD -> Bool -> IO FD
[GblId,
 Arity=3,
 Str=<S(SL),1*U(U,A)><L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.FD.setNonBlockingMode1
               `cast` (<FD>_R ->_R <Bool>_R ->_R Sym (GHC.Types.N:IO[0] <FD>_R)
                       :: (FD
                           -> Bool -> State# RealWorld -> (# State# RealWorld, FD #) :: *)
                          ~R# (FD -> Bool -> IO FD :: *))}]
setNonBlockingMode
  = GHC.IO.FD.setNonBlockingMode1
    `cast` (<FD>_R ->_R <Bool>_R ->_R Sym (GHC.Types.N:IO[0] <FD>_R)
            :: (FD
                -> Bool -> State# RealWorld -> (# State# RealWorld, FD #) :: *)
               ~R# (FD -> Bool -> IO FD :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl5_raWVb :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl5_raWVb = "GHC.IO.FD.dup2"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl6_raWVc :: [Char]
[GblId]
lvl6_raWVc = unpackCString# lvl5_raWVb

-- RHS size: {terms: 7, types: 4, coercions: 0, joins: 0/0}
GHC.IO.FD.$fIODeviceFD2
  :: State# RealWorld -> Int# -> (# State# RealWorld, CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []]
GHC.IO.FD.$fIODeviceFD2
  = \ (ds2_iao5m :: State# RealWorld) (ds3_iao5n :: Int#) ->
      Foreign.C.Error.$wlvl
        @ CInt lvl6_raWVc (narrow32Int# ds3_iao5n) ds2_iao5m

-- RHS size: {terms: 28, types: 43, coercions: 0, joins: 0/0}
GHC.IO.FD.$w$cdup2 [InlPrag=NOUSERINLINE[0]]
  :: Int#
     -> Int# -> Int# -> State# RealWorld -> (# State# RealWorld, FD #)
[GblId,
 Arity=4,
 Str=<S,U><L,U><S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0 0 0] 91 30}]
GHC.IO.FD.$w$cdup2
  = \ (ww_saWt0 :: Int#)
      (ww1_saWt1 :: Int#)
      (ww2_saWt5 :: Int#)
      (w_saWsX :: State# RealWorld) ->
      case {__pkg_ccall base-4.11.0.0 Int#
                           -> Int# -> State# RealWorld -> (# State# RealWorld, Int# #)}_iaUJ7
             ww_saWt0 ww2_saWt5 w_saWsX
      of
      { (# ds7_iaUJc, ds8_iaUJd #) ->
      case narrow32Int# ds8_iaUJd of {
        __DEFAULT -> (# ds7_iaUJc, GHC.IO.FD.FD ww2_saWt5 ww1_saWt1 #);
        -1# ->
          case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iao5h
                 ds7_iaUJc
          of
          { (# ds2_iao5m, ds3_iao5n #) ->
          case GHC.IO.FD.$fIODeviceFD2 ds2_iao5m ds3_iao5n of wild3_00 { }
          }
      }
      }

-- RHS size: {terms: 14, types: 10, coercions: 0, joins: 0/0}
GHC.IO.FD.$fIODeviceFD1 [InlPrag=NOUSERINLINE[0]]
  :: FD -> FD -> State# RealWorld -> (# State# RealWorld, FD #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,U)><S(SL),1*U(U,A)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_saWsV [Occ=Once!] :: FD)
                 (w1_saWsW [Occ=Once!] :: FD)
                 (w2_saWsX [Occ=Once] :: State# RealWorld) ->
                 case w_saWsV of { FD ww1_saWt0 [Occ=Once] ww2_saWt1 [Occ=Once] ->
                 case w1_saWsW of { FD ww4_saWt5 [Occ=Once] _ [Occ=Dead] ->
                 GHC.IO.FD.$w$cdup2 ww1_saWt0 ww2_saWt1 ww4_saWt5 w2_saWsX
                 }
                 }}]
GHC.IO.FD.$fIODeviceFD1
  = \ (w_saWsV :: FD)
      (w1_saWsW :: FD)
      (w2_saWsX :: State# RealWorld) ->
      case w_saWsV of { FD ww1_saWt0 ww2_saWt1 ->
      case w1_saWsW of { FD ww4_saWt5 ww5_saWt6 ->
      GHC.IO.FD.$w$cdup2 ww1_saWt0 ww2_saWt1 ww4_saWt5 w2_saWsX
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$fIODeviceFD5 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.IO.FD.$fIODeviceFD5 = "GHC.IO.FD.dup"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$fIODeviceFD4 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.FD.$fIODeviceFD4 = unpackCString# GHC.IO.FD.$fIODeviceFD5

-- RHS size: {terms: 31, types: 44, coercions: 1, joins: 0/0}
GHC.IO.FD.$w$cdup [InlPrag=NOUSERINLINE[0]]
  :: Int# -> Int# -> State# RealWorld -> (# State# RealWorld, FD #)
[GblId,
 Arity=3,
 Str=<S,U><L,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0 0] 101 60}]
GHC.IO.FD.$w$cdup
  = \ (ww_saWtd :: Int#)
      (ww1_saWte :: Int#)
      (w_saWta :: State# RealWorld) ->
      case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_iaUJC
             ww_saWtd w_saWta
      of
      { (# ds4_iaUJH, ds5_iaUJI #) ->
      case narrow32Int# ds5_iaUJI of wild1_X4j {
        __DEFAULT -> (# ds4_iaUJH, GHC.IO.FD.FD wild1_X4j ww1_saWte #);
        -1# ->
          case Foreign.C.Error.throwErrno1
                 @ CInt GHC.IO.FD.$fIODeviceFD4 ds4_iaUJH
          of
          { (# ipv_i7IAy, ipv1_i7IAz #) ->
          (# ipv_i7IAy,
             case ipv1_i7IAz
                  `cast` (Foreign.C.Types.N:CInt[0] :: (CInt :: *) ~R# (Int32 :: *))
             of
             { GHC.Int.I32# dt1_aaUf4 ->
             GHC.IO.FD.FD dt1_aaUf4 ww1_saWte
             } #)
          }
      }
      }

-- RHS size: {terms: 9, types: 6, coercions: 0, joins: 0/0}
GHC.IO.FD.$fIODeviceFD3 [InlPrag=NOUSERINLINE[0]]
  :: FD -> State# RealWorld -> (# State# RealWorld, FD #)
[GblId,
 Arity=2,
 Str=<S(SS),1*U(U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_saWt9 [Occ=Once!] :: FD)
                 (w1_saWta [Occ=Once] :: State# RealWorld) ->
                 case w_saWt9 of { FD ww1_saWtd [Occ=Once] ww2_saWte [Occ=Once] ->
                 GHC.IO.FD.$w$cdup ww1_saWtd ww2_saWte w1_saWta
                 }}]
GHC.IO.FD.$fIODeviceFD3
  = \ (w_saWt9 :: FD) (w1_saWta :: State# RealWorld) ->
      case w_saWt9 of { FD ww1_saWtd ww2_saWte ->
      GHC.IO.FD.$w$cdup ww1_saWtd ww2_saWte w1_saWta
      }

-- RHS size: {terms: 17, types: 37, coercions: 2, joins: 0/0}
GHC.IO.FD.$fIODeviceFD6
  :: FD -> State# RealWorld -> (# State# RealWorld, IODeviceType #)
[GblId,
 Arity=2,
 Str=<L,1*U(U,A)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (fd_aaUdg [Occ=Once!] :: FD)
                 (s_i7IAv [Occ=Once] :: State# RealWorld) ->
                 case System.Posix.Internals.fdStat1
                        (case fd_aaUdg of { FD dt_daUQt [Occ=Once] _ [Occ=Dead] ->
                         (GHC.Int.I32# dt_daUQt)
                         `cast` (Sym (Foreign.C.Types.N:CInt[0])
                                 :: (Int32 :: *) ~R# (CInt :: *))
                         })
                        s_i7IAv
                 of
                 { (# ipv_i7IAy [Occ=Once], ipv1_i7IAz [Occ=Once!] #) ->
                 case ipv1_i7IAz of
                 { (ty_aaUdh [Occ=Once], _ [Occ=Dead], _ [Occ=Dead]) ->
                 (# ipv_i7IAy, ty_aaUdh #)
                 }
                 }}]
GHC.IO.FD.$fIODeviceFD6
  = \ (fd_aaUdg :: FD) (s_i7IAv :: State# RealWorld) ->
      case System.Posix.Internals.fdStat1
             (case fd_aaUdg of { FD dt_daUQt dt1_daUQu ->
              (GHC.Int.I32# dt_daUQt)
              `cast` (Sym (Foreign.C.Types.N:CInt[0])
                      :: (Int32 :: *) ~R# (CInt :: *))
              })
             s_i7IAv
      of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      case ipv1_i7IAz of { (ty_aaUdh, ds_daUJV, ds2_daUJW) ->
      (# ipv_i7IAy, ty_aaUdh #)
      }
      }

-- RHS size: {terms: 24, types: 38, coercions: 2, joins: 0/0}
GHC.IO.FD.$fIODeviceFD20
  :: FD -> State# RealWorld -> (# State# RealWorld, Bool #)
[GblId,
 Arity=2,
 Str=<L,1*U(U,A)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (fd_aaUd6 [Occ=Once!] :: FD)
                 (s_i7IAv [Occ=Once] :: State# RealWorld) ->
                 case System.Posix.Internals.fdStat1
                        (case fd_aaUd6 of { FD dt_daUQt [Occ=Once] _ [Occ=Dead] ->
                         (GHC.Int.I32# dt_daUQt)
                         `cast` (Sym (Foreign.C.Types.N:CInt[0])
                                 :: (Int32 :: *) ~R# (CInt :: *))
                         })
                        s_i7IAv
                 of
                 { (# ipv_i7IAy [Occ=Once], ipv1_i7IAz [Occ=Once!] #) ->
                 case ipv1_i7IAz of
                 { (ty_aaUdh [Occ=Once!], _ [Occ=Dead], _ [Occ=Dead]) ->
                 (# ipv_i7IAy,
                    case ty_aaUdh of {
                      __DEFAULT -> GHC.Types.False;
                      RegularFile -> GHC.Types.True;
                      RawDevice -> GHC.Types.True
                    } #)
                 }
                 }}]
GHC.IO.FD.$fIODeviceFD20
  = \ (fd_aaUd6 :: FD) (s_i7IAv :: State# RealWorld) ->
      case System.Posix.Internals.fdStat1
             (case fd_aaUd6 of { FD dt_daUQt dt1_daUQu ->
              (GHC.Int.I32# dt_daUQt)
              `cast` (Sym (Foreign.C.Types.N:CInt[0])
                      :: (Int32 :: *) ~R# (CInt :: *))
              })
             s_i7IAv
      of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      case ipv1_i7IAz of { (ty_aaUdh, ds_daUJV, ds2_daUJW) ->
      (# ipv_i7IAy,
         case ty_aaUdh of {
           __DEFAULT -> GHC.Types.False;
           RegularFile -> GHC.Types.True;
           RawDevice -> GHC.Types.True
         } #)
      }
      }

-- RHS size: {terms: 13, types: 24, coercions: 0, joins: 0/0}
GHC.IO.FD.release1
  :: FD -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (fd_aaUd5 [Occ=Once!] :: FD)
                 (s_i7IAv [Occ=Once] :: State# RealWorld) ->
                 case fd_aaUd5 of { FD dt_daUQt [Occ=Once] _ [Occ=Dead] ->
                 case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_daUPs
                        dt_daUQt s_i7IAv
                 of
                 { (# ds_daUPq [Occ=Once], _ [Occ=Dead] #) ->
                 (# ds_daUPq, GHC.Tuple.() #)
                 }
                 }}]
GHC.IO.FD.release1
  = \ (fd_aaUd5 :: FD) (s_i7IAv :: State# RealWorld) ->
      case fd_aaUd5 of { FD dt_daUQt dt1_daUQu ->
      case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_daUPs
             dt_daUQt s_i7IAv
      of
      { (# ds_daUPq, ds1_daUPp #) ->
      (# ds_daUPq, GHC.Tuple.() #)
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 5, joins: 0/0}
release :: FD -> IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.FD.release1
               `cast` (<FD>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (FD -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                          ~R# (FD -> IO () :: *))}]
release
  = GHC.IO.FD.release1
    `cast` (<FD>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (FD -> State# RealWorld -> (# State# RealWorld, () #) :: *)
               ~R# (FD -> IO () :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$fIODeviceFD24 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.IO.FD.$fIODeviceFD24 = "GHC.IO.FD.close"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.$fIODeviceFD23 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.FD.$fIODeviceFD23 = unpackCString# GHC.IO.FD.$fIODeviceFD24

-- RHS size: {terms: 23, types: 42, coercions: 3, joins: 0/0}
GHC.IO.FD.$wclose [InlPrag=NOUSERINLINE[0]]
  :: Int# -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 82 30}]
GHC.IO.FD.$wclose
  = \ (ww_saWtl :: Int#) (w_saWti :: State# RealWorld) ->
      case Foreign.C.Error.throwErrnoIfMinus1Retry2
             @ CInt
             GHC.IO.FD.$fIODeviceFD25
             GHC.IO.FD.$fIODeviceFD23
             ((\ (ds3_iao5B :: State# RealWorld) ->
                 case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_iao5C
                        (narrow32Int# ww_saWtl) ds3_iao5B
                 of
                 { (# ds4_iao5H, ds5_iao5I #) ->
                 (# ds4_iao5H, GHC.Int.I32# (narrow32Int# ds5_iao5I) #)
                 })
              `cast` (Sym (GHC.Types.N:IO[0] (Foreign.C.Types.N:CInt[0]))
                      :: (State# RealWorld -> (# State# RealWorld, Int32 #) :: *)
                         ~R# (IO CInt :: *)))
             w_saWti
      of
      { (# ipv_iaUL2, ipv1_iaUL3 #) ->
      (# ipv_iaUL2, GHC.Tuple.() #)
      }

-- RHS size: {terms: 8, types: 5, coercions: 3, joins: 0/0}
GHC.IO.FD.$fIODeviceFD26 [InlPrag=NOUSERINLINE[0]]
  :: Fd -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_saWth [Occ=Once] :: Fd)
                 (w1_saWti [Occ=Once] :: State# RealWorld) ->
                 case w_saWth
                      `cast` (System.Posix.Types.N:Fd[0] ; Foreign.C.Types.N:CInt[0]
                              :: (Fd :: *) ~R# (Int32 :: *))
                 of
                 { GHC.Int.I32# ww1_saWtl [Occ=Once] ->
                 GHC.IO.FD.$wclose ww1_saWtl w1_saWti
                 }}]
GHC.IO.FD.$fIODeviceFD26
  = \ (w_saWth :: Fd) (w1_saWti :: State# RealWorld) ->
      case w_saWth
           `cast` (System.Posix.Types.N:Fd[0] ; Foreign.C.Types.N:CInt[0]
                   :: (Fd :: *) ~R# (Int32 :: *))
      of
      { GHC.Int.I32# ww1_saWtl ->
      GHC.IO.FD.$wclose ww1_saWtl w1_saWti
      }

-- RHS size: {terms: 42, types: 65, coercions: 13, joins: 0/0}
GHC.IO.FD.$w$cclose [InlPrag=NOUSERINLINE[0]]
  :: Int# -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 173 30}]
GHC.IO.FD.$w$cclose
  = \ (ww_saWts :: Int#) (w_saWtp :: State# RealWorld) ->
      case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_daUPs
             ww_saWts w_saWtp
      of
      { (# ds_daUPq, ds1_daUPp #) ->
      case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_daTrC
             realWorld#
      of
      { (# ds2_daTrB, ds3_daTrA #) ->
      case ds3_daTrA of {
        __DEFAULT ->
          GHC.Event.Thread.closeFdWith1
            (GHC.IO.FD.$fIODeviceFD26
             `cast` (<Fd>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                     :: (Fd -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                        ~R# (Fd -> IO () :: *)))
            ((GHC.Int.I32# (narrow32Int# ww_saWts))
             `cast` (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (System.Posix.Types.N:Fd[0])
                     :: (Int32 :: *) ~R# (Fd :: *)))
            ds_daUPq;
        0# ->
          case Foreign.C.Error.throwErrnoIfMinus1Retry2
                 @ CInt
                 GHC.IO.FD.$fIODeviceFD25
                 GHC.IO.FD.$fIODeviceFD23
                 ((\ (ds4_iao5B :: State# RealWorld) ->
                     case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_iao5C
                            (narrow32Int# ww_saWts) ds4_iao5B
                     of
                     { (# ds5_iao5H, ds6_iao5I #) ->
                     (# ds5_iao5H, GHC.Int.I32# (narrow32Int# ds6_iao5I) #)
                     })
                  `cast` (Sym (GHC.Types.N:IO[0] (Foreign.C.Types.N:CInt[0]))
                          :: (State# RealWorld -> (# State# RealWorld, Int32 #) :: *)
                             ~R# (IO CInt :: *)))
                 ds_daUPq
          of
          { (# ipv_iaUL2, ipv1_iaUL3 #) ->
          (# ipv_iaUL2, GHC.Tuple.() #)
          }
      }
      }
      }

-- RHS size: {terms: 8, types: 6, coercions: 0, joins: 0/0}
GHC.IO.FD.$fIODeviceFD22 [InlPrag=NOUSERINLINE[0]]
  :: FD -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(SL),1*U(U,A)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_saWto [Occ=Once!] :: FD)
                 (w1_saWtp [Occ=Once] :: State# RealWorld) ->
                 case w_saWto of { FD ww1_saWts [Occ=Once] _ [Occ=Dead] ->
                 GHC.IO.FD.$w$cclose ww1_saWts w1_saWtp
                 }}]
GHC.IO.FD.$fIODeviceFD22
  = \ (w_saWto :: FD) (w1_saWtp :: State# RealWorld) ->
      case w_saWto of { FD ww1_saWts ww2_saWtt ->
      GHC.IO.FD.$w$cclose ww1_saWts w1_saWtp
      }

-- RHS size: {terms: 15, types: 1, coercions: 86, joins: 0/0}
GHC.IO.FD.$fIODeviceFD [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.IO.Device.IODevice FD
[GblId[DFunId],
 Unf=DFun: \ ->
       GHC.IO.Device.C:IODevice TYPE: FD
                                GHC.IO.FD.$fIODeviceFD27
                                `cast` (<FD>_R
                                        ->_R <Bool>_R
                                        ->_R <Int>_R
                                        ->_R Sym (GHC.Types.N:IO[0] <Bool>_R)
                                        :: (FD
                                            -> Bool
                                            -> Int
                                            -> State# RealWorld
                                            -> (# State# RealWorld, Bool #) :: *)
                                           ~R# (FD -> Bool -> Int -> IO Bool :: *))
                                GHC.IO.FD.$fIODeviceFD22
                                `cast` (<FD>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                                        :: (FD
                                            -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                                           ~R# (FD -> IO () :: *))
                                GHC.IO.FD.$fIODeviceFD21
                                `cast` (<FD>_R ->_R Sym (GHC.Types.N:IO[0] <Bool>_R)
                                        :: (FD
                                            -> State# RealWorld
                                            -> (# State# RealWorld, Bool #) :: *)
                                           ~R# (FD -> IO Bool :: *))
                                GHC.IO.FD.$fIODeviceFD20
                                `cast` (<FD>_R ->_R Sym (GHC.Types.N:IO[0] <Bool>_R)
                                        :: (FD
                                            -> State# RealWorld
                                            -> (# State# RealWorld, Bool #) :: *)
                                           ~R# (FD -> IO Bool :: *))
                                GHC.IO.FD.$fIODeviceFD17
                                `cast` (<FD>_R
                                        ->_R <SeekMode>_R
                                        ->_R <Integer>_R
                                        ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                                        :: (FD
                                            -> SeekMode
                                            -> Integer
                                            -> State# RealWorld
                                            -> (# State# RealWorld, () #) :: *)
                                           ~R# (FD -> SeekMode -> Integer -> IO () :: *))
                                GHC.IO.FD.$fIODeviceFD13
                                `cast` (<FD>_R ->_R Sym (GHC.Types.N:IO[0] <Integer>_R)
                                        :: (FD
                                            -> State# RealWorld
                                            -> (# State# RealWorld, Integer #) :: *)
                                           ~R# (FD -> IO Integer :: *))
                                GHC.IO.FD.$fIODeviceFD12
                                `cast` (<FD>_R ->_R Sym (GHC.Types.N:IO[0] <Integer>_R)
                                        :: (FD
                                            -> State# RealWorld
                                            -> (# State# RealWorld, Integer #) :: *)
                                           ~R# (FD -> IO Integer :: *))
                                GHC.IO.FD.$fIODeviceFD10
                                `cast` (<FD>_R ->_R <Integer>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                                        :: (FD
                                            -> Integer
                                            -> State# RealWorld
                                            -> (# State# RealWorld, () #) :: *)
                                           ~R# (FD -> Integer -> IO () :: *))
                                GHC.IO.FD.$fIODeviceFD9
                                `cast` (<FD>_R ->_R <Bool>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                                        :: (FD
                                            -> Bool
                                            -> State# RealWorld
                                            -> (# State# RealWorld, () #) :: *)
                                           ~R# (FD -> Bool -> IO () :: *))
                                GHC.IO.FD.$fIODeviceFD8
                                `cast` (<FD>_R ->_R Sym (GHC.Types.N:IO[0] <Bool>_R)
                                        :: (FD
                                            -> State# RealWorld
                                            -> (# State# RealWorld, Bool #) :: *)
                                           ~R# (FD -> IO Bool :: *))
                                GHC.IO.FD.$fIODeviceFD7
                                `cast` (<FD>_R ->_R <Bool>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                                        :: (FD
                                            -> Bool
                                            -> State# RealWorld
                                            -> (# State# RealWorld, () #) :: *)
                                           ~R# (FD -> Bool -> IO () :: *))
                                GHC.IO.FD.$fIODeviceFD6
                                `cast` (<FD>_R ->_R Sym (GHC.Types.N:IO[0] <IODeviceType>_R)
                                        :: (FD
                                            -> State# RealWorld
                                            -> (# State# RealWorld, IODeviceType #) :: *)
                                           ~R# (FD -> IO IODeviceType :: *))
                                GHC.IO.FD.$fIODeviceFD3
                                `cast` (<FD>_R ->_R Sym (GHC.Types.N:IO[0] <FD>_R)
                                        :: (FD
                                            -> State# RealWorld -> (# State# RealWorld, FD #) :: *)
                                           ~R# (FD -> IO FD :: *))
                                GHC.IO.FD.$fIODeviceFD1
                                `cast` (<FD>_R ->_R <FD>_R ->_R Sym (GHC.Types.N:IO[0] <FD>_R)
                                        :: (FD
                                            -> FD
                                            -> State# RealWorld
                                            -> (# State# RealWorld, FD #) :: *)
                                           ~R# (FD -> FD -> IO FD :: *))]
GHC.IO.FD.$fIODeviceFD
  = GHC.IO.Device.C:IODevice
      @ FD
      (GHC.IO.FD.$fIODeviceFD27
       `cast` (<FD>_R
               ->_R <Bool>_R
               ->_R <Int>_R
               ->_R Sym (GHC.Types.N:IO[0] <Bool>_R)
               :: (FD
                   -> Bool
                   -> Int
                   -> State# RealWorld
                   -> (# State# RealWorld, Bool #) :: *)
                  ~R# (FD -> Bool -> Int -> IO Bool :: *)))
      (GHC.IO.FD.$fIODeviceFD22
       `cast` (<FD>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
               :: (FD -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                  ~R# (FD -> IO () :: *)))
      (GHC.IO.FD.$fIODeviceFD21
       `cast` (<FD>_R ->_R Sym (GHC.Types.N:IO[0] <Bool>_R)
               :: (FD -> State# RealWorld -> (# State# RealWorld, Bool #) :: *)
                  ~R# (FD -> IO Bool :: *)))
      (GHC.IO.FD.$fIODeviceFD20
       `cast` (<FD>_R ->_R Sym (GHC.Types.N:IO[0] <Bool>_R)
               :: (FD -> State# RealWorld -> (# State# RealWorld, Bool #) :: *)
                  ~R# (FD -> IO Bool :: *)))
      (GHC.IO.FD.$fIODeviceFD17
       `cast` (<FD>_R
               ->_R <SeekMode>_R
               ->_R <Integer>_R
               ->_R Sym (GHC.Types.N:IO[0] <()>_R)
               :: (FD
                   -> SeekMode
                   -> Integer
                   -> State# RealWorld
                   -> (# State# RealWorld, () #) :: *)
                  ~R# (FD -> SeekMode -> Integer -> IO () :: *)))
      (GHC.IO.FD.$fIODeviceFD13
       `cast` (<FD>_R ->_R Sym (GHC.Types.N:IO[0] <Integer>_R)
               :: (FD -> State# RealWorld -> (# State# RealWorld, Integer #) :: *)
                  ~R# (FD -> IO Integer :: *)))
      (GHC.IO.FD.$fIODeviceFD12
       `cast` (<FD>_R ->_R Sym (GHC.Types.N:IO[0] <Integer>_R)
               :: (FD -> State# RealWorld -> (# State# RealWorld, Integer #) :: *)
                  ~R# (FD -> IO Integer :: *)))
      (GHC.IO.FD.$fIODeviceFD10
       `cast` (<FD>_R ->_R <Integer>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
               :: (FD
                   -> Integer -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                  ~R# (FD -> Integer -> IO () :: *)))
      (GHC.IO.FD.$fIODeviceFD9
       `cast` (<FD>_R ->_R <Bool>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
               :: (FD
                   -> Bool -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                  ~R# (FD -> Bool -> IO () :: *)))
      (GHC.IO.FD.$fIODeviceFD8
       `cast` (<FD>_R ->_R Sym (GHC.Types.N:IO[0] <Bool>_R)
               :: (FD -> State# RealWorld -> (# State# RealWorld, Bool #) :: *)
                  ~R# (FD -> IO Bool :: *)))
      (GHC.IO.FD.$fIODeviceFD7
       `cast` (<FD>_R ->_R <Bool>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
               :: (FD
                   -> Bool -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                  ~R# (FD -> Bool -> IO () :: *)))
      (GHC.IO.FD.$fIODeviceFD6
       `cast` (<FD>_R ->_R Sym (GHC.Types.N:IO[0] <IODeviceType>_R)
               :: (FD
                   -> State# RealWorld -> (# State# RealWorld, IODeviceType #) :: *)
                  ~R# (FD -> IO IODeviceType :: *)))
      (GHC.IO.FD.$fIODeviceFD3
       `cast` (<FD>_R ->_R Sym (GHC.Types.N:IO[0] <FD>_R)
               :: (FD -> State# RealWorld -> (# State# RealWorld, FD #) :: *)
                  ~R# (FD -> IO FD :: *)))
      (GHC.IO.FD.$fIODeviceFD1
       `cast` (<FD>_R ->_R <FD>_R ->_R Sym (GHC.Types.N:IO[0] <FD>_R)
               :: (FD
                   -> FD -> State# RealWorld -> (# State# RealWorld, FD #) :: *)
                  ~R# (FD -> FD -> IO FD :: *)))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.mkFD7 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.IO.FD.mkFD7 = "openFile"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.mkFD6 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.FD.mkFD6 = unpackCString# GHC.IO.FD.mkFD7

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.mkFD11 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.IO.FD.mkFD11 = "is a directory"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.mkFD10 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.FD.mkFD10 = unpackCString# GHC.IO.FD.mkFD11

-- RHS size: {terms: 7, types: 3, coercions: 0, joins: 0/0}
GHC.IO.FD.mkFD9 :: IOException
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.IO.FD.mkFD9
  = GHC.IO.Exception.IOError
      (GHC.Base.Nothing @ GHC.IO.Handle.Types.Handle)
      GHC.IO.Exception.InappropriateType
      GHC.IO.FD.mkFD6
      GHC.IO.FD.mkFD10
      (GHC.Base.Nothing @ CInt)
      (GHC.Base.Nothing @ FilePath)

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.mkFD8 :: GHC.Exception.SomeException
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
GHC.IO.FD.mkFD8
  = GHC.IO.Exception.$fExceptionIOException_$ctoException
      GHC.IO.FD.mkFD9

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.mkFD5 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.IO.FD.mkFD5 = "file is locked"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.mkFD4 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.IO.FD.mkFD4 = unpackCString# GHC.IO.FD.mkFD5

-- RHS size: {terms: 7, types: 3, coercions: 0, joins: 0/0}
GHC.IO.FD.mkFD3 :: IOException
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.IO.FD.mkFD3
  = GHC.IO.Exception.IOError
      (GHC.Base.Nothing @ GHC.IO.Handle.Types.Handle)
      GHC.IO.Exception.ResourceBusy
      GHC.IO.FD.mkFD6
      GHC.IO.FD.mkFD4
      (GHC.Base.Nothing @ CInt)
      (GHC.Base.Nothing @ FilePath)

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.IO.FD.mkFD2 :: GHC.Exception.SomeException
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
GHC.IO.FD.mkFD2
  = GHC.IO.Exception.$fExceptionIOException_$ctoException
      GHC.IO.FD.mkFD3

-- RHS size: {terms: 143, types: 176, coercions: 4, joins: 4/6}
GHC.IO.FD.$wmkFD [InlPrag=NOUSERINLINE[0]]
  :: CInt
     -> IOMode
     -> Maybe (IODeviceType, CDev, CIno)
     -> Bool
     -> State# RealWorld
     -> (# State# RealWorld, (FD, IODeviceType) #)
[GblId,
 Arity=5,
 Str=<L,U(U)><L,1*U><S,1*U><L,1*U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [40 34 48 80 0] 419 0}]
GHC.IO.FD.$wmkFD
  = \ (w_saWtK :: CInt)
      (w1_saWtL :: IOMode)
      (w2_saWtM :: Maybe (IODeviceType, CDev, CIno))
      (w3_saWtO :: Bool)
      (w4_saWtP :: State# RealWorld) ->
      join {
        $w$j_saWtJ [InlPrag=NOUSERINLINE[0],
                    Dmd=<L,1*C1(C1(C1(C1(U(U,U)))))>]
          :: State# RealWorld
             -> IODeviceType
             -> CDev
             -> CIno
             -> (# State# RealWorld, (FD, IODeviceType) #)
        [LclId[JoinId(4)],
         Arity=4,
         Str=<S,U><S,1*U><L,1*U(U)><L,1*U(U)>,
         Unf=OtherCon []]
        $w$j_saWtJ (w5_saWtB [OS=OneShot] :: State# RealWorld)
                   (ww_saWtF [OS=OneShot] :: IODeviceType)
                   (ww1_saWtG [OS=OneShot] :: CDev)
                   (ww2_saWtH [OS=OneShot] :: CIno)
          = case ww_saWtF of wild_X1c {
              __DEFAULT ->
                (# w5_saWtB,
                   (case w_saWtK
                         `cast` (Foreign.C.Types.N:CInt[0] :: (CInt :: *) ~R# (Int32 :: *))
                    of
                    { GHC.Int.I32# dt1_aaUf4 ->
                    case w3_saWtO of {
                      False -> GHC.IO.FD.FD dt1_aaUf4 0#;
                      True -> GHC.IO.FD.FD dt1_aaUf4 1#
                    }
                    },
                    wild_X1c) #);
              Directory ->
                case raiseIO#
                       @ GHC.Exception.SomeException @ () GHC.IO.FD.mkFD8 w5_saWtB
                of wild1_00 {
                };
              RegularFile ->
                case w_saWtK
                     `cast` (Foreign.C.Types.N:CInt[0] :: (CInt :: *) ~R# (Int32 :: *))
                of
                { GHC.Int.I32# ds1_daUPz ->
                case ww1_saWtG
                     `cast` (System.Posix.Types.N:CDev[0]
                             :: (CDev :: *) ~R# (Word64 :: *))
                of
                { GHC.Word.W64# x#_i9hqK ->
                let {
                  i#_i9hqJ [Dmd=<S,U>] :: Int#
                  [LclId]
                  i#_i9hqJ = word2Int# x#_i9hqK } in
                join {
                  $j_saVJB [Dmd=<C(S),1*C1(U(U,U))>]
                    :: Word# -> (# State# RealWorld, (FD, IODeviceType) #)
                  [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []]
                  $j_saVJB (wild2_iaVJo [OS=OneShot] :: Word#)
                    = case ww2_saWtH
                           `cast` (System.Posix.Types.N:CIno[0]
                                   :: (CIno :: *) ~R# (Word64 :: *))
                      of
                      { GHC.Word.W64# x#1_X9hvD ->
                      let {
                        i#1_X9hvF [Dmd=<S,U>] :: Int#
                        [LclId]
                        i#1_X9hvF = word2Int# x#1_X9hvD } in
                      join {
                        $j1_saVJz [Dmd=<C(S),1*C1(U(U,U))>]
                          :: Word# -> (# State# RealWorld, (FD, IODeviceType) #)
                        [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []]
                        $j1_saVJz (wild4_XaVOm [OS=OneShot] :: Word#)
                          = join {
                              $j2_saVt6 [Dmd=<C(S),1*C1(U(U,U))>]
                                :: Int# -> (# State# RealWorld, (FD, IODeviceType) #)
                              [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []]
                              $j2_saVt6 (ds2_daUPF [OS=OneShot] :: Int#)
                                = case {__pkg_ccall base-4.11.0.0 Int#
                           -> Word#
                           -> Word#
                           -> Int#
                           -> State# RealWorld
                           -> (# State# RealWorld, Int# #)}_daUPJ
                                         ds1_daUPz wild2_iaVJo wild4_XaVOm ds2_daUPF w5_saWtB
                                  of
                                  { (# ds3_daUPH, ds4_daUPG #) ->
                                  case narrow32Int# ds4_daUPG of {
                                    __DEFAULT ->
                                      (# ds3_daUPH,
                                         (case w3_saWtO of {
                                            False -> GHC.IO.FD.FD ds1_daUPz 0#;
                                            True -> GHC.IO.FD.FD ds1_daUPz 1#
                                          },
                                          GHC.IO.Device.RegularFile) #);
                                    -1# ->
                                      case raiseIO#
                                             @ GHC.Exception.SomeException
                                             @ ()
                                             GHC.IO.FD.mkFD2
                                             ds3_daUPH
                                      of wild7_00 {
                                      }
                                  }
                                  } } in
                            case w1_saWtL of {
                              __DEFAULT -> jump $j2_saVt6 1#;
                              ReadMode -> jump $j2_saVt6 0#
                            } } in
                      case >=# i#1_X9hvF 0# of {
                        __DEFAULT -> jump $j1_saVJz x#1_X9hvD;
                        1# -> jump $j1_saVJz (int2Word# i#1_X9hvF)
                      }
                      } } in
                case >=# i#_i9hqJ 0# of {
                  __DEFAULT -> jump $j_saVJB x#_i9hqK;
                  1# -> jump $j_saVJB (int2Word# i#_i9hqJ)
                }
                }
                }
            } } in
      case w2_saWtM of {
        Nothing ->
          case System.Posix.Internals.fdStat1 w_saWtK w4_saWtP of
          { (# ipv_i7IAy, ipv1_i7IAz #) ->
          case ipv1_i7IAz of { (ww1_saWtF, ww2_saWtG, ww3_saWtH) ->
          jump $w$j_saWtJ ipv_i7IAy ww1_saWtF ww2_saWtG ww3_saWtH
          }
          };
        Just stat_aaUcQ ->
          case stat_aaUcQ of { (ww1_saWtF, ww2_saWtG, ww3_saWtH) ->
          jump $w$j_saWtJ w4_saWtP ww1_saWtF ww2_saWtG ww3_saWtH
          }
      }

-- RHS size: {terms: 12, types: 11, coercions: 0, joins: 0/0}
GHC.IO.FD.mkFD1 [InlPrag=NOUSERINLINE[0]]
  :: CInt
     -> IOMode
     -> Maybe (IODeviceType, CDev, CIno)
     -> Bool
     -> Bool
     -> State# RealWorld
     -> (# State# RealWorld, (FD, IODeviceType) #)
[GblId,
 Arity=6,
 Str=<L,U(U)><L,1*U><S,1*U><L,A><L,1*U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=6,unsat_ok=True,boring_ok=True)
         Tmpl= \ (w_saWtK [Occ=Once] :: CInt)
                 (w1_saWtL [Occ=Once] :: IOMode)
                 (w2_saWtM [Occ=Once] :: Maybe (IODeviceType, CDev, CIno))
                 _ [Occ=Dead]
                 (w4_saWtO [Occ=Once] :: Bool)
                 (w5_saWtP [Occ=Once] :: State# RealWorld) ->
                 GHC.IO.FD.$wmkFD w_saWtK w1_saWtL w2_saWtM w4_saWtO w5_saWtP}]
GHC.IO.FD.mkFD1
  = \ (w_saWtK :: CInt)
      (w1_saWtL :: IOMode)
      (w2_saWtM :: Maybe (IODeviceType, CDev, CIno))
      _ [Occ=Dead]
      (w4_saWtO :: Bool)
      (w5_saWtP :: State# RealWorld) ->
      GHC.IO.FD.$wmkFD w_saWtK w1_saWtL w2_saWtM w4_saWtO w5_saWtP

-- RHS size: {terms: 1, types: 0, coercions: 19, joins: 0/0}
mkFD
  :: CInt
     -> IOMode
     -> Maybe (IODeviceType, CDev, CIno)
     -> Bool
     -> Bool
     -> IO (FD, IODeviceType)
[GblId,
 Arity=6,
 Str=<L,U(U)><L,1*U><S,1*U><L,A><L,1*U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.FD.mkFD1
               `cast` (<CInt>_R
                       ->_R <IOMode>_R
                       ->_R <Maybe (IODeviceType, CDev, CIno)>_R
                       ->_R <Bool>_R
                       ->_R <Bool>_R
                       ->_R Sym (GHC.Types.N:IO[0] <(FD, IODeviceType)>_R)
                       :: (CInt
                           -> IOMode
                           -> Maybe (IODeviceType, CDev, CIno)
                           -> Bool
                           -> Bool
                           -> State# RealWorld
                           -> (# State# RealWorld, (FD, IODeviceType) #) :: *)
                          ~R# (CInt
                               -> IOMode
                               -> Maybe (IODeviceType, CDev, CIno)
                               -> Bool
                               -> Bool
                               -> IO (FD, IODeviceType) :: *))}]
mkFD
  = GHC.IO.FD.mkFD1
    `cast` (<CInt>_R
            ->_R <IOMode>_R
            ->_R <Maybe (IODeviceType, CDev, CIno)>_R
            ->_R <Bool>_R
            ->_R <Bool>_R
            ->_R Sym (GHC.Types.N:IO[0] <(FD, IODeviceType)>_R)
            :: (CInt
                -> IOMode
                -> Maybe (IODeviceType, CDev, CIno)
                -> Bool
                -> Bool
                -> State# RealWorld
                -> (# State# RealWorld, (FD, IODeviceType) #) :: *)
               ~R# (CInt
                    -> IOMode
                    -> Maybe (IODeviceType, CDev, CIno)
                    -> Bool
                    -> Bool
                    -> IO (FD, IODeviceType) :: *))

-- RHS size: {terms: 203, types: 237, coercions: 13, joins: 1/1}
GHC.IO.FD.openFile1
  :: FilePath
     -> IOMode
     -> Bool
     -> State# RealWorld
     -> (# State# RealWorld, (FD, IODeviceType) #)
[GblId, Arity=4, Str=<L,U><L,U><L,U><S,U>, Unf=OtherCon []]
GHC.IO.FD.openFile1
  = \ (filepath_aaUcz :: FilePath)
      (iomode_aaUcA :: IOMode)
      (non_blocking_aaUcB :: Bool)
      (s_iaV4M :: State# RealWorld) ->
      case ((noinline
               @ (IO GHC.IO.Encoding.Types.TextEncoding)
               GHC.IO.Encoding.getFileSystemEncoding)
            `cast` (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R
                    :: (IO GHC.IO.Encoding.Types.TextEncoding :: *)
                       ~R# (State# RealWorld
                            -> (# State# RealWorld,
                                  GHC.IO.Encoding.Types.TextEncoding #) :: *)))
             s_iaV4M
      of
      { (# ipv_iaV4P, ipv1_iaV4Q #) ->
      GHC.Foreign.charIsRepresentable3
        @ (FD, IODeviceType)
        ipv1_iaV4Q
        filepath_aaUcz
        ((\ (f_aaUcC :: CString)
            (eta_B1 [OS=OneShot] :: State# RealWorld) ->
            case f_aaUcC of { GHC.Ptr.Ptr ds4_iaUNG ->
            join {
              $j_saVtp [Dmd=<L,1*C1(U(U,U))>]
                :: Int# -> (# State# RealWorld, (FD, IODeviceType) #)
              [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []]
              $j_saVtp (ds6_iaUNK [OS=OneShot] :: Int#)
                = case Foreign.C.Error.throwErrnoIfMinus1Retry2
                         @ CInt
                         GHC.IO.FD.$fIODeviceFD25
                         GHC.IO.FD.mkFD6
                         ((\ (ds9_iaUNO :: State# RealWorld) ->
                             case {__pkg_ccall_GC base-4.11.0.0 Addr#
                              -> Int#
                              -> Word#
                              -> State# RealWorld
                              -> (# State# RealWorld, Int# #)}_iaUNP
                                    ds4_iaUNG ds6_iaUNK 438## ds9_iaUNO
                             of
                             { (# ds10_iaUNU, ds11_iaUNV #) ->
                             (# ds10_iaUNU, GHC.Int.I32# (narrow32Int# ds11_iaUNV) #)
                             })
                          `cast` (Sym (GHC.Types.N:IO[0] (Foreign.C.Types.N:CInt[0]))
                                  :: (State# RealWorld -> (# State# RealWorld, Int32 #) :: *)
                                     ~R# (IO CInt :: *)))
                         eta_B1
                  of
                  { (# ipv2_i7IAy, ipv3_i7IAz #) ->
                  case catch#
                         @ (FD, IODeviceType)
                         @ GHC.Exception.SomeException
                         (\ (w_saWtP [OS=OneShot] :: State# RealWorld) ->
                            GHC.IO.FD.$wmkFD
                              ipv3_i7IAz
                              iomode_aaUcA
                              (GHC.Base.Nothing @ (IODeviceType, CDev, CIno))
                              non_blocking_aaUcB
                              w_saWtP)
                         (\ (ds9_iaV5d [OS=OneShot] :: GHC.Exception.SomeException) ->
                            case ds9_iaV5d of
                            { GHC.Exception.SomeException @ e_iaV5g $dException_iaV5h
                                                          e1_iaV5i ->
                            \ (s1_X7IEZ [OS=OneShot] :: State# RealWorld) ->
                              case ipv3_i7IAz
                                   `cast` (Foreign.C.Types.N:CInt[0]
                                           :: (CInt :: *) ~R# (Int32 :: *))
                              of
                              { GHC.Int.I32# ds11_iao5D ->
                              case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_iao5C
                                     ds11_iao5D s1_X7IEZ
                              of
                              { (# ds12_iao5H, ds5_iao5I #) ->
                              GHC.IO.throwIO1
                                @ e_iaV5g
                                @ (FD, IODeviceType)
                                $dException_iaV5h
                                e1_iaV5i
                                ds12_iao5H
                              }
                              }
                            })
                         ipv2_i7IAy
                  of ds9_X7IEQ
                  { (# ipv4_X7IEU, ipv5_X7IEW #) ->
                  case ipv5_X7IEW of { (fD_aaUcJ, fd_type_aaUcK) ->
                  case iomode_aaUcA of {
                    __DEFAULT -> ds9_X7IEQ;
                    WriteMode ->
                      case fd_type_aaUcK of {
                        __DEFAULT -> ds9_X7IEQ;
                        RegularFile ->
                          case fD_aaUcJ of wild3_X1a { FD dt_daUQt dt1_daUQu ->
                          case {__pkg_ccall base-4.11.0.0 Int#
                           -> Int# -> State# RealWorld -> (# State# RealWorld, Int# #)}_iaUKc
                                 dt_daUQt 0# ipv4_X7IEU
                          of
                          { (# ds7_iaUKh, ds8_iaUKi #) ->
                          case narrow32Int# ds8_iaUKi of {
                            __DEFAULT ->
                              case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iaUVL
                                     ds7_iaUKh
                              of
                              { (# ds_iaUVP, ds10_iaUVQ #) ->
                              case GHC.IO.FD.$fIODeviceFD11 ds_iaUVP ds10_iaUVQ of wild7_00 { }
                              };
                            0# -> (# ds7_iaUKh, (wild3_X1a, GHC.IO.Device.RegularFile) #)
                          }
                          }
                          }
                      }
                  }
                  }
                  }
                  } } in
            case non_blocking_aaUcB of {
              False ->
                case iomode_aaUcA of {
                  ReadMode ->
                    case read_flags_raWV8 of { GHC.Int.I32# ds6_iaUNK ->
                    jump $j_saVtp ds6_iaUNK
                    };
                  WriteMode ->
                    case write_flags_raWV5 of { GHC.Int.I32# ds6_iaUNK ->
                    jump $j_saVtp ds6_iaUNK
                    };
                  AppendMode ->
                    case append_flags_raWV6 of { GHC.Int.I32# ds6_iaUNK ->
                    jump $j_saVtp ds6_iaUNK
                    };
                  ReadWriteMode ->
                    case rw_flags_raWV7 of { GHC.Int.I32# ds6_iaUNK ->
                    jump $j_saVtp ds6_iaUNK
                    }
                };
              True ->
                case iomode_aaUcA of {
                  ReadMode ->
                    case read_flags_raWV8 of { GHC.Int.I32# x#_i9h2C ->
                    case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iaUMx
                           realWorld#
                    of
                    { (# ds_iaUMA, ds2_iaUMB #) ->
                    jump $j_saVtp
                      (word2Int#
                         (or# (int2Word# x#_i9h2C) (int2Word# (narrow32Int# ds2_iaUMB))))
                    }
                    };
                  WriteMode ->
                    case write_flags_raWV5 of { GHC.Int.I32# x#_i9h2C ->
                    case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iaUMx
                           realWorld#
                    of
                    { (# ds_iaUMA, ds2_iaUMB #) ->
                    jump $j_saVtp
                      (word2Int#
                         (or# (int2Word# x#_i9h2C) (int2Word# (narrow32Int# ds2_iaUMB))))
                    }
                    };
                  AppendMode ->
                    case append_flags_raWV6 of { GHC.Int.I32# x#_i9h2C ->
                    case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iaUMx
                           realWorld#
                    of
                    { (# ds_iaUMA, ds2_iaUMB #) ->
                    jump $j_saVtp
                      (word2Int#
                         (or# (int2Word# x#_i9h2C) (int2Word# (narrow32Int# ds2_iaUMB))))
                    }
                    };
                  ReadWriteMode ->
                    case rw_flags_raWV7 of { GHC.Int.I32# x#_i9h2C ->
                    case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_iaUMx
                           realWorld#
                    of
                    { (# ds_iaUMA, ds2_iaUMB #) ->
                    jump $j_saVtp
                      (word2Int#
                         (or# (int2Word# x#_i9h2C) (int2Word# (narrow32Int# ds2_iaUMB))))
                    }
                    }
                }
            }
            })
         `cast` (<CString>_R
                 ->_R Sym (GHC.Types.N:IO[0] <(FD, IODeviceType)>_R)
                 :: (CString
                     -> State# RealWorld
                     -> (# State# RealWorld, (FD, IODeviceType) #) :: *)
                    ~R# (CString -> IO (FD, IODeviceType) :: *)))
        ipv_iaV4P
      }

-- RHS size: {terms: 1, types: 0, coercions: 11, joins: 0/0}
openFile :: FilePath -> IOMode -> Bool -> IO (FD, IODeviceType)
[GblId,
 Arity=4,
 Str=<L,U><L,U><L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.IO.FD.openFile1
               `cast` (<FilePath>_R
                       ->_R <IOMode>_R
                       ->_R <Bool>_R
                       ->_R Sym (GHC.Types.N:IO[0] <(FD, IODeviceType)>_R)
                       :: (FilePath
                           -> IOMode
                           -> Bool
                           -> State# RealWorld
                           -> (# State# RealWorld, (FD, IODeviceType) #) :: *)
                          ~R# (FilePath -> IOMode -> Bool -> IO (FD, IODeviceType) :: *))}]
openFile
  = GHC.IO.FD.openFile1
    `cast` (<FilePath>_R
            ->_R <IOMode>_R
            ->_R <Bool>_R
            ->_R Sym (GHC.Types.N:IO[0] <(FD, IODeviceType)>_R)
            :: (FilePath
                -> IOMode
                -> Bool
                -> State# RealWorld
                -> (# State# RealWorld, (FD, IODeviceType) #) :: *)
               ~R# (FilePath -> IOMode -> Bool -> IO (FD, IODeviceType) :: *))

-- RHS size: {terms: 45, types: 41, coercions: 0, joins: 0/0}
GHC.IO.FD.$w$cfillReadBuffer [InlPrag=NOUSERINLINE[0]]
  :: Int#
     -> Int#
     -> Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> BufferState
     -> Int#
     -> Int#
     -> Int#
     -> State# RealWorld
     -> (# State# RealWorld, (Int, Buffer Word8) #)
[GblId,
 Arity=9,
 Str=<S,U><S,1*U><S,U><L,U><L,U><S,U><L,U><S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0 0 0 0 0 0 0] 113 30}]
GHC.IO.FD.$w$cfillReadBuffer
  = \ (ww_saWu1 :: Int#)
      (ww1_saWu2 :: Int#)
      (ww2_saWu6 :: Addr#)
      (ww3_saWu7 :: GHC.ForeignPtr.ForeignPtrContents)
      (ww4_saWu8 :: BufferState)
      (ww5_saWu9 :: Int#)
      (ww6_saWua :: Int#)
      (ww7_saWub :: Int#)
      (w_saWtY :: State# RealWorld) ->
      case GHC.IO.FD.$wreadRawBufferPtr
             GHC.IO.FD.$fBufferedIOFD12
             ww_saWu1
             ww1_saWu2
             (plusAddr# ww2_saWu6 ww7_saWub)
             0#
             (int2Word# (-# ww5_saWu9 ww7_saWub))
             w_saWtY
      of
      { (# ipv_iaVkv, ipv1_iaVkw #) ->
      case touch#
             @ 'LiftedRep
             @ GHC.ForeignPtr.ForeignPtrContents
             ww3_saWu7
             ipv_iaVkv
      of s'_iaVky
      { __DEFAULT ->
      (# s'_iaVky,
         (ipv1_iaVkw,
          case ipv1_iaVkw of { I# y_iaVkB ->
          GHC.IO.Buffer.Buffer
            @ Word8
            ww2_saWu6
            ww3_saWu7
            ww4_saWu8
            ww5_saWu9
            ww6_saWua
            (+# ww7_saWub y_iaVkB)
          }) #)
      }
      }

-- RHS size: {terms: 19, types: 16, coercions: 0, joins: 0/0}
GHC.IO.FD.$fBufferedIOFD11 [InlPrag=NOUSERINLINE[0]]
  :: FD
     -> Buffer Word8
     -> State# RealWorld
     -> (# State# RealWorld, (Int, Buffer Word8) #)
[GblId,
 Arity=3,
 Str=<S(SS),1*U(U,1*U)><S(SLLSSS),1*U(U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_saWtW [Occ=Once!] :: FD)
                 (w1_saWtX [Occ=Once!] :: Buffer Word8)
                 (w2_saWtY [Occ=Once] :: State# RealWorld) ->
                 case w_saWtW of { FD ww1_saWu1 [Occ=Once] ww2_saWu2 [Occ=Once] ->
                 case w1_saWtX of
                 { Buffer ww4_saWu6 [Occ=Once] ww5_saWu7 [Occ=Once]
                          ww6_saWu8 [Occ=Once] ww7_saWu9 [Occ=Once] ww8_saWua [Occ=Once]
                          ww9_saWub [Occ=Once] ->
                 GHC.IO.FD.$w$cfillReadBuffer
                   ww1_saWu1
                   ww2_saWu2
                   ww4_saWu6
                   ww5_saWu7
                   ww6_saWu8
                   ww7_saWu9
                   ww8_saWua
                   ww9_saWub
                   w2_saWtY
                 }
                 }}]
GHC.IO.FD.$fBufferedIOFD11
  = \ (w_saWtW :: FD)
      (w1_saWtX :: Buffer Word8)
      (w2_saWtY :: State# RealWorld) ->
      case w_saWtW of { FD ww1_saWu1 ww2_saWu2 ->
      case w1_saWtX of
      { Buffer ww4_saWu6 ww5_saWu7 ww6_saWu8 ww7_saWu9 ww8_saWua
               ww9_saWub ->
      GHC.IO.FD.$w$cfillReadBuffer
        ww1_saWu1
        ww2_saWu2
        ww4_saWu6
        ww5_saWu7
        ww6_saWu8
        ww7_saWu9
        ww8_saWua
        ww9_saWub
        w2_saWtY
      }
      }

-- RHS size: {terms: 15, types: 22, coercions: 0, joins: 0/0}
GHC.IO.FD.$fBufferedIOFD6
  :: FD
     -> Buffer Word8
     -> State# RealWorld
     -> (# State# RealWorld, Buffer Word8 #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,A><L,1*U(U,U,A,U,A,A)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ _ [Occ=Dead]
                 (buf_iaUOM [Occ=Once!] :: Buffer Word8)
                 (s_iaUON [Occ=Once] :: State# RealWorld) ->
                 (# s_iaUON,
                    case buf_iaUOM of
                    { Buffer dt_iaUOQ [Occ=Once] dt1_iaUOR [Occ=Once] _ [Occ=Dead]
                             dt2_iaUOT [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                    GHC.IO.Buffer.Buffer
                      @ Word8
                      dt_iaUOQ
                      dt1_iaUOR
                      GHC.IO.Buffer.WriteBuffer
                      dt2_iaUOT
                      0#
                      0#
                    } #)}]
GHC.IO.FD.$fBufferedIOFD6
  = \ _ [Occ=Dead]
      (buf_iaUOM :: Buffer Word8)
      (s_iaUON :: State# RealWorld) ->
      (# s_iaUON,
         case buf_iaUOM of
         { Buffer dt_iaUOQ dt1_iaUOR ds_iaUOS dt2_iaUOT dt3_iaUOU
                  dt4_iaUOV ->
         GHC.IO.Buffer.Buffer
           @ Word8
           dt_iaUOQ
           dt1_iaUOR
           GHC.IO.Buffer.WriteBuffer
           dt2_iaUOT
           0#
           0#
         } #)

-- RHS size: {terms: 7, types: 1, coercions: 60, joins: 0/0}
GHC.IO.FD.$fBufferedIOFD [InlPrag=NOUSERINLINE CONLIKE]
  :: BufferedIO FD
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ ->
       GHC.IO.BufferedIO.C:BufferedIO TYPE: FD
                                      GHC.IO.FD.$fBufferedIOFD15
                                      `cast` (<FD>_R
                                              ->_R <BufferState>_R
                                              ->_R Sym (GHC.Types.N:IO[0] <Buffer Word8>_R)
                                              :: (FD
                                                  -> BufferState
                                                  -> State# RealWorld
                                                  -> (# State# RealWorld, Buffer Word8 #) :: *)
                                                 ~R# (FD -> BufferState -> IO (Buffer Word8) :: *))
                                      GHC.IO.FD.$fBufferedIOFD11
                                      `cast` (<FD>_R
                                              ->_R <Buffer Word8>_R
                                              ->_R Sym (GHC.Types.N:IO[0] <(Int, Buffer Word8)>_R)
                                              :: (FD
                                                  -> Buffer Word8
                                                  -> State# RealWorld
                                                  -> (# State# RealWorld,
                                                        (Int, Buffer Word8) #) :: *)
                                                 ~R# (FD
                                                      -> Buffer Word8
                                                      -> IO (Int, Buffer Word8) :: *))
                                      GHC.IO.FD.$fBufferedIOFD7
                                      `cast` (<FD>_R
                                              ->_R <Buffer Word8>_R
                                              ->_R Sym (GHC.Types.N:IO[0]
                                                            <(Maybe Int, Buffer Word8)>_R)
                                              :: (FD
                                                  -> Buffer Word8
                                                  -> State# RealWorld
                                                  -> (# State# RealWorld,
                                                        (Maybe Int, Buffer Word8) #) :: *)
                                                 ~R# (FD
                                                      -> Buffer Word8
                                                      -> IO (Maybe Int, Buffer Word8) :: *))
                                      GHC.IO.FD.$fBufferedIOFD6
                                      `cast` (<FD>_R
                                              ->_R <Buffer Word8>_R
                                              ->_R Sym (GHC.Types.N:IO[0] <Buffer Word8>_R)
                                              :: (FD
                                                  -> Buffer Word8
                                                  -> State# RealWorld
                                                  -> (# State# RealWorld, Buffer Word8 #) :: *)
                                                 ~R# (FD -> Buffer Word8 -> IO (Buffer Word8) :: *))
                                      GHC.IO.FD.$fBufferedIOFD_$swriteBuf1
                                      `cast` (<FD>_R
                                              ->_R <Buffer Word8>_R
                                              ->_R Sym (GHC.Types.N:IO[0] <Buffer Word8>_R)
                                              :: (FD
                                                  -> Buffer Word8
                                                  -> State# RealWorld
                                                  -> (# State# RealWorld, Buffer Word8 #) :: *)
                                                 ~R# (FD -> Buffer Word8 -> IO (Buffer Word8) :: *))
                                      GHC.IO.FD.$fBufferedIOFD1
                                      `cast` (<FD>_R
                                              ->_R <Buffer Word8>_R
                                              ->_R Sym (GHC.Types.N:IO[0] <(Int, Buffer Word8)>_R)
                                              :: (FD
                                                  -> Buffer Word8
                                                  -> State# RealWorld
                                                  -> (# State# RealWorld,
                                                        (Int, Buffer Word8) #) :: *)
                                                 ~R# (FD
                                                      -> Buffer Word8
                                                      -> IO (Int, Buffer Word8) :: *))]
GHC.IO.FD.$fBufferedIOFD
  = GHC.IO.BufferedIO.C:BufferedIO
      @ FD
      (GHC.IO.FD.$fBufferedIOFD15
       `cast` (<FD>_R
               ->_R <BufferState>_R
               ->_R Sym (GHC.Types.N:IO[0] <Buffer Word8>_R)
               :: (FD
                   -> BufferState
                   -> State# RealWorld
                   -> (# State# RealWorld, Buffer Word8 #) :: *)
                  ~R# (FD -> BufferState -> IO (Buffer Word8) :: *)))
      (GHC.IO.FD.$fBufferedIOFD11
       `cast` (<FD>_R
               ->_R <Buffer Word8>_R
               ->_R Sym (GHC.Types.N:IO[0] <(Int, Buffer Word8)>_R)
               :: (FD
                   -> Buffer Word8
                   -> State# RealWorld
                   -> (# State# RealWorld, (Int, Buffer Word8) #) :: *)
                  ~R# (FD -> Buffer Word8 -> IO (Int, Buffer Word8) :: *)))
      (GHC.IO.FD.$fBufferedIOFD7
       `cast` (<FD>_R
               ->_R <Buffer Word8>_R
               ->_R Sym (GHC.Types.N:IO[0] <(Maybe Int, Buffer Word8)>_R)
               :: (FD
                   -> Buffer Word8
                   -> State# RealWorld
                   -> (# State# RealWorld, (Maybe Int, Buffer Word8) #) :: *)
                  ~R# (FD -> Buffer Word8 -> IO (Maybe Int, Buffer Word8) :: *)))
      (GHC.IO.FD.$fBufferedIOFD6
       `cast` (<FD>_R
               ->_R <Buffer Word8>_R
               ->_R Sym (GHC.Types.N:IO[0] <Buffer Word8>_R)
               :: (FD
                   -> Buffer Word8
                   -> State# RealWorld
                   -> (# State# RealWorld, Buffer Word8 #) :: *)
                  ~R# (FD -> Buffer Word8 -> IO (Buffer Word8) :: *)))
      (GHC.IO.FD.$fBufferedIOFD_$swriteBuf1
       `cast` (<FD>_R
               ->_R <Buffer Word8>_R
               ->_R Sym (GHC.Types.N:IO[0] <Buffer Word8>_R)
               :: (FD
                   -> Buffer Word8
                   -> State# RealWorld
                   -> (# State# RealWorld, Buffer Word8 #) :: *)
                  ~R# (FD -> Buffer Word8 -> IO (Buffer Word8) :: *)))
      (GHC.IO.FD.$fBufferedIOFD1
       `cast` (<FD>_R
               ->_R <Buffer Word8>_R
               ->_R Sym (GHC.Types.N:IO[0] <(Int, Buffer Word8)>_R)
               :: (FD
                   -> Buffer Word8
                   -> State# RealWorld
                   -> (# State# RealWorld, (Int, Buffer Word8) #) :: *)
                  ~R# (FD -> Buffer Word8 -> IO (Int, Buffer Word8) :: *)))


------ Local rules for imported ids --------
"SPEC/GHC.IO.FD writeBuf1 @ FD" [0]
    forall (w_saVkE :: GHC.IO.Device.RawIO FD).
      GHC.IO.BufferedIO.writeBuf1 @ FD w_saVkE
      = GHC.IO.FD.$fBufferedIOFD_$swriteBuf1

