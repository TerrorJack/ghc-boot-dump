
==================== Asm code ====================
2018-03-16 16:03:17.340386516 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$WHandle___closure
.type GHC.IO.Handle.Types.$WHandle___closure, @object
GHC.IO.Handle.Types.$WHandle___closure:
	.quad	GHC.IO.Handle.Types.$WHandle___info


==================== Asm code ====================
2018-03-16 16:03:17.341280292 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$WHandle___slow
.type GHC.IO.Handle.Types.$WHandle___slow, @object
GHC.IO.Handle.Types.$WHandle___slow:
_c8cuq:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Types.$WHandle___entry
	.size GHC.IO.Handle.Types.$WHandle___slow, .-GHC.IO.Handle.Types.$WHandle___slow


==================== Asm code ====================
2018-03-16 16:03:17.34219774 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$WHandle___entry
.type GHC.IO.Handle.Types.$WHandle___entry, @object
GHC.IO.Handle.Types.$WHandle___entry:
_c8cuz:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cuS
_c8cuT:
	movq $block_c8cuu_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp stg_ap_0_fast
_c8cuS:
	movl $GHC.IO.Handle.Types.$WHandle___closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$WHandle___entry, .-GHC.IO.Handle.Types.$WHandle___entry


==================== Asm code ====================
2018-03-16 16:03:17.34300961 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$WHandle___info
.type GHC.IO.Handle.Types.$WHandle___info, @object
GHC.IO.Handle.Types.$WHandle___info:
	.quad	GHC.IO.Handle.Types.$WHandle___entry
	.quad	0
	.quad	14
	.quad	68719476736
	.quad	0
	.quad	16
	.quad	GHC.IO.Handle.Types.$WHandle___slow


==================== Asm code ====================
2018-03-16 16:03:17.343845039 UTC

.section .text
.align 8
_c8cuu:
_c8cuu:
	movq $block_c8cuw_info,(%rbp)
	movq %rbx,%rax
	movq 40(%rbp),%rbx
	movq %rax,40(%rbp)
	testb $7,%bl
	jne _c8cuw
_c8cux:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8cuu, .-_c8cuu


==================== Asm code ====================
2018-03-16 16:03:17.34458209 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cuu_info:
	.quad	_c8cuu
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.345387814 UTC

.section .text
.align 8
_c8cuw:
_c8cuw:
	movq $block_c8cuC_info,(%rbp)
	movq 7(%rbx),%rax
	movq 56(%rbp),%rbx
	movq %rax,56(%rbp)
	testb $7,%bl
	jne _c8cuC
_c8cuD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8cuw, .-_c8cuw


==================== Asm code ====================
2018-03-16 16:03:17.346094769 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cuw_info:
	.quad	_c8cuw
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.346826369 UTC

.section .text
.align 8
_c8cuC:
_c8cuC:
	movq $block_c8cuH_info,(%rbp)
	movq 7(%rbx),%rax
	movq 64(%rbp),%rbx
	movq %rax,64(%rbp)
	testb $7,%bl
	jne _c8cuH
_c8cuI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8cuC, .-_c8cuC


==================== Asm code ====================
2018-03-16 16:03:17.348355096 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cuC_info:
	.quad	_c8cuC
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.349056507 UTC

.section .text
.align 8
_c8cuH:
_c8cuH:
	movq $block_c8cuM_info,(%rbp)
	movq 7(%rbx),%rax
	movq 72(%rbp),%rbx
	movq %rax,72(%rbp)
	testb $7,%bl
	jne _c8cuM
_c8cuN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8cuH, .-_c8cuH


==================== Asm code ====================
2018-03-16 16:03:17.349862272 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cuH_info:
	.quad	_c8cuH
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.350631802 UTC

.section .text
.align 8
_c8cuM:
_c8cuM:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _c8cv0
_c8cuZ:
	movq 7(%rbx),%rax
	movq $GHC.IO.Handle.Types.Handle___con_info,-128(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-120(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-112(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-104(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-96(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-80(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-72(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq 80(%rbp),%rax
	movq %rax,-40(%r12)
	movq 88(%rbp),%rax
	movq %rax,-32(%r12)
	movq 96(%rbp),%rax
	movq %rax,-24(%r12)
	movq 104(%rbp),%rax
	movq %rax,-16(%r12)
	movq 112(%rbp),%rax
	movq %rax,-8(%r12)
	movq 120(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8cv0:
	movq $136,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8cuM, .-_c8cuM


==================== Asm code ====================
2018-03-16 16:03:17.351394446 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cuM_info:
	.quad	_c8cuM
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.354681652 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$WFileHandle_closure
.type GHC.IO.Handle.Types.$WFileHandle_closure, @object
GHC.IO.Handle.Types.$WFileHandle_closure:
	.quad	GHC.IO.Handle.Types.$WFileHandle_info


==================== Asm code ====================
2018-03-16 16:03:17.355407471 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$WFileHandle_entry
.type GHC.IO.Handle.Types.$WFileHandle_entry, @object
GHC.IO.Handle.Types.$WFileHandle_entry:
_c8cvS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cvW
_c8cvX:
	movq $block_c8cvP_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8cvP
_c8cvQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cvW:
	movl $GHC.IO.Handle.Types.$WFileHandle_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$WFileHandle_entry, .-GHC.IO.Handle.Types.$WFileHandle_entry


==================== Asm code ====================
2018-03-16 16:03:17.356094793 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$WFileHandle_info
.type GHC.IO.Handle.Types.$WFileHandle_info, @object
GHC.IO.Handle.Types.$WFileHandle_info:
	.quad	GHC.IO.Handle.Types.$WFileHandle_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.356823737 UTC

.section .text
.align 8
_c8cvP:
_c8cvP:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8cw0
_c8cvZ:
	movq 7(%rbx),%rax
	movq $GHC.IO.Handle.Types.FileHandle_con_info,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8cw0:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8cvP, .-_c8cvP


==================== Asm code ====================
2018-03-16 16:03:17.357495773 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cvP_info:
	.quad	_c8cvP
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.3610434 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$WDuplexHandle_closure
.type GHC.IO.Handle.Types.$WDuplexHandle_closure, @object
GHC.IO.Handle.Types.$WDuplexHandle_closure:
	.quad	GHC.IO.Handle.Types.$WDuplexHandle_info


==================== Asm code ====================
2018-03-16 16:03:17.361972417 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$WDuplexHandle_entry
.type GHC.IO.Handle.Types.$WDuplexHandle_entry, @object
GHC.IO.Handle.Types.$WDuplexHandle_entry:
_c8cwk:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cwt
_c8cwu:
	movq $block_c8cwh_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8cwh
_c8cwi:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cwt:
	movl $GHC.IO.Handle.Types.$WDuplexHandle_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$WDuplexHandle_entry, .-GHC.IO.Handle.Types.$WDuplexHandle_entry


==================== Asm code ====================
2018-03-16 16:03:17.362652499 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$WDuplexHandle_info
.type GHC.IO.Handle.Types.$WDuplexHandle_info, @object
GHC.IO.Handle.Types.$WDuplexHandle_info:
	.quad	GHC.IO.Handle.Types.$WDuplexHandle_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:03:17.363316421 UTC

.section .text
.align 8
_c8cwh:
_c8cwh:
	movq $block_c8cwn_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8cwn
_c8cwo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8cwh, .-_c8cwh


==================== Asm code ====================
2018-03-16 16:03:17.363960018 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cwh_info:
	.quad	_c8cwh
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.364706275 UTC

.section .text
.align 8
_c8cwn:
_c8cwn:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8cwy
_c8cwx:
	movq 7(%rbx),%rax
	movq $GHC.IO.Handle.Types.DuplexHandle_con_info,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -22(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8cwy:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8cwn, .-_c8cwn


==================== Asm code ====================
2018-03-16 16:03:17.365344943 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cwn_info:
	.quad	_c8cwn
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.367019582 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType12_bytes
.type GHC.IO.Handle.Types.$fShowHandleType12_bytes, @object
GHC.IO.Handle.Types.$fShowHandleType12_bytes:
	.asciz "closed"


==================== Asm code ====================
2018-03-16 16:03:17.369556243 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType11_closure
.type GHC.IO.Handle.Types.$fShowHandleType11_closure, @object
GHC.IO.Handle.Types.$fShowHandleType11_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandleType11_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.370405047 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandleType11_entry
.type GHC.IO.Handle.Types.$fShowHandleType11_entry, @object
GHC.IO.Handle.Types.$fShowHandleType11_entry:
_c8cwY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cwZ
_c8cx0:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8cwX
_c8cwW:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fShowHandleType12_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8cwZ:
	jmp *-16(%r13)
_c8cwX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fShowHandleType11_entry, .-GHC.IO.Handle.Types.$fShowHandleType11_entry


==================== Asm code ====================
2018-03-16 16:03:17.371113343 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType11_info
.type GHC.IO.Handle.Types.$fShowHandleType11_info, @object
GHC.IO.Handle.Types.$fShowHandleType11_info:
	.quad	GHC.IO.Handle.Types.$fShowHandleType11_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:17.372763468 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType10_bytes
.type GHC.IO.Handle.Types.$fShowHandleType10_bytes, @object
GHC.IO.Handle.Types.$fShowHandleType10_bytes:
	.asciz "semi-closed"


==================== Asm code ====================
2018-03-16 16:03:17.375277518 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType9_closure
.type GHC.IO.Handle.Types.$fShowHandleType9_closure, @object
GHC.IO.Handle.Types.$fShowHandleType9_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandleType9_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.376110297 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandleType9_entry
.type GHC.IO.Handle.Types.$fShowHandleType9_entry, @object
GHC.IO.Handle.Types.$fShowHandleType9_entry:
_c8cxf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cxg
_c8cxh:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8cxe
_c8cxd:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fShowHandleType10_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8cxg:
	jmp *-16(%r13)
_c8cxe:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fShowHandleType9_entry, .-GHC.IO.Handle.Types.$fShowHandleType9_entry


==================== Asm code ====================
2018-03-16 16:03:17.376833769 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType9_info
.type GHC.IO.Handle.Types.$fShowHandleType9_info, @object
GHC.IO.Handle.Types.$fShowHandleType9_info:
	.quad	GHC.IO.Handle.Types.$fShowHandleType9_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:17.378569845 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType8_bytes
.type GHC.IO.Handle.Types.$fShowHandleType8_bytes, @object
GHC.IO.Handle.Types.$fShowHandleType8_bytes:
	.asciz "readable"


==================== Asm code ====================
2018-03-16 16:03:17.381085498 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType7_closure
.type GHC.IO.Handle.Types.$fShowHandleType7_closure, @object
GHC.IO.Handle.Types.$fShowHandleType7_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandleType7_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.382930711 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandleType7_entry
.type GHC.IO.Handle.Types.$fShowHandleType7_entry, @object
GHC.IO.Handle.Types.$fShowHandleType7_entry:
_c8cxw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cxx
_c8cxy:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8cxv
_c8cxu:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fShowHandleType8_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8cxx:
	jmp *-16(%r13)
_c8cxv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fShowHandleType7_entry, .-GHC.IO.Handle.Types.$fShowHandleType7_entry


==================== Asm code ====================
2018-03-16 16:03:17.383721074 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType7_info
.type GHC.IO.Handle.Types.$fShowHandleType7_info, @object
GHC.IO.Handle.Types.$fShowHandleType7_info:
	.quad	GHC.IO.Handle.Types.$fShowHandleType7_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:17.385412803 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType6_bytes
.type GHC.IO.Handle.Types.$fShowHandleType6_bytes, @object
GHC.IO.Handle.Types.$fShowHandleType6_bytes:
	.asciz "writable"


==================== Asm code ====================
2018-03-16 16:03:17.387944872 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType5_closure
.type GHC.IO.Handle.Types.$fShowHandleType5_closure, @object
GHC.IO.Handle.Types.$fShowHandleType5_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandleType5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.388732275 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandleType5_entry
.type GHC.IO.Handle.Types.$fShowHandleType5_entry, @object
GHC.IO.Handle.Types.$fShowHandleType5_entry:
_c8cxN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cxO
_c8cxP:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8cxM
_c8cxL:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fShowHandleType6_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8cxO:
	jmp *-16(%r13)
_c8cxM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fShowHandleType5_entry, .-GHC.IO.Handle.Types.$fShowHandleType5_entry


==================== Asm code ====================
2018-03-16 16:03:17.389439524 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType5_info
.type GHC.IO.Handle.Types.$fShowHandleType5_info, @object
GHC.IO.Handle.Types.$fShowHandleType5_info:
	.quad	GHC.IO.Handle.Types.$fShowHandleType5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:17.391199206 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType4_bytes
.type GHC.IO.Handle.Types.$fShowHandleType4_bytes, @object
GHC.IO.Handle.Types.$fShowHandleType4_bytes:
	.asciz "writable (append)"


==================== Asm code ====================
2018-03-16 16:03:17.393639448 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType3_closure
.type GHC.IO.Handle.Types.$fShowHandleType3_closure, @object
GHC.IO.Handle.Types.$fShowHandleType3_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandleType3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.394463629 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandleType3_entry
.type GHC.IO.Handle.Types.$fShowHandleType3_entry, @object
GHC.IO.Handle.Types.$fShowHandleType3_entry:
_c8cy4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cy5
_c8cy6:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8cy3
_c8cy2:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fShowHandleType4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8cy5:
	jmp *-16(%r13)
_c8cy3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fShowHandleType3_entry, .-GHC.IO.Handle.Types.$fShowHandleType3_entry


==================== Asm code ====================
2018-03-16 16:03:17.39517654 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType3_info
.type GHC.IO.Handle.Types.$fShowHandleType3_info, @object
GHC.IO.Handle.Types.$fShowHandleType3_info:
	.quad	GHC.IO.Handle.Types.$fShowHandleType3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:17.396825398 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType2_bytes
.type GHC.IO.Handle.Types.$fShowHandleType2_bytes, @object
GHC.IO.Handle.Types.$fShowHandleType2_bytes:
	.asciz "read-writable"


==================== Asm code ====================
2018-03-16 16:03:17.399808657 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType1_closure
.type GHC.IO.Handle.Types.$fShowHandleType1_closure, @object
GHC.IO.Handle.Types.$fShowHandleType1_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandleType1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.400616992 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandleType1_entry
.type GHC.IO.Handle.Types.$fShowHandleType1_entry, @object
GHC.IO.Handle.Types.$fShowHandleType1_entry:
_c8cyl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cym
_c8cyn:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8cyk
_c8cyj:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fShowHandleType2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8cym:
	jmp *-16(%r13)
_c8cyk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fShowHandleType1_entry, .-GHC.IO.Handle.Types.$fShowHandleType1_entry


==================== Asm code ====================
2018-03-16 16:03:17.401303257 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType1_info
.type GHC.IO.Handle.Types.$fShowHandleType1_info, @object
GHC.IO.Handle.Types.$fShowHandleType1_info:
	.quad	GHC.IO.Handle.Types.$fShowHandleType1_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:17.404915573 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$cshowsPrec_closure
.type GHC.IO.Handle.Types.$w$cshowsPrec_closure, @object
GHC.IO.Handle.Types.$w$cshowsPrec_closure:
	.quad	GHC.IO.Handle.Types.$w$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.405735829 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$w$cshowsPrec_entry
.type GHC.IO.Handle.Types.$w$cshowsPrec_entry, @object
GHC.IO.Handle.Types.$w$cshowsPrec_entry:
_c8cyK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cyL
_c8cyM:
	movq $block_c8cyz_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8cyz
_c8cyA:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cyL:
	movl $GHC.IO.Handle.Types.$w$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$w$cshowsPrec_entry, .-GHC.IO.Handle.Types.$w$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:03:17.406433168 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$cshowsPrec_info
.type GHC.IO.Handle.Types.$w$cshowsPrec_info, @object
GHC.IO.Handle.Types.$w$cshowsPrec_info:
	.quad	GHC.IO.Handle.Types.$w$cshowsPrec_entry
	.quad	0
	.quad	545460846606
	.quad	8589934607
	.quad	S8alj_srt


==================== Asm code ====================
2018-03-16 16:03:17.407282716 UTC

.section .text
.align 8
_c8cyz:
_c8cyz:
	movq 8(%rbp),%rax
	andl $7,%ebx
	jmp *_n8czf(,%rbx,8)
_c8cyI:
	movq %rax,%rsi
	movl $GHC.IO.Handle.Types.$fShowHandleType1_closure,%r14d
	addq $16,%rbp
	jmp GHC.Base.++_entry
_c8cyH:
	movq %rax,%rsi
	movl $GHC.IO.Handle.Types.$fShowHandleType3_closure,%r14d
	addq $16,%rbp
	jmp GHC.Base.++_entry
_c8cyG:
	movq %rax,%rsi
	movl $GHC.IO.Handle.Types.$fShowHandleType5_closure,%r14d
	addq $16,%rbp
	jmp GHC.Base.++_entry
_c8cyF:
	movq %rax,%rsi
	movl $GHC.IO.Handle.Types.$fShowHandleType7_closure,%r14d
	addq $16,%rbp
	jmp GHC.Base.++_entry
_c8cyE:
	movq %rax,%rsi
	movl $GHC.IO.Handle.Types.$fShowHandleType9_closure,%r14d
	addq $16,%rbp
	jmp GHC.Base.++_entry
_c8cyD:
	movq %rax,%rsi
	movl $GHC.IO.Handle.Types.$fShowHandleType11_closure,%r14d
	addq $16,%rbp
	jmp GHC.Base.++_entry
	.size _c8cyz, .-_c8cyz
.section .rodata
.align 8
.align 1
_n8czf:
	.quad	0
	.quad	_c8cyD
	.quad	_c8cyE
	.quad	_c8cyF
	.quad	_c8cyG
	.quad	_c8cyH
	.quad	_c8cyI


==================== Asm code ====================
2018-03-16 16:03:17.408015154 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cyz_info:
	.quad	_c8cyz
	.quad	1
	.quad	270582939678
	.quad	S8alj_srt+8


==================== Asm code ====================
2018-03-16 16:03:17.410598432 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_closure
.type GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_closure, @object
GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.411241894 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_entry
.type GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_entry, @object
GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_entry:
_c8czm:
	movq %rsi,%rax
	movq %rdi,%rsi
	movq %rax,%r14
	jmp GHC.IO.Handle.Types.$w$cshowsPrec_entry
	.size GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_entry, .-GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:03:17.411818811 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_info
.type GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_info, @object
GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_info:
	.quad	GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_entry
	.quad	0
	.quad	4294967310
	.quad	12884901911
	.quad	S8alj_srt


==================== Asm code ====================
2018-03-16 16:03:17.415228927 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType_$cshow_closure
.type GHC.IO.Handle.Types.$fShowHandleType_$cshow_closure, @object
GHC.IO.Handle.Types.$fShowHandleType_$cshow_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandleType_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.416032552 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandleType_$cshow_entry
.type GHC.IO.Handle.Types.$fShowHandleType_$cshow_entry, @object
GHC.IO.Handle.Types.$fShowHandleType_$cshow_entry:
_c8czI:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8czJ
_c8czK:
	movq $block_c8czx_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8czx
_c8czy:
	movq (%rbx),%rax
	jmp *(%rax)
_c8czJ:
	movl $GHC.IO.Handle.Types.$fShowHandleType_$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowHandleType_$cshow_entry, .-GHC.IO.Handle.Types.$fShowHandleType_$cshow_entry


==================== Asm code ====================
2018-03-16 16:03:17.416689724 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType_$cshow_info
.type GHC.IO.Handle.Types.$fShowHandleType_$cshow_info, @object
GHC.IO.Handle.Types.$fShowHandleType_$cshow_info:
	.quad	GHC.IO.Handle.Types.$fShowHandleType_$cshow_entry
	.quad	0
	.quad	545460846606
	.quad	4294967301
	.quad	S8alj_srt+8


==================== Asm code ====================
2018-03-16 16:03:17.418122203 UTC

.section .text
.align 8
_c8czx:
_c8czx:
	andl $7,%ebx
	jmp *_n8cAd(,%rbx,8)
_c8czG:
	movl $GHC.IO.Handle.Types.$fShowHandleType1_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8czF:
	movl $GHC.IO.Handle.Types.$fShowHandleType3_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8czE:
	movl $GHC.IO.Handle.Types.$fShowHandleType5_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8czD:
	movl $GHC.IO.Handle.Types.$fShowHandleType7_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8czC:
	movl $GHC.IO.Handle.Types.$fShowHandleType9_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8czB:
	movl $GHC.IO.Handle.Types.$fShowHandleType11_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8czx, .-_c8czx
.section .rodata
.align 8
.align 1
_n8cAd:
	.quad	0
	.quad	_c8czB
	.quad	_c8czC
	.quad	_c8czD
	.quad	_c8czE
	.quad	_c8czF
	.quad	_c8czG


==================== Asm code ====================
2018-03-16 16:03:17.418897584 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8czx_info:
	.quad	_c8czx
	.quad	0
	.quad	270582939678
	.quad	S8alj_srt+8


==================== Asm code ====================
2018-03-16 16:03:17.421081299 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType_$cshowList_closure
.type GHC.IO.Handle.Types.$fShowHandleType_$cshowList_closure, @object
GHC.IO.Handle.Types.$fShowHandleType_$cshowList_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandleType_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.422056292 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandleType_$cshowList_entry
.type GHC.IO.Handle.Types.$fShowHandleType_$cshowList_entry, @object
GHC.IO.Handle.Types.$fShowHandleType_$cshowList_entry:
_c8cAq:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.IO.Handle.Types.$w$cshowsPrec_closure+2,%r14d
	jmp GHC.Show.showList___entry
	.size GHC.IO.Handle.Types.$fShowHandleType_$cshowList_entry, .-GHC.IO.Handle.Types.$fShowHandleType_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:03:17.422663385 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType_$cshowList_info
.type GHC.IO.Handle.Types.$fShowHandleType_$cshowList_info, @object
GHC.IO.Handle.Types.$fShowHandleType_$cshowList_info:
	.quad	GHC.IO.Handle.Types.$fShowHandleType_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S8alj_srt


==================== Asm code ====================
2018-03-16 16:03:17.424386582 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType_closure
.type GHC.IO.Handle.Types.$fShowHandleType_closure, @object
GHC.IO.Handle.Types.$fShowHandleType_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_closure+3
	.quad	GHC.IO.Handle.Types.$fShowHandleType_$cshow_closure+1
	.quad	GHC.IO.Handle.Types.$fShowHandleType_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.428915191 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqHandle_$c==_closure
.type GHC.IO.Handle.Types.$fEqHandle_$c==_closure, @object
GHC.IO.Handle.Types.$fEqHandle_$c==_closure:
	.quad	GHC.IO.Handle.Types.$fEqHandle_$c==_info


==================== Asm code ====================
2018-03-16 16:03:17.429709995 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fEqHandle_$c==_entry
.type GHC.IO.Handle.Types.$fEqHandle_$c==_entry, @object
GHC.IO.Handle.Types.$fEqHandle_$c==_entry:
_c8cAJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cAK
_c8cAL:
	movq $block_c8cAC_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8cAC
_c8cAD:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cAK:
	movl $GHC.IO.Handle.Types.$fEqHandle_$c==_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fEqHandle_$c==_entry, .-GHC.IO.Handle.Types.$fEqHandle_$c==_entry


==================== Asm code ====================
2018-03-16 16:03:17.430367189 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqHandle_$c==_info
.type GHC.IO.Handle.Types.$fEqHandle_$c==_info, @object
GHC.IO.Handle.Types.$fEqHandle_$c==_info:
	.quad	GHC.IO.Handle.Types.$fEqHandle_$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.431174839 UTC

.section .text
.align 8
_c8cAC:
_c8cAC:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8cAG
_c8cAH:
	movq $block_c8cB3_info,(%rbp)
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8cB3
_c8cB5:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cAG:
	movq $block_c8cAO_info,(%rbp)
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8cAO
_c8cAQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8cAC, .-_c8cAC


==================== Asm code ====================
2018-03-16 16:03:17.431873076 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cAC_info:
	.quad	_c8cAC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.432592688 UTC

.section .text
.align 8
_c8cAO:
_c8cAO:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8cAW
_u8cBl:
	addq $16,%rbp
	jmp _c8cBb
_c8cAW:
	movq 8(%rbp),%rax
	cmpq 15(%rbx),%rax
	sete %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8cAO, .-_c8cAO


==================== Asm code ====================
2018-03-16 16:03:17.43323501 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cAO_info:
	.quad	_c8cAO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.433997711 UTC

.section .text
.align 8
_c8cB3:
_c8cB3:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8cBk
_c8cBf:
	movq 8(%rbp),%rax
	cmpq 14(%rbx),%rax
	sete %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u8cBk:
	addq $16,%rbp
	jmp _c8cBb
	.size _c8cB3, .-_c8cB3


==================== Asm code ====================
2018-03-16 16:03:17.434662526 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cB3_info:
	.quad	_c8cB3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.435308041 UTC

.section .text
.align 8
_c8cBb:
_c8cBb:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8cBb, .-_c8cBb


==================== Asm code ====================
2018-03-16 16:03:17.440117018 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqHandle_$c/=_closure
.type GHC.IO.Handle.Types.$fEqHandle_$c/=_closure, @object
GHC.IO.Handle.Types.$fEqHandle_$c/=_closure:
	.quad	GHC.IO.Handle.Types.$fEqHandle_$c/=_info


==================== Asm code ====================
2018-03-16 16:03:17.440900838 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fEqHandle_$c/=_entry
.type GHC.IO.Handle.Types.$fEqHandle_$c/=_entry, @object
GHC.IO.Handle.Types.$fEqHandle_$c/=_entry:
_c8cCa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cCb
_c8cCc:
	movq $block_c8cC3_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8cC3
_c8cC4:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cCb:
	movl $GHC.IO.Handle.Types.$fEqHandle_$c/=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fEqHandle_$c/=_entry, .-GHC.IO.Handle.Types.$fEqHandle_$c/=_entry


==================== Asm code ====================
2018-03-16 16:03:17.441872579 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqHandle_$c/=_info
.type GHC.IO.Handle.Types.$fEqHandle_$c/=_info, @object
GHC.IO.Handle.Types.$fEqHandle_$c/=_info:
	.quad	GHC.IO.Handle.Types.$fEqHandle_$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.442668435 UTC

.section .text
.align 8
_c8cC3:
_c8cC3:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8cC7
_c8cC8:
	movq $block_c8cCJ_info,(%rbp)
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8cCJ
_c8cCL:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cC7:
	movq $block_c8cCf_info,(%rbp)
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8cCf
_c8cCh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8cC3, .-_c8cC3


==================== Asm code ====================
2018-03-16 16:03:17.443363126 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cC3_info:
	.quad	_c8cC3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.444101406 UTC

.section .text
.align 8
_c8cCf:
_c8cCf:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8cCC
_u8cDg:
	addq $16,%rbp
	jmp _c8cD0
_c8cCC:
	movq 8(%rbp),%rax
	cmpq 15(%rbx),%rax
	je _u8cDh
_u8cDi:
	addq $16,%rbp
	jmp _c8cD0
_u8cDh:
	addq $16,%rbp
	jmp _c8cD6
	.size _c8cCf, .-_c8cCf


==================== Asm code ====================
2018-03-16 16:03:17.444713211 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cCf_info:
	.quad	_c8cCf
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.445440277 UTC

.section .text
.align 8
_c8cCJ:
_c8cCJ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8cDd
_c8cDa:
	movq 8(%rbp),%rax
	cmpq 14(%rbx),%rax
	je _u8cDe
_u8cDf:
	addq $16,%rbp
	jmp _c8cD0
_u8cDe:
	addq $16,%rbp
	jmp _c8cD6
_u8cDd:
	addq $16,%rbp
	jmp _c8cD0
	.size _c8cCJ, .-_c8cCJ


==================== Asm code ====================
2018-03-16 16:03:17.44607989 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cCJ_info:
	.quad	_c8cCJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.446743455 UTC

.section .text
.align 8
_c8cD6:
_c8cD6:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8cD6, .-_c8cD6


==================== Asm code ====================
2018-03-16 16:03:17.447398578 UTC

.section .text
.align 8
_c8cD0:
_c8cD0:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8cD0, .-_c8cD0


==================== Asm code ====================
2018-03-16 16:03:17.449201296 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqHandle_closure
.type GHC.IO.Handle.Types.$fEqHandle_closure, @object
GHC.IO.Handle.Types.$fEqHandle_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.IO.Handle.Types.$fEqHandle_$c==_closure+2
	.quad	GHC.IO.Handle.Types.$fEqHandle_$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:17.450944125 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline11_bytes
.type GHC.IO.Handle.Types.$fReadNewline11_bytes, @object
GHC.IO.Handle.Types.$fReadNewline11_bytes:
	.asciz "LF"


==================== Asm code ====================
2018-03-16 16:03:17.454324975 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline10_closure
.type GHC.IO.Handle.Types.$fReadNewline10_closure, @object
GHC.IO.Handle.Types.$fReadNewline10_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewline10_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.455152946 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewline10_entry
.type GHC.IO.Handle.Types.$fReadNewline10_entry, @object
GHC.IO.Handle.Types.$fReadNewline10_entry:
_c8cE5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cE6
_c8cE7:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8cE4
_c8cE3:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fReadNewline11_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8cE6:
	jmp *-16(%r13)
_c8cE4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewline10_entry, .-GHC.IO.Handle.Types.$fReadNewline10_entry


==================== Asm code ====================
2018-03-16 16:03:17.455879565 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline10_info
.type GHC.IO.Handle.Types.$fReadNewline10_info, @object
GHC.IO.Handle.Types.$fReadNewline10_info:
	.quad	GHC.IO.Handle.Types.$fReadNewline10_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:17.45746134 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline7_bytes
.type GHC.IO.Handle.Types.$fReadNewline7_bytes, @object
GHC.IO.Handle.Types.$fReadNewline7_bytes:
	.asciz "CRLF"


==================== Asm code ====================
2018-03-16 16:03:17.459853089 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline6_closure
.type GHC.IO.Handle.Types.$fReadNewline6_closure, @object
GHC.IO.Handle.Types.$fReadNewline6_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewline6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.46064026 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewline6_entry
.type GHC.IO.Handle.Types.$fReadNewline6_entry, @object
GHC.IO.Handle.Types.$fReadNewline6_entry:
_c8cEm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cEn
_c8cEo:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8cEl
_c8cEk:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fReadNewline7_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8cEn:
	jmp *-16(%r13)
_c8cEl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewline6_entry, .-GHC.IO.Handle.Types.$fReadNewline6_entry


==================== Asm code ====================
2018-03-16 16:03:17.461377399 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline6_info
.type GHC.IO.Handle.Types.$fReadNewline6_info, @object
GHC.IO.Handle.Types.$fReadNewline6_info:
	.quad	GHC.IO.Handle.Types.$fReadNewline6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:17.464507649 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_closure
.type GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_closure, @object
GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_closure:
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.465273988 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_entry
.type GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_entry, @object
GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_entry:
_c8cEH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cEI
_c8cEJ:
	movq $block_c8cEA_info,-16(%rbp)
	movq %rsi,%rbx
	movq %rdi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8cEA
_c8cEB:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cEI:
	movl $GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_entry, .-GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:03:17.465966722 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_info
.type GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_info, @object
GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_info:
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_entry
	.quad	0
	.quad	30064771086
	.quad	12884901911
	.quad	S8alj_srt+64


==================== Asm code ====================
2018-03-16 16:03:17.466716481 UTC

.section .text
.align 8
_c8cEA:
_c8cEA:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8cEE
_c8cEF:
	movq %rax,%rsi
	movl $GHC.IO.Handle.Types.$fReadNewline6_closure,%r14d
	addq $16,%rbp
	jmp GHC.Base.++_entry
_c8cEE:
	movq %rax,%rsi
	movl $GHC.IO.Handle.Types.$fReadNewline10_closure,%r14d
	addq $16,%rbp
	jmp GHC.Base.++_entry
	.size _c8cEA, .-_c8cEA


==================== Asm code ====================
2018-03-16 16:03:17.46732507 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cEA_info:
	.quad	_c8cEA
	.quad	1
	.quad	12884901918
	.quad	S8alj_srt+64


==================== Asm code ====================
2018-03-16 16:03:17.470223417 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewline_$cshow_closure
.type GHC.IO.Handle.Types.$fShowNewline_$cshow_closure, @object
GHC.IO.Handle.Types.$fShowNewline_$cshow_closure:
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.470974545 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowNewline_$cshow_entry
.type GHC.IO.Handle.Types.$fShowNewline_$cshow_entry, @object
GHC.IO.Handle.Types.$fShowNewline_$cshow_entry:
_c8cFd:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cFe
_c8cFf:
	movq $block_c8cF6_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8cF6
_c8cF7:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cFe:
	movl $GHC.IO.Handle.Types.$fShowNewline_$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowNewline_$cshow_entry, .-GHC.IO.Handle.Types.$fShowNewline_$cshow_entry


==================== Asm code ====================
2018-03-16 16:03:17.471639697 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewline_$cshow_info
.type GHC.IO.Handle.Types.$fShowNewline_$cshow_info, @object
GHC.IO.Handle.Types.$fShowNewline_$cshow_info:
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshow_entry
	.quad	0
	.quad	47244640270
	.quad	4294967301
	.quad	S8alj_srt+64


==================== Asm code ====================
2018-03-16 16:03:17.472375314 UTC

.section .text
.align 8
_c8cF6:
_c8cF6:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8cFa
_c8cFb:
	movl $GHC.IO.Handle.Types.$fReadNewline6_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8cFa:
	movl $GHC.IO.Handle.Types.$fReadNewline10_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8cF6, .-_c8cF6


==================== Asm code ====================
2018-03-16 16:03:17.472996012 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cF6_info:
	.quad	_c8cF6
	.quad	0
	.quad	12884901918
	.quad	S8alj_srt+64


==================== Asm code ====================
2018-03-16 16:03:17.476674799 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewline1_closure
.type GHC.IO.Handle.Types.$fShowNewline1_closure, @object
GHC.IO.Handle.Types.$fShowNewline1_closure:
	.quad	GHC.IO.Handle.Types.$fShowNewline1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.477467793 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowNewline1_entry
.type GHC.IO.Handle.Types.$fShowNewline1_entry, @object
GHC.IO.Handle.Types.$fShowNewline1_entry:
_c8cFL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cFM
_c8cFN:
	movq $block_c8cFE_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8cFE
_c8cFF:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cFM:
	movl $GHC.IO.Handle.Types.$fShowNewline1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowNewline1_entry, .-GHC.IO.Handle.Types.$fShowNewline1_entry


==================== Asm code ====================
2018-03-16 16:03:17.478166889 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewline1_info
.type GHC.IO.Handle.Types.$fShowNewline1_info, @object
GHC.IO.Handle.Types.$fShowNewline1_info:
	.quad	GHC.IO.Handle.Types.$fShowNewline1_entry
	.quad	0
	.quad	81604378638
	.quad	8589934607
	.quad	S8alj_srt+64


==================== Asm code ====================
2018-03-16 16:03:17.478913218 UTC

.section .text
.align 8
_c8cFE:
_c8cFE:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8cFI
_c8cFJ:
	movq %rax,%rsi
	movl $GHC.IO.Handle.Types.$fReadNewline6_closure,%r14d
	addq $16,%rbp
	jmp GHC.Base.++_entry
_c8cFI:
	movq %rax,%rsi
	movl $GHC.IO.Handle.Types.$fReadNewline10_closure,%r14d
	addq $16,%rbp
	jmp GHC.Base.++_entry
	.size _c8cFE, .-_c8cFE


==================== Asm code ====================
2018-03-16 16:03:17.47954371 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cFE_info:
	.quad	_c8cFE
	.quad	1
	.quad	12884901918
	.quad	S8alj_srt+64


==================== Asm code ====================
2018-03-16 16:03:17.48168113 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewline_$cshowList_closure
.type GHC.IO.Handle.Types.$fShowNewline_$cshowList_closure, @object
GHC.IO.Handle.Types.$fShowNewline_$cshowList_closure:
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.482347903 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowNewline_$cshowList_entry
.type GHC.IO.Handle.Types.$fShowNewline_$cshowList_entry, @object
GHC.IO.Handle.Types.$fShowNewline_$cshowList_entry:
_c8cGa:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.IO.Handle.Types.$fShowNewline1_closure+2,%r14d
	jmp GHC.Show.showList___entry
	.size GHC.IO.Handle.Types.$fShowNewline_$cshowList_entry, .-GHC.IO.Handle.Types.$fShowNewline_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:03:17.482992989 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewline_$cshowList_info
.type GHC.IO.Handle.Types.$fShowNewline_$cshowList_info, @object
GHC.IO.Handle.Types.$fShowNewline_$cshowList_info:
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S8alj_srt+96


==================== Asm code ====================
2018-03-16 16:03:17.484772513 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewline_closure
.type GHC.IO.Handle.Types.$fShowNewline_closure, @object
GHC.IO.Handle.Types.$fShowNewline_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_closure+3
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshow_closure+1
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.487568799 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode4_bytes
.type GHC.IO.Handle.Types.$fShowNewlineMode4_bytes, @object
GHC.IO.Handle.Types.$fShowNewlineMode4_bytes:
	.asciz "NewlineMode {"


==================== Asm code ====================
2018-03-16 16:03:17.489304322 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode3_bytes
.type GHC.IO.Handle.Types.$fShowNewlineMode3_bytes, @object
GHC.IO.Handle.Types.$fShowNewlineMode3_bytes:
	.asciz "inputNL = "


==================== Asm code ====================
2018-03-16 16:03:17.490918113 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode2_bytes
.type GHC.IO.Handle.Types.$fShowNewlineMode2_bytes, @object
GHC.IO.Handle.Types.$fShowNewlineMode2_bytes:
	.asciz "outputNL = "


==================== Asm code ====================
2018-03-16 16:03:17.49252962 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode5_bytes
.type GHC.IO.Handle.Types.$fReadNewlineMode5_bytes, @object
GHC.IO.Handle.Types.$fReadNewlineMode5_bytes:
	.asciz "}"


==================== Asm code ====================
2018-03-16 16:03:17.503811823 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$cshowsPrec1_closure
.type GHC.IO.Handle.Types.$w$cshowsPrec1_closure, @object
GHC.IO.Handle.Types.$w$cshowsPrec1_closure:
	.quad	GHC.IO.Handle.Types.$w$cshowsPrec1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.504561174 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$w$cshowsPrec1_slow
.type GHC.IO.Handle.Types.$w$cshowsPrec1_slow, @object
GHC.IO.Handle.Types.$w$cshowsPrec1_slow:
_c8cGn:
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Types.$w$cshowsPrec1_entry
	.size GHC.IO.Handle.Types.$w$cshowsPrec1_slow, .-GHC.IO.Handle.Types.$w$cshowsPrec1_slow


==================== Asm code ====================
2018-03-16 16:03:17.505275849 UTC

.section .text
.align 8
sat_s8a84_entry:
_c8cGZ:
	movq 16(%rbx),%rsi
	movl $GHC.IO.Handle.Types.$fReadNewlineMode5_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
	.size sat_s8a84_entry, .-sat_s8a84_entry


==================== Asm code ====================
2018-03-16 16:03:17.505851574 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8a84_info:
	.quad	sat_s8a84_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:03:17.506481117 UTC

.section .text
.align 8
sat_s8a85_entry:
_c8cH8:
	movq 16(%rbx),%rsi
	movl $GHC.IO.Handle.Types.$fReadNewlineMode5_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
	.size sat_s8a85_entry, .-sat_s8a85_entry


==================== Asm code ====================
2018-03-16 16:03:17.507079836 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8a85_info:
	.quad	sat_s8a85_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:03:17.507832462 UTC

.section .text
.align 8
sat_s8a86_entry:
_c8cHf:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cHg
_c8cHh:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c8cGQ_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c8cGQ
_c8cGR:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cHg:
	jmp *-16(%r13)
	.size sat_s8a86_entry, .-sat_s8a86_entry


==================== Asm code ====================
2018-03-16 16:03:17.508499347 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8a86_info:
	.quad	sat_s8a86_entry
	.quad	2
	.quad	12884901906
	.quad	S8alj_srt+64


==================== Asm code ====================
2018-03-16 16:03:17.509357608 UTC

.section .text
.align 8
_c8cGQ:
_c8cGQ:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8cHc
_c8cHd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8cHn
_c8cHm:
	movq $sat_s8a85_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	movl $GHC.IO.Handle.Types.$fReadNewline6_closure,%r14d
	addq $16,%rbp
	jmp GHC.Base.++_entry
_c8cHn:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c8cHc:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8cHn
_c8cHj:
	movq $sat_s8a84_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	movl $GHC.IO.Handle.Types.$fReadNewline10_closure,%r14d
	addq $16,%rbp
	jmp GHC.Base.++_entry
	.size _c8cGQ, .-_c8cGQ


==================== Asm code ====================
2018-03-16 16:03:17.510063387 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cGQ_info:
	.quad	_c8cGQ
	.quad	1
	.quad	12884901918
	.quad	S8alj_srt+64


==================== Asm code ====================
2018-03-16 16:03:17.510795543 UTC

.section .text
.align 8
sat_s8a87_entry:
_c8cHp:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8cHt
_c8cHs:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s8a86_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movl $GHC.IO.Handle.Types.$fShowNewlineMode2_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_c8cHt:
	movq $32,904(%r13)
	jmp *-16(%r13)
	.size sat_s8a87_entry, .-sat_s8a87_entry


==================== Asm code ====================
2018-03-16 16:03:17.511510386 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8a87_info:
	.quad	sat_s8a87_entry
	.quad	2
	.quad	12884901906
	.quad	S8alj_srt+64


==================== Asm code ====================
2018-03-16 16:03:17.512207362 UTC

.section .text
.align 8
karg_s8a82_entry:
_c8cHu:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8cHy
_c8cHx:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s8a87_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movl $GHC.Show.showCommaSpace1_closure,%r14d
	jmp GHC.Base.++_entry
_c8cHy:
	movq $32,904(%r13)
	jmp *-16(%r13)
	.size karg_s8a82_entry, .-karg_s8a82_entry


==================== Asm code ====================
2018-03-16 16:03:17.512886105 UTC

.section .data.rel.ro
.align 8
.align 1
karg_s8a82_info:
	.quad	karg_s8a82_entry
	.quad	2
	.quad	150323855378
	.quad	S8alj_srt+64


==================== Asm code ====================
2018-03-16 16:03:17.513699416 UTC

.section .text
.align 8
sat_s8a89_entry:
_c8cHG:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cHH
_c8cHI:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8cHK
_c8cHJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $karg_s8a82_info,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq $block_c8cHz_info,-32(%rbp)
	movq %rax,%rbx
	leaq -24(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c8cHz
_c8cHA:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cHK:
	movq $32,904(%r13)
_c8cHH:
	jmp *-16(%r13)
	.size sat_s8a89_entry, .-sat_s8a89_entry


==================== Asm code ====================
2018-03-16 16:03:17.514404742 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8a89_info:
	.quad	sat_s8a89_entry
	.quad	3
	.quad	150323855375
	.quad	S8alj_srt+64


==================== Asm code ====================
2018-03-16 16:03:17.515120874 UTC

.section .text
.align 8
_c8cHz:
_c8cHz:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8cHD
_c8cHE:
	movq %rax,%rsi
	movl $GHC.IO.Handle.Types.$fReadNewline6_closure,%r14d
	addq $16,%rbp
	jmp GHC.Base.++_entry
_c8cHD:
	movq %rax,%rsi
	movl $GHC.IO.Handle.Types.$fReadNewline10_closure,%r14d
	addq $16,%rbp
	jmp GHC.Base.++_entry
	.size _c8cHz, .-_c8cHz


==================== Asm code ====================
2018-03-16 16:03:17.515755481 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cHz_info:
	.quad	_c8cHz
	.quad	1
	.quad	12884901918
	.quad	S8alj_srt+64


==================== Asm code ====================
2018-03-16 16:03:17.516557456 UTC

.section .text
.align 8
sat_s8a8a_entry:
_c8cHS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cHT
_c8cHU:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8cHW
_c8cHV:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_s8a89_info,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rsi
	movl $GHC.IO.Handle.Types.$fShowNewlineMode3_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_c8cHW:
	movq $40,904(%r13)
_c8cHT:
	jmp *-16(%r13)
	.size sat_s8a8a_entry, .-sat_s8a8a_entry


==================== Asm code ====================
2018-03-16 16:03:17.517294733 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8a8a_info:
	.quad	sat_s8a8a_entry
	.quad	3
	.quad	150323855375
	.quad	S8alj_srt+64


==================== Asm code ====================
2018-03-16 16:03:17.518068081 UTC

.section .text
.align 8
p_s8a80_entry:
_c8cHX:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8cI1
_c8cI0:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s8a8a_info,-32(%r12)
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -32(%r12),%rsi
	movl $GHC.IO.Handle.Types.$fShowNewlineMode4_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_c8cI1:
	movq $40,904(%r13)
	jmp *-8(%r13)
	.size p_s8a80_entry, .-p_s8a80_entry


==================== Asm code ====================
2018-03-16 16:03:17.518744262 UTC

.section .data.rel.ro
.align 8
.align 1
p_s8a80_info:
	.quad	p_s8a80_entry
	.quad	2
	.quad	150323855371
	.quad	4294967301
	.quad	S8alj_srt+64


==================== Asm code ====================
2018-03-16 16:03:17.519594528 UTC

.section .text
.align 8
sat_s8a8d_entry:
_c8cIb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cIc
_c8cId:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8cIf
_c8cIe:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)2_closure,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%r14
	addq $-16,%rbp
	jmp p_s8a80_entry
_c8cIf:
	movq $24,904(%r13)
_c8cIc:
	jmp *-16(%r13)
	.size sat_s8a8d_entry, .-sat_s8a8d_entry


==================== Asm code ====================
2018-03-16 16:03:17.520292559 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8a8d_info:
	.quad	sat_s8a8d_entry
	.quad	2
	.quad	150323855378
	.quad	S8alj_srt+64


==================== Asm code ====================
2018-03-16 16:03:17.521195583 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$w$cshowsPrec1_entry
.type GHC.IO.Handle.Types.$w$cshowsPrec1_entry, @object
GHC.IO.Handle.Types.$w$cshowsPrec1_entry:
_c8cIj:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c8cIn
_c8cIm:
	movq $p_s8a80_info,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	leaq -71(%r12),%rax
	cmpq $11,%r14
	jl _c8cIh
_c8cIi:
	movq $sat_s8a8d_info,-48(%r12)
	movq %r8,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)4_closure,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8cIn:
	movq $80,904(%r13)
	movl $GHC.IO.Handle.Types.$w$cshowsPrec1_closure,%ebx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
_c8cIh:
	addq $-56,%r12
	movq %r8,%r14
	movq %rax,%rbx
	jmp p_s8a80_entry
	.size GHC.IO.Handle.Types.$w$cshowsPrec1_entry, .-GHC.IO.Handle.Types.$w$cshowsPrec1_entry


==================== Asm code ====================
2018-03-16 16:03:17.522016949 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$cshowsPrec1_info
.type GHC.IO.Handle.Types.$w$cshowsPrec1_info, @object
GHC.IO.Handle.Types.$w$cshowsPrec1_info:
	.quad	GHC.IO.Handle.Types.$w$cshowsPrec1_entry
	.quad	0
	.quad	425201762318
	.quad	17179869184
	.quad	S8alj_srt+64
	.quad	68
	.quad	GHC.IO.Handle.Types.$w$cshowsPrec1_slow


==================== Asm code ====================
2018-03-16 16:03:17.526204743 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_closure
.type GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_closure, @object
GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_closure:
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.527043166 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_entry
.type GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_entry, @object
GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_entry:
_c8cJm:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cJq
_c8cJr:
	movq $block_c8cJj_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8cJj
_c8cJk:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cJq:
	movl $GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_entry, .-GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:03:17.527773747 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_info
.type GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_info, @object
GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_info:
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S8alj_srt+112


==================== Asm code ====================
2018-03-16 16:03:17.529034521 UTC

.section .text
.align 8
_c8cJj:
_c8cJj:
	movq $block_c8cJp_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8cJp
_c8cJt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8cJj, .-_c8cJj


==================== Asm code ====================
2018-03-16 16:03:17.52970226 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cJj_info:
	.quad	_c8cJj
	.quad	2
	.quad	4294967326
	.quad	S8alj_srt+112


==================== Asm code ====================
2018-03-16 16:03:17.530368807 UTC

.section .text
.align 8
_c8cJp:
_c8cJp:
	movq 16(%rbp),%r8
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Types.$w$cshowsPrec1_entry
	.size _c8cJp, .-_c8cJp


==================== Asm code ====================
2018-03-16 16:03:17.530991939 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cJp_info:
	.quad	_c8cJp
	.quad	66
	.quad	4294967326
	.quad	S8alj_srt+112


==================== Asm code ====================
2018-03-16 16:03:17.532768072 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode2_closure
.type GHC.IO.Handle.Types.$fShowBufferMode2_closure, @object
GHC.IO.Handle.Types.$fShowBufferMode2_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.536211417 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_closure
.type GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_closure, @object
GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_closure:
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.536962649 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_entry
.type GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_entry, @object
GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_entry:
_c8cJV:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cJW
_c8cJX:
	movq $block_c8cJS_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8cJS
_c8cJT:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cJW:
	movl $GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_entry, .-GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_entry


==================== Asm code ====================
2018-03-16 16:03:17.537689462 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_info
.type GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_info, @object
GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_info:
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_entry
	.quad	0
	.quad	21474836494
	.quad	4294967301
	.quad	S8alj_srt+112


==================== Asm code ====================
2018-03-16 16:03:17.538350102 UTC

.section .text
.align 8
_c8cJS:
_c8cJS:
	movl $GHC.Types.[]_closure+1,%r8d
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp GHC.IO.Handle.Types.$w$cshowsPrec1_entry
	.size _c8cJS, .-_c8cJS


==================== Asm code ====================
2018-03-16 16:03:17.538945396 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cJS_info:
	.quad	_c8cJS
	.quad	0
	.quad	4294967326
	.quad	S8alj_srt+112


==================== Asm code ====================
2018-03-16 16:03:17.541880193 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode1_closure
.type GHC.IO.Handle.Types.$fShowNewlineMode1_closure, @object
GHC.IO.Handle.Types.$fShowNewlineMode1_closure:
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.542645772 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowNewlineMode1_entry
.type GHC.IO.Handle.Types.$fShowNewlineMode1_entry, @object
GHC.IO.Handle.Types.$fShowNewlineMode1_entry:
_c8cKi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cKj
_c8cKk:
	movq $block_c8cKf_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8cKf
_c8cKg:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cKj:
	movl $GHC.IO.Handle.Types.$fShowNewlineMode1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowNewlineMode1_entry, .-GHC.IO.Handle.Types.$fShowNewlineMode1_entry


==================== Asm code ====================
2018-03-16 16:03:17.543331777 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode1_info
.type GHC.IO.Handle.Types.$fShowNewlineMode1_info, @object
GHC.IO.Handle.Types.$fShowNewlineMode1_info:
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode1_entry
	.quad	0
	.quad	38654705678
	.quad	8589934607
	.quad	S8alj_srt+112


==================== Asm code ====================
2018-03-16 16:03:17.544021216 UTC

.section .text
.align 8
_c8cKf:
_c8cKf:
	movq 8(%rbp),%r8
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	addq $16,%rbp
	jmp GHC.IO.Handle.Types.$w$cshowsPrec1_entry
	.size _c8cKf, .-_c8cKf


==================== Asm code ====================
2018-03-16 16:03:17.544611685 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cKf_info:
	.quad	_c8cKf
	.quad	1
	.quad	4294967326
	.quad	S8alj_srt+112


==================== Asm code ====================
2018-03-16 16:03:17.547102763 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_closure
.type GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_closure, @object
GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_closure:
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.547765948 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_entry
.type GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_entry, @object
GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_entry:
_c8cKC:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.IO.Handle.Types.$fShowNewlineMode1_closure+2,%r14d
	jmp GHC.Show.showList___entry
	.size GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_entry, .-GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:03:17.548400932 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_info
.type GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_info, @object
GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_info:
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S8alj_srt+136


==================== Asm code ====================
2018-03-16 16:03:17.550302058 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode_closure
.type GHC.IO.Handle.Types.$fShowNewlineMode_closure, @object
GHC.IO.Handle.Types.$fShowNewlineMode_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_closure+3
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_closure+1
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.552423294 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline9_closure
.type GHC.IO.Handle.Types.$fReadNewline9_closure, @object
GHC.IO.Handle.Types.$fReadNewline9_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewline9_info


==================== Asm code ====================
2018-03-16 16:03:17.553121973 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewline9_entry
.type GHC.IO.Handle.Types.$fReadNewline9_entry, @object
GHC.IO.Handle.Types.$fReadNewline9_entry:
_c8cKO:
	movl $GHC.IO.Handle.Types.LF_closure+1,%r14d
	movq %rsi,%rbx
	jmp stg_ap_p_fast
	.size GHC.IO.Handle.Types.$fReadNewline9_entry, .-GHC.IO.Handle.Types.$fReadNewline9_entry


==================== Asm code ====================
2018-03-16 16:03:17.553776822 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline9_info
.type GHC.IO.Handle.Types.$fReadNewline9_info, @object
GHC.IO.Handle.Types.$fReadNewline9_info:
	.quad	GHC.IO.Handle.Types.$fReadNewline9_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.555557919 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline8_closure
.type GHC.IO.Handle.Types.$fReadNewline8_closure, @object
GHC.IO.Handle.Types.$fReadNewline8_closure:
	.quad	(,)_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewline10_closure
	.quad	GHC.IO.Handle.Types.$fReadNewline9_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.557959465 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline5_closure
.type GHC.IO.Handle.Types.$fReadNewline5_closure, @object
GHC.IO.Handle.Types.$fReadNewline5_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewline5_info


==================== Asm code ====================
2018-03-16 16:03:17.558575021 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewline5_entry
.type GHC.IO.Handle.Types.$fReadNewline5_entry, @object
GHC.IO.Handle.Types.$fReadNewline5_entry:
_c8cL0:
	movl $GHC.IO.Handle.Types.CRLF_closure+2,%r14d
	movq %rsi,%rbx
	jmp stg_ap_p_fast
	.size GHC.IO.Handle.Types.$fReadNewline5_entry, .-GHC.IO.Handle.Types.$fReadNewline5_entry


==================== Asm code ====================
2018-03-16 16:03:17.559209034 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline5_info
.type GHC.IO.Handle.Types.$fReadNewline5_info, @object
GHC.IO.Handle.Types.$fReadNewline5_info:
	.quad	GHC.IO.Handle.Types.$fReadNewline5_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.561582017 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline4_closure
.type GHC.IO.Handle.Types.$fReadNewline4_closure, @object
GHC.IO.Handle.Types.$fReadNewline4_closure:
	.quad	(,)_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewline6_closure
	.quad	GHC.IO.Handle.Types.$fReadNewline5_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.563327887 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline3_closure
.type GHC.IO.Handle.Types.$fReadNewline3_closure, @object
GHC.IO.Handle.Types.$fReadNewline3_closure:
	.quad	:_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewline4_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.565107914 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline_sps_closure
.type GHC.IO.Handle.Types.$fReadNewline_sps_closure, @object
GHC.IO.Handle.Types.$fReadNewline_sps_closure:
	.quad	:_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewline8_closure+1
	.quad	GHC.IO.Handle.Types.$fReadNewline3_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.567669949 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline2_closure
.type GHC.IO.Handle.Types.$fReadNewline2_closure, @object
GHC.IO.Handle.Types.$fReadNewline2_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewline2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.568387994 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewline2_entry
.type GHC.IO.Handle.Types.$fReadNewline2_entry, @object
GHC.IO.Handle.Types.$fReadNewline2_entry:
_c8cLe:
	movq %r14,%rsi
	movl $GHC.IO.Handle.Types.$fReadNewline_sps_closure+2,%r14d
	jmp GHC.Read.choose2_entry
	.size GHC.IO.Handle.Types.$fReadNewline2_entry, .-GHC.IO.Handle.Types.$fReadNewline2_entry


==================== Asm code ====================
2018-03-16 16:03:17.56897877 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline2_info
.type GHC.IO.Handle.Types.$fReadNewline2_info, @object
GHC.IO.Handle.Types.$fReadNewline2_info:
	.quad	GHC.IO.Handle.Types.$fReadNewline2_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S8alj_srt+144


==================== Asm code ====================
2018-03-16 16:03:17.571279117 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline1_closure
.type GHC.IO.Handle.Types.$fReadNewline1_closure, @object
GHC.IO.Handle.Types.$fReadNewline1_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewline1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.571970176 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewline1_entry
.type GHC.IO.Handle.Types.$fReadNewline1_entry, @object
GHC.IO.Handle.Types.$fReadNewline1_entry:
_c8cLp:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.IO.Handle.Types.$fReadNewline2_closure+1,%r14d
	jmp GHC.Read.list3_entry
	.size GHC.IO.Handle.Types.$fReadNewline1_entry, .-GHC.IO.Handle.Types.$fReadNewline1_entry


==================== Asm code ====================
2018-03-16 16:03:17.572529049 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline1_info
.type GHC.IO.Handle.Types.$fReadNewline1_info, @object
GHC.IO.Handle.Types.$fReadNewline1_info:
	.quad	GHC.IO.Handle.Types.$fReadNewline1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S8alj_srt+160


==================== Asm code ====================
2018-03-16 16:03:17.575651974 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_closure
.type GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_closure, @object
GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.576427024 UTC

.section .text
.align 8
sat_s8a8D_entry:
_c8cLE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cLF
_c8cLG:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%edi
	movq 16(%rbx),%rsi
	movl $GHC.IO.Handle.Types.$fReadNewline2_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.Read.list3_entry
_c8cLF:
	jmp *-16(%r13)
	.size sat_s8a8D_entry, .-sat_s8a8D_entry


==================== Asm code ====================
2018-03-16 16:03:17.577070098 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8a8D_info:
	.quad	sat_s8a8D_entry
	.quad	1
	.quad	12884901904
	.quad	S8alj_srt+160


==================== Asm code ====================
2018-03-16 16:03:17.578229425 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_entry
.type GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_entry, @object
GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_entry:
_c8cLH:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8cLL
_c8cLK:
	movq $sat_s8a8D_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	movl $Text.ParserCombinators.ReadP.run_closure+2,%ebx
	jmp stg_ap_p_fast
_c8cLL:
	movq $24,904(%r13)
	movl $GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_entry, .-GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 16:03:17.578850804 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_info
.type GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_info, @object
GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_info:
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_entry
	.quad	0
	.quad	30064771086
	.quad	4294967301
	.quad	S8alj_srt+160


==================== Asm code ====================
2018-03-16 16:03:17.581453127 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_closure
.type GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_closure, @object
GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.582321301 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_entry
.type GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_entry, @object
GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_entry:
_c8cM0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cM1
_c8cM2:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8cLZ
_c8cLY:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fReadNewline1_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Read.list_entry
_c8cM1:
	jmp *-16(%r13)
_c8cLZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_entry, .-GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_entry


==================== Asm code ====================
2018-03-16 16:03:17.583086968 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_info
.type GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_info, @object
GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_info:
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_entry
	.quad	0
	.quad	12884901909
	.quad	S8alj_srt+184


==================== Asm code ====================
2018-03-16 16:03:17.585734895 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline12_closure
.type GHC.IO.Handle.Types.$fReadNewline12_closure, @object
GHC.IO.Handle.Types.$fReadNewline12_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewline12_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.586541486 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewline12_entry
.type GHC.IO.Handle.Types.$fReadNewline12_entry, @object
GHC.IO.Handle.Types.$fReadNewline12_entry:
_c8cMg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cMh
_c8cMi:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8cMf
_c8cMe:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%esi
	movl $GHC.Read.$fRead()7_closure,%r14d
	movl $GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_closure,%ebx
	addq $-16,%rbp
	jmp stg_ap_pp_fast
_c8cMh:
	jmp *-16(%r13)
_c8cMf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewline12_entry, .-GHC.IO.Handle.Types.$fReadNewline12_entry


==================== Asm code ====================
2018-03-16 16:03:17.587269078 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline12_info
.type GHC.IO.Handle.Types.$fReadNewline12_info, @object
GHC.IO.Handle.Types.$fReadNewline12_info:
	.quad	GHC.IO.Handle.Types.$fReadNewline12_entry
	.quad	0
	.quad	4294967317
	.quad	S8alj_srt+200


==================== Asm code ====================
2018-03-16 16:03:17.59104458 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline_$creadList_closure
.type GHC.IO.Handle.Types.$fReadNewline_$creadList_closure, @object
GHC.IO.Handle.Types.$fReadNewline_$creadList_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.591665574 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewline_$creadList_entry
.type GHC.IO.Handle.Types.$fReadNewline_$creadList_entry, @object
GHC.IO.Handle.Types.$fReadNewline_$creadList_entry:
_c8cMu:
	movq %r14,%rsi
	movl $GHC.IO.Handle.Types.$fReadNewline12_closure,%r14d
	jmp Text.ParserCombinators.ReadP.run_entry
	.size GHC.IO.Handle.Types.$fReadNewline_$creadList_entry, .-GHC.IO.Handle.Types.$fReadNewline_$creadList_entry


==================== Asm code ====================
2018-03-16 16:03:17.592296562 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline_$creadList_info
.type GHC.IO.Handle.Types.$fReadNewline_$creadList_info, @object
GHC.IO.Handle.Types.$fReadNewline_$creadList_info:
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadList_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S8alj_srt+208


==================== Asm code ====================
2018-03-16 16:03:17.594664626 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline_closure
.type GHC.IO.Handle.Types.$fReadNewline_closure, @object
GHC.IO.Handle.Types.$fReadNewline_closure:
	.quad	GHC.Read.C:Read_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_closure+1
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadList_closure+1
	.quad	GHC.IO.Handle.Types.$fReadNewline1_closure+2
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.596452831 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode17_bytes
.type GHC.IO.Handle.Types.$fReadNewlineMode17_bytes, @object
GHC.IO.Handle.Types.$fReadNewlineMode17_bytes:
	.asciz "NewlineMode"


==================== Asm code ====================
2018-03-16 16:03:17.599089437 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode16_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode16_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode16_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode16_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.59995544 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode16_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode16_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode16_entry:
_c8cMJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cMK
_c8cML:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8cMI
_c8cMH:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fReadNewlineMode17_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8cMK:
	jmp *-16(%r13)
_c8cMI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewlineMode16_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode16_entry


==================== Asm code ====================
2018-03-16 16:03:17.600615716 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode16_info
.type GHC.IO.Handle.Types.$fReadNewlineMode16_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode16_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode16_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:17.602422118 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode_lexeme1_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode_lexeme1_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode_lexeme1_closure:
	.quad	Text.Read.Lex.Ident_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode16_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.604143838 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode15_bytes
.type GHC.IO.Handle.Types.$fReadNewlineMode15_bytes, @object
GHC.IO.Handle.Types.$fReadNewlineMode15_bytes:
	.asciz "{"


==================== Asm code ====================
2018-03-16 16:03:17.606930598 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode14_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode14_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode14_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode14_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.607828575 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode14_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode14_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode14_entry:
_c8cN1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cN2
_c8cN3:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8cN0
_c8cMZ:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fReadNewlineMode15_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8cN2:
	jmp *-16(%r13)
_c8cN0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewlineMode14_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode14_entry


==================== Asm code ====================
2018-03-16 16:03:17.608544821 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode14_info
.type GHC.IO.Handle.Types.$fReadNewlineMode14_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode14_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode14_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:17.610338931 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode_lexeme_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode_lexeme_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode_lexeme_closure:
	.quad	Text.Read.Lex.Punc_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode14_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.612031924 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode13_bytes
.type GHC.IO.Handle.Types.$fReadNewlineMode13_bytes, @object
GHC.IO.Handle.Types.$fReadNewlineMode13_bytes:
	.asciz "inputNL"


==================== Asm code ====================
2018-03-16 16:03:17.614810294 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode12_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode12_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode12_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode12_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.6157247 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode12_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode12_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode12_entry:
_c8cNj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cNk
_c8cNl:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8cNi
_c8cNh:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fReadNewlineMode13_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8cNk:
	jmp *-16(%r13)
_c8cNi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewlineMode12_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode12_entry


==================== Asm code ====================
2018-03-16 16:03:17.61644327 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode12_info
.type GHC.IO.Handle.Types.$fReadNewlineMode12_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode12_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode12_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:17.618772266 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode11_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode11_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode11_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode11_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.619482287 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode11_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode11_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode11_entry:
_c8cNx:
	movq %rsi,%rdi
	movl $Text.ParserCombinators.ReadPrec.minPrec_closure,%esi
	movl $GHC.IO.Handle.Types.$fReadNewline2_closure+1,%r14d
	jmp GHC.Read.list3_entry
	.size GHC.IO.Handle.Types.$fReadNewlineMode11_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode11_entry


==================== Asm code ====================
2018-03-16 16:03:17.620112775 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode11_info
.type GHC.IO.Handle.Types.$fReadNewlineMode11_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode11_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode11_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S8alj_srt+160


==================== Asm code ====================
2018-03-16 16:03:17.621989078 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode_n_closure
.type GHC.IO.Handle.Types.$fReadBufferMode_n_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode_n_closure:
	.quad	GHC.Types.I#_con_info
	.quad	11


==================== Asm code ====================
2018-03-16 16:03:17.623779061 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode10_bytes
.type GHC.IO.Handle.Types.$fReadNewlineMode10_bytes, @object
GHC.IO.Handle.Types.$fReadNewlineMode10_bytes:
	.asciz ","


==================== Asm code ====================
2018-03-16 16:03:17.627641203 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode9_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode9_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode9_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode9_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.628603192 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode9_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode9_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode9_entry:
_c8cNM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cNN
_c8cNO:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8cNL
_c8cNK:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fReadNewlineMode10_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8cNN:
	jmp *-16(%r13)
_c8cNL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewlineMode9_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode9_entry


==================== Asm code ====================
2018-03-16 16:03:17.629321854 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode9_info
.type GHC.IO.Handle.Types.$fReadNewlineMode9_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode9_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode9_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:17.631064126 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode8_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode8_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode8_closure:
	.quad	Text.Read.Lex.Punc_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode9_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.63275693 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode7_bytes
.type GHC.IO.Handle.Types.$fReadNewlineMode7_bytes, @object
GHC.IO.Handle.Types.$fReadNewlineMode7_bytes:
	.asciz "outputNL"


==================== Asm code ====================
2018-03-16 16:03:17.635404007 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode6_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode6_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode6_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.636356827 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode6_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode6_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode6_entry:
_c8cO4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cO5
_c8cO6:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8cO3
_c8cO2:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fReadNewlineMode7_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8cO5:
	jmp *-16(%r13)
_c8cO3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewlineMode6_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode6_entry


==================== Asm code ====================
2018-03-16 16:03:17.637020937 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode6_info
.type GHC.IO.Handle.Types.$fReadNewlineMode6_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode6_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:17.639880703 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode4_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode4_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode4_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.640723145 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode4_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode4_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode4_entry:
_c8cOk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cOl
_c8cOm:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8cOj
_c8cOi:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fReadNewlineMode5_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8cOl:
	jmp *-16(%r13)
_c8cOj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewlineMode4_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode4_entry


==================== Asm code ====================
2018-03-16 16:03:17.641467167 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode4_info
.type GHC.IO.Handle.Types.$fReadNewlineMode4_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode4_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:17.643235587 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode3_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode3_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode3_closure:
	.quad	Text.Read.Lex.Punc_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode4_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.653148973 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$creadPrec_closure
.type GHC.IO.Handle.Types.$w$creadPrec_closure, @object
GHC.IO.Handle.Types.$w$creadPrec_closure:
	.quad	GHC.IO.Handle.Types.$w$creadPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.654063153 UTC

.section .text
.align 8
sat_s8a8Q_entry:
_c8cP8:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8cPc
_c8cPb:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq $GHC.IO.Handle.Types.NewlineMode_con_info,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%r14
	movq %rax,%rbx
	jmp stg_ap_p_fast
_c8cPc:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_s8a8Q_entry, .-sat_s8a8Q_entry


==================== Asm code ====================
2018-03-16 16:03:17.654733385 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8a8Q_info:
	.quad	sat_s8a8Q_entry
	.quad	3
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:17.655563484 UTC

.section .text
.align 8
sat_s8a8T_entry:
_c8cPg:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cPh
_c8cPi:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8cPk
_c8cPj:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s8a8Q_info,-24(%r12)
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq $block_c8cPd_info,-8(%rbp)
	leaq -23(%r12),%rsi
	movl $GHC.IO.Handle.Types.$fReadNewlineMode3_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_c8cPk:
	movq $32,904(%r13)
_c8cPh:
	jmp *-8(%r13)
	.size sat_s8a8T_entry, .-sat_s8a8T_entry


==================== Asm code ====================
2018-03-16 16:03:17.656283469 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8a8T_info:
	.quad	sat_s8a8T_entry
	.quad	2
	.quad	12884901899
	.quad	4294967301
	.quad	S8alj_srt+216


==================== Asm code ====================
2018-03-16 16:03:17.656975567 UTC

.section .text
.align 8
_c8cPd:
_c8cPd:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8cPn
_c8cPm:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8cPn:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8cPd, .-_c8cPd


==================== Asm code ====================
2018-03-16 16:03:17.657653281 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cPd_info:
	.quad	_c8cPd
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.65843603 UTC

.section .text
.align 8
sat_s8a8U_entry:
_c8cPo:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8cPs
_c8cPr:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s8a8T_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%r8
	movl $GHC.IO.Handle.Types.$fReadBufferMode_n_closure+1,%edi
	movl $GHC.IO.Handle.Types.$fReadNewlineMode11_closure+2,%esi
	movl $GHC.IO.Handle.Types.$fReadNewlineMode6_closure,%r14d
	jmp GHC.Read.readField_entry
_c8cPs:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_s8a8U_entry, .-sat_s8a8U_entry


==================== Asm code ====================
2018-03-16 16:03:17.659138372 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8a8U_info:
	.quad	sat_s8a8U_entry
	.quad	2
	.quad	133143986187
	.quad	4294967301
	.quad	S8alj_srt+216


==================== Asm code ====================
2018-03-16 16:03:17.659927925 UTC

.section .text
.align 8
sat_s8a8X_entry:
_c8cPw:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cPx
_c8cPy:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8cPA
_c8cPz:
	movq 7(%rbx),%rax
	movq $sat_s8a8U_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	movq $block_c8cPt_info,-8(%rbp)
	leaq -15(%r12),%rsi
	movl $GHC.IO.Handle.Types.$fReadNewlineMode8_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_c8cPA:
	movq $24,904(%r13)
_c8cPx:
	jmp *-8(%r13)
	.size sat_s8a8X_entry, .-sat_s8a8X_entry


==================== Asm code ====================
2018-03-16 16:03:17.660682511 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8a8X_info:
	.quad	sat_s8a8X_entry
	.quad	1
	.quad	270582939657
	.quad	4294967301
	.quad	S8alj_srt+216


==================== Asm code ====================
2018-03-16 16:03:17.661711129 UTC

.section .text
.align 8
_c8cPt:
_c8cPt:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8cPD
_c8cPC:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8cPD:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8cPt, .-_c8cPt


==================== Asm code ====================
2018-03-16 16:03:17.662358654 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cPt_info:
	.quad	_c8cPt
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.663099983 UTC

.section .text
.align 8
sat_s8a8Y_entry:
_c8cPE:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8cPI
_c8cPH:
	movq 7(%rbx),%rax
	movq $sat_s8a8X_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%r8
	movl $GHC.IO.Handle.Types.$fReadBufferMode_n_closure+1,%edi
	movl $GHC.IO.Handle.Types.$fReadNewlineMode11_closure+2,%esi
	movl $GHC.IO.Handle.Types.$fReadNewlineMode12_closure,%r14d
	jmp GHC.Read.readField_entry
_c8cPI:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_s8a8Y_entry, .-sat_s8a8Y_entry


==================== Asm code ====================
2018-03-16 16:03:17.663796331 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8a8Y_info:
	.quad	sat_s8a8Y_entry
	.quad	1
	.quad	545460846601
	.quad	4294967301
	.quad	S8alj_srt+216


==================== Asm code ====================
2018-03-16 16:03:17.664548017 UTC

.section .text
.align 8
sat_s8a91_entry:
_c8cPM:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cPN
_c8cPO:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8cPQ
_c8cPP:
	movq 7(%rbx),%rax
	movq $sat_s8a8Y_info,-8(%r12)
	movq %rax,(%r12)
	movq $block_c8cPJ_info,-8(%rbp)
	leaq -7(%r12),%rsi
	movl $GHC.IO.Handle.Types.$fReadNewlineMode_lexeme_closure+3,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_c8cPQ:
	movq $16,904(%r13)
_c8cPN:
	jmp *-8(%r13)
	.size sat_s8a91_entry, .-sat_s8a91_entry


==================== Asm code ====================
2018-03-16 16:03:17.665229141 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8a91_info:
	.quad	sat_s8a91_entry
	.quad	1
	.quad	1095216660489
	.quad	4294967301
	.quad	S8alj_srt+216


==================== Asm code ====================
2018-03-16 16:03:17.666568273 UTC

.section .text
.align 8
_c8cPJ:
_c8cPJ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8cPT
_c8cPS:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8cPT:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8cPJ, .-_c8cPJ


==================== Asm code ====================
2018-03-16 16:03:17.66723739 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cPJ_info:
	.quad	_c8cPJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.668115727 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$w$creadPrec_entry
.type GHC.IO.Handle.Types.$w$creadPrec_entry, @object
GHC.IO.Handle.Types.$w$creadPrec_entry:
_c8cPX:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cPY
_c8cPZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8cQ1
_c8cQ0:
	cmpq $11,%r14
	jg _c8cPV
_c8cPW:
	movq $sat_s8a91_info,-8(%r12)
	movq %rsi,(%r12)
	movq $block_c8cQ2_info,-8(%rbp)
	leaq -7(%r12),%rsi
	movl $GHC.IO.Handle.Types.$fReadNewlineMode_lexeme1_closure+4,%r14d
	addq $-8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_c8cQ1:
	movq $16,904(%r13)
_c8cPY:
	movl $GHC.IO.Handle.Types.$w$creadPrec_closure,%ebx
	jmp *-8(%r13)
_c8cPV:
	addq $-16,%r12
	movl $Text.ParserCombinators.ReadP.Fail_closure+3,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$w$creadPrec_entry, .-GHC.IO.Handle.Types.$w$creadPrec_entry


==================== Asm code ====================
2018-03-16 16:03:17.66885371 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$creadPrec_info
.type GHC.IO.Handle.Types.$w$creadPrec_info, @object
GHC.IO.Handle.Types.$w$creadPrec_info:
	.quad	GHC.IO.Handle.Types.$w$creadPrec_entry
	.quad	0
	.quad	4393751543822
	.quad	8589934605
	.quad	S8alj_srt+216


==================== Asm code ====================
2018-03-16 16:03:17.669575983 UTC

.section .text
.align 8
_c8cQ2:
_c8cQ2:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8cQ7
_c8cQ6:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8cQ7:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8cQ2, .-_c8cQ2


==================== Asm code ====================
2018-03-16 16:03:17.670239043 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cQ2_info:
	.quad	_c8cQ2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.67328594 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode2_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode2_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode2_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.674060872 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode2_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode2_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode2_entry:
_c8cQW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cQX
_c8cQY:
	movq $block_c8cQT_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8cQT
_c8cQU:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cQX:
	movl $GHC.IO.Handle.Types.$fReadNewlineMode2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fReadNewlineMode2_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode2_entry


==================== Asm code ====================
2018-03-16 16:03:17.674737066 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode2_info
.type GHC.IO.Handle.Types.$fReadNewlineMode2_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode2_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode2_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S8alj_srt+280


==================== Asm code ====================
2018-03-16 16:03:17.675407073 UTC

.section .text
.align 8
_c8cQT:
_c8cQT:
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.Types.$w$creadPrec_entry
	.size _c8cQT, .-_c8cQT


==================== Asm code ====================
2018-03-16 16:03:17.67608716 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cQT_info:
	.quad	_c8cQT
	.quad	1
	.quad	4294967326
	.quad	S8alj_srt+280


==================== Asm code ====================
2018-03-16 16:03:17.678296386 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode1_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode1_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode1_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.678966901 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode1_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode1_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode1_entry:
_c8cRg:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.IO.Handle.Types.$fReadNewlineMode2_closure+2,%r14d
	jmp GHC.Read.list3_entry
	.size GHC.IO.Handle.Types.$fReadNewlineMode1_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode1_entry


==================== Asm code ====================
2018-03-16 16:03:17.679552225 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode1_info
.type GHC.IO.Handle.Types.$fReadNewlineMode1_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode1_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode1_entry
	.quad	0
	.quad	562954248388622
	.quad	8589934607
	.quad	S8alj_srt+160


==================== Asm code ====================
2018-03-16 16:03:17.682873056 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.683576903 UTC

.section .text
.align 8
sat_s8a99_entry:
_c8cRv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cRw
_c8cRx:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%edi
	movq 16(%rbx),%rsi
	movl $GHC.IO.Handle.Types.$fReadNewlineMode2_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Read.list3_entry
_c8cRw:
	jmp *-16(%r13)
	.size sat_s8a99_entry, .-sat_s8a99_entry


==================== Asm code ====================
2018-03-16 16:03:17.684260399 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8a99_info:
	.quad	sat_s8a99_entry
	.quad	1
	.quad	562954248388624
	.quad	S8alj_srt+160


==================== Asm code ====================
2018-03-16 16:03:17.684968653 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_entry:
_c8cRy:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8cRC
_c8cRB:
	movq $sat_s8a99_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	movl $Text.ParserCombinators.ReadP.run_closure+2,%ebx
	jmp stg_ap_p_fast
_c8cRC:
	movq $24,904(%r13)
	movl $GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 16:03:17.685705205 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_info
.type GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_entry
	.quad	0
	.quad	1688854155231246
	.quad	4294967301
	.quad	S8alj_srt+160


==================== Asm code ====================
2018-03-16 16:03:17.68824259 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.68909559 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_entry:
_c8cRR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cRS
_c8cRT:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8cRQ
_c8cRP:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fReadNewlineMode1_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Read.list_entry
_c8cRS:
	jmp *-16(%r13)
_c8cRQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_entry


==================== Asm code ====================
2018-03-16 16:03:17.689828002 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_info
.type GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_entry
	.quad	0
	.quad	281479271677973
	.quad	S8alj_srt+184


==================== Asm code ====================
2018-03-16 16:03:17.69244936 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode18_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode18_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode18_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode18_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.693781417 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode18_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode18_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode18_entry:
_c8cS7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cS8
_c8cS9:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8cS6
_c8cS5:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%esi
	movl $GHC.Read.$fRead()7_closure,%r14d
	movl $GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_closure,%ebx
	addq $-16,%rbp
	jmp stg_ap_pp_fast
_c8cS8:
	jmp *-16(%r13)
_c8cS6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewlineMode18_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode18_entry


==================== Asm code ====================
2018-03-16 16:03:17.694513897 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode18_info
.type GHC.IO.Handle.Types.$fReadNewlineMode18_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode18_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode18_entry
	.quad	0
	.quad	4294967317
	.quad	S8alj_srt+320


==================== Asm code ====================
2018-03-16 16:03:17.696736423 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.697402827 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_entry:
_c8cSl:
	movq %r14,%rsi
	movl $GHC.IO.Handle.Types.$fReadNewlineMode18_closure,%r14d
	jmp Text.ParserCombinators.ReadP.run_entry
	.size GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_entry


==================== Asm code ====================
2018-03-16 16:03:17.698062695 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_info
.type GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S8alj_srt+328


==================== Asm code ====================
2018-03-16 16:03:17.699939165 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode_closure:
	.quad	GHC.Read.C:Read_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_closure+1
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_closure+1
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode1_closure+2
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.704728456 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$c<_closure
.type GHC.IO.Handle.Types.$fOrdNewline_$c<_closure, @object
GHC.IO.Handle.Types.$fOrdNewline_$c<_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c<_info


==================== Asm code ====================
2018-03-16 16:03:17.705548496 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewline_$c<_entry
.type GHC.IO.Handle.Types.$fOrdNewline_$c<_entry, @object
GHC.IO.Handle.Types.$fOrdNewline_$c<_entry:
_c8cSE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cSF
_c8cSG:
	movq $block_c8cSx_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8cSx
_c8cSy:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cSF:
	movl $GHC.IO.Handle.Types.$fOrdNewline_$c<_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewline_$c<_entry, .-GHC.IO.Handle.Types.$fOrdNewline_$c<_entry


==================== Asm code ====================
2018-03-16 16:03:17.706224582 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$c<_info
.type GHC.IO.Handle.Types.$fOrdNewline_$c<_info, @object
GHC.IO.Handle.Types.$fOrdNewline_$c<_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c<_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.70704161 UTC

.section .text
.align 8
_c8cSx:
_c8cSx:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8cSB
_c8cSC:
	movq $block_c8cSY_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8cSY
_c8cT0:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cSB:
	movq $block_c8cSJ_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8cSJ
_c8cSL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8cSx, .-_c8cSx


==================== Asm code ====================
2018-03-16 16:03:17.707701732 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cSx_info:
	.quad	_c8cSx
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.70839492 UTC

.section .text
.align 8
_c8cSJ:
_c8cSJ:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8cSR
_c8cSV:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8cSR:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8cSJ, .-_c8cSJ


==================== Asm code ====================
2018-03-16 16:03:17.708998461 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cSJ_info:
	.quad	_c8cSJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.709653216 UTC

.section .text
.align 8
_c8cSY:
_c8cSY:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8cSY, .-_c8cSY


==================== Asm code ====================
2018-03-16 16:03:17.710217256 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cSY_info:
	.quad	_c8cSY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.714487994 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$ccompare_closure
.type GHC.IO.Handle.Types.$fOrdNewline_$ccompare_closure, @object
GHC.IO.Handle.Types.$fOrdNewline_$ccompare_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$ccompare_info


==================== Asm code ====================
2018-03-16 16:03:17.71525504 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewline_$ccompare_entry
.type GHC.IO.Handle.Types.$fOrdNewline_$ccompare_entry, @object
GHC.IO.Handle.Types.$fOrdNewline_$ccompare_entry:
_c8cTI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cTJ
_c8cTK:
	movq $block_c8cTB_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8cTB
_c8cTC:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cTJ:
	movl $GHC.IO.Handle.Types.$fOrdNewline_$ccompare_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewline_$ccompare_entry, .-GHC.IO.Handle.Types.$fOrdNewline_$ccompare_entry


==================== Asm code ====================
2018-03-16 16:03:17.715890576 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$ccompare_info
.type GHC.IO.Handle.Types.$fOrdNewline_$ccompare_info, @object
GHC.IO.Handle.Types.$fOrdNewline_$ccompare_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$ccompare_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.716674098 UTC

.section .text
.align 8
_c8cTB:
_c8cTB:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8cTF
_c8cTG:
	movq $block_c8cU2_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8cU2
_c8cU4:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cTF:
	movq $block_c8cTN_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8cTN
_c8cTP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8cTB, .-_c8cTB


==================== Asm code ====================
2018-03-16 16:03:17.717359311 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cTB_info:
	.quad	_c8cTB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.718111297 UTC

.section .text
.align 8
_c8cTN:
_c8cTN:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8cUi
_c8cTZ:
	movl $GHC.Types.LT_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u8cUi:
	addq $8,%rbp
	jmp _c8cUe
	.size _c8cTN, .-_c8cTN


==================== Asm code ====================
2018-03-16 16:03:17.718744822 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cTN_info:
	.quad	_c8cTN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.719464258 UTC

.section .text
.align 8
_c8cU2:
_c8cU2:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8cUa
_u8cUh:
	addq $8,%rbp
	jmp _c8cUe
_c8cUa:
	movl $GHC.Types.GT_closure+3,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8cU2, .-_c8cU2


==================== Asm code ====================
2018-03-16 16:03:17.72009784 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cU2_info:
	.quad	_c8cU2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.720725469 UTC

.section .text
.align 8
_c8cUe:
_c8cUe:
	movl $GHC.Types.EQ_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8cUe, .-_c8cUe


==================== Asm code ====================
2018-03-16 16:03:17.725134574 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqNewline_$c==_closure
.type GHC.IO.Handle.Types.$fEqNewline_$c==_closure, @object
GHC.IO.Handle.Types.$fEqNewline_$c==_closure:
	.quad	GHC.IO.Handle.Types.$fEqNewline_$c==_info


==================== Asm code ====================
2018-03-16 16:03:17.726348862 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fEqNewline_$c==_entry
.type GHC.IO.Handle.Types.$fEqNewline_$c==_entry, @object
GHC.IO.Handle.Types.$fEqNewline_$c==_entry:
_c8cV1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cV2
_c8cV3:
	movq $block_c8cUU_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8cUU
_c8cUV:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cV2:
	movl $GHC.IO.Handle.Types.$fEqNewline_$c==_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fEqNewline_$c==_entry, .-GHC.IO.Handle.Types.$fEqNewline_$c==_entry


==================== Asm code ====================
2018-03-16 16:03:17.72703052 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqNewline_$c==_info
.type GHC.IO.Handle.Types.$fEqNewline_$c==_info, @object
GHC.IO.Handle.Types.$fEqNewline_$c==_info:
	.quad	GHC.IO.Handle.Types.$fEqNewline_$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.727803685 UTC

.section .text
.align 8
_c8cUU:
_c8cUU:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8cUY
_c8cUZ:
	movq $block_c8cVl_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8cVl
_c8cVn:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cUY:
	movq $block_c8cV6_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8cV6
_c8cV8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8cUU, .-_c8cUU


==================== Asm code ====================
2018-03-16 16:03:17.728455939 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cUU_info:
	.quad	_c8cUU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.729141412 UTC

.section .text
.align 8
_c8cV6:
_c8cV6:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8cVC
_u8cVD:
	addq $8,%rbp
	jmp _c8cVt
_u8cVC:
	addq $8,%rbp
	jmp _c8cVx
	.size _c8cV6, .-_c8cV6


==================== Asm code ====================
2018-03-16 16:03:17.729765246 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cV6_info:
	.quad	_c8cV6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.730476708 UTC

.section .text
.align 8
_c8cVl:
_c8cVl:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8cVA
_u8cVB:
	addq $8,%rbp
	jmp _c8cVx
_u8cVA:
	addq $8,%rbp
	jmp _c8cVt
	.size _c8cVl, .-_c8cVl


==================== Asm code ====================
2018-03-16 16:03:17.731109638 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cVl_info:
	.quad	_c8cVl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.73178482 UTC

.section .text
.align 8
_c8cVt:
_c8cVt:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8cVt, .-_c8cVt


==================== Asm code ====================
2018-03-16 16:03:17.732450232 UTC

.section .text
.align 8
_c8cVx:
_c8cVx:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8cVx, .-_c8cVx


==================== Asm code ====================
2018-03-16 16:03:17.736813571 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqNewline_$c/=_closure
.type GHC.IO.Handle.Types.$fEqNewline_$c/=_closure, @object
GHC.IO.Handle.Types.$fEqNewline_$c/=_closure:
	.quad	GHC.IO.Handle.Types.$fEqNewline_$c/=_info


==================== Asm code ====================
2018-03-16 16:03:17.737632336 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fEqNewline_$c/=_entry
.type GHC.IO.Handle.Types.$fEqNewline_$c/=_entry, @object
GHC.IO.Handle.Types.$fEqNewline_$c/=_entry:
_c8cWp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cWq
_c8cWr:
	movq $block_c8cWi_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8cWi
_c8cWj:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cWq:
	movl $GHC.IO.Handle.Types.$fEqNewline_$c/=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fEqNewline_$c/=_entry, .-GHC.IO.Handle.Types.$fEqNewline_$c/=_entry


==================== Asm code ====================
2018-03-16 16:03:17.738324029 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqNewline_$c/=_info
.type GHC.IO.Handle.Types.$fEqNewline_$c/=_info, @object
GHC.IO.Handle.Types.$fEqNewline_$c/=_info:
	.quad	GHC.IO.Handle.Types.$fEqNewline_$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.739152585 UTC

.section .text
.align 8
_c8cWi:
_c8cWi:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8cWm
_c8cWn:
	movq $block_c8cWJ_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8cWJ
_c8cWL:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cWm:
	movq $block_c8cWu_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8cWu
_c8cWw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8cWi, .-_c8cWi


==================== Asm code ====================
2018-03-16 16:03:17.739812144 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cWi_info:
	.quad	_c8cWi
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.741007566 UTC

.section .text
.align 8
_c8cWu:
_c8cWu:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8cX0
_u8cX1:
	addq $8,%rbp
	jmp _c8cWR
_u8cX0:
	addq $8,%rbp
	jmp _c8cWV
	.size _c8cWu, .-_c8cWu


==================== Asm code ====================
2018-03-16 16:03:17.742166684 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cWu_info:
	.quad	_c8cWu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.742868495 UTC

.section .text
.align 8
_c8cWJ:
_c8cWJ:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8cWY
_u8cWZ:
	addq $8,%rbp
	jmp _c8cWV
_u8cWY:
	addq $8,%rbp
	jmp _c8cWR
	.size _c8cWJ, .-_c8cWJ


==================== Asm code ====================
2018-03-16 16:03:17.743450964 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cWJ_info:
	.quad	_c8cWJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.744088655 UTC

.section .text
.align 8
_c8cWR:
_c8cWR:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8cWR, .-_c8cWR


==================== Asm code ====================
2018-03-16 16:03:17.744788867 UTC

.section .text
.align 8
_c8cWV:
_c8cWV:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8cWV, .-_c8cWV


==================== Asm code ====================
2018-03-16 16:03:17.746551521 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqNewline_closure
.type GHC.IO.Handle.Types.$fEqNewline_closure, @object
GHC.IO.Handle.Types.$fEqNewline_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.IO.Handle.Types.$fEqNewline_$c==_closure+2
	.quad	GHC.IO.Handle.Types.$fEqNewline_$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:17.750521926 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$c<=_closure
.type GHC.IO.Handle.Types.$fOrdNewline_$c<=_closure, @object
GHC.IO.Handle.Types.$fOrdNewline_$c<=_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c<=_info


==================== Asm code ====================
2018-03-16 16:03:17.751257831 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewline_$c<=_entry
.type GHC.IO.Handle.Types.$fOrdNewline_$c<=_entry, @object
GHC.IO.Handle.Types.$fOrdNewline_$c<=_entry:
_c8cXO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cXP
_c8cXQ:
	movq $block_c8cXH_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8cXH
_c8cXI:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cXP:
	movl $GHC.IO.Handle.Types.$fOrdNewline_$c<=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewline_$c<=_entry, .-GHC.IO.Handle.Types.$fOrdNewline_$c<=_entry


==================== Asm code ====================
2018-03-16 16:03:17.75191612 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$c<=_info
.type GHC.IO.Handle.Types.$fOrdNewline_$c<=_info, @object
GHC.IO.Handle.Types.$fOrdNewline_$c<=_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c<=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.752696134 UTC

.section .text
.align 8
_c8cXH:
_c8cXH:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8cXL
_c8cXM:
	movq $block_c8cY8_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8cY8
_c8cYa:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cXL:
	movq $block_c8cXT_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8cXT
_c8cXV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8cXH, .-_c8cXH


==================== Asm code ====================
2018-03-16 16:03:17.753809321 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cXH_info:
	.quad	_c8cXH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.754535696 UTC

.section .text
.align 8
_c8cXT:
_c8cXT:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8cY1
_c8cY5:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8cY1:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8cXT, .-_c8cXT


==================== Asm code ====================
2018-03-16 16:03:17.755175047 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cXT_info:
	.quad	_c8cXT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.755815895 UTC

.section .text
.align 8
_c8cY8:
_c8cY8:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8cY8, .-_c8cY8


==================== Asm code ====================
2018-03-16 16:03:17.756390055 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cY8_info:
	.quad	_c8cY8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.759821709 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$cmax_closure
.type GHC.IO.Handle.Types.$fOrdNewline_$cmax_closure, @object
GHC.IO.Handle.Types.$fOrdNewline_$cmax_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$cmax_info


==================== Asm code ====================
2018-03-16 16:03:17.760586469 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewline_$cmax_entry
.type GHC.IO.Handle.Types.$fOrdNewline_$cmax_entry, @object
GHC.IO.Handle.Types.$fOrdNewline_$cmax_entry:
_c8cYS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cYT
_c8cYU:
	movq $block_c8cYL_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8cYL
_c8cYM:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cYT:
	movl $GHC.IO.Handle.Types.$fOrdNewline_$cmax_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewline_$cmax_entry, .-GHC.IO.Handle.Types.$fOrdNewline_$cmax_entry


==================== Asm code ====================
2018-03-16 16:03:17.761304996 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$cmax_info
.type GHC.IO.Handle.Types.$fOrdNewline_$cmax_info, @object
GHC.IO.Handle.Types.$fOrdNewline_$cmax_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.762098211 UTC

.section .text
.align 8
_c8cYL:
_c8cYL:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8cYP
_c8cYQ:
	movq $block_c8cZ0_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8cZ0
_c8cZ2:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cYP:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8cYL, .-_c8cYL


==================== Asm code ====================
2018-03-16 16:03:17.762752597 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cYL_info:
	.quad	_c8cYL
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.763413064 UTC

.section .text
.align 8
_c8cZ0:
_c8cZ0:
	movl $GHC.IO.Handle.Types.CRLF_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8cZ0, .-_c8cZ0


==================== Asm code ====================
2018-03-16 16:03:17.763952424 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cZ0_info:
	.quad	_c8cZ0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.768076882 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$c>=_closure
.type GHC.IO.Handle.Types.$fOrdNewline_$c>=_closure, @object
GHC.IO.Handle.Types.$fOrdNewline_$c>=_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c>=_info


==================== Asm code ====================
2018-03-16 16:03:17.768857178 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewline_$c>=_entry
.type GHC.IO.Handle.Types.$fOrdNewline_$c>=_entry, @object
GHC.IO.Handle.Types.$fOrdNewline_$c>=_entry:
_c8cZC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8cZD
_c8cZE:
	movq $block_c8cZv_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8cZv
_c8cZw:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cZD:
	movl $GHC.IO.Handle.Types.$fOrdNewline_$c>=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewline_$c>=_entry, .-GHC.IO.Handle.Types.$fOrdNewline_$c>=_entry


==================== Asm code ====================
2018-03-16 16:03:17.769576142 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$c>=_info
.type GHC.IO.Handle.Types.$fOrdNewline_$c>=_info, @object
GHC.IO.Handle.Types.$fOrdNewline_$c>=_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c>=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.770352723 UTC

.section .text
.align 8
_c8cZv:
_c8cZv:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8cZz
_c8cZA:
	movq $block_c8cZW_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8cZW
_c8cZY:
	movq (%rbx),%rax
	jmp *(%rax)
_c8cZz:
	movq $block_c8cZH_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8cZH
_c8cZJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8cZv, .-_c8cZv


==================== Asm code ====================
2018-03-16 16:03:17.771050048 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cZv_info:
	.quad	_c8cZv
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.771751627 UTC

.section .text
.align 8
_c8cZH:
_c8cZH:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8cZP
_c8cZT:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8cZP:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8cZH, .-_c8cZH


==================== Asm code ====================
2018-03-16 16:03:17.772395817 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cZH_info:
	.quad	_c8cZH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.773051275 UTC

.section .text
.align 8
_c8cZW:
_c8cZW:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8cZW, .-_c8cZW


==================== Asm code ====================
2018-03-16 16:03:17.773648456 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8cZW_info:
	.quad	_c8cZW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.776321294 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$c>_closure
.type GHC.IO.Handle.Types.$fOrdNewline_$c>_closure, @object
GHC.IO.Handle.Types.$fOrdNewline_$c>_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c>_info


==================== Asm code ====================
2018-03-16 16:03:17.777012891 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewline_$c>_entry
.type GHC.IO.Handle.Types.$fOrdNewline_$c>_entry, @object
GHC.IO.Handle.Types.$fOrdNewline_$c>_entry:
_c8d0z:
	movq %rsi,%rax
	movq %r14,%rsi
	movq %rax,%r14
	jmp GHC.IO.Handle.Types.$fOrdNewline_$c<_entry
	.size GHC.IO.Handle.Types.$fOrdNewline_$c>_entry, .-GHC.IO.Handle.Types.$fOrdNewline_$c>_entry


==================== Asm code ====================
2018-03-16 16:03:17.777937133 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$c>_info
.type GHC.IO.Handle.Types.$fOrdNewline_$c>_info, @object
GHC.IO.Handle.Types.$fOrdNewline_$c>_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.781299285 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$cmin_closure
.type GHC.IO.Handle.Types.$fOrdNewline_$cmin_closure, @object
GHC.IO.Handle.Types.$fOrdNewline_$cmin_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$cmin_info


==================== Asm code ====================
2018-03-16 16:03:17.782030657 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewline_$cmin_entry
.type GHC.IO.Handle.Types.$fOrdNewline_$cmin_entry, @object
GHC.IO.Handle.Types.$fOrdNewline_$cmin_entry:
_c8d0R:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8d0S
_c8d0T:
	movq $block_c8d0K_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8d0K
_c8d0L:
	movq (%rbx),%rax
	jmp *(%rax)
_c8d0S:
	movl $GHC.IO.Handle.Types.$fOrdNewline_$cmin_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewline_$cmin_entry, .-GHC.IO.Handle.Types.$fOrdNewline_$cmin_entry


==================== Asm code ====================
2018-03-16 16:03:17.782744806 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$cmin_info
.type GHC.IO.Handle.Types.$fOrdNewline_$cmin_info, @object
GHC.IO.Handle.Types.$fOrdNewline_$cmin_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.78350554 UTC

.section .text
.align 8
_c8d0K:
_c8d0K:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8d0O
_c8d0P:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8d0O:
	movq $block_c8d0W_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8d0W
_c8d0Y:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8d0K, .-_c8d0K


==================== Asm code ====================
2018-03-16 16:03:17.784133485 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d0K_info:
	.quad	_c8d0K
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.784782181 UTC

.section .text
.align 8
_c8d0W:
_c8d0W:
	movl $GHC.IO.Handle.Types.LF_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8d0W, .-_c8d0W


==================== Asm code ====================
2018-03-16 16:03:17.7854265 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d0W_info:
	.quad	_c8d0W
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.787282202 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_closure
.type GHC.IO.Handle.Types.$fOrdNewline_closure, @object
GHC.IO.Handle.Types.$fOrdNewline_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.IO.Handle.Types.$fEqNewline_closure+1
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$ccompare_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c<_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c<=_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c>_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c>=_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$cmax_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:17.792093822 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$ccompare_closure
.type GHC.IO.Handle.Types.$w$ccompare_closure, @object
GHC.IO.Handle.Types.$w$ccompare_closure:
	.quad	GHC.IO.Handle.Types.$w$ccompare_info


==================== Asm code ====================
2018-03-16 16:03:17.792913271 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$w$ccompare_entry
.type GHC.IO.Handle.Types.$w$ccompare_entry, @object
GHC.IO.Handle.Types.$w$ccompare_entry:
_c8d1C:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8d1D
_c8d1E:
	movq $block_c8d1v_info,-32(%rbp)
	movq %r14,%rbx
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c8d1v
_c8d1w:
	movq (%rbx),%rax
	jmp *(%rax)
_c8d1D:
	movl $GHC.IO.Handle.Types.$w$ccompare_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$w$ccompare_entry, .-GHC.IO.Handle.Types.$w$ccompare_entry


==================== Asm code ====================
2018-03-16 16:03:17.79369061 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$ccompare_info
.type GHC.IO.Handle.Types.$w$ccompare_info, @object
GHC.IO.Handle.Types.$w$ccompare_info:
	.quad	GHC.IO.Handle.Types.$w$ccompare_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:03:17.79447981 UTC

.section .text
.align 8
_c8d1v:
_c8d1v:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8d1z
_c8d1A:
	movq $block_c8d1W_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8d1W
_c8d1Y:
	movq (%rbx),%rax
	jmp *(%rax)
_c8d1z:
	movq $block_c8d1H_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8d1H
_c8d1J:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8d1v, .-_c8d1v


==================== Asm code ====================
2018-03-16 16:03:17.79516154 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d1v_info:
	.quad	_c8d1v
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.795835538 UTC

.section .text
.align 8
_c8d1H:
_c8d1H:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8d2c
_c8d1T:
	movl $GHC.Types.LT_closure+1,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u8d2c:
	addq $8,%rbp
	jmp _c8d28
	.size _c8d1H, .-_c8d1H


==================== Asm code ====================
2018-03-16 16:03:17.796447367 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d1H_info:
	.quad	_c8d1H
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.797148376 UTC

.section .text
.align 8
_c8d1W:
_c8d1W:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8d24
_u8d2b:
	addq $8,%rbp
	jmp _c8d28
_c8d24:
	movl $GHC.Types.GT_closure+3,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8d1W, .-_c8d1W


==================== Asm code ====================
2018-03-16 16:03:17.797762366 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d1W_info:
	.quad	_c8d1W
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.798392644 UTC

.section .text
.align 8
_c8d28:
_c8d28:
	movq 16(%rbp),%rsi
	movq (%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Types.$fOrdNewline_$ccompare_entry
	.size _c8d28, .-_c8d28


==================== Asm code ====================
2018-03-16 16:03:17.802187057 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_closure
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_closure, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_info


==================== Asm code ====================
2018-03-16 16:03:17.802926635 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_entry
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_entry, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_entry:
_c8d2Q:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8d2U
_c8d2V:
	movq $block_c8d2N_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8d2N
_c8d2O:
	movq (%rbx),%rax
	jmp *(%rax)
_c8d2U:
	movl $GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_entry, .-GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_entry


==================== Asm code ====================
2018-03-16 16:03:17.803592362 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_info
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_info, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.804327112 UTC

.section .text
.align 8
_c8d2N:
_c8d2N:
	movq $block_c8d2T_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8d2T
_c8d2X:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8d2N, .-_c8d2N


==================== Asm code ====================
2018-03-16 16:03:17.804974379 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d2N_info:
	.quad	_c8d2N
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.805670636 UTC

.section .text
.align 8
_c8d2T:
_c8d2T:
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Types.$w$ccompare_entry
	.size _c8d2T, .-_c8d2T


==================== Asm code ====================
2018-03-16 16:03:17.80629662 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d2T_info:
	.quad	_c8d2T
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.810717766 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$c<_closure
.type GHC.IO.Handle.Types.$w$c<_closure, @object
GHC.IO.Handle.Types.$w$c<_closure:
	.quad	GHC.IO.Handle.Types.$w$c<_info


==================== Asm code ====================
2018-03-16 16:03:17.811521677 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$w$c<_entry
.type GHC.IO.Handle.Types.$w$c<_entry, @object
GHC.IO.Handle.Types.$w$c<_entry:
_c8d3s:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8d3t
_c8d3u:
	movq $block_c8d3l_info,-32(%rbp)
	movq %r14,%rbx
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c8d3l
_c8d3m:
	movq (%rbx),%rax
	jmp *(%rax)
_c8d3t:
	movl $GHC.IO.Handle.Types.$w$c<_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$w$c<_entry, .-GHC.IO.Handle.Types.$w$c<_entry


==================== Asm code ====================
2018-03-16 16:03:17.812211257 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$c<_info
.type GHC.IO.Handle.Types.$w$c<_info, @object
GHC.IO.Handle.Types.$w$c<_info:
	.quad	GHC.IO.Handle.Types.$w$c<_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:03:17.813013592 UTC

.section .text
.align 8
_c8d3l:
_c8d3l:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8d3p
_c8d3q:
	movq $block_c8d3M_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8d3M
_c8d3O:
	movq (%rbx),%rax
	jmp *(%rax)
_c8d3p:
	movq $block_c8d3x_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8d3x
_c8d3z:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8d3l, .-_c8d3l


==================== Asm code ====================
2018-03-16 16:03:17.813996155 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d3l_info:
	.quad	_c8d3l
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.815234903 UTC

.section .text
.align 8
_c8d3x:
_c8d3x:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8d42
_c8d3J:
	movl $GHC.Types.True_closure+2,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u8d42:
	addq $8,%rbp
	jmp _c8d3Y
	.size _c8d3x, .-_c8d3x


==================== Asm code ====================
2018-03-16 16:03:17.815926971 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d3x_info:
	.quad	_c8d3x
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.816682659 UTC

.section .text
.align 8
_c8d3M:
_c8d3M:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8d3U
_u8d41:
	addq $8,%rbp
	jmp _c8d3Y
_c8d3U:
	movl $GHC.Types.False_closure+1,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8d3M, .-_c8d3M


==================== Asm code ====================
2018-03-16 16:03:17.817341253 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d3M_info:
	.quad	_c8d3M
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.817988728 UTC

.section .text
.align 8
_c8d3Y:
_c8d3Y:
	movq 16(%rbp),%rsi
	movq (%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Types.$fOrdNewline_$c<_entry
	.size _c8d3Y, .-_c8d3Y


==================== Asm code ====================
2018-03-16 16:03:17.821539289 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_closure
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_closure, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_info


==================== Asm code ====================
2018-03-16 16:03:17.822368633 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_entry
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_entry, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_entry:
_c8d4G:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8d4K
_c8d4L:
	movq $block_c8d4D_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8d4D
_c8d4E:
	movq (%rbx),%rax
	jmp *(%rax)
_c8d4K:
	movl $GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_entry, .-GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_entry


==================== Asm code ====================
2018-03-16 16:03:17.823063741 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_info
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_info, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.823834757 UTC

.section .text
.align 8
_c8d4D:
_c8d4D:
	movq $block_c8d4J_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8d4J
_c8d4N:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8d4D, .-_c8d4D


==================== Asm code ====================
2018-03-16 16:03:17.824430434 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d4D_info:
	.quad	_c8d4D
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.825093003 UTC

.section .text
.align 8
_c8d4J:
_c8d4J:
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Types.$w$c<_entry
	.size _c8d4J, .-_c8d4J


==================== Asm code ====================
2018-03-16 16:03:17.82603688 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d4J_info:
	.quad	_c8d4J
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.830576157 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$c==_closure
.type GHC.IO.Handle.Types.$w$c==_closure, @object
GHC.IO.Handle.Types.$w$c==_closure:
	.quad	GHC.IO.Handle.Types.$w$c==_info


==================== Asm code ====================
2018-03-16 16:03:17.831386103 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$w$c==_entry
.type GHC.IO.Handle.Types.$w$c==_entry, @object
GHC.IO.Handle.Types.$w$c==_entry:
_c8d5i:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8d5j
_c8d5k:
	movq $block_c8d5b_info,-32(%rbp)
	movq %r14,%rbx
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c8d5b
_c8d5c:
	movq (%rbx),%rax
	jmp *(%rax)
_c8d5j:
	movl $GHC.IO.Handle.Types.$w$c==_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$w$c==_entry, .-GHC.IO.Handle.Types.$w$c==_entry


==================== Asm code ====================
2018-03-16 16:03:17.832083337 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$c==_info
.type GHC.IO.Handle.Types.$w$c==_info, @object
GHC.IO.Handle.Types.$w$c==_info:
	.quad	GHC.IO.Handle.Types.$w$c==_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:03:17.832863334 UTC

.section .text
.align 8
_c8d5b:
_c8d5b:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8d5f
_c8d5g:
	movq $block_c8d5C_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8d5C
_c8d5E:
	movq (%rbx),%rax
	jmp *(%rax)
_c8d5f:
	movq $block_c8d5n_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8d5n
_c8d5p:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8d5b, .-_c8d5b


==================== Asm code ====================
2018-03-16 16:03:17.833580156 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d5b_info:
	.quad	_c8d5b
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.834265098 UTC

.section .text
.align 8
_c8d5n:
_c8d5n:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8d5T
_u8d5U:
	addq $32,%rbp
	jmp _c8d5K
_u8d5T:
	addq $8,%rbp
	jmp _c8d5O
	.size _c8d5n, .-_c8d5n


==================== Asm code ====================
2018-03-16 16:03:17.834855356 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d5n_info:
	.quad	_c8d5n
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.835533441 UTC

.section .text
.align 8
_c8d5C:
_c8d5C:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8d5R
_u8d5S:
	addq $8,%rbp
	jmp _c8d5O
_u8d5R:
	addq $32,%rbp
	jmp _c8d5K
	.size _c8d5C, .-_c8d5C


==================== Asm code ====================
2018-03-16 16:03:17.836145434 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d5C_info:
	.quad	_c8d5C
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.836786108 UTC

.section .text
.align 8
_c8d5K:
_c8d5K:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8d5K, .-_c8d5K


==================== Asm code ====================
2018-03-16 16:03:17.837468449 UTC

.section .text
.align 8
_c8d5O:
_c8d5O:
	movq 16(%rbp),%rsi
	movq (%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Types.$fEqNewline_$c==_entry
	.size _c8d5O, .-_c8d5O


==================== Asm code ====================
2018-03-16 16:03:17.840957179 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqNewlineMode_$c==_closure
.type GHC.IO.Handle.Types.$fEqNewlineMode_$c==_closure, @object
GHC.IO.Handle.Types.$fEqNewlineMode_$c==_closure:
	.quad	GHC.IO.Handle.Types.$fEqNewlineMode_$c==_info


==================== Asm code ====================
2018-03-16 16:03:17.841745677 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fEqNewlineMode_$c==_entry
.type GHC.IO.Handle.Types.$fEqNewlineMode_$c==_entry, @object
GHC.IO.Handle.Types.$fEqNewlineMode_$c==_entry:
_c8d6B:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8d6F
_c8d6G:
	movq $block_c8d6y_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8d6y
_c8d6z:
	movq (%rbx),%rax
	jmp *(%rax)
_c8d6F:
	movl $GHC.IO.Handle.Types.$fEqNewlineMode_$c==_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fEqNewlineMode_$c==_entry, .-GHC.IO.Handle.Types.$fEqNewlineMode_$c==_entry


==================== Asm code ====================
2018-03-16 16:03:17.842417304 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqNewlineMode_$c==_info
.type GHC.IO.Handle.Types.$fEqNewlineMode_$c==_info, @object
GHC.IO.Handle.Types.$fEqNewlineMode_$c==_info:
	.quad	GHC.IO.Handle.Types.$fEqNewlineMode_$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.843139687 UTC

.section .text
.align 8
_c8d6y:
_c8d6y:
	movq $block_c8d6E_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8d6E
_c8d6I:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8d6y, .-_c8d6y


==================== Asm code ====================
2018-03-16 16:03:17.843762577 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d6y_info:
	.quad	_c8d6y
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.844399357 UTC

.section .text
.align 8
_c8d6E:
_c8d6E:
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Types.$w$c==_entry
	.size _c8d6E, .-_c8d6E


==================== Asm code ====================
2018-03-16 16:03:17.845018746 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d6E_info:
	.quad	_c8d6E
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.853727946 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_closure
.type GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_closure, @object
GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_closure:
	.quad	GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_info


==================== Asm code ====================
2018-03-16 16:03:17.854534491 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_entry
.type GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_entry, @object
GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_entry:
_c8d79:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8d7d
_c8d7e:
	movq $block_c8d76_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8d76
_c8d77:
	movq (%rbx),%rax
	jmp *(%rax)
_c8d7d:
	movl $GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_entry, .-GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_entry


==================== Asm code ====================
2018-03-16 16:03:17.855261536 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_info
.type GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_info, @object
GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_info:
	.quad	GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.856080859 UTC

.section .text
.align 8
_c8d76:
_c8d76:
	movq $block_c8d7c_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8d7c
_c8d7g:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8d76, .-_c8d76


==================== Asm code ====================
2018-03-16 16:03:17.856815229 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d76_info:
	.quad	_c8d76
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.858371041 UTC

.section .text
.align 8
_c8d7c:
_c8d7c:
	movq $block_c8d7k_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8d7k
_c8d7m:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8d7c, .-_c8d7c


==================== Asm code ====================
2018-03-16 16:03:17.859022909 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d7c_info:
	.quad	_c8d7c
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.859807293 UTC

.section .text
.align 8
_c8d7k:
_c8d7k:
	movq 24(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8d7t
_c8d8j:
	movq $block_c8d8h_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8d8h
_c8d8k:
	movq (%rbx),%rax
	jmp *(%rax)
_c8d7t:
	movq $block_c8d7q_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8d7q
_c8d7u:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8d7k, .-_c8d7k


==================== Asm code ====================
2018-03-16 16:03:17.860516783 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d7k_info:
	.quad	_c8d7k
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.861298027 UTC

.section .text
.align 8
_c8d7q:
_c8d7q:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8d7B
_u8d9j:
	addq $32,%rbp
	jmp _c8d90
_c8d7B:
	movq $block_c8d7y_info,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _c8d7y
_c8d7C:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8d7q, .-_c8d7q


==================== Asm code ====================
2018-03-16 16:03:17.861948605 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d7q_info:
	.quad	_c8d7q
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.862736147 UTC

.section .text
.align 8
_c8d7y:
_c8d7y:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8d7J
_c8d7Z:
	movq $block_c8d7X_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8d7X
_c8d80:
	movq (%rbx),%rax
	jmp *(%rax)
_c8d7J:
	movq $block_c8d7G_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8d7G
_c8d7K:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8d7y, .-_c8d7y


==================== Asm code ====================
2018-03-16 16:03:17.863401304 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d7y_info:
	.quad	_c8d7y
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.864064394 UTC

.section .text
.align 8
_c8d7G:
_c8d7G:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8d9m
_u8d9n:
	addq $8,%rbp
	jmp _c8d90
_u8d9m:
	addq $8,%rbp
	jmp _c8d94
	.size _c8d7G, .-_c8d7G


==================== Asm code ====================
2018-03-16 16:03:17.864672181 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d7G_info:
	.quad	_c8d7G
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.865371051 UTC

.section .text
.align 8
_c8d7X:
_c8d7X:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8d9k
_u8d9l:
	addq $8,%rbp
	jmp _c8d94
_u8d9k:
	addq $8,%rbp
	jmp _c8d90
	.size _c8d7X, .-_c8d7X


==================== Asm code ====================
2018-03-16 16:03:17.865959267 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d7X_info:
	.quad	_c8d7X
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.866757396 UTC

.section .text
.align 8
_c8d8h:
_c8d8h:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8d9e
_c8d8v:
	movq $block_c8d8t_info,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _c8d8t
_c8d8w:
	movq (%rbx),%rax
	jmp *(%rax)
_u8d9e:
	addq $32,%rbp
	jmp _c8d90
	.size _c8d8h, .-_c8d8h


==================== Asm code ====================
2018-03-16 16:03:17.867390511 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d8h_info:
	.quad	_c8d8h
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.868161703 UTC

.section .text
.align 8
_c8d8t:
_c8d8t:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8d8D
_c8d8T:
	movq $block_c8d8R_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8d8R
_c8d8U:
	movq (%rbx),%rax
	jmp *(%rax)
_c8d8D:
	movq $block_c8d8A_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8d8A
_c8d8E:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8d8t, .-_c8d8t


==================== Asm code ====================
2018-03-16 16:03:17.868872974 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d8t_info:
	.quad	_c8d8t
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.869569669 UTC

.section .text
.align 8
_c8d8A:
_c8d8A:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8d9h
_u8d9i:
	addq $8,%rbp
	jmp _c8d90
_u8d9h:
	addq $8,%rbp
	jmp _c8d94
	.size _c8d8A, .-_c8d8A


==================== Asm code ====================
2018-03-16 16:03:17.870128621 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d8A_info:
	.quad	_c8d8A
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.870811729 UTC

.section .text
.align 8
_c8d8R:
_c8d8R:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8d9f
_u8d9g:
	addq $8,%rbp
	jmp _c8d94
_u8d9f:
	addq $8,%rbp
	jmp _c8d90
	.size _c8d8R, .-_c8d8R


==================== Asm code ====================
2018-03-16 16:03:17.871407803 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8d8R_info:
	.quad	_c8d8R
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.872045873 UTC

.section .text
.align 8
_c8d90:
_c8d90:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8d90, .-_c8d90


==================== Asm code ====================
2018-03-16 16:03:17.872704841 UTC

.section .text
.align 8
_c8d94:
_c8d94:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8d94, .-_c8d94


==================== Asm code ====================
2018-03-16 16:03:17.874816567 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqNewlineMode_closure
.type GHC.IO.Handle.Types.$fEqNewlineMode_closure, @object
GHC.IO.Handle.Types.$fEqNewlineMode_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.IO.Handle.Types.$fEqNewlineMode_$c==_closure+2
	.quad	GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:17.88309303 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_closure
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_closure, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_info


==================== Asm code ====================
2018-03-16 16:03:17.883887856 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_entry
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_entry, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_entry:
_c8db2:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8db6
_c8db7:
	movq $block_c8daZ_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8daZ
_c8db0:
	movq (%rbx),%rax
	jmp *(%rax)
_c8db6:
	movl $GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_entry, .-GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_entry


==================== Asm code ====================
2018-03-16 16:03:17.884542414 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_info
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_info, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.88532793 UTC

.section .text
.align 8
_c8daZ:
_c8daZ:
	movq $block_c8db5_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8db5
_c8db9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8daZ, .-_c8daZ


==================== Asm code ====================
2018-03-16 16:03:17.885984143 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8daZ_info:
	.quad	_c8daZ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.886673597 UTC

.section .text
.align 8
_c8db5:
_c8db5:
	movq $block_c8dbd_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8dbd
_c8dbf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8db5, .-_c8db5


==================== Asm code ====================
2018-03-16 16:03:17.88732322 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8db5_info:
	.quad	_c8db5
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.888064766 UTC

.section .text
.align 8
_c8dbd:
_c8dbd:
	movq 24(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8dbm
_c8dc6:
	movq $block_c8dc4_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8dc4
_c8dc7:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dbm:
	movq $block_c8dbj_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8dbj
_c8dbn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dbd, .-_c8dbd


==================== Asm code ====================
2018-03-16 16:03:17.888726757 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dbd_info:
	.quad	_c8dbd
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.889679874 UTC

.section .text
.align 8
_c8dbj:
_c8dbj:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8dbu
_u8dcW:
	addq $32,%rbp
	jmp _c8dcB
_c8dbu:
	movq $block_c8dbr_info,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _c8dbr
_c8dbv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dbj, .-_c8dbj


==================== Asm code ====================
2018-03-16 16:03:17.890267262 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dbj_info:
	.quad	_c8dbj
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.891039804 UTC

.section .text
.align 8
_c8dbr:
_c8dbr:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8dbC
_c8dbS:
	movq $block_c8dbQ_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8dbQ
_c8dbT:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dbC:
	movq $block_c8dbz_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8dbz
_c8dbD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dbr, .-_c8dbr


==================== Asm code ====================
2018-03-16 16:03:17.891734363 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dbr_info:
	.quad	_c8dbr
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.89241626 UTC

.section .text
.align 8
_c8dbz:
_c8dbz:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dcX
_u8dcY:
	addq $8,%rbp
	jmp _c8dcB
_u8dcX:
	addq $8,%rbp
	jmp _c8dcx
	.size _c8dbz, .-_c8dbz


==================== Asm code ====================
2018-03-16 16:03:17.893002148 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dbz_info:
	.quad	_c8dbz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.894215158 UTC

.section .text
.align 8
_c8dbQ:
_c8dbQ:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dbQ, .-_c8dbQ


==================== Asm code ====================
2018-03-16 16:03:17.894875983 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dbQ_info:
	.quad	_c8dbQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.895643835 UTC

.section .text
.align 8
_c8dc4:
_c8dc4:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dcT
_c8dci:
	movq $block_c8dcg_info,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _c8dcg
_c8dcj:
	movq (%rbx),%rax
	jmp *(%rax)
_u8dcT:
	addq $32,%rbp
	jmp _c8dcx
	.size _c8dc4, .-_c8dc4


==================== Asm code ====================
2018-03-16 16:03:17.896273331 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dc4_info:
	.quad	_c8dc4
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.897060935 UTC

.section .text
.align 8
_c8dcg:
_c8dcg:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8dcq
_c8dcG:
	movq $block_c8dcE_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8dcE
_c8dcH:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dcq:
	movq $block_c8dcn_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8dcn
_c8dcr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dcg, .-_c8dcg


==================== Asm code ====================
2018-03-16 16:03:17.898291356 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dcg_info:
	.quad	_c8dcg
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.898918008 UTC

.section .text
.align 8
_c8dcn:
_c8dcn:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dcU
_u8dcV:
	addq $8,%rbp
	jmp _c8dcB
_u8dcU:
	addq $8,%rbp
	jmp _c8dcx
	.size _c8dcn, .-_c8dcn


==================== Asm code ====================
2018-03-16 16:03:17.899504123 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dcn_info:
	.quad	_c8dcn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.900119461 UTC

.section .text
.align 8
_c8dcx:
_c8dcx:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dcx, .-_c8dcx


==================== Asm code ====================
2018-03-16 16:03:17.900756305 UTC

.section .text
.align 8
_c8dcB:
_c8dcB:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dcB, .-_c8dcB


==================== Asm code ====================
2018-03-16 16:03:17.901413359 UTC

.section .text
.align 8
_c8dcE:
_c8dcE:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dcE, .-_c8dcE


==================== Asm code ====================
2018-03-16 16:03:17.902012898 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dcE_info:
	.quad	_c8dcE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.911249412 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_closure
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_closure, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_info


==================== Asm code ====================
2018-03-16 16:03:17.912151773 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_entry
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_entry, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_entry:
_c8dew:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c8deA
_c8deB:
	movq $block_c8det_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8det
_c8deu:
	movq (%rbx),%rax
	jmp *(%rax)
_c8deA:
	movl $GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_entry, .-GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_entry


==================== Asm code ====================
2018-03-16 16:03:17.912916417 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_info
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_info, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.913689369 UTC

.section .text
.align 8
_c8det:
_c8det:
	movq $block_c8dez_info,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8dez
_c8deD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8det, .-_c8det


==================== Asm code ====================
2018-03-16 16:03:17.914361086 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8det_info:
	.quad	_c8det
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.915089091 UTC

.section .text
.align 8
_c8dez:
_c8dez:
	movq $block_c8deH_info,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 16(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8deH
_c8deJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dez, .-_c8dez


==================== Asm code ====================
2018-03-16 16:03:17.915769273 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dez_info:
	.quad	_c8dez
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.916589736 UTC

.section .text
.align 8
_c8deH:
_c8deH:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8deQ
_c8dfA:
	movq $block_c8dfy_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8dfy
_c8dfB:
	movq (%rbx),%rax
	jmp *(%rax)
_c8deQ:
	movq $block_c8deN_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8deN
_c8deR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8deH, .-_c8deH


==================== Asm code ====================
2018-03-16 16:03:17.917551208 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8deH_info:
	.quad	_c8deH
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.91824912 UTC

.section .text
.align 8
_c8deN:
_c8deN:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8deY
_u8dgq:
	addq $32,%rbp
	jmp _c8dg5
_c8deY:
	movq $block_c8deV_info,(%rbp)
	movq 24(%rbp),%rbx
	testb $7,%bl
	jne _c8deV
_c8deZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8deN, .-_c8deN


==================== Asm code ====================
2018-03-16 16:03:17.918846007 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8deN_info:
	.quad	_c8deN
	.quad	133
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.919651232 UTC

.section .text
.align 8
_c8deV:
_c8deV:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8df6
_c8dfm:
	movq $block_c8dfk_info,32(%rbp)
	movq %rax,%rbx
	addq $32,%rbp
	testb $7,%bl
	jne _c8dfk
_c8dfn:
	movq (%rbx),%rax
	jmp *(%rax)
_c8df6:
	movq $block_c8df3_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8df3
_c8df7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8deV, .-_c8deV


==================== Asm code ====================
2018-03-16 16:03:17.920293845 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8deV_info:
	.quad	_c8deV
	.quad	389
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.920943063 UTC

.section .text
.align 8
_c8df3:
_c8df3:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dgr
_u8dgs:
	addq $8,%rbp
	jmp _c8dg5
_u8dgr:
	addq $16,%rbp
	jmp _c8dg1
	.size _c8df3, .-_c8df3


==================== Asm code ====================
2018-03-16 16:03:17.921554651 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8df3_info:
	.quad	_c8df3
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.922205075 UTC

.section .text
.align 8
_c8dfk:
_c8dfk:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dfk, .-_c8dfk


==================== Asm code ====================
2018-03-16 16:03:17.922773872 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dfk_info:
	.quad	_c8dfk
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.923490391 UTC

.section .text
.align 8
_c8dfy:
_c8dfy:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dgn
_c8dfM:
	movq $block_c8dfK_info,(%rbp)
	movq 24(%rbp),%rbx
	testb $7,%bl
	jne _c8dfK
_c8dfN:
	movq (%rbx),%rax
	jmp *(%rax)
_u8dgn:
	addq $40,%rbp
	jmp _c8dg1
	.size _c8dfy, .-_c8dfy


==================== Asm code ====================
2018-03-16 16:03:17.924112817 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dfy_info:
	.quad	_c8dfy
	.quad	133
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.92495745 UTC

.section .text
.align 8
_c8dfK:
_c8dfK:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8dfU
_c8dga:
	movq $block_c8dg8_info,32(%rbp)
	movq %rax,%rbx
	addq $32,%rbp
	testb $7,%bl
	jne _c8dg8
_c8dgb:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dfU:
	movq $block_c8dfR_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8dfR
_c8dfV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dfK, .-_c8dfK


==================== Asm code ====================
2018-03-16 16:03:17.925817736 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dfK_info:
	.quad	_c8dfK
	.quad	389
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.926472309 UTC

.section .text
.align 8
_c8dfR:
_c8dfR:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dgo
_u8dgp:
	addq $8,%rbp
	jmp _c8dg5
_u8dgo:
	addq $16,%rbp
	jmp _c8dg1
	.size _c8dfR, .-_c8dfR


==================== Asm code ====================
2018-03-16 16:03:17.927047384 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dfR_info:
	.quad	_c8dfR
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.927698845 UTC

.section .text
.align 8
_c8dg1:
_c8dg1:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dg1, .-_c8dg1


==================== Asm code ====================
2018-03-16 16:03:17.928385697 UTC

.section .text
.align 8
_c8dg5:
_c8dg5:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dg5, .-_c8dg5


==================== Asm code ====================
2018-03-16 16:03:17.929062601 UTC

.section .text
.align 8
_c8dg8:
_c8dg8:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dg8, .-_c8dg8


==================== Asm code ====================
2018-03-16 16:03:17.92963779 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dg8_info:
	.quad	_c8dg8
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.938932678 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_closure
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_closure, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_info


==================== Asm code ====================
2018-03-16 16:03:17.939872642 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_entry
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_entry, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_entry:
_c8di4:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8di8
_c8di9:
	movq $block_c8di1_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8di1
_c8di2:
	movq (%rbx),%rax
	jmp *(%rax)
_c8di8:
	movl $GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_entry, .-GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_entry


==================== Asm code ====================
2018-03-16 16:03:17.940604578 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_info
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_info, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.941368984 UTC

.section .text
.align 8
_c8di1:
_c8di1:
	movq $block_c8di7_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8di7
_c8dib:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8di1, .-_c8di1


==================== Asm code ====================
2018-03-16 16:03:17.942021456 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8di1_info:
	.quad	_c8di1
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.942756479 UTC

.section .text
.align 8
_c8di7:
_c8di7:
	movq $block_c8dif_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8dif
_c8dih:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8di7, .-_c8di7


==================== Asm code ====================
2018-03-16 16:03:17.943417907 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8di7_info:
	.quad	_c8di7
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.944189856 UTC

.section .text
.align 8
_c8dif:
_c8dif:
	movq 24(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8dio
_c8dj8:
	movq $block_c8dj6_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8dj6
_c8dj9:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dio:
	movq $block_c8dil_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8dil
_c8dip:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dif, .-_c8dif


==================== Asm code ====================
2018-03-16 16:03:17.944841858 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dif_info:
	.quad	_c8dif
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.945577145 UTC

.section .text
.align 8
_c8dil:
_c8dil:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8diw
_u8djY:
	addq $32,%rbp
	jmp _c8djD
_c8diw:
	movq $block_c8dit_info,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _c8dit
_c8dix:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dil, .-_c8dil


==================== Asm code ====================
2018-03-16 16:03:17.946225025 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dil_info:
	.quad	_c8dil
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.946985658 UTC

.section .text
.align 8
_c8dit:
_c8dit:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8diE
_c8diU:
	movq $block_c8diS_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8diS
_c8diV:
	movq (%rbx),%rax
	jmp *(%rax)
_c8diE:
	movq $block_c8diB_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8diB
_c8diF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dit, .-_c8dit


==================== Asm code ====================
2018-03-16 16:03:17.947715934 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dit_info:
	.quad	_c8dit
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.948364785 UTC

.section .text
.align 8
_c8diB:
_c8diB:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8djZ
_u8dk0:
	addq $8,%rbp
	jmp _c8djD
_u8djZ:
	addq $8,%rbp
	jmp _c8djz
	.size _c8diB, .-_c8diB


==================== Asm code ====================
2018-03-16 16:03:17.948948933 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8diB_info:
	.quad	_c8diB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.950026808 UTC

.section .text
.align 8
_c8diS:
_c8diS:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8diS, .-_c8diS


==================== Asm code ====================
2018-03-16 16:03:17.950570932 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8diS_info:
	.quad	_c8diS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.951273158 UTC

.section .text
.align 8
_c8dj6:
_c8dj6:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8djV
_c8djk:
	movq $block_c8dji_info,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _c8dji
_c8djl:
	movq (%rbx),%rax
	jmp *(%rax)
_u8djV:
	addq $32,%rbp
	jmp _c8djz
	.size _c8dj6, .-_c8dj6


==================== Asm code ====================
2018-03-16 16:03:17.951910191 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dj6_info:
	.quad	_c8dj6
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.952721728 UTC

.section .text
.align 8
_c8dji:
_c8dji:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8djs
_c8djI:
	movq $block_c8djG_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8djG
_c8djJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c8djs:
	movq $block_c8djp_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8djp
_c8djt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dji, .-_c8dji


==================== Asm code ====================
2018-03-16 16:03:17.953404916 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dji_info:
	.quad	_c8dji
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.954041484 UTC

.section .text
.align 8
_c8djp:
_c8djp:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8djW
_u8djX:
	addq $8,%rbp
	jmp _c8djD
_u8djW:
	addq $8,%rbp
	jmp _c8djz
	.size _c8djp, .-_c8djp


==================== Asm code ====================
2018-03-16 16:03:17.954637995 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8djp_info:
	.quad	_c8djp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.955234264 UTC

.section .text
.align 8
_c8djz:
_c8djz:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8djz, .-_c8djz


==================== Asm code ====================
2018-03-16 16:03:17.955871635 UTC

.section .text
.align 8
_c8djD:
_c8djD:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8djD, .-_c8djD


==================== Asm code ====================
2018-03-16 16:03:17.956516896 UTC

.section .text
.align 8
_c8djG:
_c8djG:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8djG, .-_c8djG


==================== Asm code ====================
2018-03-16 16:03:17.957042614 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8djG_info:
	.quad	_c8djG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.959421091 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_closure
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_closure, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_info


==================== Asm code ====================
2018-03-16 16:03:17.960102422 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_entry
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_entry, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_entry:
_c8dlv:
	movq %rsi,%rax
	movq %r14,%rsi
	movq %rax,%r14
	jmp GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_entry
	.size GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_entry, .-GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_entry


==================== Asm code ====================
2018-03-16 16:03:17.960702118 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_info
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_info, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.969793279 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_closure
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_closure, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_info


==================== Asm code ====================
2018-03-16 16:03:17.970684515 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_entry
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_entry, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_entry:
_c8dlJ:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dlN
_c8dlO:
	movq $block_c8dlG_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8dlG
_c8dlH:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dlN:
	movl $GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_entry, .-GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_entry


==================== Asm code ====================
2018-03-16 16:03:17.971357259 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_info
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_info, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:17.97210591 UTC

.section .text
.align 8
_c8dlG:
_c8dlG:
	movq $block_c8dlM_info,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8dlM
_c8dlQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dlG, .-_c8dlG


==================== Asm code ====================
2018-03-16 16:03:17.972767745 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dlG_info:
	.quad	_c8dlG
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.9738491 UTC

.section .text
.align 8
_c8dlM:
_c8dlM:
	movq $block_c8dlU_info,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 16(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8dlU
_c8dlW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dlM, .-_c8dlM


==================== Asm code ====================
2018-03-16 16:03:17.97444962 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dlM_info:
	.quad	_c8dlM
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.97521697 UTC

.section .text
.align 8
_c8dlU:
_c8dlU:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8dm3
_c8dmN:
	movq $block_c8dmL_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8dmL
_c8dmO:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dm3:
	movq $block_c8dm0_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8dm0
_c8dm4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dlU, .-_c8dlU


==================== Asm code ====================
2018-03-16 16:03:17.975872425 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dlU_info:
	.quad	_c8dlU
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.977224343 UTC

.section .text
.align 8
_c8dm0:
_c8dm0:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8dmb
_u8dnD:
	addq $40,%rbp
	jmp _c8dni
_c8dmb:
	movq $block_c8dm8_info,(%rbp)
	movq 24(%rbp),%rbx
	testb $7,%bl
	jne _c8dm8
_c8dmc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dm0, .-_c8dm0


==================== Asm code ====================
2018-03-16 16:03:17.977940661 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dm0_info:
	.quad	_c8dm0
	.quad	133
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.978709245 UTC

.section .text
.align 8
_c8dm8:
_c8dm8:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8dmj
_c8dmz:
	movq $block_c8dmx_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8dmx
_c8dmA:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dmj:
	movq $block_c8dmg_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8dmg
_c8dmk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dm8, .-_c8dm8


==================== Asm code ====================
2018-03-16 16:03:17.979349198 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dm8_info:
	.quad	_c8dm8
	.quad	389
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.980029548 UTC

.section .text
.align 8
_c8dmg:
_c8dmg:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dnE
_u8dnF:
	addq $16,%rbp
	jmp _c8dni
_u8dnE:
	addq $8,%rbp
	jmp _c8dne
	.size _c8dmg, .-_c8dmg


==================== Asm code ====================
2018-03-16 16:03:17.980576164 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dmg_info:
	.quad	_c8dmg
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.981187106 UTC

.section .text
.align 8
_c8dmx:
_c8dmx:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dmx, .-_c8dmx


==================== Asm code ====================
2018-03-16 16:03:17.98182504 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dmx_info:
	.quad	_c8dmx
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.98247206 UTC

.section .text
.align 8
_c8dmL:
_c8dmL:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dnA
_c8dmZ:
	movq $block_c8dmX_info,(%rbp)
	movq 24(%rbp),%rbx
	testb $7,%bl
	jne _c8dmX
_c8dn0:
	movq (%rbx),%rax
	jmp *(%rax)
_u8dnA:
	addq $32,%rbp
	jmp _c8dne
	.size _c8dmL, .-_c8dmL


==================== Asm code ====================
2018-03-16 16:03:17.983080939 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dmL_info:
	.quad	_c8dmL
	.quad	133
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.983840993 UTC

.section .text
.align 8
_c8dmX:
_c8dmX:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8dn7
_c8dnn:
	movq $block_c8dnl_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8dnl
_c8dno:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dn7:
	movq $block_c8dn4_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8dn4
_c8dn8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dmX, .-_c8dmX


==================== Asm code ====================
2018-03-16 16:03:17.984506153 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dmX_info:
	.quad	_c8dmX
	.quad	389
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.985147688 UTC

.section .text
.align 8
_c8dn4:
_c8dn4:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dnB
_u8dnC:
	addq $16,%rbp
	jmp _c8dni
_u8dnB:
	addq $8,%rbp
	jmp _c8dne
	.size _c8dn4, .-_c8dn4


==================== Asm code ====================
2018-03-16 16:03:17.985739814 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dn4_info:
	.quad	_c8dn4
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.986328192 UTC

.section .text
.align 8
_c8dne:
_c8dne:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dne, .-_c8dne


==================== Asm code ====================
2018-03-16 16:03:17.986922483 UTC

.section .text
.align 8
_c8dni:
_c8dni:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dni, .-_c8dni


==================== Asm code ====================
2018-03-16 16:03:17.987600328 UTC

.section .text
.align 8
_c8dnl:
_c8dnl:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dnl, .-_c8dnl


==================== Asm code ====================
2018-03-16 16:03:17.988163998 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dnl_info:
	.quad	_c8dnl
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:17.990020032 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_closure
.type GHC.IO.Handle.Types.$fOrdNewlineMode_closure, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.IO.Handle.Types.$fEqNewlineMode_closure+1
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:17.991620525 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode13_bytes
.type GHC.IO.Handle.Types.$fReadBufferMode13_bytes, @object
GHC.IO.Handle.Types.$fReadBufferMode13_bytes:
	.asciz "NoBuffering"


==================== Asm code ====================
2018-03-16 16:03:17.994309357 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode12_closure
.type GHC.IO.Handle.Types.$fReadBufferMode12_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode12_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode12_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.995240645 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode12_entry
.type GHC.IO.Handle.Types.$fReadBufferMode12_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode12_entry:
_c8dpi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dpj
_c8dpk:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8dph
_c8dpg:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fReadBufferMode13_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8dpj:
	jmp *-16(%r13)
_c8dph:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadBufferMode12_entry, .-GHC.IO.Handle.Types.$fReadBufferMode12_entry


==================== Asm code ====================
2018-03-16 16:03:17.995930171 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode12_info
.type GHC.IO.Handle.Types.$fReadBufferMode12_info, @object
GHC.IO.Handle.Types.$fReadBufferMode12_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode12_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:17.998160209 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode6_closure
.type GHC.IO.Handle.Types.$fShowBufferMode6_closure, @object
GHC.IO.Handle.Types.$fShowBufferMode6_closure:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode6_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:17.9987556 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowBufferMode6_entry
.type GHC.IO.Handle.Types.$fShowBufferMode6_entry, @object
GHC.IO.Handle.Types.$fShowBufferMode6_entry:
_c8dpw:
	movq %r14,%rsi
	movl $GHC.IO.Handle.Types.$fReadBufferMode12_closure,%r14d
	jmp GHC.Base.++_entry
	.size GHC.IO.Handle.Types.$fShowBufferMode6_entry, .-GHC.IO.Handle.Types.$fShowBufferMode6_entry


==================== Asm code ====================
2018-03-16 16:03:17.999291391 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode6_info
.type GHC.IO.Handle.Types.$fShowBufferMode6_info, @object
GHC.IO.Handle.Types.$fShowBufferMode6_info:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode6_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S8alj_srt+336


==================== Asm code ====================
2018-03-16 16:03:18.000797734 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode9_bytes
.type GHC.IO.Handle.Types.$fReadBufferMode9_bytes, @object
GHC.IO.Handle.Types.$fReadBufferMode9_bytes:
	.asciz "LineBuffering"


==================== Asm code ====================
2018-03-16 16:03:18.003268046 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode8_closure
.type GHC.IO.Handle.Types.$fReadBufferMode8_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode8_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.004142166 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode8_entry
.type GHC.IO.Handle.Types.$fReadBufferMode8_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode8_entry:
_c8dpK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dpL
_c8dpM:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8dpJ
_c8dpI:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fReadBufferMode9_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8dpL:
	jmp *-16(%r13)
_c8dpJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadBufferMode8_entry, .-GHC.IO.Handle.Types.$fReadBufferMode8_entry


==================== Asm code ====================
2018-03-16 16:03:18.004811739 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode8_info
.type GHC.IO.Handle.Types.$fReadBufferMode8_info, @object
GHC.IO.Handle.Types.$fReadBufferMode8_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode8_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:18.00765761 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode5_closure
.type GHC.IO.Handle.Types.$fShowBufferMode5_closure, @object
GHC.IO.Handle.Types.$fShowBufferMode5_closure:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode5_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.008309624 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowBufferMode5_entry
.type GHC.IO.Handle.Types.$fShowBufferMode5_entry, @object
GHC.IO.Handle.Types.$fShowBufferMode5_entry:
_c8dpY:
	movq %r14,%rsi
	movl $GHC.IO.Handle.Types.$fReadBufferMode8_closure,%r14d
	jmp GHC.Base.++_entry
	.size GHC.IO.Handle.Types.$fShowBufferMode5_entry, .-GHC.IO.Handle.Types.$fShowBufferMode5_entry


==================== Asm code ====================
2018-03-16 16:03:18.008902932 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode5_info
.type GHC.IO.Handle.Types.$fShowBufferMode5_info, @object
GHC.IO.Handle.Types.$fShowBufferMode5_info:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode5_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S8alj_srt+344


==================== Asm code ====================
2018-03-16 16:03:18.010545585 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode4_bytes
.type GHC.IO.Handle.Types.$fShowBufferMode4_bytes, @object
GHC.IO.Handle.Types.$fShowBufferMode4_bytes:
	.asciz "BlockBuffering "


==================== Asm code ====================
2018-03-16 16:03:18.013066178 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode3_closure
.type GHC.IO.Handle.Types.$fShowBufferMode3_closure, @object
GHC.IO.Handle.Types.$fShowBufferMode3_closure:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.014021023 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowBufferMode3_entry
.type GHC.IO.Handle.Types.$fShowBufferMode3_entry, @object
GHC.IO.Handle.Types.$fShowBufferMode3_entry:
_c8dqc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dqd
_c8dqe:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8dqb
_c8dqa:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fShowBufferMode4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8dqd:
	jmp *-16(%r13)
_c8dqb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fShowBufferMode3_entry, .-GHC.IO.Handle.Types.$fShowBufferMode3_entry


==================== Asm code ====================
2018-03-16 16:03:18.014695283 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode3_info
.type GHC.IO.Handle.Types.$fShowBufferMode3_info, @object
GHC.IO.Handle.Types.$fShowBufferMode3_info:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:18.022960056 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_closure
.type GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_closure, @object
GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_closure:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.023697375 UTC

.section .text
.align 8
g_s8ac2_entry:
_c8dqG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dqH
_c8dqI:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rdi
	movl $GHC.IO.Handle.Types.$fReadBufferMode_n_closure+1,%esi
	movl $GHC.Show.$fShowInt_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Show.$fShowMaybe_$cshowsPrec_entry
_c8dqH:
	jmp *-16(%r13)
	.size g_s8ac2_entry, .-g_s8ac2_entry


==================== Asm code ====================
2018-03-16 16:03:18.02427191 UTC

.section .data.rel.ro
.align 8
.align 1
g_s8ac2_info:
	.quad	g_s8ac2_entry
	.quad	1
	.quad	4294967312
	.quad	S8alj_srt+352


==================== Asm code ====================
2018-03-16 16:03:18.024892793 UTC

.section .text
.align 8
sat_s8ac5_entry:
_c8dqV:
	movq 24(%rbx),%r14
	movq 16(%rbx),%rbx
	jmp stg_ap_p_fast
	.size sat_s8ac5_entry, .-sat_s8ac5_entry


==================== Asm code ====================
2018-03-16 16:03:18.025489451 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ac5_info:
	.quad	sat_s8ac5_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:03:18.026207502 UTC

.section .text
.align 8
sat_s8ac6_entry:
_c8dqY:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8dr2
_c8dr1:
	movq 7(%rbx),%rax
	movq $sat_s8ac5_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -24(%r12),%rsi
	movl $GHC.IO.Handle.Types.$fShowBufferMode3_closure,%r14d
	jmp GHC.Base.++_entry
_c8dr2:
	movq $32,904(%r13)
	jmp *-8(%r13)
	.size sat_s8ac6_entry, .-sat_s8ac6_entry


==================== Asm code ====================
2018-03-16 16:03:18.026836248 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ac6_info:
	.quad	sat_s8ac6_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S8alj_srt+360


==================== Asm code ====================
2018-03-16 16:03:18.027498685 UTC

.section .text
.align 8
sat_s8ac9_entry:
_c8dri:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8drm
_c8drl:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)2_closure,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%r14
	movq %rax,%rbx
	jmp stg_ap_p_fast
_c8drm:
	movq $24,904(%r13)
	jmp *-16(%r13)
	.size sat_s8ac9_entry, .-sat_s8ac9_entry


==================== Asm code ====================
2018-03-16 16:03:18.028137224 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ac9_info:
	.quad	sat_s8ac9_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:03:18.028901603 UTC

.section .text
.align 8
sat_s8aca_entry:
_c8drn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dro
_c8drp:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8drr
_c8drq:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s8ac9_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movl $GHC.IO.Handle.Types.$fShowBufferMode3_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_c8drr:
	movq $32,904(%r13)
_c8dro:
	jmp *-16(%r13)
	.size sat_s8aca_entry, .-sat_s8aca_entry


==================== Asm code ====================
2018-03-16 16:03:18.029622411 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8aca_info:
	.quad	sat_s8aca_entry
	.quad	2
	.quad	4294967314
	.quad	S8alj_srt+360


==================== Asm code ====================
2018-03-16 16:03:18.030349928 UTC

.section .text
.align 8
sat_s8acb_entry:
_c8drt:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8drx
_c8drw:
	movq 7(%rbx),%rax
	movq $sat_s8aca_info,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)4_closure,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8drx:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_s8acb_entry, .-sat_s8acb_entry


==================== Asm code ====================
2018-03-16 16:03:18.031003882 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8acb_info:
	.quad	sat_s8acb_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S8alj_srt+360


==================== Asm code ====================
2018-03-16 16:03:18.031734525 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_entry
.type GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_entry, @object
GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_entry:
_c8drD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8drE
_c8drF:
	movq $block_c8dqq_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8dqq
_c8dqr:
	movq (%rbx),%rax
	jmp *(%rax)
_c8drE:
	movl $GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_entry, .-GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:03:18.032380688 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_info
.type GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_info, @object
GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_info:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_entry
	.quad	0
	.quad	133143986190
	.quad	8589934607
	.quad	S8alj_srt+352


==================== Asm code ====================
2018-03-16 16:03:18.033168952 UTC

.section .text
.align 8
_c8dqq:
_c8dqq:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u8drR
_c8drB:
	movq $block_c8dqx_info,(%rbp)
	movq 5(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8dqx
_c8dqy:
	movq (%rbx),%rax
	jmp *(%rax)
_u8drR:
	cmpq $2,%rax
	jb _c8drz
_c8drA:
	movl $GHC.IO.Handle.Types.$fShowBufferMode5_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8drz:
	movl $GHC.IO.Handle.Types.$fShowBufferMode6_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dqq, .-_c8dqq


==================== Asm code ====================
2018-03-16 16:03:18.033898963 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dqq_info:
	.quad	_c8dqq
	.quad	1
	.quad	115964117022
	.quad	S8alj_srt+352


==================== Asm code ====================
2018-03-16 16:03:18.034660001 UTC

.section .text
.align 8
_c8dqx:
_c8dqx:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8drN
_c8drM:
	movq 7(%rbx),%rax
	movq $g_s8ac2_info,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	leaq -32(%r12),%rbx
	cmpq $11,%rax
	jl _c8drP
_c8drQ:
	movq $sat_s8acb_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8drP:
	movq $sat_s8ac6_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8drN:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8dqx, .-_c8dqx


==================== Asm code ====================
2018-03-16 16:03:18.035376342 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dqx_info:
	.quad	_c8dqx
	.quad	1
	.quad	12884901918
	.quad	S8alj_srt+352


==================== Asm code ====================
2018-03-16 16:03:18.037101256 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode7_closure
.type GHC.IO.Handle.Types.$fShowBufferMode7_closure, @object
GHC.IO.Handle.Types.$fShowBufferMode7_closure:
	.quad	:_con_info
	.quad	GHC.Show.$fShow(,)2_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.044714101 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode_$cshow_closure
.type GHC.IO.Handle.Types.$fShowBufferMode_$cshow_closure, @object
GHC.IO.Handle.Types.$fShowBufferMode_$cshow_closure:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.045654157 UTC

.section .text
.align 8
sat_s8acm_entry:
_c8dt6:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dtc
_c8dtd:
	movq $block_c8dt3_info,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8dt3
_c8dt4:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dtc:
	jmp *-16(%r13)
	.size sat_s8acm_entry, .-sat_s8acm_entry


==================== Asm code ====================
2018-03-16 16:03:18.046297514 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8acm_info:
	.quad	sat_s8acm_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:03:18.046951058 UTC

.section .text
.align 8
_c8dt3:
_c8dt3:
	movq $block_c8dt9_info,(%rbp)
	movl $GHC.IO.Handle.Types.$fShowBufferMode7_closure+2,%edi
	movq 7(%rbx),%rsi
	movl $11,%r14d
	jmp GHC.Show.$wshowSignedInt_entry
	.size _c8dt3, .-_c8dt3


==================== Asm code ====================
2018-03-16 16:03:18.048122376 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dt3_info:
	.quad	_c8dt3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.04888058 UTC

.section .text
.align 8
_c8dt9:
_c8dt9:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8dth
_c8dtg:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8dth:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c8dt9, .-_c8dt9


==================== Asm code ====================
2018-03-16 16:03:18.049498997 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dt9_info:
	.quad	_c8dt9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.050316689 UTC

.section .text
.align 8
sat_s8acn_entry:
_c8dtj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dtk
_c8dtl:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8dtn
_c8dtm:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $sat_s8acm_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	movl $GHC.Show.$fShowMaybe1_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_c8dtn:
	movq $24,904(%r13)
_c8dtk:
	jmp *-16(%r13)
	.size sat_s8acn_entry, .-sat_s8acn_entry


==================== Asm code ====================
2018-03-16 16:03:18.051003836 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8acn_info:
	.quad	sat_s8acn_entry
	.quad	1
	.quad	4294967312
	.quad	S8alj_srt+392


==================== Asm code ====================
2018-03-16 16:03:18.051734799 UTC

.section .text
.align 8
sat_s8aco_entry:
_c8dts:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dtt
_c8dtu:
	movq $block_c8dsP_info,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8dsP
_c8dsQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dtt:
	jmp *-16(%r13)
	.size sat_s8aco_entry, .-sat_s8aco_entry


==================== Asm code ====================
2018-03-16 16:03:18.052348931 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8aco_info:
	.quad	sat_s8aco_entry
	.quad	1
	.quad	12884901904
	.quad	S8alj_srt+392


==================== Asm code ====================
2018-03-16 16:03:18.053161807 UTC

.section .text
.align 8
_c8dsP:
_c8dsP:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8dtp
_c8dtq:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c8dtA
_c8dtz:
	movq 6(%rbx),%rax
	movq $sat_s8acn_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)4_closure,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8dtA:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
_c8dtp:
	movl $GHC.Show.$fShowMaybe4_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dsP, .-_c8dsP


==================== Asm code ====================
2018-03-16 16:03:18.053888075 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dsP_info:
	.quad	_c8dsP
	.quad	0
	.quad	12884901918
	.quad	S8alj_srt+392


==================== Asm code ====================
2018-03-16 16:03:18.054607399 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowBufferMode_$cshow_entry
.type GHC.IO.Handle.Types.$fShowBufferMode_$cshow_entry, @object
GHC.IO.Handle.Types.$fShowBufferMode_$cshow_entry:
_c8dtH:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dtI
_c8dtJ:
	movq $block_c8dsE_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8dsE
_c8dsF:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dtI:
	movl $GHC.IO.Handle.Types.$fShowBufferMode_$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowBufferMode_$cshow_entry, .-GHC.IO.Handle.Types.$fShowBufferMode_$cshow_entry


==================== Asm code ====================
2018-03-16 16:03:18.055244261 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode_$cshow_info
.type GHC.IO.Handle.Types.$fShowBufferMode_$cshow_info, @object
GHC.IO.Handle.Types.$fShowBufferMode_$cshow_info:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshow_entry
	.quad	0
	.quad	3895535337486
	.quad	4294967301
	.quad	S8alj_srt+336


==================== Asm code ====================
2018-03-16 16:03:18.056097437 UTC

.section .text
.align 8
_c8dsE:
_c8dsE:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u8dtR
_c8dtF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8dtQ
_c8dtP:
	movq 5(%rbx),%rax
	movq $sat_s8aco_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	movl $GHC.IO.Handle.Types.$fShowBufferMode3_closure,%r14d
	addq $8,%rbp
	jmp GHC.Base.++_entry
_c8dtQ:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_u8dtR:
	cmpq $2,%rax
	jb _c8dtD
_c8dtE:
	movl $GHC.IO.Handle.Types.$fReadBufferMode8_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8dtD:
	movl $GHC.IO.Handle.Types.$fReadBufferMode12_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dsE, .-_c8dsE


==================== Asm code ====================
2018-03-16 16:03:18.05687084 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dsE_info:
	.quad	_c8dsE
	.quad	0
	.quad	1696512081950
	.quad	S8alj_srt+336


==================== Asm code ====================
2018-03-16 16:03:18.059109582 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode1_closure
.type GHC.IO.Handle.Types.$fShowBufferMode1_closure, @object
GHC.IO.Handle.Types.$fShowBufferMode1_closure:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.059749254 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowBufferMode1_entry
.type GHC.IO.Handle.Types.$fShowBufferMode1_entry, @object
GHC.IO.Handle.Types.$fShowBufferMode1_entry:
_c8duC:
	movq %r14,%rsi
	movl $GHC.IO.Handle.Types.$fShowBufferMode2_closure+1,%r14d
	jmp GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_entry
	.size GHC.IO.Handle.Types.$fShowBufferMode1_entry, .-GHC.IO.Handle.Types.$fShowBufferMode1_entry


==================== Asm code ====================
2018-03-16 16:03:18.06037925 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode1_info
.type GHC.IO.Handle.Types.$fShowBufferMode1_info, @object
GHC.IO.Handle.Types.$fShowBufferMode1_info:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S8alj_srt+368


==================== Asm code ====================
2018-03-16 16:03:18.062523506 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_closure
.type GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_closure, @object
GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_closure:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.063161958 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_entry
.type GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_entry, @object
GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_entry:
_c8duN:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.IO.Handle.Types.$fShowBufferMode1_closure+1,%r14d
	jmp GHC.Show.showList___entry
	.size GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_entry, .-GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:03:18.063745181 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_info
.type GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_info, @object
GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_info:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S8alj_srt+416


==================== Asm code ====================
2018-03-16 16:03:18.065521653 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode_closure
.type GHC.IO.Handle.Types.$fShowBufferMode_closure, @object
GHC.IO.Handle.Types.$fShowBufferMode_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_closure+2
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshow_closure+1
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.067722197 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode11_closure
.type GHC.IO.Handle.Types.$fReadBufferMode11_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode11_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode11_info


==================== Asm code ====================
2018-03-16 16:03:18.068434128 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode11_entry
.type GHC.IO.Handle.Types.$fReadBufferMode11_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode11_entry:
_c8duZ:
	movl $GHC.IO.Handle.Types.NoBuffering_closure+1,%r14d
	movq %rsi,%rbx
	jmp stg_ap_p_fast
	.size GHC.IO.Handle.Types.$fReadBufferMode11_entry, .-GHC.IO.Handle.Types.$fReadBufferMode11_entry


==================== Asm code ====================
2018-03-16 16:03:18.069039764 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode11_info
.type GHC.IO.Handle.Types.$fReadBufferMode11_info, @object
GHC.IO.Handle.Types.$fReadBufferMode11_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode11_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:18.070726073 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode10_closure
.type GHC.IO.Handle.Types.$fReadBufferMode10_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode10_closure:
	.quad	(,)_con_info
	.quad	GHC.IO.Handle.Types.$fReadBufferMode12_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode11_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.072890915 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode7_closure
.type GHC.IO.Handle.Types.$fReadBufferMode7_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode7_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode7_info


==================== Asm code ====================
2018-03-16 16:03:18.073670092 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode7_entry
.type GHC.IO.Handle.Types.$fReadBufferMode7_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode7_entry:
_c8dvb:
	movl $GHC.IO.Handle.Types.LineBuffering_closure+2,%r14d
	movq %rsi,%rbx
	jmp stg_ap_p_fast
	.size GHC.IO.Handle.Types.$fReadBufferMode7_entry, .-GHC.IO.Handle.Types.$fReadBufferMode7_entry


==================== Asm code ====================
2018-03-16 16:03:18.074290413 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode7_info
.type GHC.IO.Handle.Types.$fReadBufferMode7_info, @object
GHC.IO.Handle.Types.$fReadBufferMode7_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode7_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:18.076118157 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode6_closure
.type GHC.IO.Handle.Types.$fReadBufferMode6_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode6_closure:
	.quad	(,)_con_info
	.quad	GHC.IO.Handle.Types.$fReadBufferMode8_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode7_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.079988322 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode5_closure
.type GHC.IO.Handle.Types.$fReadBufferMode5_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode5_closure:
	.quad	:_con_info
	.quad	GHC.IO.Handle.Types.$fReadBufferMode6_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.081753426 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode_sps_closure
.type GHC.IO.Handle.Types.$fReadBufferMode_sps_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode_sps_closure:
	.quad	:_con_info
	.quad	GHC.IO.Handle.Types.$fReadBufferMode10_closure+1
	.quad	GHC.IO.Handle.Types.$fReadBufferMode5_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.083375087 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode4_bytes
.type GHC.IO.Handle.Types.$fReadBufferMode4_bytes, @object
GHC.IO.Handle.Types.$fReadBufferMode4_bytes:
	.asciz "BlockBuffering"


==================== Asm code ====================
2018-03-16 16:03:18.086124248 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode3_closure
.type GHC.IO.Handle.Types.$fReadBufferMode3_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode3_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.086996611 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode3_entry
.type GHC.IO.Handle.Types.$fReadBufferMode3_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode3_entry:
_c8dvs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dvt
_c8dvu:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8dvr
_c8dvq:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fReadBufferMode4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8dvt:
	jmp *-16(%r13)
_c8dvr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadBufferMode3_entry, .-GHC.IO.Handle.Types.$fReadBufferMode3_entry


==================== Asm code ====================
2018-03-16 16:03:18.08768919 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode3_info
.type GHC.IO.Handle.Types.$fReadBufferMode3_info, @object
GHC.IO.Handle.Types.$fReadBufferMode3_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:18.089429809 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode_lexeme_closure
.type GHC.IO.Handle.Types.$fReadBufferMode_lexeme_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode_lexeme_closure:
	.quad	Text.Read.Lex.Ident_con_info
	.quad	GHC.IO.Handle.Types.$fReadBufferMode3_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.098649848 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode2_closure
.type GHC.IO.Handle.Types.$fReadBufferMode2_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode2_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.099499273 UTC

.section .text
.align 8
ds2_s8acw_entry:
_c8dvL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dvM
_c8dvN:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movl $GHC.IO.Handle.Types.$fReadBufferMode_sps_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Read.choose2_entry
_c8dvM:
	jmp *-16(%r13)
	.size ds2_s8acw_entry, .-ds2_s8acw_entry


==================== Asm code ====================
2018-03-16 16:03:18.10016236 UTC

.section .data.rel.ro
.align 8
.align 1
ds2_s8acw_info:
	.quad	ds2_s8acw_entry
	.quad	1
	.quad	12884901904
	.quad	S8alj_srt+424


==================== Asm code ====================
2018-03-16 16:03:18.100850731 UTC

.section .text
.align 8
sat_s8acF_entry:
_c8dwh:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8dwl
_c8dwk:
	movq 7(%rbx),%rax
	movq $GHC.IO.Handle.Types.BlockBuffering_con_info,-8(%r12)
	movq %r14,(%r12)
	leaq -5(%r12),%r14
	movq %rax,%rbx
	jmp stg_ap_p_fast
_c8dwl:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_s8acF_entry, .-sat_s8acF_entry


==================== Asm code ====================
2018-03-16 16:03:18.101546289 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8acF_info:
	.quad	sat_s8acF_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:18.102283379 UTC

.section .text
.align 8
sat_s8acG_entry:
_c8dwm:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8dwq
_c8dwp:
	movq 7(%rbx),%rax
	movq $sat_s8acF_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rdi
	movl $GHC.IO.Handle.Types.$fReadBufferMode_n_closure+1,%esi
	movl $GHC.Read.$fReadInt_closure,%r14d
	jmp GHC.Read.$fReadMaybe1_entry
_c8dwq:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_s8acG_entry, .-sat_s8acG_entry


==================== Asm code ====================
2018-03-16 16:03:18.102960243 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8acG_info:
	.quad	sat_s8acG_entry
	.quad	1
	.quad	12884901897
	.quad	4294967301
	.quad	S8alj_srt+440


==================== Asm code ====================
2018-03-16 16:03:18.10377348 UTC

.section .text
.align 8
sat_s8acJ_entry:
_c8dwr:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dws
_c8dwt:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c8dvX_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c8dvX
_c8dvY:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dws:
	jmp *-16(%r13)
	.size sat_s8acJ_entry, .-sat_s8acJ_entry


==================== Asm code ====================
2018-03-16 16:03:18.104414695 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8acJ_info:
	.quad	sat_s8acJ_entry
	.quad	2
	.quad	8070450536542896146
	.quad	S8alj_srt+216


==================== Asm code ====================
2018-03-16 16:03:18.105223698 UTC

.section .text
.align 8
_c8dvX:
_c8dvX:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8dww
_c8dwv:
	cmpq $10,7(%rbx)
	jg _c8dwy
_c8dwC:
	movq $sat_s8acG_info,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c8dwz_info,8(%rbp)
	leaq -7(%r12),%rsi
	movl $GHC.IO.Handle.Types.$fReadBufferMode_lexeme_closure+4,%r14d
	addq $8,%rbp
	jmp Text.Read.Lex.$wexpect_entry
_c8dwy:
	addq $-16,%r12
	movl $Text.ParserCombinators.ReadP.Fail_closure+3,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8dww:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8dvX, .-_c8dvX


==================== Asm code ====================
2018-03-16 16:03:18.106006871 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dvX_info:
	.quad	_c8dvX
	.quad	1
	.quad	8070450536542896158
	.quad	S8alj_srt+216


==================== Asm code ====================
2018-03-16 16:03:18.106714708 UTC

.section .text
.align 8
_c8dwz:
_c8dwz:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8dwF
_c8dwE:
	movq $Text.ParserCombinators.ReadP.Look_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8dwF:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8dwz, .-_c8dwz


==================== Asm code ====================
2018-03-16 16:03:18.107348735 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dwz_info:
	.quad	_c8dwz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.10813861 UTC

.section .text
.align 8
sat_s8acK_entry:
_c8dwJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dwK
_c8dwL:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8dwN
_c8dwM:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s8acJ_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	movq $block_c8dwH_info,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_p_fast
_c8dwN:
	movq $32,904(%r13)
_c8dwK:
	jmp *-8(%r13)
	.size sat_s8acK_entry, .-sat_s8acK_entry


==================== Asm code ====================
2018-03-16 16:03:18.108821958 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8acK_info:
	.quad	sat_s8acK_entry
	.quad	2
	.quad	-1152921500311879669
	.quad	4294967301
	.quad	S8alj_srt+216


==================== Asm code ====================
2018-03-16 16:03:18.109894863 UTC

.section .text
.align 8
_c8dwH:
_c8dwH:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_entry
	.size _c8dwH, .-_c8dwH


==================== Asm code ====================
2018-03-16 16:03:18.110505053 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dwH_info:
	.quad	_c8dwH
	.quad	1
	.quad	4294967326
	.quad	S8alj_srt+464


==================== Asm code ====================
2018-03-16 16:03:18.111086537 UTC

.section .data.rel.ro
.align 8
.align 1
u8dwW_srtd:
	.quad	S8alj_srt+216
	.quad	33
	.quad	8522825729


==================== Asm code ====================
2018-03-16 16:03:18.111819418 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode2_entry
.type GHC.IO.Handle.Types.$fReadBufferMode2_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode2_entry:
_c8dwR:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c8dwV
_c8dwU:
	movq $ds2_s8acw_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $sat_s8acK_info,-16(%r12)
	movq %r14,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8dwV:
	movq $48,904(%r13)
	movl $GHC.IO.Handle.Types.$fReadBufferMode2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fReadBufferMode2_entry, .-GHC.IO.Handle.Types.$fReadBufferMode2_entry


==================== Asm code ====================
2018-03-16 16:03:18.11249169 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode2_info
.type GHC.IO.Handle.Types.$fReadBufferMode2_info, @object
GHC.IO.Handle.Types.$fReadBufferMode2_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode2_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967301
	.quad	u8dwW_srtd


==================== Asm code ====================
2018-03-16 16:03:18.115041211 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode1_closure
.type GHC.IO.Handle.Types.$fReadBufferMode1_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode1_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.115624971 UTC

.section .data.rel.ro
.align 8
.align 1
u8dxH_srtd:
	.quad	S8alj_srt+160
	.quad	40
	.quad	549755813889


==================== Asm code ====================
2018-03-16 16:03:18.116769263 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode1_entry
.type GHC.IO.Handle.Types.$fReadBufferMode1_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode1_entry:
_c8dxE:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.IO.Handle.Types.$fReadBufferMode2_closure+1,%r14d
	jmp GHC.Read.list3_entry
	.size GHC.IO.Handle.Types.$fReadBufferMode1_entry, .-GHC.IO.Handle.Types.$fReadBufferMode1_entry


==================== Asm code ====================
2018-03-16 16:03:18.117648101 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode1_info
.type GHC.IO.Handle.Types.$fReadBufferMode1_info, @object
GHC.IO.Handle.Types.$fReadBufferMode1_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u8dxH_srtd


==================== Asm code ====================
2018-03-16 16:03:18.120897107 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_closure
.type GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.121506058 UTC

.section .data.rel.ro
.align 8
.align 1
u8dy3_srtd:
	.quad	S8alj_srt+160
	.quad	40
	.quad	549755813889


==================== Asm code ====================
2018-03-16 16:03:18.122297387 UTC

.section .text
.align 8
sat_s8acM_entry:
_c8dxV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dxW
_c8dxX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%edi
	movq 16(%rbx),%rsi
	movl $GHC.IO.Handle.Types.$fReadBufferMode2_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.Read.list3_entry
_c8dxW:
	jmp *-16(%r13)
	.size sat_s8acM_entry, .-sat_s8acM_entry


==================== Asm code ====================
2018-03-16 16:03:18.122935263 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8acM_info:
	.quad	sat_s8acM_entry
	.quad	1
	.quad	-4294967280
	.quad	u8dy3_srtd


==================== Asm code ====================
2018-03-16 16:03:18.123514896 UTC

.section .data.rel.ro
.align 8
.align 1
u8dy4_srtd:
	.quad	S8alj_srt+160
	.quad	41
	.quad	1649267441665


==================== Asm code ====================
2018-03-16 16:03:18.12420268 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_entry
.type GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_entry:
_c8dxY:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8dy2
_c8dy1:
	movq $sat_s8acM_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	movl $Text.ParserCombinators.ReadP.run_closure+2,%ebx
	jmp stg_ap_p_fast
_c8dy2:
	movq $24,904(%r13)
	movl $GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_entry, .-GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 16:03:18.124864134 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_info
.type GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_info, @object
GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967301
	.quad	u8dy4_srtd


==================== Asm code ====================
2018-03-16 16:03:18.127563581 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_closure
.type GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.128429512 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_entry
.type GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_entry:
_c8dyl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dym
_c8dyn:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8dyk
_c8dyj:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fReadBufferMode1_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Read.list_entry
_c8dym:
	jmp *-16(%r13)
_c8dyk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_entry, .-GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_entry


==================== Asm code ====================
2018-03-16 16:03:18.129128629 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_info
.type GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_info, @object
GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_entry
	.quad	0
	.quad	12884901909
	.quad	S8alj_srt+488


==================== Asm code ====================
2018-03-16 16:03:18.131811041 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode14_closure
.type GHC.IO.Handle.Types.$fReadBufferMode14_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode14_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode14_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.132661237 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode14_entry
.type GHC.IO.Handle.Types.$fReadBufferMode14_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode14_entry:
_c8dyB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dyC
_c8dyD:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8dyA
_c8dyz:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1,%esi
	movl $GHC.Read.$fRead()7_closure,%r14d
	movl $GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_closure,%ebx
	addq $-16,%rbp
	jmp stg_ap_pp_fast
_c8dyC:
	jmp *-16(%r13)
_c8dyA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadBufferMode14_entry, .-GHC.IO.Handle.Types.$fReadBufferMode14_entry


==================== Asm code ====================
2018-03-16 16:03:18.133397188 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode14_info
.type GHC.IO.Handle.Types.$fReadBufferMode14_info, @object
GHC.IO.Handle.Types.$fReadBufferMode14_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode14_entry
	.quad	0
	.quad	4294967317
	.quad	S8alj_srt+504


==================== Asm code ====================
2018-03-16 16:03:18.135636752 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode_$creadList_closure
.type GHC.IO.Handle.Types.$fReadBufferMode_$creadList_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode_$creadList_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.136274531 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode_$creadList_entry
.type GHC.IO.Handle.Types.$fReadBufferMode_$creadList_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode_$creadList_entry:
_c8dyP:
	movq %r14,%rsi
	movl $GHC.IO.Handle.Types.$fReadBufferMode14_closure,%r14d
	jmp Text.ParserCombinators.ReadP.run_entry
	.size GHC.IO.Handle.Types.$fReadBufferMode_$creadList_entry, .-GHC.IO.Handle.Types.$fReadBufferMode_$creadList_entry


==================== Asm code ====================
2018-03-16 16:03:18.136915662 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode_$creadList_info
.type GHC.IO.Handle.Types.$fReadBufferMode_$creadList_info, @object
GHC.IO.Handle.Types.$fReadBufferMode_$creadList_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadList_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S8alj_srt+512


==================== Asm code ====================
2018-03-16 16:03:18.13914765 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode_closure
.type GHC.IO.Handle.Types.$fReadBufferMode_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode_closure:
	.quad	GHC.Read.C:Read_con_info
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_closure+1
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadList_closure+1
	.quad	GHC.IO.Handle.Types.$fReadBufferMode1_closure+2
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.146098605 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c<_closure
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c<_closure, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c<_closure:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c<_info


==================== Asm code ====================
2018-03-16 16:03:18.146980678 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c<_entry
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c<_entry, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c<_entry:
_c8dz9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dza
_c8dzb:
	movq $block_c8dz1_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8dz1
_c8dz2:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dza:
	movl $GHC.IO.Handle.Types.$fOrdBufferMode_$c<_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdBufferMode_$c<_entry, .-GHC.IO.Handle.Types.$fOrdBufferMode_$c<_entry


==================== Asm code ====================
2018-03-16 16:03:18.147657693 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c<_info
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c<_info, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c<_info:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c<_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:18.14857038 UTC

.section .text
.align 8
_c8dz1:
_c8dz1:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u8dAB
_c8dz7:
	movq $block_c8dzI_info,(%rbp)
	movq 5(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8dzI
_c8dzK:
	movq (%rbx),%rax
	jmp *(%rax)
_u8dAB:
	cmpq $2,%rcx
	jb _c8dz5
_c8dz6:
	movq $block_c8dzt_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dzt
_c8dzv:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dz5:
	movq $block_c8dze_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dze
_c8dzg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dz1, .-_c8dz1


==================== Asm code ====================
2018-03-16 16:03:18.149341681 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dz1_info:
	.quad	_c8dz1
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.150032681 UTC

.section .text
.align 8
_c8dze:
_c8dze:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dAC
_u8dAD:
	addq $8,%rbp
	jmp _c8dAe
_u8dAC:
	addq $8,%rbp
	jmp _c8dAq
	.size _c8dze, .-_c8dze


==================== Asm code ====================
2018-03-16 16:03:18.150632791 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dze_info:
	.quad	_c8dze
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.151295524 UTC

.section .text
.align 8
_c8dzt:
_c8dzt:
	andl $7,%ebx
	cmpq $3,%rbx
	je _u8dAE
_u8dAF:
	addq $8,%rbp
	jmp _c8dAq
_u8dAE:
	addq $8,%rbp
	jmp _c8dAe
	.size _c8dzt, .-_c8dzt


==================== Asm code ====================
2018-03-16 16:03:18.151887204 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dzt_info:
	.quad	_c8dzt
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.1526471 UTC

.section .text
.align 8
_c8dzI:
_c8dzI:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c8dzV
_u8dAG:
	addq $16,%rbp
	jmp _c8dAq
_c8dzV:
	movq $block_c8dzT_info,(%rbp)
	movq 5(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8dzT
_c8dzW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dzI, .-_c8dzI


==================== Asm code ====================
2018-03-16 16:03:18.153311483 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dzI_info:
	.quad	_c8dzI
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.154149421 UTC

.section .text
.align 8
_c8dzT:
_c8dzT:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8dA3
_c8dAj:
	movq $block_c8dAh_info,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8dAh
_c8dAk:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dA3:
	movq $block_c8dA0_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dA0
_c8dA4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dzT, .-_c8dzT


==================== Asm code ====================
2018-03-16 16:03:18.155374808 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dzT_info:
	.quad	_c8dzT
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.156102326 UTC

.section .text
.align 8
_c8dA0:
_c8dA0:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dAI
_u8dAJ:
	addq $8,%rbp
	jmp _c8dAe
_u8dAI:
	addq $8,%rbp
	jmp _c8dAq
	.size _c8dA0, .-_c8dA0


==================== Asm code ====================
2018-03-16 16:03:18.156736255 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dA0_info:
	.quad	_c8dA0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.157945969 UTC

.section .text
.align 8
_c8dAe:
_c8dAe:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dAe, .-_c8dAe


==================== Asm code ====================
2018-03-16 16:03:18.158644495 UTC

.section .text
.align 8
_c8dAh:
_c8dAh:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8dAH
_c8dAu:
	movq 6(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Classes.ltInt_entry
_u8dAH:
	addq $16,%rbp
	jmp _c8dAq
	.size _c8dAh, .-_c8dAh


==================== Asm code ====================
2018-03-16 16:03:18.159264323 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dAh_info:
	.quad	_c8dAh
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.15991633 UTC

.section .text
.align 8
_c8dAq:
_c8dAq:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dAq, .-_c8dAq


==================== Asm code ====================
2018-03-16 16:03:18.167404835 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_closure
.type GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_closure, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_closure:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_info


==================== Asm code ====================
2018-03-16 16:03:18.168271843 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_entry
.type GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_entry, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_entry:
_c8dC1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dC2
_c8dC3:
	movq $block_c8dBT_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8dBT
_c8dBU:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dC2:
	movl $GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_entry, .-GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_entry


==================== Asm code ====================
2018-03-16 16:03:18.16897751 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_info
.type GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_info, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_info:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:18.169912401 UTC

.section .text
.align 8
_c8dBT:
_c8dBT:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u8dDx
_c8dBZ:
	movq $block_c8dCE_info,(%rbp)
	movq 5(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8dCE
_c8dCG:
	movq (%rbx),%rax
	jmp *(%rax)
_u8dDx:
	cmpq $2,%rcx
	jb _c8dBX
_c8dBY:
	movq $block_c8dCl_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dCl
_c8dCn:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dBX:
	movq $block_c8dC6_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dC6
_c8dC8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dBT, .-_c8dBT


==================== Asm code ====================
2018-03-16 16:03:18.170651767 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dBT_info:
	.quad	_c8dBT
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.171354748 UTC

.section .text
.align 8
_c8dC6:
_c8dC6:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dDz
_u8dDA:
	addq $8,%rbp
	jmp _c8dDa
_u8dDz:
	addq $8,%rbp
	jmp _c8dD6
	.size _c8dC6, .-_c8dC6


==================== Asm code ====================
2018-03-16 16:03:18.171946773 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dC6_info:
	.quad	_c8dC6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.172689608 UTC

.section .text
.align 8
_c8dCl:
_c8dCl:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _u8dDy
_u8dDB:
	addq $8,%rbp
	jmp _c8dDa
_u8dDD:
	addq $8,%rbp
	jmp _c8dDm
_u8dDy:
	cmpq $2,%rbx
	jb _u8dDD
_u8dDC:
	addq $8,%rbp
	jmp _c8dD6
	.size _c8dCl, .-_c8dCl


==================== Asm code ====================
2018-03-16 16:03:18.173776588 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dCl_info:
	.quad	_c8dCl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.17452029 UTC

.section .text
.align 8
_c8dCE:
_c8dCE:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c8dCR
_u8dDE:
	addq $16,%rbp
	jmp _c8dDm
_c8dCR:
	movq $block_c8dCP_info,(%rbp)
	movq 5(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8dCP
_c8dCS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dCE, .-_c8dCE


==================== Asm code ====================
2018-03-16 16:03:18.175132449 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dCE_info:
	.quad	_c8dCE
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.175923093 UTC

.section .text
.align 8
_c8dCP:
_c8dCP:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8dCZ
_c8dDf:
	movq $block_c8dDd_info,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8dDd
_c8dDg:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dCZ:
	movq $block_c8dCW_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dCW
_c8dD0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dCP, .-_c8dCP


==================== Asm code ====================
2018-03-16 16:03:18.176585955 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dCP_info:
	.quad	_c8dCP
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.177309804 UTC

.section .text
.align 8
_c8dCW:
_c8dCW:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dDG
_u8dDH:
	addq $8,%rbp
	jmp _c8dDa
_u8dDG:
	addq $8,%rbp
	jmp _c8dD6
	.size _c8dCW, .-_c8dCW


==================== Asm code ====================
2018-03-16 16:03:18.17787814 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dCW_info:
	.quad	_c8dCW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.17850997 UTC

.section .text
.align 8
_c8dD6:
_c8dD6:
	movl $GHC.Types.EQ_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dD6, .-_c8dD6


==================== Asm code ====================
2018-03-16 16:03:18.179136453 UTC

.section .text
.align 8
_c8dDa:
_c8dDa:
	movl $GHC.Types.LT_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dDa, .-_c8dDa


==================== Asm code ====================
2018-03-16 16:03:18.179845278 UTC

.section .text
.align 8
_c8dDd:
_c8dDd:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8dDF
_c8dDq:
	movq 6(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Classes.compareInt_entry
_u8dDF:
	addq $16,%rbp
	jmp _c8dDm
	.size _c8dDd, .-_c8dDd


==================== Asm code ====================
2018-03-16 16:03:18.180461043 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dDd_info:
	.quad	_c8dDd
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.181106658 UTC

.section .text
.align 8
_c8dDm:
_c8dDm:
	movl $GHC.Types.GT_closure+3,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dDm, .-_c8dDm


==================== Asm code ====================
2018-03-16 16:03:18.188211252 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqBufferMode_$c==_closure
.type GHC.IO.Handle.Types.$fEqBufferMode_$c==_closure, @object
GHC.IO.Handle.Types.$fEqBufferMode_$c==_closure:
	.quad	GHC.IO.Handle.Types.$fEqBufferMode_$c==_info


==================== Asm code ====================
2018-03-16 16:03:18.188994257 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fEqBufferMode_$c==_entry
.type GHC.IO.Handle.Types.$fEqBufferMode_$c==_entry, @object
GHC.IO.Handle.Types.$fEqBufferMode_$c==_entry:
_c8dF2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dF3
_c8dF4:
	movq $block_c8dEU_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8dEU
_c8dEV:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dF3:
	movl $GHC.IO.Handle.Types.$fEqBufferMode_$c==_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fEqBufferMode_$c==_entry, .-GHC.IO.Handle.Types.$fEqBufferMode_$c==_entry


==================== Asm code ====================
2018-03-16 16:03:18.189713785 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqBufferMode_$c==_info
.type GHC.IO.Handle.Types.$fEqBufferMode_$c==_info, @object
GHC.IO.Handle.Types.$fEqBufferMode_$c==_info:
	.quad	GHC.IO.Handle.Types.$fEqBufferMode_$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:18.190607677 UTC

.section .text
.align 8
_c8dEU:
_c8dEU:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u8dGu
_c8dF0:
	movq $block_c8dFB_info,(%rbp)
	movq 5(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8dFB
_c8dFD:
	movq (%rbx),%rax
	jmp *(%rax)
_u8dGu:
	cmpq $2,%rcx
	jb _c8dEY
_c8dEZ:
	movq $block_c8dFm_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dFm
_c8dFo:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dEY:
	movq $block_c8dF7_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dF7
_c8dF9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dEU, .-_c8dEU


==================== Asm code ====================
2018-03-16 16:03:18.191336931 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dEU_info:
	.quad	_c8dEU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.192029046 UTC

.section .text
.align 8
_c8dF7:
_c8dF7:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dGv
_u8dGw:
	addq $8,%rbp
	jmp _c8dGj
_u8dGv:
	addq $8,%rbp
	jmp _c8dG3
	.size _c8dF7, .-_c8dF7


==================== Asm code ====================
2018-03-16 16:03:18.192629665 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dF7_info:
	.quad	_c8dF7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.193672882 UTC

.section .text
.align 8
_c8dFm:
_c8dFm:
	andl $7,%ebx
	cmpq $2,%rbx
	je _u8dGx
_u8dGy:
	addq $8,%rbp
	jmp _c8dGj
_u8dGx:
	addq $8,%rbp
	jmp _c8dG3
	.size _c8dFm, .-_c8dFm


==================== Asm code ====================
2018-03-16 16:03:18.19425107 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dFm_info:
	.quad	_c8dFm
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.194980419 UTC

.section .text
.align 8
_c8dFB:
_c8dFB:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c8dFO
_u8dGz:
	addq $16,%rbp
	jmp _c8dGj
_c8dFO:
	movq $block_c8dFM_info,(%rbp)
	movq 5(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8dFM
_c8dFP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dFB, .-_c8dFB


==================== Asm code ====================
2018-03-16 16:03:18.195621633 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dFB_info:
	.quad	_c8dFB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.196415203 UTC

.section .text
.align 8
_c8dFM:
_c8dFM:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8dFW
_c8dGc:
	movq $block_c8dGa_info,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8dGa
_c8dGd:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dFW:
	movq $block_c8dFT_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dFT
_c8dFX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dFM, .-_c8dFM


==================== Asm code ====================
2018-03-16 16:03:18.197674969 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dFM_info:
	.quad	_c8dFM
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.198389034 UTC

.section .text
.align 8
_c8dFT:
_c8dFT:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dGB
_u8dGC:
	addq $8,%rbp
	jmp _c8dGj
_u8dGB:
	addq $8,%rbp
	jmp _c8dG3
	.size _c8dFT, .-_c8dFT


==================== Asm code ====================
2018-03-16 16:03:18.199014207 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dFT_info:
	.quad	_c8dFT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.199617499 UTC

.section .text
.align 8
_c8dG3:
_c8dG3:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dG3, .-_c8dG3


==================== Asm code ====================
2018-03-16 16:03:18.200354885 UTC

.section .text
.align 8
_c8dGa:
_c8dGa:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8dGA
_c8dGn:
	movq 6(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Classes.eqInt_entry
_u8dGA:
	addq $16,%rbp
	jmp _c8dGj
	.size _c8dGa, .-_c8dGa


==================== Asm code ====================
2018-03-16 16:03:18.200969798 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dGa_info:
	.quad	_c8dGa
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.201734579 UTC

.section .text
.align 8
_c8dGj:
_c8dGj:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dGj, .-_c8dGj


==================== Asm code ====================
2018-03-16 16:03:18.21032329 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqBufferMode_$c/=_closure
.type GHC.IO.Handle.Types.$fEqBufferMode_$c/=_closure, @object
GHC.IO.Handle.Types.$fEqBufferMode_$c/=_closure:
	.quad	GHC.IO.Handle.Types.$fEqBufferMode_$c/=_info


==================== Asm code ====================
2018-03-16 16:03:18.211092112 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fEqBufferMode_$c/=_entry
.type GHC.IO.Handle.Types.$fEqBufferMode_$c/=_entry, @object
GHC.IO.Handle.Types.$fEqBufferMode_$c/=_entry:
_c8dHU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dHV
_c8dHW:
	movq $block_c8dHM_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8dHM
_c8dHN:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dHV:
	movl $GHC.IO.Handle.Types.$fEqBufferMode_$c/=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fEqBufferMode_$c/=_entry, .-GHC.IO.Handle.Types.$fEqBufferMode_$c/=_entry


==================== Asm code ====================
2018-03-16 16:03:18.211751333 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqBufferMode_$c/=_info
.type GHC.IO.Handle.Types.$fEqBufferMode_$c/=_info, @object
GHC.IO.Handle.Types.$fEqBufferMode_$c/=_info:
	.quad	GHC.IO.Handle.Types.$fEqBufferMode_$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:18.21267055 UTC

.section .text
.align 8
_c8dHM:
_c8dHM:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u8dJD
_c8dHS:
	movq $block_c8dIt_info,(%rbp)
	movq 5(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8dIt
_c8dIv:
	movq (%rbx),%rax
	jmp *(%rax)
_u8dJD:
	cmpq $2,%rcx
	jb _c8dHQ
_c8dHR:
	movq $block_c8dIe_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dIe
_c8dIg:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dHQ:
	movq $block_c8dHZ_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dHZ
_c8dI1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dHM, .-_c8dHM


==================== Asm code ====================
2018-03-16 16:03:18.213426185 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dHM_info:
	.quad	_c8dHM
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.214094505 UTC

.section .text
.align 8
_c8dHZ:
_c8dHZ:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dJE
_u8dJF:
	addq $8,%rbp
	jmp _c8dJv
_u8dJE:
	addq $8,%rbp
	jmp _c8dJw
	.size _c8dHZ, .-_c8dHZ


==================== Asm code ====================
2018-03-16 16:03:18.214687685 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dHZ_info:
	.quad	_c8dHZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.215343759 UTC

.section .text
.align 8
_c8dIe:
_c8dIe:
	andl $7,%ebx
	cmpq $2,%rbx
	je _u8dJG
_u8dJH:
	addq $8,%rbp
	jmp _c8dJv
_u8dJG:
	addq $8,%rbp
	jmp _c8dJw
	.size _c8dIe, .-_c8dIe


==================== Asm code ====================
2018-03-16 16:03:18.215974658 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dIe_info:
	.quad	_c8dIe
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.216727543 UTC

.section .text
.align 8
_c8dIt:
_c8dIt:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c8dIG
_u8dJI:
	addq $16,%rbp
	jmp _c8dJv
_c8dIG:
	movq $block_c8dIE_info,(%rbp)
	movq 5(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8dIE
_c8dIH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dIt, .-_c8dIt


==================== Asm code ====================
2018-03-16 16:03:18.21740245 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dIt_info:
	.quad	_c8dIt
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.218153153 UTC

.section .text
.align 8
_c8dIE:
_c8dIE:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8dIO
_c8dJ4:
	movq $block_c8dJ2_info,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8dJ2
_c8dJ5:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dIO:
	movq $block_c8dIL_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dIL
_c8dIP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dIE, .-_c8dIE


==================== Asm code ====================
2018-03-16 16:03:18.218812137 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dIE_info:
	.quad	_c8dIE
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.219481186 UTC

.section .text
.align 8
_c8dIL:
_c8dIL:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dJM
_u8dJN:
	addq $8,%rbp
	jmp _c8dJv
_u8dJM:
	addq $8,%rbp
	jmp _c8dJw
	.size _c8dIL, .-_c8dIL


==================== Asm code ====================
2018-03-16 16:03:18.220073323 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dIL_info:
	.quad	_c8dIL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.22085135 UTC

.section .text
.align 8
_c8dJ2:
_c8dJ2:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8dJJ
_c8dJl:
	movq $block_c8dJe_info,(%rbp)
	movq 6(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8dJe
_c8dJf:
	movq (%rbx),%rax
	jmp *(%rax)
_u8dJJ:
	addq $16,%rbp
	jmp _c8dJv
	.size _c8dJ2, .-_c8dJ2


==================== Asm code ====================
2018-03-16 16:03:18.221739606 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dJ2_info:
	.quad	_c8dJ2
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.222427188 UTC

.section .text
.align 8
_c8dJe:
_c8dJe:
	movq $block_c8dJj_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8dJj
_c8dJn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dJe, .-_c8dJe


==================== Asm code ====================
2018-03-16 16:03:18.223026493 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dJe_info:
	.quad	_c8dJe
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.22370668 UTC

.section .text
.align 8
_c8dJj:
_c8dJj:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	je _u8dJK
_u8dJL:
	addq $16,%rbp
	jmp _c8dJv
_u8dJK:
	addq $16,%rbp
	jmp _c8dJw
	.size _c8dJj, .-_c8dJj


==================== Asm code ====================
2018-03-16 16:03:18.2242928 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dJj_info:
	.quad	_c8dJj
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.224867071 UTC

.section .text
.align 8
_c8dJw:
_c8dJw:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dJw, .-_c8dJw


==================== Asm code ====================
2018-03-16 16:03:18.225536682 UTC

.section .text
.align 8
_c8dJv:
_c8dJv:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dJv, .-_c8dJv


==================== Asm code ====================
2018-03-16 16:03:18.22746295 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqBufferMode_closure
.type GHC.IO.Handle.Types.$fEqBufferMode_closure, @object
GHC.IO.Handle.Types.$fEqBufferMode_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.IO.Handle.Types.$fEqBufferMode_$c==_closure+2
	.quad	GHC.IO.Handle.Types.$fEqBufferMode_$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.235749125 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_closure
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_closure, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_closure:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_info


==================== Asm code ====================
2018-03-16 16:03:18.236575022 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_entry
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_entry, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_entry:
_c8dLj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dLk
_c8dLl:
	movq $block_c8dLb_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8dLb
_c8dLc:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dLk:
	movl $GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_entry, .-GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_entry


==================== Asm code ====================
2018-03-16 16:03:18.237291693 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_info
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_info, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_info:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:18.238203838 UTC

.section .text
.align 8
_c8dLb:
_c8dLb:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u8dN2
_c8dLh:
	movq $block_c8dLS_info,(%rbp)
	movq 5(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8dLS
_c8dLU:
	movq (%rbx),%rax
	jmp *(%rax)
_u8dN2:
	cmpq $2,%rcx
	jb _c8dLf
_c8dLg:
	movq $block_c8dLD_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dLD
_c8dLF:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dLf:
	movq $block_c8dLo_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dLo
_c8dLq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dLb, .-_c8dLb


==================== Asm code ====================
2018-03-16 16:03:18.238982351 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dLb_info:
	.quad	_c8dLb
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.240226144 UTC

.section .text
.align 8
_c8dLo:
_c8dLo:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dN3
_u8dN4:
	addq $8,%rbp
	jmp _c8dMV
_u8dN3:
	addq $8,%rbp
	jmp _c8dMU
	.size _c8dLo, .-_c8dLo


==================== Asm code ====================
2018-03-16 16:03:18.240869729 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dLo_info:
	.quad	_c8dLo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.241867116 UTC

.section .text
.align 8
_c8dLD:
_c8dLD:
	andl $7,%ebx
	cmpq $3,%rbx
	je _u8dN5
_u8dN6:
	addq $8,%rbp
	jmp _c8dMU
_u8dN5:
	addq $8,%rbp
	jmp _c8dMV
	.size _c8dLD, .-_c8dLD


==================== Asm code ====================
2018-03-16 16:03:18.24244509 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dLD_info:
	.quad	_c8dLD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.243137805 UTC

.section .text
.align 8
_c8dLS:
_c8dLS:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c8dM5
_u8dN7:
	addq $16,%rbp
	jmp _c8dMU
_c8dM5:
	movq $block_c8dM3_info,(%rbp)
	movq 5(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8dM3
_c8dM6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dLS, .-_c8dLS


==================== Asm code ====================
2018-03-16 16:03:18.243747466 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dLS_info:
	.quad	_c8dLS
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.244524786 UTC

.section .text
.align 8
_c8dM3:
_c8dM3:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8dMd
_c8dMt:
	movq $block_c8dMr_info,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8dMr
_c8dMu:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dMd:
	movq $block_c8dMa_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dMa
_c8dMe:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dM3, .-_c8dM3


==================== Asm code ====================
2018-03-16 16:03:18.245165977 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dM3_info:
	.quad	_c8dM3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.245881881 UTC

.section .text
.align 8
_c8dMa:
_c8dMa:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dNb
_u8dNc:
	addq $8,%rbp
	jmp _c8dMV
_u8dNb:
	addq $8,%rbp
	jmp _c8dMU
	.size _c8dMa, .-_c8dMa


==================== Asm code ====================
2018-03-16 16:03:18.246433777 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dMa_info:
	.quad	_c8dMa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.24718181 UTC

.section .text
.align 8
_c8dMr:
_c8dMr:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8dN8
_c8dMK:
	movq $block_c8dMD_info,(%rbp)
	movq 6(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8dMD
_c8dME:
	movq (%rbx),%rax
	jmp *(%rax)
_u8dN8:
	addq $16,%rbp
	jmp _c8dMU
	.size _c8dMr, .-_c8dMr


==================== Asm code ====================
2018-03-16 16:03:18.247820622 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dMr_info:
	.quad	_c8dMr
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.248500668 UTC

.section .text
.align 8
_c8dMD:
_c8dMD:
	movq $block_c8dMI_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8dMI
_c8dMM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dMD, .-_c8dMD


==================== Asm code ====================
2018-03-16 16:03:18.249108462 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dMD_info:
	.quad	_c8dMD
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.249828581 UTC

.section .text
.align 8
_c8dMI:
_c8dMI:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jge _u8dNa
_u8dN9:
	addq $16,%rbp
	jmp _c8dMV
_u8dNa:
	addq $16,%rbp
	jmp _c8dMU
	.size _c8dMI, .-_c8dMI


==================== Asm code ====================
2018-03-16 16:03:18.250419977 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dMI_info:
	.quad	_c8dMI
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.25104203 UTC

.section .text
.align 8
_c8dMV:
_c8dMV:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dMV, .-_c8dMV


==================== Asm code ====================
2018-03-16 16:03:18.251682216 UTC

.section .text
.align 8
_c8dMU:
_c8dMU:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dMU, .-_c8dMU


==================== Asm code ====================
2018-03-16 16:03:18.259696606 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_closure
.type GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_closure, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_closure:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_info


==================== Asm code ====================
2018-03-16 16:03:18.260546171 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_entry
.type GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_entry, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_entry:
_c8dOH:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dOI
_c8dOJ:
	movq $block_c8dOz_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8dOz
_c8dOA:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dOI:
	movl $GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_entry, .-GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_entry


==================== Asm code ====================
2018-03-16 16:03:18.261190105 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_info
.type GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_info, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_info:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:18.262250239 UTC

.section .text
.align 8
_c8dOz:
_c8dOz:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u8dQd
_c8dOF:
	movq $block_c8dP4_info,-8(%rbp)
	movq %rbx,%rcx
	movq 5(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8dP4
_c8dP6:
	movq (%rbx),%rax
	jmp *(%rax)
_u8dQd:
	cmpq $2,%rcx
	jb _c8dOD
_c8dOE:
	movq $block_c8dOP_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dOP
_c8dOR:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dOD:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dOz, .-_c8dOz


==================== Asm code ====================
2018-03-16 16:03:18.263008422 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dOz_info:
	.quad	_c8dOz
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.263707716 UTC

.section .text
.align 8
_c8dOP:
_c8dOP:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c8dP1
_c8dOX:
	movl $GHC.IO.Handle.Types.LineBuffering_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8dP1:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dOP, .-_c8dOP


==================== Asm code ====================
2018-03-16 16:03:18.264299842 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dOP_info:
	.quad	_c8dOP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.265053399 UTC

.section .text
.align 8
_c8dP4:
_c8dP4:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c8dPh
_u8dQe:
	addq $16,%rbp
	jmp _c8dQ6
_c8dPh:
	movq $block_c8dPf_info,-8(%rbp)
	movq %rbx,%rax
	movq 5(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8dPf
_c8dPi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dP4, .-_c8dP4


==================== Asm code ====================
2018-03-16 16:03:18.265758897 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dP4_info:
	.quad	_c8dP4
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.266582268 UTC

.section .text
.align 8
_c8dPf:
_c8dPf:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8dPp
_c8dPF:
	movq $block_c8dPD_info,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8dPD
_c8dPG:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dPp:
	movq $block_c8dPm_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dPm
_c8dPq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dPf, .-_c8dPf


==================== Asm code ====================
2018-03-16 16:03:18.267275428 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dPf_info:
	.quad	_c8dPf
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.267951804 UTC

.section .text
.align 8
_c8dPm:
_c8dPm:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dQi
_u8dQj:
	addq $8,%rbp
	jmp _c8dQ7
_u8dQi:
	addq $16,%rbp
	jmp _c8dQ6
	.size _c8dPm, .-_c8dPm


==================== Asm code ====================
2018-03-16 16:03:18.268550472 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dPm_info:
	.quad	_c8dPm
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.269306248 UTC

.section .text
.align 8
_c8dPD:
_c8dPD:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8dQf
_c8dPW:
	movq $block_c8dPP_info,(%rbp)
	movq 6(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8dPP
_c8dPQ:
	movq (%rbx),%rax
	jmp *(%rax)
_u8dQf:
	addq $24,%rbp
	jmp _c8dQ6
	.size _c8dPD, .-_c8dPD


==================== Asm code ====================
2018-03-16 16:03:18.269915535 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dPD_info:
	.quad	_c8dPD
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.270586756 UTC

.section .text
.align 8
_c8dPP:
_c8dPP:
	movq $block_c8dPU_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8dPU
_c8dPY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dPP, .-_c8dPP


==================== Asm code ====================
2018-03-16 16:03:18.271190096 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dPP_info:
	.quad	_c8dPP
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.271824758 UTC

.section .text
.align 8
_c8dPU:
_c8dPU:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jge _u8dQh
_u8dQg:
	addq $16,%rbp
	jmp _c8dQ7
_u8dQh:
	addq $24,%rbp
	jmp _c8dQ6
	.size _c8dPU, .-_c8dPU


==================== Asm code ====================
2018-03-16 16:03:18.272446329 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dPU_info:
	.quad	_c8dPU
	.quad	67
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.273044439 UTC

.section .text
.align 8
_c8dQ7:
_c8dQ7:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dQ7, .-_c8dQ7


==================== Asm code ====================
2018-03-16 16:03:18.273778494 UTC

.section .text
.align 8
_c8dQ6:
_c8dQ6:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dQ6, .-_c8dQ6


==================== Asm code ====================
2018-03-16 16:03:18.28249219 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_closure
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_closure, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_closure:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_info


==================== Asm code ====================
2018-03-16 16:03:18.283471772 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_entry
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_entry, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_entry:
_c8dRK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dRL
_c8dRM:
	movq $block_c8dRC_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8dRC
_c8dRD:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dRL:
	movl $GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_entry, .-GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_entry


==================== Asm code ====================
2018-03-16 16:03:18.284168222 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_info
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_info, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_info:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:18.285039449 UTC

.section .text
.align 8
_c8dRC:
_c8dRC:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u8dTt
_c8dRI:
	movq $block_c8dSj_info,(%rbp)
	movq 5(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8dSj
_c8dSl:
	movq (%rbx),%rax
	jmp *(%rax)
_u8dTt:
	cmpq $2,%rcx
	jb _c8dRG
_c8dRH:
	movq $block_c8dS4_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dS4
_c8dS6:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dRG:
	movq $block_c8dRP_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dRP
_c8dRR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dRC, .-_c8dRC


==================== Asm code ====================
2018-03-16 16:03:18.285835893 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dRC_info:
	.quad	_c8dRC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.286496314 UTC

.section .text
.align 8
_c8dRP:
_c8dRP:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dTu
_u8dTv:
	addq $8,%rbp
	jmp _c8dTm
_u8dTu:
	addq $8,%rbp
	jmp _c8dTl
	.size _c8dRP, .-_c8dRP


==================== Asm code ====================
2018-03-16 16:03:18.287109106 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dRP_info:
	.quad	_c8dRP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.287791666 UTC

.section .text
.align 8
_c8dS4:
_c8dS4:
	andl $7,%ebx
	cmpq $3,%rbx
	je _u8dTw
_u8dTx:
	addq $8,%rbp
	jmp _c8dTl
_u8dTw:
	addq $8,%rbp
	jmp _c8dTm
	.size _c8dS4, .-_c8dS4


==================== Asm code ====================
2018-03-16 16:03:18.288407678 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dS4_info:
	.quad	_c8dS4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.289136904 UTC

.section .text
.align 8
_c8dSj:
_c8dSj:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c8dSw
_u8dTy:
	addq $16,%rbp
	jmp _c8dTl
_c8dSw:
	movq $block_c8dSu_info,(%rbp)
	movq 5(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8dSu
_c8dSx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dSj, .-_c8dSj


==================== Asm code ====================
2018-03-16 16:03:18.289812808 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dSj_info:
	.quad	_c8dSj
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.290597 UTC

.section .text
.align 8
_c8dSu:
_c8dSu:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8dSE
_c8dSU:
	movq $block_c8dSS_info,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8dSS
_c8dSV:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dSE:
	movq $block_c8dSB_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dSB
_c8dSF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dSu, .-_c8dSu


==================== Asm code ====================
2018-03-16 16:03:18.291238227 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dSu_info:
	.quad	_c8dSu
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.291927867 UTC

.section .text
.align 8
_c8dSB:
_c8dSB:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dTC
_u8dTD:
	addq $8,%rbp
	jmp _c8dTm
_u8dTC:
	addq $8,%rbp
	jmp _c8dTl
	.size _c8dSB, .-_c8dSB


==================== Asm code ====================
2018-03-16 16:03:18.292564274 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dSB_info:
	.quad	_c8dSB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.293371161 UTC

.section .text
.align 8
_c8dSS:
_c8dSS:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8dTz
_c8dTb:
	movq $block_c8dT4_info,(%rbp)
	movq 6(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8dT4
_c8dT5:
	movq (%rbx),%rax
	jmp *(%rax)
_u8dTz:
	addq $16,%rbp
	jmp _c8dTl
	.size _c8dSS, .-_c8dSS


==================== Asm code ====================
2018-03-16 16:03:18.294021648 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dSS_info:
	.quad	_c8dSS
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.294713108 UTC

.section .text
.align 8
_c8dT4:
_c8dT4:
	movq $block_c8dT9_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8dT9
_c8dTd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dT4, .-_c8dT4


==================== Asm code ====================
2018-03-16 16:03:18.295325422 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dT4_info:
	.quad	_c8dT4
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.296034997 UTC

.section .text
.align 8
_c8dT9:
_c8dT9:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jge _u8dTB
_u8dTA:
	addq $16,%rbp
	jmp _c8dTm
_u8dTB:
	addq $16,%rbp
	jmp _c8dTl
	.size _c8dT9, .-_c8dT9


==================== Asm code ====================
2018-03-16 16:03:18.296679893 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dT9_info:
	.quad	_c8dT9
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.297371322 UTC

.section .text
.align 8
_c8dTm:
_c8dTm:
	movl $GHC.Types.False_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dTm, .-_c8dTm


==================== Asm code ====================
2018-03-16 16:03:18.298051305 UTC

.section .text
.align 8
_c8dTl:
_c8dTl:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dTl, .-_c8dTl


==================== Asm code ====================
2018-03-16 16:03:18.300369484 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c>_closure
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c>_closure, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c>_closure:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c>_info


==================== Asm code ====================
2018-03-16 16:03:18.300970773 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c>_entry
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c>_entry, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c>_entry:
_c8dV0:
	movq %rsi,%rax
	movq %r14,%rsi
	movq %rax,%r14
	jmp GHC.IO.Handle.Types.$fOrdBufferMode_$c<_entry
	.size GHC.IO.Handle.Types.$fOrdBufferMode_$c>_entry, .-GHC.IO.Handle.Types.$fOrdBufferMode_$c>_entry


==================== Asm code ====================
2018-03-16 16:03:18.301850709 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c>_info
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c>_info, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c>_info:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:18.310216639 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_closure
.type GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_closure, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_closure:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_info


==================== Asm code ====================
2018-03-16 16:03:18.311079662 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_entry
.type GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_entry, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_entry:
_c8dVj:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dVk
_c8dVl:
	movq $block_c8dVb_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8dVb
_c8dVc:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dVk:
	movl $GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_entry, .-GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_entry


==================== Asm code ====================
2018-03-16 16:03:18.311793189 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_info
.type GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_info, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_info:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:18.31270373 UTC

.section .text
.align 8
_c8dVb:
_c8dVb:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u8dWV
_c8dVh:
	movq $block_c8dVM_info,-8(%rbp)
	movq %rbx,%rcx
	movq 5(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8dVM
_c8dVO:
	movq (%rbx),%rax
	jmp *(%rax)
_u8dWV:
	cmpq $2,%rcx
	jb _c8dVf
_c8dVg:
	movq $block_c8dVx_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dVx
_c8dVz:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dVf:
	movq $block_c8dVo_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dVo
_c8dVq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dVb, .-_c8dVb


==================== Asm code ====================
2018-03-16 16:03:18.313496018 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dVb_info:
	.quad	_c8dVb
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.31414582 UTC

.section .text
.align 8
_c8dVo:
_c8dVo:
	movl $GHC.IO.Handle.Types.NoBuffering_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dVo, .-_c8dVo


==================== Asm code ====================
2018-03-16 16:03:18.314728342 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dVo_info:
	.quad	_c8dVo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.31544839 UTC

.section .text
.align 8
_c8dVx:
_c8dVx:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c8dVJ
_c8dVF:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8dVJ:
	movl $GHC.IO.Handle.Types.LineBuffering_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8dVx, .-_c8dVx


==================== Asm code ====================
2018-03-16 16:03:18.316100669 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dVx_info:
	.quad	_c8dVx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.316862923 UTC

.section .text
.align 8
_c8dVM:
_c8dVM:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c8dVZ
_u8dWW:
	movq %rbx,16(%rbp)
	addq $16,%rbp
	jmp _c8dWO
_c8dVZ:
	movq $block_c8dVX_info,-8(%rbp)
	movq %rbx,%rax
	movq 5(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8dVX
_c8dW0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dVM, .-_c8dVM


==================== Asm code ====================
2018-03-16 16:03:18.317617473 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dVM_info:
	.quad	_c8dVM
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.318420801 UTC

.section .text
.align 8
_c8dVX:
_c8dVX:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8dW7
_c8dWn:
	movq $block_c8dWl_info,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8dWl
_c8dWo:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dW7:
	movq $block_c8dW4_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8dW4
_c8dW8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dVX, .-_c8dVX


==================== Asm code ====================
2018-03-16 16:03:18.319128655 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dVX_info:
	.quad	_c8dVX
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.32042421 UTC

.section .text
.align 8
_c8dW4:
_c8dW4:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8dX0
_u8dX1:
	addq $16,%rbp
	jmp _c8dWP
_u8dX0:
	movq 8(%rbp),%rax
	movq %rax,16(%rbp)
	addq $16,%rbp
	jmp _c8dWO
	.size _c8dW4, .-_c8dW4


==================== Asm code ====================
2018-03-16 16:03:18.321084974 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dW4_info:
	.quad	_c8dW4
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.321895637 UTC

.section .text
.align 8
_c8dWl:
_c8dWl:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8dWX
_c8dWE:
	movq $block_c8dWx_info,(%rbp)
	movq 6(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8dWx
_c8dWy:
	movq (%rbx),%rax
	jmp *(%rax)
_u8dWX:
	movq 16(%rbp),%rax
	movq %rax,24(%rbp)
	addq $24,%rbp
	jmp _c8dWO
	.size _c8dWl, .-_c8dWl


==================== Asm code ====================
2018-03-16 16:03:18.322555756 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dWl_info:
	.quad	_c8dWl
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.323244976 UTC

.section .text
.align 8
_c8dWx:
_c8dWx:
	movq $block_c8dWC_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8dWC
_c8dWG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dWx, .-_c8dWx


==================== Asm code ====================
2018-03-16 16:03:18.323833594 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dWx_info:
	.quad	_c8dWx
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.324522213 UTC

.section .text
.align 8
_c8dWC:
_c8dWC:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jge _u8dWZ
_u8dWY:
	addq $24,%rbp
	jmp _c8dWP
_u8dWZ:
	movq 16(%rbp),%rax
	movq %rax,24(%rbp)
	addq $24,%rbp
	jmp _c8dWO
	.size _c8dWC, .-_c8dWC


==================== Asm code ====================
2018-03-16 16:03:18.325132676 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dWC_info:
	.quad	_c8dWC
	.quad	67
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.325812979 UTC

.section .text
.align 8
_c8dWP:
_c8dWP:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dWP, .-_c8dWP


==================== Asm code ====================
2018-03-16 16:03:18.326443596 UTC

.section .text
.align 8
_c8dWO:
_c8dWO:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dWO, .-_c8dWO


==================== Asm code ====================
2018-03-16 16:03:18.328350891 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_closure
.type GHC.IO.Handle.Types.$fOrdBufferMode_closure, @object
GHC.IO.Handle.Types.$fOrdBufferMode_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.IO.Handle.Types.$fEqBufferMode_closure+1
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c<_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c>_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.332169723 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haOtherSide_closure
.type GHC.IO.Handle.Types.haOtherSide_closure, @object
GHC.IO.Handle.Types.haOtherSide_closure:
	.quad	GHC.IO.Handle.Types.haOtherSide_info


==================== Asm code ====================
2018-03-16 16:03:18.332932122 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.haOtherSide_entry
.type GHC.IO.Handle.Types.haOtherSide_entry, @object
GHC.IO.Handle.Types.haOtherSide_entry:
_c8dYv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dYw
_c8dYx:
	movq $block_c8dYs_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8dYs
_c8dYt:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dYw:
	movl $GHC.IO.Handle.Types.haOtherSide_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.haOtherSide_entry, .-GHC.IO.Handle.Types.haOtherSide_entry


==================== Asm code ====================
2018-03-16 16:03:18.333610667 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.haOtherSide_info
.type GHC.IO.Handle.Types.haOtherSide_info, @object
GHC.IO.Handle.Types.haOtherSide_info:
	.quad	GHC.IO.Handle.Types.haOtherSide_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:18.334236033 UTC

.section .text
.align 8
_c8dYs:
_c8dYs:
	movq 127(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dYs, .-_c8dYs


==================== Asm code ====================
2018-03-16 16:03:18.334791793 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dYs_info:
	.quad	_c8dYs
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.337848204 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haOutputNL_closure
.type GHC.IO.Handle.Types.haOutputNL_closure, @object
GHC.IO.Handle.Types.haOutputNL_closure:
	.quad	GHC.IO.Handle.Types.haOutputNL_info


==================== Asm code ====================
2018-03-16 16:03:18.338607812 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.haOutputNL_entry
.type GHC.IO.Handle.Types.haOutputNL_entry, @object
GHC.IO.Handle.Types.haOutputNL_entry:
_c8dYU:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dYV
_c8dYW:
	movq $block_c8dYR_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8dYR
_c8dYS:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dYV:
	movl $GHC.IO.Handle.Types.haOutputNL_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.haOutputNL_entry, .-GHC.IO.Handle.Types.haOutputNL_entry


==================== Asm code ====================
2018-03-16 16:03:18.339248563 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.haOutputNL_info
.type GHC.IO.Handle.Types.haOutputNL_info, @object
GHC.IO.Handle.Types.haOutputNL_info:
	.quad	GHC.IO.Handle.Types.haOutputNL_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:18.339917764 UTC

.section .text
.align 8
_c8dYR:
_c8dYR:
	movq 119(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dYR, .-_c8dYR


==================== Asm code ====================
2018-03-16 16:03:18.340487912 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dYR_info:
	.quad	_c8dYR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.343178495 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haInputNL_closure
.type GHC.IO.Handle.Types.haInputNL_closure, @object
GHC.IO.Handle.Types.haInputNL_closure:
	.quad	GHC.IO.Handle.Types.haInputNL_info


==================== Asm code ====================
2018-03-16 16:03:18.343926745 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.haInputNL_entry
.type GHC.IO.Handle.Types.haInputNL_entry, @object
GHC.IO.Handle.Types.haInputNL_entry:
_c8dZj:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dZk
_c8dZl:
	movq $block_c8dZg_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8dZg
_c8dZh:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dZk:
	movl $GHC.IO.Handle.Types.haInputNL_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.haInputNL_entry, .-GHC.IO.Handle.Types.haInputNL_entry


==================== Asm code ====================
2018-03-16 16:03:18.344576388 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.haInputNL_info
.type GHC.IO.Handle.Types.haInputNL_info, @object
GHC.IO.Handle.Types.haInputNL_info:
	.quad	GHC.IO.Handle.Types.haInputNL_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:18.345265535 UTC

.section .text
.align 8
_c8dZg:
_c8dZg:
	movq 111(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dZg, .-_c8dZg


==================== Asm code ====================
2018-03-16 16:03:18.345876085 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dZg_info:
	.quad	_c8dZg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.34854587 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haCodec_closure
.type GHC.IO.Handle.Types.haCodec_closure, @object
GHC.IO.Handle.Types.haCodec_closure:
	.quad	GHC.IO.Handle.Types.haCodec_info


==================== Asm code ====================
2018-03-16 16:03:18.349348139 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.haCodec_entry
.type GHC.IO.Handle.Types.haCodec_entry, @object
GHC.IO.Handle.Types.haCodec_entry:
_c8dZI:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8dZJ
_c8dZK:
	movq $block_c8dZF_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8dZF
_c8dZG:
	movq (%rbx),%rax
	jmp *(%rax)
_c8dZJ:
	movl $GHC.IO.Handle.Types.haCodec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.haCodec_entry, .-GHC.IO.Handle.Types.haCodec_entry


==================== Asm code ====================
2018-03-16 16:03:18.350041463 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.haCodec_info
.type GHC.IO.Handle.Types.haCodec_info, @object
GHC.IO.Handle.Types.haCodec_info:
	.quad	GHC.IO.Handle.Types.haCodec_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:18.350711555 UTC

.section .text
.align 8
_c8dZF:
_c8dZF:
	movq 103(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8dZF, .-_c8dZF


==================== Asm code ====================
2018-03-16 16:03:18.351310596 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8dZF_info:
	.quad	_c8dZF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.353578331 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haDecoder_closure
.type GHC.IO.Handle.Types.haDecoder_closure, @object
GHC.IO.Handle.Types.haDecoder_closure:
	.quad	()_con_info


==================== Asm code ====================
2018-03-16 16:03:18.355212024 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haEncoder_closure
.type GHC.IO.Handle.Types.haEncoder_closure, @object
GHC.IO.Handle.Types.haEncoder_closure:
	.quad	()_con_info


==================== Asm code ====================
2018-03-16 16:03:18.358326975 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haBuffers_closure
.type GHC.IO.Handle.Types.haBuffers_closure, @object
GHC.IO.Handle.Types.haBuffers_closure:
	.quad	GHC.IO.Handle.Types.haBuffers_info


==================== Asm code ====================
2018-03-16 16:03:18.359116138 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.haBuffers_entry
.type GHC.IO.Handle.Types.haBuffers_entry, @object
GHC.IO.Handle.Types.haBuffers_entry:
_c8e09:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8e0d
_c8e0e:
	movq $block_c8e06_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8e06
_c8e07:
	movq (%rbx),%rax
	jmp *(%rax)
_c8e0d:
	movl $GHC.IO.Handle.Types.haBuffers_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.haBuffers_entry, .-GHC.IO.Handle.Types.haBuffers_entry


==================== Asm code ====================
2018-03-16 16:03:18.359806212 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.haBuffers_info
.type GHC.IO.Handle.Types.haBuffers_info, @object
GHC.IO.Handle.Types.haBuffers_info:
	.quad	GHC.IO.Handle.Types.haBuffers_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:18.360562107 UTC

.section .text
.align 8
_c8e06:
_c8e06:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8e0h
_c8e0g:
	movq 79(%rbx),%rax
	movq $GHC.STRef.STRef_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8e0h:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8e06, .-_c8e06


==================== Asm code ====================
2018-03-16 16:03:18.361226477 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8e06_info:
	.quad	_c8e06
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.36466565 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haCharBuffer_closure
.type GHC.IO.Handle.Types.haCharBuffer_closure, @object
GHC.IO.Handle.Types.haCharBuffer_closure:
	.quad	GHC.IO.Handle.Types.haCharBuffer_info


==================== Asm code ====================
2018-03-16 16:03:18.365462951 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.haCharBuffer_entry
.type GHC.IO.Handle.Types.haCharBuffer_entry, @object
GHC.IO.Handle.Types.haCharBuffer_entry:
_c8e0A:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8e0E
_c8e0F:
	movq $block_c8e0x_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8e0x
_c8e0y:
	movq (%rbx),%rax
	jmp *(%rax)
_c8e0E:
	movl $GHC.IO.Handle.Types.haCharBuffer_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.haCharBuffer_entry, .-GHC.IO.Handle.Types.haCharBuffer_entry


==================== Asm code ====================
2018-03-16 16:03:18.366169074 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.haCharBuffer_info
.type GHC.IO.Handle.Types.haCharBuffer_info, @object
GHC.IO.Handle.Types.haCharBuffer_info:
	.quad	GHC.IO.Handle.Types.haCharBuffer_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:18.36688043 UTC

.section .text
.align 8
_c8e0x:
_c8e0x:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8e0I
_c8e0H:
	movq 71(%rbx),%rax
	movq $GHC.STRef.STRef_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8e0I:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8e0x, .-_c8e0x


==================== Asm code ====================
2018-03-16 16:03:18.367518593 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8e0x_info:
	.quad	_c8e0x
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.369216081 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haLastDecode_closure
.type GHC.IO.Handle.Types.haLastDecode_closure, @object
GHC.IO.Handle.Types.haLastDecode_closure:
	.quad	()_con_info


==================== Asm code ====================
2018-03-16 16:03:18.372053047 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haBufferMode_closure
.type GHC.IO.Handle.Types.haBufferMode_closure, @object
GHC.IO.Handle.Types.haBufferMode_closure:
	.quad	GHC.IO.Handle.Types.haBufferMode_info


==================== Asm code ====================
2018-03-16 16:03:18.372829914 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.haBufferMode_entry
.type GHC.IO.Handle.Types.haBufferMode_entry, @object
GHC.IO.Handle.Types.haBufferMode_entry:
_c8e12:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8e13
_c8e14:
	movq $block_c8e0Z_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8e0Z
_c8e10:
	movq (%rbx),%rax
	jmp *(%rax)
_c8e13:
	movl $GHC.IO.Handle.Types.haBufferMode_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.haBufferMode_entry, .-GHC.IO.Handle.Types.haBufferMode_entry


==================== Asm code ====================
2018-03-16 16:03:18.374220495 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.haBufferMode_info
.type GHC.IO.Handle.Types.haBufferMode_info, @object
GHC.IO.Handle.Types.haBufferMode_info:
	.quad	GHC.IO.Handle.Types.haBufferMode_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:18.374827575 UTC

.section .text
.align 8
_c8e0Z:
_c8e0Z:
	movq 55(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8e0Z, .-_c8e0Z


==================== Asm code ====================
2018-03-16 16:03:18.375381783 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8e0Z_info:
	.quad	_c8e0Z
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.378483107 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haByteBuffer_closure
.type GHC.IO.Handle.Types.haByteBuffer_closure, @object
GHC.IO.Handle.Types.haByteBuffer_closure:
	.quad	GHC.IO.Handle.Types.haByteBuffer_info


==================== Asm code ====================
2018-03-16 16:03:18.379294859 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.haByteBuffer_entry
.type GHC.IO.Handle.Types.haByteBuffer_entry, @object
GHC.IO.Handle.Types.haByteBuffer_entry:
_c8e1r:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8e1v
_c8e1w:
	movq $block_c8e1o_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8e1o
_c8e1p:
	movq (%rbx),%rax
	jmp *(%rax)
_c8e1v:
	movl $GHC.IO.Handle.Types.haByteBuffer_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.haByteBuffer_entry, .-GHC.IO.Handle.Types.haByteBuffer_entry


==================== Asm code ====================
2018-03-16 16:03:18.379938296 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.haByteBuffer_info
.type GHC.IO.Handle.Types.haByteBuffer_info, @object
GHC.IO.Handle.Types.haByteBuffer_info:
	.quad	GHC.IO.Handle.Types.haByteBuffer_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:18.380716679 UTC

.section .text
.align 8
_c8e1o:
_c8e1o:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8e1z
_c8e1y:
	movq 47(%rbx),%rax
	movq $GHC.STRef.STRef_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8e1z:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8e1o, .-_c8e1o


==================== Asm code ====================
2018-03-16 16:03:18.381424032 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8e1o_info:
	.quad	_c8e1o
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.384259367 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haType_closure
.type GHC.IO.Handle.Types.haType_closure, @object
GHC.IO.Handle.Types.haType_closure:
	.quad	GHC.IO.Handle.Types.haType_info


==================== Asm code ====================
2018-03-16 16:03:18.385032523 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.haType_entry
.type GHC.IO.Handle.Types.haType_entry, @object
GHC.IO.Handle.Types.haType_entry:
_c8e1S:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8e1T
_c8e1U:
	movq $block_c8e1P_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8e1P
_c8e1Q:
	movq (%rbx),%rax
	jmp *(%rax)
_c8e1T:
	movl $GHC.IO.Handle.Types.haType_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.haType_entry, .-GHC.IO.Handle.Types.haType_entry


==================== Asm code ====================
2018-03-16 16:03:18.386046492 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.haType_info
.type GHC.IO.Handle.Types.haType_info, @object
GHC.IO.Handle.Types.haType_info:
	.quad	GHC.IO.Handle.Types.haType_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:18.386681525 UTC

.section .text
.align 8
_c8e1P:
_c8e1P:
	movq 39(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8e1P, .-_c8e1P


==================== Asm code ====================
2018-03-16 16:03:18.387256401 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8e1P_info:
	.quad	_c8e1P
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.389618167 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haDevice_closure
.type GHC.IO.Handle.Types.haDevice_closure, @object
GHC.IO.Handle.Types.haDevice_closure:
	.quad	()_con_info


==================== Asm code ====================
2018-03-16 16:03:18.392454303 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.outputNL_closure
.type GHC.IO.Handle.Types.outputNL_closure, @object
GHC.IO.Handle.Types.outputNL_closure:
	.quad	GHC.IO.Handle.Types.outputNL_info


==================== Asm code ====================
2018-03-16 16:03:18.393277198 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.outputNL_entry
.type GHC.IO.Handle.Types.outputNL_entry, @object
GHC.IO.Handle.Types.outputNL_entry:
_c8e2i:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8e2j
_c8e2k:
	movq $block_c8e2f_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8e2f
_c8e2g:
	movq (%rbx),%rax
	jmp *(%rax)
_c8e2j:
	movl $GHC.IO.Handle.Types.outputNL_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.outputNL_entry, .-GHC.IO.Handle.Types.outputNL_entry


==================== Asm code ====================
2018-03-16 16:03:18.393933114 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.outputNL_info
.type GHC.IO.Handle.Types.outputNL_info, @object
GHC.IO.Handle.Types.outputNL_info:
	.quad	GHC.IO.Handle.Types.outputNL_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:18.394564435 UTC

.section .text
.align 8
_c8e2f:
_c8e2f:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8e2f, .-_c8e2f


==================== Asm code ====================
2018-03-16 16:03:18.395142091 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8e2f_info:
	.quad	_c8e2f
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.397974591 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.inputNL_closure
.type GHC.IO.Handle.Types.inputNL_closure, @object
GHC.IO.Handle.Types.inputNL_closure:
	.quad	GHC.IO.Handle.Types.inputNL_info


==================== Asm code ====================
2018-03-16 16:03:18.398755439 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.inputNL_entry
.type GHC.IO.Handle.Types.inputNL_entry, @object
GHC.IO.Handle.Types.inputNL_entry:
_c8e2H:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8e2I
_c8e2J:
	movq $block_c8e2E_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8e2E
_c8e2F:
	movq (%rbx),%rax
	jmp *(%rax)
_c8e2I:
	movl $GHC.IO.Handle.Types.inputNL_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.inputNL_entry, .-GHC.IO.Handle.Types.inputNL_entry


==================== Asm code ====================
2018-03-16 16:03:18.399440844 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.inputNL_info
.type GHC.IO.Handle.Types.inputNL_info, @object
GHC.IO.Handle.Types.inputNL_info:
	.quad	GHC.IO.Handle.Types.inputNL_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:18.40007092 UTC

.section .text
.align 8
_c8e2E:
_c8e2E:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8e2E, .-_c8e2E


==================== Asm code ====================
2018-03-16 16:03:18.400603163 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8e2E_info:
	.quad	_c8e2E
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.403623651 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.isReadableHandleType_closure
.type GHC.IO.Handle.Types.isReadableHandleType_closure, @object
GHC.IO.Handle.Types.isReadableHandleType_closure:
	.quad	GHC.IO.Handle.Types.isReadableHandleType_info


==================== Asm code ====================
2018-03-16 16:03:18.40440177 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.isReadableHandleType_entry
.type GHC.IO.Handle.Types.isReadableHandleType_entry, @object
GHC.IO.Handle.Types.isReadableHandleType_entry:
_c8e3b:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8e3c
_c8e3d:
	movq $block_c8e33_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8e33
_c8e34:
	movq (%rbx),%rax
	jmp *(%rax)
_c8e3c:
	movl $GHC.IO.Handle.Types.isReadableHandleType_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.isReadableHandleType_entry, .-GHC.IO.Handle.Types.isReadableHandleType_entry


==================== Asm code ====================
2018-03-16 16:03:18.405040871 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.isReadableHandleType_info
.type GHC.IO.Handle.Types.isReadableHandleType_info, @object
GHC.IO.Handle.Types.isReadableHandleType_info:
	.quad	GHC.IO.Handle.Types.isReadableHandleType_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:18.406039689 UTC

.section .text
.align 8
_c8e33:
_c8e33:
	andl $7,%ebx
	cmpq $3,%rbx
	je _c8e39
_u8e3n:
	cmpq $6,%rbx
	je _c8e39
_c8e37:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8e39:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8e33, .-_c8e33


==================== Asm code ====================
2018-03-16 16:03:18.406663813 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8e33_info:
	.quad	_c8e33
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.409730652 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.isWritableHandleType_closure
.type GHC.IO.Handle.Types.isWritableHandleType_closure, @object
GHC.IO.Handle.Types.isWritableHandleType_closure:
	.quad	GHC.IO.Handle.Types.isWritableHandleType_info


==================== Asm code ====================
2018-03-16 16:03:18.410491323 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.isWritableHandleType_entry
.type GHC.IO.Handle.Types.isWritableHandleType_entry, @object
GHC.IO.Handle.Types.isWritableHandleType_entry:
_c8e3O:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8e3P
_c8e3Q:
	movq $block_c8e3F_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8e3F
_c8e3G:
	movq (%rbx),%rax
	jmp *(%rax)
_c8e3P:
	movl $GHC.IO.Handle.Types.isWritableHandleType_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.isWritableHandleType_entry, .-GHC.IO.Handle.Types.isWritableHandleType_entry


==================== Asm code ====================
2018-03-16 16:03:18.411155669 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.isWritableHandleType_info
.type GHC.IO.Handle.Types.isWritableHandleType_info, @object
GHC.IO.Handle.Types.isWritableHandleType_info:
	.quad	GHC.IO.Handle.Types.isWritableHandleType_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:18.411932503 UTC

.section .text
.align 8
_c8e3F:
_c8e3F:
	andl $7,%ebx
	cmpq $4,%rbx
	jb _c8e3J
_u8e43:
	cmpq $5,%rbx
	jne _c8e3M
_c8e3M:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8e3J:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8e3F, .-_c8e3F


==================== Asm code ====================
2018-03-16 16:03:18.412583709 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8e3F_info:
	.quad	_c8e3F
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.415533539 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.isReadWriteHandleType_closure
.type GHC.IO.Handle.Types.isReadWriteHandleType_closure, @object
GHC.IO.Handle.Types.isReadWriteHandleType_closure:
	.quad	GHC.IO.Handle.Types.isReadWriteHandleType_info


==================== Asm code ====================
2018-03-16 16:03:18.416270109 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.isReadWriteHandleType_entry
.type GHC.IO.Handle.Types.isReadWriteHandleType_entry, @object
GHC.IO.Handle.Types.isReadWriteHandleType_entry:
_c8e4s:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8e4t
_c8e4u:
	movq $block_c8e4l_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8e4l
_c8e4m:
	movq (%rbx),%rax
	jmp *(%rax)
_c8e4t:
	movl $GHC.IO.Handle.Types.isReadWriteHandleType_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.isReadWriteHandleType_entry, .-GHC.IO.Handle.Types.isReadWriteHandleType_entry


==================== Asm code ====================
2018-03-16 16:03:18.416929959 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.isReadWriteHandleType_info
.type GHC.IO.Handle.Types.isReadWriteHandleType_info, @object
GHC.IO.Handle.Types.isReadWriteHandleType_info:
	.quad	GHC.IO.Handle.Types.isReadWriteHandleType_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:18.41775564 UTC

.section .text
.align 8
_c8e4l:
_c8e4l:
	andl $7,%ebx
	cmpq $6,%rbx
	je _c8e4q
_c8e4p:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8e4q:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8e4l, .-_c8e4l


==================== Asm code ====================
2018-03-16 16:03:18.418416355 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8e4l_info:
	.quad	_c8e4l
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.420157579 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.nativeNewline_closure
.type GHC.IO.Handle.Types.nativeNewline_closure, @object
GHC.IO.Handle.Types.nativeNewline_closure:
	.quad	GHC.IO.Handle.Types.LF_con_info


==================== Asm code ====================
2018-03-16 16:03:18.422502469 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.universalNewlineMode_closure
.type GHC.IO.Handle.Types.universalNewlineMode_closure, @object
GHC.IO.Handle.Types.universalNewlineMode_closure:
	.quad	GHC.IO.Handle.Types.NewlineMode_con_info
	.quad	GHC.IO.Handle.Types.CRLF_closure+2
	.quad	GHC.IO.Handle.Types.LF_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.424333308 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.nativeNewlineMode_closure
.type GHC.IO.Handle.Types.nativeNewlineMode_closure, @object
GHC.IO.Handle.Types.nativeNewlineMode_closure:
	.quad	GHC.IO.Handle.Types.NewlineMode_con_info
	.quad	GHC.IO.Handle.Types.LF_closure+1
	.quad	GHC.IO.Handle.Types.LF_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.42610968 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.noNewlineTranslation_closure
.type GHC.IO.Handle.Types.noNewlineTranslation_closure, @object
GHC.IO.Handle.Types.noNewlineTranslation_closure:
	.quad	stg_IND_STATIC_info
	.quad	GHC.IO.Handle.Types.nativeNewlineMode_closure+1
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.427715746 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.showHandle1_bytes
.type GHC.IO.Handle.Types.showHandle1_bytes, @object
GHC.IO.Handle.Types.showHandle1_bytes:
	.asciz "{handle: "


==================== Asm code ====================
2018-03-16 16:03:18.431485149 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.showHandle_closure
.type GHC.IO.Handle.Types.showHandle_closure, @object
GHC.IO.Handle.Types.showHandle_closure:
	.quad	GHC.IO.Handle.Types.showHandle_info


==================== Asm code ====================
2018-03-16 16:03:18.432190772 UTC

.section .text
.align 8
sat_s8ahZ_entry:
_c8e56:
	movq 16(%rbx),%rsi
	movl $GHC.IO.Handle.Types.$fReadNewlineMode5_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
	.size sat_s8ahZ_entry, .-sat_s8ahZ_entry


==================== Asm code ====================
2018-03-16 16:03:18.432722433 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ahZ_info:
	.quad	sat_s8ahZ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:03:18.433652742 UTC

.section .text
.align 8
sat_s8ai0_entry:
_c8e59:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8e5a
_c8e5b:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8e5d
_c8e5c:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s8ahZ_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_c8e5d:
	movq $24,904(%r13)
_c8e5a:
	jmp *-16(%r13)
	.size sat_s8ai0_entry, .-sat_s8ai0_entry


==================== Asm code ====================
2018-03-16 16:03:18.434291448 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ai0_info:
	.quad	sat_s8ai0_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:03:18.434998126 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.showHandle_entry
.type GHC.IO.Handle.Types.showHandle_entry, @object
GHC.IO.Handle.Types.showHandle_entry:
_c8e5e:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8e5i
_c8e5h:
	movq $sat_s8ai0_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%rsi
	movl $GHC.IO.Handle.Types.showHandle1_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
_c8e5i:
	movq $32,904(%r13)
	movl $GHC.IO.Handle.Types.showHandle_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.showHandle_entry, .-GHC.IO.Handle.Types.showHandle_entry


==================== Asm code ====================
2018-03-16 16:03:18.435681012 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.showHandle_info
.type GHC.IO.Handle.Types.showHandle_info, @object
GHC.IO.Handle.Types.showHandle_info:
	.quad	GHC.IO.Handle.Types.showHandle_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:18.438826343 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_closure
.type GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_closure, @object
GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_info


==================== Asm code ====================
2018-03-16 16:03:18.439626686 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_entry
.type GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_entry, @object
GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_entry:
_c8e5F:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8e5G
_c8e5H:
	movq $block_c8e5y_info,-16(%rbp)
	movq %rsi,%rbx
	movq %rdi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8e5y
_c8e5z:
	movq (%rbx),%rax
	jmp *(%rax)
_c8e5G:
	movl $GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_entry, .-GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:03:18.440320865 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_info
.type GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_info, @object
GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_info:
	.quad	GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:03:18.441055556 UTC

.section .text
.align 8
_c8e5y:
_c8e5y:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8e5C
_c8e5D:
	movq %rax,%rsi
	movq 6(%rbx),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.Types.showHandle_entry
_c8e5C:
	movq %rax,%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.Types.showHandle_entry
	.size _c8e5y, .-_c8e5y


==================== Asm code ====================
2018-03-16 16:03:18.441784242 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8e5y_info:
	.quad	_c8e5y
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.44638375 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandle_$cshow_closure
.type GHC.IO.Handle.Types.$fShowHandle_$cshow_closure, @object
GHC.IO.Handle.Types.$fShowHandle_$cshow_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandle_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.44707833 UTC

.section .text
.align 8
sat_s8aie_entry:
_c8e6d:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8e6e
_c8e6f:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fReadNewlineMode4_closure,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_c8e6e:
	jmp *-16(%r13)
	.size sat_s8aie_entry, .-sat_s8aie_entry


==================== Asm code ====================
2018-03-16 16:03:18.447730062 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8aie_info:
	.quad	sat_s8aie_entry
	.quad	1
	.quad	4294967312
	.quad	S8alj_srt+520


==================== Asm code ====================
2018-03-16 16:03:18.448409324 UTC

.section .text
.align 8
sat_s8aii_entry:
_c8e6m:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8e6n
_c8e6o:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $GHC.IO.Handle.Types.$fReadNewlineMode4_closure,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_c8e6n:
	jmp *-16(%r13)
	.size sat_s8aii_entry, .-sat_s8aii_entry


==================== Asm code ====================
2018-03-16 16:03:18.44903717 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8aii_info:
	.quad	sat_s8aii_entry
	.quad	1
	.quad	4294967312
	.quad	S8alj_srt+520


==================== Asm code ====================
2018-03-16 16:03:18.449890653 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandle_$cshow_entry
.type GHC.IO.Handle.Types.$fShowHandle_$cshow_entry, @object
GHC.IO.Handle.Types.$fShowHandle_$cshow_entry:
_c8e6t:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8e6u
_c8e6v:
	movq $block_c8e64_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8e64
_c8e65:
	movq (%rbx),%rax
	jmp *(%rax)
_c8e6u:
	movl $GHC.IO.Handle.Types.$fShowHandle_$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowHandle_$cshow_entry, .-GHC.IO.Handle.Types.$fShowHandle_$cshow_entry


==================== Asm code ====================
2018-03-16 16:03:18.450549399 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandle_$cshow_info
.type GHC.IO.Handle.Types.$fShowHandle_$cshow_info, @object
GHC.IO.Handle.Types.$fShowHandle_$cshow_info:
	.quad	GHC.IO.Handle.Types.$fShowHandle_$cshow_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S8alj_srt+520


==================== Asm code ====================
2018-03-16 16:03:18.451376053 UTC

.section .text
.align 8
_c8e64:
_c8e64:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8e6q
_c8e6r:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8e6B
_c8e6A:
	movq 6(%rbx),%rax
	movq $sat_s8aii_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	movl $GHC.IO.Handle.Types.showHandle1_bytes,%r14d
	addq $8,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_c8e6B:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c8e6q:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8e6B
_c8e6x:
	movq 7(%rbx),%rax
	movq $sat_s8aie_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	movl $GHC.IO.Handle.Types.showHandle1_bytes,%r14d
	addq $8,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
	.size _c8e64, .-_c8e64


==================== Asm code ====================
2018-03-16 16:03:18.452095587 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8e64_info:
	.quad	_c8e64
	.quad	0
	.quad	4294967326
	.quad	S8alj_srt+520


==================== Asm code ====================
2018-03-16 16:03:18.455354318 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandle1_closure
.type GHC.IO.Handle.Types.$fShowHandle1_closure, @object
GHC.IO.Handle.Types.$fShowHandle1_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandle1_info


==================== Asm code ====================
2018-03-16 16:03:18.456117808 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandle1_entry
.type GHC.IO.Handle.Types.$fShowHandle1_entry, @object
GHC.IO.Handle.Types.$fShowHandle1_entry:
_c8e77:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8e78
_c8e79:
	movq $block_c8e70_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8e70
_c8e71:
	movq (%rbx),%rax
	jmp *(%rax)
_c8e78:
	movl $GHC.IO.Handle.Types.$fShowHandle1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowHandle1_entry, .-GHC.IO.Handle.Types.$fShowHandle1_entry


==================== Asm code ====================
2018-03-16 16:03:18.456783579 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandle1_info
.type GHC.IO.Handle.Types.$fShowHandle1_info, @object
GHC.IO.Handle.Types.$fShowHandle1_info:
	.quad	GHC.IO.Handle.Types.$fShowHandle1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:18.458124605 UTC

.section .text
.align 8
_c8e70:
_c8e70:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8e74
_c8e75:
	movq %rax,%rsi
	movq 6(%rbx),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.Types.showHandle_entry
_c8e74:
	movq %rax,%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.Types.showHandle_entry
	.size _c8e70, .-_c8e70


==================== Asm code ====================
2018-03-16 16:03:18.458838004 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8e70_info:
	.quad	_c8e70
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:18.461048072 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandle_$cshowList_closure
.type GHC.IO.Handle.Types.$fShowHandle_$cshowList_closure, @object
GHC.IO.Handle.Types.$fShowHandle_$cshowList_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandle_$cshowList_info


==================== Asm code ====================
2018-03-16 16:03:18.462385535 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandle_$cshowList_entry
.type GHC.IO.Handle.Types.$fShowHandle_$cshowList_entry, @object
GHC.IO.Handle.Types.$fShowHandle_$cshowList_entry:
_c8e7w:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.IO.Handle.Types.$fShowHandle1_closure+2,%r14d
	jmp GHC.Show.showList___entry
	.size GHC.IO.Handle.Types.$fShowHandle_$cshowList_entry, .-GHC.IO.Handle.Types.$fShowHandle_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:03:18.462959197 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandle_$cshowList_info
.type GHC.IO.Handle.Types.$fShowHandle_$cshowList_info, @object
GHC.IO.Handle.Types.$fShowHandle_$cshowList_info:
	.quad	GHC.IO.Handle.Types.$fShowHandle_$cshowList_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:18.464626295 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandle_closure
.type GHC.IO.Handle.Types.$fShowHandle_closure, @object
GHC.IO.Handle.Types.$fShowHandle_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_closure+3
	.quad	GHC.IO.Handle.Types.$fShowHandle_$cshow_closure+1
	.quad	GHC.IO.Handle.Types.$fShowHandle_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.466298196 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$trModule4_bytes
.type GHC.IO.Handle.Types.$trModule4_bytes, @object
GHC.IO.Handle.Types.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:03:18.46798049 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$trModule3_closure
.type GHC.IO.Handle.Types.$trModule3_closure, @object
GHC.IO.Handle.Types.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:03:18.469876179 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$trModule2_bytes
.type GHC.IO.Handle.Types.$trModule2_bytes, @object
GHC.IO.Handle.Types.$trModule2_bytes:
	.asciz "GHC.IO.Handle.Types"


==================== Asm code ====================
2018-03-16 16:03:18.471560443 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$trModule1_closure
.type GHC.IO.Handle.Types.$trModule1_closure, @object
GHC.IO.Handle.Types.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:03:18.473363792 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$trModule_closure
.type GHC.IO.Handle.Types.$trModule_closure, @object
GHC.IO.Handle.Types.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.IO.Handle.Types.$trModule3_closure+1
	.quad	GHC.IO.Handle.Types.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.475026737 UTC

.section .data
.align 8
.align 1
$krep_r8a59_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcInt_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.476714135 UTC

.section .data
.align 8
.align 1
$krep1_r8a5a_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Encoding.Types.$tcTextEncoding_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.478422605 UTC

.section .data
.align 8
.align 1
$krep2_r8a5b_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Word.$tcWord8_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.480162016 UTC

.section .data
.align 8
.align 1
$krep3_r8a5c_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcChar_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.481859783 UTC

.section .data
.align 8
.align 1
$krep4_r8a5d_closure:
	.quad	:_con_info
	.quad	$krep_r8a59_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.483589347 UTC

.section .data
.align 8
.align 1
$krep5_r8a5e_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Base.$tcMaybe_closure
	.quad	$krep4_r8a5d_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.487070347 UTC

.section .data
.align 8
.align 1
$krep6_r8a5f_closure:
	.quad	:_con_info
	.quad	$krep1_r8a5a_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.488799717 UTC

.section .data
.align 8
.align 1
$krep7_r8a5g_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Base.$tcMaybe_closure
	.quad	$krep6_r8a5f_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.490550336 UTC

.section .data
.align 8
.align 1
$krep8_r8a5h_closure:
	.quad	:_con_info
	.quad	$krep3_r8a5c_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.49228859 UTC

.section .data
.align 8
.align 1
$krep9_r8a5i_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Buffer.$tcBuffer_closure
	.quad	$krep8_r8a5h_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.494590742 UTC

.section .data
.align 8
.align 1
$krep10_r8a5j_closure:
	.quad	:_con_info
	.quad	$krep9_r8a5i_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.496253704 UTC

.section .data
.align 8
.align 1
$krep11_r8a5k_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IORef.$tcIORef_closure
	.quad	$krep10_r8a5j_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.497975702 UTC

.section .data
.align 8
.align 1
$krep12_r8a5l_closure:
	.quad	:_con_info
	.quad	$krep2_r8a5b_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.499591253 UTC

.section .data
.align 8
.align 1
$krep13_r8a5m_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Buffer.$tcBuffer_closure
	.quad	$krep12_r8a5l_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.501207008 UTC

.section .data
.align 8
.align 1
$krep14_r8a5n_closure:
	.quad	:_con_info
	.quad	$krep13_r8a5m_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.502988103 UTC

.section .data
.align 8
.align 1
$krep15_r8a5o_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IORef.$tcIORef_closure
	.quad	$krep14_r8a5n_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.504678397 UTC

.section .data
.align 8
.align 1
$krep16_r8a5p_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tc[]_closure
	.quad	$krep8_r8a5h_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.506806967 UTC

.section .data
.align 8
.align 1
$krep17_r8a5q_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	2


==================== Asm code ====================
2018-03-16 16:03:18.508488234 UTC

.section .data
.align 8
.align 1
$krep18_r8a5r_closure:
	.quad	:_con_info
	.quad	$krep17_r8a5q_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.510238947 UTC

.section .data
.align 8
.align 1
$krep19_r8a5s_closure:
	.quad	:_con_info
	.quad	$krep3_r8a5c_closure+1
	.quad	$krep18_r8a5r_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.512510122 UTC

.section .data
.align 8
.align 1
$krep20_r8a5t_closure:
	.quad	:_con_info
	.quad	$krep2_r8a5b_closure+1
	.quad	$krep19_r8a5s_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.514569961 UTC

.section .data
.align 8
.align 1
$krep21_r8a5u_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Encoding.Types.$tcBufferCodec_closure
	.quad	$krep20_r8a5t_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.516231661 UTC

.section .data
.align 8
.align 1
$krep22_r8a5v_closure:
	.quad	:_con_info
	.quad	$krep21_r8a5u_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.519277601 UTC

.section .data
.align 8
.align 1
$krep23_r8a5w_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Base.$tcMaybe_closure
	.quad	$krep22_r8a5v_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.521130648 UTC

.section .data
.align 8
.align 1
$krep24_r8a5x_closure:
	.quad	:_con_info
	.quad	$krep17_r8a5q_closure+2
	.quad	$krep14_r8a5n_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.522849274 UTC

.section .data
.align 8
.align 1
$krep25_r8a5y_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Tuple.$tc(,)_closure
	.quad	$krep24_r8a5x_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.524568645 UTC

.section .data
.align 8
.align 1
$krep26_r8a5z_closure:
	.quad	:_con_info
	.quad	$krep25_r8a5y_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.526706029 UTC

.section .data
.align 8
.align 1
$krep27_r8a5A_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IORef.$tcIORef_closure
	.quad	$krep26_r8a5z_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.528460753 UTC

.section .data
.align 8
.align 1
$krep28_r8a5B_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 16:03:18.530127451 UTC

.section .data
.align 8
.align 1
$krep29_r8a5C_closure:
	.quad	:_con_info
	.quad	$krep28_r8a5B_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.531907733 UTC

.section .data
.align 8
.align 1
$krep30_r8a5D_closure:
	.quad	:_con_info
	.quad	$krep2_r8a5b_closure+1
	.quad	$krep29_r8a5C_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.533731049 UTC

.section .data
.align 8
.align 1
$krep31_r8a5E_closure:
	.quad	:_con_info
	.quad	$krep3_r8a5c_closure+1
	.quad	$krep30_r8a5D_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.535563077 UTC

.section .data
.align 8
.align 1
$krep32_r8a5F_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Encoding.Types.$tcBufferCodec_closure
	.quad	$krep31_r8a5E_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.537563753 UTC

.section .data
.align 8
.align 1
$krep33_r8a5G_closure:
	.quad	:_con_info
	.quad	$krep32_r8a5F_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.540232794 UTC

.section .data
.align 8
.align 1
$krep34_r8a5H_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Base.$tcMaybe_closure
	.quad	$krep33_r8a5G_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.541945957 UTC

.section .data
.align 8
.align 1
$krep35_r8a5I_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:18.543777874 UTC

.section .data
.align 8
.align 1
$krep36_r8a5J_closure:
	.quad	:_con_info
	.quad	$krep35_r8a5I_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.545575563 UTC

.section .data
.align 8
.align 1
$krep37_r8a5K_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.ForeignPtr.$tcForeignPtr_closure
	.quad	$krep36_r8a5J_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.547331828 UTC

.section .data
.align 8
.align 1
$krep38_r8a5L_closure:
	.quad	:_con_info
	.quad	GHC.Types.krep$*_closure
	.quad	$krep36_r8a5J_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.549114238 UTC

.section .data
.align 8
.align 1
$krep39_r8a5M_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	Data.Typeable.Internal.$tcTypeable_closure
	.quad	$krep38_r8a5L_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.550867674 UTC

.section .data
.align 8
.align 1
$krep40_r8a5N_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Device.$tcIODevice_closure
	.quad	$krep36_r8a5J_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.552556596 UTC

.section .data
.align 8
.align 1
$krep41_r8a5O_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.BufferedIO.$tcBufferedIO_closure
	.quad	$krep36_r8a5J_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.554296628 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tcBufferList2_bytes
.type GHC.IO.Handle.Types.$tcBufferList2_bytes, @object
GHC.IO.Handle.Types.$tcBufferList2_bytes:
	.asciz "BufferList"


==================== Asm code ====================
2018-03-16 16:03:18.555988841 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcBufferList1_closure
.type GHC.IO.Handle.Types.$tcBufferList1_closure, @object
GHC.IO.Handle.Types.$tcBufferList1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tcBufferList2_bytes


==================== Asm code ====================
2018-03-16 16:03:18.558406954 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcBufferList_closure
.type GHC.IO.Handle.Types.$tcBufferList_closure, @object
GHC.IO.Handle.Types.$tcBufferList_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tcBufferList1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	-1844465517124434772
	.quad	-282234120389064362
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.560196629 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'BufferListNil1_closure
.type GHC.IO.Handle.Types.$tc'BufferListNil1_closure, @object
GHC.IO.Handle.Types.$tc'BufferListNil1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Handle.Types.$tcBufferList_closure+1
	.quad	$krep36_r8a5J_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.562029456 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'BufferListNil3_bytes
.type GHC.IO.Handle.Types.$tc'BufferListNil3_bytes, @object
GHC.IO.Handle.Types.$tc'BufferListNil3_bytes:
	.asciz "'BufferListNil"


==================== Asm code ====================
2018-03-16 16:03:18.563743166 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'BufferListNil2_closure
.type GHC.IO.Handle.Types.$tc'BufferListNil2_closure, @object
GHC.IO.Handle.Types.$tc'BufferListNil2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'BufferListNil3_bytes


==================== Asm code ====================
2018-03-16 16:03:18.5661231 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'BufferListNil_closure
.type GHC.IO.Handle.Types.$tc'BufferListNil_closure, @object
GHC.IO.Handle.Types.$tc'BufferListNil_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'BufferListNil2_closure+1
	.quad	GHC.IO.Handle.Types.$tc'BufferListNil1_closure+1
	.quad	1776148480580179033
	.quad	-5265559080644376680
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.568044644 UTC

.section .data
.align 8
.align 1
$krep42_r8a5P_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.IO.Handle.Types.$tc'BufferListNil1_closure+1
	.quad	GHC.IO.Handle.Types.$tc'BufferListNil1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.570031878 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'BufferListCons1_closure
.type GHC.IO.Handle.Types.$tc'BufferListCons1_closure, @object
GHC.IO.Handle.Types.$tc'BufferListCons1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep37_r8a5K_closure+1
	.quad	$krep42_r8a5P_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.571647862 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'BufferListCons3_bytes
.type GHC.IO.Handle.Types.$tc'BufferListCons3_bytes, @object
GHC.IO.Handle.Types.$tc'BufferListCons3_bytes:
	.asciz "'BufferListCons"


==================== Asm code ====================
2018-03-16 16:03:18.573390222 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'BufferListCons2_closure
.type GHC.IO.Handle.Types.$tc'BufferListCons2_closure, @object
GHC.IO.Handle.Types.$tc'BufferListCons2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'BufferListCons3_bytes


==================== Asm code ====================
2018-03-16 16:03:18.575313537 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'BufferListCons_closure
.type GHC.IO.Handle.Types.$tc'BufferListCons_closure, @object
GHC.IO.Handle.Types.$tc'BufferListCons_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'BufferListCons2_closure+1
	.quad	GHC.IO.Handle.Types.$tc'BufferListCons1_closure+4
	.quad	-1194397533895196677
	.quad	274626690118510806
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.577062864 UTC

.section .data
.align 8
.align 1
$krep43_r8a5Q_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Handle.Types.$tcBufferList_closure+1
	.quad	$krep8_r8a5h_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.578830894 UTC

.section .data
.align 8
.align 1
$krep44_r8a5R_closure:
	.quad	:_con_info
	.quad	$krep43_r8a5Q_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.580616792 UTC

.section .data
.align 8
.align 1
$krep45_r8a5S_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IORef.$tcIORef_closure
	.quad	$krep44_r8a5R_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.583143572 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tcHandleType2_bytes
.type GHC.IO.Handle.Types.$tcHandleType2_bytes, @object
GHC.IO.Handle.Types.$tcHandleType2_bytes:
	.asciz "HandleType"


==================== Asm code ====================
2018-03-16 16:03:18.584830913 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcHandleType1_closure
.type GHC.IO.Handle.Types.$tcHandleType1_closure, @object
GHC.IO.Handle.Types.$tcHandleType1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tcHandleType2_bytes


==================== Asm code ====================
2018-03-16 16:03:18.586790543 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcHandleType_closure
.type GHC.IO.Handle.Types.$tcHandleType_closure, @object
GHC.IO.Handle.Types.$tcHandleType_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tcHandleType1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-5794693333532234024
	.quad	-3434572023584488257
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.588634401 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'AppendHandle1_closure
.type GHC.IO.Handle.Types.$tc'AppendHandle1_closure, @object
GHC.IO.Handle.Types.$tc'AppendHandle1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Handle.Types.$tcHandleType_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.590444081 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'ClosedHandle2_bytes
.type GHC.IO.Handle.Types.$tc'ClosedHandle2_bytes, @object
GHC.IO.Handle.Types.$tc'ClosedHandle2_bytes:
	.asciz "'ClosedHandle"


==================== Asm code ====================
2018-03-16 16:03:18.592087385 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'ClosedHandle1_closure
.type GHC.IO.Handle.Types.$tc'ClosedHandle1_closure, @object
GHC.IO.Handle.Types.$tc'ClosedHandle1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'ClosedHandle2_bytes


==================== Asm code ====================
2018-03-16 16:03:18.594997795 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'ClosedHandle_closure
.type GHC.IO.Handle.Types.$tc'ClosedHandle_closure, @object
GHC.IO.Handle.Types.$tc'ClosedHandle_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'ClosedHandle1_closure+1
	.quad	GHC.IO.Handle.Types.$tc'AppendHandle1_closure+1
	.quad	3827246897052092772
	.quad	908733983357893198
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.596671101 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'SemiClosedHandle2_bytes
.type GHC.IO.Handle.Types.$tc'SemiClosedHandle2_bytes, @object
GHC.IO.Handle.Types.$tc'SemiClosedHandle2_bytes:
	.asciz "'SemiClosedHandle"


==================== Asm code ====================
2018-03-16 16:03:18.598346126 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'SemiClosedHandle1_closure
.type GHC.IO.Handle.Types.$tc'SemiClosedHandle1_closure, @object
GHC.IO.Handle.Types.$tc'SemiClosedHandle1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'SemiClosedHandle2_bytes


==================== Asm code ====================
2018-03-16 16:03:18.600192953 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'SemiClosedHandle_closure
.type GHC.IO.Handle.Types.$tc'SemiClosedHandle_closure, @object
GHC.IO.Handle.Types.$tc'SemiClosedHandle_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'SemiClosedHandle1_closure+1
	.quad	GHC.IO.Handle.Types.$tc'AppendHandle1_closure+1
	.quad	9212351547956271402
	.quad	6570718180183054490
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.602210741 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'ReadHandle2_bytes
.type GHC.IO.Handle.Types.$tc'ReadHandle2_bytes, @object
GHC.IO.Handle.Types.$tc'ReadHandle2_bytes:
	.asciz "'ReadHandle"


==================== Asm code ====================
2018-03-16 16:03:18.603984889 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'ReadHandle1_closure
.type GHC.IO.Handle.Types.$tc'ReadHandle1_closure, @object
GHC.IO.Handle.Types.$tc'ReadHandle1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'ReadHandle2_bytes


==================== Asm code ====================
2018-03-16 16:03:18.605879017 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'ReadHandle_closure
.type GHC.IO.Handle.Types.$tc'ReadHandle_closure, @object
GHC.IO.Handle.Types.$tc'ReadHandle_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'ReadHandle1_closure+1
	.quad	GHC.IO.Handle.Types.$tc'AppendHandle1_closure+1
	.quad	269968663592081974
	.quad	-973020763998651067
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.607647652 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'WriteHandle2_bytes
.type GHC.IO.Handle.Types.$tc'WriteHandle2_bytes, @object
GHC.IO.Handle.Types.$tc'WriteHandle2_bytes:
	.asciz "'WriteHandle"


==================== Asm code ====================
2018-03-16 16:03:18.609384791 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'WriteHandle1_closure
.type GHC.IO.Handle.Types.$tc'WriteHandle1_closure, @object
GHC.IO.Handle.Types.$tc'WriteHandle1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'WriteHandle2_bytes


==================== Asm code ====================
2018-03-16 16:03:18.611292445 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'WriteHandle_closure
.type GHC.IO.Handle.Types.$tc'WriteHandle_closure, @object
GHC.IO.Handle.Types.$tc'WriteHandle_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'WriteHandle1_closure+1
	.quad	GHC.IO.Handle.Types.$tc'AppendHandle1_closure+1
	.quad	-422220260101352534
	.quad	4783872735135983851
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.613044013 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'AppendHandle3_bytes
.type GHC.IO.Handle.Types.$tc'AppendHandle3_bytes, @object
GHC.IO.Handle.Types.$tc'AppendHandle3_bytes:
	.asciz "'AppendHandle"


==================== Asm code ====================
2018-03-16 16:03:18.615189268 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'AppendHandle2_closure
.type GHC.IO.Handle.Types.$tc'AppendHandle2_closure, @object
GHC.IO.Handle.Types.$tc'AppendHandle2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'AppendHandle3_bytes


==================== Asm code ====================
2018-03-16 16:03:18.617000967 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'AppendHandle_closure
.type GHC.IO.Handle.Types.$tc'AppendHandle_closure, @object
GHC.IO.Handle.Types.$tc'AppendHandle_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'AppendHandle2_closure+1
	.quad	GHC.IO.Handle.Types.$tc'AppendHandle1_closure+1
	.quad	-23263954667158069
	.quad	8911069045719960050
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.618790978 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'ReadWriteHandle2_bytes
.type GHC.IO.Handle.Types.$tc'ReadWriteHandle2_bytes, @object
GHC.IO.Handle.Types.$tc'ReadWriteHandle2_bytes:
	.asciz "'ReadWriteHandle"


==================== Asm code ====================
2018-03-16 16:03:18.621160871 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'ReadWriteHandle1_closure
.type GHC.IO.Handle.Types.$tc'ReadWriteHandle1_closure, @object
GHC.IO.Handle.Types.$tc'ReadWriteHandle1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'ReadWriteHandle2_bytes


==================== Asm code ====================
2018-03-16 16:03:18.623057436 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'ReadWriteHandle_closure
.type GHC.IO.Handle.Types.$tc'ReadWriteHandle_closure, @object
GHC.IO.Handle.Types.$tc'ReadWriteHandle_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'ReadWriteHandle1_closure+1
	.quad	GHC.IO.Handle.Types.$tc'AppendHandle1_closure+1
	.quad	6962298179673541916
	.quad	7858738479804269456
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.624828465 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tcBufferMode2_bytes
.type GHC.IO.Handle.Types.$tcBufferMode2_bytes, @object
GHC.IO.Handle.Types.$tcBufferMode2_bytes:
	.asciz "BufferMode"


==================== Asm code ====================
2018-03-16 16:03:18.626888535 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcBufferMode1_closure
.type GHC.IO.Handle.Types.$tcBufferMode1_closure, @object
GHC.IO.Handle.Types.$tcBufferMode1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tcBufferMode2_bytes


==================== Asm code ====================
2018-03-16 16:03:18.628678178 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcBufferMode_closure
.type GHC.IO.Handle.Types.$tcBufferMode_closure, @object
GHC.IO.Handle.Types.$tcBufferMode_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tcBufferMode1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	2181253694666364469
	.quad	-351746513378278033
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.630525421 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'LineBuffering1_closure
.type GHC.IO.Handle.Types.$tc'LineBuffering1_closure, @object
GHC.IO.Handle.Types.$tc'LineBuffering1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Handle.Types.$tcBufferMode_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.63222013 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'NoBuffering2_bytes
.type GHC.IO.Handle.Types.$tc'NoBuffering2_bytes, @object
GHC.IO.Handle.Types.$tc'NoBuffering2_bytes:
	.asciz "'NoBuffering"


==================== Asm code ====================
2018-03-16 16:03:18.633986996 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'NoBuffering1_closure
.type GHC.IO.Handle.Types.$tc'NoBuffering1_closure, @object
GHC.IO.Handle.Types.$tc'NoBuffering1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'NoBuffering2_bytes


==================== Asm code ====================
2018-03-16 16:03:18.635871805 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'NoBuffering_closure
.type GHC.IO.Handle.Types.$tc'NoBuffering_closure, @object
GHC.IO.Handle.Types.$tc'NoBuffering_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'NoBuffering1_closure+1
	.quad	GHC.IO.Handle.Types.$tc'LineBuffering1_closure+1
	.quad	1829914617507863771
	.quad	-6927621472228119354
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.637972261 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'LineBuffering3_bytes
.type GHC.IO.Handle.Types.$tc'LineBuffering3_bytes, @object
GHC.IO.Handle.Types.$tc'LineBuffering3_bytes:
	.asciz "'LineBuffering"


==================== Asm code ====================
2018-03-16 16:03:18.639754684 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'LineBuffering2_closure
.type GHC.IO.Handle.Types.$tc'LineBuffering2_closure, @object
GHC.IO.Handle.Types.$tc'LineBuffering2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'LineBuffering3_bytes


==================== Asm code ====================
2018-03-16 16:03:18.641653917 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'LineBuffering_closure
.type GHC.IO.Handle.Types.$tc'LineBuffering_closure, @object
GHC.IO.Handle.Types.$tc'LineBuffering_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'LineBuffering2_closure+1
	.quad	GHC.IO.Handle.Types.$tc'LineBuffering1_closure+1
	.quad	6417231512954421547
	.quad	-3685588211208569675
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.64343409 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'BlockBuffering1_closure
.type GHC.IO.Handle.Types.$tc'BlockBuffering1_closure, @object
GHC.IO.Handle.Types.$tc'BlockBuffering1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep5_r8a5e_closure+1
	.quad	GHC.IO.Handle.Types.$tc'LineBuffering1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.645166989 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'BlockBuffering3_bytes
.type GHC.IO.Handle.Types.$tc'BlockBuffering3_bytes, @object
GHC.IO.Handle.Types.$tc'BlockBuffering3_bytes:
	.asciz "'BlockBuffering"


==================== Asm code ====================
2018-03-16 16:03:18.647585809 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'BlockBuffering2_closure
.type GHC.IO.Handle.Types.$tc'BlockBuffering2_closure, @object
GHC.IO.Handle.Types.$tc'BlockBuffering2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'BlockBuffering3_bytes


==================== Asm code ====================
2018-03-16 16:03:18.64996742 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'BlockBuffering_closure
.type GHC.IO.Handle.Types.$tc'BlockBuffering_closure, @object
GHC.IO.Handle.Types.$tc'BlockBuffering_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'BlockBuffering2_closure+1
	.quad	GHC.IO.Handle.Types.$tc'BlockBuffering1_closure+4
	.quad	704611490471072872
	.quad	-2790685429944469927
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.651667718 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tcNewline2_bytes
.type GHC.IO.Handle.Types.$tcNewline2_bytes, @object
GHC.IO.Handle.Types.$tcNewline2_bytes:
	.asciz "Newline"


==================== Asm code ====================
2018-03-16 16:03:18.653464985 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcNewline1_closure
.type GHC.IO.Handle.Types.$tcNewline1_closure, @object
GHC.IO.Handle.Types.$tcNewline1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tcNewline2_bytes


==================== Asm code ====================
2018-03-16 16:03:18.655300577 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcNewline_closure
.type GHC.IO.Handle.Types.$tcNewline_closure, @object
GHC.IO.Handle.Types.$tcNewline_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tcNewline1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	4144517894815066994
	.quad	-7574688725849234129
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.657105024 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'CRLF1_closure
.type GHC.IO.Handle.Types.$tc'CRLF1_closure, @object
GHC.IO.Handle.Types.$tc'CRLF1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Handle.Types.$tcNewline_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.658861591 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'LF2_bytes
.type GHC.IO.Handle.Types.$tc'LF2_bytes, @object
GHC.IO.Handle.Types.$tc'LF2_bytes:
	.asciz "'LF"


==================== Asm code ====================
2018-03-16 16:03:18.660641685 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'LF1_closure
.type GHC.IO.Handle.Types.$tc'LF1_closure, @object
GHC.IO.Handle.Types.$tc'LF1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'LF2_bytes


==================== Asm code ====================
2018-03-16 16:03:18.662793325 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'LF_closure
.type GHC.IO.Handle.Types.$tc'LF_closure, @object
GHC.IO.Handle.Types.$tc'LF_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'LF1_closure+1
	.quad	GHC.IO.Handle.Types.$tc'CRLF1_closure+1
	.quad	8352565500432618804
	.quad	-3495588108440232702
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.66448575 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'CRLF3_bytes
.type GHC.IO.Handle.Types.$tc'CRLF3_bytes, @object
GHC.IO.Handle.Types.$tc'CRLF3_bytes:
	.asciz "'CRLF"


==================== Asm code ====================
2018-03-16 16:03:18.666163141 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'CRLF2_closure
.type GHC.IO.Handle.Types.$tc'CRLF2_closure, @object
GHC.IO.Handle.Types.$tc'CRLF2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'CRLF3_bytes


==================== Asm code ====================
2018-03-16 16:03:18.667867879 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'CRLF_closure
.type GHC.IO.Handle.Types.$tc'CRLF_closure, @object
GHC.IO.Handle.Types.$tc'CRLF_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'CRLF2_closure+1
	.quad	GHC.IO.Handle.Types.$tc'CRLF1_closure+1
	.quad	-6405484506426483101
	.quad	3210182148185771829
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.669601243 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tcHandle__2_bytes
.type GHC.IO.Handle.Types.$tcHandle__2_bytes, @object
GHC.IO.Handle.Types.$tcHandle__2_bytes:
	.asciz "Handle__"


==================== Asm code ====================
2018-03-16 16:03:18.671174514 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcHandle__1_closure
.type GHC.IO.Handle.Types.$tcHandle__1_closure, @object
GHC.IO.Handle.Types.$tcHandle__1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tcHandle__2_bytes


==================== Asm code ====================
2018-03-16 16:03:18.673536627 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcHandle___closure
.type GHC.IO.Handle.Types.$tcHandle___closure, @object
GHC.IO.Handle.Types.$tcHandle___closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tcHandle__1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-7770821113614775552
	.quad	-7882958280734574069
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.675407475 UTC

.section .data
.align 8
.align 1
$krep46_r8a5T_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Handle.Types.$tcHandle___closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.677099691 UTC

.section .data
.align 8
.align 1
$krep47_r8a5U_closure:
	.quad	:_con_info
	.quad	$krep46_r8a5T_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.67935293 UTC

.section .data
.align 8
.align 1
$krep48_r8a5V_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.MVar.$tcMVar_closure
	.quad	$krep47_r8a5U_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.681018781 UTC

.section .data
.align 8
.align 1
$krep49_r8a5W_closure:
	.quad	:_con_info
	.quad	$krep48_r8a5V_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.682768 UTC

.section .data
.align 8
.align 1
$krep50_r8a5X_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Base.$tcMaybe_closure
	.quad	$krep49_r8a5W_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.684466784 UTC

.section .data
.align 8
.align 1
$krep51_r8a5Y_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep50_r8a5X_closure+1
	.quad	$krep46_r8a5T_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.686613539 UTC

.section .data
.align 8
.align 1
$krep52_r8a5Z_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.IO.Handle.Types.$tc'CRLF1_closure+1
	.quad	$krep51_r8a5Y_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.68830271 UTC

.section .data
.align 8
.align 1
$krep53_r8a60_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.IO.Handle.Types.$tc'CRLF1_closure+1
	.quad	$krep52_r8a5Z_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.689988696 UTC

.section .data
.align 8
.align 1
$krep54_r8a61_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep7_r8a5g_closure+1
	.quad	$krep53_r8a60_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.691702292 UTC

.section .data
.align 8
.align 1
$krep55_r8a62_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep23_r8a5w_closure+1
	.quad	$krep54_r8a61_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.693450324 UTC

.section .data
.align 8
.align 1
$krep56_r8a63_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep34_r8a5H_closure+1
	.quad	$krep55_r8a62_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.695197266 UTC

.section .data
.align 8
.align 1
$krep57_r8a64_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep45_r8a5S_closure+1
	.quad	$krep56_r8a63_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.696938547 UTC

.section .data
.align 8
.align 1
$krep58_r8a65_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep11_r8a5k_closure+1
	.quad	$krep57_r8a64_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.699315649 UTC

.section .data
.align 8
.align 1
$krep59_r8a66_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep27_r8a5A_closure+1
	.quad	$krep58_r8a65_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.701176165 UTC

.section .data
.align 8
.align 1
$krep60_r8a67_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.IO.Handle.Types.$tc'LineBuffering1_closure+1
	.quad	$krep59_r8a66_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.703329395 UTC

.section .data
.align 8
.align 1
$krep61_r8a68_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep15_r8a5o_closure+1
	.quad	$krep60_r8a67_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.705077391 UTC

.section .data
.align 8
.align 1
$krep62_r8a69_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.IO.Handle.Types.$tc'AppendHandle1_closure+1
	.quad	$krep61_r8a68_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.706846759 UTC

.section .data
.align 8
.align 1
$krep63_r8a6a_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep35_r8a5I_closure+2
	.quad	$krep62_r8a69_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.708691867 UTC

.section .data
.align 8
.align 1
$krep64_r8a6b_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep39_r8a5M_closure+1
	.quad	$krep63_r8a6a_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.710469782 UTC

.section .data
.align 8
.align 1
$krep65_r8a6c_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep41_r8a5O_closure+1
	.quad	$krep64_r8a6b_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.712223377 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'Handle__1_closure
.type GHC.IO.Handle.Types.$tc'Handle__1_closure, @object
GHC.IO.Handle.Types.$tc'Handle__1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep40_r8a5N_closure+1
	.quad	$krep65_r8a6c_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.71392895 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'Handle__3_bytes
.type GHC.IO.Handle.Types.$tc'Handle__3_bytes, @object
GHC.IO.Handle.Types.$tc'Handle__3_bytes:
	.asciz "'Handle__"


==================== Asm code ====================
2018-03-16 16:03:18.715619621 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'Handle__2_closure
.type GHC.IO.Handle.Types.$tc'Handle__2_closure, @object
GHC.IO.Handle.Types.$tc'Handle__2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'Handle__3_bytes


==================== Asm code ====================
2018-03-16 16:03:18.717972039 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'Handle___closure
.type GHC.IO.Handle.Types.$tc'Handle___closure, @object
GHC.IO.Handle.Types.$tc'Handle___closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'Handle__2_closure+1
	.quad	GHC.IO.Handle.Types.$tc'Handle__1_closure+4
	.quad	-3045823259334346200
	.quad	-3987933354209732046
	.quad	3
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.719777784 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tcHandle2_bytes
.type GHC.IO.Handle.Types.$tcHandle2_bytes, @object
GHC.IO.Handle.Types.$tcHandle2_bytes:
	.asciz "Handle"


==================== Asm code ====================
2018-03-16 16:03:18.721751093 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcHandle1_closure
.type GHC.IO.Handle.Types.$tcHandle1_closure, @object
GHC.IO.Handle.Types.$tcHandle1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tcHandle2_bytes


==================== Asm code ====================
2018-03-16 16:03:18.723603005 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcHandle_closure
.type GHC.IO.Handle.Types.$tcHandle_closure, @object
GHC.IO.Handle.Types.$tcHandle_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tcHandle1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	6808292778723485333
	.quad	-9207444908635607957
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.725384166 UTC

.section .data
.align 8
.align 1
$krep66_r8a6d_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Handle.Types.$tcHandle_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.727815244 UTC

.section .data
.align 8
.align 1
$krep67_r8a6e_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep48_r8a5V_closure+1
	.quad	$krep66_r8a6d_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.730053561 UTC

.section .data
.align 8
.align 1
$krep68_r8a6f_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep48_r8a5V_closure+1
	.quad	$krep67_r8a6e_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.731867374 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'DuplexHandle1_closure
.type GHC.IO.Handle.Types.$tc'DuplexHandle1_closure, @object
GHC.IO.Handle.Types.$tc'DuplexHandle1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep16_r8a5p_closure+1
	.quad	$krep68_r8a6f_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.733606961 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'DuplexHandle3_bytes
.type GHC.IO.Handle.Types.$tc'DuplexHandle3_bytes, @object
GHC.IO.Handle.Types.$tc'DuplexHandle3_bytes:
	.asciz "'DuplexHandle"


==================== Asm code ====================
2018-03-16 16:03:18.735345224 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'DuplexHandle2_closure
.type GHC.IO.Handle.Types.$tc'DuplexHandle2_closure, @object
GHC.IO.Handle.Types.$tc'DuplexHandle2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'DuplexHandle3_bytes


==================== Asm code ====================
2018-03-16 16:03:18.737215474 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'DuplexHandle_closure
.type GHC.IO.Handle.Types.$tc'DuplexHandle_closure, @object
GHC.IO.Handle.Types.$tc'DuplexHandle_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'DuplexHandle2_closure+1
	.quad	GHC.IO.Handle.Types.$tc'DuplexHandle1_closure+4
	.quad	477065760828861081
	.quad	4557316572761143129
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.739027549 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'FileHandle1_closure
.type GHC.IO.Handle.Types.$tc'FileHandle1_closure, @object
GHC.IO.Handle.Types.$tc'FileHandle1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep16_r8a5p_closure+1
	.quad	$krep67_r8a6e_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.740763989 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'FileHandle3_bytes
.type GHC.IO.Handle.Types.$tc'FileHandle3_bytes, @object
GHC.IO.Handle.Types.$tc'FileHandle3_bytes:
	.asciz "'FileHandle"


==================== Asm code ====================
2018-03-16 16:03:18.742433378 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'FileHandle2_closure
.type GHC.IO.Handle.Types.$tc'FileHandle2_closure, @object
GHC.IO.Handle.Types.$tc'FileHandle2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'FileHandle3_bytes


==================== Asm code ====================
2018-03-16 16:03:18.744220345 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'FileHandle_closure
.type GHC.IO.Handle.Types.$tc'FileHandle_closure, @object
GHC.IO.Handle.Types.$tc'FileHandle_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'FileHandle2_closure+1
	.quad	GHC.IO.Handle.Types.$tc'FileHandle1_closure+4
	.quad	5544613225695748436
	.quad	8829945929965735507
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.746307513 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcNewlineMode1_closure
.type GHC.IO.Handle.Types.$tcNewlineMode1_closure, @object
GHC.IO.Handle.Types.$tcNewlineMode1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode17_bytes


==================== Asm code ====================
2018-03-16 16:03:18.748137523 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcNewlineMode_closure
.type GHC.IO.Handle.Types.$tcNewlineMode_closure, @object
GHC.IO.Handle.Types.$tcNewlineMode_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tcNewlineMode1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-493703256650162584
	.quad	-5947794734609590778
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.749853805 UTC

.section .data
.align 8
.align 1
$krep69_r8a6g_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Handle.Types.$tcNewlineMode_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.751600947 UTC

.section .data
.align 8
.align 1
$krep70_r8a6h_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.IO.Handle.Types.$tc'CRLF1_closure+1
	.quad	$krep69_r8a6g_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.75397536 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'NewlineMode1_closure
.type GHC.IO.Handle.Types.$tc'NewlineMode1_closure, @object
GHC.IO.Handle.Types.$tc'NewlineMode1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.IO.Handle.Types.$tc'CRLF1_closure+1
	.quad	$krep70_r8a6h_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.755616857 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'NewlineMode3_bytes
.type GHC.IO.Handle.Types.$tc'NewlineMode3_bytes, @object
GHC.IO.Handle.Types.$tc'NewlineMode3_bytes:
	.asciz "'NewlineMode"


==================== Asm code ====================
2018-03-16 16:03:18.757340629 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'NewlineMode2_closure
.type GHC.IO.Handle.Types.$tc'NewlineMode2_closure, @object
GHC.IO.Handle.Types.$tc'NewlineMode2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'NewlineMode3_bytes


==================== Asm code ====================
2018-03-16 16:03:18.759155755 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'NewlineMode_closure
.type GHC.IO.Handle.Types.$tc'NewlineMode_closure, @object
GHC.IO.Handle.Types.$tc'NewlineMode_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'NewlineMode2_closure+1
	.quad	GHC.IO.Handle.Types.$tc'NewlineMode1_closure+4
	.quad	4266278501114659446
	.quad	-499281649975094606
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:18.761422896 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.checkHandleInvariants1_closure
.type GHC.IO.Handle.Types.checkHandleInvariants1_closure, @object
GHC.IO.Handle.Types.checkHandleInvariants1_closure:
	.quad	GHC.IO.Handle.Types.checkHandleInvariants1_info


==================== Asm code ====================
2018-03-16 16:03:18.762149767 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.checkHandleInvariants1_entry
.type GHC.IO.Handle.Types.checkHandleInvariants1_entry, @object
GHC.IO.Handle.Types.checkHandleInvariants1_entry:
_c8eaf:
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.checkHandleInvariants1_entry, .-GHC.IO.Handle.Types.checkHandleInvariants1_entry


==================== Asm code ====================
2018-03-16 16:03:18.762769031 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.checkHandleInvariants1_info
.type GHC.IO.Handle.Types.checkHandleInvariants1_info, @object
GHC.IO.Handle.Types.checkHandleInvariants1_info:
	.quad	GHC.IO.Handle.Types.checkHandleInvariants1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:18.764860863 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.checkHandleInvariants_closure
.type GHC.IO.Handle.Types.checkHandleInvariants_closure, @object
GHC.IO.Handle.Types.checkHandleInvariants_closure:
	.quad	GHC.IO.Handle.Types.checkHandleInvariants_info


==================== Asm code ====================
2018-03-16 16:03:18.766077504 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.checkHandleInvariants_entry
.type GHC.IO.Handle.Types.checkHandleInvariants_entry, @object
GHC.IO.Handle.Types.checkHandleInvariants_entry:
_c8ear:
	jmp GHC.IO.Handle.Types.checkHandleInvariants1_entry
	.size GHC.IO.Handle.Types.checkHandleInvariants_entry, .-GHC.IO.Handle.Types.checkHandleInvariants_entry


==================== Asm code ====================
2018-03-16 16:03:18.766601558 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.checkHandleInvariants_info
.type GHC.IO.Handle.Types.checkHandleInvariants_info, @object
GHC.IO.Handle.Types.checkHandleInvariants_info:
	.quad	GHC.IO.Handle.Types.checkHandleInvariants_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:18.768962237 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.NewlineMode_closure
.type GHC.IO.Handle.Types.NewlineMode_closure, @object
GHC.IO.Handle.Types.NewlineMode_closure:
	.quad	GHC.IO.Handle.Types.NewlineMode_info


==================== Asm code ====================
2018-03-16 16:03:18.769780888 UTC

.section .text
.align 8
GHC.IO.Handle.Types.NewlineMode_entry:
_c8eaD:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8eaH
_c8eaG:
	movq $GHC.IO.Handle.Types.NewlineMode_con_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8eaH:
	movq $24,904(%r13)
	movl $GHC.IO.Handle.Types.NewlineMode_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.NewlineMode_entry, .-GHC.IO.Handle.Types.NewlineMode_entry


==================== Asm code ====================
2018-03-16 16:03:18.770435388 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.IO.Handle.Types.NewlineMode_info:
	.quad	GHC.IO.Handle.Types.NewlineMode_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:18.772192731 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.LF_closure
.type GHC.IO.Handle.Types.LF_closure, @object
GHC.IO.Handle.Types.LF_closure:
	.quad	GHC.IO.Handle.Types.LF_con_info


==================== Asm code ====================
2018-03-16 16:03:18.773965448 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.CRLF_closure
.type GHC.IO.Handle.Types.CRLF_closure, @object
GHC.IO.Handle.Types.CRLF_closure:
	.quad	GHC.IO.Handle.Types.CRLF_con_info


==================== Asm code ====================
2018-03-16 16:03:18.775639649 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.NoBuffering_closure
.type GHC.IO.Handle.Types.NoBuffering_closure, @object
GHC.IO.Handle.Types.NoBuffering_closure:
	.quad	GHC.IO.Handle.Types.NoBuffering_con_info


==================== Asm code ====================
2018-03-16 16:03:18.777232237 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.LineBuffering_closure
.type GHC.IO.Handle.Types.LineBuffering_closure, @object
GHC.IO.Handle.Types.LineBuffering_closure:
	.quad	GHC.IO.Handle.Types.LineBuffering_con_info


==================== Asm code ====================
2018-03-16 16:03:18.779813011 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.BlockBuffering_closure
.type GHC.IO.Handle.Types.BlockBuffering_closure, @object
GHC.IO.Handle.Types.BlockBuffering_closure:
	.quad	GHC.IO.Handle.Types.BlockBuffering_info


==================== Asm code ====================
2018-03-16 16:03:18.780653951 UTC

.section .text
.align 8
GHC.IO.Handle.Types.BlockBuffering_entry:
_c8eaW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8eb0
_c8eaZ:
	movq $GHC.IO.Handle.Types.BlockBuffering_con_info,-8(%r12)
	movq %r14,(%r12)
	leaq -5(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8eb0:
	movq $16,904(%r13)
	movl $GHC.IO.Handle.Types.BlockBuffering_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.BlockBuffering_entry, .-GHC.IO.Handle.Types.BlockBuffering_entry


==================== Asm code ====================
2018-03-16 16:03:18.782473577 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.IO.Handle.Types.BlockBuffering_info:
	.quad	GHC.IO.Handle.Types.BlockBuffering_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:18.784396098 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.ClosedHandle_closure
.type GHC.IO.Handle.Types.ClosedHandle_closure, @object
GHC.IO.Handle.Types.ClosedHandle_closure:
	.quad	GHC.IO.Handle.Types.ClosedHandle_con_info


==================== Asm code ====================
2018-03-16 16:03:18.78617548 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.SemiClosedHandle_closure
.type GHC.IO.Handle.Types.SemiClosedHandle_closure, @object
GHC.IO.Handle.Types.SemiClosedHandle_closure:
	.quad	GHC.IO.Handle.Types.SemiClosedHandle_con_info


==================== Asm code ====================
2018-03-16 16:03:18.787777741 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.ReadHandle_closure
.type GHC.IO.Handle.Types.ReadHandle_closure, @object
GHC.IO.Handle.Types.ReadHandle_closure:
	.quad	GHC.IO.Handle.Types.ReadHandle_con_info


==================== Asm code ====================
2018-03-16 16:03:18.789508367 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.WriteHandle_closure
.type GHC.IO.Handle.Types.WriteHandle_closure, @object
GHC.IO.Handle.Types.WriteHandle_closure:
	.quad	GHC.IO.Handle.Types.WriteHandle_con_info


==================== Asm code ====================
2018-03-16 16:03:18.791262872 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.AppendHandle_closure
.type GHC.IO.Handle.Types.AppendHandle_closure, @object
GHC.IO.Handle.Types.AppendHandle_closure:
	.quad	GHC.IO.Handle.Types.AppendHandle_con_info


==================== Asm code ====================
2018-03-16 16:03:18.792900331 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.ReadWriteHandle_closure
.type GHC.IO.Handle.Types.ReadWriteHandle_closure, @object
GHC.IO.Handle.Types.ReadWriteHandle_closure:
	.quad	GHC.IO.Handle.Types.ReadWriteHandle_con_info


==================== Asm code ====================
2018-03-16 16:03:18.795150078 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.BufferListNil_closure
.type GHC.IO.Handle.Types.BufferListNil_closure, @object
GHC.IO.Handle.Types.BufferListNil_closure:
	.quad	GHC.IO.Handle.Types.BufferListNil_con_info


==================== Asm code ====================
2018-03-16 16:03:18.797733581 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.BufferListCons_closure
.type GHC.IO.Handle.Types.BufferListCons_closure, @object
GHC.IO.Handle.Types.BufferListCons_closure:
	.quad	GHC.IO.Handle.Types.BufferListCons_info


==================== Asm code ====================
2018-03-16 16:03:18.79858389 UTC

.section .text
.align 8
GHC.IO.Handle.Types.BufferListCons_entry:
_c8ebi:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8ebm
_c8ebl:
	movq $GHC.IO.Handle.Types.BufferListCons_con_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8ebm:
	movq $24,904(%r13)
	movl $GHC.IO.Handle.Types.BufferListCons_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.BufferListCons_entry, .-GHC.IO.Handle.Types.BufferListCons_entry


==================== Asm code ====================
2018-03-16 16:03:18.799194336 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.IO.Handle.Types.BufferListCons_info:
	.quad	GHC.IO.Handle.Types.BufferListCons_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:18.802767821 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.Handle___closure
.type GHC.IO.Handle.Types.Handle___closure, @object
GHC.IO.Handle.Types.Handle___closure:
	.quad	GHC.IO.Handle.Types.Handle___info


==================== Asm code ====================
2018-03-16 16:03:18.80348856 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.Handle___slow
.type GHC.IO.Handle.Types.Handle___slow, @object
GHC.IO.Handle.Types.Handle___slow:
_c8ebt:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Types.Handle___entry
	.size GHC.IO.Handle.Types.Handle___slow, .-GHC.IO.Handle.Types.Handle___slow


==================== Asm code ====================
2018-03-16 16:03:18.804360359 UTC

.section .text
.align 8
GHC.IO.Handle.Types.Handle___entry:
_c8eby:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _c8ebC
_c8ebB:
	movq $GHC.IO.Handle.Types.Handle___con_info,-128(%r12)
	movq %r14,-120(%r12)
	movq %rsi,-112(%r12)
	movq %rdi,-104(%r12)
	movq %r8,-96(%r12)
	movq %r9,-88(%r12)
	movq (%rbp),%rax
	movq %rax,-80(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 16(%rbp),%rax
	movq %rax,-64(%r12)
	movq 24(%rbp),%rax
	movq %rax,-56(%r12)
	movq 32(%rbp),%rax
	movq %rax,-48(%r12)
	movq 40(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq 56(%rbp),%rax
	movq %rax,-24(%r12)
	movq 64(%rbp),%rax
	movq %rax,-16(%r12)
	movq 72(%rbp),%rax
	movq %rax,-8(%r12)
	movq 80(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $88,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ebC:
	movq $136,904(%r13)
	movl $GHC.IO.Handle.Types.Handle___closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.Handle___entry, .-GHC.IO.Handle.Types.Handle___entry


==================== Asm code ====================
2018-03-16 16:03:18.805184942 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.IO.Handle.Types.Handle___info:
	.quad	GHC.IO.Handle.Types.Handle___entry
	.quad	0
	.quad	14
	.quad	68719476736
	.quad	0
	.quad	16
	.quad	GHC.IO.Handle.Types.Handle___slow


==================== Asm code ====================
2018-03-16 16:03:18.808078578 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.FileHandle_closure
.type GHC.IO.Handle.Types.FileHandle_closure, @object
GHC.IO.Handle.Types.FileHandle_closure:
	.quad	GHC.IO.Handle.Types.FileHandle_info


==================== Asm code ====================
2018-03-16 16:03:18.808787977 UTC

.section .text
.align 8
GHC.IO.Handle.Types.FileHandle_entry:
_c8ec0:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8ec4
_c8ec3:
	movq $GHC.IO.Handle.Types.FileHandle_con_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8ec4:
	movq $24,904(%r13)
	movl $GHC.IO.Handle.Types.FileHandle_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.FileHandle_entry, .-GHC.IO.Handle.Types.FileHandle_entry


==================== Asm code ====================
2018-03-16 16:03:18.809482134 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.IO.Handle.Types.FileHandle_info:
	.quad	GHC.IO.Handle.Types.FileHandle_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:18.81193593 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.DuplexHandle_closure
.type GHC.IO.Handle.Types.DuplexHandle_closure, @object
GHC.IO.Handle.Types.DuplexHandle_closure:
	.quad	GHC.IO.Handle.Types.DuplexHandle_info


==================== Asm code ====================
2018-03-16 16:03:18.812694661 UTC

.section .text
.align 8
GHC.IO.Handle.Types.DuplexHandle_entry:
_c8ecf:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8ecj
_c8eci:
	movq $GHC.IO.Handle.Types.DuplexHandle_con_info,-24(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -22(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8ecj:
	movq $32,904(%r13)
	movl $GHC.IO.Handle.Types.DuplexHandle_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.DuplexHandle_entry, .-GHC.IO.Handle.Types.DuplexHandle_entry


==================== Asm code ====================
2018-03-16 16:03:18.813422537 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.IO.Handle.Types.DuplexHandle_info:
	.quad	GHC.IO.Handle.Types.DuplexHandle_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:03:18.816149211 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8ctS_str:
	.asciz "base:GHC.IO.Handle.Types.NewlineMode"


==================== Asm code ====================
2018-03-16 16:03:18.816830373 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.NewlineMode_con_entry
.type GHC.IO.Handle.Types.NewlineMode_con_entry, @object
GHC.IO.Handle.Types.NewlineMode_con_entry:
_c8ecp:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.NewlineMode_con_entry, .-GHC.IO.Handle.Types.NewlineMode_con_entry


==================== Asm code ====================
2018-03-16 16:03:18.817643982 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.NewlineMode_con_info
.type GHC.IO.Handle.Types.NewlineMode_con_info, @object
GHC.IO.Handle.Types.NewlineMode_con_info:
	.quad	GHC.IO.Handle.Types.NewlineMode_con_entry
	.quad	2
	.quad	4
	.quad	i8ctS_str


==================== Asm code ====================
2018-03-16 16:03:18.81936839 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.Newline_closure_tbl
.type GHC.IO.Handle.Types.Newline_closure_tbl, @object
GHC.IO.Handle.Types.Newline_closure_tbl:
	.quad	GHC.IO.Handle.Types.LF_closure+1
	.quad	GHC.IO.Handle.Types.CRLF_closure+2


==================== Asm code ====================
2018-03-16 16:03:18.821461285 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8ctU_str:
	.asciz "base:GHC.IO.Handle.Types.LF"


==================== Asm code ====================
2018-03-16 16:03:18.822137317 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.LF_con_entry
.type GHC.IO.Handle.Types.LF_con_entry, @object
GHC.IO.Handle.Types.LF_con_entry:
_c8ecw:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.LF_con_entry, .-GHC.IO.Handle.Types.LF_con_entry


==================== Asm code ====================
2018-03-16 16:03:18.82273052 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.LF_con_info
.type GHC.IO.Handle.Types.LF_con_info, @object
GHC.IO.Handle.Types.LF_con_info:
	.quad	GHC.IO.Handle.Types.LF_con_entry
	.quad	4294967296
	.quad	3
	.quad	i8ctU_str


==================== Asm code ====================
2018-03-16 16:03:18.824664439 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8ctW_str:
	.asciz "base:GHC.IO.Handle.Types.CRLF"


==================== Asm code ====================
2018-03-16 16:03:18.82556096 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.CRLF_con_entry
.type GHC.IO.Handle.Types.CRLF_con_entry, @object
GHC.IO.Handle.Types.CRLF_con_entry:
_c8ecC:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.CRLF_con_entry, .-GHC.IO.Handle.Types.CRLF_con_entry


==================== Asm code ====================
2018-03-16 16:03:18.826115752 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.CRLF_con_info
.type GHC.IO.Handle.Types.CRLF_con_info, @object
GHC.IO.Handle.Types.CRLF_con_info:
	.quad	GHC.IO.Handle.Types.CRLF_con_entry
	.quad	4294967296
	.quad	4294967299
	.quad	i8ctW_str


==================== Asm code ====================
2018-03-16 16:03:18.828135348 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8ctY_str:
	.asciz "base:GHC.IO.Handle.Types.NoBuffering"


==================== Asm code ====================
2018-03-16 16:03:18.82872788 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.NoBuffering_con_entry
.type GHC.IO.Handle.Types.NoBuffering_con_entry, @object
GHC.IO.Handle.Types.NoBuffering_con_entry:
_c8ecI:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.NoBuffering_con_entry, .-GHC.IO.Handle.Types.NoBuffering_con_entry


==================== Asm code ====================
2018-03-16 16:03:18.829316623 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.NoBuffering_con_info
.type GHC.IO.Handle.Types.NoBuffering_con_info, @object
GHC.IO.Handle.Types.NoBuffering_con_info:
	.quad	GHC.IO.Handle.Types.NoBuffering_con_entry
	.quad	4294967296
	.quad	3
	.quad	i8ctY_str


==================== Asm code ====================
2018-03-16 16:03:18.831347881 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8cu0_str:
	.asciz "base:GHC.IO.Handle.Types.LineBuffering"


==================== Asm code ====================
2018-03-16 16:03:18.832023152 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.LineBuffering_con_entry
.type GHC.IO.Handle.Types.LineBuffering_con_entry, @object
GHC.IO.Handle.Types.LineBuffering_con_entry:
_c8ecO:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.LineBuffering_con_entry, .-GHC.IO.Handle.Types.LineBuffering_con_entry


==================== Asm code ====================
2018-03-16 16:03:18.832623591 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.LineBuffering_con_info
.type GHC.IO.Handle.Types.LineBuffering_con_info, @object
GHC.IO.Handle.Types.LineBuffering_con_info:
	.quad	GHC.IO.Handle.Types.LineBuffering_con_entry
	.quad	4294967296
	.quad	4294967299
	.quad	i8cu0_str


==================== Asm code ====================
2018-03-16 16:03:18.83463707 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8cu2_str:
	.asciz "base:GHC.IO.Handle.Types.BlockBuffering"


==================== Asm code ====================
2018-03-16 16:03:18.8352684 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.BlockBuffering_con_entry
.type GHC.IO.Handle.Types.BlockBuffering_con_entry, @object
GHC.IO.Handle.Types.BlockBuffering_con_entry:
_c8ecU:
	addq $3,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.BlockBuffering_con_entry, .-GHC.IO.Handle.Types.BlockBuffering_con_entry


==================== Asm code ====================
2018-03-16 16:03:18.83585183 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.BlockBuffering_con_info
.type GHC.IO.Handle.Types.BlockBuffering_con_info, @object
GHC.IO.Handle.Types.BlockBuffering_con_info:
	.quad	GHC.IO.Handle.Types.BlockBuffering_con_entry
	.quad	1
	.quad	8589934594
	.quad	i8cu2_str


==================== Asm code ====================
2018-03-16 16:03:18.837659513 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.HandleType_closure_tbl
.type GHC.IO.Handle.Types.HandleType_closure_tbl, @object
GHC.IO.Handle.Types.HandleType_closure_tbl:
	.quad	GHC.IO.Handle.Types.ClosedHandle_closure+1
	.quad	GHC.IO.Handle.Types.SemiClosedHandle_closure+2
	.quad	GHC.IO.Handle.Types.ReadHandle_closure+3
	.quad	GHC.IO.Handle.Types.WriteHandle_closure+4
	.quad	GHC.IO.Handle.Types.AppendHandle_closure+5
	.quad	GHC.IO.Handle.Types.ReadWriteHandle_closure+6


==================== Asm code ====================
2018-03-16 16:03:18.839701375 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8cu4_str:
	.asciz "base:GHC.IO.Handle.Types.ClosedHandle"


==================== Asm code ====================
2018-03-16 16:03:18.840286511 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.ClosedHandle_con_entry
.type GHC.IO.Handle.Types.ClosedHandle_con_entry, @object
GHC.IO.Handle.Types.ClosedHandle_con_entry:
_c8ed1:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.ClosedHandle_con_entry, .-GHC.IO.Handle.Types.ClosedHandle_con_entry


==================== Asm code ====================
2018-03-16 16:03:18.84086198 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.ClosedHandle_con_info
.type GHC.IO.Handle.Types.ClosedHandle_con_info, @object
GHC.IO.Handle.Types.ClosedHandle_con_info:
	.quad	GHC.IO.Handle.Types.ClosedHandle_con_entry
	.quad	4294967296
	.quad	3
	.quad	i8cu4_str


==================== Asm code ====================
2018-03-16 16:03:18.843357541 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8cu6_str:
	.asciz "base:GHC.IO.Handle.Types.SemiClosedHandle"


==================== Asm code ====================
2018-03-16 16:03:18.844030426 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.SemiClosedHandle_con_entry
.type GHC.IO.Handle.Types.SemiClosedHandle_con_entry, @object
GHC.IO.Handle.Types.SemiClosedHandle_con_entry:
_c8ed7:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.SemiClosedHandle_con_entry, .-GHC.IO.Handle.Types.SemiClosedHandle_con_entry


==================== Asm code ====================
2018-03-16 16:03:18.844652226 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.SemiClosedHandle_con_info
.type GHC.IO.Handle.Types.SemiClosedHandle_con_info, @object
GHC.IO.Handle.Types.SemiClosedHandle_con_info:
	.quad	GHC.IO.Handle.Types.SemiClosedHandle_con_entry
	.quad	4294967296
	.quad	4294967299
	.quad	i8cu6_str


==================== Asm code ====================
2018-03-16 16:03:18.847053743 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8cu8_str:
	.asciz "base:GHC.IO.Handle.Types.ReadHandle"


==================== Asm code ====================
2018-03-16 16:03:18.847666796 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.ReadHandle_con_entry
.type GHC.IO.Handle.Types.ReadHandle_con_entry, @object
GHC.IO.Handle.Types.ReadHandle_con_entry:
_c8edd:
	addq $3,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.ReadHandle_con_entry, .-GHC.IO.Handle.Types.ReadHandle_con_entry


==================== Asm code ====================
2018-03-16 16:03:18.848226368 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.ReadHandle_con_info
.type GHC.IO.Handle.Types.ReadHandle_con_info, @object
GHC.IO.Handle.Types.ReadHandle_con_info:
	.quad	GHC.IO.Handle.Types.ReadHandle_con_entry
	.quad	4294967296
	.quad	8589934595
	.quad	i8cu8_str


==================== Asm code ====================
2018-03-16 16:03:18.850176356 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8cua_str:
	.asciz "base:GHC.IO.Handle.Types.WriteHandle"


==================== Asm code ====================
2018-03-16 16:03:18.850806221 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.WriteHandle_con_entry
.type GHC.IO.Handle.Types.WriteHandle_con_entry, @object
GHC.IO.Handle.Types.WriteHandle_con_entry:
_c8edj:
	addq $4,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.WriteHandle_con_entry, .-GHC.IO.Handle.Types.WriteHandle_con_entry


==================== Asm code ====================
2018-03-16 16:03:18.851409792 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.WriteHandle_con_info
.type GHC.IO.Handle.Types.WriteHandle_con_info, @object
GHC.IO.Handle.Types.WriteHandle_con_info:
	.quad	GHC.IO.Handle.Types.WriteHandle_con_entry
	.quad	4294967296
	.quad	12884901891
	.quad	i8cua_str


==================== Asm code ====================
2018-03-16 16:03:18.853301168 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8cuc_str:
	.asciz "base:GHC.IO.Handle.Types.AppendHandle"


==================== Asm code ====================
2018-03-16 16:03:18.853925423 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.AppendHandle_con_entry
.type GHC.IO.Handle.Types.AppendHandle_con_entry, @object
GHC.IO.Handle.Types.AppendHandle_con_entry:
_c8edp:
	addq $5,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.AppendHandle_con_entry, .-GHC.IO.Handle.Types.AppendHandle_con_entry


==================== Asm code ====================
2018-03-16 16:03:18.854532832 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.AppendHandle_con_info
.type GHC.IO.Handle.Types.AppendHandle_con_info, @object
GHC.IO.Handle.Types.AppendHandle_con_info:
	.quad	GHC.IO.Handle.Types.AppendHandle_con_entry
	.quad	4294967296
	.quad	17179869187
	.quad	i8cuc_str


==================== Asm code ====================
2018-03-16 16:03:18.856459275 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8cue_str:
	.asciz "base:GHC.IO.Handle.Types.ReadWriteHandle"


==================== Asm code ====================
2018-03-16 16:03:18.857018627 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.ReadWriteHandle_con_entry
.type GHC.IO.Handle.Types.ReadWriteHandle_con_entry, @object
GHC.IO.Handle.Types.ReadWriteHandle_con_entry:
_c8edv:
	addq $6,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.ReadWriteHandle_con_entry, .-GHC.IO.Handle.Types.ReadWriteHandle_con_entry


==================== Asm code ====================
2018-03-16 16:03:18.85764429 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.ReadWriteHandle_con_info
.type GHC.IO.Handle.Types.ReadWriteHandle_con_info, @object
GHC.IO.Handle.Types.ReadWriteHandle_con_info:
	.quad	GHC.IO.Handle.Types.ReadWriteHandle_con_entry
	.quad	4294967296
	.quad	21474836483
	.quad	i8cue_str


==================== Asm code ====================
2018-03-16 16:03:18.859555015 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8cug_str:
	.asciz "base:GHC.IO.Handle.Types.BufferListNil"


==================== Asm code ====================
2018-03-16 16:03:18.860191635 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.BufferListNil_con_entry
.type GHC.IO.Handle.Types.BufferListNil_con_entry, @object
GHC.IO.Handle.Types.BufferListNil_con_entry:
_c8edB:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.BufferListNil_con_entry, .-GHC.IO.Handle.Types.BufferListNil_con_entry


==================== Asm code ====================
2018-03-16 16:03:18.860793332 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.BufferListNil_con_info
.type GHC.IO.Handle.Types.BufferListNil_con_info, @object
GHC.IO.Handle.Types.BufferListNil_con_info:
	.quad	GHC.IO.Handle.Types.BufferListNil_con_entry
	.quad	4294967296
	.quad	3
	.quad	i8cug_str


==================== Asm code ====================
2018-03-16 16:03:18.862766241 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8cui_str:
	.asciz "base:GHC.IO.Handle.Types.BufferListCons"


==================== Asm code ====================
2018-03-16 16:03:18.863353283 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.BufferListCons_con_entry
.type GHC.IO.Handle.Types.BufferListCons_con_entry, @object
GHC.IO.Handle.Types.BufferListCons_con_entry:
_c8edH:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.BufferListCons_con_entry, .-GHC.IO.Handle.Types.BufferListCons_con_entry


==================== Asm code ====================
2018-03-16 16:03:18.863932735 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.BufferListCons_con_info
.type GHC.IO.Handle.Types.BufferListCons_con_info, @object
GHC.IO.Handle.Types.BufferListCons_con_info:
	.quad	GHC.IO.Handle.Types.BufferListCons_con_entry
	.quad	2
	.quad	4294967300
	.quad	i8cui_str


==================== Asm code ====================
2018-03-16 16:03:18.866583009 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8cuk_str:
	.asciz "base:GHC.IO.Handle.Types.Handle__"


==================== Asm code ====================
2018-03-16 16:03:18.867194464 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.Handle___con_entry
.type GHC.IO.Handle.Types.Handle___con_entry, @object
GHC.IO.Handle.Types.Handle___con_entry:
_c8edN:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.Handle___con_entry, .-GHC.IO.Handle.Types.Handle___con_entry


==================== Asm code ====================
2018-03-16 16:03:18.867771067 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.Handle___con_info
.type GHC.IO.Handle.Types.Handle___con_info, @object
GHC.IO.Handle.Types.Handle___con_info:
	.quad	GHC.IO.Handle.Types.Handle___con_entry
	.quad	16
	.quad	1
	.quad	i8cuk_str


==================== Asm code ====================
2018-03-16 16:03:18.869767384 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8cum_str:
	.asciz "base:GHC.IO.Handle.Types.FileHandle"


==================== Asm code ====================
2018-03-16 16:03:18.870370792 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.FileHandle_con_entry
.type GHC.IO.Handle.Types.FileHandle_con_entry, @object
GHC.IO.Handle.Types.FileHandle_con_entry:
_c8edT:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.FileHandle_con_entry, .-GHC.IO.Handle.Types.FileHandle_con_entry


==================== Asm code ====================
2018-03-16 16:03:18.871439933 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.FileHandle_con_info
.type GHC.IO.Handle.Types.FileHandle_con_info, @object
GHC.IO.Handle.Types.FileHandle_con_info:
	.quad	GHC.IO.Handle.Types.FileHandle_con_entry
	.quad	2
	.quad	4
	.quad	i8cum_str


==================== Asm code ====================
2018-03-16 16:03:18.873591395 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8cuo_str:
	.asciz "base:GHC.IO.Handle.Types.DuplexHandle"


==================== Asm code ====================
2018-03-16 16:03:18.874223007 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.DuplexHandle_con_entry
.type GHC.IO.Handle.Types.DuplexHandle_con_entry, @object
GHC.IO.Handle.Types.DuplexHandle_con_entry:
_c8edZ:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.DuplexHandle_con_entry, .-GHC.IO.Handle.Types.DuplexHandle_con_entry


==================== Asm code ====================
2018-03-16 16:03:18.874809065 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.DuplexHandle_con_info
.type GHC.IO.Handle.Types.DuplexHandle_con_info, @object
GHC.IO.Handle.Types.DuplexHandle_con_info:
	.quad	GHC.IO.Handle.Types.DuplexHandle_con_entry
	.quad	3
	.quad	4294967297
	.quad	i8cuo_str


==================== Asm code ====================
2018-03-16 16:03:18.878027745 UTC

.section .data.rel.ro
.align 8
.align 1
S8alj_srt:
	.quad	GHC.IO.Handle.Types.$w$cshowsPrec_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType1_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType3_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType5_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType7_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType9_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType11_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType_$cshow_closure
	.quad	GHC.IO.Handle.Types.$fReadNewline6_closure
	.quad	GHC.IO.Handle.Types.$fReadNewline10_closure
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_closure
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshow_closure
	.quad	GHC.IO.Handle.Types.$fShowNewline1_closure
	.quad	GHC.Show.showCommaSpace1_closure
	.quad	GHC.IO.Handle.Types.$w$cshowsPrec1_closure
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_closure
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_closure
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode1_closure
	.quad	GHC.Read.choose2_closure
	.quad	GHC.IO.Handle.Types.$fReadNewline_sps_closure
	.quad	GHC.Read.list3_closure
	.quad	GHC.IO.Handle.Types.$fReadNewline2_closure
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_closure
	.quad	GHC.Read.list_closure
	.quad	GHC.IO.Handle.Types.$fReadNewline1_closure
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_closure
	.quad	GHC.IO.Handle.Types.$fReadNewline12_closure
	.quad	Text.Read.Lex.$wexpect_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode3_closure
	.quad	GHC.Read.readField_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode6_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode11_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode8_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode12_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_lexeme_closure
	.quad	GHC.IO.Handle.Types.$w$creadPrec_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_lexeme1_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode2_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode1_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode18_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode12_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode8_closure
	.quad	GHC.Show.$fShowMaybe_$cshowsPrec_closure
	.quad	GHC.IO.Handle.Types.$fShowBufferMode3_closure
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_closure
	.quad	GHC.IO.Handle.Types.$fShowBufferMode5_closure
	.quad	GHC.IO.Handle.Types.$fShowBufferMode6_closure
	.quad	GHC.Show.$fShowMaybe1_closure
	.quad	GHC.Show.$fShowMaybe4_closure
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshow_closure
	.quad	GHC.IO.Handle.Types.$fShowBufferMode1_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_sps_closure
	.quad	GHC.Read.choose2_closure
	.quad	GHC.Read.$fReadInt_closure
	.quad	GHC.Read.$fReadMaybe1_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_lexeme_closure
	.quad	Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode2_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode1_closure
	.quad	GHC.Read.list_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode14_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode4_closure
	.quad	GHC.IO.Handle.Types.$fShowHandle_$cshow_closure


==================== Asm code ====================
2018-03-16 16:03:21.976249342 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$WHandle___closure
.type GHC.IO.Handle.Types.$WHandle___closure, @object
GHC.IO.Handle.Types.$WHandle___closure:
	.quad	GHC.IO.Handle.Types.$WHandle___info


==================== Asm code ====================
2018-03-16 16:03:21.977087121 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$WHandle___slow
.type GHC.IO.Handle.Types.$WHandle___slow, @object
GHC.IO.Handle.Types.$WHandle___slow:
_c8eqj:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Types.$WHandle___entry
	.size GHC.IO.Handle.Types.$WHandle___slow, .-GHC.IO.Handle.Types.$WHandle___slow


==================== Asm code ====================
2018-03-16 16:03:21.978035315 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$WHandle___entry
.type GHC.IO.Handle.Types.$WHandle___entry, @object
GHC.IO.Handle.Types.$WHandle___entry:
_c8eqs:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eqL
_c8eqM:
	leaq block_c8eqn_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c8eqL:
	leaq GHC.IO.Handle.Types.$WHandle___closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$WHandle___entry, .-GHC.IO.Handle.Types.$WHandle___entry


==================== Asm code ====================
2018-03-16 16:03:21.979197785 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$WHandle___info
.type GHC.IO.Handle.Types.$WHandle___info, @object
GHC.IO.Handle.Types.$WHandle___info:
	.quad	GHC.IO.Handle.Types.$WHandle___entry
	.quad	0
	.quad	14
	.quad	68719476736
	.quad	0
	.quad	16
	.quad	GHC.IO.Handle.Types.$WHandle___slow


==================== Asm code ====================
2018-03-16 16:03:21.979937854 UTC

.section .text
.align 8
_c8eqn:
_c8eqn:
	leaq block_c8eqp_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 40(%rbp),%rbx
	movq %rax,40(%rbp)
	testb $7,%bl
	jne _c8eqp
_c8eqq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8eqn, .-_c8eqn


==================== Asm code ====================
2018-03-16 16:03:21.980549243 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eqn_info:
	.quad	_c8eqn
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:21.981299329 UTC

.section .text
.align 8
_c8eqp:
_c8eqp:
	leaq block_c8eqv_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 56(%rbp),%rbx
	movq %rax,56(%rbp)
	testb $7,%bl
	jne _c8eqv
_c8eqw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8eqp, .-_c8eqp


==================== Asm code ====================
2018-03-16 16:03:21.981911152 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eqp_info:
	.quad	_c8eqp
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:21.982607855 UTC

.section .text
.align 8
_c8eqv:
_c8eqv:
	leaq block_c8eqA_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 64(%rbp),%rbx
	movq %rax,64(%rbp)
	testb $7,%bl
	jne _c8eqA
_c8eqB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8eqv, .-_c8eqv


==================== Asm code ====================
2018-03-16 16:03:21.983247231 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eqv_info:
	.quad	_c8eqv
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:21.98401973 UTC

.section .text
.align 8
_c8eqA:
_c8eqA:
	leaq block_c8eqF_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 72(%rbp),%rbx
	movq %rax,72(%rbp)
	testb $7,%bl
	jne _c8eqF
_c8eqG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8eqA, .-_c8eqA


==================== Asm code ====================
2018-03-16 16:03:21.984690939 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eqA_info:
	.quad	_c8eqA
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:21.985619446 UTC

.section .text
.align 8
_c8eqF:
_c8eqF:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _c8eqT
_c8eqS:
	movq 7(%rbx),%rax
	leaq GHC.IO.Handle.Types.Handle___con_info(%rip),%rbx
	movq %rbx,-128(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-120(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-112(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-104(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-96(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-80(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-72(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq 72(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq 80(%rbp),%rax
	movq %rax,-40(%r12)
	movq 88(%rbp),%rax
	movq %rax,-32(%r12)
	movq 96(%rbp),%rax
	movq %rax,-24(%r12)
	movq 104(%rbp),%rax
	movq %rax,-16(%r12)
	movq 112(%rbp),%rax
	movq %rax,-8(%r12)
	movq 120(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $128,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8eqT:
	movq $136,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8eqF, .-_c8eqF


==================== Asm code ====================
2018-03-16 16:03:21.986480634 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eqF_info:
	.quad	_c8eqF
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:21.990409906 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$WFileHandle_closure
.type GHC.IO.Handle.Types.$WFileHandle_closure, @object
GHC.IO.Handle.Types.$WFileHandle_closure:
	.quad	GHC.IO.Handle.Types.$WFileHandle_info


==================== Asm code ====================
2018-03-16 16:03:21.991265757 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$WFileHandle_entry
.type GHC.IO.Handle.Types.$WFileHandle_entry, @object
GHC.IO.Handle.Types.$WFileHandle_entry:
_c8erR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8erV
_c8erW:
	leaq block_c8erO_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8erO
_c8erP:
	movq (%rbx),%rax
	jmp *(%rax)
_c8erV:
	leaq GHC.IO.Handle.Types.$WFileHandle_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$WFileHandle_entry, .-GHC.IO.Handle.Types.$WFileHandle_entry


==================== Asm code ====================
2018-03-16 16:03:21.991995791 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$WFileHandle_info
.type GHC.IO.Handle.Types.$WFileHandle_info, @object
GHC.IO.Handle.Types.$WFileHandle_info:
	.quad	GHC.IO.Handle.Types.$WFileHandle_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:21.992812794 UTC

.section .text
.align 8
_c8erO:
_c8erO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8erZ
_c8erY:
	movq 7(%rbx),%rax
	leaq GHC.IO.Handle.Types.FileHandle_con_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8erZ:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8erO, .-_c8erO


==================== Asm code ====================
2018-03-16 16:03:21.993501013 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8erO_info:
	.quad	_c8erO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:21.997803026 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$WDuplexHandle_closure
.type GHC.IO.Handle.Types.$WDuplexHandle_closure, @object
GHC.IO.Handle.Types.$WDuplexHandle_closure:
	.quad	GHC.IO.Handle.Types.$WDuplexHandle_info


==================== Asm code ====================
2018-03-16 16:03:21.998611412 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$WDuplexHandle_entry
.type GHC.IO.Handle.Types.$WDuplexHandle_entry, @object
GHC.IO.Handle.Types.$WDuplexHandle_entry:
_c8esl:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8esu
_c8esv:
	leaq block_c8esi_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8esi
_c8esj:
	movq (%rbx),%rax
	jmp *(%rax)
_c8esu:
	leaq GHC.IO.Handle.Types.$WDuplexHandle_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$WDuplexHandle_entry, .-GHC.IO.Handle.Types.$WDuplexHandle_entry


==================== Asm code ====================
2018-03-16 16:03:21.999309357 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$WDuplexHandle_info
.type GHC.IO.Handle.Types.$WDuplexHandle_info, @object
GHC.IO.Handle.Types.$WDuplexHandle_info:
	.quad	GHC.IO.Handle.Types.$WDuplexHandle_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:03:22.00000486 UTC

.section .text
.align 8
_c8esi:
_c8esi:
	leaq block_c8eso_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8eso
_c8esp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8esi, .-_c8esi


==================== Asm code ====================
2018-03-16 16:03:22.000569094 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8esi_info:
	.quad	_c8esi
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.001830256 UTC

.section .text
.align 8
_c8eso:
_c8eso:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8esz
_c8esy:
	movq 7(%rbx),%rax
	leaq GHC.IO.Handle.Types.DuplexHandle_con_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -22(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8esz:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8eso, .-_c8eso


==================== Asm code ====================
2018-03-16 16:03:22.002512268 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eso_info:
	.quad	_c8eso
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.004314072 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType12_bytes
.type GHC.IO.Handle.Types.$fShowHandleType12_bytes, @object
GHC.IO.Handle.Types.$fShowHandleType12_bytes:
	.asciz "closed"


==================== Asm code ====================
2018-03-16 16:03:22.007449754 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType11_closure
.type GHC.IO.Handle.Types.$fShowHandleType11_closure, @object
GHC.IO.Handle.Types.$fShowHandleType11_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandleType11_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.008309349 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandleType11_entry
.type GHC.IO.Handle.Types.$fShowHandleType11_entry, @object
GHC.IO.Handle.Types.$fShowHandleType11_entry:
_c8et2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8et3
_c8et4:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8et1
_c8et0:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fShowHandleType12_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8et3:
	jmp *-16(%r13)
_c8et1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fShowHandleType11_entry, .-GHC.IO.Handle.Types.$fShowHandleType11_entry


==================== Asm code ====================
2018-03-16 16:03:22.009084279 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType11_info
.type GHC.IO.Handle.Types.$fShowHandleType11_info, @object
GHC.IO.Handle.Types.$fShowHandleType11_info:
	.quad	GHC.IO.Handle.Types.$fShowHandleType11_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:22.010941481 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType10_bytes
.type GHC.IO.Handle.Types.$fShowHandleType10_bytes, @object
GHC.IO.Handle.Types.$fShowHandleType10_bytes:
	.asciz "semi-closed"


==================== Asm code ====================
2018-03-16 16:03:22.013772679 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType9_closure
.type GHC.IO.Handle.Types.$fShowHandleType9_closure, @object
GHC.IO.Handle.Types.$fShowHandleType9_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandleType9_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.015135619 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandleType9_entry
.type GHC.IO.Handle.Types.$fShowHandleType9_entry, @object
GHC.IO.Handle.Types.$fShowHandleType9_entry:
_c8etk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8etl
_c8etm:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8etj
_c8eti:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fShowHandleType10_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8etl:
	jmp *-16(%r13)
_c8etj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fShowHandleType9_entry, .-GHC.IO.Handle.Types.$fShowHandleType9_entry


==================== Asm code ====================
2018-03-16 16:03:22.015903962 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType9_info
.type GHC.IO.Handle.Types.$fShowHandleType9_info, @object
GHC.IO.Handle.Types.$fShowHandleType9_info:
	.quad	GHC.IO.Handle.Types.$fShowHandleType9_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:22.017748571 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType8_bytes
.type GHC.IO.Handle.Types.$fShowHandleType8_bytes, @object
GHC.IO.Handle.Types.$fShowHandleType8_bytes:
	.asciz "readable"


==================== Asm code ====================
2018-03-16 16:03:22.020653331 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType7_closure
.type GHC.IO.Handle.Types.$fShowHandleType7_closure, @object
GHC.IO.Handle.Types.$fShowHandleType7_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandleType7_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.021686616 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandleType7_entry
.type GHC.IO.Handle.Types.$fShowHandleType7_entry, @object
GHC.IO.Handle.Types.$fShowHandleType7_entry:
_c8etC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8etD
_c8etE:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8etB
_c8etA:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fShowHandleType8_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8etD:
	jmp *-16(%r13)
_c8etB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fShowHandleType7_entry, .-GHC.IO.Handle.Types.$fShowHandleType7_entry


==================== Asm code ====================
2018-03-16 16:03:22.022470595 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType7_info
.type GHC.IO.Handle.Types.$fShowHandleType7_info, @object
GHC.IO.Handle.Types.$fShowHandleType7_info:
	.quad	GHC.IO.Handle.Types.$fShowHandleType7_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:22.024623041 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType6_bytes
.type GHC.IO.Handle.Types.$fShowHandleType6_bytes, @object
GHC.IO.Handle.Types.$fShowHandleType6_bytes:
	.asciz "writable"


==================== Asm code ====================
2018-03-16 16:03:22.02749486 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType5_closure
.type GHC.IO.Handle.Types.$fShowHandleType5_closure, @object
GHC.IO.Handle.Types.$fShowHandleType5_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandleType5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.028498397 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandleType5_entry
.type GHC.IO.Handle.Types.$fShowHandleType5_entry, @object
GHC.IO.Handle.Types.$fShowHandleType5_entry:
_c8etU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8etV
_c8etW:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8etT
_c8etS:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fShowHandleType6_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8etV:
	jmp *-16(%r13)
_c8etT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fShowHandleType5_entry, .-GHC.IO.Handle.Types.$fShowHandleType5_entry


==================== Asm code ====================
2018-03-16 16:03:22.029280611 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType5_info
.type GHC.IO.Handle.Types.$fShowHandleType5_info, @object
GHC.IO.Handle.Types.$fShowHandleType5_info:
	.quad	GHC.IO.Handle.Types.$fShowHandleType5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:22.031526982 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType4_bytes
.type GHC.IO.Handle.Types.$fShowHandleType4_bytes, @object
GHC.IO.Handle.Types.$fShowHandleType4_bytes:
	.asciz "writable (append)"


==================== Asm code ====================
2018-03-16 16:03:22.034197702 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType3_closure
.type GHC.IO.Handle.Types.$fShowHandleType3_closure, @object
GHC.IO.Handle.Types.$fShowHandleType3_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandleType3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.035114368 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandleType3_entry
.type GHC.IO.Handle.Types.$fShowHandleType3_entry, @object
GHC.IO.Handle.Types.$fShowHandleType3_entry:
_c8euc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eud
_c8eue:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8eub
_c8eua:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fShowHandleType4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8eud:
	jmp *-16(%r13)
_c8eub:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fShowHandleType3_entry, .-GHC.IO.Handle.Types.$fShowHandleType3_entry


==================== Asm code ====================
2018-03-16 16:03:22.035890997 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType3_info
.type GHC.IO.Handle.Types.$fShowHandleType3_info, @object
GHC.IO.Handle.Types.$fShowHandleType3_info:
	.quad	GHC.IO.Handle.Types.$fShowHandleType3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:22.037790486 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType2_bytes
.type GHC.IO.Handle.Types.$fShowHandleType2_bytes, @object
GHC.IO.Handle.Types.$fShowHandleType2_bytes:
	.asciz "read-writable"


==================== Asm code ====================
2018-03-16 16:03:22.040877019 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType1_closure
.type GHC.IO.Handle.Types.$fShowHandleType1_closure, @object
GHC.IO.Handle.Types.$fShowHandleType1_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandleType1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.041842405 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandleType1_entry
.type GHC.IO.Handle.Types.$fShowHandleType1_entry, @object
GHC.IO.Handle.Types.$fShowHandleType1_entry:
_c8euu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8euv
_c8euw:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8eut
_c8eus:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fShowHandleType2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8euv:
	jmp *-16(%r13)
_c8eut:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fShowHandleType1_entry, .-GHC.IO.Handle.Types.$fShowHandleType1_entry


==================== Asm code ====================
2018-03-16 16:03:22.042572214 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType1_info
.type GHC.IO.Handle.Types.$fShowHandleType1_info, @object
GHC.IO.Handle.Types.$fShowHandleType1_info:
	.quad	GHC.IO.Handle.Types.$fShowHandleType1_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:22.046554053 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$cshowsPrec_closure
.type GHC.IO.Handle.Types.$w$cshowsPrec_closure, @object
GHC.IO.Handle.Types.$w$cshowsPrec_closure:
	.quad	GHC.IO.Handle.Types.$w$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.047481276 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$w$cshowsPrec_entry
.type GHC.IO.Handle.Types.$w$cshowsPrec_entry, @object
GHC.IO.Handle.Types.$w$cshowsPrec_entry:
_c8euU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8euV
_c8euW:
	leaq block_c8euJ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8euJ
_c8euK:
	movq (%rbx),%rax
	jmp *(%rax)
_c8euV:
	leaq GHC.IO.Handle.Types.$w$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$w$cshowsPrec_entry, .-GHC.IO.Handle.Types.$w$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:03:22.04860494 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$cshowsPrec_info
.type GHC.IO.Handle.Types.$w$cshowsPrec_info, @object
GHC.IO.Handle.Types.$w$cshowsPrec_info:
	.quad	GHC.IO.Handle.Types.$w$cshowsPrec_entry
	.quad	0
	.quad	545460846606
	.quad	8589934607
	.quad	S8evg_srt


==================== Asm code ====================
2018-03-16 16:03:22.049568537 UTC

.section .text
.align 8
_c8euJ:
_c8euJ:
	movq 8(%rbp),%rax
	andl $7,%ebx
	leaq _n8evr(%rip),%rcx
	movslq (%rcx,%rbx,8),%rbx
	addq %rbx,%rcx
	jmp *%rcx
_c8euS:
	movq %rax,%rsi
	leaq GHC.IO.Handle.Types.$fShowHandleType1_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c8euR:
	movq %rax,%rsi
	leaq GHC.IO.Handle.Types.$fShowHandleType3_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c8euQ:
	movq %rax,%rsi
	leaq GHC.IO.Handle.Types.$fShowHandleType5_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c8euP:
	movq %rax,%rsi
	leaq GHC.IO.Handle.Types.$fShowHandleType7_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c8euO:
	movq %rax,%rsi
	leaq GHC.IO.Handle.Types.$fShowHandleType9_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c8euN:
	movq %rax,%rsi
	leaq GHC.IO.Handle.Types.$fShowHandleType11_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
	.size _c8euJ, .-_c8euJ
.section .rodata
.align 8
.align 1
_n8evr:
	.quad	0
	.long	_c8euN-(_n8evr)+0
	.long	0
	.long	_c8euO-(_n8evr)+0
	.long	0
	.long	_c8euP-(_n8evr)+0
	.long	0
	.long	_c8euQ-(_n8evr)+0
	.long	0
	.long	_c8euR-(_n8evr)+0
	.long	0
	.long	_c8euS-(_n8evr)+0
	.long	0


==================== Asm code ====================
2018-03-16 16:03:22.050405894 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8euJ_info:
	.quad	_c8euJ
	.quad	1
	.quad	270582939678
	.quad	S8evg_srt+8


==================== Asm code ====================
2018-03-16 16:03:22.052827252 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_closure
.type GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_closure, @object
GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.053609261 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_entry
.type GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_entry, @object
GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_entry:
_c8evA:
	movq %rsi,%rax
	movq %rdi,%rsi
	movq %rax,%r14
	jmp GHC.IO.Handle.Types.$w$cshowsPrec_entry
	.size GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_entry, .-GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:03:22.054314394 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_info
.type GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_info, @object
GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_info:
	.quad	GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_entry
	.quad	0
	.quad	4294967310
	.quad	12884901911
	.quad	S8evg_srt


==================== Asm code ====================
2018-03-16 16:03:22.058413938 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType_$cshow_closure
.type GHC.IO.Handle.Types.$fShowHandleType_$cshow_closure, @object
GHC.IO.Handle.Types.$fShowHandleType_$cshow_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandleType_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.059253386 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandleType_$cshow_entry
.type GHC.IO.Handle.Types.$fShowHandleType_$cshow_entry, @object
GHC.IO.Handle.Types.$fShowHandleType_$cshow_entry:
_c8evW:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8evX
_c8evY:
	leaq block_c8evL_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8evL
_c8evM:
	movq (%rbx),%rax
	jmp *(%rax)
_c8evX:
	leaq GHC.IO.Handle.Types.$fShowHandleType_$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowHandleType_$cshow_entry, .-GHC.IO.Handle.Types.$fShowHandleType_$cshow_entry


==================== Asm code ====================
2018-03-16 16:03:22.059970608 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType_$cshow_info
.type GHC.IO.Handle.Types.$fShowHandleType_$cshow_info, @object
GHC.IO.Handle.Types.$fShowHandleType_$cshow_info:
	.quad	GHC.IO.Handle.Types.$fShowHandleType_$cshow_entry
	.quad	0
	.quad	545460846606
	.quad	4294967301
	.quad	S8evg_srt+8


==================== Asm code ====================
2018-03-16 16:03:22.060872595 UTC

.section .text
.align 8
_c8evL:
_c8evL:
	andl $7,%ebx
	leaq _n8ews(%rip),%rax
	movslq (%rax,%rbx,8),%rbx
	addq %rbx,%rax
	jmp *%rax
_c8evU:
	leaq GHC.IO.Handle.Types.$fShowHandleType1_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8evT:
	leaq GHC.IO.Handle.Types.$fShowHandleType3_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8evS:
	leaq GHC.IO.Handle.Types.$fShowHandleType5_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8evR:
	leaq GHC.IO.Handle.Types.$fShowHandleType7_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8evQ:
	leaq GHC.IO.Handle.Types.$fShowHandleType9_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8evP:
	leaq GHC.IO.Handle.Types.$fShowHandleType11_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8evL, .-_c8evL
.section .rodata
.align 8
.align 1
_n8ews:
	.quad	0
	.long	_c8evP-(_n8ews)+0
	.long	0
	.long	_c8evQ-(_n8ews)+0
	.long	0
	.long	_c8evR-(_n8ews)+0
	.long	0
	.long	_c8evS-(_n8ews)+0
	.long	0
	.long	_c8evT-(_n8ews)+0
	.long	0
	.long	_c8evU-(_n8ews)+0
	.long	0


==================== Asm code ====================
2018-03-16 16:03:22.062289912 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8evL_info:
	.quad	_c8evL
	.quad	0
	.quad	270582939678
	.quad	S8evg_srt+8


==================== Asm code ====================
2018-03-16 16:03:22.064818657 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType_$cshowList_closure
.type GHC.IO.Handle.Types.$fShowHandleType_$cshowList_closure, @object
GHC.IO.Handle.Types.$fShowHandleType_$cshowList_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandleType_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.065580016 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandleType_$cshowList_entry
.type GHC.IO.Handle.Types.$fShowHandleType_$cshowList_entry, @object
GHC.IO.Handle.Types.$fShowHandleType_$cshowList_entry:
_c8ewH:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.IO.Handle.Types.$w$cshowsPrec_closure+2(%rip),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
	.size GHC.IO.Handle.Types.$fShowHandleType_$cshowList_entry, .-GHC.IO.Handle.Types.$fShowHandleType_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:03:22.066613372 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType_$cshowList_info
.type GHC.IO.Handle.Types.$fShowHandleType_$cshowList_info, @object
GHC.IO.Handle.Types.$fShowHandleType_$cshowList_info:
	.quad	GHC.IO.Handle.Types.$fShowHandleType_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S8evg_srt


==================== Asm code ====================
2018-03-16 16:03:22.068468004 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandleType_closure
.type GHC.IO.Handle.Types.$fShowHandleType_closure, @object
GHC.IO.Handle.Types.$fShowHandleType_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.IO.Handle.Types.$fShowHandleType_$cshowsPrec_closure+3
	.quad	GHC.IO.Handle.Types.$fShowHandleType_$cshow_closure+1
	.quad	GHC.IO.Handle.Types.$fShowHandleType_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.075617393 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqHandle_$c==_closure
.type GHC.IO.Handle.Types.$fEqHandle_$c==_closure, @object
GHC.IO.Handle.Types.$fEqHandle_$c==_closure:
	.quad	GHC.IO.Handle.Types.$fEqHandle_$c==_info


==================== Asm code ====================
2018-03-16 16:03:22.076653153 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fEqHandle_$c==_entry
.type GHC.IO.Handle.Types.$fEqHandle_$c==_entry, @object
GHC.IO.Handle.Types.$fEqHandle_$c==_entry:
_c8ex0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ex1
_c8ex2:
	leaq block_c8ewT_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8ewT
_c8ewU:
	movq (%rbx),%rax
	jmp *(%rax)
_c8ex1:
	leaq GHC.IO.Handle.Types.$fEqHandle_$c==_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fEqHandle_$c==_entry, .-GHC.IO.Handle.Types.$fEqHandle_$c==_entry


==================== Asm code ====================
2018-03-16 16:03:22.077868807 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqHandle_$c==_info
.type GHC.IO.Handle.Types.$fEqHandle_$c==_info, @object
GHC.IO.Handle.Types.$fEqHandle_$c==_info:
	.quad	GHC.IO.Handle.Types.$fEqHandle_$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.078769436 UTC

.section .text
.align 8
_c8ewT:
_c8ewT:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8ewX
_c8ewY:
	leaq block_c8exk_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8exk
_c8exm:
	movq (%rbx),%rax
	jmp *(%rax)
_c8ewX:
	leaq block_c8ex5_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8ex5
_c8ex7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ewT, .-_c8ewT


==================== Asm code ====================
2018-03-16 16:03:22.079591625 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ewT_info:
	.quad	_c8ewT
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.080434258 UTC

.section .text
.align 8
_c8ex5:
_c8ex5:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8exd
_u8exC:
	addq $16,%rbp
	jmp _c8exs
_c8exd:
	movq 8(%rbp),%rax
	cmpq 15(%rbx),%rax
	sete %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8ex5, .-_c8ex5


==================== Asm code ====================
2018-03-16 16:03:22.081174329 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ex5_info:
	.quad	_c8ex5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.083083392 UTC

.section .text
.align 8
_c8exk:
_c8exk:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8exB
_c8exw:
	movq 8(%rbp),%rax
	cmpq 14(%rbx),%rax
	sete %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u8exB:
	addq $16,%rbp
	jmp _c8exs
	.size _c8exk, .-_c8exk


==================== Asm code ====================
2018-03-16 16:03:22.083737014 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8exk_info:
	.quad	_c8exk
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.084387729 UTC

.section .text
.align 8
_c8exs:
_c8exs:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8exs, .-_c8exs


==================== Asm code ====================
2018-03-16 16:03:22.090144502 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqHandle_$c/=_closure
.type GHC.IO.Handle.Types.$fEqHandle_$c/=_closure, @object
GHC.IO.Handle.Types.$fEqHandle_$c/=_closure:
	.quad	GHC.IO.Handle.Types.$fEqHandle_$c/=_info


==================== Asm code ====================
2018-03-16 16:03:22.091025915 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fEqHandle_$c/=_entry
.type GHC.IO.Handle.Types.$fEqHandle_$c/=_entry, @object
GHC.IO.Handle.Types.$fEqHandle_$c/=_entry:
_c8eyx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eyy
_c8eyz:
	leaq block_c8eyq_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8eyq
_c8eyr:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eyy:
	leaq GHC.IO.Handle.Types.$fEqHandle_$c/=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fEqHandle_$c/=_entry, .-GHC.IO.Handle.Types.$fEqHandle_$c/=_entry


==================== Asm code ====================
2018-03-16 16:03:22.091719216 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqHandle_$c/=_info
.type GHC.IO.Handle.Types.$fEqHandle_$c/=_info, @object
GHC.IO.Handle.Types.$fEqHandle_$c/=_info:
	.quad	GHC.IO.Handle.Types.$fEqHandle_$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.092593373 UTC

.section .text
.align 8
_c8eyq:
_c8eyq:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8eyu
_c8eyv:
	leaq block_c8ez6_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8ez6
_c8ez8:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eyu:
	leaq block_c8eyC_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8eyC
_c8eyE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8eyq, .-_c8eyq


==================== Asm code ====================
2018-03-16 16:03:22.093352759 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eyq_info:
	.quad	_c8eyq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.094152315 UTC

.section .text
.align 8
_c8eyC:
_c8eyC:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8eyZ
_u8ezD:
	addq $16,%rbp
	jmp _c8ezn
_c8eyZ:
	movq 8(%rbp),%rax
	cmpq 15(%rbx),%rax
	je _u8ezE
_u8ezF:
	addq $16,%rbp
	jmp _c8ezn
_u8ezE:
	addq $16,%rbp
	jmp _c8ezt
	.size _c8eyC, .-_c8eyC


==================== Asm code ====================
2018-03-16 16:03:22.094867876 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eyC_info:
	.quad	_c8eyC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.095637005 UTC

.section .text
.align 8
_c8ez6:
_c8ez6:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8ezA
_c8ezx:
	movq 8(%rbp),%rax
	cmpq 14(%rbx),%rax
	je _u8ezB
_u8ezC:
	addq $16,%rbp
	jmp _c8ezn
_u8ezB:
	addq $16,%rbp
	jmp _c8ezt
_u8ezA:
	addq $16,%rbp
	jmp _c8ezn
	.size _c8ez6, .-_c8ez6


==================== Asm code ====================
2018-03-16 16:03:22.09666136 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ez6_info:
	.quad	_c8ez6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.09751813 UTC

.section .text
.align 8
_c8ezt:
_c8ezt:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8ezt, .-_c8ezt


==================== Asm code ====================
2018-03-16 16:03:22.098202402 UTC

.section .text
.align 8
_c8ezn:
_c8ezn:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8ezn, .-_c8ezn


==================== Asm code ====================
2018-03-16 16:03:22.099951722 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqHandle_closure
.type GHC.IO.Handle.Types.$fEqHandle_closure, @object
GHC.IO.Handle.Types.$fEqHandle_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.IO.Handle.Types.$fEqHandle_$c==_closure+2
	.quad	GHC.IO.Handle.Types.$fEqHandle_$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:22.101745838 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline11_bytes
.type GHC.IO.Handle.Types.$fReadNewline11_bytes, @object
GHC.IO.Handle.Types.$fReadNewline11_bytes:
	.asciz "LF"


==================== Asm code ====================
2018-03-16 16:03:22.104623556 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline10_closure
.type GHC.IO.Handle.Types.$fReadNewline10_closure, @object
GHC.IO.Handle.Types.$fReadNewline10_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewline10_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.105998808 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewline10_entry
.type GHC.IO.Handle.Types.$fReadNewline10_entry, @object
GHC.IO.Handle.Types.$fReadNewline10_entry:
_c8eAx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eAy
_c8eAz:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8eAw
_c8eAv:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fReadNewline11_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8eAy:
	jmp *-16(%r13)
_c8eAw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewline10_entry, .-GHC.IO.Handle.Types.$fReadNewline10_entry


==================== Asm code ====================
2018-03-16 16:03:22.106709948 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline10_info
.type GHC.IO.Handle.Types.$fReadNewline10_info, @object
GHC.IO.Handle.Types.$fReadNewline10_info:
	.quad	GHC.IO.Handle.Types.$fReadNewline10_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:22.108398158 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline7_bytes
.type GHC.IO.Handle.Types.$fReadNewline7_bytes, @object
GHC.IO.Handle.Types.$fReadNewline7_bytes:
	.asciz "CRLF"


==================== Asm code ====================
2018-03-16 16:03:22.111531711 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline6_closure
.type GHC.IO.Handle.Types.$fReadNewline6_closure, @object
GHC.IO.Handle.Types.$fReadNewline6_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewline6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.112502709 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewline6_entry
.type GHC.IO.Handle.Types.$fReadNewline6_entry, @object
GHC.IO.Handle.Types.$fReadNewline6_entry:
_c8eAP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eAQ
_c8eAR:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8eAO
_c8eAN:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fReadNewline7_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8eAQ:
	jmp *-16(%r13)
_c8eAO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewline6_entry, .-GHC.IO.Handle.Types.$fReadNewline6_entry


==================== Asm code ====================
2018-03-16 16:03:22.113313558 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline6_info
.type GHC.IO.Handle.Types.$fReadNewline6_info, @object
GHC.IO.Handle.Types.$fReadNewline6_info:
	.quad	GHC.IO.Handle.Types.$fReadNewline6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:22.117002735 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_closure
.type GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_closure, @object
GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_closure:
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.117888196 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_entry
.type GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_entry, @object
GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_entry:
_c8eBb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eBc
_c8eBd:
	leaq block_c8eB4_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %rdi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8eB4
_c8eB5:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eBc:
	leaq GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_entry, .-GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:03:22.118613987 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_info
.type GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_info, @object
GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_info:
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_entry
	.quad	0
	.quad	30064771086
	.quad	12884901911
	.quad	S8evg_srt+64


==================== Asm code ====================
2018-03-16 16:03:22.119423455 UTC

.section .text
.align 8
_c8eB4:
_c8eB4:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8eB8
_c8eB9:
	movq %rax,%rsi
	leaq GHC.IO.Handle.Types.$fReadNewline6_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c8eB8:
	movq %rax,%rsi
	leaq GHC.IO.Handle.Types.$fReadNewline10_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
	.size _c8eB4, .-_c8eB4


==================== Asm code ====================
2018-03-16 16:03:22.120147809 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eB4_info:
	.quad	_c8eB4
	.quad	1
	.quad	12884901918
	.quad	S8evg_srt+64


==================== Asm code ====================
2018-03-16 16:03:22.123799504 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewline_$cshow_closure
.type GHC.IO.Handle.Types.$fShowNewline_$cshow_closure, @object
GHC.IO.Handle.Types.$fShowNewline_$cshow_closure:
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.124581341 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowNewline_$cshow_entry
.type GHC.IO.Handle.Types.$fShowNewline_$cshow_entry, @object
GHC.IO.Handle.Types.$fShowNewline_$cshow_entry:
_c8eBI:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eBJ
_c8eBK:
	leaq block_c8eBB_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8eBB
_c8eBC:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eBJ:
	leaq GHC.IO.Handle.Types.$fShowNewline_$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowNewline_$cshow_entry, .-GHC.IO.Handle.Types.$fShowNewline_$cshow_entry


==================== Asm code ====================
2018-03-16 16:03:22.125630889 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewline_$cshow_info
.type GHC.IO.Handle.Types.$fShowNewline_$cshow_info, @object
GHC.IO.Handle.Types.$fShowNewline_$cshow_info:
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshow_entry
	.quad	0
	.quad	47244640270
	.quad	4294967301
	.quad	S8evg_srt+64


==================== Asm code ====================
2018-03-16 16:03:22.126359411 UTC

.section .text
.align 8
_c8eBB:
_c8eBB:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8eBF
_c8eBG:
	leaq GHC.IO.Handle.Types.$fReadNewline6_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8eBF:
	leaq GHC.IO.Handle.Types.$fReadNewline10_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8eBB, .-_c8eBB


==================== Asm code ====================
2018-03-16 16:03:22.127023876 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eBB_info:
	.quad	_c8eBB
	.quad	0
	.quad	12884901918
	.quad	S8evg_srt+64


==================== Asm code ====================
2018-03-16 16:03:22.130413649 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewline1_closure
.type GHC.IO.Handle.Types.$fShowNewline1_closure, @object
GHC.IO.Handle.Types.$fShowNewline1_closure:
	.quad	GHC.IO.Handle.Types.$fShowNewline1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.131300486 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowNewline1_entry
.type GHC.IO.Handle.Types.$fShowNewline1_entry, @object
GHC.IO.Handle.Types.$fShowNewline1_entry:
_c8eCh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eCi
_c8eCj:
	leaq block_c8eCa_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8eCa
_c8eCb:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eCi:
	leaq GHC.IO.Handle.Types.$fShowNewline1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowNewline1_entry, .-GHC.IO.Handle.Types.$fShowNewline1_entry


==================== Asm code ====================
2018-03-16 16:03:22.132024157 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewline1_info
.type GHC.IO.Handle.Types.$fShowNewline1_info, @object
GHC.IO.Handle.Types.$fShowNewline1_info:
	.quad	GHC.IO.Handle.Types.$fShowNewline1_entry
	.quad	0
	.quad	81604378638
	.quad	8589934607
	.quad	S8evg_srt+64


==================== Asm code ====================
2018-03-16 16:03:22.133209905 UTC

.section .text
.align 8
_c8eCa:
_c8eCa:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8eCe
_c8eCf:
	movq %rax,%rsi
	leaq GHC.IO.Handle.Types.$fReadNewline6_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c8eCe:
	movq %rax,%rsi
	leaq GHC.IO.Handle.Types.$fReadNewline10_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
	.size _c8eCa, .-_c8eCa


==================== Asm code ====================
2018-03-16 16:03:22.133885209 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eCa_info:
	.quad	_c8eCa
	.quad	1
	.quad	12884901918
	.quad	S8evg_srt+64


==================== Asm code ====================
2018-03-16 16:03:22.13627839 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewline_$cshowList_closure
.type GHC.IO.Handle.Types.$fShowNewline_$cshowList_closure, @object
GHC.IO.Handle.Types.$fShowNewline_$cshowList_closure:
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.136995049 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowNewline_$cshowList_entry
.type GHC.IO.Handle.Types.$fShowNewline_$cshowList_entry, @object
GHC.IO.Handle.Types.$fShowNewline_$cshowList_entry:
_c8eCH:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.IO.Handle.Types.$fShowNewline1_closure+2(%rip),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
	.size GHC.IO.Handle.Types.$fShowNewline_$cshowList_entry, .-GHC.IO.Handle.Types.$fShowNewline_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:03:22.137688441 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewline_$cshowList_info
.type GHC.IO.Handle.Types.$fShowNewline_$cshowList_info, @object
GHC.IO.Handle.Types.$fShowNewline_$cshowList_info:
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S8evg_srt+96


==================== Asm code ====================
2018-03-16 16:03:22.139628198 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewline_closure
.type GHC.IO.Handle.Types.$fShowNewline_closure, @object
GHC.IO.Handle.Types.$fShowNewline_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_closure+3
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshow_closure+1
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.141795204 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode4_bytes
.type GHC.IO.Handle.Types.$fShowNewlineMode4_bytes, @object
GHC.IO.Handle.Types.$fShowNewlineMode4_bytes:
	.asciz "NewlineMode {"


==================== Asm code ====================
2018-03-16 16:03:22.143468894 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode3_bytes
.type GHC.IO.Handle.Types.$fShowNewlineMode3_bytes, @object
GHC.IO.Handle.Types.$fShowNewlineMode3_bytes:
	.asciz "inputNL = "


==================== Asm code ====================
2018-03-16 16:03:22.145207348 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode2_bytes
.type GHC.IO.Handle.Types.$fShowNewlineMode2_bytes, @object
GHC.IO.Handle.Types.$fShowNewlineMode2_bytes:
	.asciz "outputNL = "


==================== Asm code ====================
2018-03-16 16:03:22.147078405 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode5_bytes
.type GHC.IO.Handle.Types.$fReadNewlineMode5_bytes, @object
GHC.IO.Handle.Types.$fReadNewlineMode5_bytes:
	.asciz "}"


==================== Asm code ====================
2018-03-16 16:03:22.159695511 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$cshowsPrec1_closure
.type GHC.IO.Handle.Types.$w$cshowsPrec1_closure, @object
GHC.IO.Handle.Types.$w$cshowsPrec1_closure:
	.quad	GHC.IO.Handle.Types.$w$cshowsPrec1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.160524086 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$w$cshowsPrec1_slow
.type GHC.IO.Handle.Types.$w$cshowsPrec1_slow, @object
GHC.IO.Handle.Types.$w$cshowsPrec1_slow:
_c8eCU:
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Types.$w$cshowsPrec1_entry
	.size GHC.IO.Handle.Types.$w$cshowsPrec1_slow, .-GHC.IO.Handle.Types.$w$cshowsPrec1_slow


==================== Asm code ====================
2018-03-16 16:03:22.161621863 UTC

.section .text
.align 8
sat_s8efR_entry:
_c8eDw:
	movq 16(%rbx),%rsi
	leaq GHC.IO.Handle.Types.$fReadNewlineMode5_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
	.size sat_s8efR_entry, .-sat_s8efR_entry


==================== Asm code ====================
2018-03-16 16:03:22.162251399 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8efR_info:
	.quad	sat_s8efR_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:03:22.162893676 UTC

.section .text
.align 8
sat_s8efS_entry:
_c8eDF:
	movq 16(%rbx),%rsi
	leaq GHC.IO.Handle.Types.$fReadNewlineMode5_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
	.size sat_s8efS_entry, .-sat_s8efS_entry


==================== Asm code ====================
2018-03-16 16:03:22.163536531 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8efS_info:
	.quad	sat_s8efS_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:03:22.164395008 UTC

.section .text
.align 8
sat_s8efT_entry:
_c8eDM:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eDN
_c8eDO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c8eDn_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c8eDn
_c8eDo:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eDN:
	jmp *-16(%r13)
	.size sat_s8efT_entry, .-sat_s8efT_entry


==================== Asm code ====================
2018-03-16 16:03:22.165085058 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8efT_info:
	.quad	sat_s8efT_entry
	.quad	2
	.quad	12884901906
	.quad	S8evg_srt+64


==================== Asm code ====================
2018-03-16 16:03:22.166005606 UTC

.section .text
.align 8
_c8eDn:
_c8eDn:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8eDJ
_c8eDK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8eDU
_c8eDT:
	leaq sat_s8efS_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	leaq GHC.IO.Handle.Types.$fReadNewline6_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c8eDU:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8eDJ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8eDU
_c8eDQ:
	leaq sat_s8efR_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	leaq GHC.IO.Handle.Types.$fReadNewline10_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
	.size _c8eDn, .-_c8eDn


==================== Asm code ====================
2018-03-16 16:03:22.167258265 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eDn_info:
	.quad	_c8eDn
	.quad	1
	.quad	12884901918
	.quad	S8evg_srt+64


==================== Asm code ====================
2018-03-16 16:03:22.168039995 UTC

.section .text
.align 8
sat_s8efU_entry:
_c8eDW:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8eE0
_c8eDZ:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s8efT_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	leaq GHC.IO.Handle.Types.$fShowNewlineMode2_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c8eE0:
	movq $32,904(%r13)
	jmp *-16(%r13)
	.size sat_s8efU_entry, .-sat_s8efU_entry


==================== Asm code ====================
2018-03-16 16:03:22.168734216 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8efU_info:
	.quad	sat_s8efU_entry
	.quad	2
	.quad	12884901906
	.quad	S8evg_srt+64


==================== Asm code ====================
2018-03-16 16:03:22.169476761 UTC

.section .text
.align 8
karg_s8efP_entry:
_c8eE1:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8eE5
_c8eE4:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s8efU_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movq GHC.Show.showCommaSpace1_closure@gotpcrel(%rip),%r14
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c8eE5:
	movq $32,904(%r13)
	jmp *-16(%r13)
	.size karg_s8efP_entry, .-karg_s8efP_entry


==================== Asm code ====================
2018-03-16 16:03:22.170174164 UTC

.section .data.rel.ro
.align 8
.align 1
karg_s8efP_info:
	.quad	karg_s8efP_entry
	.quad	2
	.quad	150323855378
	.quad	S8evg_srt+64


==================== Asm code ====================
2018-03-16 16:03:22.171062108 UTC

.section .text
.align 8
sat_s8efW_entry:
_c8eEd:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eEe
_c8eEf:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8eEh
_c8eEg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq karg_s8efP_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq block_c8eE6_info(%rip),%rbx
	movq %rbx,-32(%rbp)
	movq %rax,%rbx
	leaq -24(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c8eE6
_c8eE7:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eEh:
	movq $32,904(%r13)
_c8eEe:
	jmp *-16(%r13)
	.size sat_s8efW_entry, .-sat_s8efW_entry


==================== Asm code ====================
2018-03-16 16:03:22.171849609 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8efW_info:
	.quad	sat_s8efW_entry
	.quad	3
	.quad	150323855375
	.quad	S8evg_srt+64


==================== Asm code ====================
2018-03-16 16:03:22.172622724 UTC

.section .text
.align 8
_c8eE6:
_c8eE6:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8eEa
_c8eEb:
	movq %rax,%rsi
	leaq GHC.IO.Handle.Types.$fReadNewline6_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c8eEa:
	movq %rax,%rsi
	leaq GHC.IO.Handle.Types.$fReadNewline10_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
	.size _c8eE6, .-_c8eE6


==================== Asm code ====================
2018-03-16 16:03:22.173346996 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eE6_info:
	.quad	_c8eE6
	.quad	1
	.quad	12884901918
	.quad	S8evg_srt+64


==================== Asm code ====================
2018-03-16 16:03:22.174227751 UTC

.section .text
.align 8
sat_s8efX_entry:
_c8eEp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eEq
_c8eEr:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8eEt
_c8eEs:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_s8efW_info(%rip),%rdx
	movq %rdx,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -32(%r12),%rsi
	leaq GHC.IO.Handle.Types.$fShowNewlineMode3_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c8eEt:
	movq $40,904(%r13)
_c8eEq:
	jmp *-16(%r13)
	.size sat_s8efX_entry, .-sat_s8efX_entry


==================== Asm code ====================
2018-03-16 16:03:22.175381026 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8efX_info:
	.quad	sat_s8efX_entry
	.quad	3
	.quad	150323855375
	.quad	S8evg_srt+64


==================== Asm code ====================
2018-03-16 16:03:22.176208797 UTC

.section .text
.align 8
p_s8efN_entry:
_c8eEu:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8eEy
_c8eEx:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_s8efX_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -32(%r12),%rsi
	leaq GHC.IO.Handle.Types.$fShowNewlineMode4_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c8eEy:
	movq $40,904(%r13)
	jmp *-8(%r13)
	.size p_s8efN_entry, .-p_s8efN_entry


==================== Asm code ====================
2018-03-16 16:03:22.176936945 UTC

.section .data.rel.ro
.align 8
.align 1
p_s8efN_info:
	.quad	p_s8efN_entry
	.quad	2
	.quad	150323855371
	.quad	4294967301
	.quad	S8evg_srt+64


==================== Asm code ====================
2018-03-16 16:03:22.178505545 UTC

.section .text
.align 8
sat_s8eg0_entry:
_c8eEI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eEJ
_c8eEK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8eEM
_c8eEL:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq GHC.Show.$fShow(,)2_closure@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%r14
	addq $-16,%rbp
	jmp p_s8efN_entry
_c8eEM:
	movq $24,904(%r13)
_c8eEJ:
	jmp *-16(%r13)
	.size sat_s8eg0_entry, .-sat_s8eg0_entry


==================== Asm code ====================
2018-03-16 16:03:22.179250701 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8eg0_info:
	.quad	sat_s8eg0_entry
	.quad	2
	.quad	150323855378
	.quad	S8evg_srt+64


==================== Asm code ====================
2018-03-16 16:03:22.180146088 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$w$cshowsPrec1_entry
.type GHC.IO.Handle.Types.$w$cshowsPrec1_entry, @object
GHC.IO.Handle.Types.$w$cshowsPrec1_entry:
_c8eEQ:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c8eEU
_c8eET:
	leaq p_s8efN_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	leaq -71(%r12),%rax
	cmpq $11,%r14
	jl _c8eEO
_c8eEP:
	leaq sat_s8eg0_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %r8,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Show.$fShow(,)4_closure@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8eEU:
	movq $80,904(%r13)
	leaq GHC.IO.Handle.Types.$w$cshowsPrec1_closure(%rip),%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
_c8eEO:
	addq $-56,%r12
	movq %r8,%r14
	movq %rax,%rbx
	jmp p_s8efN_entry
	.size GHC.IO.Handle.Types.$w$cshowsPrec1_entry, .-GHC.IO.Handle.Types.$w$cshowsPrec1_entry


==================== Asm code ====================
2018-03-16 16:03:22.180992129 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$cshowsPrec1_info
.type GHC.IO.Handle.Types.$w$cshowsPrec1_info, @object
GHC.IO.Handle.Types.$w$cshowsPrec1_info:
	.quad	GHC.IO.Handle.Types.$w$cshowsPrec1_entry
	.quad	0
	.quad	425201762318
	.quad	17179869184
	.quad	S8evg_srt+64
	.quad	68
	.quad	GHC.IO.Handle.Types.$w$cshowsPrec1_slow


==================== Asm code ====================
2018-03-16 16:03:22.185384696 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_closure
.type GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_closure, @object
GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_closure:
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.18627062 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_entry
.type GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_entry, @object
GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_entry:
_c8eGc:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eGg
_c8eGh:
	leaq block_c8eG9_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8eG9
_c8eGa:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eGg:
	leaq GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_entry, .-GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:03:22.187003865 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_info
.type GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_info, @object
GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_info:
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S8evg_srt+112


==================== Asm code ====================
2018-03-16 16:03:22.187765109 UTC

.section .text
.align 8
_c8eG9:
_c8eG9:
	leaq block_c8eGf_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8eGf
_c8eGj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8eG9, .-_c8eG9


==================== Asm code ====================
2018-03-16 16:03:22.188445746 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eG9_info:
	.quad	_c8eG9
	.quad	2
	.quad	4294967326
	.quad	S8evg_srt+112


==================== Asm code ====================
2018-03-16 16:03:22.18916199 UTC

.section .text
.align 8
_c8eGf:
_c8eGf:
	movq 16(%rbp),%r8
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Types.$w$cshowsPrec1_entry
	.size _c8eGf, .-_c8eGf


==================== Asm code ====================
2018-03-16 16:03:22.190205523 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eGf_info:
	.quad	_c8eGf
	.quad	66
	.quad	4294967326
	.quad	S8evg_srt+112


==================== Asm code ====================
2018-03-16 16:03:22.19211021 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode2_closure
.type GHC.IO.Handle.Types.$fShowBufferMode2_closure, @object
GHC.IO.Handle.Types.$fShowBufferMode2_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.195680102 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_closure
.type GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_closure, @object
GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_closure:
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.196572821 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_entry
.type GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_entry, @object
GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_entry:
_c8eGN:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eGO
_c8eGP:
	leaq block_c8eGK_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8eGK
_c8eGL:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eGO:
	leaq GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_entry, .-GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_entry


==================== Asm code ====================
2018-03-16 16:03:22.197263129 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_info
.type GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_info, @object
GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_info:
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_entry
	.quad	0
	.quad	21474836494
	.quad	4294967301
	.quad	S8evg_srt+112


==================== Asm code ====================
2018-03-16 16:03:22.198025026 UTC

.section .text
.align 8
_c8eGK:
_c8eGK:
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r8
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp GHC.IO.Handle.Types.$w$cshowsPrec1_entry
	.size _c8eGK, .-_c8eGK


==================== Asm code ====================
2018-03-16 16:03:22.198670742 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eGK_info:
	.quad	_c8eGK
	.quad	0
	.quad	4294967326
	.quad	S8evg_srt+112


==================== Asm code ====================
2018-03-16 16:03:22.201909259 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode1_closure
.type GHC.IO.Handle.Types.$fShowNewlineMode1_closure, @object
GHC.IO.Handle.Types.$fShowNewlineMode1_closure:
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.203152534 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowNewlineMode1_entry
.type GHC.IO.Handle.Types.$fShowNewlineMode1_entry, @object
GHC.IO.Handle.Types.$fShowNewlineMode1_entry:
_c8eHc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eHd
_c8eHe:
	leaq block_c8eH9_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8eH9
_c8eHa:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eHd:
	leaq GHC.IO.Handle.Types.$fShowNewlineMode1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowNewlineMode1_entry, .-GHC.IO.Handle.Types.$fShowNewlineMode1_entry


==================== Asm code ====================
2018-03-16 16:03:22.203863018 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode1_info
.type GHC.IO.Handle.Types.$fShowNewlineMode1_info, @object
GHC.IO.Handle.Types.$fShowNewlineMode1_info:
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode1_entry
	.quad	0
	.quad	38654705678
	.quad	8589934607
	.quad	S8evg_srt+112


==================== Asm code ====================
2018-03-16 16:03:22.204590527 UTC

.section .text
.align 8
_c8eH9:
_c8eH9:
	movq 8(%rbp),%r8
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	addq $16,%rbp
	jmp GHC.IO.Handle.Types.$w$cshowsPrec1_entry
	.size _c8eH9, .-_c8eH9


==================== Asm code ====================
2018-03-16 16:03:22.205213543 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eH9_info:
	.quad	_c8eH9
	.quad	1
	.quad	4294967326
	.quad	S8evg_srt+112


==================== Asm code ====================
2018-03-16 16:03:22.207946365 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_closure
.type GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_closure, @object
GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_closure:
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.20865533 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_entry
.type GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_entry, @object
GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_entry:
_c8eHx:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.IO.Handle.Types.$fShowNewlineMode1_closure+2(%rip),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
	.size GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_entry, .-GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:03:22.209346308 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_info
.type GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_info, @object
GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_info:
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S8evg_srt+136


==================== Asm code ====================
2018-03-16 16:03:22.211631479 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowNewlineMode_closure
.type GHC.IO.Handle.Types.$fShowNewlineMode_closure, @object
GHC.IO.Handle.Types.$fShowNewlineMode_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_closure+3
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_closure+1
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.213869372 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline9_closure
.type GHC.IO.Handle.Types.$fReadNewline9_closure, @object
GHC.IO.Handle.Types.$fReadNewline9_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewline9_info


==================== Asm code ====================
2018-03-16 16:03:22.214603614 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewline9_entry
.type GHC.IO.Handle.Types.$fReadNewline9_entry, @object
GHC.IO.Handle.Types.$fReadNewline9_entry:
_c8eHJ:
	leaq GHC.IO.Handle.Types.LF_closure+1(%rip),%r14
	movq %rsi,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size GHC.IO.Handle.Types.$fReadNewline9_entry, .-GHC.IO.Handle.Types.$fReadNewline9_entry


==================== Asm code ====================
2018-03-16 16:03:22.21523958 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline9_info
.type GHC.IO.Handle.Types.$fReadNewline9_info, @object
GHC.IO.Handle.Types.$fReadNewline9_info:
	.quad	GHC.IO.Handle.Types.$fReadNewline9_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.217082165 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline8_closure
.type GHC.IO.Handle.Types.$fReadNewline8_closure, @object
GHC.IO.Handle.Types.$fReadNewline8_closure:
	.quad	(,)_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewline10_closure
	.quad	GHC.IO.Handle.Types.$fReadNewline9_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.220094579 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline5_closure
.type GHC.IO.Handle.Types.$fReadNewline5_closure, @object
GHC.IO.Handle.Types.$fReadNewline5_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewline5_info


==================== Asm code ====================
2018-03-16 16:03:22.220766221 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewline5_entry
.type GHC.IO.Handle.Types.$fReadNewline5_entry, @object
GHC.IO.Handle.Types.$fReadNewline5_entry:
_c8eHV:
	leaq GHC.IO.Handle.Types.CRLF_closure+2(%rip),%r14
	movq %rsi,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size GHC.IO.Handle.Types.$fReadNewline5_entry, .-GHC.IO.Handle.Types.$fReadNewline5_entry


==================== Asm code ====================
2018-03-16 16:03:22.221431681 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline5_info
.type GHC.IO.Handle.Types.$fReadNewline5_info, @object
GHC.IO.Handle.Types.$fReadNewline5_info:
	.quad	GHC.IO.Handle.Types.$fReadNewline5_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.223194543 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline4_closure
.type GHC.IO.Handle.Types.$fReadNewline4_closure, @object
GHC.IO.Handle.Types.$fReadNewline4_closure:
	.quad	(,)_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewline6_closure
	.quad	GHC.IO.Handle.Types.$fReadNewline5_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.225092959 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline3_closure
.type GHC.IO.Handle.Types.$fReadNewline3_closure, @object
GHC.IO.Handle.Types.$fReadNewline3_closure:
	.quad	:_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewline4_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.226993489 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline_sps_closure
.type GHC.IO.Handle.Types.$fReadNewline_sps_closure, @object
GHC.IO.Handle.Types.$fReadNewline_sps_closure:
	.quad	:_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewline8_closure+1
	.quad	GHC.IO.Handle.Types.$fReadNewline3_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.23008912 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline2_closure
.type GHC.IO.Handle.Types.$fReadNewline2_closure, @object
GHC.IO.Handle.Types.$fReadNewline2_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewline2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.230848077 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewline2_entry
.type GHC.IO.Handle.Types.$fReadNewline2_entry, @object
GHC.IO.Handle.Types.$fReadNewline2_entry:
_c8eI9:
	movq %r14,%rsi
	leaq GHC.IO.Handle.Types.$fReadNewline_sps_closure+2(%rip),%r14
	jmp *GHC.Read.choose2_entry@gotpcrel(%rip)
	.size GHC.IO.Handle.Types.$fReadNewline2_entry, .-GHC.IO.Handle.Types.$fReadNewline2_entry


==================== Asm code ====================
2018-03-16 16:03:22.231437767 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline2_info
.type GHC.IO.Handle.Types.$fReadNewline2_info, @object
GHC.IO.Handle.Types.$fReadNewline2_info:
	.quad	GHC.IO.Handle.Types.$fReadNewline2_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S8evg_srt+144


==================== Asm code ====================
2018-03-16 16:03:22.233796103 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline1_closure
.type GHC.IO.Handle.Types.$fReadNewline1_closure, @object
GHC.IO.Handle.Types.$fReadNewline1_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewline1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.234501493 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewline1_entry
.type GHC.IO.Handle.Types.$fReadNewline1_entry, @object
GHC.IO.Handle.Types.$fReadNewline1_entry:
_c8eIk:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.IO.Handle.Types.$fReadNewline2_closure+1(%rip),%r14
	jmp *GHC.Read.list3_entry@gotpcrel(%rip)
	.size GHC.IO.Handle.Types.$fReadNewline1_entry, .-GHC.IO.Handle.Types.$fReadNewline1_entry


==================== Asm code ====================
2018-03-16 16:03:22.235198337 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline1_info
.type GHC.IO.Handle.Types.$fReadNewline1_info, @object
GHC.IO.Handle.Types.$fReadNewline1_info:
	.quad	GHC.IO.Handle.Types.$fReadNewline1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S8evg_srt+160


==================== Asm code ====================
2018-03-16 16:03:22.238819397 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_closure
.type GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_closure, @object
GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.2396311 UTC

.section .text
.align 8
sat_s8egq_entry:
_c8eIz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eIA
_c8eIB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 16(%rbx),%rsi
	leaq GHC.IO.Handle.Types.$fReadNewline2_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Read.list3_entry@gotpcrel(%rip)
_c8eIA:
	jmp *-16(%r13)
	.size sat_s8egq_entry, .-sat_s8egq_entry


==================== Asm code ====================
2018-03-16 16:03:22.240305828 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8egq_info:
	.quad	sat_s8egq_entry
	.quad	1
	.quad	12884901904
	.quad	S8evg_srt+160


==================== Asm code ====================
2018-03-16 16:03:22.241039617 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_entry
.type GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_entry, @object
GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_entry:
_c8eIC:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8eIG
_c8eIF:
	leaq sat_s8egq_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	movq Text.ParserCombinators.ReadP.run_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c8eIG:
	movq $24,904(%r13)
	leaq GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_entry, .-GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 16:03:22.241822038 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_info
.type GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_info, @object
GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_info:
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_entry
	.quad	0
	.quad	30064771086
	.quad	4294967301
	.quad	S8evg_srt+160


==================== Asm code ====================
2018-03-16 16:03:22.244667732 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_closure
.type GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_closure, @object
GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.245953856 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_entry
.type GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_entry, @object
GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_entry:
_c8eIZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eJ0
_c8eJ1:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8eIY
_c8eIX:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fReadNewline1_closure+2(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Read.list_entry@gotpcrel(%rip)
_c8eJ0:
	jmp *-16(%r13)
_c8eIY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_entry, .-GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_entry


==================== Asm code ====================
2018-03-16 16:03:22.246676327 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_info
.type GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_info, @object
GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_info:
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_entry
	.quad	0
	.quad	12884901909
	.quad	S8evg_srt+184


==================== Asm code ====================
2018-03-16 16:03:22.249758845 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline12_closure
.type GHC.IO.Handle.Types.$fReadNewline12_closure, @object
GHC.IO.Handle.Types.$fReadNewline12_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewline12_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.250665437 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewline12_entry
.type GHC.IO.Handle.Types.$fReadNewline12_entry, @object
GHC.IO.Handle.Types.$fReadNewline12_entry:
_c8eJg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eJh
_c8eJi:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8eJf
_c8eJe:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq GHC.Read.$fRead()7_closure@gotpcrel(%rip),%r14
	leaq GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_closure(%rip),%rbx
	addq $-16,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_c8eJh:
	jmp *-16(%r13)
_c8eJf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewline12_entry, .-GHC.IO.Handle.Types.$fReadNewline12_entry


==================== Asm code ====================
2018-03-16 16:03:22.2515143 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline12_info
.type GHC.IO.Handle.Types.$fReadNewline12_info, @object
GHC.IO.Handle.Types.$fReadNewline12_info:
	.quad	GHC.IO.Handle.Types.$fReadNewline12_entry
	.quad	0
	.quad	4294967317
	.quad	S8evg_srt+200


==================== Asm code ====================
2018-03-16 16:03:22.253881799 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline_$creadList_closure
.type GHC.IO.Handle.Types.$fReadNewline_$creadList_closure, @object
GHC.IO.Handle.Types.$fReadNewline_$creadList_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.254965288 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewline_$creadList_entry
.type GHC.IO.Handle.Types.$fReadNewline_$creadList_entry, @object
GHC.IO.Handle.Types.$fReadNewline_$creadList_entry:
_c8eJw:
	movq %r14,%rsi
	leaq GHC.IO.Handle.Types.$fReadNewline12_closure(%rip),%r14
	jmp *Text.ParserCombinators.ReadP.run_entry@gotpcrel(%rip)
	.size GHC.IO.Handle.Types.$fReadNewline_$creadList_entry, .-GHC.IO.Handle.Types.$fReadNewline_$creadList_entry


==================== Asm code ====================
2018-03-16 16:03:22.255619766 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline_$creadList_info
.type GHC.IO.Handle.Types.$fReadNewline_$creadList_info, @object
GHC.IO.Handle.Types.$fReadNewline_$creadList_info:
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadList_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S8evg_srt+208


==================== Asm code ====================
2018-03-16 16:03:22.257517548 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewline_closure
.type GHC.IO.Handle.Types.$fReadNewline_closure, @object
GHC.IO.Handle.Types.$fReadNewline_closure:
	.quad	GHC.Read.C:Read_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_closure+1
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadList_closure+1
	.quad	GHC.IO.Handle.Types.$fReadNewline1_closure+2
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.259353283 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode17_bytes
.type GHC.IO.Handle.Types.$fReadNewlineMode17_bytes, @object
GHC.IO.Handle.Types.$fReadNewlineMode17_bytes:
	.asciz "NewlineMode"


==================== Asm code ====================
2018-03-16 16:03:22.262743013 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode16_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode16_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode16_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode16_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.264155867 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode16_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode16_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode16_entry:
_c8eJL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eJM
_c8eJN:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8eJK
_c8eJJ:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fReadNewlineMode17_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8eJM:
	jmp *-16(%r13)
_c8eJK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewlineMode16_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode16_entry


==================== Asm code ====================
2018-03-16 16:03:22.264900947 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode16_info
.type GHC.IO.Handle.Types.$fReadNewlineMode16_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode16_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode16_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:22.266753857 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode_lexeme1_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode_lexeme1_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode_lexeme1_closure:
	.quad	Text.Read.Lex.Ident_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode16_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.268568197 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode15_bytes
.type GHC.IO.Handle.Types.$fReadNewlineMode15_bytes, @object
GHC.IO.Handle.Types.$fReadNewlineMode15_bytes:
	.asciz "{"


==================== Asm code ====================
2018-03-16 16:03:22.271758471 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode14_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode14_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode14_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode14_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.272730664 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode14_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode14_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode14_entry:
_c8eK4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eK5
_c8eK6:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8eK3
_c8eK2:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fReadNewlineMode15_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8eK5:
	jmp *-16(%r13)
_c8eK3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewlineMode14_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode14_entry


==================== Asm code ====================
2018-03-16 16:03:22.273442661 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode14_info
.type GHC.IO.Handle.Types.$fReadNewlineMode14_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode14_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode14_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:22.275280334 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode_lexeme_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode_lexeme_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode_lexeme_closure:
	.quad	Text.Read.Lex.Punc_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode14_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.277229832 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode13_bytes
.type GHC.IO.Handle.Types.$fReadNewlineMode13_bytes, @object
GHC.IO.Handle.Types.$fReadNewlineMode13_bytes:
	.asciz "inputNL"


==================== Asm code ====================
2018-03-16 16:03:22.280484571 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode12_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode12_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode12_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode12_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.281478331 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode12_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode12_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode12_entry:
_c8eKn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eKo
_c8eKp:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8eKm
_c8eKl:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fReadNewlineMode13_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8eKo:
	jmp *-16(%r13)
_c8eKm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewlineMode12_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode12_entry


==================== Asm code ====================
2018-03-16 16:03:22.282234306 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode12_info
.type GHC.IO.Handle.Types.$fReadNewlineMode12_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode12_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode12_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:22.284600422 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode11_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode11_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode11_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode11_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.285367134 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode11_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode11_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode11_entry:
_c8eKC:
	movq %rsi,%rdi
	movq Text.ParserCombinators.ReadPrec.minPrec_closure@gotpcrel(%rip),%rsi
	leaq GHC.IO.Handle.Types.$fReadNewline2_closure+1(%rip),%r14
	jmp *GHC.Read.list3_entry@gotpcrel(%rip)
	.size GHC.IO.Handle.Types.$fReadNewlineMode11_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode11_entry


==================== Asm code ====================
2018-03-16 16:03:22.286036039 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode11_info
.type GHC.IO.Handle.Types.$fReadNewlineMode11_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode11_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode11_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S8evg_srt+160


==================== Asm code ====================
2018-03-16 16:03:22.287789594 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode_n_closure
.type GHC.IO.Handle.Types.$fReadBufferMode_n_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode_n_closure:
	.quad	GHC.Types.I#_con_info
	.quad	11


==================== Asm code ====================
2018-03-16 16:03:22.289897382 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode10_bytes
.type GHC.IO.Handle.Types.$fReadNewlineMode10_bytes, @object
GHC.IO.Handle.Types.$fReadNewlineMode10_bytes:
	.asciz ","


==================== Asm code ====================
2018-03-16 16:03:22.29263309 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode9_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode9_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode9_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode9_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.293681499 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode9_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode9_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode9_entry:
_c8eKR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eKS
_c8eKT:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8eKQ
_c8eKP:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fReadNewlineMode10_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8eKS:
	jmp *-16(%r13)
_c8eKQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewlineMode9_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode9_entry


==================== Asm code ====================
2018-03-16 16:03:22.294472088 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode9_info
.type GHC.IO.Handle.Types.$fReadNewlineMode9_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode9_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode9_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:22.296370508 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode8_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode8_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode8_closure:
	.quad	Text.Read.Lex.Punc_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode9_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.298551908 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode7_bytes
.type GHC.IO.Handle.Types.$fReadNewlineMode7_bytes, @object
GHC.IO.Handle.Types.$fReadNewlineMode7_bytes:
	.asciz "outputNL"


==================== Asm code ====================
2018-03-16 16:03:22.301183801 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode6_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode6_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode6_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.302109426 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode6_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode6_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode6_entry:
_c8eLa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eLb
_c8eLc:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8eL9
_c8eL8:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fReadNewlineMode7_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8eLb:
	jmp *-16(%r13)
_c8eL9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewlineMode6_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode6_entry


==================== Asm code ====================
2018-03-16 16:03:22.302837379 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode6_info
.type GHC.IO.Handle.Types.$fReadNewlineMode6_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode6_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:22.305661942 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode4_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode4_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode4_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.306512134 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode4_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode4_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode4_entry:
_c8eLr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eLs
_c8eLt:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8eLq
_c8eLp:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fReadNewlineMode5_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8eLs:
	jmp *-16(%r13)
_c8eLq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewlineMode4_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode4_entry


==================== Asm code ====================
2018-03-16 16:03:22.307262304 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode4_info
.type GHC.IO.Handle.Types.$fReadNewlineMode4_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode4_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:22.308985275 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode3_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode3_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode3_closure:
	.quad	Text.Read.Lex.Punc_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode4_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.319869104 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$creadPrec_closure
.type GHC.IO.Handle.Types.$w$creadPrec_closure, @object
GHC.IO.Handle.Types.$w$creadPrec_closure:
	.quad	GHC.IO.Handle.Types.$w$creadPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.320795928 UTC

.section .text
.align 8
sat_s8egD_entry:
_c8eMg:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8eMk
_c8eMj:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	leaq GHC.IO.Handle.Types.NewlineMode_con_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%r14
	movq %rax,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c8eMk:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_s8egD_entry, .-sat_s8egD_entry


==================== Asm code ====================
2018-03-16 16:03:22.32186337 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8egD_info:
	.quad	sat_s8egD_entry
	.quad	3
	.quad	8
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:22.323159062 UTC

.section .text
.align 8
sat_s8egG_entry:
_c8eMo:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eMp
_c8eMq:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8eMs
_c8eMr:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_s8egD_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq block_c8eMl_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -23(%r12),%rsi
	leaq GHC.IO.Handle.Types.$fReadNewlineMode3_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_c8eMs:
	movq $32,904(%r13)
_c8eMp:
	jmp *-8(%r13)
	.size sat_s8egG_entry, .-sat_s8egG_entry


==================== Asm code ====================
2018-03-16 16:03:22.323946105 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8egG_info:
	.quad	sat_s8egG_entry
	.quad	2
	.quad	12884901899
	.quad	4294967301
	.quad	S8evg_srt+216


==================== Asm code ====================
2018-03-16 16:03:22.324657548 UTC

.section .text
.align 8
_c8eMl:
_c8eMl:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8eMv
_c8eMu:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8eMv:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8eMl, .-_c8eMl


==================== Asm code ====================
2018-03-16 16:03:22.325337507 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eMl_info:
	.quad	_c8eMl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.326114369 UTC

.section .text
.align 8
sat_s8egH_entry:
_c8eMw:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8eMA
_c8eMz:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_s8egG_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%r8
	leaq GHC.IO.Handle.Types.$fReadBufferMode_n_closure+1(%rip),%rdi
	leaq GHC.IO.Handle.Types.$fReadNewlineMode11_closure+2(%rip),%rsi
	leaq GHC.IO.Handle.Types.$fReadNewlineMode6_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_c8eMA:
	movq $24,904(%r13)
	jmp *-8(%r13)
	.size sat_s8egH_entry, .-sat_s8egH_entry


==================== Asm code ====================
2018-03-16 16:03:22.326868951 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8egH_info:
	.quad	sat_s8egH_entry
	.quad	2
	.quad	133143986187
	.quad	4294967301
	.quad	S8evg_srt+216


==================== Asm code ====================
2018-03-16 16:03:22.327728535 UTC

.section .text
.align 8
sat_s8egK_entry:
_c8eME:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eMF
_c8eMG:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8eMI
_c8eMH:
	movq 7(%rbx),%rax
	leaq sat_s8egH_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq block_c8eMB_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -15(%r12),%rsi
	leaq GHC.IO.Handle.Types.$fReadNewlineMode8_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_c8eMI:
	movq $24,904(%r13)
_c8eMF:
	jmp *-8(%r13)
	.size sat_s8egK_entry, .-sat_s8egK_entry


==================== Asm code ====================
2018-03-16 16:03:22.328444583 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8egK_info:
	.quad	sat_s8egK_entry
	.quad	1
	.quad	270582939657
	.quad	4294967301
	.quad	S8evg_srt+216


==================== Asm code ====================
2018-03-16 16:03:22.329224982 UTC

.section .text
.align 8
_c8eMB:
_c8eMB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8eML
_c8eMK:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8eML:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8eMB, .-_c8eMB


==================== Asm code ====================
2018-03-16 16:03:22.329961144 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eMB_info:
	.quad	_c8eMB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.33072984 UTC

.section .text
.align 8
sat_s8egL_entry:
_c8eMM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8eMQ
_c8eMP:
	movq 7(%rbx),%rax
	leaq sat_s8egK_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%r8
	leaq GHC.IO.Handle.Types.$fReadBufferMode_n_closure+1(%rip),%rdi
	leaq GHC.IO.Handle.Types.$fReadNewlineMode11_closure+2(%rip),%rsi
	leaq GHC.IO.Handle.Types.$fReadNewlineMode12_closure(%rip),%r14
	jmp *GHC.Read.readField_entry@gotpcrel(%rip)
_c8eMQ:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_s8egL_entry, .-sat_s8egL_entry


==================== Asm code ====================
2018-03-16 16:03:22.331791255 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8egL_info:
	.quad	sat_s8egL_entry
	.quad	1
	.quad	545460846601
	.quad	4294967301
	.quad	S8evg_srt+216


==================== Asm code ====================
2018-03-16 16:03:22.332609067 UTC

.section .text
.align 8
sat_s8egO_entry:
_c8eMU:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eMV
_c8eMW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8eMY
_c8eMX:
	movq 7(%rbx),%rax
	leaq sat_s8egL_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq block_c8eMR_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -7(%r12),%rsi
	leaq GHC.IO.Handle.Types.$fReadNewlineMode_lexeme_closure+3(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_c8eMY:
	movq $16,904(%r13)
_c8eMV:
	jmp *-8(%r13)
	.size sat_s8egO_entry, .-sat_s8egO_entry


==================== Asm code ====================
2018-03-16 16:03:22.333332507 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8egO_info:
	.quad	sat_s8egO_entry
	.quad	1
	.quad	1095216660489
	.quad	4294967301
	.quad	S8evg_srt+216


==================== Asm code ====================
2018-03-16 16:03:22.33401411 UTC

.section .text
.align 8
_c8eMR:
_c8eMR:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8eN1
_c8eN0:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8eN1:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8eMR, .-_c8eMR


==================== Asm code ====================
2018-03-16 16:03:22.334682858 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eMR_info:
	.quad	_c8eMR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.335546749 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$w$creadPrec_entry
.type GHC.IO.Handle.Types.$w$creadPrec_entry, @object
GHC.IO.Handle.Types.$w$creadPrec_entry:
_c8eN5:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eN6
_c8eN7:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8eN9
_c8eN8:
	cmpq $11,%r14
	jg _c8eN3
_c8eN4:
	leaq sat_s8egO_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rsi,(%r12)
	leaq block_c8eNa_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -7(%r12),%rsi
	leaq GHC.IO.Handle.Types.$fReadNewlineMode_lexeme1_closure+4(%rip),%r14
	addq $-8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_c8eN9:
	movq $16,904(%r13)
_c8eN6:
	leaq GHC.IO.Handle.Types.$w$creadPrec_closure(%rip),%rbx
	jmp *-8(%r13)
_c8eN3:
	addq $-16,%r12
	movq Text.ParserCombinators.ReadP.Fail_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$w$creadPrec_entry, .-GHC.IO.Handle.Types.$w$creadPrec_entry


==================== Asm code ====================
2018-03-16 16:03:22.336350376 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$creadPrec_info
.type GHC.IO.Handle.Types.$w$creadPrec_info, @object
GHC.IO.Handle.Types.$w$creadPrec_info:
	.quad	GHC.IO.Handle.Types.$w$creadPrec_entry
	.quad	0
	.quad	4393751543822
	.quad	8589934605
	.quad	S8evg_srt+216


==================== Asm code ====================
2018-03-16 16:03:22.337139114 UTC

.section .text
.align 8
_c8eNa:
_c8eNa:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8eNf
_c8eNe:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8eNf:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8eNa, .-_c8eNa


==================== Asm code ====================
2018-03-16 16:03:22.337847991 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eNa_info:
	.quad	_c8eNa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.341428953 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode2_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode2_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode2_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.342269173 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode2_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode2_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode2_entry:
_c8eOk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eOl
_c8eOm:
	leaq block_c8eOh_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8eOh
_c8eOi:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eOl:
	leaq GHC.IO.Handle.Types.$fReadNewlineMode2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fReadNewlineMode2_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode2_entry


==================== Asm code ====================
2018-03-16 16:03:22.342991399 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode2_info
.type GHC.IO.Handle.Types.$fReadNewlineMode2_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode2_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode2_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S8evg_srt+280


==================== Asm code ====================
2018-03-16 16:03:22.343671583 UTC

.section .text
.align 8
_c8eOh:
_c8eOh:
	movq 8(%rbp),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.Types.$w$creadPrec_entry
	.size _c8eOh, .-_c8eOh


==================== Asm code ====================
2018-03-16 16:03:22.344349544 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eOh_info:
	.quad	_c8eOh
	.quad	1
	.quad	4294967326
	.quad	S8evg_srt+280


==================== Asm code ====================
2018-03-16 16:03:22.346880491 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode1_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode1_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode1_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.347617025 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode1_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode1_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode1_entry:
_c8eOF:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.IO.Handle.Types.$fReadNewlineMode2_closure+2(%rip),%r14
	jmp *GHC.Read.list3_entry@gotpcrel(%rip)
	.size GHC.IO.Handle.Types.$fReadNewlineMode1_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode1_entry


==================== Asm code ====================
2018-03-16 16:03:22.348613195 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode1_info
.type GHC.IO.Handle.Types.$fReadNewlineMode1_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode1_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode1_entry
	.quad	0
	.quad	562954248388622
	.quad	8589934607
	.quad	S8evg_srt+160


==================== Asm code ====================
2018-03-16 16:03:22.351867722 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.352711454 UTC

.section .text
.align 8
sat_s8egW_entry:
_c8eOU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eOV
_c8eOW:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 16(%rbx),%rsi
	leaq GHC.IO.Handle.Types.$fReadNewlineMode2_closure+2(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Read.list3_entry@gotpcrel(%rip)
_c8eOV:
	jmp *-16(%r13)
	.size sat_s8egW_entry, .-sat_s8egW_entry


==================== Asm code ====================
2018-03-16 16:03:22.353690973 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8egW_info:
	.quad	sat_s8egW_entry
	.quad	1
	.quad	562954248388624
	.quad	S8evg_srt+160


==================== Asm code ====================
2018-03-16 16:03:22.35449639 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_entry:
_c8eOX:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8eP1
_c8eP0:
	leaq sat_s8egW_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	movq Text.ParserCombinators.ReadP.run_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c8eP1:
	movq $24,904(%r13)
	leaq GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 16:03:22.355245907 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_info
.type GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_entry
	.quad	0
	.quad	1688854155231246
	.quad	4294967301
	.quad	S8evg_srt+160


==================== Asm code ====================
2018-03-16 16:03:22.358502964 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.35940307 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_entry:
_c8ePk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ePl
_c8ePm:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8ePj
_c8ePi:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fReadNewlineMode1_closure+2(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Read.list_entry@gotpcrel(%rip)
_c8ePl:
	jmp *-16(%r13)
_c8ePj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_entry


==================== Asm code ====================
2018-03-16 16:03:22.360153694 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_info
.type GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_entry
	.quad	0
	.quad	281479271677973
	.quad	S8evg_srt+184


==================== Asm code ====================
2018-03-16 16:03:22.362995388 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode18_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode18_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode18_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode18_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.363946968 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode18_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode18_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode18_entry:
_c8ePB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ePC
_c8ePD:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8ePA
_c8ePz:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq GHC.Read.$fRead()7_closure@gotpcrel(%rip),%r14
	leaq GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_closure(%rip),%rbx
	addq $-16,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_c8ePC:
	jmp *-16(%r13)
_c8ePA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadNewlineMode18_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode18_entry


==================== Asm code ====================
2018-03-16 16:03:22.364730064 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode18_info
.type GHC.IO.Handle.Types.$fReadNewlineMode18_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode18_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode18_entry
	.quad	0
	.quad	4294967317
	.quad	S8evg_srt+320


==================== Asm code ====================
2018-03-16 16:03:22.369360987 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_closure:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.370090815 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_entry
.type GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_entry, @object
GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_entry:
_c8ePR:
	movq %r14,%rsi
	leaq GHC.IO.Handle.Types.$fReadNewlineMode18_closure(%rip),%r14
	jmp *Text.ParserCombinators.ReadP.run_entry@gotpcrel(%rip)
	.size GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_entry, .-GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_entry


==================== Asm code ====================
2018-03-16 16:03:22.370713751 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_info
.type GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_info, @object
GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_info:
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S8evg_srt+328


==================== Asm code ====================
2018-03-16 16:03:22.372645746 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadNewlineMode_closure
.type GHC.IO.Handle.Types.$fReadNewlineMode_closure, @object
GHC.IO.Handle.Types.$fReadNewlineMode_closure:
	.quad	GHC.Read.C:Read_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_closure+1
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadList_closure+1
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode1_closure+2
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.377320379 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$c<_closure
.type GHC.IO.Handle.Types.$fOrdNewline_$c<_closure, @object
GHC.IO.Handle.Types.$fOrdNewline_$c<_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c<_info


==================== Asm code ====================
2018-03-16 16:03:22.378205491 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewline_$c<_entry
.type GHC.IO.Handle.Types.$fOrdNewline_$c<_entry, @object
GHC.IO.Handle.Types.$fOrdNewline_$c<_entry:
_c8eQa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eQb
_c8eQc:
	leaq block_c8eQ3_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8eQ3
_c8eQ4:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eQb:
	leaq GHC.IO.Handle.Types.$fOrdNewline_$c<_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewline_$c<_entry, .-GHC.IO.Handle.Types.$fOrdNewline_$c<_entry


==================== Asm code ====================
2018-03-16 16:03:22.378886087 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$c<_info
.type GHC.IO.Handle.Types.$fOrdNewline_$c<_info, @object
GHC.IO.Handle.Types.$fOrdNewline_$c<_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c<_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.379792949 UTC

.section .text
.align 8
_c8eQ3:
_c8eQ3:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8eQ7
_c8eQ8:
	leaq block_c8eQu_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8eQu
_c8eQw:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eQ7:
	leaq block_c8eQf_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8eQf
_c8eQh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8eQ3, .-_c8eQ3


==================== Asm code ====================
2018-03-16 16:03:22.380536034 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eQ3_info:
	.quad	_c8eQ3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.381348652 UTC

.section .text
.align 8
_c8eQf:
_c8eQf:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8eQn
_c8eQr:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8eQn:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8eQf, .-_c8eQf


==================== Asm code ====================
2018-03-16 16:03:22.382056889 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eQf_info:
	.quad	_c8eQf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.382755963 UTC

.section .text
.align 8
_c8eQu:
_c8eQu:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8eQu, .-_c8eQu


==================== Asm code ====================
2018-03-16 16:03:22.383476917 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eQu_info:
	.quad	_c8eQu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.388764503 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$ccompare_closure
.type GHC.IO.Handle.Types.$fOrdNewline_$ccompare_closure, @object
GHC.IO.Handle.Types.$fOrdNewline_$ccompare_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$ccompare_info


==================== Asm code ====================
2018-03-16 16:03:22.389689155 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewline_$ccompare_entry
.type GHC.IO.Handle.Types.$fOrdNewline_$ccompare_entry, @object
GHC.IO.Handle.Types.$fOrdNewline_$ccompare_entry:
_c8eRk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eRl
_c8eRm:
	leaq block_c8eRd_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8eRd
_c8eRe:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eRl:
	leaq GHC.IO.Handle.Types.$fOrdNewline_$ccompare_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewline_$ccompare_entry, .-GHC.IO.Handle.Types.$fOrdNewline_$ccompare_entry


==================== Asm code ====================
2018-03-16 16:03:22.390406252 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$ccompare_info
.type GHC.IO.Handle.Types.$fOrdNewline_$ccompare_info, @object
GHC.IO.Handle.Types.$fOrdNewline_$ccompare_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$ccompare_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.391302719 UTC

.section .text
.align 8
_c8eRd:
_c8eRd:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8eRh
_c8eRi:
	leaq block_c8eRE_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8eRE
_c8eRG:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eRh:
	leaq block_c8eRp_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8eRp
_c8eRr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8eRd, .-_c8eRd


==================== Asm code ====================
2018-03-16 16:03:22.39201314 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eRd_info:
	.quad	_c8eRd
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.392769085 UTC

.section .text
.align 8
_c8eRp:
_c8eRp:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8eRU
_c8eRB:
	movq GHC.Types.LT_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u8eRU:
	addq $8,%rbp
	jmp _c8eRQ
	.size _c8eRp, .-_c8eRp


==================== Asm code ====================
2018-03-16 16:03:22.393767905 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eRp_info:
	.quad	_c8eRp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.394495667 UTC

.section .text
.align 8
_c8eRE:
_c8eRE:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8eRM
_u8eRT:
	addq $8,%rbp
	jmp _c8eRQ
_c8eRM:
	movq GHC.Types.GT_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8eRE, .-_c8eRE


==================== Asm code ====================
2018-03-16 16:03:22.395073286 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eRE_info:
	.quad	_c8eRE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.395732556 UTC

.section .text
.align 8
_c8eRQ:
_c8eRQ:
	movq GHC.Types.EQ_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8eRQ, .-_c8eRQ


==================== Asm code ====================
2018-03-16 16:03:22.400453825 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqNewline_$c==_closure
.type GHC.IO.Handle.Types.$fEqNewline_$c==_closure, @object
GHC.IO.Handle.Types.$fEqNewline_$c==_closure:
	.quad	GHC.IO.Handle.Types.$fEqNewline_$c==_info


==================== Asm code ====================
2018-03-16 16:03:22.401309013 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fEqNewline_$c==_entry
.type GHC.IO.Handle.Types.$fEqNewline_$c==_entry, @object
GHC.IO.Handle.Types.$fEqNewline_$c==_entry:
_c8eSJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eSK
_c8eSL:
	leaq block_c8eSC_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8eSC
_c8eSD:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eSK:
	leaq GHC.IO.Handle.Types.$fEqNewline_$c==_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fEqNewline_$c==_entry, .-GHC.IO.Handle.Types.$fEqNewline_$c==_entry


==================== Asm code ====================
2018-03-16 16:03:22.402047338 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqNewline_$c==_info
.type GHC.IO.Handle.Types.$fEqNewline_$c==_info, @object
GHC.IO.Handle.Types.$fEqNewline_$c==_info:
	.quad	GHC.IO.Handle.Types.$fEqNewline_$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.403289282 UTC

.section .text
.align 8
_c8eSC:
_c8eSC:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8eSG
_c8eSH:
	leaq block_c8eT3_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8eT3
_c8eT5:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eSG:
	leaq block_c8eSO_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8eSO
_c8eSQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8eSC, .-_c8eSC


==================== Asm code ====================
2018-03-16 16:03:22.404005961 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eSC_info:
	.quad	_c8eSC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.404671439 UTC

.section .text
.align 8
_c8eSO:
_c8eSO:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8eTk
_u8eTl:
	addq $8,%rbp
	jmp _c8eTb
_u8eTk:
	addq $8,%rbp
	jmp _c8eTf
	.size _c8eSO, .-_c8eSO


==================== Asm code ====================
2018-03-16 16:03:22.405764446 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eSO_info:
	.quad	_c8eSO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.406471209 UTC

.section .text
.align 8
_c8eT3:
_c8eT3:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8eTi
_u8eTj:
	addq $8,%rbp
	jmp _c8eTf
_u8eTi:
	addq $8,%rbp
	jmp _c8eTb
	.size _c8eT3, .-_c8eT3


==================== Asm code ====================
2018-03-16 16:03:22.407123235 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eT3_info:
	.quad	_c8eT3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.40784904 UTC

.section .text
.align 8
_c8eTb:
_c8eTb:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8eTb, .-_c8eTb


==================== Asm code ====================
2018-03-16 16:03:22.408533122 UTC

.section .text
.align 8
_c8eTf:
_c8eTf:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8eTf, .-_c8eTf


==================== Asm code ====================
2018-03-16 16:03:22.4137526 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqNewline_$c/=_closure
.type GHC.IO.Handle.Types.$fEqNewline_$c/=_closure, @object
GHC.IO.Handle.Types.$fEqNewline_$c/=_closure:
	.quad	GHC.IO.Handle.Types.$fEqNewline_$c/=_info


==================== Asm code ====================
2018-03-16 16:03:22.414572618 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fEqNewline_$c/=_entry
.type GHC.IO.Handle.Types.$fEqNewline_$c/=_entry, @object
GHC.IO.Handle.Types.$fEqNewline_$c/=_entry:
_c8eUc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eUd
_c8eUe:
	leaq block_c8eU5_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8eU5
_c8eU6:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eUd:
	leaq GHC.IO.Handle.Types.$fEqNewline_$c/=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fEqNewline_$c/=_entry, .-GHC.IO.Handle.Types.$fEqNewline_$c/=_entry


==================== Asm code ====================
2018-03-16 16:03:22.415281618 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqNewline_$c/=_info
.type GHC.IO.Handle.Types.$fEqNewline_$c/=_info, @object
GHC.IO.Handle.Types.$fEqNewline_$c/=_info:
	.quad	GHC.IO.Handle.Types.$fEqNewline_$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.416215543 UTC

.section .text
.align 8
_c8eU5:
_c8eU5:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8eU9
_c8eUa:
	leaq block_c8eUw_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8eUw
_c8eUy:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eU9:
	leaq block_c8eUh_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8eUh
_c8eUj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8eU5, .-_c8eU5


==================== Asm code ====================
2018-03-16 16:03:22.416940162 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eU5_info:
	.quad	_c8eU5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.418002843 UTC

.section .text
.align 8
_c8eUh:
_c8eUh:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8eUN
_u8eUO:
	addq $8,%rbp
	jmp _c8eUE
_u8eUN:
	addq $8,%rbp
	jmp _c8eUI
	.size _c8eUh, .-_c8eUh


==================== Asm code ====================
2018-03-16 16:03:22.418656047 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eUh_info:
	.quad	_c8eUh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.419369535 UTC

.section .text
.align 8
_c8eUw:
_c8eUw:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8eUL
_u8eUM:
	addq $8,%rbp
	jmp _c8eUI
_u8eUL:
	addq $8,%rbp
	jmp _c8eUE
	.size _c8eUw, .-_c8eUw


==================== Asm code ====================
2018-03-16 16:03:22.420380881 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eUw_info:
	.quad	_c8eUw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.421022155 UTC

.section .text
.align 8
_c8eUE:
_c8eUE:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8eUE, .-_c8eUE


==================== Asm code ====================
2018-03-16 16:03:22.421683187 UTC

.section .text
.align 8
_c8eUI:
_c8eUI:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8eUI, .-_c8eUI


==================== Asm code ====================
2018-03-16 16:03:22.423560462 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqNewline_closure
.type GHC.IO.Handle.Types.$fEqNewline_closure, @object
GHC.IO.Handle.Types.$fEqNewline_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.IO.Handle.Types.$fEqNewline_$c==_closure+2
	.quad	GHC.IO.Handle.Types.$fEqNewline_$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:22.427538068 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$c<=_closure
.type GHC.IO.Handle.Types.$fOrdNewline_$c<=_closure, @object
GHC.IO.Handle.Types.$fOrdNewline_$c<=_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c<=_info


==================== Asm code ====================
2018-03-16 16:03:22.428529837 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewline_$c<=_entry
.type GHC.IO.Handle.Types.$fOrdNewline_$c<=_entry, @object
GHC.IO.Handle.Types.$fOrdNewline_$c<=_entry:
_c8eVG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eVH
_c8eVI:
	leaq block_c8eVz_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8eVz
_c8eVA:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eVH:
	leaq GHC.IO.Handle.Types.$fOrdNewline_$c<=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewline_$c<=_entry, .-GHC.IO.Handle.Types.$fOrdNewline_$c<=_entry


==================== Asm code ====================
2018-03-16 16:03:22.429184707 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$c<=_info
.type GHC.IO.Handle.Types.$fOrdNewline_$c<=_info, @object
GHC.IO.Handle.Types.$fOrdNewline_$c<=_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c<=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.430314075 UTC

.section .text
.align 8
_c8eVz:
_c8eVz:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8eVD
_c8eVE:
	leaq block_c8eW0_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8eW0
_c8eW2:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eVD:
	leaq block_c8eVL_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8eVL
_c8eVN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8eVz, .-_c8eVz


==================== Asm code ====================
2018-03-16 16:03:22.430959923 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eVz_info:
	.quad	_c8eVz
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.431623237 UTC

.section .text
.align 8
_c8eVL:
_c8eVL:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8eVT
_c8eVX:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8eVT:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8eVL, .-_c8eVL


==================== Asm code ====================
2018-03-16 16:03:22.432251462 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eVL_info:
	.quad	_c8eVL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.432885297 UTC

.section .text
.align 8
_c8eW0:
_c8eW0:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8eW0, .-_c8eW0


==================== Asm code ====================
2018-03-16 16:03:22.433509817 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eW0_info:
	.quad	_c8eW0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.437006871 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$cmax_closure
.type GHC.IO.Handle.Types.$fOrdNewline_$cmax_closure, @object
GHC.IO.Handle.Types.$fOrdNewline_$cmax_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$cmax_info


==================== Asm code ====================
2018-03-16 16:03:22.437734847 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewline_$cmax_entry
.type GHC.IO.Handle.Types.$fOrdNewline_$cmax_entry, @object
GHC.IO.Handle.Types.$fOrdNewline_$cmax_entry:
_c8eWQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eWR
_c8eWS:
	leaq block_c8eWJ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8eWJ
_c8eWK:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eWR:
	leaq GHC.IO.Handle.Types.$fOrdNewline_$cmax_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewline_$cmax_entry, .-GHC.IO.Handle.Types.$fOrdNewline_$cmax_entry


==================== Asm code ====================
2018-03-16 16:03:22.438393162 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$cmax_info
.type GHC.IO.Handle.Types.$fOrdNewline_$cmax_info, @object
GHC.IO.Handle.Types.$fOrdNewline_$cmax_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.439120763 UTC

.section .text
.align 8
_c8eWJ:
_c8eWJ:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8eWN
_c8eWO:
	leaq block_c8eWY_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8eWY
_c8eX0:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eWN:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8eWJ, .-_c8eWJ


==================== Asm code ====================
2018-03-16 16:03:22.439779048 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eWJ_info:
	.quad	_c8eWJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.440407578 UTC

.section .text
.align 8
_c8eWY:
_c8eWY:
	leaq GHC.IO.Handle.Types.CRLF_closure+2(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8eWY, .-_c8eWY


==================== Asm code ====================
2018-03-16 16:03:22.44100087 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eWY_info:
	.quad	_c8eWY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.445143733 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$c>=_closure
.type GHC.IO.Handle.Types.$fOrdNewline_$c>=_closure, @object
GHC.IO.Handle.Types.$fOrdNewline_$c>=_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c>=_info


==================== Asm code ====================
2018-03-16 16:03:22.445899878 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewline_$c>=_entry
.type GHC.IO.Handle.Types.$fOrdNewline_$c>=_entry, @object
GHC.IO.Handle.Types.$fOrdNewline_$c>=_entry:
_c8eXC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eXD
_c8eXE:
	leaq block_c8eXv_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8eXv
_c8eXw:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eXD:
	leaq GHC.IO.Handle.Types.$fOrdNewline_$c>=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewline_$c>=_entry, .-GHC.IO.Handle.Types.$fOrdNewline_$c>=_entry


==================== Asm code ====================
2018-03-16 16:03:22.446533913 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$c>=_info
.type GHC.IO.Handle.Types.$fOrdNewline_$c>=_info, @object
GHC.IO.Handle.Types.$fOrdNewline_$c>=_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c>=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.447306697 UTC

.section .text
.align 8
_c8eXv:
_c8eXv:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8eXz
_c8eXA:
	leaq block_c8eXW_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8eXW
_c8eXY:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eXz:
	leaq block_c8eXH_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8eXH
_c8eXJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8eXv, .-_c8eXv


==================== Asm code ====================
2018-03-16 16:03:22.447934175 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eXv_info:
	.quad	_c8eXv
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.448652249 UTC

.section .text
.align 8
_c8eXH:
_c8eXH:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8eXP
_c8eXT:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8eXP:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8eXH, .-_c8eXH


==================== Asm code ====================
2018-03-16 16:03:22.449329338 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eXH_info:
	.quad	_c8eXH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.449988261 UTC

.section .text
.align 8
_c8eXW:
_c8eXW:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8eXW, .-_c8eXW


==================== Asm code ====================
2018-03-16 16:03:22.450561161 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eXW_info:
	.quad	_c8eXW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.452804051 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$c>_closure
.type GHC.IO.Handle.Types.$fOrdNewline_$c>_closure, @object
GHC.IO.Handle.Types.$fOrdNewline_$c>_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c>_info


==================== Asm code ====================
2018-03-16 16:03:22.453747839 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewline_$c>_entry
.type GHC.IO.Handle.Types.$fOrdNewline_$c>_entry, @object
GHC.IO.Handle.Types.$fOrdNewline_$c>_entry:
_c8eYF:
	movq %rsi,%rax
	movq %r14,%rsi
	movq %rax,%r14
	jmp GHC.IO.Handle.Types.$fOrdNewline_$c<_entry
	.size GHC.IO.Handle.Types.$fOrdNewline_$c>_entry, .-GHC.IO.Handle.Types.$fOrdNewline_$c>_entry


==================== Asm code ====================
2018-03-16 16:03:22.454321576 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$c>_info
.type GHC.IO.Handle.Types.$fOrdNewline_$c>_info, @object
GHC.IO.Handle.Types.$fOrdNewline_$c>_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.457545205 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$cmin_closure
.type GHC.IO.Handle.Types.$fOrdNewline_$cmin_closure, @object
GHC.IO.Handle.Types.$fOrdNewline_$cmin_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$cmin_info


==================== Asm code ====================
2018-03-16 16:03:22.45827128 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewline_$cmin_entry
.type GHC.IO.Handle.Types.$fOrdNewline_$cmin_entry, @object
GHC.IO.Handle.Types.$fOrdNewline_$cmin_entry:
_c8eYX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eYY
_c8eYZ:
	leaq block_c8eYQ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8eYQ
_c8eYR:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eYY:
	leaq GHC.IO.Handle.Types.$fOrdNewline_$cmin_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewline_$cmin_entry, .-GHC.IO.Handle.Types.$fOrdNewline_$cmin_entry


==================== Asm code ====================
2018-03-16 16:03:22.459151188 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_$cmin_info
.type GHC.IO.Handle.Types.$fOrdNewline_$cmin_info, @object
GHC.IO.Handle.Types.$fOrdNewline_$cmin_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.459904778 UTC

.section .text
.align 8
_c8eYQ:
_c8eYQ:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8eYU
_c8eYV:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8eYU:
	leaq block_c8eZ2_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8eZ2
_c8eZ4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8eYQ, .-_c8eYQ


==================== Asm code ====================
2018-03-16 16:03:22.46052297 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eYQ_info:
	.quad	_c8eYQ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.461125561 UTC

.section .text
.align 8
_c8eZ2:
_c8eZ2:
	leaq GHC.IO.Handle.Types.LF_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8eZ2, .-_c8eZ2


==================== Asm code ====================
2018-03-16 16:03:22.461724035 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eZ2_info:
	.quad	_c8eZ2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.463467184 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewline_closure
.type GHC.IO.Handle.Types.$fOrdNewline_closure, @object
GHC.IO.Handle.Types.$fOrdNewline_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.IO.Handle.Types.$fEqNewline_closure+1
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$ccompare_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c<_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c<=_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c>_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$c>=_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$cmax_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewline_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:22.467893734 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$ccompare_closure
.type GHC.IO.Handle.Types.$w$ccompare_closure, @object
GHC.IO.Handle.Types.$w$ccompare_closure:
	.quad	GHC.IO.Handle.Types.$w$ccompare_info


==================== Asm code ====================
2018-03-16 16:03:22.468656489 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$w$ccompare_entry
.type GHC.IO.Handle.Types.$w$ccompare_entry, @object
GHC.IO.Handle.Types.$w$ccompare_entry:
_c8eZK:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8eZL
_c8eZM:
	leaq block_c8eZD_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rbx
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c8eZD
_c8eZE:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eZL:
	leaq GHC.IO.Handle.Types.$w$ccompare_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$w$ccompare_entry, .-GHC.IO.Handle.Types.$w$ccompare_entry


==================== Asm code ====================
2018-03-16 16:03:22.46963319 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$ccompare_info
.type GHC.IO.Handle.Types.$w$ccompare_info, @object
GHC.IO.Handle.Types.$w$ccompare_info:
	.quad	GHC.IO.Handle.Types.$w$ccompare_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:03:22.470370357 UTC

.section .text
.align 8
_c8eZD:
_c8eZD:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8eZH
_c8eZI:
	leaq block_c8f04_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8f04
_c8f06:
	movq (%rbx),%rax
	jmp *(%rax)
_c8eZH:
	leaq block_c8eZP_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8eZP
_c8eZR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8eZD, .-_c8eZD


==================== Asm code ====================
2018-03-16 16:03:22.470983435 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eZD_info:
	.quad	_c8eZD
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.471669343 UTC

.section .text
.align 8
_c8eZP:
_c8eZP:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8f0k
_c8f01:
	movq GHC.Types.LT_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u8f0k:
	addq $8,%rbp
	jmp _c8f0g
	.size _c8eZP, .-_c8eZP


==================== Asm code ====================
2018-03-16 16:03:22.472269366 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8eZP_info:
	.quad	_c8eZP
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.472917 UTC

.section .text
.align 8
_c8f04:
_c8f04:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8f0c
_u8f0j:
	addq $8,%rbp
	jmp _c8f0g
_c8f0c:
	movq GHC.Types.GT_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8f04, .-_c8f04


==================== Asm code ====================
2018-03-16 16:03:22.473534452 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f04_info:
	.quad	_c8f04
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.474146663 UTC

.section .text
.align 8
_c8f0g:
_c8f0g:
	movq 16(%rbp),%rsi
	movq (%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Types.$fOrdNewline_$ccompare_entry
	.size _c8f0g, .-_c8f0g


==================== Asm code ====================
2018-03-16 16:03:22.477646752 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_closure
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_closure, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_info


==================== Asm code ====================
2018-03-16 16:03:22.478339143 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_entry
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_entry, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_entry:
_c8f13:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8f17
_c8f18:
	leaq block_c8f10_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8f10
_c8f11:
	movq (%rbx),%rax
	jmp *(%rax)
_c8f17:
	leaq GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_entry, .-GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_entry


==================== Asm code ====================
2018-03-16 16:03:22.479034019 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_info
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_info, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.479772149 UTC

.section .text
.align 8
_c8f10:
_c8f10:
	leaq block_c8f16_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8f16
_c8f1a:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8f10, .-_c8f10


==================== Asm code ====================
2018-03-16 16:03:22.480387431 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f10_info:
	.quad	_c8f10
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.480982105 UTC

.section .text
.align 8
_c8f16:
_c8f16:
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Types.$w$ccompare_entry
	.size _c8f16, .-_c8f16


==================== Asm code ====================
2018-03-16 16:03:22.481603829 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f16_info:
	.quad	_c8f16
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.486007851 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$c<_closure
.type GHC.IO.Handle.Types.$w$c<_closure, @object
GHC.IO.Handle.Types.$w$c<_closure:
	.quad	GHC.IO.Handle.Types.$w$c<_info


==================== Asm code ====================
2018-03-16 16:03:22.486827489 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$w$c<_entry
.type GHC.IO.Handle.Types.$w$c<_entry, @object
GHC.IO.Handle.Types.$w$c<_entry:
_c8f1H:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8f1I
_c8f1J:
	leaq block_c8f1A_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rbx
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c8f1A
_c8f1B:
	movq (%rbx),%rax
	jmp *(%rax)
_c8f1I:
	leaq GHC.IO.Handle.Types.$w$c<_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$w$c<_entry, .-GHC.IO.Handle.Types.$w$c<_entry


==================== Asm code ====================
2018-03-16 16:03:22.487471653 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$c<_info
.type GHC.IO.Handle.Types.$w$c<_info, @object
GHC.IO.Handle.Types.$w$c<_info:
	.quad	GHC.IO.Handle.Types.$w$c<_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:03:22.488272282 UTC

.section .text
.align 8
_c8f1A:
_c8f1A:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8f1E
_c8f1F:
	leaq block_c8f21_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8f21
_c8f23:
	movq (%rbx),%rax
	jmp *(%rax)
_c8f1E:
	leaq block_c8f1M_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8f1M
_c8f1O:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8f1A, .-_c8f1A


==================== Asm code ====================
2018-03-16 16:03:22.488952652 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f1A_info:
	.quad	_c8f1A
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.48985363 UTC

.section .text
.align 8
_c8f1M:
_c8f1M:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8f2h
_c8f1Y:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u8f2h:
	addq $8,%rbp
	jmp _c8f2d
	.size _c8f1M, .-_c8f1M


==================== Asm code ====================
2018-03-16 16:03:22.490686981 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f1M_info:
	.quad	_c8f1M
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.491362651 UTC

.section .text
.align 8
_c8f21:
_c8f21:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8f29
_u8f2g:
	addq $8,%rbp
	jmp _c8f2d
_c8f29:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8f21, .-_c8f21


==================== Asm code ====================
2018-03-16 16:03:22.491961564 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f21_info:
	.quad	_c8f21
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.492526868 UTC

.section .text
.align 8
_c8f2d:
_c8f2d:
	movq 16(%rbp),%rsi
	movq (%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Types.$fOrdNewline_$c<_entry
	.size _c8f2d, .-_c8f2d


==================== Asm code ====================
2018-03-16 16:03:22.49578176 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_closure
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_closure, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_info


==================== Asm code ====================
2018-03-16 16:03:22.496456859 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_entry
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_entry, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_entry:
_c8f30:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8f34
_c8f35:
	leaq block_c8f2X_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8f2X
_c8f2Y:
	movq (%rbx),%rax
	jmp *(%rax)
_c8f34:
	leaq GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_entry, .-GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_entry


==================== Asm code ====================
2018-03-16 16:03:22.49706878 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_info
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_info, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.497990767 UTC

.section .text
.align 8
_c8f2X:
_c8f2X:
	leaq block_c8f33_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8f33
_c8f37:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8f2X, .-_c8f2X


==================== Asm code ====================
2018-03-16 16:03:22.498584308 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f2X_info:
	.quad	_c8f2X
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.499163251 UTC

.section .text
.align 8
_c8f33:
_c8f33:
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Types.$w$c<_entry
	.size _c8f33, .-_c8f33


==================== Asm code ====================
2018-03-16 16:03:22.499721012 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f33_info:
	.quad	_c8f33
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.50443627 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$c==_closure
.type GHC.IO.Handle.Types.$w$c==_closure, @object
GHC.IO.Handle.Types.$w$c==_closure:
	.quad	GHC.IO.Handle.Types.$w$c==_info


==================== Asm code ====================
2018-03-16 16:03:22.50518564 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$w$c==_entry
.type GHC.IO.Handle.Types.$w$c==_entry, @object
GHC.IO.Handle.Types.$w$c==_entry:
_c8f3E:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8f3F
_c8f3G:
	leaq block_c8f3x_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rbx
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c8f3x
_c8f3y:
	movq (%rbx),%rax
	jmp *(%rax)
_c8f3F:
	leaq GHC.IO.Handle.Types.$w$c==_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$w$c==_entry, .-GHC.IO.Handle.Types.$w$c==_entry


==================== Asm code ====================
2018-03-16 16:03:22.505873105 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$w$c==_info
.type GHC.IO.Handle.Types.$w$c==_info, @object
GHC.IO.Handle.Types.$w$c==_info:
	.quad	GHC.IO.Handle.Types.$w$c==_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:03:22.5068025 UTC

.section .text
.align 8
_c8f3x:
_c8f3x:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8f3B
_c8f3C:
	leaq block_c8f3Y_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8f3Y
_c8f40:
	movq (%rbx),%rax
	jmp *(%rax)
_c8f3B:
	leaq block_c8f3J_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8f3J
_c8f3L:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8f3x, .-_c8f3x


==================== Asm code ====================
2018-03-16 16:03:22.50739375 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f3x_info:
	.quad	_c8f3x
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.507966405 UTC

.section .text
.align 8
_c8f3J:
_c8f3J:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8f4f
_u8f4g:
	addq $32,%rbp
	jmp _c8f46
_u8f4f:
	addq $8,%rbp
	jmp _c8f4a
	.size _c8f3J, .-_c8f3J


==================== Asm code ====================
2018-03-16 16:03:22.508540103 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f3J_info:
	.quad	_c8f3J
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.50917091 UTC

.section .text
.align 8
_c8f3Y:
_c8f3Y:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8f4d
_u8f4e:
	addq $8,%rbp
	jmp _c8f4a
_u8f4d:
	addq $32,%rbp
	jmp _c8f46
	.size _c8f3Y, .-_c8f3Y


==================== Asm code ====================
2018-03-16 16:03:22.509762608 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f3Y_info:
	.quad	_c8f3Y
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.510369654 UTC

.section .text
.align 8
_c8f46:
_c8f46:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8f46, .-_c8f46


==================== Asm code ====================
2018-03-16 16:03:22.511007374 UTC

.section .text
.align 8
_c8f4a:
_c8f4a:
	movq 16(%rbp),%rsi
	movq (%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Types.$fEqNewline_$c==_entry
	.size _c8f4a, .-_c8f4a


==================== Asm code ====================
2018-03-16 16:03:22.51483946 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqNewlineMode_$c==_closure
.type GHC.IO.Handle.Types.$fEqNewlineMode_$c==_closure, @object
GHC.IO.Handle.Types.$fEqNewlineMode_$c==_closure:
	.quad	GHC.IO.Handle.Types.$fEqNewlineMode_$c==_info


==================== Asm code ====================
2018-03-16 16:03:22.51557029 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fEqNewlineMode_$c==_entry
.type GHC.IO.Handle.Types.$fEqNewlineMode_$c==_entry, @object
GHC.IO.Handle.Types.$fEqNewlineMode_$c==_entry:
_c8f51:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8f55
_c8f56:
	leaq block_c8f4Y_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8f4Y
_c8f4Z:
	movq (%rbx),%rax
	jmp *(%rax)
_c8f55:
	leaq GHC.IO.Handle.Types.$fEqNewlineMode_$c==_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fEqNewlineMode_$c==_entry, .-GHC.IO.Handle.Types.$fEqNewlineMode_$c==_entry


==================== Asm code ====================
2018-03-16 16:03:22.516237556 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqNewlineMode_$c==_info
.type GHC.IO.Handle.Types.$fEqNewlineMode_$c==_info, @object
GHC.IO.Handle.Types.$fEqNewlineMode_$c==_info:
	.quad	GHC.IO.Handle.Types.$fEqNewlineMode_$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.516907892 UTC

.section .text
.align 8
_c8f4Y:
_c8f4Y:
	leaq block_c8f54_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8f54
_c8f58:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8f4Y, .-_c8f4Y


==================== Asm code ====================
2018-03-16 16:03:22.517523693 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f4Y_info:
	.quad	_c8f4Y
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.518178769 UTC

.section .text
.align 8
_c8f54:
_c8f54:
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Types.$w$c==_entry
	.size _c8f54, .-_c8f54


==================== Asm code ====================
2018-03-16 16:03:22.518772174 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f54_info:
	.quad	_c8f54
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.52724986 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_closure
.type GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_closure, @object
GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_closure:
	.quad	GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_info


==================== Asm code ====================
2018-03-16 16:03:22.527953572 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_entry
.type GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_entry, @object
GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_entry:
_c8f5B:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8f5F
_c8f5G:
	leaq block_c8f5y_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8f5y
_c8f5z:
	movq (%rbx),%rax
	jmp *(%rax)
_c8f5F:
	leaq GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_entry, .-GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_entry


==================== Asm code ====================
2018-03-16 16:03:22.528596673 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_info
.type GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_info, @object
GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_info:
	.quad	GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.529549758 UTC

.section .text
.align 8
_c8f5y:
_c8f5y:
	leaq block_c8f5E_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8f5E
_c8f5I:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8f5y, .-_c8f5y


==================== Asm code ====================
2018-03-16 16:03:22.530152346 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f5y_info:
	.quad	_c8f5y
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.530836308 UTC

.section .text
.align 8
_c8f5E:
_c8f5E:
	leaq block_c8f5M_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8f5M
_c8f5O:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8f5E, .-_c8f5E


==================== Asm code ====================
2018-03-16 16:03:22.53143261 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f5E_info:
	.quad	_c8f5E
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.53212593 UTC

.section .text
.align 8
_c8f5M:
_c8f5M:
	movq 24(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8f5V
_c8f6L:
	leaq block_c8f6J_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8f6J
_c8f6M:
	movq (%rbx),%rax
	jmp *(%rax)
_c8f5V:
	leaq block_c8f5S_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8f5S
_c8f5W:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8f5M, .-_c8f5M


==================== Asm code ====================
2018-03-16 16:03:22.532767987 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f5M_info:
	.quad	_c8f5M
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.533471493 UTC

.section .text
.align 8
_c8f5S:
_c8f5S:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8f63
_u8f7L:
	addq $32,%rbp
	jmp _c8f7s
_c8f63:
	leaq block_c8f60_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _c8f60
_c8f64:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8f5S, .-_c8f5S


==================== Asm code ====================
2018-03-16 16:03:22.534109895 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f5S_info:
	.quad	_c8f5S
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.534868548 UTC

.section .text
.align 8
_c8f60:
_c8f60:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8f6b
_c8f6r:
	leaq block_c8f6p_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8f6p
_c8f6s:
	movq (%rbx),%rax
	jmp *(%rax)
_c8f6b:
	leaq block_c8f68_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8f68
_c8f6c:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8f60, .-_c8f60


==================== Asm code ====================
2018-03-16 16:03:22.535556365 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f60_info:
	.quad	_c8f60
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.53620138 UTC

.section .text
.align 8
_c8f68:
_c8f68:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8f7O
_u8f7P:
	addq $8,%rbp
	jmp _c8f7s
_u8f7O:
	addq $8,%rbp
	jmp _c8f7w
	.size _c8f68, .-_c8f68


==================== Asm code ====================
2018-03-16 16:03:22.536981 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f68_info:
	.quad	_c8f68
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.537621002 UTC

.section .text
.align 8
_c8f6p:
_c8f6p:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8f7M
_u8f7N:
	addq $8,%rbp
	jmp _c8f7w
_u8f7M:
	addq $8,%rbp
	jmp _c8f7s
	.size _c8f6p, .-_c8f6p


==================== Asm code ====================
2018-03-16 16:03:22.538187664 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f6p_info:
	.quad	_c8f6p
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.538838191 UTC

.section .text
.align 8
_c8f6J:
_c8f6J:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8f7G
_c8f6X:
	leaq block_c8f6V_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _c8f6V
_c8f6Y:
	movq (%rbx),%rax
	jmp *(%rax)
_u8f7G:
	addq $32,%rbp
	jmp _c8f7s
	.size _c8f6J, .-_c8f6J


==================== Asm code ====================
2018-03-16 16:03:22.539446406 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f6J_info:
	.quad	_c8f6J
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.540198148 UTC

.section .text
.align 8
_c8f6V:
_c8f6V:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8f75
_c8f7l:
	leaq block_c8f7j_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8f7j
_c8f7m:
	movq (%rbx),%rax
	jmp *(%rax)
_c8f75:
	leaq block_c8f72_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8f72
_c8f76:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8f6V, .-_c8f6V


==================== Asm code ====================
2018-03-16 16:03:22.540844033 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f6V_info:
	.quad	_c8f6V
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.541657569 UTC

.section .text
.align 8
_c8f72:
_c8f72:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8f7J
_u8f7K:
	addq $8,%rbp
	jmp _c8f7s
_u8f7J:
	addq $8,%rbp
	jmp _c8f7w
	.size _c8f72, .-_c8f72


==================== Asm code ====================
2018-03-16 16:03:22.54221566 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f72_info:
	.quad	_c8f72
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.542869661 UTC

.section .text
.align 8
_c8f7j:
_c8f7j:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8f7H
_u8f7I:
	addq $8,%rbp
	jmp _c8f7w
_u8f7H:
	addq $8,%rbp
	jmp _c8f7s
	.size _c8f7j, .-_c8f7j


==================== Asm code ====================
2018-03-16 16:03:22.54347575 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f7j_info:
	.quad	_c8f7j
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.544236673 UTC

.section .text
.align 8
_c8f7s:
_c8f7s:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8f7s, .-_c8f7s


==================== Asm code ====================
2018-03-16 16:03:22.54485204 UTC

.section .text
.align 8
_c8f7w:
_c8f7w:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8f7w, .-_c8f7w


==================== Asm code ====================
2018-03-16 16:03:22.547530465 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqNewlineMode_closure
.type GHC.IO.Handle.Types.$fEqNewlineMode_closure, @object
GHC.IO.Handle.Types.$fEqNewlineMode_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.IO.Handle.Types.$fEqNewlineMode_$c==_closure+2
	.quad	GHC.IO.Handle.Types.$fEqNewlineMode_$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:22.556561696 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_closure
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_closure, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_info


==================== Asm code ====================
2018-03-16 16:03:22.557323359 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_entry
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_entry, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_entry:
_c8f9H:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8f9L
_c8f9M:
	leaq block_c8f9E_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8f9E
_c8f9F:
	movq (%rbx),%rax
	jmp *(%rax)
_c8f9L:
	leaq GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_entry, .-GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_entry


==================== Asm code ====================
2018-03-16 16:03:22.558003951 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_info
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_info, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.5587525 UTC

.section .text
.align 8
_c8f9E:
_c8f9E:
	leaq block_c8f9K_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8f9K
_c8f9O:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8f9E, .-_c8f9E


==================== Asm code ====================
2018-03-16 16:03:22.559331034 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f9E_info:
	.quad	_c8f9E
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.560040228 UTC

.section .text
.align 8
_c8f9K:
_c8f9K:
	leaq block_c8f9S_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8f9S
_c8f9U:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8f9K, .-_c8f9K


==================== Asm code ====================
2018-03-16 16:03:22.560909736 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f9K_info:
	.quad	_c8f9K
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.561635667 UTC

.section .text
.align 8
_c8f9S:
_c8f9S:
	movq 24(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8fa1
_c8faL:
	leaq block_c8faJ_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8faJ
_c8faM:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fa1:
	leaq block_c8f9Y_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8f9Y
_c8fa2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8f9S, .-_c8f9S


==================== Asm code ====================
2018-03-16 16:03:22.562277719 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f9S_info:
	.quad	_c8f9S
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.562917681 UTC

.section .text
.align 8
_c8f9Y:
_c8f9Y:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8fa9
_u8fbB:
	addq $32,%rbp
	jmp _c8fbg
_c8fa9:
	leaq block_c8fa6_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _c8fa6
_c8faa:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8f9Y, .-_c8f9Y


==================== Asm code ====================
2018-03-16 16:03:22.563542721 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8f9Y_info:
	.quad	_c8f9Y
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.564295123 UTC

.section .text
.align 8
_c8fa6:
_c8fa6:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8fah
_c8fax:
	leaq block_c8fav_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8fav
_c8fay:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fah:
	leaq block_c8fae_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8fae
_c8fai:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fa6, .-_c8fa6


==================== Asm code ====================
2018-03-16 16:03:22.564980476 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fa6_info:
	.quad	_c8fa6
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.565853883 UTC

.section .text
.align 8
_c8fae:
_c8fae:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fbC
_u8fbD:
	addq $8,%rbp
	jmp _c8fbg
_u8fbC:
	addq $8,%rbp
	jmp _c8fbc
	.size _c8fae, .-_c8fae


==================== Asm code ====================
2018-03-16 16:03:22.566420771 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fae_info:
	.quad	_c8fae
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.567058883 UTC

.section .text
.align 8
_c8fav:
_c8fav:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fav, .-_c8fav


==================== Asm code ====================
2018-03-16 16:03:22.567673092 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fav_info:
	.quad	_c8fav
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.568574075 UTC

.section .text
.align 8
_c8faJ:
_c8faJ:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fby
_c8faX:
	leaq block_c8faV_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _c8faV
_c8faY:
	movq (%rbx),%rax
	jmp *(%rax)
_u8fby:
	addq $32,%rbp
	jmp _c8fbc
	.size _c8faJ, .-_c8faJ


==================== Asm code ====================
2018-03-16 16:03:22.569168468 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8faJ_info:
	.quad	_c8faJ
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.569909027 UTC

.section .text
.align 8
_c8faV:
_c8faV:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8fb5
_c8fbl:
	leaq block_c8fbj_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8fbj
_c8fbm:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fb5:
	leaq block_c8fb2_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8fb2
_c8fb6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8faV, .-_c8faV


==================== Asm code ====================
2018-03-16 16:03:22.570549654 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8faV_info:
	.quad	_c8faV
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.571179846 UTC

.section .text
.align 8
_c8fb2:
_c8fb2:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fbz
_u8fbA:
	addq $8,%rbp
	jmp _c8fbg
_u8fbz:
	addq $8,%rbp
	jmp _c8fbc
	.size _c8fb2, .-_c8fb2


==================== Asm code ====================
2018-03-16 16:03:22.571762169 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fb2_info:
	.quad	_c8fb2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.572393006 UTC

.section .text
.align 8
_c8fbc:
_c8fbc:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fbc, .-_c8fbc


==================== Asm code ====================
2018-03-16 16:03:22.573039966 UTC

.section .text
.align 8
_c8fbg:
_c8fbg:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fbg, .-_c8fbg


==================== Asm code ====================
2018-03-16 16:03:22.573727127 UTC

.section .text
.align 8
_c8fbj:
_c8fbj:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fbj, .-_c8fbj


==================== Asm code ====================
2018-03-16 16:03:22.574273211 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fbj_info:
	.quad	_c8fbj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.583018704 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_closure
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_closure, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_info


==================== Asm code ====================
2018-03-16 16:03:22.583763994 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_entry
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_entry, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_entry:
_c8fdq:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fdu
_c8fdv:
	leaq block_c8fdn_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8fdn
_c8fdo:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fdu:
	leaq GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_entry, .-GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_entry


==================== Asm code ====================
2018-03-16 16:03:22.584422919 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_info
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_info, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.585152267 UTC

.section .text
.align 8
_c8fdn:
_c8fdn:
	leaq block_c8fdt_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8fdt
_c8fdx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fdn, .-_c8fdn


==================== Asm code ====================
2018-03-16 16:03:22.586070731 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fdn_info:
	.quad	_c8fdn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.586769908 UTC

.section .text
.align 8
_c8fdt:
_c8fdt:
	leaq block_c8fdB_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 16(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8fdB
_c8fdD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fdt, .-_c8fdt


==================== Asm code ====================
2018-03-16 16:03:22.587446762 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fdt_info:
	.quad	_c8fdt
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.588244679 UTC

.section .text
.align 8
_c8fdB:
_c8fdB:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8fdK
_c8feu:
	leaq block_c8fes_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8fes
_c8fev:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fdK:
	leaq block_c8fdH_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8fdH
_c8fdL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fdB, .-_c8fdB


==================== Asm code ====================
2018-03-16 16:03:22.588886285 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fdB_info:
	.quad	_c8fdB
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.589631443 UTC

.section .text
.align 8
_c8fdH:
_c8fdH:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8fdS
_u8ffk:
	addq $32,%rbp
	jmp _c8feZ
_c8fdS:
	leaq block_c8fdP_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rbx
	testb $7,%bl
	jne _c8fdP
_c8fdT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fdH, .-_c8fdH


==================== Asm code ====================
2018-03-16 16:03:22.590559498 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fdH_info:
	.quad	_c8fdH
	.quad	133
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.591342176 UTC

.section .text
.align 8
_c8fdP:
_c8fdP:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8fe0
_c8feg:
	leaq block_c8fee_info(%rip),%rbx
	movq %rbx,32(%rbp)
	movq %rax,%rbx
	addq $32,%rbp
	testb $7,%bl
	jne _c8fee
_c8feh:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fe0:
	leaq block_c8fdX_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8fdX
_c8fe1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fdP, .-_c8fdP


==================== Asm code ====================
2018-03-16 16:03:22.59198976 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fdP_info:
	.quad	_c8fdP
	.quad	389
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.592595176 UTC

.section .text
.align 8
_c8fdX:
_c8fdX:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8ffl
_u8ffm:
	addq $8,%rbp
	jmp _c8feZ
_u8ffl:
	addq $16,%rbp
	jmp _c8feV
	.size _c8fdX, .-_c8fdX


==================== Asm code ====================
2018-03-16 16:03:22.593115796 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fdX_info:
	.quad	_c8fdX
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.593769421 UTC

.section .text
.align 8
_c8fee:
_c8fee:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fee, .-_c8fee


==================== Asm code ====================
2018-03-16 16:03:22.594357287 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fee_info:
	.quad	_c8fee
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.595067827 UTC

.section .text
.align 8
_c8fes:
_c8fes:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8ffh
_c8feG:
	leaq block_c8feE_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rbx
	testb $7,%bl
	jne _c8feE
_c8feH:
	movq (%rbx),%rax
	jmp *(%rax)
_u8ffh:
	addq $40,%rbp
	jmp _c8feV
	.size _c8fes, .-_c8fes


==================== Asm code ====================
2018-03-16 16:03:22.595680755 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fes_info:
	.quad	_c8fes
	.quad	133
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.596419909 UTC

.section .text
.align 8
_c8feE:
_c8feE:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8feO
_c8ff4:
	leaq block_c8ff2_info(%rip),%rbx
	movq %rbx,32(%rbp)
	movq %rax,%rbx
	addq $32,%rbp
	testb $7,%bl
	jne _c8ff2
_c8ff5:
	movq (%rbx),%rax
	jmp *(%rax)
_c8feO:
	leaq block_c8feL_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8feL
_c8feP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8feE, .-_c8feE


==================== Asm code ====================
2018-03-16 16:03:22.597086023 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8feE_info:
	.quad	_c8feE
	.quad	389
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.598019916 UTC

.section .text
.align 8
_c8feL:
_c8feL:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8ffi
_u8ffj:
	addq $8,%rbp
	jmp _c8feZ
_u8ffi:
	addq $16,%rbp
	jmp _c8feV
	.size _c8feL, .-_c8feL


==================== Asm code ====================
2018-03-16 16:03:22.598555772 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8feL_info:
	.quad	_c8feL
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.599163843 UTC

.section .text
.align 8
_c8feV:
_c8feV:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8feV, .-_c8feV


==================== Asm code ====================
2018-03-16 16:03:22.599801116 UTC

.section .text
.align 8
_c8feZ:
_c8feZ:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8feZ, .-_c8feZ


==================== Asm code ====================
2018-03-16 16:03:22.600433476 UTC

.section .text
.align 8
_c8ff2:
_c8ff2:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ff2, .-_c8ff2


==================== Asm code ====================
2018-03-16 16:03:22.600994688 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ff2_info:
	.quad	_c8ff2
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.609097795 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_closure
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_closure, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_info


==================== Asm code ====================
2018-03-16 16:03:22.610086892 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_entry
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_entry, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_entry:
_c8fh9:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fhd
_c8fhe:
	leaq block_c8fh6_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8fh6
_c8fh7:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fhd:
	leaq GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_entry, .-GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_entry


==================== Asm code ====================
2018-03-16 16:03:22.610790241 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_info
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_info, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.61151291 UTC

.section .text
.align 8
_c8fh6:
_c8fh6:
	leaq block_c8fhc_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8fhc
_c8fhg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fh6, .-_c8fh6


==================== Asm code ====================
2018-03-16 16:03:22.612146717 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fh6_info:
	.quad	_c8fh6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.613083451 UTC

.section .text
.align 8
_c8fhc:
_c8fhc:
	leaq block_c8fhk_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8fhk
_c8fhm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fhc, .-_c8fhc


==================== Asm code ====================
2018-03-16 16:03:22.613735449 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fhc_info:
	.quad	_c8fhc
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.614479985 UTC

.section .text
.align 8
_c8fhk:
_c8fhk:
	movq 24(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8fht
_c8fid:
	leaq block_c8fib_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8fib
_c8fie:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fht:
	leaq block_c8fhq_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8fhq
_c8fhu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fhk, .-_c8fhk


==================== Asm code ====================
2018-03-16 16:03:22.615146475 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fhk_info:
	.quad	_c8fhk
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.615820681 UTC

.section .text
.align 8
_c8fhq:
_c8fhq:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8fhB
_u8fj3:
	addq $32,%rbp
	jmp _c8fiI
_c8fhB:
	leaq block_c8fhy_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _c8fhy
_c8fhC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fhq, .-_c8fhq


==================== Asm code ====================
2018-03-16 16:03:22.616420937 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fhq_info:
	.quad	_c8fhq
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.617180594 UTC

.section .text
.align 8
_c8fhy:
_c8fhy:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8fhJ
_c8fhZ:
	leaq block_c8fhX_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8fhX
_c8fi0:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fhJ:
	leaq block_c8fhG_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8fhG
_c8fhK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fhy, .-_c8fhy


==================== Asm code ====================
2018-03-16 16:03:22.617874213 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fhy_info:
	.quad	_c8fhy
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.61852211 UTC

.section .text
.align 8
_c8fhG:
_c8fhG:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fj4
_u8fj5:
	addq $8,%rbp
	jmp _c8fiI
_u8fj4:
	addq $8,%rbp
	jmp _c8fiE
	.size _c8fhG, .-_c8fhG


==================== Asm code ====================
2018-03-16 16:03:22.619098485 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fhG_info:
	.quad	_c8fhG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.619883167 UTC

.section .text
.align 8
_c8fhX:
_c8fhX:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fhX, .-_c8fhX


==================== Asm code ====================
2018-03-16 16:03:22.620465665 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fhX_info:
	.quad	_c8fhX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.621171305 UTC

.section .text
.align 8
_c8fib:
_c8fib:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fj0
_c8fip:
	leaq block_c8fin_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _c8fin
_c8fiq:
	movq (%rbx),%rax
	jmp *(%rax)
_u8fj0:
	addq $32,%rbp
	jmp _c8fiE
	.size _c8fib, .-_c8fib


==================== Asm code ====================
2018-03-16 16:03:22.621813983 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fib_info:
	.quad	_c8fib
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.622609187 UTC

.section .text
.align 8
_c8fin:
_c8fin:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8fix
_c8fiN:
	leaq block_c8fiL_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8fiL
_c8fiO:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fix:
	leaq block_c8fiu_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8fiu
_c8fiy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fin, .-_c8fin


==================== Asm code ====================
2018-03-16 16:03:22.623244521 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fin_info:
	.quad	_c8fin
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.623903291 UTC

.section .text
.align 8
_c8fiu:
_c8fiu:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fj1
_u8fj2:
	addq $8,%rbp
	jmp _c8fiI
_u8fj1:
	addq $8,%rbp
	jmp _c8fiE
	.size _c8fiu, .-_c8fiu


==================== Asm code ====================
2018-03-16 16:03:22.624530138 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fiu_info:
	.quad	_c8fiu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.625193575 UTC

.section .text
.align 8
_c8fiE:
_c8fiE:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fiE, .-_c8fiE


==================== Asm code ====================
2018-03-16 16:03:22.62589156 UTC

.section .text
.align 8
_c8fiI:
_c8fiI:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fiI, .-_c8fiI


==================== Asm code ====================
2018-03-16 16:03:22.626592224 UTC

.section .text
.align 8
_c8fiL:
_c8fiL:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fiL, .-_c8fiL


==================== Asm code ====================
2018-03-16 16:03:22.627432349 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fiL_info:
	.quad	_c8fiL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.629731883 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_closure
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_closure, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_info


==================== Asm code ====================
2018-03-16 16:03:22.630414615 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_entry
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_entry, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_entry:
_c8fkP:
	movq %rsi,%rax
	movq %r14,%rsi
	movq %rax,%r14
	jmp GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_entry
	.size GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_entry, .-GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_entry


==================== Asm code ====================
2018-03-16 16:03:22.630979634 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_info
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_info, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.639622134 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_closure
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_closure, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_closure:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_info


==================== Asm code ====================
2018-03-16 16:03:22.640462259 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_entry
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_entry, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_entry:
_c8fl3:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fl7
_c8fl8:
	leaq block_c8fl0_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8fl0
_c8fl1:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fl7:
	leaq GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_entry, .-GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_entry


==================== Asm code ====================
2018-03-16 16:03:22.641145389 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_info
.type GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_info, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_info:
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.641946573 UTC

.section .text
.align 8
_c8fl0:
_c8fl0:
	leaq block_c8fl6_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8fl6
_c8fla:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fl0, .-_c8fl0


==================== Asm code ====================
2018-03-16 16:03:22.642900607 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fl0_info:
	.quad	_c8fl0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.643603071 UTC

.section .text
.align 8
_c8fl6:
_c8fl6:
	leaq block_c8fle_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rbx,%rdx
	movq 16(%rbp),%rbx
	movq %rdx,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8fle
_c8flg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fl6, .-_c8fl6


==================== Asm code ====================
2018-03-16 16:03:22.644246905 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fl6_info:
	.quad	_c8fl6
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.64504798 UTC

.section .text
.align 8
_c8fle:
_c8fle:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8fln
_c8fm7:
	leaq block_c8fm5_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8fm5
_c8fm8:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fln:
	leaq block_c8flk_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8flk
_c8flo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fle, .-_c8fle


==================== Asm code ====================
2018-03-16 16:03:22.645734398 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fle_info:
	.quad	_c8fle
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.646507886 UTC

.section .text
.align 8
_c8flk:
_c8flk:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8flv
_u8fmX:
	addq $40,%rbp
	jmp _c8fmC
_c8flv:
	leaq block_c8fls_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rbx
	testb $7,%bl
	jne _c8fls
_c8flw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8flk, .-_c8flk


==================== Asm code ====================
2018-03-16 16:03:22.647142536 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8flk_info:
	.quad	_c8flk
	.quad	133
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.64790532 UTC

.section .text
.align 8
_c8fls:
_c8fls:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8flD
_c8flT:
	leaq block_c8flR_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8flR
_c8flU:
	movq (%rbx),%rax
	jmp *(%rax)
_c8flD:
	leaq block_c8flA_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8flA
_c8flE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fls, .-_c8fls


==================== Asm code ====================
2018-03-16 16:03:22.648559077 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fls_info:
	.quad	_c8fls
	.quad	389
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.649231224 UTC

.section .text
.align 8
_c8flA:
_c8flA:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fmY
_u8fmZ:
	addq $16,%rbp
	jmp _c8fmC
_u8fmY:
	addq $8,%rbp
	jmp _c8fmy
	.size _c8flA, .-_c8flA


==================== Asm code ====================
2018-03-16 16:03:22.650074037 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8flA_info:
	.quad	_c8flA
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.650733929 UTC

.section .text
.align 8
_c8flR:
_c8flR:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8flR, .-_c8flR


==================== Asm code ====================
2018-03-16 16:03:22.651295263 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8flR_info:
	.quad	_c8flR
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.652007012 UTC

.section .text
.align 8
_c8fm5:
_c8fm5:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fmU
_c8fmj:
	leaq block_c8fmh_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rbx
	testb $7,%bl
	jne _c8fmh
_c8fmk:
	movq (%rbx),%rax
	jmp *(%rax)
_u8fmU:
	addq $32,%rbp
	jmp _c8fmy
	.size _c8fm5, .-_c8fm5


==================== Asm code ====================
2018-03-16 16:03:22.652627105 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fm5_info:
	.quad	_c8fm5
	.quad	133
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.653392845 UTC

.section .text
.align 8
_c8fmh:
_c8fmh:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _c8fmr
_c8fmH:
	leaq block_c8fmF_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8fmF
_c8fmI:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fmr:
	leaq block_c8fmo_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c8fmo
_c8fms:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fmh, .-_c8fmh


==================== Asm code ====================
2018-03-16 16:03:22.654094489 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fmh_info:
	.quad	_c8fmh
	.quad	389
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.654764277 UTC

.section .text
.align 8
_c8fmo:
_c8fmo:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fmV
_u8fmW:
	addq $16,%rbp
	jmp _c8fmC
_u8fmV:
	addq $8,%rbp
	jmp _c8fmy
	.size _c8fmo, .-_c8fmo


==================== Asm code ====================
2018-03-16 16:03:22.655355921 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fmo_info:
	.quad	_c8fmo
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.656001953 UTC

.section .text
.align 8
_c8fmy:
_c8fmy:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fmy, .-_c8fmy


==================== Asm code ====================
2018-03-16 16:03:22.656832686 UTC

.section .text
.align 8
_c8fmC:
_c8fmC:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fmC, .-_c8fmC


==================== Asm code ====================
2018-03-16 16:03:22.657498607 UTC

.section .text
.align 8
_c8fmF:
_c8fmF:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fmF, .-_c8fmF


==================== Asm code ====================
2018-03-16 16:03:22.658035093 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fmF_info:
	.quad	_c8fmF
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.65985137 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdNewlineMode_closure
.type GHC.IO.Handle.Types.$fOrdNewlineMode_closure, @object
GHC.IO.Handle.Types.$fOrdNewlineMode_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.IO.Handle.Types.$fEqNewlineMode_closure+1
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$ccompare_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c<_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c<=_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c>_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$c>=_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$cmax_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdNewlineMode_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:22.661787473 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode13_bytes
.type GHC.IO.Handle.Types.$fReadBufferMode13_bytes, @object
GHC.IO.Handle.Types.$fReadBufferMode13_bytes:
	.asciz "NoBuffering"


==================== Asm code ====================
2018-03-16 16:03:22.664539581 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode12_closure
.type GHC.IO.Handle.Types.$fReadBufferMode12_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode12_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode12_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.665367094 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode12_entry
.type GHC.IO.Handle.Types.$fReadBufferMode12_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode12_entry:
_c8foN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8foO
_c8foP:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8foM
_c8foL:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fReadBufferMode13_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8foO:
	jmp *-16(%r13)
_c8foM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadBufferMode12_entry, .-GHC.IO.Handle.Types.$fReadBufferMode12_entry


==================== Asm code ====================
2018-03-16 16:03:22.666066602 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode12_info
.type GHC.IO.Handle.Types.$fReadBufferMode12_info, @object
GHC.IO.Handle.Types.$fReadBufferMode12_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode12_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:22.668018097 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode6_closure
.type GHC.IO.Handle.Types.$fShowBufferMode6_closure, @object
GHC.IO.Handle.Types.$fShowBufferMode6_closure:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode6_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.668676954 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowBufferMode6_entry
.type GHC.IO.Handle.Types.$fShowBufferMode6_entry, @object
GHC.IO.Handle.Types.$fShowBufferMode6_entry:
_c8fp2:
	movq %r14,%rsi
	leaq GHC.IO.Handle.Types.$fReadBufferMode12_closure(%rip),%r14
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
	.size GHC.IO.Handle.Types.$fShowBufferMode6_entry, .-GHC.IO.Handle.Types.$fShowBufferMode6_entry


==================== Asm code ====================
2018-03-16 16:03:22.669277718 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode6_info
.type GHC.IO.Handle.Types.$fShowBufferMode6_info, @object
GHC.IO.Handle.Types.$fShowBufferMode6_info:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode6_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S8evg_srt+336


==================== Asm code ====================
2018-03-16 16:03:22.670912812 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode9_bytes
.type GHC.IO.Handle.Types.$fReadBufferMode9_bytes, @object
GHC.IO.Handle.Types.$fReadBufferMode9_bytes:
	.asciz "LineBuffering"


==================== Asm code ====================
2018-03-16 16:03:22.673542179 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode8_closure
.type GHC.IO.Handle.Types.$fReadBufferMode8_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode8_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.674342294 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode8_entry
.type GHC.IO.Handle.Types.$fReadBufferMode8_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode8_entry:
_c8fpg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fph
_c8fpi:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8fpf
_c8fpe:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fReadBufferMode9_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8fph:
	jmp *-16(%r13)
_c8fpf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadBufferMode8_entry, .-GHC.IO.Handle.Types.$fReadBufferMode8_entry


==================== Asm code ====================
2018-03-16 16:03:22.675009032 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode8_info
.type GHC.IO.Handle.Types.$fReadBufferMode8_info, @object
GHC.IO.Handle.Types.$fReadBufferMode8_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode8_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:22.677063727 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode5_closure
.type GHC.IO.Handle.Types.$fShowBufferMode5_closure, @object
GHC.IO.Handle.Types.$fShowBufferMode5_closure:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode5_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.679074294 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowBufferMode5_entry
.type GHC.IO.Handle.Types.$fShowBufferMode5_entry, @object
GHC.IO.Handle.Types.$fShowBufferMode5_entry:
_c8fpv:
	movq %r14,%rsi
	leaq GHC.IO.Handle.Types.$fReadBufferMode8_closure(%rip),%r14
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
	.size GHC.IO.Handle.Types.$fShowBufferMode5_entry, .-GHC.IO.Handle.Types.$fShowBufferMode5_entry


==================== Asm code ====================
2018-03-16 16:03:22.679928404 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode5_info
.type GHC.IO.Handle.Types.$fShowBufferMode5_info, @object
GHC.IO.Handle.Types.$fShowBufferMode5_info:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode5_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S8evg_srt+344


==================== Asm code ====================
2018-03-16 16:03:22.681640595 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode4_bytes
.type GHC.IO.Handle.Types.$fShowBufferMode4_bytes, @object
GHC.IO.Handle.Types.$fShowBufferMode4_bytes:
	.asciz "BlockBuffering "


==================== Asm code ====================
2018-03-16 16:03:22.684118103 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode3_closure
.type GHC.IO.Handle.Types.$fShowBufferMode3_closure, @object
GHC.IO.Handle.Types.$fShowBufferMode3_closure:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.684943638 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowBufferMode3_entry
.type GHC.IO.Handle.Types.$fShowBufferMode3_entry, @object
GHC.IO.Handle.Types.$fShowBufferMode3_entry:
_c8fpJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fpK
_c8fpL:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8fpI
_c8fpH:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fShowBufferMode4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8fpK:
	jmp *-16(%r13)
_c8fpI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fShowBufferMode3_entry, .-GHC.IO.Handle.Types.$fShowBufferMode3_entry


==================== Asm code ====================
2018-03-16 16:03:22.685703708 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode3_info
.type GHC.IO.Handle.Types.$fShowBufferMode3_info, @object
GHC.IO.Handle.Types.$fShowBufferMode3_info:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:22.694333333 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_closure
.type GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_closure, @object
GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_closure:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.695074807 UTC

.section .text
.align 8
g_s8ejP_entry:
_c8fqe:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fqf
_c8fqg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rdi
	leaq GHC.IO.Handle.Types.$fReadBufferMode_n_closure+1(%rip),%rsi
	movq GHC.Show.$fShowInt_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Show.$fShowMaybe_$cshowsPrec_entry@gotpcrel(%rip)
_c8fqf:
	jmp *-16(%r13)
	.size g_s8ejP_entry, .-g_s8ejP_entry


==================== Asm code ====================
2018-03-16 16:03:22.696011129 UTC

.section .data.rel.ro
.align 8
.align 1
g_s8ejP_info:
	.quad	g_s8ejP_entry
	.quad	1
	.quad	4294967312
	.quad	S8evg_srt+352


==================== Asm code ====================
2018-03-16 16:03:22.696631395 UTC

.section .text
.align 8
sat_s8ejS_entry:
_c8fqt:
	movq 24(%rbx),%r14
	movq 16(%rbx),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size sat_s8ejS_entry, .-sat_s8ejS_entry


==================== Asm code ====================
2018-03-16 16:03:22.69714128 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ejS_info:
	.quad	sat_s8ejS_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:03:22.697817567 UTC

.section .text
.align 8
sat_s8ejT_entry:
_c8fqw:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8fqA
_c8fqz:
	movq 7(%rbx),%rax
	leaq sat_s8ejS_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -24(%r12),%rsi
	leaq GHC.IO.Handle.Types.$fShowBufferMode3_closure(%rip),%r14
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c8fqA:
	movq $32,904(%r13)
	jmp *-8(%r13)
	.size sat_s8ejT_entry, .-sat_s8ejT_entry


==================== Asm code ====================
2018-03-16 16:03:22.698448621 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ejT_info:
	.quad	sat_s8ejT_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S8evg_srt+360


==================== Asm code ====================
2018-03-16 16:03:22.699180247 UTC

.section .text
.align 8
sat_s8ejW_entry:
_c8fqQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8fqU
_c8fqT:
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq GHC.Show.$fShow(,)2_closure@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%r14
	movq %rax,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c8fqU:
	movq $24,904(%r13)
	jmp *-16(%r13)
	.size sat_s8ejW_entry, .-sat_s8ejW_entry


==================== Asm code ====================
2018-03-16 16:03:22.699814118 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ejW_info:
	.quad	sat_s8ejW_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:03:22.700541231 UTC

.section .text
.align 8
sat_s8ejX_entry:
_c8fqV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fqW
_c8fqX:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8fqZ
_c8fqY:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s8ejW_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	leaq GHC.IO.Handle.Types.$fShowBufferMode3_closure(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c8fqZ:
	movq $32,904(%r13)
_c8fqW:
	jmp *-16(%r13)
	.size sat_s8ejX_entry, .-sat_s8ejX_entry


==================== Asm code ====================
2018-03-16 16:03:22.70143142 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ejX_info:
	.quad	sat_s8ejX_entry
	.quad	2
	.quad	4294967314
	.quad	S8evg_srt+360


==================== Asm code ====================
2018-03-16 16:03:22.702142599 UTC

.section .text
.align 8
sat_s8ejY_entry:
_c8fr1:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c8fr5
_c8fr4:
	movq 7(%rbx),%rax
	leaq sat_s8ejX_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Show.$fShow(,)4_closure@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8fr5:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_s8ejY_entry, .-sat_s8ejY_entry


==================== Asm code ====================
2018-03-16 16:03:22.702798106 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ejY_info:
	.quad	sat_s8ejY_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S8evg_srt+360


==================== Asm code ====================
2018-03-16 16:03:22.703796655 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_entry
.type GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_entry, @object
GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_entry:
_c8frb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8frc
_c8frd:
	leaq block_c8fpY_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8fpY
_c8fpZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c8frc:
	leaq GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_entry, .-GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:03:22.704457412 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_info
.type GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_info, @object
GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_info:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_entry
	.quad	0
	.quad	133143986190
	.quad	8589934607
	.quad	S8evg_srt+352


==================== Asm code ====================
2018-03-16 16:03:22.705275147 UTC

.section .text
.align 8
_c8fpY:
_c8fpY:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u8frp
_c8fr9:
	leaq block_c8fq5_info(%rip),%rax
	movq %rax,(%rbp)
	movq 5(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8fq5
_c8fq6:
	movq (%rbx),%rax
	jmp *(%rax)
_u8frp:
	cmpq $2,%rax
	jb _c8fr7
_c8fr8:
	leaq GHC.IO.Handle.Types.$fShowBufferMode5_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8fr7:
	leaq GHC.IO.Handle.Types.$fShowBufferMode6_closure+1(%rip),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fpY, .-_c8fpY


==================== Asm code ====================
2018-03-16 16:03:22.705945315 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fpY_info:
	.quad	_c8fpY
	.quad	1
	.quad	115964117022
	.quad	S8evg_srt+352


==================== Asm code ====================
2018-03-16 16:03:22.706726563 UTC

.section .text
.align 8
_c8fq5:
_c8fq5:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8frl
_c8frk:
	movq 7(%rbx),%rax
	leaq g_s8ejP_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	leaq -32(%r12),%rbx
	cmpq $11,%rax
	jl _c8frn
_c8fro:
	leaq sat_s8ejY_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8frn:
	leaq sat_s8ejT_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8frl:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8fq5, .-_c8fq5


==================== Asm code ====================
2018-03-16 16:03:22.707429979 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fq5_info:
	.quad	_c8fq5
	.quad	1
	.quad	12884901918
	.quad	S8evg_srt+352


==================== Asm code ====================
2018-03-16 16:03:22.709224318 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode7_closure
.type GHC.IO.Handle.Types.$fShowBufferMode7_closure, @object
GHC.IO.Handle.Types.$fShowBufferMode7_closure:
	.quad	:_con_info
	.quad	GHC.Show.$fShow(,)2_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:22.716289811 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode_$cshow_closure
.type GHC.IO.Handle.Types.$fShowBufferMode_$cshow_closure, @object
GHC.IO.Handle.Types.$fShowBufferMode_$cshow_closure:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.71708738 UTC

.section .text
.align 8
sat_s8ek9_entry:
_c8fsS:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fsY
_c8fsZ:
	leaq block_c8fsP_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8fsP
_c8fsQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fsY:
	jmp *-16(%r13)
	.size sat_s8ek9_entry, .-sat_s8ek9_entry


==================== Asm code ====================
2018-03-16 16:03:22.718232384 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ek9_info:
	.quad	sat_s8ek9_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:03:22.718813683 UTC

.section .text
.align 8
_c8fsP:
_c8fsP:
	leaq block_c8fsV_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.IO.Handle.Types.$fShowBufferMode7_closure+2(%rip),%rdi
	movq 7(%rbx),%rsi
	movl $11,%r14d
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _c8fsP, .-_c8fsP


==================== Asm code ====================
2018-03-16 16:03:22.71944416 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fsP_info:
	.quad	_c8fsP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.72011651 UTC

.section .text
.align 8
_c8fsV:
_c8fsV:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8ft3
_c8ft2:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ft3:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c8fsV, .-_c8fsV


==================== Asm code ====================
2018-03-16 16:03:22.720758174 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fsV_info:
	.quad	_c8fsV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.721614911 UTC

.section .text
.align 8
sat_s8eka_entry:
_c8ft5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ft6
_c8ft7:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8ft9
_c8ft8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq sat_s8ek9_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	movq GHC.Show.$fShowMaybe1_closure@gotpcrel(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c8ft9:
	movq $24,904(%r13)
_c8ft6:
	jmp *-16(%r13)
	.size sat_s8eka_entry, .-sat_s8eka_entry


==================== Asm code ====================
2018-03-16 16:03:22.722345664 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8eka_info:
	.quad	sat_s8eka_entry
	.quad	1
	.quad	4294967312
	.quad	S8evg_srt+392


==================== Asm code ====================
2018-03-16 16:03:22.723069057 UTC

.section .text
.align 8
sat_s8ekb_entry:
_c8fte:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ftf
_c8ftg:
	leaq block_c8fsB_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8fsB
_c8fsC:
	movq (%rbx),%rax
	jmp *(%rax)
_c8ftf:
	jmp *-16(%r13)
	.size sat_s8ekb_entry, .-sat_s8ekb_entry


==================== Asm code ====================
2018-03-16 16:03:22.723722856 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ekb_info:
	.quad	sat_s8ekb_entry
	.quad	1
	.quad	12884901904
	.quad	S8evg_srt+392


==================== Asm code ====================
2018-03-16 16:03:22.724555747 UTC

.section .text
.align 8
_c8fsB:
_c8fsB:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8ftb
_c8ftc:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c8ftm
_c8ftl:
	movq 6(%rbx),%rax
	leaq sat_s8eka_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Show.$fShow(,)4_closure@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ftm:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8ftb:
	movq GHC.Show.$fShowMaybe4_closure@gotpcrel(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fsB, .-_c8fsB


==================== Asm code ====================
2018-03-16 16:03:22.725551183 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fsB_info:
	.quad	_c8fsB
	.quad	0
	.quad	12884901918
	.quad	S8evg_srt+392


==================== Asm code ====================
2018-03-16 16:03:22.726304285 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowBufferMode_$cshow_entry
.type GHC.IO.Handle.Types.$fShowBufferMode_$cshow_entry, @object
GHC.IO.Handle.Types.$fShowBufferMode_$cshow_entry:
_c8ftt:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ftu
_c8ftv:
	leaq block_c8fsq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8fsq
_c8fsr:
	movq (%rbx),%rax
	jmp *(%rax)
_c8ftu:
	leaq GHC.IO.Handle.Types.$fShowBufferMode_$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowBufferMode_$cshow_entry, .-GHC.IO.Handle.Types.$fShowBufferMode_$cshow_entry


==================== Asm code ====================
2018-03-16 16:03:22.726932674 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode_$cshow_info
.type GHC.IO.Handle.Types.$fShowBufferMode_$cshow_info, @object
GHC.IO.Handle.Types.$fShowBufferMode_$cshow_info:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshow_entry
	.quad	0
	.quad	3895535337486
	.quad	4294967301
	.quad	S8evg_srt+336


==================== Asm code ====================
2018-03-16 16:03:22.727737125 UTC

.section .text
.align 8
_c8fsq:
_c8fsq:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _u8ftD
_c8ftr:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8ftC
_c8ftB:
	movq 5(%rbx),%rax
	leaq sat_s8ekb_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	leaq GHC.IO.Handle.Types.$fShowBufferMode3_closure(%rip),%r14
	addq $8,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c8ftC:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_u8ftD:
	cmpq $2,%rax
	jb _c8ftp
_c8ftq:
	leaq GHC.IO.Handle.Types.$fReadBufferMode8_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8ftp:
	leaq GHC.IO.Handle.Types.$fReadBufferMode12_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fsq, .-_c8fsq


==================== Asm code ====================
2018-03-16 16:03:22.728412463 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fsq_info:
	.quad	_c8fsq
	.quad	0
	.quad	1696512081950
	.quad	S8evg_srt+336


==================== Asm code ====================
2018-03-16 16:03:22.730568093 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode1_closure
.type GHC.IO.Handle.Types.$fShowBufferMode1_closure, @object
GHC.IO.Handle.Types.$fShowBufferMode1_closure:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.731239081 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowBufferMode1_entry
.type GHC.IO.Handle.Types.$fShowBufferMode1_entry, @object
GHC.IO.Handle.Types.$fShowBufferMode1_entry:
_c8fuz:
	movq %r14,%rsi
	leaq GHC.IO.Handle.Types.$fShowBufferMode2_closure+1(%rip),%r14
	jmp GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_entry
	.size GHC.IO.Handle.Types.$fShowBufferMode1_entry, .-GHC.IO.Handle.Types.$fShowBufferMode1_entry


==================== Asm code ====================
2018-03-16 16:03:22.731848471 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode1_info
.type GHC.IO.Handle.Types.$fShowBufferMode1_info, @object
GHC.IO.Handle.Types.$fShowBufferMode1_info:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S8evg_srt+368


==================== Asm code ====================
2018-03-16 16:03:22.734167202 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_closure
.type GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_closure, @object
GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_closure:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.734809463 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_entry
.type GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_entry, @object
GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_entry:
_c8fuK:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.IO.Handle.Types.$fShowBufferMode1_closure+1(%rip),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
	.size GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_entry, .-GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:03:22.735423602 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_info
.type GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_info, @object
GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_info:
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S8evg_srt+416


==================== Asm code ====================
2018-03-16 16:03:22.737158644 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowBufferMode_closure
.type GHC.IO.Handle.Types.$fShowBufferMode_closure, @object
GHC.IO.Handle.Types.$fShowBufferMode_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_closure+2
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshow_closure+1
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.739448089 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode11_closure
.type GHC.IO.Handle.Types.$fReadBufferMode11_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode11_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode11_info


==================== Asm code ====================
2018-03-16 16:03:22.740096204 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode11_entry
.type GHC.IO.Handle.Types.$fReadBufferMode11_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode11_entry:
_c8fuW:
	leaq GHC.IO.Handle.Types.NoBuffering_closure+1(%rip),%r14
	movq %rsi,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size GHC.IO.Handle.Types.$fReadBufferMode11_entry, .-GHC.IO.Handle.Types.$fReadBufferMode11_entry


==================== Asm code ====================
2018-03-16 16:03:22.740717415 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode11_info
.type GHC.IO.Handle.Types.$fReadBufferMode11_info, @object
GHC.IO.Handle.Types.$fReadBufferMode11_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode11_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.742649494 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode10_closure
.type GHC.IO.Handle.Types.$fReadBufferMode10_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode10_closure:
	.quad	(,)_con_info
	.quad	GHC.IO.Handle.Types.$fReadBufferMode12_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode11_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.744747545 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode7_closure
.type GHC.IO.Handle.Types.$fReadBufferMode7_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode7_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode7_info


==================== Asm code ====================
2018-03-16 16:03:22.745428416 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode7_entry
.type GHC.IO.Handle.Types.$fReadBufferMode7_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode7_entry:
_c8fv8:
	leaq GHC.IO.Handle.Types.LineBuffering_closure+2(%rip),%r14
	movq %rsi,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size GHC.IO.Handle.Types.$fReadBufferMode7_entry, .-GHC.IO.Handle.Types.$fReadBufferMode7_entry


==================== Asm code ====================
2018-03-16 16:03:22.746193134 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode7_info
.type GHC.IO.Handle.Types.$fReadBufferMode7_info, @object
GHC.IO.Handle.Types.$fReadBufferMode7_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode7_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.747865684 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode6_closure
.type GHC.IO.Handle.Types.$fReadBufferMode6_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode6_closure:
	.quad	(,)_con_info
	.quad	GHC.IO.Handle.Types.$fReadBufferMode8_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode7_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.74954806 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode5_closure
.type GHC.IO.Handle.Types.$fReadBufferMode5_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode5_closure:
	.quad	:_con_info
	.quad	GHC.IO.Handle.Types.$fReadBufferMode6_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.75120729 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode_sps_closure
.type GHC.IO.Handle.Types.$fReadBufferMode_sps_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode_sps_closure:
	.quad	:_con_info
	.quad	GHC.IO.Handle.Types.$fReadBufferMode10_closure+1
	.quad	GHC.IO.Handle.Types.$fReadBufferMode5_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.752999455 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode4_bytes
.type GHC.IO.Handle.Types.$fReadBufferMode4_bytes, @object
GHC.IO.Handle.Types.$fReadBufferMode4_bytes:
	.asciz "BlockBuffering"


==================== Asm code ====================
2018-03-16 16:03:22.756192737 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode3_closure
.type GHC.IO.Handle.Types.$fReadBufferMode3_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode3_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.757011262 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode3_entry
.type GHC.IO.Handle.Types.$fReadBufferMode3_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode3_entry:
_c8fvp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fvq
_c8fvr:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8fvo
_c8fvn:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fReadBufferMode4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8fvq:
	jmp *-16(%r13)
_c8fvo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadBufferMode3_entry, .-GHC.IO.Handle.Types.$fReadBufferMode3_entry


==================== Asm code ====================
2018-03-16 16:03:22.757746779 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode3_info
.type GHC.IO.Handle.Types.$fReadBufferMode3_info, @object
GHC.IO.Handle.Types.$fReadBufferMode3_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:22.759515971 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode_lexeme_closure
.type GHC.IO.Handle.Types.$fReadBufferMode_lexeme_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode_lexeme_closure:
	.quad	Text.Read.Lex.Ident_con_info
	.quad	GHC.IO.Handle.Types.$fReadBufferMode3_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.767695674 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode2_closure
.type GHC.IO.Handle.Types.$fReadBufferMode2_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode2_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.768759142 UTC

.section .text
.align 8
ds2_s8ekj_entry:
_c8fvJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fvK
_c8fvL:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	leaq GHC.IO.Handle.Types.$fReadBufferMode_sps_closure+2(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Read.choose2_entry@gotpcrel(%rip)
_c8fvK:
	jmp *-16(%r13)
	.size ds2_s8ekj_entry, .-ds2_s8ekj_entry


==================== Asm code ====================
2018-03-16 16:03:22.769410793 UTC

.section .data.rel.ro
.align 8
.align 1
ds2_s8ekj_info:
	.quad	ds2_s8ekj_entry
	.quad	1
	.quad	12884901904
	.quad	S8evg_srt+424


==================== Asm code ====================
2018-03-16 16:03:22.770147354 UTC

.section .text
.align 8
sat_s8eks_entry:
_c8fwf:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8fwj
_c8fwi:
	movq 7(%rbx),%rax
	leaq GHC.IO.Handle.Types.BlockBuffering_con_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -5(%r12),%r14
	movq %rax,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c8fwj:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_s8eks_entry, .-sat_s8eks_entry


==================== Asm code ====================
2018-03-16 16:03:22.770761176 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8eks_info:
	.quad	sat_s8eks_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:22.771468672 UTC

.section .text
.align 8
sat_s8ekt_entry:
_c8fwk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8fwo
_c8fwn:
	movq 7(%rbx),%rax
	leaq sat_s8eks_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rdi
	leaq GHC.IO.Handle.Types.$fReadBufferMode_n_closure+1(%rip),%rsi
	movq GHC.Read.$fReadInt_closure@gotpcrel(%rip),%r14
	jmp *GHC.Read.$fReadMaybe1_entry@gotpcrel(%rip)
_c8fwo:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_s8ekt_entry, .-sat_s8ekt_entry


==================== Asm code ====================
2018-03-16 16:03:22.772104558 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ekt_info:
	.quad	sat_s8ekt_entry
	.quad	1
	.quad	12884901897
	.quad	4294967301
	.quad	S8evg_srt+440


==================== Asm code ====================
2018-03-16 16:03:22.77290689 UTC

.section .text
.align 8
sat_s8ekw_entry:
_c8fwp:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fwq
_c8fwr:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c8fvV_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c8fvV
_c8fvW:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fwq:
	jmp *-16(%r13)
	.size sat_s8ekw_entry, .-sat_s8ekw_entry


==================== Asm code ====================
2018-03-16 16:03:22.773602149 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ekw_info:
	.quad	sat_s8ekw_entry
	.quad	2
	.quad	8070450536542896146
	.quad	S8evg_srt+216


==================== Asm code ====================
2018-03-16 16:03:22.774359261 UTC

.section .text
.align 8
_c8fvV:
_c8fvV:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8fwu
_c8fwt:
	cmpq $10,7(%rbx)
	jg _c8fww
_c8fwA:
	leaq sat_s8ekt_info(%rip),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c8fwx_info(%rip),%rax
	movq %rax,8(%rbp)
	leaq -7(%r12),%rsi
	leaq GHC.IO.Handle.Types.$fReadBufferMode_lexeme_closure+4(%rip),%r14
	addq $8,%rbp
	jmp *Text.Read.Lex.$wexpect_entry@gotpcrel(%rip)
_c8fww:
	addq $-16,%r12
	movq Text.ParserCombinators.ReadP.Fail_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8fwu:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8fvV, .-_c8fvV


==================== Asm code ====================
2018-03-16 16:03:22.775099348 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fvV_info:
	.quad	_c8fvV
	.quad	1
	.quad	8070450536542896158
	.quad	S8evg_srt+216


==================== Asm code ====================
2018-03-16 16:03:22.775799917 UTC

.section .text
.align 8
_c8fwx:
_c8fwx:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8fwD
_c8fwC:
	movq Text.ParserCombinators.ReadP.Look_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8fwD:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8fwx, .-_c8fwx


==================== Asm code ====================
2018-03-16 16:03:22.776624878 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fwx_info:
	.quad	_c8fwx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.777641811 UTC

.section .text
.align 8
sat_s8ekx_entry:
_c8fwH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fwI
_c8fwJ:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8fwL
_c8fwK:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_s8ekw_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq block_c8fwF_info(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c8fwL:
	movq $32,904(%r13)
_c8fwI:
	jmp *-8(%r13)
	.size sat_s8ekx_entry, .-sat_s8ekx_entry


==================== Asm code ====================
2018-03-16 16:03:22.778357426 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ekx_info:
	.quad	sat_s8ekx_entry
	.quad	2
	.quad	-1152921500311879669
	.quad	4294967301
	.quad	S8evg_srt+216


==================== Asm code ====================
2018-03-16 16:03:22.778978794 UTC

.section .text
.align 8
_c8fwF:
_c8fwF:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_entry@gotpcrel(%rip)
	.size _c8fwF, .-_c8fwF


==================== Asm code ====================
2018-03-16 16:03:22.779610867 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fwF_info:
	.quad	_c8fwF
	.quad	1
	.quad	4294967326
	.quad	S8evg_srt+464


==================== Asm code ====================
2018-03-16 16:03:22.780186447 UTC

.section .data.rel.ro
.align 8
.align 1
u8fwU_srtd:
	.quad	S8evg_srt+216
	.quad	33
	.quad	8522825729


==================== Asm code ====================
2018-03-16 16:03:22.780952759 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode2_entry
.type GHC.IO.Handle.Types.$fReadBufferMode2_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode2_entry:
_c8fwP:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c8fwT
_c8fwS:
	leaq ds2_s8ekj_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	leaq sat_s8ekx_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8fwT:
	movq $48,904(%r13)
	leaq GHC.IO.Handle.Types.$fReadBufferMode2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fReadBufferMode2_entry, .-GHC.IO.Handle.Types.$fReadBufferMode2_entry


==================== Asm code ====================
2018-03-16 16:03:22.781691787 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode2_info
.type GHC.IO.Handle.Types.$fReadBufferMode2_info, @object
GHC.IO.Handle.Types.$fReadBufferMode2_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode2_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967301
	.quad	u8fwU_srtd


==================== Asm code ====================
2018-03-16 16:03:22.784458471 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode1_closure
.type GHC.IO.Handle.Types.$fReadBufferMode1_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode1_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.785072058 UTC

.section .data.rel.ro
.align 8
.align 1
u8fxS_srtd:
	.quad	S8evg_srt+160
	.quad	40
	.quad	549755813889


==================== Asm code ====================
2018-03-16 16:03:22.785759181 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode1_entry
.type GHC.IO.Handle.Types.$fReadBufferMode1_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode1_entry:
_c8fxP:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.IO.Handle.Types.$fReadBufferMode2_closure+1(%rip),%r14
	jmp *GHC.Read.list3_entry@gotpcrel(%rip)
	.size GHC.IO.Handle.Types.$fReadBufferMode1_entry, .-GHC.IO.Handle.Types.$fReadBufferMode1_entry


==================== Asm code ====================
2018-03-16 16:03:22.786336258 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode1_info
.type GHC.IO.Handle.Types.$fReadBufferMode1_info, @object
GHC.IO.Handle.Types.$fReadBufferMode1_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u8fxS_srtd


==================== Asm code ====================
2018-03-16 16:03:22.789666035 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_closure
.type GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.790234214 UTC

.section .data.rel.ro
.align 8
.align 1
u8fye_srtd:
	.quad	S8evg_srt+160
	.quad	40
	.quad	549755813889


==================== Asm code ====================
2018-03-16 16:03:22.791240746 UTC

.section .text
.align 8
sat_s8ekz_entry:
_c8fy6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fy7
_c8fy8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 16(%rbx),%rsi
	leaq GHC.IO.Handle.Types.$fReadBufferMode2_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Read.list3_entry@gotpcrel(%rip)
_c8fy7:
	jmp *-16(%r13)
	.size sat_s8ekz_entry, .-sat_s8ekz_entry


==================== Asm code ====================
2018-03-16 16:03:22.79193457 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8ekz_info:
	.quad	sat_s8ekz_entry
	.quad	1
	.quad	-4294967280
	.quad	u8fye_srtd


==================== Asm code ====================
2018-03-16 16:03:22.7924854 UTC

.section .data.rel.ro
.align 8
.align 1
u8fyf_srtd:
	.quad	S8evg_srt+160
	.quad	41
	.quad	1649267441665


==================== Asm code ====================
2018-03-16 16:03:22.793523775 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_entry
.type GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_entry:
_c8fy9:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8fyd
_c8fyc:
	leaq sat_s8ekz_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	movq Text.ParserCombinators.ReadP.run_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c8fyd:
	movq $24,904(%r13)
	leaq GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_entry, .-GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_entry


==================== Asm code ====================
2018-03-16 16:03:22.794202173 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_info
.type GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_info, @object
GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967301
	.quad	u8fyf_srtd


==================== Asm code ====================
2018-03-16 16:03:22.79690059 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_closure
.type GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.79777515 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_entry
.type GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_entry:
_c8fyA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fyB
_c8fyC:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8fyz
_c8fyy:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fReadBufferMode1_closure+2(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Read.list_entry@gotpcrel(%rip)
_c8fyB:
	jmp *-16(%r13)
_c8fyz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_entry, .-GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_entry


==================== Asm code ====================
2018-03-16 16:03:22.798492777 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_info
.type GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_info, @object
GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_entry
	.quad	0
	.quad	12884901909
	.quad	S8evg_srt+488


==================== Asm code ====================
2018-03-16 16:03:22.801272902 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode14_closure
.type GHC.IO.Handle.Types.$fReadBufferMode14_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode14_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode14_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.802124963 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode14_entry
.type GHC.IO.Handle.Types.$fReadBufferMode14_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode14_entry:
_c8fyR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fyS
_c8fyT:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8fyQ
_c8fyP:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq GHC.Read.$fRead()7_closure@gotpcrel(%rip),%r14
	leaq GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_closure(%rip),%rbx
	addq $-16,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_c8fyS:
	jmp *-16(%r13)
_c8fyQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.$fReadBufferMode14_entry, .-GHC.IO.Handle.Types.$fReadBufferMode14_entry


==================== Asm code ====================
2018-03-16 16:03:22.802880743 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode14_info
.type GHC.IO.Handle.Types.$fReadBufferMode14_info, @object
GHC.IO.Handle.Types.$fReadBufferMode14_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode14_entry
	.quad	0
	.quad	4294967317
	.quad	S8evg_srt+504


==================== Asm code ====================
2018-03-16 16:03:22.805070203 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode_$creadList_closure
.type GHC.IO.Handle.Types.$fReadBufferMode_$creadList_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode_$creadList_closure:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadList_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.805775808 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fReadBufferMode_$creadList_entry
.type GHC.IO.Handle.Types.$fReadBufferMode_$creadList_entry, @object
GHC.IO.Handle.Types.$fReadBufferMode_$creadList_entry:
_c8fz7:
	movq %r14,%rsi
	leaq GHC.IO.Handle.Types.$fReadBufferMode14_closure(%rip),%r14
	jmp *Text.ParserCombinators.ReadP.run_entry@gotpcrel(%rip)
	.size GHC.IO.Handle.Types.$fReadBufferMode_$creadList_entry, .-GHC.IO.Handle.Types.$fReadBufferMode_$creadList_entry


==================== Asm code ====================
2018-03-16 16:03:22.806654707 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode_$creadList_info
.type GHC.IO.Handle.Types.$fReadBufferMode_$creadList_info, @object
GHC.IO.Handle.Types.$fReadBufferMode_$creadList_info:
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadList_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S8evg_srt+512


==================== Asm code ====================
2018-03-16 16:03:22.808493561 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fReadBufferMode_closure
.type GHC.IO.Handle.Types.$fReadBufferMode_closure, @object
GHC.IO.Handle.Types.$fReadBufferMode_closure:
	.quad	GHC.Read.C:Read_con_info
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_closure+1
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadList_closure+1
	.quad	GHC.IO.Handle.Types.$fReadBufferMode1_closure+2
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:22.816047922 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c<_closure
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c<_closure, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c<_closure:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c<_info


==================== Asm code ====================
2018-03-16 16:03:22.816883376 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c<_entry
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c<_entry, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c<_entry:
_c8fzr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fzs
_c8fzt:
	leaq block_c8fzj_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8fzj
_c8fzk:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fzs:
	leaq GHC.IO.Handle.Types.$fOrdBufferMode_$c<_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdBufferMode_$c<_entry, .-GHC.IO.Handle.Types.$fOrdBufferMode_$c<_entry


==================== Asm code ====================
2018-03-16 16:03:22.817538958 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c<_info
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c<_info, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c<_info:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c<_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.818398523 UTC

.section .text
.align 8
_c8fzj:
_c8fzj:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u8fAT
_c8fzp:
	leaq block_c8fA0_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 5(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8fA0
_c8fA2:
	movq (%rbx),%rax
	jmp *(%rax)
_u8fAT:
	cmpq $2,%rcx
	jb _c8fzn
_c8fzo:
	leaq block_c8fzL_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fzL
_c8fzN:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fzn:
	leaq block_c8fzw_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fzw
_c8fzy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fzj, .-_c8fzj


==================== Asm code ====================
2018-03-16 16:03:22.819158482 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fzj_info:
	.quad	_c8fzj
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.81985768 UTC

.section .text
.align 8
_c8fzw:
_c8fzw:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fAU
_u8fAV:
	addq $8,%rbp
	jmp _c8fAw
_u8fAU:
	addq $8,%rbp
	jmp _c8fAI
	.size _c8fzw, .-_c8fzw


==================== Asm code ====================
2018-03-16 16:03:22.820471175 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fzw_info:
	.quad	_c8fzw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.821102153 UTC

.section .text
.align 8
_c8fzL:
_c8fzL:
	andl $7,%ebx
	cmpq $3,%rbx
	je _u8fAW
_u8fAX:
	addq $8,%rbp
	jmp _c8fAI
_u8fAW:
	addq $8,%rbp
	jmp _c8fAw
	.size _c8fzL, .-_c8fzL


==================== Asm code ====================
2018-03-16 16:03:22.822406044 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fzL_info:
	.quad	_c8fzL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.823133666 UTC

.section .text
.align 8
_c8fA0:
_c8fA0:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c8fAd
_u8fAY:
	addq $16,%rbp
	jmp _c8fAI
_c8fAd:
	leaq block_c8fAb_info(%rip),%rax
	movq %rax,(%rbp)
	movq 5(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8fAb
_c8fAe:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fA0, .-_c8fA0


==================== Asm code ====================
2018-03-16 16:03:22.823805343 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fA0_info:
	.quad	_c8fA0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.824575202 UTC

.section .text
.align 8
_c8fAb:
_c8fAb:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8fAl
_c8fAB:
	leaq block_c8fAz_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8fAz
_c8fAC:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fAl:
	leaq block_c8fAi_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fAi
_c8fAm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fAb, .-_c8fAb


==================== Asm code ====================
2018-03-16 16:03:22.825311768 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fAb_info:
	.quad	_c8fAb
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.825989374 UTC

.section .text
.align 8
_c8fAi:
_c8fAi:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fB0
_u8fB1:
	addq $8,%rbp
	jmp _c8fAw
_u8fB0:
	addq $8,%rbp
	jmp _c8fAI
	.size _c8fAi, .-_c8fAi


==================== Asm code ====================
2018-03-16 16:03:22.826641487 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fAi_info:
	.quad	_c8fAi
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.827329913 UTC

.section .text
.align 8
_c8fAw:
_c8fAw:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fAw, .-_c8fAw


==================== Asm code ====================
2018-03-16 16:03:22.828063583 UTC

.section .text
.align 8
_c8fAz:
_c8fAz:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8fAZ
_c8fAM:
	movq 6(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp *GHC.Classes.ltInt_entry@gotpcrel(%rip)
_u8fAZ:
	addq $16,%rbp
	jmp _c8fAI
	.size _c8fAz, .-_c8fAz


==================== Asm code ====================
2018-03-16 16:03:22.828716599 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fAz_info:
	.quad	_c8fAz
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.829605552 UTC

.section .text
.align 8
_c8fAI:
_c8fAI:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fAI, .-_c8fAI


==================== Asm code ====================
2018-03-16 16:03:22.837222882 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_closure
.type GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_closure, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_closure:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_info


==================== Asm code ====================
2018-03-16 16:03:22.838058322 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_entry
.type GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_entry, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_entry:
_c8fCs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fCt
_c8fCu:
	leaq block_c8fCk_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8fCk
_c8fCl:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fCt:
	leaq GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_entry, .-GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_entry


==================== Asm code ====================
2018-03-16 16:03:22.838743705 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_info
.type GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_info, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_info:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.839586137 UTC

.section .text
.align 8
_c8fCk:
_c8fCk:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u8fDY
_c8fCq:
	leaq block_c8fD5_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 5(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8fD5
_c8fD7:
	movq (%rbx),%rax
	jmp *(%rax)
_u8fDY:
	cmpq $2,%rcx
	jb _c8fCo
_c8fCp:
	leaq block_c8fCM_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fCM
_c8fCO:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fCo:
	leaq block_c8fCx_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fCx
_c8fCz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fCk, .-_c8fCk


==================== Asm code ====================
2018-03-16 16:03:22.840302892 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fCk_info:
	.quad	_c8fCk
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.840975489 UTC

.section .text
.align 8
_c8fCx:
_c8fCx:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fE0
_u8fE1:
	addq $8,%rbp
	jmp _c8fDB
_u8fE0:
	addq $8,%rbp
	jmp _c8fDx
	.size _c8fCx, .-_c8fCx


==================== Asm code ====================
2018-03-16 16:03:22.841584073 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fCx_info:
	.quad	_c8fCx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.842254555 UTC

.section .text
.align 8
_c8fCM:
_c8fCM:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _u8fDZ
_u8fE2:
	addq $8,%rbp
	jmp _c8fDB
_u8fE4:
	addq $8,%rbp
	jmp _c8fDN
_u8fDZ:
	cmpq $2,%rbx
	jb _u8fE4
_u8fE3:
	addq $8,%rbp
	jmp _c8fDx
	.size _c8fCM, .-_c8fCM


==================== Asm code ====================
2018-03-16 16:03:22.842860302 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fCM_info:
	.quad	_c8fCM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.843617807 UTC

.section .text
.align 8
_c8fD5:
_c8fD5:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c8fDi
_u8fE5:
	addq $16,%rbp
	jmp _c8fDN
_c8fDi:
	leaq block_c8fDg_info(%rip),%rax
	movq %rax,(%rbp)
	movq 5(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8fDg
_c8fDj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fD5, .-_c8fD5


==================== Asm code ====================
2018-03-16 16:03:22.844525052 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fD5_info:
	.quad	_c8fD5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.845318846 UTC

.section .text
.align 8
_c8fDg:
_c8fDg:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8fDq
_c8fDG:
	leaq block_c8fDE_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8fDE
_c8fDH:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fDq:
	leaq block_c8fDn_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fDn
_c8fDr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fDg, .-_c8fDg


==================== Asm code ====================
2018-03-16 16:03:22.845974479 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fDg_info:
	.quad	_c8fDg
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.846634171 UTC

.section .text
.align 8
_c8fDn:
_c8fDn:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fE7
_u8fE8:
	addq $8,%rbp
	jmp _c8fDB
_u8fE7:
	addq $8,%rbp
	jmp _c8fDx
	.size _c8fDn, .-_c8fDn


==================== Asm code ====================
2018-03-16 16:03:22.847228713 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fDn_info:
	.quad	_c8fDn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.847852062 UTC

.section .text
.align 8
_c8fDx:
_c8fDx:
	movq GHC.Types.EQ_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fDx, .-_c8fDx


==================== Asm code ====================
2018-03-16 16:03:22.848516353 UTC

.section .text
.align 8
_c8fDB:
_c8fDB:
	movq GHC.Types.LT_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fDB, .-_c8fDB


==================== Asm code ====================
2018-03-16 16:03:22.849542205 UTC

.section .text
.align 8
_c8fDE:
_c8fDE:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8fE6
_c8fDR:
	movq 6(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp *GHC.Classes.compareInt_entry@gotpcrel(%rip)
_u8fE6:
	addq $16,%rbp
	jmp _c8fDN
	.size _c8fDE, .-_c8fDE


==================== Asm code ====================
2018-03-16 16:03:22.850176588 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fDE_info:
	.quad	_c8fDE
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.850825372 UTC

.section .text
.align 8
_c8fDN:
_c8fDN:
	movq GHC.Types.GT_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fDN, .-_c8fDN


==================== Asm code ====================
2018-03-16 16:03:22.8579098 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqBufferMode_$c==_closure
.type GHC.IO.Handle.Types.$fEqBufferMode_$c==_closure, @object
GHC.IO.Handle.Types.$fEqBufferMode_$c==_closure:
	.quad	GHC.IO.Handle.Types.$fEqBufferMode_$c==_info


==================== Asm code ====================
2018-03-16 16:03:22.858655481 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fEqBufferMode_$c==_entry
.type GHC.IO.Handle.Types.$fEqBufferMode_$c==_entry, @object
GHC.IO.Handle.Types.$fEqBufferMode_$c==_entry:
_c8fFD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fFE
_c8fFF:
	leaq block_c8fFv_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8fFv
_c8fFw:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fFE:
	leaq GHC.IO.Handle.Types.$fEqBufferMode_$c==_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fEqBufferMode_$c==_entry, .-GHC.IO.Handle.Types.$fEqBufferMode_$c==_entry


==================== Asm code ====================
2018-03-16 16:03:22.859276849 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqBufferMode_$c==_info
.type GHC.IO.Handle.Types.$fEqBufferMode_$c==_info, @object
GHC.IO.Handle.Types.$fEqBufferMode_$c==_info:
	.quad	GHC.IO.Handle.Types.$fEqBufferMode_$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.860410687 UTC

.section .text
.align 8
_c8fFv:
_c8fFv:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u8fH5
_c8fFB:
	leaq block_c8fGc_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 5(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8fGc
_c8fGe:
	movq (%rbx),%rax
	jmp *(%rax)
_u8fH5:
	cmpq $2,%rcx
	jb _c8fFz
_c8fFA:
	leaq block_c8fFX_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fFX
_c8fFZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fFz:
	leaq block_c8fFI_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fFI
_c8fFK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fFv, .-_c8fFv


==================== Asm code ====================
2018-03-16 16:03:22.861129516 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fFv_info:
	.quad	_c8fFv
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.861919524 UTC

.section .text
.align 8
_c8fFI:
_c8fFI:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fH6
_u8fH7:
	addq $8,%rbp
	jmp _c8fGU
_u8fH6:
	addq $8,%rbp
	jmp _c8fGE
	.size _c8fFI, .-_c8fFI


==================== Asm code ====================
2018-03-16 16:03:22.862510321 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fFI_info:
	.quad	_c8fFI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.863166363 UTC

.section .text
.align 8
_c8fFX:
_c8fFX:
	andl $7,%ebx
	cmpq $2,%rbx
	je _u8fH8
_u8fH9:
	addq $8,%rbp
	jmp _c8fGU
_u8fH8:
	addq $8,%rbp
	jmp _c8fGE
	.size _c8fFX, .-_c8fFX


==================== Asm code ====================
2018-03-16 16:03:22.863745973 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fFX_info:
	.quad	_c8fFX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.864426959 UTC

.section .text
.align 8
_c8fGc:
_c8fGc:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c8fGp
_u8fHa:
	addq $16,%rbp
	jmp _c8fGU
_c8fGp:
	leaq block_c8fGn_info(%rip),%rax
	movq %rax,(%rbp)
	movq 5(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8fGn
_c8fGq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fGc, .-_c8fGc


==================== Asm code ====================
2018-03-16 16:03:22.865096136 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fGc_info:
	.quad	_c8fGc
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.865872803 UTC

.section .text
.align 8
_c8fGn:
_c8fGn:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8fGx
_c8fGN:
	leaq block_c8fGL_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8fGL
_c8fGO:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fGx:
	leaq block_c8fGu_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fGu
_c8fGy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fGn, .-_c8fGn


==================== Asm code ====================
2018-03-16 16:03:22.866551225 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fGn_info:
	.quad	_c8fGn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.867359711 UTC

.section .text
.align 8
_c8fGu:
_c8fGu:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fHc
_u8fHd:
	addq $8,%rbp
	jmp _c8fGU
_u8fHc:
	addq $8,%rbp
	jmp _c8fGE
	.size _c8fGu, .-_c8fGu


==================== Asm code ====================
2018-03-16 16:03:22.867965085 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fGu_info:
	.quad	_c8fGu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.868567735 UTC

.section .text
.align 8
_c8fGE:
_c8fGE:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fGE, .-_c8fGE


==================== Asm code ====================
2018-03-16 16:03:22.869311984 UTC

.section .text
.align 8
_c8fGL:
_c8fGL:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8fHb
_c8fGY:
	movq 6(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp *GHC.Classes.eqInt_entry@gotpcrel(%rip)
_u8fHb:
	addq $16,%rbp
	jmp _c8fGU
	.size _c8fGL, .-_c8fGL


==================== Asm code ====================
2018-03-16 16:03:22.869920742 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fGL_info:
	.quad	_c8fGL
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.870516209 UTC

.section .text
.align 8
_c8fGU:
_c8fGU:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fGU, .-_c8fGU


==================== Asm code ====================
2018-03-16 16:03:22.878743689 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqBufferMode_$c/=_closure
.type GHC.IO.Handle.Types.$fEqBufferMode_$c/=_closure, @object
GHC.IO.Handle.Types.$fEqBufferMode_$c/=_closure:
	.quad	GHC.IO.Handle.Types.$fEqBufferMode_$c/=_info


==================== Asm code ====================
2018-03-16 16:03:22.879546453 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fEqBufferMode_$c/=_entry
.type GHC.IO.Handle.Types.$fEqBufferMode_$c/=_entry, @object
GHC.IO.Handle.Types.$fEqBufferMode_$c/=_entry:
_c8fIE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fIF
_c8fIG:
	leaq block_c8fIw_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8fIw
_c8fIx:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fIF:
	leaq GHC.IO.Handle.Types.$fEqBufferMode_$c/=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fEqBufferMode_$c/=_entry, .-GHC.IO.Handle.Types.$fEqBufferMode_$c/=_entry


==================== Asm code ====================
2018-03-16 16:03:22.880237318 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqBufferMode_$c/=_info
.type GHC.IO.Handle.Types.$fEqBufferMode_$c/=_info, @object
GHC.IO.Handle.Types.$fEqBufferMode_$c/=_info:
	.quad	GHC.IO.Handle.Types.$fEqBufferMode_$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.881104871 UTC

.section .text
.align 8
_c8fIw:
_c8fIw:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u8fKn
_c8fIC:
	leaq block_c8fJd_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 5(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8fJd
_c8fJf:
	movq (%rbx),%rax
	jmp *(%rax)
_u8fKn:
	cmpq $2,%rcx
	jb _c8fIA
_c8fIB:
	leaq block_c8fIY_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fIY
_c8fJ0:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fIA:
	leaq block_c8fIJ_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fIJ
_c8fIL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fIw, .-_c8fIw


==================== Asm code ====================
2018-03-16 16:03:22.882143708 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fIw_info:
	.quad	_c8fIw
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.882779721 UTC

.section .text
.align 8
_c8fIJ:
_c8fIJ:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fKo
_u8fKp:
	addq $8,%rbp
	jmp _c8fKf
_u8fKo:
	addq $8,%rbp
	jmp _c8fKg
	.size _c8fIJ, .-_c8fIJ


==================== Asm code ====================
2018-03-16 16:03:22.883382509 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fIJ_info:
	.quad	_c8fIJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.884046273 UTC

.section .text
.align 8
_c8fIY:
_c8fIY:
	andl $7,%ebx
	cmpq $2,%rbx
	je _u8fKq
_u8fKr:
	addq $8,%rbp
	jmp _c8fKf
_u8fKq:
	addq $8,%rbp
	jmp _c8fKg
	.size _c8fIY, .-_c8fIY


==================== Asm code ====================
2018-03-16 16:03:22.884612498 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fIY_info:
	.quad	_c8fIY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.885628463 UTC

.section .text
.align 8
_c8fJd:
_c8fJd:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c8fJq
_u8fKs:
	addq $16,%rbp
	jmp _c8fKf
_c8fJq:
	leaq block_c8fJo_info(%rip),%rax
	movq %rax,(%rbp)
	movq 5(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8fJo
_c8fJr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fJd, .-_c8fJd


==================== Asm code ====================
2018-03-16 16:03:22.886295237 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fJd_info:
	.quad	_c8fJd
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.887059275 UTC

.section .text
.align 8
_c8fJo:
_c8fJo:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8fJy
_c8fJO:
	leaq block_c8fJM_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8fJM
_c8fJP:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fJy:
	leaq block_c8fJv_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fJv
_c8fJz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fJo, .-_c8fJo


==================== Asm code ====================
2018-03-16 16:03:22.887740153 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fJo_info:
	.quad	_c8fJo
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.888407119 UTC

.section .text
.align 8
_c8fJv:
_c8fJv:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fKw
_u8fKx:
	addq $8,%rbp
	jmp _c8fKf
_u8fKw:
	addq $8,%rbp
	jmp _c8fKg
	.size _c8fJv, .-_c8fJv


==================== Asm code ====================
2018-03-16 16:03:22.889266919 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fJv_info:
	.quad	_c8fJv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.890051477 UTC

.section .text
.align 8
_c8fJM:
_c8fJM:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8fKt
_c8fK5:
	leaq block_c8fJY_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8fJY
_c8fJZ:
	movq (%rbx),%rax
	jmp *(%rax)
_u8fKt:
	addq $16,%rbp
	jmp _c8fKf
	.size _c8fJM, .-_c8fJM


==================== Asm code ====================
2018-03-16 16:03:22.890714985 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fJM_info:
	.quad	_c8fJM
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.891401532 UTC

.section .text
.align 8
_c8fJY:
_c8fJY:
	leaq block_c8fK3_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8fK3
_c8fK7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fJY, .-_c8fJY


==================== Asm code ====================
2018-03-16 16:03:22.891999433 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fJY_info:
	.quad	_c8fJY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.892628516 UTC

.section .text
.align 8
_c8fK3:
_c8fK3:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	je _u8fKu
_u8fKv:
	addq $16,%rbp
	jmp _c8fKf
_u8fKu:
	addq $16,%rbp
	jmp _c8fKg
	.size _c8fK3, .-_c8fK3


==================== Asm code ====================
2018-03-16 16:03:22.89320595 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fK3_info:
	.quad	_c8fK3
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.893845792 UTC

.section .text
.align 8
_c8fKg:
_c8fKg:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fKg, .-_c8fKg


==================== Asm code ====================
2018-03-16 16:03:22.894529998 UTC

.section .text
.align 8
_c8fKf:
_c8fKf:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fKf, .-_c8fKf


==================== Asm code ====================
2018-03-16 16:03:22.896557046 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fEqBufferMode_closure
.type GHC.IO.Handle.Types.$fEqBufferMode_closure, @object
GHC.IO.Handle.Types.$fEqBufferMode_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.IO.Handle.Types.$fEqBufferMode_$c==_closure+2
	.quad	GHC.IO.Handle.Types.$fEqBufferMode_$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:22.904726645 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_closure
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_closure, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_closure:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_info


==================== Asm code ====================
2018-03-16 16:03:22.905547815 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_entry
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_entry, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_entry:
_c8fMe:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fMf
_c8fMg:
	leaq block_c8fM6_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8fM6
_c8fM7:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fMf:
	leaq GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_entry, .-GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_entry


==================== Asm code ====================
2018-03-16 16:03:22.906252578 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_info
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_info, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_info:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.907079815 UTC

.section .text
.align 8
_c8fM6:
_c8fM6:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u8fNX
_c8fMc:
	leaq block_c8fMN_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 5(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8fMN
_c8fMP:
	movq (%rbx),%rax
	jmp *(%rax)
_u8fNX:
	cmpq $2,%rcx
	jb _c8fMa
_c8fMb:
	leaq block_c8fMy_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fMy
_c8fMA:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fMa:
	leaq block_c8fMj_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fMj
_c8fMl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fM6, .-_c8fM6


==================== Asm code ====================
2018-03-16 16:03:22.907798588 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fM6_info:
	.quad	_c8fM6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.908454656 UTC

.section .text
.align 8
_c8fMj:
_c8fMj:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fNY
_u8fNZ:
	addq $8,%rbp
	jmp _c8fNQ
_u8fNY:
	addq $8,%rbp
	jmp _c8fNP
	.size _c8fMj, .-_c8fMj


==================== Asm code ====================
2018-03-16 16:03:22.908981307 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fMj_info:
	.quad	_c8fMj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.909631369 UTC

.section .text
.align 8
_c8fMy:
_c8fMy:
	andl $7,%ebx
	cmpq $3,%rbx
	je _u8fO0
_u8fO1:
	addq $8,%rbp
	jmp _c8fNP
_u8fO0:
	addq $8,%rbp
	jmp _c8fNQ
	.size _c8fMy, .-_c8fMy


==================== Asm code ====================
2018-03-16 16:03:22.910189416 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fMy_info:
	.quad	_c8fMy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.910889816 UTC

.section .text
.align 8
_c8fMN:
_c8fMN:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c8fN0
_u8fO2:
	addq $16,%rbp
	jmp _c8fNP
_c8fN0:
	leaq block_c8fMY_info(%rip),%rax
	movq %rax,(%rbp)
	movq 5(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8fMY
_c8fN1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fMN, .-_c8fMN


==================== Asm code ====================
2018-03-16 16:03:22.911744719 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fMN_info:
	.quad	_c8fMN
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.912471464 UTC

.section .text
.align 8
_c8fMY:
_c8fMY:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8fN8
_c8fNo:
	leaq block_c8fNm_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8fNm
_c8fNp:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fN8:
	leaq block_c8fN5_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fN5
_c8fN9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fMY, .-_c8fMY


==================== Asm code ====================
2018-03-16 16:03:22.91314296 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fMY_info:
	.quad	_c8fMY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.914008891 UTC

.section .text
.align 8
_c8fN5:
_c8fN5:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fO6
_u8fO7:
	addq $8,%rbp
	jmp _c8fNQ
_u8fO6:
	addq $8,%rbp
	jmp _c8fNP
	.size _c8fN5, .-_c8fN5


==================== Asm code ====================
2018-03-16 16:03:22.914604075 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fN5_info:
	.quad	_c8fN5
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.915322333 UTC

.section .text
.align 8
_c8fNm:
_c8fNm:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8fO3
_c8fNF:
	leaq block_c8fNy_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8fNy
_c8fNz:
	movq (%rbx),%rax
	jmp *(%rax)
_u8fO3:
	addq $16,%rbp
	jmp _c8fNP
	.size _c8fNm, .-_c8fNm


==================== Asm code ====================
2018-03-16 16:03:22.915969865 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fNm_info:
	.quad	_c8fNm
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.916629908 UTC

.section .text
.align 8
_c8fNy:
_c8fNy:
	leaq block_c8fND_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8fND
_c8fNH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fNy, .-_c8fNy


==================== Asm code ====================
2018-03-16 16:03:22.917171595 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fNy_info:
	.quad	_c8fNy
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.91785725 UTC

.section .text
.align 8
_c8fND:
_c8fND:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jge _u8fO5
_u8fO4:
	addq $16,%rbp
	jmp _c8fNQ
_u8fO5:
	addq $16,%rbp
	jmp _c8fNP
	.size _c8fND, .-_c8fND


==================== Asm code ====================
2018-03-16 16:03:22.918612041 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fND_info:
	.quad	_c8fND
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.919224197 UTC

.section .text
.align 8
_c8fNQ:
_c8fNQ:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fNQ, .-_c8fNQ


==================== Asm code ====================
2018-03-16 16:03:22.919918169 UTC

.section .text
.align 8
_c8fNP:
_c8fNP:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fNP, .-_c8fNP


==================== Asm code ====================
2018-03-16 16:03:22.928054445 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_closure
.type GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_closure, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_closure:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_info


==================== Asm code ====================
2018-03-16 16:03:22.928841945 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_entry
.type GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_entry, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_entry:
_c8fPN:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fPO
_c8fPP:
	leaq block_c8fPF_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8fPF
_c8fPG:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fPO:
	leaq GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_entry, .-GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_entry


==================== Asm code ====================
2018-03-16 16:03:22.929511942 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_info
.type GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_info, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_info:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.93042606 UTC

.section .text
.align 8
_c8fPF:
_c8fPF:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u8fRj
_c8fPL:
	leaq block_c8fQa_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rbx,%rcx
	movq 5(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8fQa
_c8fQc:
	movq (%rbx),%rax
	jmp *(%rax)
_u8fRj:
	cmpq $2,%rcx
	jb _c8fPJ
_c8fPK:
	leaq block_c8fPV_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fPV
_c8fPX:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fPJ:
	movq %rax,%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fPF, .-_c8fPF


==================== Asm code ====================
2018-03-16 16:03:22.931181465 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fPF_info:
	.quad	_c8fPF
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.93192754 UTC

.section .text
.align 8
_c8fPV:
_c8fPV:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c8fQ7
_c8fQ3:
	leaq GHC.IO.Handle.Types.LineBuffering_closure+2(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8fQ7:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fPV, .-_c8fPV


==================== Asm code ====================
2018-03-16 16:03:22.932552643 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fPV_info:
	.quad	_c8fPV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.934209394 UTC

.section .text
.align 8
_c8fQa:
_c8fQa:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c8fQn
_u8fRk:
	addq $16,%rbp
	jmp _c8fRc
_c8fQn:
	leaq block_c8fQl_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 5(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8fQl
_c8fQo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fQa, .-_c8fQa


==================== Asm code ====================
2018-03-16 16:03:22.934880477 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fQa_info:
	.quad	_c8fQa
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.935684739 UTC

.section .text
.align 8
_c8fQl:
_c8fQl:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8fQv
_c8fQL:
	leaq block_c8fQJ_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8fQJ
_c8fQM:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fQv:
	leaq block_c8fQs_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fQs
_c8fQw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fQl, .-_c8fQl


==================== Asm code ====================
2018-03-16 16:03:22.93637859 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fQl_info:
	.quad	_c8fQl
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.937046806 UTC

.section .text
.align 8
_c8fQs:
_c8fQs:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fRo
_u8fRp:
	addq $8,%rbp
	jmp _c8fRd
_u8fRo:
	addq $16,%rbp
	jmp _c8fRc
	.size _c8fQs, .-_c8fQs


==================== Asm code ====================
2018-03-16 16:03:22.937680892 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fQs_info:
	.quad	_c8fQs
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.938423053 UTC

.section .text
.align 8
_c8fQJ:
_c8fQJ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8fRl
_c8fR2:
	leaq block_c8fQV_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8fQV
_c8fQW:
	movq (%rbx),%rax
	jmp *(%rax)
_u8fRl:
	addq $24,%rbp
	jmp _c8fRc
	.size _c8fQJ, .-_c8fQJ


==================== Asm code ====================
2018-03-16 16:03:22.93909451 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fQJ_info:
	.quad	_c8fQJ
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.939797993 UTC

.section .text
.align 8
_c8fQV:
_c8fQV:
	leaq block_c8fR0_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8fR0
_c8fR4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fQV, .-_c8fQV


==================== Asm code ====================
2018-03-16 16:03:22.940427248 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fQV_info:
	.quad	_c8fQV
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.941115391 UTC

.section .text
.align 8
_c8fR0:
_c8fR0:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jge _u8fRn
_u8fRm:
	addq $16,%rbp
	jmp _c8fRd
_u8fRn:
	addq $24,%rbp
	jmp _c8fRc
	.size _c8fR0, .-_c8fR0


==================== Asm code ====================
2018-03-16 16:03:22.941983661 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fR0_info:
	.quad	_c8fR0
	.quad	67
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.942617858 UTC

.section .text
.align 8
_c8fRd:
_c8fRd:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fRd, .-_c8fRd


==================== Asm code ====================
2018-03-16 16:03:22.94328263 UTC

.section .text
.align 8
_c8fRc:
_c8fRc:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fRc, .-_c8fRc


==================== Asm code ====================
2018-03-16 16:03:22.951614978 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_closure
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_closure, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_closure:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_info


==================== Asm code ====================
2018-03-16 16:03:22.952436125 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_entry
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_entry, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_entry:
_c8fSY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fSZ
_c8fT0:
	leaq block_c8fSQ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8fSQ
_c8fSR:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fSZ:
	leaq GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_entry, .-GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_entry


==================== Asm code ====================
2018-03-16 16:03:22.953074412 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_info
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_info, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_info:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.95394629 UTC

.section .text
.align 8
_c8fSQ:
_c8fSQ:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u8fUH
_c8fSW:
	leaq block_c8fTx_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 5(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8fTx
_c8fTz:
	movq (%rbx),%rax
	jmp *(%rax)
_u8fUH:
	cmpq $2,%rcx
	jb _c8fSU
_c8fSV:
	leaq block_c8fTi_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fTi
_c8fTk:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fSU:
	leaq block_c8fT3_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fT3
_c8fT5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fSQ, .-_c8fSQ


==================== Asm code ====================
2018-03-16 16:03:22.954704929 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fSQ_info:
	.quad	_c8fSQ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.955397357 UTC

.section .text
.align 8
_c8fT3:
_c8fT3:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fUI
_u8fUJ:
	addq $8,%rbp
	jmp _c8fUA
_u8fUI:
	addq $8,%rbp
	jmp _c8fUz
	.size _c8fT3, .-_c8fT3


==================== Asm code ====================
2018-03-16 16:03:22.956022366 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fT3_info:
	.quad	_c8fT3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.956939055 UTC

.section .text
.align 8
_c8fTi:
_c8fTi:
	andl $7,%ebx
	cmpq $3,%rbx
	je _u8fUK
_u8fUL:
	addq $8,%rbp
	jmp _c8fUz
_u8fUK:
	addq $8,%rbp
	jmp _c8fUA
	.size _c8fTi, .-_c8fTi


==================== Asm code ====================
2018-03-16 16:03:22.957532953 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fTi_info:
	.quad	_c8fTi
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.958276718 UTC

.section .text
.align 8
_c8fTx:
_c8fTx:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c8fTK
_u8fUM:
	addq $16,%rbp
	jmp _c8fUz
_c8fTK:
	leaq block_c8fTI_info(%rip),%rax
	movq %rax,(%rbp)
	movq 5(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8fTI
_c8fTL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fTx, .-_c8fTx


==================== Asm code ====================
2018-03-16 16:03:22.958902867 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fTx_info:
	.quad	_c8fTx
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.959677558 UTC

.section .text
.align 8
_c8fTI:
_c8fTI:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8fTS
_c8fU8:
	leaq block_c8fU6_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8fU6
_c8fU9:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fTS:
	leaq block_c8fTP_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fTP
_c8fTT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fTI, .-_c8fTI


==================== Asm code ====================
2018-03-16 16:03:22.960358622 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fTI_info:
	.quad	_c8fTI
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.961019756 UTC

.section .text
.align 8
_c8fTP:
_c8fTP:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fUQ
_u8fUR:
	addq $8,%rbp
	jmp _c8fUA
_u8fUQ:
	addq $8,%rbp
	jmp _c8fUz
	.size _c8fTP, .-_c8fTP


==================== Asm code ====================
2018-03-16 16:03:22.961875216 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fTP_info:
	.quad	_c8fTP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.96259532 UTC

.section .text
.align 8
_c8fU6:
_c8fU6:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8fUN
_c8fUp:
	leaq block_c8fUi_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8fUi
_c8fUj:
	movq (%rbx),%rax
	jmp *(%rax)
_u8fUN:
	addq $16,%rbp
	jmp _c8fUz
	.size _c8fU6, .-_c8fU6


==================== Asm code ====================
2018-03-16 16:03:22.963223078 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fU6_info:
	.quad	_c8fU6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.963916838 UTC

.section .text
.align 8
_c8fUi:
_c8fUi:
	leaq block_c8fUn_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8fUn
_c8fUr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fUi, .-_c8fUi


==================== Asm code ====================
2018-03-16 16:03:22.964765308 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fUi_info:
	.quad	_c8fUi
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.965473551 UTC

.section .text
.align 8
_c8fUn:
_c8fUn:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jge _u8fUP
_u8fUO:
	addq $16,%rbp
	jmp _c8fUA
_u8fUP:
	addq $16,%rbp
	jmp _c8fUz
	.size _c8fUn, .-_c8fUn


==================== Asm code ====================
2018-03-16 16:03:22.966026155 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fUn_info:
	.quad	_c8fUn
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.96666313 UTC

.section .text
.align 8
_c8fUA:
_c8fUA:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fUA, .-_c8fUA


==================== Asm code ====================
2018-03-16 16:03:22.967298985 UTC

.section .text
.align 8
_c8fUz:
_c8fUz:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fUz, .-_c8fUz


==================== Asm code ====================
2018-03-16 16:03:22.969619015 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c>_closure
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c>_closure, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c>_closure:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c>_info


==================== Asm code ====================
2018-03-16 16:03:22.970288806 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c>_entry
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c>_entry, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c>_entry:
_c8fWp:
	movq %rsi,%rax
	movq %r14,%rsi
	movq %rax,%r14
	jmp GHC.IO.Handle.Types.$fOrdBufferMode_$c<_entry
	.size GHC.IO.Handle.Types.$fOrdBufferMode_$c>_entry, .-GHC.IO.Handle.Types.$fOrdBufferMode_$c>_entry


==================== Asm code ====================
2018-03-16 16:03:22.970901695 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$c>_info
.type GHC.IO.Handle.Types.$fOrdBufferMode_$c>_info, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$c>_info:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c>_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.979859716 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_closure
.type GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_closure, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_closure:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_info


==================== Asm code ====================
2018-03-16 16:03:22.980673751 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_entry
.type GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_entry, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_entry:
_c8fWI:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8fWJ
_c8fWK:
	leaq block_c8fWA_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8fWA
_c8fWB:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fWJ:
	leaq GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_entry, .-GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_entry


==================== Asm code ====================
2018-03-16 16:03:22.981349826 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_info
.type GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_info, @object
GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_info:
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:22.982291556 UTC

.section .text
.align 8
_c8fWA:
_c8fWA:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $3,%rcx
	jb _u8fYk
_c8fWG:
	leaq block_c8fXb_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rbx,%rcx
	movq 5(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8fXb
_c8fXd:
	movq (%rbx),%rax
	jmp *(%rax)
_u8fYk:
	cmpq $2,%rcx
	jb _c8fWE
_c8fWF:
	leaq block_c8fWW_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fWW
_c8fWY:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fWE:
	leaq block_c8fWN_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fWN
_c8fWP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fWA, .-_c8fWA


==================== Asm code ====================
2018-03-16 16:03:22.983038198 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fWA_info:
	.quad	_c8fWA
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.983663545 UTC

.section .text
.align 8
_c8fWN:
_c8fWN:
	leaq GHC.IO.Handle.Types.NoBuffering_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fWN, .-_c8fWN


==================== Asm code ====================
2018-03-16 16:03:22.984224885 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fWN_info:
	.quad	_c8fWN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.98489556 UTC

.section .text
.align 8
_c8fWW:
_c8fWW:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c8fX8
_c8fX4:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c8fX8:
	leaq GHC.IO.Handle.Types.LineBuffering_closure+2(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8fWW, .-_c8fWW


==================== Asm code ====================
2018-03-16 16:03:22.985521364 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fWW_info:
	.quad	_c8fWW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.986288137 UTC

.section .text
.align 8
_c8fXb:
_c8fXb:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _c8fXo
_u8fYl:
	movq %rbx,16(%rbp)
	addq $16,%rbp
	jmp _c8fYd
_c8fXo:
	leaq block_c8fXm_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 5(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8fXm
_c8fXp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fXb, .-_c8fXb


==================== Asm code ====================
2018-03-16 16:03:22.987244584 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fXb_info:
	.quad	_c8fXb
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.98801865 UTC

.section .text
.align 8
_c8fXm:
_c8fXm:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8fXw
_c8fXM:
	leaq block_c8fXK_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	testb $7,%bl
	jne _c8fXK
_c8fXN:
	movq (%rbx),%rax
	jmp *(%rax)
_c8fXw:
	leaq block_c8fXt_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8fXt
_c8fXx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fXm, .-_c8fXm


==================== Asm code ====================
2018-03-16 16:03:22.988672343 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fXm_info:
	.quad	_c8fXm
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.989672731 UTC

.section .text
.align 8
_c8fXt:
_c8fXt:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u8fYp
_u8fYq:
	addq $16,%rbp
	jmp _c8fYe
_u8fYp:
	movq 8(%rbp),%rax
	movq %rax,16(%rbp)
	addq $16,%rbp
	jmp _c8fYd
	.size _c8fXt, .-_c8fXt


==================== Asm code ====================
2018-03-16 16:03:22.990267158 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fXt_info:
	.quad	_c8fXt
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.991018444 UTC

.section .text
.align 8
_c8fXK:
_c8fXK:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u8fYm
_c8fY3:
	leaq block_c8fXW_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8fXW
_c8fXX:
	movq (%rbx),%rax
	jmp *(%rax)
_u8fYm:
	movq 16(%rbp),%rax
	movq %rax,24(%rbp)
	addq $24,%rbp
	jmp _c8fYd
	.size _c8fXK, .-_c8fXK


==================== Asm code ====================
2018-03-16 16:03:22.991672592 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fXK_info:
	.quad	_c8fXK
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.99236248 UTC

.section .text
.align 8
_c8fXW:
_c8fXW:
	leaq block_c8fY1_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8fY1
_c8fY5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fXW, .-_c8fXW


==================== Asm code ====================
2018-03-16 16:03:22.992964366 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fXW_info:
	.quad	_c8fXW
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.993671154 UTC

.section .text
.align 8
_c8fY1:
_c8fY1:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	jge _u8fYo
_u8fYn:
	addq $24,%rbp
	jmp _c8fYe
_u8fYo:
	movq 16(%rbp),%rax
	movq %rax,24(%rbp)
	addq $24,%rbp
	jmp _c8fYd
	.size _c8fY1, .-_c8fY1


==================== Asm code ====================
2018-03-16 16:03:22.994280865 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8fY1_info:
	.quad	_c8fY1
	.quad	67
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:22.995158019 UTC

.section .text
.align 8
_c8fYe:
_c8fYe:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fYe, .-_c8fYe


==================== Asm code ====================
2018-03-16 16:03:22.995798031 UTC

.section .text
.align 8
_c8fYd:
_c8fYd:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8fYd, .-_c8fYd


==================== Asm code ====================
2018-03-16 16:03:22.997639325 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fOrdBufferMode_closure
.type GHC.IO.Handle.Types.$fOrdBufferMode_closure, @object
GHC.IO.Handle.Types.$fOrdBufferMode_closure:
	.quad	GHC.Classes.C:Ord_con_info
	.quad	GHC.IO.Handle.Types.$fEqBufferMode_closure+1
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$ccompare_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c<_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c<=_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c>_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$c>=_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$cmax_closure+2
	.quad	GHC.IO.Handle.Types.$fOrdBufferMode_$cmin_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.00052622 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haOtherSide_closure
.type GHC.IO.Handle.Types.haOtherSide_closure, @object
GHC.IO.Handle.Types.haOtherSide_closure:
	.quad	GHC.IO.Handle.Types.haOtherSide_info


==================== Asm code ====================
2018-03-16 16:03:23.001232344 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.haOtherSide_entry
.type GHC.IO.Handle.Types.haOtherSide_entry, @object
GHC.IO.Handle.Types.haOtherSide_entry:
_c8g03:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8g04
_c8g05:
	leaq block_c8g00_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8g00
_c8g01:
	movq (%rbx),%rax
	jmp *(%rax)
_c8g04:
	leaq GHC.IO.Handle.Types.haOtherSide_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.haOtherSide_entry, .-GHC.IO.Handle.Types.haOtherSide_entry


==================== Asm code ====================
2018-03-16 16:03:23.002127975 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.haOtherSide_info
.type GHC.IO.Handle.Types.haOtherSide_info, @object
GHC.IO.Handle.Types.haOtherSide_info:
	.quad	GHC.IO.Handle.Types.haOtherSide_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:23.003060636 UTC

.section .text
.align 8
_c8g00:
_c8g00:
	movq 127(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8g00, .-_c8g00


==================== Asm code ====================
2018-03-16 16:03:23.003617662 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8g00_info:
	.quad	_c8g00
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:23.006216392 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haOutputNL_closure
.type GHC.IO.Handle.Types.haOutputNL_closure, @object
GHC.IO.Handle.Types.haOutputNL_closure:
	.quad	GHC.IO.Handle.Types.haOutputNL_info


==================== Asm code ====================
2018-03-16 16:03:23.006952826 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.haOutputNL_entry
.type GHC.IO.Handle.Types.haOutputNL_entry, @object
GHC.IO.Handle.Types.haOutputNL_entry:
_c8g0t:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8g0u
_c8g0v:
	leaq block_c8g0q_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8g0q
_c8g0r:
	movq (%rbx),%rax
	jmp *(%rax)
_c8g0u:
	leaq GHC.IO.Handle.Types.haOutputNL_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.haOutputNL_entry, .-GHC.IO.Handle.Types.haOutputNL_entry


==================== Asm code ====================
2018-03-16 16:03:23.007579209 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.haOutputNL_info
.type GHC.IO.Handle.Types.haOutputNL_info, @object
GHC.IO.Handle.Types.haOutputNL_info:
	.quad	GHC.IO.Handle.Types.haOutputNL_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:23.008198742 UTC

.section .text
.align 8
_c8g0q:
_c8g0q:
	movq 119(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8g0q, .-_c8g0q


==================== Asm code ====================
2018-03-16 16:03:23.008777639 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8g0q_info:
	.quad	_c8g0q
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:23.011577244 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haInputNL_closure
.type GHC.IO.Handle.Types.haInputNL_closure, @object
GHC.IO.Handle.Types.haInputNL_closure:
	.quad	GHC.IO.Handle.Types.haInputNL_info


==================== Asm code ====================
2018-03-16 16:03:23.012272287 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.haInputNL_entry
.type GHC.IO.Handle.Types.haInputNL_entry, @object
GHC.IO.Handle.Types.haInputNL_entry:
_c8g0T:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8g0U
_c8g0V:
	leaq block_c8g0Q_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8g0Q
_c8g0R:
	movq (%rbx),%rax
	jmp *(%rax)
_c8g0U:
	leaq GHC.IO.Handle.Types.haInputNL_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.haInputNL_entry, .-GHC.IO.Handle.Types.haInputNL_entry


==================== Asm code ====================
2018-03-16 16:03:23.012908565 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.haInputNL_info
.type GHC.IO.Handle.Types.haInputNL_info, @object
GHC.IO.Handle.Types.haInputNL_info:
	.quad	GHC.IO.Handle.Types.haInputNL_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:23.013876865 UTC

.section .text
.align 8
_c8g0Q:
_c8g0Q:
	movq 111(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8g0Q, .-_c8g0Q


==================== Asm code ====================
2018-03-16 16:03:23.014383919 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8g0Q_info:
	.quad	_c8g0Q
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:23.016929498 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haCodec_closure
.type GHC.IO.Handle.Types.haCodec_closure, @object
GHC.IO.Handle.Types.haCodec_closure:
	.quad	GHC.IO.Handle.Types.haCodec_info


==================== Asm code ====================
2018-03-16 16:03:23.017875335 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.haCodec_entry
.type GHC.IO.Handle.Types.haCodec_entry, @object
GHC.IO.Handle.Types.haCodec_entry:
_c8g1j:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8g1k
_c8g1l:
	leaq block_c8g1g_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8g1g
_c8g1h:
	movq (%rbx),%rax
	jmp *(%rax)
_c8g1k:
	leaq GHC.IO.Handle.Types.haCodec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.haCodec_entry, .-GHC.IO.Handle.Types.haCodec_entry


==================== Asm code ====================
2018-03-16 16:03:23.018500461 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.haCodec_info
.type GHC.IO.Handle.Types.haCodec_info, @object
GHC.IO.Handle.Types.haCodec_info:
	.quad	GHC.IO.Handle.Types.haCodec_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:23.019107858 UTC

.section .text
.align 8
_c8g1g:
_c8g1g:
	movq 103(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8g1g, .-_c8g1g


==================== Asm code ====================
2018-03-16 16:03:23.019648236 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8g1g_info:
	.quad	_c8g1g
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:23.023241565 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haDecoder_closure
.type GHC.IO.Handle.Types.haDecoder_closure, @object
GHC.IO.Handle.Types.haDecoder_closure:
	.quad	()_con_info


==================== Asm code ====================
2018-03-16 16:03:23.02485671 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haEncoder_closure
.type GHC.IO.Handle.Types.haEncoder_closure, @object
GHC.IO.Handle.Types.haEncoder_closure:
	.quad	()_con_info


==================== Asm code ====================
2018-03-16 16:03:23.027972311 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haBuffers_closure
.type GHC.IO.Handle.Types.haBuffers_closure, @object
GHC.IO.Handle.Types.haBuffers_closure:
	.quad	GHC.IO.Handle.Types.haBuffers_info


==================== Asm code ====================
2018-03-16 16:03:23.028708519 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.haBuffers_entry
.type GHC.IO.Handle.Types.haBuffers_entry, @object
GHC.IO.Handle.Types.haBuffers_entry:
_c8g1L:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8g1P
_c8g1Q:
	leaq block_c8g1I_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8g1I
_c8g1J:
	movq (%rbx),%rax
	jmp *(%rax)
_c8g1P:
	leaq GHC.IO.Handle.Types.haBuffers_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.haBuffers_entry, .-GHC.IO.Handle.Types.haBuffers_entry


==================== Asm code ====================
2018-03-16 16:03:23.029642812 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.haBuffers_info
.type GHC.IO.Handle.Types.haBuffers_info, @object
GHC.IO.Handle.Types.haBuffers_info:
	.quad	GHC.IO.Handle.Types.haBuffers_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:23.03036538 UTC

.section .text
.align 8
_c8g1I:
_c8g1I:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8g1T
_c8g1S:
	movq 79(%rbx),%rax
	movq GHC.STRef.STRef_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8g1T:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8g1I, .-_c8g1I


==================== Asm code ====================
2018-03-16 16:03:23.030967366 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8g1I_info:
	.quad	_c8g1I
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:23.033981929 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haCharBuffer_closure
.type GHC.IO.Handle.Types.haCharBuffer_closure, @object
GHC.IO.Handle.Types.haCharBuffer_closure:
	.quad	GHC.IO.Handle.Types.haCharBuffer_info


==================== Asm code ====================
2018-03-16 16:03:23.034720762 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.haCharBuffer_entry
.type GHC.IO.Handle.Types.haCharBuffer_entry, @object
GHC.IO.Handle.Types.haCharBuffer_entry:
_c8g2e:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8g2i
_c8g2j:
	leaq block_c8g2b_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8g2b
_c8g2c:
	movq (%rbx),%rax
	jmp *(%rax)
_c8g2i:
	leaq GHC.IO.Handle.Types.haCharBuffer_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.haCharBuffer_entry, .-GHC.IO.Handle.Types.haCharBuffer_entry


==================== Asm code ====================
2018-03-16 16:03:23.035377459 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.haCharBuffer_info
.type GHC.IO.Handle.Types.haCharBuffer_info, @object
GHC.IO.Handle.Types.haCharBuffer_info:
	.quad	GHC.IO.Handle.Types.haCharBuffer_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:23.036046948 UTC

.section .text
.align 8
_c8g2b:
_c8g2b:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8g2m
_c8g2l:
	movq 71(%rbx),%rax
	movq GHC.STRef.STRef_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8g2m:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8g2b, .-_c8g2b


==================== Asm code ====================
2018-03-16 16:03:23.036691098 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8g2b_info:
	.quad	_c8g2b
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:23.038241872 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haLastDecode_closure
.type GHC.IO.Handle.Types.haLastDecode_closure, @object
GHC.IO.Handle.Types.haLastDecode_closure:
	.quad	()_con_info


==================== Asm code ====================
2018-03-16 16:03:23.040970833 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haBufferMode_closure
.type GHC.IO.Handle.Types.haBufferMode_closure, @object
GHC.IO.Handle.Types.haBufferMode_closure:
	.quad	GHC.IO.Handle.Types.haBufferMode_info


==================== Asm code ====================
2018-03-16 16:03:23.042080072 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.haBufferMode_entry
.type GHC.IO.Handle.Types.haBufferMode_entry, @object
GHC.IO.Handle.Types.haBufferMode_entry:
_c8g2I:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8g2J
_c8g2K:
	leaq block_c8g2F_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8g2F
_c8g2G:
	movq (%rbx),%rax
	jmp *(%rax)
_c8g2J:
	leaq GHC.IO.Handle.Types.haBufferMode_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.haBufferMode_entry, .-GHC.IO.Handle.Types.haBufferMode_entry


==================== Asm code ====================
2018-03-16 16:03:23.042716358 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.haBufferMode_info
.type GHC.IO.Handle.Types.haBufferMode_info, @object
GHC.IO.Handle.Types.haBufferMode_info:
	.quad	GHC.IO.Handle.Types.haBufferMode_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:23.043331843 UTC

.section .text
.align 8
_c8g2F:
_c8g2F:
	movq 55(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8g2F, .-_c8g2F


==================== Asm code ====================
2018-03-16 16:03:23.04392086 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8g2F_info:
	.quad	_c8g2F
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:23.046730948 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haByteBuffer_closure
.type GHC.IO.Handle.Types.haByteBuffer_closure, @object
GHC.IO.Handle.Types.haByteBuffer_closure:
	.quad	GHC.IO.Handle.Types.haByteBuffer_info


==================== Asm code ====================
2018-03-16 16:03:23.04747431 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.haByteBuffer_entry
.type GHC.IO.Handle.Types.haByteBuffer_entry, @object
GHC.IO.Handle.Types.haByteBuffer_entry:
_c8g38:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8g3c
_c8g3d:
	leaq block_c8g35_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8g35
_c8g36:
	movq (%rbx),%rax
	jmp *(%rax)
_c8g3c:
	leaq GHC.IO.Handle.Types.haByteBuffer_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.haByteBuffer_entry, .-GHC.IO.Handle.Types.haByteBuffer_entry


==================== Asm code ====================
2018-03-16 16:03:23.048133311 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.haByteBuffer_info
.type GHC.IO.Handle.Types.haByteBuffer_info, @object
GHC.IO.Handle.Types.haByteBuffer_info:
	.quad	GHC.IO.Handle.Types.haByteBuffer_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:23.049054924 UTC

.section .text
.align 8
_c8g35:
_c8g35:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8g3g
_c8g3f:
	movq 47(%rbx),%rax
	movq GHC.STRef.STRef_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8g3g:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8g35, .-_c8g35


==================== Asm code ====================
2018-03-16 16:03:23.049684981 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8g35_info:
	.quad	_c8g35
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:23.052273488 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haType_closure
.type GHC.IO.Handle.Types.haType_closure, @object
GHC.IO.Handle.Types.haType_closure:
	.quad	GHC.IO.Handle.Types.haType_info


==================== Asm code ====================
2018-03-16 16:03:23.05302348 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.haType_entry
.type GHC.IO.Handle.Types.haType_entry, @object
GHC.IO.Handle.Types.haType_entry:
_c8g3B:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8g3C
_c8g3D:
	leaq block_c8g3y_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8g3y
_c8g3z:
	movq (%rbx),%rax
	jmp *(%rax)
_c8g3C:
	leaq GHC.IO.Handle.Types.haType_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.haType_entry, .-GHC.IO.Handle.Types.haType_entry


==================== Asm code ====================
2018-03-16 16:03:23.054031272 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.haType_info
.type GHC.IO.Handle.Types.haType_info, @object
GHC.IO.Handle.Types.haType_info:
	.quad	GHC.IO.Handle.Types.haType_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:23.054668389 UTC

.section .text
.align 8
_c8g3y:
_c8g3y:
	movq 39(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8g3y, .-_c8g3y


==================== Asm code ====================
2018-03-16 16:03:23.055288199 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8g3y_info:
	.quad	_c8g3y
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:23.05717602 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.haDevice_closure
.type GHC.IO.Handle.Types.haDevice_closure, @object
GHC.IO.Handle.Types.haDevice_closure:
	.quad	()_con_info


==================== Asm code ====================
2018-03-16 16:03:23.05969773 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.outputNL_closure
.type GHC.IO.Handle.Types.outputNL_closure, @object
GHC.IO.Handle.Types.outputNL_closure:
	.quad	GHC.IO.Handle.Types.outputNL_info


==================== Asm code ====================
2018-03-16 16:03:23.06042897 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.outputNL_entry
.type GHC.IO.Handle.Types.outputNL_entry, @object
GHC.IO.Handle.Types.outputNL_entry:
_c8g42:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8g43
_c8g44:
	leaq block_c8g3Z_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8g3Z
_c8g40:
	movq (%rbx),%rax
	jmp *(%rax)
_c8g43:
	leaq GHC.IO.Handle.Types.outputNL_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.outputNL_entry, .-GHC.IO.Handle.Types.outputNL_entry


==================== Asm code ====================
2018-03-16 16:03:23.06108945 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.outputNL_info
.type GHC.IO.Handle.Types.outputNL_info, @object
GHC.IO.Handle.Types.outputNL_info:
	.quad	GHC.IO.Handle.Types.outputNL_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:23.061760333 UTC

.section .text
.align 8
_c8g3Z:
_c8g3Z:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8g3Z, .-_c8g3Z


==================== Asm code ====================
2018-03-16 16:03:23.062343457 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8g3Z_info:
	.quad	_c8g3Z
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:23.065181474 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.inputNL_closure
.type GHC.IO.Handle.Types.inputNL_closure, @object
GHC.IO.Handle.Types.inputNL_closure:
	.quad	GHC.IO.Handle.Types.inputNL_info


==================== Asm code ====================
2018-03-16 16:03:23.066245067 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.inputNL_entry
.type GHC.IO.Handle.Types.inputNL_entry, @object
GHC.IO.Handle.Types.inputNL_entry:
_c8g4s:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8g4t
_c8g4u:
	leaq block_c8g4p_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8g4p
_c8g4q:
	movq (%rbx),%rax
	jmp *(%rax)
_c8g4t:
	leaq GHC.IO.Handle.Types.inputNL_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.inputNL_entry, .-GHC.IO.Handle.Types.inputNL_entry


==================== Asm code ====================
2018-03-16 16:03:23.066882292 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.inputNL_info
.type GHC.IO.Handle.Types.inputNL_info, @object
GHC.IO.Handle.Types.inputNL_info:
	.quad	GHC.IO.Handle.Types.inputNL_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:23.06747939 UTC

.section .text
.align 8
_c8g4p:
_c8g4p:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8g4p, .-_c8g4p


==================== Asm code ====================
2018-03-16 16:03:23.068072499 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8g4p_info:
	.quad	_c8g4p
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:23.071172187 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.isReadableHandleType_closure
.type GHC.IO.Handle.Types.isReadableHandleType_closure, @object
GHC.IO.Handle.Types.isReadableHandleType_closure:
	.quad	GHC.IO.Handle.Types.isReadableHandleType_info


==================== Asm code ====================
2018-03-16 16:03:23.071916386 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.isReadableHandleType_entry
.type GHC.IO.Handle.Types.isReadableHandleType_entry, @object
GHC.IO.Handle.Types.isReadableHandleType_entry:
_c8g4X:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8g4Y
_c8g4Z:
	leaq block_c8g4P_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8g4P
_c8g4Q:
	movq (%rbx),%rax
	jmp *(%rax)
_c8g4Y:
	leaq GHC.IO.Handle.Types.isReadableHandleType_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.isReadableHandleType_entry, .-GHC.IO.Handle.Types.isReadableHandleType_entry


==================== Asm code ====================
2018-03-16 16:03:23.072546641 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.isReadableHandleType_info
.type GHC.IO.Handle.Types.isReadableHandleType_info, @object
GHC.IO.Handle.Types.isReadableHandleType_info:
	.quad	GHC.IO.Handle.Types.isReadableHandleType_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:23.073293335 UTC

.section .text
.align 8
_c8g4P:
_c8g4P:
	andl $7,%ebx
	cmpq $3,%rbx
	je _c8g4V
_u8g59:
	cmpq $6,%rbx
	je _c8g4V
_c8g4T:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8g4V:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8g4P, .-_c8g4P


==================== Asm code ====================
2018-03-16 16:03:23.073879467 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8g4P_info:
	.quad	_c8g4P
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:23.07663142 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.isWritableHandleType_closure
.type GHC.IO.Handle.Types.isWritableHandleType_closure, @object
GHC.IO.Handle.Types.isWritableHandleType_closure:
	.quad	GHC.IO.Handle.Types.isWritableHandleType_info


==================== Asm code ====================
2018-03-16 16:03:23.077353239 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.isWritableHandleType_entry
.type GHC.IO.Handle.Types.isWritableHandleType_entry, @object
GHC.IO.Handle.Types.isWritableHandleType_entry:
_c8g5D:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8g5E
_c8g5F:
	leaq block_c8g5u_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8g5u
_c8g5v:
	movq (%rbx),%rax
	jmp *(%rax)
_c8g5E:
	leaq GHC.IO.Handle.Types.isWritableHandleType_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.isWritableHandleType_entry, .-GHC.IO.Handle.Types.isWritableHandleType_entry


==================== Asm code ====================
2018-03-16 16:03:23.07820357 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.isWritableHandleType_info
.type GHC.IO.Handle.Types.isWritableHandleType_info, @object
GHC.IO.Handle.Types.isWritableHandleType_info:
	.quad	GHC.IO.Handle.Types.isWritableHandleType_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:23.078919301 UTC

.section .text
.align 8
_c8g5u:
_c8g5u:
	andl $7,%ebx
	cmpq $4,%rbx
	jb _c8g5y
_u8g5S:
	cmpq $5,%rbx
	jne _c8g5B
_c8g5B:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8g5y:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8g5u, .-_c8g5u


==================== Asm code ====================
2018-03-16 16:03:23.079528147 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8g5u_info:
	.quad	_c8g5u
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:23.082101957 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.isReadWriteHandleType_closure
.type GHC.IO.Handle.Types.isReadWriteHandleType_closure, @object
GHC.IO.Handle.Types.isReadWriteHandleType_closure:
	.quad	GHC.IO.Handle.Types.isReadWriteHandleType_info


==================== Asm code ====================
2018-03-16 16:03:23.082815599 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.isReadWriteHandleType_entry
.type GHC.IO.Handle.Types.isReadWriteHandleType_entry, @object
GHC.IO.Handle.Types.isReadWriteHandleType_entry:
_c8g6k:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8g6l
_c8g6m:
	leaq block_c8g6d_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8g6d
_c8g6e:
	movq (%rbx),%rax
	jmp *(%rax)
_c8g6l:
	leaq GHC.IO.Handle.Types.isReadWriteHandleType_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.isReadWriteHandleType_entry, .-GHC.IO.Handle.Types.isReadWriteHandleType_entry


==================== Asm code ====================
2018-03-16 16:03:23.083455317 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.isReadWriteHandleType_info
.type GHC.IO.Handle.Types.isReadWriteHandleType_info, @object
GHC.IO.Handle.Types.isReadWriteHandleType_info:
	.quad	GHC.IO.Handle.Types.isReadWriteHandleType_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:23.084126828 UTC

.section .text
.align 8
_c8g6d:
_c8g6d:
	andl $7,%ebx
	cmpq $6,%rbx
	je _c8g6i
_c8g6h:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8g6i:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8g6d, .-_c8g6d


==================== Asm code ====================
2018-03-16 16:03:23.084732555 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8g6d_info:
	.quad	_c8g6d
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:23.086502267 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.nativeNewline_closure
.type GHC.IO.Handle.Types.nativeNewline_closure, @object
GHC.IO.Handle.Types.nativeNewline_closure:
	.quad	GHC.IO.Handle.Types.LF_con_info


==================== Asm code ====================
2018-03-16 16:03:23.088110897 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.universalNewlineMode_closure
.type GHC.IO.Handle.Types.universalNewlineMode_closure, @object
GHC.IO.Handle.Types.universalNewlineMode_closure:
	.quad	GHC.IO.Handle.Types.NewlineMode_con_info
	.quad	GHC.IO.Handle.Types.CRLF_closure+2
	.quad	GHC.IO.Handle.Types.LF_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.089810092 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.nativeNewlineMode_closure
.type GHC.IO.Handle.Types.nativeNewlineMode_closure, @object
GHC.IO.Handle.Types.nativeNewlineMode_closure:
	.quad	GHC.IO.Handle.Types.NewlineMode_con_info
	.quad	GHC.IO.Handle.Types.LF_closure+1
	.quad	GHC.IO.Handle.Types.LF_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.091645164 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.noNewlineTranslation_closure
.type GHC.IO.Handle.Types.noNewlineTranslation_closure, @object
GHC.IO.Handle.Types.noNewlineTranslation_closure:
	.quad	stg_IND_STATIC_info
	.quad	GHC.IO.Handle.Types.nativeNewlineMode_closure+1
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:23.093217205 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.showHandle1_bytes
.type GHC.IO.Handle.Types.showHandle1_bytes, @object
GHC.IO.Handle.Types.showHandle1_bytes:
	.asciz "{handle: "


==================== Asm code ====================
2018-03-16 16:03:23.096705783 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.showHandle_closure
.type GHC.IO.Handle.Types.showHandle_closure, @object
GHC.IO.Handle.Types.showHandle_closure:
	.quad	GHC.IO.Handle.Types.showHandle_info


==================== Asm code ====================
2018-03-16 16:03:23.097375908 UTC

.section .text
.align 8
sat_s8epM_entry:
_c8g71:
	movq 16(%rbx),%rsi
	leaq GHC.IO.Handle.Types.$fReadNewlineMode5_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
	.size sat_s8epM_entry, .-sat_s8epM_entry


==================== Asm code ====================
2018-03-16 16:03:23.097928944 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8epM_info:
	.quad	sat_s8epM_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:03:23.098872499 UTC

.section .text
.align 8
sat_s8epN_entry:
_c8g74:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8g75
_c8g76:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8g78
_c8g77:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s8epM_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c8g78:
	movq $24,904(%r13)
_c8g75:
	jmp *-16(%r13)
	.size sat_s8epN_entry, .-sat_s8epN_entry


==================== Asm code ====================
2018-03-16 16:03:23.099507596 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8epN_info:
	.quad	sat_s8epN_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:03:23.100160964 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.showHandle_entry
.type GHC.IO.Handle.Types.showHandle_entry, @object
GHC.IO.Handle.Types.showHandle_entry:
_c8g79:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8g7d
_c8g7c:
	leaq sat_s8epN_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%rsi
	leaq GHC.IO.Handle.Types.showHandle1_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c8g7d:
	movq $32,904(%r13)
	leaq GHC.IO.Handle.Types.showHandle_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.showHandle_entry, .-GHC.IO.Handle.Types.showHandle_entry


==================== Asm code ====================
2018-03-16 16:03:23.100791674 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.showHandle_info
.type GHC.IO.Handle.Types.showHandle_info, @object
GHC.IO.Handle.Types.showHandle_info:
	.quad	GHC.IO.Handle.Types.showHandle_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:23.1037958 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_closure
.type GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_closure, @object
GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_info


==================== Asm code ====================
2018-03-16 16:03:23.104537037 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_entry
.type GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_entry, @object
GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_entry:
_c8g7D:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8g7E
_c8g7F:
	leaq block_c8g7w_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %rdi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8g7w
_c8g7x:
	movq (%rbx),%rax
	jmp *(%rax)
_c8g7E:
	leaq GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_entry, .-GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 16:03:23.105173762 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_info
.type GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_info, @object
GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_info:
	.quad	GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:03:23.106083212 UTC

.section .text
.align 8
_c8g7w:
_c8g7w:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8g7A
_c8g7B:
	movq %rax,%rsi
	movq 6(%rbx),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.Types.showHandle_entry
_c8g7A:
	movq %rax,%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.Types.showHandle_entry
	.size _c8g7w, .-_c8g7w


==================== Asm code ====================
2018-03-16 16:03:23.10669433 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8g7w_info:
	.quad	_c8g7w
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:23.111008486 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandle_$cshow_closure
.type GHC.IO.Handle.Types.$fShowHandle_$cshow_closure, @object
GHC.IO.Handle.Types.$fShowHandle_$cshow_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandle_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:23.111674974 UTC

.section .text
.align 8
sat_s8eq1_entry:
_c8g8c:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8g8d
_c8g8e:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fReadNewlineMode4_closure(%rip),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c8g8d:
	jmp *-16(%r13)
	.size sat_s8eq1_entry, .-sat_s8eq1_entry


==================== Asm code ====================
2018-03-16 16:03:23.112264531 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8eq1_info:
	.quad	sat_s8eq1_entry
	.quad	1
	.quad	4294967312
	.quad	S8evg_srt+520


==================== Asm code ====================
2018-03-16 16:03:23.113196704 UTC

.section .text
.align 8
sat_s8eq5_entry:
_c8g8l:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8g8m
_c8g8n:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq GHC.IO.Handle.Types.$fReadNewlineMode4_closure(%rip),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c8g8m:
	jmp *-16(%r13)
	.size sat_s8eq5_entry, .-sat_s8eq5_entry


==================== Asm code ====================
2018-03-16 16:03:23.113815832 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8eq5_info:
	.quad	sat_s8eq5_entry
	.quad	1
	.quad	4294967312
	.quad	S8evg_srt+520


==================== Asm code ====================
2018-03-16 16:03:23.114508532 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandle_$cshow_entry
.type GHC.IO.Handle.Types.$fShowHandle_$cshow_entry, @object
GHC.IO.Handle.Types.$fShowHandle_$cshow_entry:
_c8g8s:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8g8t
_c8g8u:
	leaq block_c8g83_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8g83
_c8g84:
	movq (%rbx),%rax
	jmp *(%rax)
_c8g8t:
	leaq GHC.IO.Handle.Types.$fShowHandle_$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowHandle_$cshow_entry, .-GHC.IO.Handle.Types.$fShowHandle_$cshow_entry


==================== Asm code ====================
2018-03-16 16:03:23.115150357 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandle_$cshow_info
.type GHC.IO.Handle.Types.$fShowHandle_$cshow_info, @object
GHC.IO.Handle.Types.$fShowHandle_$cshow_info:
	.quad	GHC.IO.Handle.Types.$fShowHandle_$cshow_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S8evg_srt+520


==================== Asm code ====================
2018-03-16 16:03:23.115962715 UTC

.section .text
.align 8
_c8g83:
_c8g83:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8g8p
_c8g8q:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8g8A
_c8g8z:
	movq 6(%rbx),%rax
	leaq sat_s8eq5_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	leaq GHC.IO.Handle.Types.showHandle1_bytes(%rip),%r14
	addq $8,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c8g8A:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c8g8p:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8g8A
_c8g8w:
	movq 7(%rbx),%rax
	leaq sat_s8eq1_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	leaq GHC.IO.Handle.Types.showHandle1_bytes(%rip),%r14
	addq $8,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
	.size _c8g83, .-_c8g83


==================== Asm code ====================
2018-03-16 16:03:23.116708292 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8g83_info:
	.quad	_c8g83
	.quad	0
	.quad	4294967326
	.quad	S8evg_srt+520


==================== Asm code ====================
2018-03-16 16:03:23.11963007 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandle1_closure
.type GHC.IO.Handle.Types.$fShowHandle1_closure, @object
GHC.IO.Handle.Types.$fShowHandle1_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandle1_info


==================== Asm code ====================
2018-03-16 16:03:23.120538097 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandle1_entry
.type GHC.IO.Handle.Types.$fShowHandle1_entry, @object
GHC.IO.Handle.Types.$fShowHandle1_entry:
_c8g9b:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8g9c
_c8g9d:
	leaq block_c8g94_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8g94
_c8g95:
	movq (%rbx),%rax
	jmp *(%rax)
_c8g9c:
	leaq GHC.IO.Handle.Types.$fShowHandle1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.$fShowHandle1_entry, .-GHC.IO.Handle.Types.$fShowHandle1_entry


==================== Asm code ====================
2018-03-16 16:03:23.121190776 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandle1_info
.type GHC.IO.Handle.Types.$fShowHandle1_info, @object
GHC.IO.Handle.Types.$fShowHandle1_info:
	.quad	GHC.IO.Handle.Types.$fShowHandle1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:23.122191671 UTC

.section .text
.align 8
_c8g94:
_c8g94:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c8g98
_c8g99:
	movq %rax,%rsi
	movq 6(%rbx),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.Types.showHandle_entry
_c8g98:
	movq %rax,%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.Types.showHandle_entry
	.size _c8g94, .-_c8g94


==================== Asm code ====================
2018-03-16 16:03:23.122817019 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8g94_info:
	.quad	_c8g94
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:23.124912107 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandle_$cshowList_closure
.type GHC.IO.Handle.Types.$fShowHandle_$cshowList_closure, @object
GHC.IO.Handle.Types.$fShowHandle_$cshowList_closure:
	.quad	GHC.IO.Handle.Types.$fShowHandle_$cshowList_info


==================== Asm code ====================
2018-03-16 16:03:23.125576879 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.$fShowHandle_$cshowList_entry
.type GHC.IO.Handle.Types.$fShowHandle_$cshowList_entry, @object
GHC.IO.Handle.Types.$fShowHandle_$cshowList_entry:
_c8g9B:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.IO.Handle.Types.$fShowHandle1_closure+2(%rip),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
	.size GHC.IO.Handle.Types.$fShowHandle_$cshowList_entry, .-GHC.IO.Handle.Types.$fShowHandle_$cshowList_entry


==================== Asm code ====================
2018-03-16 16:03:23.126183815 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandle_$cshowList_info
.type GHC.IO.Handle.Types.$fShowHandle_$cshowList_info, @object
GHC.IO.Handle.Types.$fShowHandle_$cshowList_info:
	.quad	GHC.IO.Handle.Types.$fShowHandle_$cshowList_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:23.128196136 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$fShowHandle_closure
.type GHC.IO.Handle.Types.$fShowHandle_closure, @object
GHC.IO.Handle.Types.$fShowHandle_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.IO.Handle.Types.$fShowHandle_$cshowsPrec_closure+3
	.quad	GHC.IO.Handle.Types.$fShowHandle_$cshow_closure+1
	.quad	GHC.IO.Handle.Types.$fShowHandle_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:23.129854574 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$trModule4_bytes
.type GHC.IO.Handle.Types.$trModule4_bytes, @object
GHC.IO.Handle.Types.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:03:23.131503999 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$trModule3_closure
.type GHC.IO.Handle.Types.$trModule3_closure, @object
GHC.IO.Handle.Types.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:03:23.133121108 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$trModule2_bytes
.type GHC.IO.Handle.Types.$trModule2_bytes, @object
GHC.IO.Handle.Types.$trModule2_bytes:
	.asciz "GHC.IO.Handle.Types"


==================== Asm code ====================
2018-03-16 16:03:23.135023628 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$trModule1_closure
.type GHC.IO.Handle.Types.$trModule1_closure, @object
GHC.IO.Handle.Types.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:03:23.136682314 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$trModule_closure
.type GHC.IO.Handle.Types.$trModule_closure, @object
GHC.IO.Handle.Types.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.IO.Handle.Types.$trModule3_closure+1
	.quad	GHC.IO.Handle.Types.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.138409469 UTC

.section .data
.align 8
.align 1
$krep_r8a59_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcInt_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.140262919 UTC

.section .data
.align 8
.align 1
$krep1_r8a5a_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Encoding.Types.$tcTextEncoding_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.141988673 UTC

.section .data
.align 8
.align 1
$krep2_r8a5b_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Word.$tcWord8_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.143571438 UTC

.section .data
.align 8
.align 1
$krep3_r8a5c_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcChar_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.145271916 UTC

.section .data
.align 8
.align 1
$krep4_r8a5d_closure:
	.quad	:_con_info
	.quad	$krep_r8a59_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.147162777 UTC

.section .data
.align 8
.align 1
$krep5_r8a5e_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Base.$tcMaybe_closure
	.quad	$krep4_r8a5d_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.14882166 UTC

.section .data
.align 8
.align 1
$krep6_r8a5f_closure:
	.quad	:_con_info
	.quad	$krep1_r8a5a_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.150468003 UTC

.section .data
.align 8
.align 1
$krep7_r8a5g_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Base.$tcMaybe_closure
	.quad	$krep6_r8a5f_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.152158909 UTC

.section .data
.align 8
.align 1
$krep8_r8a5h_closure:
	.quad	:_con_info
	.quad	$krep3_r8a5c_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.154001864 UTC

.section .data
.align 8
.align 1
$krep9_r8a5i_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Buffer.$tcBuffer_closure
	.quad	$krep8_r8a5h_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.155589532 UTC

.section .data
.align 8
.align 1
$krep10_r8a5j_closure:
	.quad	:_con_info
	.quad	$krep9_r8a5i_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.157283144 UTC

.section .data
.align 8
.align 1
$krep11_r8a5k_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IORef.$tcIORef_closure
	.quad	$krep10_r8a5j_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.158885579 UTC

.section .data
.align 8
.align 1
$krep12_r8a5l_closure:
	.quad	:_con_info
	.quad	$krep2_r8a5b_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.160696785 UTC

.section .data
.align 8
.align 1
$krep13_r8a5m_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Buffer.$tcBuffer_closure
	.quad	$krep12_r8a5l_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.162296247 UTC

.section .data
.align 8
.align 1
$krep14_r8a5n_closure:
	.quad	:_con_info
	.quad	$krep13_r8a5m_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.163961746 UTC

.section .data
.align 8
.align 1
$krep15_r8a5o_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IORef.$tcIORef_closure
	.quad	$krep14_r8a5n_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.165798542 UTC

.section .data
.align 8
.align 1
$krep16_r8a5p_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tc[]_closure
	.quad	$krep8_r8a5h_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.167372375 UTC

.section .data
.align 8
.align 1
$krep17_r8a5q_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	2


==================== Asm code ====================
2018-03-16 16:03:23.169000043 UTC

.section .data
.align 8
.align 1
$krep18_r8a5r_closure:
	.quad	:_con_info
	.quad	$krep17_r8a5q_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.170641331 UTC

.section .data
.align 8
.align 1
$krep19_r8a5s_closure:
	.quad	:_con_info
	.quad	$krep3_r8a5c_closure+1
	.quad	$krep18_r8a5r_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.172563195 UTC

.section .data
.align 8
.align 1
$krep20_r8a5t_closure:
	.quad	:_con_info
	.quad	$krep2_r8a5b_closure+1
	.quad	$krep19_r8a5s_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.174742878 UTC

.section .data
.align 8
.align 1
$krep21_r8a5u_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Encoding.Types.$tcBufferCodec_closure
	.quad	$krep20_r8a5t_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.176581856 UTC

.section .data
.align 8
.align 1
$krep22_r8a5v_closure:
	.quad	:_con_info
	.quad	$krep21_r8a5u_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.178488385 UTC

.section .data
.align 8
.align 1
$krep23_r8a5w_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Base.$tcMaybe_closure
	.quad	$krep22_r8a5v_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.180650587 UTC

.section .data
.align 8
.align 1
$krep24_r8a5x_closure:
	.quad	:_con_info
	.quad	$krep17_r8a5q_closure+2
	.quad	$krep14_r8a5n_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.182424377 UTC

.section .data
.align 8
.align 1
$krep25_r8a5y_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Tuple.$tc(,)_closure
	.quad	$krep24_r8a5x_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.184398202 UTC

.section .data
.align 8
.align 1
$krep26_r8a5z_closure:
	.quad	:_con_info
	.quad	$krep25_r8a5y_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.189584429 UTC

.section .data
.align 8
.align 1
$krep27_r8a5A_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IORef.$tcIORef_closure
	.quad	$krep26_r8a5z_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.191444933 UTC

.section .data
.align 8
.align 1
$krep28_r8a5B_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 16:03:23.193389506 UTC

.section .data
.align 8
.align 1
$krep29_r8a5C_closure:
	.quad	:_con_info
	.quad	$krep28_r8a5B_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.195265738 UTC

.section .data
.align 8
.align 1
$krep30_r8a5D_closure:
	.quad	:_con_info
	.quad	$krep2_r8a5b_closure+1
	.quad	$krep29_r8a5C_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.197543572 UTC

.section .data
.align 8
.align 1
$krep31_r8a5E_closure:
	.quad	:_con_info
	.quad	$krep3_r8a5c_closure+1
	.quad	$krep30_r8a5D_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.19936795 UTC

.section .data
.align 8
.align 1
$krep32_r8a5F_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Encoding.Types.$tcBufferCodec_closure
	.quad	$krep31_r8a5E_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.201216682 UTC

.section .data
.align 8
.align 1
$krep33_r8a5G_closure:
	.quad	:_con_info
	.quad	$krep32_r8a5F_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.203657312 UTC

.section .data
.align 8
.align 1
$krep34_r8a5H_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Base.$tcMaybe_closure
	.quad	$krep33_r8a5G_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.205891172 UTC

.section .data
.align 8
.align 1
$krep35_r8a5I_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:23.207736923 UTC

.section .data
.align 8
.align 1
$krep36_r8a5J_closure:
	.quad	:_con_info
	.quad	$krep35_r8a5I_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.209669473 UTC

.section .data
.align 8
.align 1
$krep37_r8a5K_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.ForeignPtr.$tcForeignPtr_closure
	.quad	$krep36_r8a5J_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.211757135 UTC

.section .data
.align 8
.align 1
$krep38_r8a5L_closure:
	.quad	:_con_info
	.quad	GHC.Types.krep$*_closure
	.quad	$krep36_r8a5J_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.213516488 UTC

.section .data
.align 8
.align 1
$krep39_r8a5M_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	Data.Typeable.Internal.$tcTypeable_closure
	.quad	$krep38_r8a5L_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.215188379 UTC

.section .data
.align 8
.align 1
$krep40_r8a5N_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Device.$tcIODevice_closure
	.quad	$krep36_r8a5J_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.216893445 UTC

.section .data
.align 8
.align 1
$krep41_r8a5O_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.BufferedIO.$tcBufferedIO_closure
	.quad	$krep36_r8a5J_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.219213328 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tcBufferList2_bytes
.type GHC.IO.Handle.Types.$tcBufferList2_bytes, @object
GHC.IO.Handle.Types.$tcBufferList2_bytes:
	.asciz "BufferList"


==================== Asm code ====================
2018-03-16 16:03:23.22076035 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcBufferList1_closure
.type GHC.IO.Handle.Types.$tcBufferList1_closure, @object
GHC.IO.Handle.Types.$tcBufferList1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tcBufferList2_bytes


==================== Asm code ====================
2018-03-16 16:03:23.22248703 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcBufferList_closure
.type GHC.IO.Handle.Types.$tcBufferList_closure, @object
GHC.IO.Handle.Types.$tcBufferList_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tcBufferList1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	-1844465517124434772
	.quad	-282234120389064362
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.224227873 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'BufferListNil1_closure
.type GHC.IO.Handle.Types.$tc'BufferListNil1_closure, @object
GHC.IO.Handle.Types.$tc'BufferListNil1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Handle.Types.$tcBufferList_closure+1
	.quad	$krep36_r8a5J_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.22609013 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'BufferListNil3_bytes
.type GHC.IO.Handle.Types.$tc'BufferListNil3_bytes, @object
GHC.IO.Handle.Types.$tc'BufferListNil3_bytes:
	.asciz "'BufferListNil"


==================== Asm code ====================
2018-03-16 16:03:23.227681282 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'BufferListNil2_closure
.type GHC.IO.Handle.Types.$tc'BufferListNil2_closure, @object
GHC.IO.Handle.Types.$tc'BufferListNil2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'BufferListNil3_bytes


==================== Asm code ====================
2018-03-16 16:03:23.229916941 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'BufferListNil_closure
.type GHC.IO.Handle.Types.$tc'BufferListNil_closure, @object
GHC.IO.Handle.Types.$tc'BufferListNil_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'BufferListNil2_closure+1
	.quad	GHC.IO.Handle.Types.$tc'BufferListNil1_closure+1
	.quad	1776148480580179033
	.quad	-5265559080644376680
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.231834881 UTC

.section .data
.align 8
.align 1
$krep42_r8a5P_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.IO.Handle.Types.$tc'BufferListNil1_closure+1
	.quad	GHC.IO.Handle.Types.$tc'BufferListNil1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.233563615 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'BufferListCons1_closure
.type GHC.IO.Handle.Types.$tc'BufferListCons1_closure, @object
GHC.IO.Handle.Types.$tc'BufferListCons1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep37_r8a5K_closure+1
	.quad	$krep42_r8a5P_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.235124118 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'BufferListCons3_bytes
.type GHC.IO.Handle.Types.$tc'BufferListCons3_bytes, @object
GHC.IO.Handle.Types.$tc'BufferListCons3_bytes:
	.asciz "'BufferListCons"


==================== Asm code ====================
2018-03-16 16:03:23.236748532 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'BufferListCons2_closure
.type GHC.IO.Handle.Types.$tc'BufferListCons2_closure, @object
GHC.IO.Handle.Types.$tc'BufferListCons2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'BufferListCons3_bytes


==================== Asm code ====================
2018-03-16 16:03:23.238695009 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'BufferListCons_closure
.type GHC.IO.Handle.Types.$tc'BufferListCons_closure, @object
GHC.IO.Handle.Types.$tc'BufferListCons_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'BufferListCons2_closure+1
	.quad	GHC.IO.Handle.Types.$tc'BufferListCons1_closure+4
	.quad	-1194397533895196677
	.quad	274626690118510806
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.240445708 UTC

.section .data
.align 8
.align 1
$krep43_r8a5Q_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Handle.Types.$tcBufferList_closure+1
	.quad	$krep8_r8a5h_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.242139975 UTC

.section .data
.align 8
.align 1
$krep44_r8a5R_closure:
	.quad	:_con_info
	.quad	$krep43_r8a5Q_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.243769298 UTC

.section .data
.align 8
.align 1
$krep45_r8a5S_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IORef.$tcIORef_closure
	.quad	$krep44_r8a5R_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.245961318 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tcHandleType2_bytes
.type GHC.IO.Handle.Types.$tcHandleType2_bytes, @object
GHC.IO.Handle.Types.$tcHandleType2_bytes:
	.asciz "HandleType"


==================== Asm code ====================
2018-03-16 16:03:23.247538931 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcHandleType1_closure
.type GHC.IO.Handle.Types.$tcHandleType1_closure, @object
GHC.IO.Handle.Types.$tcHandleType1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tcHandleType2_bytes


==================== Asm code ====================
2018-03-16 16:03:23.249276498 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcHandleType_closure
.type GHC.IO.Handle.Types.$tcHandleType_closure, @object
GHC.IO.Handle.Types.$tcHandleType_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tcHandleType1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-5794693333532234024
	.quad	-3434572023584488257
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.251202931 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'AppendHandle1_closure
.type GHC.IO.Handle.Types.$tc'AppendHandle1_closure, @object
GHC.IO.Handle.Types.$tc'AppendHandle1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Handle.Types.$tcHandleType_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.252852684 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'ClosedHandle2_bytes
.type GHC.IO.Handle.Types.$tc'ClosedHandle2_bytes, @object
GHC.IO.Handle.Types.$tc'ClosedHandle2_bytes:
	.asciz "'ClosedHandle"


==================== Asm code ====================
2018-03-16 16:03:23.254497992 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'ClosedHandle1_closure
.type GHC.IO.Handle.Types.$tc'ClosedHandle1_closure, @object
GHC.IO.Handle.Types.$tc'ClosedHandle1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'ClosedHandle2_bytes


==================== Asm code ====================
2018-03-16 16:03:23.256281258 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'ClosedHandle_closure
.type GHC.IO.Handle.Types.$tc'ClosedHandle_closure, @object
GHC.IO.Handle.Types.$tc'ClosedHandle_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'ClosedHandle1_closure+1
	.quad	GHC.IO.Handle.Types.$tc'AppendHandle1_closure+1
	.quad	3827246897052092772
	.quad	908733983357893198
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.258654602 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'SemiClosedHandle2_bytes
.type GHC.IO.Handle.Types.$tc'SemiClosedHandle2_bytes, @object
GHC.IO.Handle.Types.$tc'SemiClosedHandle2_bytes:
	.asciz "'SemiClosedHandle"


==================== Asm code ====================
2018-03-16 16:03:23.260287585 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'SemiClosedHandle1_closure
.type GHC.IO.Handle.Types.$tc'SemiClosedHandle1_closure, @object
GHC.IO.Handle.Types.$tc'SemiClosedHandle1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'SemiClosedHandle2_bytes


==================== Asm code ====================
2018-03-16 16:03:23.262087194 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'SemiClosedHandle_closure
.type GHC.IO.Handle.Types.$tc'SemiClosedHandle_closure, @object
GHC.IO.Handle.Types.$tc'SemiClosedHandle_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'SemiClosedHandle1_closure+1
	.quad	GHC.IO.Handle.Types.$tc'AppendHandle1_closure+1
	.quad	9212351547956271402
	.quad	6570718180183054490
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.263801133 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'ReadHandle2_bytes
.type GHC.IO.Handle.Types.$tc'ReadHandle2_bytes, @object
GHC.IO.Handle.Types.$tc'ReadHandle2_bytes:
	.asciz "'ReadHandle"


==================== Asm code ====================
2018-03-16 16:03:23.265654178 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'ReadHandle1_closure
.type GHC.IO.Handle.Types.$tc'ReadHandle1_closure, @object
GHC.IO.Handle.Types.$tc'ReadHandle1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'ReadHandle2_bytes


==================== Asm code ====================
2018-03-16 16:03:23.267301496 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'ReadHandle_closure
.type GHC.IO.Handle.Types.$tc'ReadHandle_closure, @object
GHC.IO.Handle.Types.$tc'ReadHandle_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'ReadHandle1_closure+1
	.quad	GHC.IO.Handle.Types.$tc'AppendHandle1_closure+1
	.quad	269968663592081974
	.quad	-973020763998651067
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.268956141 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'WriteHandle2_bytes
.type GHC.IO.Handle.Types.$tc'WriteHandle2_bytes, @object
GHC.IO.Handle.Types.$tc'WriteHandle2_bytes:
	.asciz "'WriteHandle"


==================== Asm code ====================
2018-03-16 16:03:23.271192032 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'WriteHandle1_closure
.type GHC.IO.Handle.Types.$tc'WriteHandle1_closure, @object
GHC.IO.Handle.Types.$tc'WriteHandle1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'WriteHandle2_bytes


==================== Asm code ====================
2018-03-16 16:03:23.273001579 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'WriteHandle_closure
.type GHC.IO.Handle.Types.$tc'WriteHandle_closure, @object
GHC.IO.Handle.Types.$tc'WriteHandle_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'WriteHandle1_closure+1
	.quad	GHC.IO.Handle.Types.$tc'AppendHandle1_closure+1
	.quad	-422220260101352534
	.quad	4783872735135983851
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.274703179 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'AppendHandle3_bytes
.type GHC.IO.Handle.Types.$tc'AppendHandle3_bytes, @object
GHC.IO.Handle.Types.$tc'AppendHandle3_bytes:
	.asciz "'AppendHandle"


==================== Asm code ====================
2018-03-16 16:03:23.27639065 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'AppendHandle2_closure
.type GHC.IO.Handle.Types.$tc'AppendHandle2_closure, @object
GHC.IO.Handle.Types.$tc'AppendHandle2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'AppendHandle3_bytes


==================== Asm code ====================
2018-03-16 16:03:23.27859062 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'AppendHandle_closure
.type GHC.IO.Handle.Types.$tc'AppendHandle_closure, @object
GHC.IO.Handle.Types.$tc'AppendHandle_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'AppendHandle2_closure+1
	.quad	GHC.IO.Handle.Types.$tc'AppendHandle1_closure+1
	.quad	-23263954667158069
	.quad	8911069045719960050
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.280356302 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'ReadWriteHandle2_bytes
.type GHC.IO.Handle.Types.$tc'ReadWriteHandle2_bytes, @object
GHC.IO.Handle.Types.$tc'ReadWriteHandle2_bytes:
	.asciz "'ReadWriteHandle"


==================== Asm code ====================
2018-03-16 16:03:23.282201355 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'ReadWriteHandle1_closure
.type GHC.IO.Handle.Types.$tc'ReadWriteHandle1_closure, @object
GHC.IO.Handle.Types.$tc'ReadWriteHandle1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'ReadWriteHandle2_bytes


==================== Asm code ====================
2018-03-16 16:03:23.284382652 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'ReadWriteHandle_closure
.type GHC.IO.Handle.Types.$tc'ReadWriteHandle_closure, @object
GHC.IO.Handle.Types.$tc'ReadWriteHandle_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'ReadWriteHandle1_closure+1
	.quad	GHC.IO.Handle.Types.$tc'AppendHandle1_closure+1
	.quad	6962298179673541916
	.quad	7858738479804269456
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.286541248 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tcBufferMode2_bytes
.type GHC.IO.Handle.Types.$tcBufferMode2_bytes, @object
GHC.IO.Handle.Types.$tcBufferMode2_bytes:
	.asciz "BufferMode"


==================== Asm code ====================
2018-03-16 16:03:23.288237163 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcBufferMode1_closure
.type GHC.IO.Handle.Types.$tcBufferMode1_closure, @object
GHC.IO.Handle.Types.$tcBufferMode1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tcBufferMode2_bytes


==================== Asm code ====================
2018-03-16 16:03:23.290254051 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcBufferMode_closure
.type GHC.IO.Handle.Types.$tcBufferMode_closure, @object
GHC.IO.Handle.Types.$tcBufferMode_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tcBufferMode1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	2181253694666364469
	.quad	-351746513378278033
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.292462642 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'LineBuffering1_closure
.type GHC.IO.Handle.Types.$tc'LineBuffering1_closure, @object
GHC.IO.Handle.Types.$tc'LineBuffering1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Handle.Types.$tcBufferMode_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.294241748 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'NoBuffering2_bytes
.type GHC.IO.Handle.Types.$tc'NoBuffering2_bytes, @object
GHC.IO.Handle.Types.$tc'NoBuffering2_bytes:
	.asciz "'NoBuffering"


==================== Asm code ====================
2018-03-16 16:03:23.296080345 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'NoBuffering1_closure
.type GHC.IO.Handle.Types.$tc'NoBuffering1_closure, @object
GHC.IO.Handle.Types.$tc'NoBuffering1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'NoBuffering2_bytes


==================== Asm code ====================
2018-03-16 16:03:23.298295051 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'NoBuffering_closure
.type GHC.IO.Handle.Types.$tc'NoBuffering_closure, @object
GHC.IO.Handle.Types.$tc'NoBuffering_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'NoBuffering1_closure+1
	.quad	GHC.IO.Handle.Types.$tc'LineBuffering1_closure+1
	.quad	1829914617507863771
	.quad	-6927621472228119354
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.300038924 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'LineBuffering3_bytes
.type GHC.IO.Handle.Types.$tc'LineBuffering3_bytes, @object
GHC.IO.Handle.Types.$tc'LineBuffering3_bytes:
	.asciz "'LineBuffering"


==================== Asm code ====================
2018-03-16 16:03:23.302218677 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'LineBuffering2_closure
.type GHC.IO.Handle.Types.$tc'LineBuffering2_closure, @object
GHC.IO.Handle.Types.$tc'LineBuffering2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'LineBuffering3_bytes


==================== Asm code ====================
2018-03-16 16:03:23.304159937 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'LineBuffering_closure
.type GHC.IO.Handle.Types.$tc'LineBuffering_closure, @object
GHC.IO.Handle.Types.$tc'LineBuffering_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'LineBuffering2_closure+1
	.quad	GHC.IO.Handle.Types.$tc'LineBuffering1_closure+1
	.quad	6417231512954421547
	.quad	-3685588211208569675
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.306333612 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'BlockBuffering1_closure
.type GHC.IO.Handle.Types.$tc'BlockBuffering1_closure, @object
GHC.IO.Handle.Types.$tc'BlockBuffering1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep5_r8a5e_closure+1
	.quad	GHC.IO.Handle.Types.$tc'LineBuffering1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.308061326 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'BlockBuffering3_bytes
.type GHC.IO.Handle.Types.$tc'BlockBuffering3_bytes, @object
GHC.IO.Handle.Types.$tc'BlockBuffering3_bytes:
	.asciz "'BlockBuffering"


==================== Asm code ====================
2018-03-16 16:03:23.309920661 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'BlockBuffering2_closure
.type GHC.IO.Handle.Types.$tc'BlockBuffering2_closure, @object
GHC.IO.Handle.Types.$tc'BlockBuffering2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'BlockBuffering3_bytes


==================== Asm code ====================
2018-03-16 16:03:23.311818213 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'BlockBuffering_closure
.type GHC.IO.Handle.Types.$tc'BlockBuffering_closure, @object
GHC.IO.Handle.Types.$tc'BlockBuffering_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'BlockBuffering2_closure+1
	.quad	GHC.IO.Handle.Types.$tc'BlockBuffering1_closure+4
	.quad	704611490471072872
	.quad	-2790685429944469927
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.313924915 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tcNewline2_bytes
.type GHC.IO.Handle.Types.$tcNewline2_bytes, @object
GHC.IO.Handle.Types.$tcNewline2_bytes:
	.asciz "Newline"


==================== Asm code ====================
2018-03-16 16:03:23.315660971 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcNewline1_closure
.type GHC.IO.Handle.Types.$tcNewline1_closure, @object
GHC.IO.Handle.Types.$tcNewline1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tcNewline2_bytes


==================== Asm code ====================
2018-03-16 16:03:23.317505927 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcNewline_closure
.type GHC.IO.Handle.Types.$tcNewline_closure, @object
GHC.IO.Handle.Types.$tcNewline_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tcNewline1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	4144517894815066994
	.quad	-7574688725849234129
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.319624108 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'CRLF1_closure
.type GHC.IO.Handle.Types.$tc'CRLF1_closure, @object
GHC.IO.Handle.Types.$tc'CRLF1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Handle.Types.$tcNewline_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.321300877 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'LF2_bytes
.type GHC.IO.Handle.Types.$tc'LF2_bytes, @object
GHC.IO.Handle.Types.$tc'LF2_bytes:
	.asciz "'LF"


==================== Asm code ====================
2018-03-16 16:03:23.323016967 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'LF1_closure
.type GHC.IO.Handle.Types.$tc'LF1_closure, @object
GHC.IO.Handle.Types.$tc'LF1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'LF2_bytes


==================== Asm code ====================
2018-03-16 16:03:23.324894116 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'LF_closure
.type GHC.IO.Handle.Types.$tc'LF_closure, @object
GHC.IO.Handle.Types.$tc'LF_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'LF1_closure+1
	.quad	GHC.IO.Handle.Types.$tc'CRLF1_closure+1
	.quad	8352565500432618804
	.quad	-3495588108440232702
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.326948486 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'CRLF3_bytes
.type GHC.IO.Handle.Types.$tc'CRLF3_bytes, @object
GHC.IO.Handle.Types.$tc'CRLF3_bytes:
	.asciz "'CRLF"


==================== Asm code ====================
2018-03-16 16:03:23.328607921 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'CRLF2_closure
.type GHC.IO.Handle.Types.$tc'CRLF2_closure, @object
GHC.IO.Handle.Types.$tc'CRLF2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'CRLF3_bytes


==================== Asm code ====================
2018-03-16 16:03:23.330487451 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'CRLF_closure
.type GHC.IO.Handle.Types.$tc'CRLF_closure, @object
GHC.IO.Handle.Types.$tc'CRLF_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'CRLF2_closure+1
	.quad	GHC.IO.Handle.Types.$tc'CRLF1_closure+1
	.quad	-6405484506426483101
	.quad	3210182148185771829
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.332515308 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tcHandle__2_bytes
.type GHC.IO.Handle.Types.$tcHandle__2_bytes, @object
GHC.IO.Handle.Types.$tcHandle__2_bytes:
	.asciz "Handle__"


==================== Asm code ====================
2018-03-16 16:03:23.334194126 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcHandle__1_closure
.type GHC.IO.Handle.Types.$tcHandle__1_closure, @object
GHC.IO.Handle.Types.$tcHandle__1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tcHandle__2_bytes


==================== Asm code ====================
2018-03-16 16:03:23.335955372 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcHandle___closure
.type GHC.IO.Handle.Types.$tcHandle___closure, @object
GHC.IO.Handle.Types.$tcHandle___closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tcHandle__1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-7770821113614775552
	.quad	-7882958280734574069
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.337745073 UTC

.section .data
.align 8
.align 1
$krep46_r8a5T_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Handle.Types.$tcHandle___closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.339819789 UTC

.section .data
.align 8
.align 1
$krep47_r8a5U_closure:
	.quad	:_con_info
	.quad	$krep46_r8a5T_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.341550882 UTC

.section .data
.align 8
.align 1
$krep48_r8a5V_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.MVar.$tcMVar_closure
	.quad	$krep47_r8a5U_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.343289582 UTC

.section .data
.align 8
.align 1
$krep49_r8a5W_closure:
	.quad	:_con_info
	.quad	$krep48_r8a5V_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.345081375 UTC

.section .data
.align 8
.align 1
$krep50_r8a5X_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Base.$tcMaybe_closure
	.quad	$krep49_r8a5W_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.347207608 UTC

.section .data
.align 8
.align 1
$krep51_r8a5Y_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep50_r8a5X_closure+1
	.quad	$krep46_r8a5T_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.34894402 UTC

.section .data
.align 8
.align 1
$krep52_r8a5Z_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.IO.Handle.Types.$tc'CRLF1_closure+1
	.quad	$krep51_r8a5Y_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.350787307 UTC

.section .data
.align 8
.align 1
$krep53_r8a60_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.IO.Handle.Types.$tc'CRLF1_closure+1
	.quad	$krep52_r8a5Z_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.352562272 UTC

.section .data
.align 8
.align 1
$krep54_r8a61_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep7_r8a5g_closure+1
	.quad	$krep53_r8a60_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.354660667 UTC

.section .data
.align 8
.align 1
$krep55_r8a62_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep23_r8a5w_closure+1
	.quad	$krep54_r8a61_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.356425833 UTC

.section .data
.align 8
.align 1
$krep56_r8a63_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep34_r8a5H_closure+1
	.quad	$krep55_r8a62_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.358796078 UTC

.section .data
.align 8
.align 1
$krep57_r8a64_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep45_r8a5S_closure+1
	.quad	$krep56_r8a63_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.360869988 UTC

.section .data
.align 8
.align 1
$krep58_r8a65_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep11_r8a5k_closure+1
	.quad	$krep57_r8a64_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.362618394 UTC

.section .data
.align 8
.align 1
$krep59_r8a66_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep27_r8a5A_closure+1
	.quad	$krep58_r8a65_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.364426543 UTC

.section .data
.align 8
.align 1
$krep60_r8a67_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.IO.Handle.Types.$tc'LineBuffering1_closure+1
	.quad	$krep59_r8a66_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.366254859 UTC

.section .data
.align 8
.align 1
$krep61_r8a68_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep15_r8a5o_closure+1
	.quad	$krep60_r8a67_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.368445825 UTC

.section .data
.align 8
.align 1
$krep62_r8a69_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.IO.Handle.Types.$tc'AppendHandle1_closure+1
	.quad	$krep61_r8a68_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.371963409 UTC

.section .data
.align 8
.align 1
$krep63_r8a6a_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep35_r8a5I_closure+2
	.quad	$krep62_r8a69_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.373937157 UTC

.section .data
.align 8
.align 1
$krep64_r8a6b_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep39_r8a5M_closure+1
	.quad	$krep63_r8a6a_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.3758273 UTC

.section .data
.align 8
.align 1
$krep65_r8a6c_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep41_r8a5O_closure+1
	.quad	$krep64_r8a6b_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.377958961 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'Handle__1_closure
.type GHC.IO.Handle.Types.$tc'Handle__1_closure, @object
GHC.IO.Handle.Types.$tc'Handle__1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep40_r8a5N_closure+1
	.quad	$krep65_r8a6c_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.37971312 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'Handle__3_bytes
.type GHC.IO.Handle.Types.$tc'Handle__3_bytes, @object
GHC.IO.Handle.Types.$tc'Handle__3_bytes:
	.asciz "'Handle__"


==================== Asm code ====================
2018-03-16 16:03:23.381544964 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'Handle__2_closure
.type GHC.IO.Handle.Types.$tc'Handle__2_closure, @object
GHC.IO.Handle.Types.$tc'Handle__2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'Handle__3_bytes


==================== Asm code ====================
2018-03-16 16:03:23.383862547 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'Handle___closure
.type GHC.IO.Handle.Types.$tc'Handle___closure, @object
GHC.IO.Handle.Types.$tc'Handle___closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'Handle__2_closure+1
	.quad	GHC.IO.Handle.Types.$tc'Handle__1_closure+4
	.quad	-3045823259334346200
	.quad	-3987933354209732046
	.quad	3
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.385966134 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tcHandle2_bytes
.type GHC.IO.Handle.Types.$tcHandle2_bytes, @object
GHC.IO.Handle.Types.$tcHandle2_bytes:
	.asciz "Handle"


==================== Asm code ====================
2018-03-16 16:03:23.387715665 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcHandle1_closure
.type GHC.IO.Handle.Types.$tcHandle1_closure, @object
GHC.IO.Handle.Types.$tcHandle1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tcHandle2_bytes


==================== Asm code ====================
2018-03-16 16:03:23.389690905 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcHandle_closure
.type GHC.IO.Handle.Types.$tcHandle_closure, @object
GHC.IO.Handle.Types.$tcHandle_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tcHandle1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	6808292778723485333
	.quad	-9207444908635607957
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.391863372 UTC

.section .data
.align 8
.align 1
$krep66_r8a6d_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Handle.Types.$tcHandle_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.393686497 UTC

.section .data
.align 8
.align 1
$krep67_r8a6e_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep48_r8a5V_closure+1
	.quad	$krep66_r8a6d_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.395527689 UTC

.section .data
.align 8
.align 1
$krep68_r8a6f_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep48_r8a5V_closure+1
	.quad	$krep67_r8a6e_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.398163061 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'DuplexHandle1_closure
.type GHC.IO.Handle.Types.$tc'DuplexHandle1_closure, @object
GHC.IO.Handle.Types.$tc'DuplexHandle1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep16_r8a5p_closure+1
	.quad	$krep68_r8a6f_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.399914805 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'DuplexHandle3_bytes
.type GHC.IO.Handle.Types.$tc'DuplexHandle3_bytes, @object
GHC.IO.Handle.Types.$tc'DuplexHandle3_bytes:
	.asciz "'DuplexHandle"


==================== Asm code ====================
2018-03-16 16:03:23.401619667 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'DuplexHandle2_closure
.type GHC.IO.Handle.Types.$tc'DuplexHandle2_closure, @object
GHC.IO.Handle.Types.$tc'DuplexHandle2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'DuplexHandle3_bytes


==================== Asm code ====================
2018-03-16 16:03:23.403527681 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'DuplexHandle_closure
.type GHC.IO.Handle.Types.$tc'DuplexHandle_closure, @object
GHC.IO.Handle.Types.$tc'DuplexHandle_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'DuplexHandle2_closure+1
	.quad	GHC.IO.Handle.Types.$tc'DuplexHandle1_closure+4
	.quad	477065760828861081
	.quad	4557316572761143129
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.405721039 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'FileHandle1_closure
.type GHC.IO.Handle.Types.$tc'FileHandle1_closure, @object
GHC.IO.Handle.Types.$tc'FileHandle1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep16_r8a5p_closure+1
	.quad	$krep67_r8a6e_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.407492471 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'FileHandle3_bytes
.type GHC.IO.Handle.Types.$tc'FileHandle3_bytes, @object
GHC.IO.Handle.Types.$tc'FileHandle3_bytes:
	.asciz "'FileHandle"


==================== Asm code ====================
2018-03-16 16:03:23.409332429 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'FileHandle2_closure
.type GHC.IO.Handle.Types.$tc'FileHandle2_closure, @object
GHC.IO.Handle.Types.$tc'FileHandle2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'FileHandle3_bytes


==================== Asm code ====================
2018-03-16 16:03:23.411536233 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'FileHandle_closure
.type GHC.IO.Handle.Types.$tc'FileHandle_closure, @object
GHC.IO.Handle.Types.$tc'FileHandle_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'FileHandle2_closure+1
	.quad	GHC.IO.Handle.Types.$tc'FileHandle1_closure+4
	.quad	5544613225695748436
	.quad	8829945929965735507
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.413661502 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcNewlineMode1_closure
.type GHC.IO.Handle.Types.$tcNewlineMode1_closure, @object
GHC.IO.Handle.Types.$tcNewlineMode1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode17_bytes


==================== Asm code ====================
2018-03-16 16:03:23.415450374 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tcNewlineMode_closure
.type GHC.IO.Handle.Types.$tcNewlineMode_closure, @object
GHC.IO.Handle.Types.$tcNewlineMode_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tcNewlineMode1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	-493703256650162584
	.quad	-5947794734609590778
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.41722172 UTC

.section .data
.align 8
.align 1
$krep69_r8a6g_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IO.Handle.Types.$tcNewlineMode_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.4193479 UTC

.section .data
.align 8
.align 1
$krep70_r8a6h_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.IO.Handle.Types.$tc'CRLF1_closure+1
	.quad	$krep69_r8a6g_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.421081048 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'NewlineMode1_closure
.type GHC.IO.Handle.Types.$tc'NewlineMode1_closure, @object
GHC.IO.Handle.Types.$tc'NewlineMode1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.IO.Handle.Types.$tc'CRLF1_closure+1
	.quad	$krep70_r8a6h_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.422803239 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Types.$tc'NewlineMode3_bytes
.type GHC.IO.Handle.Types.$tc'NewlineMode3_bytes, @object
GHC.IO.Handle.Types.$tc'NewlineMode3_bytes:
	.asciz "'NewlineMode"


==================== Asm code ====================
2018-03-16 16:03:23.4246138 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'NewlineMode2_closure
.type GHC.IO.Handle.Types.$tc'NewlineMode2_closure, @object
GHC.IO.Handle.Types.$tc'NewlineMode2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Types.$tc'NewlineMode3_bytes


==================== Asm code ====================
2018-03-16 16:03:23.426934743 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.$tc'NewlineMode_closure
.type GHC.IO.Handle.Types.$tc'NewlineMode_closure, @object
GHC.IO.Handle.Types.$tc'NewlineMode_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.IO.Handle.Types.$trModule_closure+1
	.quad	GHC.IO.Handle.Types.$tc'NewlineMode2_closure+1
	.quad	GHC.IO.Handle.Types.$tc'NewlineMode1_closure+4
	.quad	4266278501114659446
	.quad	-499281649975094606
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:23.429157085 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.checkHandleInvariants1_closure
.type GHC.IO.Handle.Types.checkHandleInvariants1_closure, @object
GHC.IO.Handle.Types.checkHandleInvariants1_closure:
	.quad	GHC.IO.Handle.Types.checkHandleInvariants1_info


==================== Asm code ====================
2018-03-16 16:03:23.429994779 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.checkHandleInvariants1_entry
.type GHC.IO.Handle.Types.checkHandleInvariants1_entry, @object
GHC.IO.Handle.Types.checkHandleInvariants1_entry:
_c8gck:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.checkHandleInvariants1_entry, .-GHC.IO.Handle.Types.checkHandleInvariants1_entry


==================== Asm code ====================
2018-03-16 16:03:23.430629081 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.checkHandleInvariants1_info
.type GHC.IO.Handle.Types.checkHandleInvariants1_info, @object
GHC.IO.Handle.Types.checkHandleInvariants1_info:
	.quad	GHC.IO.Handle.Types.checkHandleInvariants1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:23.432849572 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.checkHandleInvariants_closure
.type GHC.IO.Handle.Types.checkHandleInvariants_closure, @object
GHC.IO.Handle.Types.checkHandleInvariants_closure:
	.quad	GHC.IO.Handle.Types.checkHandleInvariants_info


==================== Asm code ====================
2018-03-16 16:03:23.43383141 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.checkHandleInvariants_entry
.type GHC.IO.Handle.Types.checkHandleInvariants_entry, @object
GHC.IO.Handle.Types.checkHandleInvariants_entry:
_c8gcx:
	jmp GHC.IO.Handle.Types.checkHandleInvariants1_entry
	.size GHC.IO.Handle.Types.checkHandleInvariants_entry, .-GHC.IO.Handle.Types.checkHandleInvariants_entry


==================== Asm code ====================
2018-03-16 16:03:23.434420203 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.checkHandleInvariants_info
.type GHC.IO.Handle.Types.checkHandleInvariants_info, @object
GHC.IO.Handle.Types.checkHandleInvariants_info:
	.quad	GHC.IO.Handle.Types.checkHandleInvariants_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:23.436914619 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.NewlineMode_closure
.type GHC.IO.Handle.Types.NewlineMode_closure, @object
GHC.IO.Handle.Types.NewlineMode_closure:
	.quad	GHC.IO.Handle.Types.NewlineMode_info


==================== Asm code ====================
2018-03-16 16:03:23.438395276 UTC

.section .text
.align 8
GHC.IO.Handle.Types.NewlineMode_entry:
_c8gcJ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8gcN
_c8gcM:
	leaq GHC.IO.Handle.Types.NewlineMode_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8gcN:
	movq $24,904(%r13)
	leaq GHC.IO.Handle.Types.NewlineMode_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.NewlineMode_entry, .-GHC.IO.Handle.Types.NewlineMode_entry


==================== Asm code ====================
2018-03-16 16:03:23.439055099 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.IO.Handle.Types.NewlineMode_info:
	.quad	GHC.IO.Handle.Types.NewlineMode_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:23.441104755 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.LF_closure
.type GHC.IO.Handle.Types.LF_closure, @object
GHC.IO.Handle.Types.LF_closure:
	.quad	GHC.IO.Handle.Types.LF_con_info


==================== Asm code ====================
2018-03-16 16:03:23.442854797 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.CRLF_closure
.type GHC.IO.Handle.Types.CRLF_closure, @object
GHC.IO.Handle.Types.CRLF_closure:
	.quad	GHC.IO.Handle.Types.CRLF_con_info


==================== Asm code ====================
2018-03-16 16:03:23.444567904 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.NoBuffering_closure
.type GHC.IO.Handle.Types.NoBuffering_closure, @object
GHC.IO.Handle.Types.NoBuffering_closure:
	.quad	GHC.IO.Handle.Types.NoBuffering_con_info


==================== Asm code ====================
2018-03-16 16:03:23.446282676 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.LineBuffering_closure
.type GHC.IO.Handle.Types.LineBuffering_closure, @object
GHC.IO.Handle.Types.LineBuffering_closure:
	.quad	GHC.IO.Handle.Types.LineBuffering_con_info


==================== Asm code ====================
2018-03-16 16:03:23.448958805 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.BlockBuffering_closure
.type GHC.IO.Handle.Types.BlockBuffering_closure, @object
GHC.IO.Handle.Types.BlockBuffering_closure:
	.quad	GHC.IO.Handle.Types.BlockBuffering_info


==================== Asm code ====================
2018-03-16 16:03:23.449740596 UTC

.section .text
.align 8
GHC.IO.Handle.Types.BlockBuffering_entry:
_c8gd3:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8gd7
_c8gd6:
	leaq GHC.IO.Handle.Types.BlockBuffering_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -5(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8gd7:
	movq $16,904(%r13)
	leaq GHC.IO.Handle.Types.BlockBuffering_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.BlockBuffering_entry, .-GHC.IO.Handle.Types.BlockBuffering_entry


==================== Asm code ====================
2018-03-16 16:03:23.45035916 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.IO.Handle.Types.BlockBuffering_info:
	.quad	GHC.IO.Handle.Types.BlockBuffering_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:03:23.452087801 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.ClosedHandle_closure
.type GHC.IO.Handle.Types.ClosedHandle_closure, @object
GHC.IO.Handle.Types.ClosedHandle_closure:
	.quad	GHC.IO.Handle.Types.ClosedHandle_con_info


==================== Asm code ====================
2018-03-16 16:03:23.454183335 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.SemiClosedHandle_closure
.type GHC.IO.Handle.Types.SemiClosedHandle_closure, @object
GHC.IO.Handle.Types.SemiClosedHandle_closure:
	.quad	GHC.IO.Handle.Types.SemiClosedHandle_con_info


==================== Asm code ====================
2018-03-16 16:03:23.45607337 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.ReadHandle_closure
.type GHC.IO.Handle.Types.ReadHandle_closure, @object
GHC.IO.Handle.Types.ReadHandle_closure:
	.quad	GHC.IO.Handle.Types.ReadHandle_con_info


==================== Asm code ====================
2018-03-16 16:03:23.457758569 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.WriteHandle_closure
.type GHC.IO.Handle.Types.WriteHandle_closure, @object
GHC.IO.Handle.Types.WriteHandle_closure:
	.quad	GHC.IO.Handle.Types.WriteHandle_con_info


==================== Asm code ====================
2018-03-16 16:03:23.45945665 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.AppendHandle_closure
.type GHC.IO.Handle.Types.AppendHandle_closure, @object
GHC.IO.Handle.Types.AppendHandle_closure:
	.quad	GHC.IO.Handle.Types.AppendHandle_con_info


==================== Asm code ====================
2018-03-16 16:03:23.461085058 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.ReadWriteHandle_closure
.type GHC.IO.Handle.Types.ReadWriteHandle_closure, @object
GHC.IO.Handle.Types.ReadWriteHandle_closure:
	.quad	GHC.IO.Handle.Types.ReadWriteHandle_con_info


==================== Asm code ====================
2018-03-16 16:03:23.463054013 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.BufferListNil_closure
.type GHC.IO.Handle.Types.BufferListNil_closure, @object
GHC.IO.Handle.Types.BufferListNil_closure:
	.quad	GHC.IO.Handle.Types.BufferListNil_con_info


==================== Asm code ====================
2018-03-16 16:03:23.466154073 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.BufferListCons_closure
.type GHC.IO.Handle.Types.BufferListCons_closure, @object
GHC.IO.Handle.Types.BufferListCons_closure:
	.quad	GHC.IO.Handle.Types.BufferListCons_info


==================== Asm code ====================
2018-03-16 16:03:23.467036568 UTC

.section .text
.align 8
GHC.IO.Handle.Types.BufferListCons_entry:
_c8gdq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8gdu
_c8gdt:
	leaq GHC.IO.Handle.Types.BufferListCons_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8gdu:
	movq $24,904(%r13)
	leaq GHC.IO.Handle.Types.BufferListCons_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.BufferListCons_entry, .-GHC.IO.Handle.Types.BufferListCons_entry


==================== Asm code ====================
2018-03-16 16:03:23.467704154 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.IO.Handle.Types.BufferListCons_info:
	.quad	GHC.IO.Handle.Types.BufferListCons_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:23.471635691 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.Handle___closure
.type GHC.IO.Handle.Types.Handle___closure, @object
GHC.IO.Handle.Types.Handle___closure:
	.quad	GHC.IO.Handle.Types.Handle___info


==================== Asm code ====================
2018-03-16 16:03:23.472317467 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.Handle___slow
.type GHC.IO.Handle.Types.Handle___slow, @object
GHC.IO.Handle.Types.Handle___slow:
_c8gdC:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Types.Handle___entry
	.size GHC.IO.Handle.Types.Handle___slow, .-GHC.IO.Handle.Types.Handle___slow


==================== Asm code ====================
2018-03-16 16:03:23.473283763 UTC

.section .text
.align 8
GHC.IO.Handle.Types.Handle___entry:
_c8gdH:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _c8gdL
_c8gdK:
	leaq GHC.IO.Handle.Types.Handle___con_info(%rip),%rax
	movq %rax,-128(%r12)
	movq %r14,-120(%r12)
	movq %rsi,-112(%r12)
	movq %rdi,-104(%r12)
	movq %r8,-96(%r12)
	movq %r9,-88(%r12)
	movq (%rbp),%rax
	movq %rax,-80(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 16(%rbp),%rax
	movq %rax,-64(%r12)
	movq 24(%rbp),%rax
	movq %rax,-56(%r12)
	movq 32(%rbp),%rax
	movq %rax,-48(%r12)
	movq 40(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq 56(%rbp),%rax
	movq %rax,-24(%r12)
	movq 64(%rbp),%rax
	movq %rax,-16(%r12)
	movq 72(%rbp),%rax
	movq %rax,-8(%r12)
	movq 80(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $88,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8gdL:
	movq $136,904(%r13)
	leaq GHC.IO.Handle.Types.Handle___closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.Handle___entry, .-GHC.IO.Handle.Types.Handle___entry


==================== Asm code ====================
2018-03-16 16:03:23.474060518 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.IO.Handle.Types.Handle___info:
	.quad	GHC.IO.Handle.Types.Handle___entry
	.quad	0
	.quad	14
	.quad	68719476736
	.quad	0
	.quad	16
	.quad	GHC.IO.Handle.Types.Handle___slow


==================== Asm code ====================
2018-03-16 16:03:23.476853804 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.FileHandle_closure
.type GHC.IO.Handle.Types.FileHandle_closure, @object
GHC.IO.Handle.Types.FileHandle_closure:
	.quad	GHC.IO.Handle.Types.FileHandle_info


==================== Asm code ====================
2018-03-16 16:03:23.477601767 UTC

.section .text
.align 8
GHC.IO.Handle.Types.FileHandle_entry:
_c8gea:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8gee
_c8ged:
	leaq GHC.IO.Handle.Types.FileHandle_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8gee:
	movq $24,904(%r13)
	leaq GHC.IO.Handle.Types.FileHandle_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.FileHandle_entry, .-GHC.IO.Handle.Types.FileHandle_entry


==================== Asm code ====================
2018-03-16 16:03:23.478204938 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.IO.Handle.Types.FileHandle_info:
	.quad	GHC.IO.Handle.Types.FileHandle_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:03:23.480576131 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Types.DuplexHandle_closure
.type GHC.IO.Handle.Types.DuplexHandle_closure, @object
GHC.IO.Handle.Types.DuplexHandle_closure:
	.quad	GHC.IO.Handle.Types.DuplexHandle_info


==================== Asm code ====================
2018-03-16 16:03:23.481351108 UTC

.section .text
.align 8
GHC.IO.Handle.Types.DuplexHandle_entry:
_c8geq:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c8geu
_c8get:
	leaq GHC.IO.Handle.Types.DuplexHandle_con_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -22(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8geu:
	movq $32,904(%r13)
	leaq GHC.IO.Handle.Types.DuplexHandle_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Types.DuplexHandle_entry, .-GHC.IO.Handle.Types.DuplexHandle_entry


==================== Asm code ====================
2018-03-16 16:03:23.482022585 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.IO.Handle.Types.DuplexHandle_info:
	.quad	GHC.IO.Handle.Types.DuplexHandle_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:03:23.484292361 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8geC_str:
	.asciz "base:GHC.IO.Handle.Types.NewlineMode"


==================== Asm code ====================
2018-03-16 16:03:23.48493626 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.NewlineMode_con_entry
.type GHC.IO.Handle.Types.NewlineMode_con_entry, @object
GHC.IO.Handle.Types.NewlineMode_con_entry:
_c8geB:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.NewlineMode_con_entry, .-GHC.IO.Handle.Types.NewlineMode_con_entry


==================== Asm code ====================
2018-03-16 16:03:23.485546214 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.NewlineMode_con_info
.type GHC.IO.Handle.Types.NewlineMode_con_info, @object
GHC.IO.Handle.Types.NewlineMode_con_info:
	.quad	GHC.IO.Handle.Types.NewlineMode_con_entry
	.quad	2
	.quad	4
	.quad	i8geC_str


==================== Asm code ====================
2018-03-16 16:03:23.487197577 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.Newline_closure_tbl
.type GHC.IO.Handle.Types.Newline_closure_tbl, @object
GHC.IO.Handle.Types.Newline_closure_tbl:
	.quad	GHC.IO.Handle.Types.LF_closure+1
	.quad	GHC.IO.Handle.Types.CRLF_closure+2


==================== Asm code ====================
2018-03-16 16:03:23.489110587 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8geK_str:
	.asciz "base:GHC.IO.Handle.Types.LF"


==================== Asm code ====================
2018-03-16 16:03:23.490157178 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.LF_con_entry
.type GHC.IO.Handle.Types.LF_con_entry, @object
GHC.IO.Handle.Types.LF_con_entry:
_c8geJ:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.LF_con_entry, .-GHC.IO.Handle.Types.LF_con_entry


==================== Asm code ====================
2018-03-16 16:03:23.490759638 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.LF_con_info
.type GHC.IO.Handle.Types.LF_con_info, @object
GHC.IO.Handle.Types.LF_con_info:
	.quad	GHC.IO.Handle.Types.LF_con_entry
	.quad	4294967296
	.quad	3
	.quad	i8geK_str


==================== Asm code ====================
2018-03-16 16:03:23.492943096 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8geR_str:
	.asciz "base:GHC.IO.Handle.Types.CRLF"


==================== Asm code ====================
2018-03-16 16:03:23.493555665 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.CRLF_con_entry
.type GHC.IO.Handle.Types.CRLF_con_entry, @object
GHC.IO.Handle.Types.CRLF_con_entry:
_c8geQ:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.CRLF_con_entry, .-GHC.IO.Handle.Types.CRLF_con_entry


==================== Asm code ====================
2018-03-16 16:03:23.494114351 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.CRLF_con_info
.type GHC.IO.Handle.Types.CRLF_con_info, @object
GHC.IO.Handle.Types.CRLF_con_info:
	.quad	GHC.IO.Handle.Types.CRLF_con_entry
	.quad	4294967296
	.quad	4294967299
	.quad	i8geR_str


==================== Asm code ====================
2018-03-16 16:03:23.496121195 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8geY_str:
	.asciz "base:GHC.IO.Handle.Types.NoBuffering"


==================== Asm code ====================
2018-03-16 16:03:23.496763606 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.NoBuffering_con_entry
.type GHC.IO.Handle.Types.NoBuffering_con_entry, @object
GHC.IO.Handle.Types.NoBuffering_con_entry:
_c8geX:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.NoBuffering_con_entry, .-GHC.IO.Handle.Types.NoBuffering_con_entry


==================== Asm code ====================
2018-03-16 16:03:23.498042019 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.NoBuffering_con_info
.type GHC.IO.Handle.Types.NoBuffering_con_info, @object
GHC.IO.Handle.Types.NoBuffering_con_info:
	.quad	GHC.IO.Handle.Types.NoBuffering_con_entry
	.quad	4294967296
	.quad	3
	.quad	i8geY_str


==================== Asm code ====================
2018-03-16 16:03:23.500369723 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8gf5_str:
	.asciz "base:GHC.IO.Handle.Types.LineBuffering"


==================== Asm code ====================
2018-03-16 16:03:23.50097808 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.LineBuffering_con_entry
.type GHC.IO.Handle.Types.LineBuffering_con_entry, @object
GHC.IO.Handle.Types.LineBuffering_con_entry:
_c8gf4:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.LineBuffering_con_entry, .-GHC.IO.Handle.Types.LineBuffering_con_entry


==================== Asm code ====================
2018-03-16 16:03:23.501566298 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.LineBuffering_con_info
.type GHC.IO.Handle.Types.LineBuffering_con_info, @object
GHC.IO.Handle.Types.LineBuffering_con_info:
	.quad	GHC.IO.Handle.Types.LineBuffering_con_entry
	.quad	4294967296
	.quad	4294967299
	.quad	i8gf5_str


==================== Asm code ====================
2018-03-16 16:03:23.50359068 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8gfc_str:
	.asciz "base:GHC.IO.Handle.Types.BlockBuffering"


==================== Asm code ====================
2018-03-16 16:03:23.504169866 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.BlockBuffering_con_entry
.type GHC.IO.Handle.Types.BlockBuffering_con_entry, @object
GHC.IO.Handle.Types.BlockBuffering_con_entry:
_c8gfb:
	addq $3,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.BlockBuffering_con_entry, .-GHC.IO.Handle.Types.BlockBuffering_con_entry


==================== Asm code ====================
2018-03-16 16:03:23.504806385 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.BlockBuffering_con_info
.type GHC.IO.Handle.Types.BlockBuffering_con_info, @object
GHC.IO.Handle.Types.BlockBuffering_con_info:
	.quad	GHC.IO.Handle.Types.BlockBuffering_con_entry
	.quad	1
	.quad	8589934594
	.quad	i8gfc_str


==================== Asm code ====================
2018-03-16 16:03:23.5069644 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.HandleType_closure_tbl
.type GHC.IO.Handle.Types.HandleType_closure_tbl, @object
GHC.IO.Handle.Types.HandleType_closure_tbl:
	.quad	GHC.IO.Handle.Types.ClosedHandle_closure+1
	.quad	GHC.IO.Handle.Types.SemiClosedHandle_closure+2
	.quad	GHC.IO.Handle.Types.ReadHandle_closure+3
	.quad	GHC.IO.Handle.Types.WriteHandle_closure+4
	.quad	GHC.IO.Handle.Types.AppendHandle_closure+5
	.quad	GHC.IO.Handle.Types.ReadWriteHandle_closure+6


==================== Asm code ====================
2018-03-16 16:03:23.508987676 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8gfk_str:
	.asciz "base:GHC.IO.Handle.Types.ClosedHandle"


==================== Asm code ====================
2018-03-16 16:03:23.510243582 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.ClosedHandle_con_entry
.type GHC.IO.Handle.Types.ClosedHandle_con_entry, @object
GHC.IO.Handle.Types.ClosedHandle_con_entry:
_c8gfj:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.ClosedHandle_con_entry, .-GHC.IO.Handle.Types.ClosedHandle_con_entry


==================== Asm code ====================
2018-03-16 16:03:23.51082669 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.ClosedHandle_con_info
.type GHC.IO.Handle.Types.ClosedHandle_con_info, @object
GHC.IO.Handle.Types.ClosedHandle_con_info:
	.quad	GHC.IO.Handle.Types.ClosedHandle_con_entry
	.quad	4294967296
	.quad	3
	.quad	i8gfk_str


==================== Asm code ====================
2018-03-16 16:03:23.512899575 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8gfr_str:
	.asciz "base:GHC.IO.Handle.Types.SemiClosedHandle"


==================== Asm code ====================
2018-03-16 16:03:23.513560448 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.SemiClosedHandle_con_entry
.type GHC.IO.Handle.Types.SemiClosedHandle_con_entry, @object
GHC.IO.Handle.Types.SemiClosedHandle_con_entry:
_c8gfq:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.SemiClosedHandle_con_entry, .-GHC.IO.Handle.Types.SemiClosedHandle_con_entry


==================== Asm code ====================
2018-03-16 16:03:23.514136758 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.SemiClosedHandle_con_info
.type GHC.IO.Handle.Types.SemiClosedHandle_con_info, @object
GHC.IO.Handle.Types.SemiClosedHandle_con_info:
	.quad	GHC.IO.Handle.Types.SemiClosedHandle_con_entry
	.quad	4294967296
	.quad	4294967299
	.quad	i8gfr_str


==================== Asm code ====================
2018-03-16 16:03:23.516444993 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8gfy_str:
	.asciz "base:GHC.IO.Handle.Types.ReadHandle"


==================== Asm code ====================
2018-03-16 16:03:23.517106811 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.ReadHandle_con_entry
.type GHC.IO.Handle.Types.ReadHandle_con_entry, @object
GHC.IO.Handle.Types.ReadHandle_con_entry:
_c8gfx:
	addq $3,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.ReadHandle_con_entry, .-GHC.IO.Handle.Types.ReadHandle_con_entry


==================== Asm code ====================
2018-03-16 16:03:23.517755184 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.ReadHandle_con_info
.type GHC.IO.Handle.Types.ReadHandle_con_info, @object
GHC.IO.Handle.Types.ReadHandle_con_info:
	.quad	GHC.IO.Handle.Types.ReadHandle_con_entry
	.quad	4294967296
	.quad	8589934595
	.quad	i8gfy_str


==================== Asm code ====================
2018-03-16 16:03:23.519795365 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8gfF_str:
	.asciz "base:GHC.IO.Handle.Types.WriteHandle"


==================== Asm code ====================
2018-03-16 16:03:23.520441304 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.WriteHandle_con_entry
.type GHC.IO.Handle.Types.WriteHandle_con_entry, @object
GHC.IO.Handle.Types.WriteHandle_con_entry:
_c8gfE:
	addq $4,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.WriteHandle_con_entry, .-GHC.IO.Handle.Types.WriteHandle_con_entry


==================== Asm code ====================
2018-03-16 16:03:23.521053944 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.WriteHandle_con_info
.type GHC.IO.Handle.Types.WriteHandle_con_info, @object
GHC.IO.Handle.Types.WriteHandle_con_info:
	.quad	GHC.IO.Handle.Types.WriteHandle_con_entry
	.quad	4294967296
	.quad	12884901891
	.quad	i8gfF_str


==================== Asm code ====================
2018-03-16 16:03:23.523967127 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8gfM_str:
	.asciz "base:GHC.IO.Handle.Types.AppendHandle"


==================== Asm code ====================
2018-03-16 16:03:23.524601118 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.AppendHandle_con_entry
.type GHC.IO.Handle.Types.AppendHandle_con_entry, @object
GHC.IO.Handle.Types.AppendHandle_con_entry:
_c8gfL:
	addq $5,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.AppendHandle_con_entry, .-GHC.IO.Handle.Types.AppendHandle_con_entry


==================== Asm code ====================
2018-03-16 16:03:23.525223504 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.AppendHandle_con_info
.type GHC.IO.Handle.Types.AppendHandle_con_info, @object
GHC.IO.Handle.Types.AppendHandle_con_info:
	.quad	GHC.IO.Handle.Types.AppendHandle_con_entry
	.quad	4294967296
	.quad	17179869187
	.quad	i8gfM_str


==================== Asm code ====================
2018-03-16 16:03:23.527293195 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8gfT_str:
	.asciz "base:GHC.IO.Handle.Types.ReadWriteHandle"


==================== Asm code ====================
2018-03-16 16:03:23.527941744 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.ReadWriteHandle_con_entry
.type GHC.IO.Handle.Types.ReadWriteHandle_con_entry, @object
GHC.IO.Handle.Types.ReadWriteHandle_con_entry:
_c8gfS:
	addq $6,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.ReadWriteHandle_con_entry, .-GHC.IO.Handle.Types.ReadWriteHandle_con_entry


==================== Asm code ====================
2018-03-16 16:03:23.528553571 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.ReadWriteHandle_con_info
.type GHC.IO.Handle.Types.ReadWriteHandle_con_info, @object
GHC.IO.Handle.Types.ReadWriteHandle_con_info:
	.quad	GHC.IO.Handle.Types.ReadWriteHandle_con_entry
	.quad	4294967296
	.quad	21474836483
	.quad	i8gfT_str


==================== Asm code ====================
2018-03-16 16:03:23.530917485 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8gg0_str:
	.asciz "base:GHC.IO.Handle.Types.BufferListNil"


==================== Asm code ====================
2018-03-16 16:03:23.531596492 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.BufferListNil_con_entry
.type GHC.IO.Handle.Types.BufferListNil_con_entry, @object
GHC.IO.Handle.Types.BufferListNil_con_entry:
_c8gfZ:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.BufferListNil_con_entry, .-GHC.IO.Handle.Types.BufferListNil_con_entry


==================== Asm code ====================
2018-03-16 16:03:23.532210559 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.BufferListNil_con_info
.type GHC.IO.Handle.Types.BufferListNil_con_info, @object
GHC.IO.Handle.Types.BufferListNil_con_info:
	.quad	GHC.IO.Handle.Types.BufferListNil_con_entry
	.quad	4294967296
	.quad	3
	.quad	i8gg0_str


==================== Asm code ====================
2018-03-16 16:03:23.534813243 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8gg7_str:
	.asciz "base:GHC.IO.Handle.Types.BufferListCons"


==================== Asm code ====================
2018-03-16 16:03:23.535487642 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.BufferListCons_con_entry
.type GHC.IO.Handle.Types.BufferListCons_con_entry, @object
GHC.IO.Handle.Types.BufferListCons_con_entry:
_c8gg6:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.BufferListCons_con_entry, .-GHC.IO.Handle.Types.BufferListCons_con_entry


==================== Asm code ====================
2018-03-16 16:03:23.536122662 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.BufferListCons_con_info
.type GHC.IO.Handle.Types.BufferListCons_con_info, @object
GHC.IO.Handle.Types.BufferListCons_con_info:
	.quad	GHC.IO.Handle.Types.BufferListCons_con_entry
	.quad	2
	.quad	4294967300
	.quad	i8gg7_str


==================== Asm code ====================
2018-03-16 16:03:23.538633249 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8gge_str:
	.asciz "base:GHC.IO.Handle.Types.Handle__"


==================== Asm code ====================
2018-03-16 16:03:23.539301511 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.Handle___con_entry
.type GHC.IO.Handle.Types.Handle___con_entry, @object
GHC.IO.Handle.Types.Handle___con_entry:
_c8ggd:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.Handle___con_entry, .-GHC.IO.Handle.Types.Handle___con_entry


==================== Asm code ====================
2018-03-16 16:03:23.539969746 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.Handle___con_info
.type GHC.IO.Handle.Types.Handle___con_info, @object
GHC.IO.Handle.Types.Handle___con_info:
	.quad	GHC.IO.Handle.Types.Handle___con_entry
	.quad	16
	.quad	1
	.quad	i8gge_str


==================== Asm code ====================
2018-03-16 16:03:23.542170913 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8ggl_str:
	.asciz "base:GHC.IO.Handle.Types.FileHandle"


==================== Asm code ====================
2018-03-16 16:03:23.54289421 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.FileHandle_con_entry
.type GHC.IO.Handle.Types.FileHandle_con_entry, @object
GHC.IO.Handle.Types.FileHandle_con_entry:
_c8ggk:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.FileHandle_con_entry, .-GHC.IO.Handle.Types.FileHandle_con_entry


==================== Asm code ====================
2018-03-16 16:03:23.543566489 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.FileHandle_con_info
.type GHC.IO.Handle.Types.FileHandle_con_info, @object
GHC.IO.Handle.Types.FileHandle_con_info:
	.quad	GHC.IO.Handle.Types.FileHandle_con_entry
	.quad	2
	.quad	4
	.quad	i8ggl_str


==================== Asm code ====================
2018-03-16 16:03:23.546363309 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i8ggs_str:
	.asciz "base:GHC.IO.Handle.Types.DuplexHandle"


==================== Asm code ====================
2018-03-16 16:03:23.547057739 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Types.DuplexHandle_con_entry
.type GHC.IO.Handle.Types.DuplexHandle_con_entry, @object
GHC.IO.Handle.Types.DuplexHandle_con_entry:
_c8ggr:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Types.DuplexHandle_con_entry, .-GHC.IO.Handle.Types.DuplexHandle_con_entry


==================== Asm code ====================
2018-03-16 16:03:23.547737445 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Types.DuplexHandle_con_info
.type GHC.IO.Handle.Types.DuplexHandle_con_info, @object
GHC.IO.Handle.Types.DuplexHandle_con_info:
	.quad	GHC.IO.Handle.Types.DuplexHandle_con_entry
	.quad	3
	.quad	4294967297
	.quad	i8ggs_str


==================== Asm code ====================
2018-03-16 16:03:23.550719589 UTC

.section .data.rel.ro
.align 8
.align 1
S8evg_srt:
	.quad	GHC.IO.Handle.Types.$w$cshowsPrec_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType1_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType3_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType5_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType7_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType9_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType11_closure
	.quad	GHC.IO.Handle.Types.$fShowHandleType_$cshow_closure
	.quad	GHC.IO.Handle.Types.$fReadNewline6_closure
	.quad	GHC.IO.Handle.Types.$fReadNewline10_closure
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshowsPrec_closure
	.quad	GHC.IO.Handle.Types.$fShowNewline_$cshow_closure
	.quad	GHC.IO.Handle.Types.$fShowNewline1_closure
	.quad	GHC.Show.showCommaSpace1_closure
	.quad	GHC.IO.Handle.Types.$w$cshowsPrec1_closure
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshowsPrec_closure
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode_$cshow_closure
	.quad	GHC.IO.Handle.Types.$fShowNewlineMode1_closure
	.quad	GHC.Read.choose2_closure
	.quad	GHC.IO.Handle.Types.$fReadNewline_sps_closure
	.quad	GHC.Read.list3_closure
	.quad	GHC.IO.Handle.Types.$fReadNewline2_closure
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadsPrec_closure
	.quad	GHC.Read.list_closure
	.quad	GHC.IO.Handle.Types.$fReadNewline1_closure
	.quad	GHC.IO.Handle.Types.$fReadNewline_$creadListPrec_closure
	.quad	GHC.IO.Handle.Types.$fReadNewline12_closure
	.quad	Text.Read.Lex.$wexpect_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode3_closure
	.quad	GHC.Read.readField_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode6_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode11_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode8_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode12_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_lexeme_closure
	.quad	GHC.IO.Handle.Types.$w$creadPrec_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_lexeme1_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode2_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadsPrec_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode1_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode_$creadListPrec_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode18_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode12_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode8_closure
	.quad	GHC.Show.$fShowMaybe_$cshowsPrec_closure
	.quad	GHC.IO.Handle.Types.$fShowBufferMode3_closure
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshowsPrec_closure
	.quad	GHC.IO.Handle.Types.$fShowBufferMode5_closure
	.quad	GHC.IO.Handle.Types.$fShowBufferMode6_closure
	.quad	GHC.Show.$fShowMaybe1_closure
	.quad	GHC.Show.$fShowMaybe4_closure
	.quad	GHC.IO.Handle.Types.$fShowBufferMode_$cshow_closure
	.quad	GHC.IO.Handle.Types.$fShowBufferMode1_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_sps_closure
	.quad	GHC.Read.choose2_closure
	.quad	GHC.Read.$fReadInt_closure
	.quad	GHC.Read.$fReadMaybe1_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_lexeme_closure
	.quad	Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode2_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadsPrec_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode1_closure
	.quad	GHC.Read.list_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode_$creadListPrec_closure
	.quad	GHC.IO.Handle.Types.$fReadBufferMode14_closure
	.quad	GHC.IO.Handle.Types.$fReadNewlineMode4_closure
	.quad	GHC.IO.Handle.Types.$fShowHandle_$cshow_closure

