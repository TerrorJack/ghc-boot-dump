
==================== Asm code ====================
2018-03-16 16:05:07.238939958 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.augmentIOError_closure
.type GHC.IO.Handle.Internals.augmentIOError_closure, @object
GHC.IO.Handle.Internals.augmentIOError_closure:
	.quad	GHC.IO.Handle.Internals.augmentIOError_info


==================== Asm code ====================
2018-03-16 16:05:07.239812122 UTC

.section .text
.align 8
sat_sa7Q2_entry:
_caaL6:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _caaL7
_caaL8:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_caaKZ_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _caaKZ
_caaL0:
	movq (%rbx),%rax
	jmp *(%rax)
_caaL7:
	jmp *-16(%r13)
	.size sat_sa7Q2_entry, .-sat_sa7Q2_entry


==================== Asm code ====================
2018-03-16 16:05:07.240487777 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa7Q2_info:
	.quad	sat_sa7Q2_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:05:07.241257039 UTC

.section .text
.align 8
_caaKZ:
_caaKZ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _caaL3
_caaL4:
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_caaL3:
	movq 8(%rbp),%rax
	movq $block_caaLb_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _caaLb
_caaLd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caaKZ, .-_caaKZ


==================== Asm code ====================
2018-03-16 16:05:07.241901472 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaKZ_info:
	.quad	_caaKZ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.242663851 UTC

.section .text
.align 8
_caaLb:
_caaLb:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _caaLj
_caaLq:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caaLt
_caaLs:
	movq 6(%rbx),%rax
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caaLt:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_caaLj:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caaLt
_caaLl:
	movq 7(%rbx),%rax
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caaLb, .-_caaLb


==================== Asm code ====================
2018-03-16 16:05:07.243376639 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaLb_info:
	.quad	_caaLb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.244168861 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.augmentIOError_entry
.type GHC.IO.Handle.Internals.augmentIOError_entry, @object
GHC.IO.Handle.Internals.augmentIOError_entry:
_caaLA:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caaLD
_caaLE:
	movq $block_caaKQ_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _caaKQ
_caaKR:
	movq (%rbx),%rax
	jmp *(%rax)
_caaLD:
	movl $GHC.IO.Handle.Internals.augmentIOError_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.augmentIOError_entry, .-GHC.IO.Handle.Internals.augmentIOError_entry


==================== Asm code ====================
2018-03-16 16:05:07.24485253 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.augmentIOError_info
.type GHC.IO.Handle.Internals.augmentIOError_info, @object
GHC.IO.Handle.Internals.augmentIOError_info:
	.quad	GHC.IO.Handle.Internals.augmentIOError_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:05:07.245659875 UTC

.section .text
.align 8
_caaKQ:
_caaKQ:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _caaLH
_caaLG:
	movq 15(%rbx),%rax
	movq 31(%rbx),%rcx
	movq 39(%rbx),%rdx
	movq 47(%rbx),%rbx
	movq $sat_sa7Q2_info,-96(%r12)
	movq 16(%rbp),%rsi
	movq %rsi,-80(%r12)
	movq %rbx,-72(%r12)
	movq $GHC.Base.Just_con_info,-64(%r12)
	movq %rsi,-56(%r12)
	movq $GHC.IO.Exception.IOError_con_info,-48(%r12)
	leaq -62(%r12),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caaLH:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caaKQ, .-_caaKQ


==================== Asm code ====================
2018-03-16 16:05:07.246362324 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaKQ_info:
	.quad	_caaKQ
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.247997624 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle14_bytes
.type GHC.IO.Handle.Internals.wantReadableHandle14_bytes, @object
GHC.IO.Handle.Internals.wantReadableHandle14_bytes:
	.asciz "handle is closed"


==================== Asm code ====================
2018-03-16 16:05:07.250801272 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle13_closure
.type GHC.IO.Handle.Internals.wantReadableHandle13_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle13_closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle13_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.251612558 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle13_entry
.type GHC.IO.Handle.Internals.wantReadableHandle13_entry, @object
GHC.IO.Handle.Internals.wantReadableHandle13_entry:
_caaMn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caaMo
_caaMp:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caaMm
_caaMl:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Internals.wantReadableHandle14_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_caaMo:
	jmp *-16(%r13)
_caaMm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.wantReadableHandle13_entry, .-GHC.IO.Handle.Internals.wantReadableHandle13_entry


==================== Asm code ====================
2018-03-16 16:05:07.252257338 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle13_info
.type GHC.IO.Handle.Internals.wantReadableHandle13_info, @object
GHC.IO.Handle.Internals.wantReadableHandle13_info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle13_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:07.25406621 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle12_closure
.type GHC.IO.Handle.Internals.wantReadableHandle12_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle12_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.IllegalOperation_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.IO.Handle.Internals.wantReadableHandle13_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.256579146 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle11_closure
.type GHC.IO.Handle.Internals.wantReadableHandle11_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle11_closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle11_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.257424773 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle11_entry
.type GHC.IO.Handle.Internals.wantReadableHandle11_entry, @object
GHC.IO.Handle.Internals.wantReadableHandle11_entry:
_caaME:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caaMF
_caaMG:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caaMD
_caaMC:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Internals.wantReadableHandle12_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_caaMF:
	jmp *-16(%r13)
_caaMD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.wantReadableHandle11_entry, .-GHC.IO.Handle.Internals.wantReadableHandle11_entry


==================== Asm code ====================
2018-03-16 16:05:07.258145281 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle11_info
.type GHC.IO.Handle.Internals.wantReadableHandle11_info, @object
GHC.IO.Handle.Internals.wantReadableHandle11_info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle11_entry
	.quad	0
	.quad	12884901909
	.quad	Sa8nI_srt


==================== Asm code ====================
2018-03-16 16:05:07.260275512 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_closedHandle1_closure
.type GHC.IO.Handle.Internals.ioe_closedHandle1_closure, @object
GHC.IO.Handle.Internals.ioe_closedHandle1_closure:
	.quad	GHC.IO.Handle.Internals.ioe_closedHandle1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.260900052 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_closedHandle1_entry
.type GHC.IO.Handle.Internals.ioe_closedHandle1_entry, @object
GHC.IO.Handle.Internals.ioe_closedHandle1_entry:
_caaMS:
	movl $GHC.IO.Handle.Internals.wantReadableHandle11_closure,%ebx
	jmp stg_raiseIO#
	.size GHC.IO.Handle.Internals.ioe_closedHandle1_entry, .-GHC.IO.Handle.Internals.ioe_closedHandle1_entry


==================== Asm code ====================
2018-03-16 16:05:07.261502228 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_closedHandle1_info
.type GHC.IO.Handle.Internals.ioe_closedHandle1_info, @object
GHC.IO.Handle.Internals.ioe_closedHandle1_info:
	.quad	GHC.IO.Handle.Internals.ioe_closedHandle1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Sa8nI_srt+16


==================== Asm code ====================
2018-03-16 16:05:07.263572097 UTC

.section .data
.align 8
.align 1
ioe_closedHandle2_ra7Pb_closure:
	.quad	ioe_closedHandle2_ra7Pb_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.264190881 UTC

.section .text
.align 8
ioe_closedHandle2_ra7Pb_entry:
_caaN3:
	movl $GHC.IO.Handle.Internals.wantReadableHandle11_closure,%ebx
	jmp stg_raiseIO#
	.size ioe_closedHandle2_ra7Pb_entry, .-ioe_closedHandle2_ra7Pb_entry


==================== Asm code ====================
2018-03-16 16:05:07.264757039 UTC

.section .data.rel.ro
.align 8
.align 1
ioe_closedHandle2_ra7Pb_info:
	.quad	ioe_closedHandle2_ra7Pb_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Sa8nI_srt+16


==================== Asm code ====================
2018-03-16 16:05:07.267142693 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_closedHandle_closure
.type GHC.IO.Handle.Internals.ioe_closedHandle_closure, @object
GHC.IO.Handle.Internals.ioe_closedHandle_closure:
	.quad	GHC.IO.Handle.Internals.ioe_closedHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.267769323 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_closedHandle_entry
.type GHC.IO.Handle.Internals.ioe_closedHandle_entry, @object
GHC.IO.Handle.Internals.ioe_closedHandle_entry:
_caaNe:
	jmp ioe_closedHandle2_ra7Pb_entry
	.size GHC.IO.Handle.Internals.ioe_closedHandle_entry, .-GHC.IO.Handle.Internals.ioe_closedHandle_entry


==================== Asm code ====================
2018-03-16 16:05:07.268374583 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_closedHandle_info
.type GHC.IO.Handle.Internals.ioe_closedHandle_info, @object
GHC.IO.Handle.Internals.ioe_closedHandle_info:
	.quad	GHC.IO.Handle.Internals.ioe_closedHandle_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Sa8nI_srt+24


==================== Asm code ====================
2018-03-16 16:05:07.271448899 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle10_bytes
.type GHC.IO.Handle.Internals.wantReadableHandle10_bytes, @object
GHC.IO.Handle.Internals.wantReadableHandle10_bytes:
	.asciz "handle is semi-closed"


==================== Asm code ====================
2018-03-16 16:05:07.274463245 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle9_closure
.type GHC.IO.Handle.Internals.wantReadableHandle9_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle9_closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle9_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.275302166 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle9_entry
.type GHC.IO.Handle.Internals.wantReadableHandle9_entry, @object
GHC.IO.Handle.Internals.wantReadableHandle9_entry:
_caaNs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caaNt
_caaNu:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caaNr
_caaNq:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Internals.wantReadableHandle10_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_caaNt:
	jmp *-16(%r13)
_caaNr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.wantReadableHandle9_entry, .-GHC.IO.Handle.Internals.wantReadableHandle9_entry


==================== Asm code ====================
2018-03-16 16:05:07.275993757 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle9_info
.type GHC.IO.Handle.Internals.wantReadableHandle9_info, @object
GHC.IO.Handle.Internals.wantReadableHandle9_info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle9_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:07.277780184 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle8_closure
.type GHC.IO.Handle.Internals.wantReadableHandle8_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle8_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.IllegalOperation_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.IO.Handle.Internals.wantReadableHandle9_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.280251794 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle7_closure
.type GHC.IO.Handle.Internals.wantReadableHandle7_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle7_closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle7_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.281078405 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle7_entry
.type GHC.IO.Handle.Internals.wantReadableHandle7_entry, @object
GHC.IO.Handle.Internals.wantReadableHandle7_entry:
_caaNJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caaNK
_caaNL:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caaNI
_caaNH:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Internals.wantReadableHandle8_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_caaNK:
	jmp *-16(%r13)
_caaNI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.wantReadableHandle7_entry, .-GHC.IO.Handle.Internals.wantReadableHandle7_entry


==================== Asm code ====================
2018-03-16 16:05:07.282021384 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle7_info
.type GHC.IO.Handle.Internals.wantReadableHandle7_info, @object
GHC.IO.Handle.Internals.wantReadableHandle7_info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle7_entry
	.quad	0
	.quad	73014444053
	.quad	Sa8nI_srt


==================== Asm code ====================
2018-03-16 16:05:07.28409549 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_semiclosedHandle1_closure
.type GHC.IO.Handle.Internals.ioe_semiclosedHandle1_closure, @object
GHC.IO.Handle.Internals.ioe_semiclosedHandle1_closure:
	.quad	GHC.IO.Handle.Internals.ioe_semiclosedHandle1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.284703592 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry
.type GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry, @object
GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry:
_caaNX:
	movl $GHC.IO.Handle.Internals.wantReadableHandle7_closure,%ebx
	jmp stg_raiseIO#
	.size GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry, .-GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry


==================== Asm code ====================
2018-03-16 16:05:07.285304564 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_semiclosedHandle1_info
.type GHC.IO.Handle.Internals.ioe_semiclosedHandle1_info, @object
GHC.IO.Handle.Internals.ioe_semiclosedHandle1_info:
	.quad	GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Sa8nI_srt+40


==================== Asm code ====================
2018-03-16 16:05:07.287293437 UTC

.section .data
.align 8
.align 1
ioe_semiclosedHandle2_ra7Pc_closure:
	.quad	ioe_semiclosedHandle2_ra7Pc_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.287912775 UTC

.section .text
.align 8
ioe_semiclosedHandle2_ra7Pc_entry:
_caaO8:
	movl $GHC.IO.Handle.Internals.wantReadableHandle7_closure,%ebx
	jmp stg_raiseIO#
	.size ioe_semiclosedHandle2_ra7Pc_entry, .-ioe_semiclosedHandle2_ra7Pc_entry


==================== Asm code ====================
2018-03-16 16:05:07.288501617 UTC

.section .data.rel.ro
.align 8
.align 1
ioe_semiclosedHandle2_ra7Pc_info:
	.quad	ioe_semiclosedHandle2_ra7Pc_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Sa8nI_srt+40


==================== Asm code ====================
2018-03-16 16:05:07.290507033 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_semiclosedHandle_closure
.type GHC.IO.Handle.Internals.ioe_semiclosedHandle_closure, @object
GHC.IO.Handle.Internals.ioe_semiclosedHandle_closure:
	.quad	GHC.IO.Handle.Internals.ioe_semiclosedHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.291127592 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_semiclosedHandle_entry
.type GHC.IO.Handle.Internals.ioe_semiclosedHandle_entry, @object
GHC.IO.Handle.Internals.ioe_semiclosedHandle_entry:
_caaOj:
	jmp ioe_semiclosedHandle2_ra7Pc_entry
	.size GHC.IO.Handle.Internals.ioe_semiclosedHandle_entry, .-GHC.IO.Handle.Internals.ioe_semiclosedHandle_entry


==================== Asm code ====================
2018-03-16 16:05:07.291700767 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_semiclosedHandle_info
.type GHC.IO.Handle.Internals.ioe_semiclosedHandle_info, @object
GHC.IO.Handle.Internals.ioe_semiclosedHandle_info:
	.quad	GHC.IO.Handle.Internals.ioe_semiclosedHandle_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Sa8nI_srt+48


==================== Asm code ====================
2018-03-16 16:05:07.293746427 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hLookAhead_4_closure
.type GHC.IO.Handle.Internals.hLookAhead_4_closure, @object
GHC.IO.Handle.Internals.hLookAhead_4_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.EOF_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:05:07.296363478 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hLookAhead_3_closure
.type GHC.IO.Handle.Internals.hLookAhead_3_closure, @object
GHC.IO.Handle.Internals.hLookAhead_3_closure:
	.quad	GHC.IO.Handle.Internals.hLookAhead_3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.297232725 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.hLookAhead_3_entry
.type GHC.IO.Handle.Internals.hLookAhead_3_entry, @object
GHC.IO.Handle.Internals.hLookAhead_3_entry:
_caaOx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caaOy
_caaOz:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caaOw
_caaOv:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Internals.hLookAhead_4_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_caaOy:
	jmp *-16(%r13)
_caaOw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.hLookAhead_3_entry, .-GHC.IO.Handle.Internals.hLookAhead_3_entry


==================== Asm code ====================
2018-03-16 16:05:07.297925895 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hLookAhead_3_info
.type GHC.IO.Handle.Internals.hLookAhead_3_info, @object
GHC.IO.Handle.Internals.hLookAhead_3_info:
	.quad	GHC.IO.Handle.Internals.hLookAhead_3_entry
	.quad	0
	.quad	4294967317
	.quad	Sa8nI_srt


==================== Asm code ====================
2018-03-16 16:05:07.299896279 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_EOF1_closure
.type GHC.IO.Handle.Internals.ioe_EOF1_closure, @object
GHC.IO.Handle.Internals.ioe_EOF1_closure:
	.quad	GHC.IO.Handle.Internals.ioe_EOF1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.300547141 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_EOF1_entry
.type GHC.IO.Handle.Internals.ioe_EOF1_entry, @object
GHC.IO.Handle.Internals.ioe_EOF1_entry:
_caaOL:
	movl $GHC.IO.Handle.Internals.hLookAhead_3_closure,%ebx
	jmp stg_raiseIO#
	.size GHC.IO.Handle.Internals.ioe_EOF1_entry, .-GHC.IO.Handle.Internals.ioe_EOF1_entry


==================== Asm code ====================
2018-03-16 16:05:07.301625298 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_EOF1_info
.type GHC.IO.Handle.Internals.ioe_EOF1_info, @object
GHC.IO.Handle.Internals.ioe_EOF1_info:
	.quad	GHC.IO.Handle.Internals.ioe_EOF1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Sa8nI_srt+56


==================== Asm code ====================
2018-03-16 16:05:07.303702124 UTC

.section .data
.align 8
.align 1
ioe_EOF2_ra7Pd_closure:
	.quad	ioe_EOF2_ra7Pd_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.304350919 UTC

.section .text
.align 8
ioe_EOF2_ra7Pd_entry:
_caaOW:
	movl $GHC.IO.Handle.Internals.hLookAhead_3_closure,%ebx
	jmp stg_raiseIO#
	.size ioe_EOF2_ra7Pd_entry, .-ioe_EOF2_ra7Pd_entry


==================== Asm code ====================
2018-03-16 16:05:07.304892444 UTC

.section .data.rel.ro
.align 8
.align 1
ioe_EOF2_ra7Pd_info:
	.quad	ioe_EOF2_ra7Pd_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Sa8nI_srt+56


==================== Asm code ====================
2018-03-16 16:05:07.307306889 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_EOF_closure
.type GHC.IO.Handle.Internals.ioe_EOF_closure, @object
GHC.IO.Handle.Internals.ioe_EOF_closure:
	.quad	GHC.IO.Handle.Internals.ioe_EOF_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.307900591 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_EOF_entry
.type GHC.IO.Handle.Internals.ioe_EOF_entry, @object
GHC.IO.Handle.Internals.ioe_EOF_entry:
_caaP7:
	jmp ioe_EOF2_ra7Pd_entry
	.size GHC.IO.Handle.Internals.ioe_EOF_entry, .-GHC.IO.Handle.Internals.ioe_EOF_entry


==================== Asm code ====================
2018-03-16 16:05:07.308493802 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_EOF_info
.type GHC.IO.Handle.Internals.ioe_EOF_info, @object
GHC.IO.Handle.Internals.ioe_EOF_info:
	.quad	GHC.IO.Handle.Internals.ioe_EOF_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Sa8nI_srt+64


==================== Asm code ====================
2018-03-16 16:05:07.310201957 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle6_bytes
.type GHC.IO.Handle.Internals.wantReadableHandle6_bytes, @object
GHC.IO.Handle.Internals.wantReadableHandle6_bytes:
	.asciz "handle is not open for reading"


==================== Asm code ====================
2018-03-16 16:05:07.312713482 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle5_closure
.type GHC.IO.Handle.Internals.wantReadableHandle5_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle5_closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.313583382 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle5_entry
.type GHC.IO.Handle.Internals.wantReadableHandle5_entry, @object
GHC.IO.Handle.Internals.wantReadableHandle5_entry:
_caaPl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caaPm
_caaPn:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caaPk
_caaPj:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Internals.wantReadableHandle6_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_caaPm:
	jmp *-16(%r13)
_caaPk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.wantReadableHandle5_entry, .-GHC.IO.Handle.Internals.wantReadableHandle5_entry


==================== Asm code ====================
2018-03-16 16:05:07.31431183 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle5_info
.type GHC.IO.Handle.Internals.wantReadableHandle5_info, @object
GHC.IO.Handle.Internals.wantReadableHandle5_info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:07.316130181 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle4_closure
.type GHC.IO.Handle.Internals.wantReadableHandle4_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle4_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.IllegalOperation_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.IO.Handle.Internals.wantReadableHandle5_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.318975412 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle3_closure
.type GHC.IO.Handle.Internals.wantReadableHandle3_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle3_closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.319760762 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle3_entry
.type GHC.IO.Handle.Internals.wantReadableHandle3_entry, @object
GHC.IO.Handle.Internals.wantReadableHandle3_entry:
_caaPC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caaPD
_caaPE:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caaPB
_caaPA:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Internals.wantReadableHandle4_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_caaPD:
	jmp *-16(%r13)
_caaPB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.wantReadableHandle3_entry, .-GHC.IO.Handle.Internals.wantReadableHandle3_entry


==================== Asm code ====================
2018-03-16 16:05:07.320468623 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle3_info
.type GHC.IO.Handle.Internals.wantReadableHandle3_info, @object
GHC.IO.Handle.Internals.wantReadableHandle3_info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle3_entry
	.quad	0
	.quad	2203318222869
	.quad	Sa8nI_srt


==================== Asm code ====================
2018-03-16 16:05:07.322523736 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_notReadable1_closure
.type GHC.IO.Handle.Internals.ioe_notReadable1_closure, @object
GHC.IO.Handle.Internals.ioe_notReadable1_closure:
	.quad	GHC.IO.Handle.Internals.ioe_notReadable1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.323187131 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_notReadable1_entry
.type GHC.IO.Handle.Internals.ioe_notReadable1_entry, @object
GHC.IO.Handle.Internals.ioe_notReadable1_entry:
_caaPQ:
	movl $GHC.IO.Handle.Internals.wantReadableHandle3_closure,%ebx
	jmp stg_raiseIO#
	.size GHC.IO.Handle.Internals.ioe_notReadable1_entry, .-GHC.IO.Handle.Internals.ioe_notReadable1_entry


==================== Asm code ====================
2018-03-16 16:05:07.323802068 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_notReadable1_info
.type GHC.IO.Handle.Internals.ioe_notReadable1_info, @object
GHC.IO.Handle.Internals.ioe_notReadable1_info:
	.quad	GHC.IO.Handle.Internals.ioe_notReadable1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Sa8nI_srt+80


==================== Asm code ====================
2018-03-16 16:05:07.325772483 UTC

.section .data
.align 8
.align 1
ioe_notReadable2_ra7Pe_closure:
	.quad	ioe_notReadable2_ra7Pe_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.326369154 UTC

.section .text
.align 8
ioe_notReadable2_ra7Pe_entry:
_caaQ1:
	movl $GHC.IO.Handle.Internals.wantReadableHandle3_closure,%ebx
	jmp stg_raiseIO#
	.size ioe_notReadable2_ra7Pe_entry, .-ioe_notReadable2_ra7Pe_entry


==================== Asm code ====================
2018-03-16 16:05:07.326971864 UTC

.section .data.rel.ro
.align 8
.align 1
ioe_notReadable2_ra7Pe_info:
	.quad	ioe_notReadable2_ra7Pe_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Sa8nI_srt+80


==================== Asm code ====================
2018-03-16 16:05:07.328842566 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_notReadable_closure
.type GHC.IO.Handle.Internals.ioe_notReadable_closure, @object
GHC.IO.Handle.Internals.ioe_notReadable_closure:
	.quad	GHC.IO.Handle.Internals.ioe_notReadable_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.329474504 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_notReadable_entry
.type GHC.IO.Handle.Internals.ioe_notReadable_entry, @object
GHC.IO.Handle.Internals.ioe_notReadable_entry:
_caaQc:
	jmp ioe_notReadable2_ra7Pe_entry
	.size GHC.IO.Handle.Internals.ioe_notReadable_entry, .-GHC.IO.Handle.Internals.ioe_notReadable_entry


==================== Asm code ====================
2018-03-16 16:05:07.330038834 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_notReadable_info
.type GHC.IO.Handle.Internals.ioe_notReadable_info, @object
GHC.IO.Handle.Internals.ioe_notReadable_info:
	.quad	GHC.IO.Handle.Internals.ioe_notReadable_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Sa8nI_srt+88


==================== Asm code ====================
2018-03-16 16:05:07.332205293 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Internals.wantWritableHandle5_bytes
.type GHC.IO.Handle.Internals.wantWritableHandle5_bytes, @object
GHC.IO.Handle.Internals.wantWritableHandle5_bytes:
	.asciz "handle is not open for writing"


==================== Asm code ====================
2018-03-16 16:05:07.335103474 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantWritableHandle4_closure
.type GHC.IO.Handle.Internals.wantWritableHandle4_closure, @object
GHC.IO.Handle.Internals.wantWritableHandle4_closure:
	.quad	GHC.IO.Handle.Internals.wantWritableHandle4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.33597759 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantWritableHandle4_entry
.type GHC.IO.Handle.Internals.wantWritableHandle4_entry, @object
GHC.IO.Handle.Internals.wantWritableHandle4_entry:
_caaQq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caaQr
_caaQs:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caaQp
_caaQo:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Internals.wantWritableHandle5_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_caaQr:
	jmp *-16(%r13)
_caaQp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.wantWritableHandle4_entry, .-GHC.IO.Handle.Internals.wantWritableHandle4_entry


==================== Asm code ====================
2018-03-16 16:05:07.336656271 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantWritableHandle4_info
.type GHC.IO.Handle.Internals.wantWritableHandle4_info, @object
GHC.IO.Handle.Internals.wantWritableHandle4_info:
	.quad	GHC.IO.Handle.Internals.wantWritableHandle4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:07.338483228 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantWritableHandle3_closure
.type GHC.IO.Handle.Internals.wantWritableHandle3_closure, @object
GHC.IO.Handle.Internals.wantWritableHandle3_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.IllegalOperation_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.IO.Handle.Internals.wantWritableHandle4_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.340900406 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantWritableHandle2_closure
.type GHC.IO.Handle.Internals.wantWritableHandle2_closure, @object
GHC.IO.Handle.Internals.wantWritableHandle2_closure:
	.quad	GHC.IO.Handle.Internals.wantWritableHandle2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.341703783 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantWritableHandle2_entry
.type GHC.IO.Handle.Internals.wantWritableHandle2_entry, @object
GHC.IO.Handle.Internals.wantWritableHandle2_entry:
_caaQH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caaQI
_caaQJ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caaQG
_caaQF:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Internals.wantWritableHandle3_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_caaQI:
	jmp *-16(%r13)
_caaQG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.wantWritableHandle2_entry, .-GHC.IO.Handle.Internals.wantWritableHandle2_entry


==================== Asm code ====================
2018-03-16 16:05:07.342450266 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantWritableHandle2_info
.type GHC.IO.Handle.Internals.wantWritableHandle2_info, @object
GHC.IO.Handle.Internals.wantWritableHandle2_info:
	.quad	GHC.IO.Handle.Internals.wantWritableHandle2_entry
	.quad	0
	.quad	17596481011733
	.quad	Sa8nI_srt


==================== Asm code ====================
2018-03-16 16:05:07.3445278 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_notWritable1_closure
.type GHC.IO.Handle.Internals.ioe_notWritable1_closure, @object
GHC.IO.Handle.Internals.ioe_notWritable1_closure:
	.quad	GHC.IO.Handle.Internals.ioe_notWritable1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.345150194 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_notWritable1_entry
.type GHC.IO.Handle.Internals.ioe_notWritable1_entry, @object
GHC.IO.Handle.Internals.ioe_notWritable1_entry:
_caaQV:
	movl $GHC.IO.Handle.Internals.wantWritableHandle2_closure,%ebx
	jmp stg_raiseIO#
	.size GHC.IO.Handle.Internals.ioe_notWritable1_entry, .-GHC.IO.Handle.Internals.ioe_notWritable1_entry


==================== Asm code ====================
2018-03-16 16:05:07.346329566 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_notWritable1_info
.type GHC.IO.Handle.Internals.ioe_notWritable1_info, @object
GHC.IO.Handle.Internals.ioe_notWritable1_info:
	.quad	GHC.IO.Handle.Internals.ioe_notWritable1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Sa8nI_srt+104


==================== Asm code ====================
2018-03-16 16:05:07.348294419 UTC

.section .data
.align 8
.align 1
ioe_notWritable2_ra7Pf_closure:
	.quad	ioe_notWritable2_ra7Pf_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.34889738 UTC

.section .text
.align 8
ioe_notWritable2_ra7Pf_entry:
_caaR6:
	movl $GHC.IO.Handle.Internals.wantWritableHandle2_closure,%ebx
	jmp stg_raiseIO#
	.size ioe_notWritable2_ra7Pf_entry, .-ioe_notWritable2_ra7Pf_entry


==================== Asm code ====================
2018-03-16 16:05:07.349472638 UTC

.section .data.rel.ro
.align 8
.align 1
ioe_notWritable2_ra7Pf_info:
	.quad	ioe_notWritable2_ra7Pf_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Sa8nI_srt+104


==================== Asm code ====================
2018-03-16 16:05:07.351480192 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_notWritable_closure
.type GHC.IO.Handle.Internals.ioe_notWritable_closure, @object
GHC.IO.Handle.Internals.ioe_notWritable_closure:
	.quad	GHC.IO.Handle.Internals.ioe_notWritable_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.352099058 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_notWritable_entry
.type GHC.IO.Handle.Internals.ioe_notWritable_entry, @object
GHC.IO.Handle.Internals.ioe_notWritable_entry:
_caaRh:
	jmp ioe_notWritable2_ra7Pf_entry
	.size GHC.IO.Handle.Internals.ioe_notWritable_entry, .-GHC.IO.Handle.Internals.ioe_notWritable_entry


==================== Asm code ====================
2018-03-16 16:05:07.352698142 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_notWritable_info
.type GHC.IO.Handle.Internals.ioe_notWritable_info, @object
GHC.IO.Handle.Internals.ioe_notWritable_info:
	.quad	GHC.IO.Handle.Internals.ioe_notWritable_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Sa8nI_srt+112


==================== Asm code ====================
2018-03-16 16:05:07.354389877 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle6_bytes
.type GHC.IO.Handle.Internals.wantSeekableHandle6_bytes, @object
GHC.IO.Handle.Internals.wantSeekableHandle6_bytes:
	.asciz "handle is not seekable"


==================== Asm code ====================
2018-03-16 16:05:07.356857286 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle5_closure
.type GHC.IO.Handle.Internals.wantSeekableHandle5_closure, @object
GHC.IO.Handle.Internals.wantSeekableHandle5_closure:
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.358108198 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantSeekableHandle5_entry
.type GHC.IO.Handle.Internals.wantSeekableHandle5_entry, @object
GHC.IO.Handle.Internals.wantSeekableHandle5_entry:
_caaRv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caaRw
_caaRx:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caaRu
_caaRt:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Internals.wantSeekableHandle6_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_caaRw:
	jmp *-16(%r13)
_caaRu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.wantSeekableHandle5_entry, .-GHC.IO.Handle.Internals.wantSeekableHandle5_entry


==================== Asm code ====================
2018-03-16 16:05:07.358787657 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle5_info
.type GHC.IO.Handle.Internals.wantSeekableHandle5_info, @object
GHC.IO.Handle.Internals.wantSeekableHandle5_info:
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:07.360579461 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle4_closure
.type GHC.IO.Handle.Internals.wantSeekableHandle4_closure, @object
GHC.IO.Handle.Internals.wantSeekableHandle4_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.IllegalOperation_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle5_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.363749844 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle3_closure
.type GHC.IO.Handle.Internals.wantSeekableHandle3_closure, @object
GHC.IO.Handle.Internals.wantSeekableHandle3_closure:
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.364539445 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantSeekableHandle3_entry
.type GHC.IO.Handle.Internals.wantSeekableHandle3_entry, @object
GHC.IO.Handle.Internals.wantSeekableHandle3_entry:
_caaRM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caaRN
_caaRO:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caaRL
_caaRK:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Internals.wantSeekableHandle4_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_caaRN:
	jmp *-16(%r13)
_caaRL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.wantSeekableHandle3_entry, .-GHC.IO.Handle.Internals.wantSeekableHandle3_entry


==================== Asm code ====================
2018-03-16 16:05:07.365286335 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle3_info
.type GHC.IO.Handle.Internals.wantSeekableHandle3_info, @object
GHC.IO.Handle.Internals.wantSeekableHandle3_info:
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle3_entry
	.quad	0
	.quad	140741783322645
	.quad	Sa8nI_srt


==================== Asm code ====================
2018-03-16 16:05:07.366937532 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer6_bytes
.type GHC.IO.Handle.Internals.flushBuffer6_bytes, @object
GHC.IO.Handle.Internals.flushBuffer6_bytes:
	.asciz "cannot flush the read buffer: underlying device is not seekable"


==================== Asm code ====================
2018-03-16 16:05:07.369747393 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer5_closure
.type GHC.IO.Handle.Internals.flushBuffer5_closure, @object
GHC.IO.Handle.Internals.flushBuffer5_closure:
	.quad	GHC.IO.Handle.Internals.flushBuffer5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.370559773 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushBuffer5_entry
.type GHC.IO.Handle.Internals.flushBuffer5_entry, @object
GHC.IO.Handle.Internals.flushBuffer5_entry:
_caaS3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caaS4
_caaS5:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caaS2
_caaS1:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Internals.flushBuffer6_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_caaS4:
	jmp *-16(%r13)
_caaS2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.flushBuffer5_entry, .-GHC.IO.Handle.Internals.flushBuffer5_entry


==================== Asm code ====================
2018-03-16 16:05:07.371262325 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer5_info
.type GHC.IO.Handle.Internals.flushBuffer5_info, @object
GHC.IO.Handle.Internals.flushBuffer5_info:
	.quad	GHC.IO.Handle.Internals.flushBuffer5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:07.373054851 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer4_closure
.type GHC.IO.Handle.Internals.flushBuffer4_closure, @object
GHC.IO.Handle.Internals.flushBuffer4_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.IllegalOperation_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.IO.Handle.Internals.flushBuffer5_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.375618972 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer3_closure
.type GHC.IO.Handle.Internals.flushBuffer3_closure, @object
GHC.IO.Handle.Internals.flushBuffer3_closure:
	.quad	GHC.IO.Handle.Internals.flushBuffer3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.376464702 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushBuffer3_entry
.type GHC.IO.Handle.Internals.flushBuffer3_entry, @object
GHC.IO.Handle.Internals.flushBuffer3_entry:
_caaSk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caaSl
_caaSm:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caaSj
_caaSi:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Internals.flushBuffer4_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_caaSl:
	jmp *-16(%r13)
_caaSj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.flushBuffer3_entry, .-GHC.IO.Handle.Internals.flushBuffer3_entry


==================== Asm code ====================
2018-03-16 16:05:07.377176524 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer3_info
.type GHC.IO.Handle.Internals.flushBuffer3_info, @object
GHC.IO.Handle.Internals.flushBuffer3_info:
	.quad	GHC.IO.Handle.Internals.flushBuffer3_entry
	.quad	0
	.quad	281479271677973
	.quad	Sa8nI_srt


==================== Asm code ====================
2018-03-16 16:05:07.378860435 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_ra7Pg_bytes:
	.asciz "hSetBuffering"


==================== Asm code ====================
2018-03-16 16:05:07.381782516 UTC

.section .data
.align 8
.align 1
lvl1_ra7Ph_closure:
	.quad	lvl1_ra7Ph_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.38259392 UTC

.section .text
.align 8
lvl1_ra7Ph_entry:
_caaSB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caaSC
_caaSD:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caaSA
_caaSz:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl_ra7Pg_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_caaSC:
	jmp *-16(%r13)
_caaSA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl1_ra7Ph_entry, .-lvl1_ra7Ph_entry


==================== Asm code ====================
2018-03-16 16:05:07.383259831 UTC

.section .data.rel.ro
.align 8
.align 1
lvl1_ra7Ph_info:
	.quad	lvl1_ra7Ph_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:07.384879584 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl2_ra7Pi_bytes:
	.asciz "illegal buffer size "


==================== Asm code ====================
2018-03-16 16:05:07.390030061 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wioe_bufsiz_closure
.type GHC.IO.Handle.Internals.$wioe_bufsiz_closure, @object
GHC.IO.Handle.Internals.$wioe_bufsiz_closure:
	.quad	GHC.IO.Handle.Internals.$wioe_bufsiz_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.390767837 UTC

.section .text
.align 8
sat_sa7Qi_entry:
_caaT5:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caaT6
_caaT7:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_caaT2_info,-24(%rbp)
	movl $GHC.Types.[]_closure+1,%edi
	movq 16(%rbx),%rsi
	movl $9,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
_caaT6:
	jmp *-16(%r13)
	.size sat_sa7Qi_entry, .-sat_sa7Qi_entry


==================== Asm code ====================
2018-03-16 16:05:07.391432411 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa7Qi_info:
	.quad	sat_sa7Qi_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:05:07.392166297 UTC

.section .text
.align 8
_caaT2:
_caaT2:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caaTa
_caaT9:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caaTa:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _caaT2, .-_caaT2


==================== Asm code ====================
2018-03-16 16:05:07.392806141 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaT2_info:
	.quad	_caaT2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.393977799 UTC

.section .text
.align 8
sat_sa7Qj_entry:
_caaTb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caaTc
_caaTd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caaTf
_caaTe:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $sat_sa7Qi_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	movl $lvl2_ra7Pi_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_caaTf:
	movq $24,904(%r13)
_caaTc:
	jmp *-16(%r13)
	.size sat_sa7Qj_entry, .-sat_sa7Qj_entry


==================== Asm code ====================
2018-03-16 16:05:07.394666445 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa7Qj_info:
	.quad	sat_sa7Qj_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:05:07.3954698 UTC

.section .text
.align 8
sat_sa7Ql_entry:
_caaTh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caaTi
_caaTj:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _caaTl
_caaTk:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $sat_sa7Qj_info,-72(%r12)
	movq %rax,-56(%r12)
	movq $GHC.IO.Exception.IOError_con_info,-48(%r12)
	movq $GHC.Base.Nothing_closure+1,-40(%r12)
	movq $GHC.IO.Exception.InvalidArgument_closure+1,-32(%r12)
	movq $lvl1_ra7Ph_closure,-24(%r12)
	leaq -72(%r12),%rax
	movq %rax,-16(%r12)
	movq $GHC.Base.Nothing_closure+1,-8(%r12)
	movq $GHC.Base.Nothing_closure+1,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_caaTl:
	movq $80,904(%r13)
_caaTi:
	jmp *-16(%r13)
	.size sat_sa7Ql_entry, .-sat_sa7Ql_entry


==================== Asm code ====================
2018-03-16 16:05:07.396195466 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa7Ql_info:
	.quad	sat_sa7Ql_entry
	.quad	4294967296
	.quad	562954248388625
	.quad	Sa8nI_srt


==================== Asm code ====================
2018-03-16 16:05:07.396930739 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.$wioe_bufsiz_entry
.type GHC.IO.Handle.Internals.$wioe_bufsiz_entry, @object
GHC.IO.Handle.Internals.$wioe_bufsiz_entry:
_caaTm:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caaTq
_caaTp:
	movq $sat_sa7Ql_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	jmp stg_raiseIO#
_caaTq:
	movq $24,904(%r13)
	movl $GHC.IO.Handle.Internals.$wioe_bufsiz_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.$wioe_bufsiz_entry, .-GHC.IO.Handle.Internals.$wioe_bufsiz_entry


==================== Asm code ====================
2018-03-16 16:05:07.398105576 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wioe_bufsiz_info
.type GHC.IO.Handle.Internals.$wioe_bufsiz_info, @object
GHC.IO.Handle.Internals.$wioe_bufsiz_info:
	.quad	GHC.IO.Handle.Internals.$wioe_bufsiz_entry
	.quad	0
	.quad	1688854155231246
	.quad	8589934596
	.quad	Sa8nI_srt


==================== Asm code ====================
2018-03-16 16:05:07.400877688 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_bufsiz1_closure
.type GHC.IO.Handle.Internals.ioe_bufsiz1_closure, @object
GHC.IO.Handle.Internals.ioe_bufsiz1_closure:
	.quad	GHC.IO.Handle.Internals.ioe_bufsiz1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.401626043 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_bufsiz1_entry
.type GHC.IO.Handle.Internals.ioe_bufsiz1_entry, @object
GHC.IO.Handle.Internals.ioe_bufsiz1_entry:
_caaTT:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caaTU
_caaTV:
	movq $block_caaTQ_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caaTQ
_caaTR:
	movq (%rbx),%rax
	jmp *(%rax)
_caaTU:
	movl $GHC.IO.Handle.Internals.ioe_bufsiz1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.ioe_bufsiz1_entry, .-GHC.IO.Handle.Internals.ioe_bufsiz1_entry


==================== Asm code ====================
2018-03-16 16:05:07.402258066 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_bufsiz1_info
.type GHC.IO.Handle.Internals.ioe_bufsiz1_info, @object
GHC.IO.Handle.Internals.ioe_bufsiz1_info:
	.quad	GHC.IO.Handle.Internals.ioe_bufsiz1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	Sa8nI_srt+144


==================== Asm code ====================
2018-03-16 16:05:07.402842066 UTC

.section .text
.align 8
_caaTQ:
_caaTQ:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.IO.Handle.Internals.$wioe_bufsiz_entry
	.size _caaTQ, .-_caaTQ


==================== Asm code ====================
2018-03-16 16:05:07.403420184 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaTQ_info:
	.quad	_caaTQ
	.quad	0
	.quad	4294967326
	.quad	Sa8nI_srt+144


==================== Asm code ====================
2018-03-16 16:05:07.405499318 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_bufsiz_closure
.type GHC.IO.Handle.Internals.ioe_bufsiz_closure, @object
GHC.IO.Handle.Internals.ioe_bufsiz_closure:
	.quad	GHC.IO.Handle.Internals.ioe_bufsiz_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.406130336 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_bufsiz_entry
.type GHC.IO.Handle.Internals.ioe_bufsiz_entry, @object
GHC.IO.Handle.Internals.ioe_bufsiz_entry:
_caaUd:
	jmp GHC.IO.Handle.Internals.ioe_bufsiz1_entry
	.size GHC.IO.Handle.Internals.ioe_bufsiz_entry, .-GHC.IO.Handle.Internals.ioe_bufsiz_entry


==================== Asm code ====================
2018-03-16 16:05:07.406679848 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_bufsiz_info
.type GHC.IO.Handle.Internals.ioe_bufsiz_info, @object
GHC.IO.Handle.Internals.ioe_bufsiz_info:
	.quad	GHC.IO.Handle.Internals.ioe_bufsiz_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	Sa8nI_srt+152


==================== Asm code ====================
2018-03-16 16:05:07.413484608 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wstreamEncode_closure
.type GHC.IO.Handle.Internals.$wstreamEncode_closure, @object
GHC.IO.Handle.Internals.$wstreamEncode_closure:
	.quad	GHC.IO.Handle.Internals.$wstreamEncode_info


==================== Asm code ====================
2018-03-16 16:05:07.414211807 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.$wstreamEncode_entry
.type GHC.IO.Handle.Internals.$wstreamEncode_entry, @object
GHC.IO.Handle.Internals.$wstreamEncode_entry:
_caaUq:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _caaUr
_caaUs:
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp _caaUu
_caaUr:
	movl $GHC.IO.Handle.Internals.$wstreamEncode_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.$wstreamEncode_entry, .-GHC.IO.Handle.Internals.$wstreamEncode_entry


==================== Asm code ====================
2018-03-16 16:05:07.414924067 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wstreamEncode_info
.type GHC.IO.Handle.Internals.$wstreamEncode_info, @object
GHC.IO.Handle.Internals.$wstreamEncode_info:
	.quad	GHC.IO.Handle.Internals.$wstreamEncode_entry
	.quad	0
	.quad	14
	.quad	21474836504


==================== Asm code ====================
2018-03-16 16:05:07.415584536 UTC

.section .text
.align 8
_caaUu:
_caaUu:
	movq $block_caaUw_info,-8(%rbp)
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq (%rbp),%rbx
	addq $-8,%rbp
	jmp stg_ap_ppv_fast
	.size _caaUu, .-_caaUu


==================== Asm code ====================
2018-03-16 16:05:07.416226907 UTC

.section .text
.align 8
_caaUw:
_caaUw:
	movq $block_caaUy_info,(%rbp)
	testb $7,%bl
	jne _caaUy
_caaUB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caaUw, .-_caaUw


==================== Asm code ====================
2018-03-16 16:05:07.416757548 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaUw_info:
	.quad	_caaUw
	.quad	516
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.417489949 UTC

.section .text
.align 8
_caaUy:
_caaUy:
	movq $block_caaUF_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 7(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _caaUF
_caaUH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caaUy, .-_caaUy


==================== Asm code ====================
2018-03-16 16:05:07.418114294 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaUy_info:
	.quad	_caaUy
	.quad	516
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.418908174 UTC

.section .text
.align 8
_caaUF:
_caaUF:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _caaV0
_caaUN:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caaUQ
_caaUP:
	movq $(,)_con_info,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caaV0:
	movq $block_caaUT_info,(%rbp)
	movq 32(%rbp),%rbx
	testb $7,%bl
	jne _caaUT
_caaUU:
	movq (%rbx),%rax
	jmp *(%rax)
_caaUQ:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caaUF, .-_caaUF


==================== Asm code ====================
2018-03-16 16:05:07.419644809 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaUF_info:
	.quad	_caaUF
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.420331121 UTC

.section .text
.align 8
_caaUT:
_caaUT:
	movq $block_caaUY_info,(%rbp)
	movq 39(%rbx),%rax
	movq 40(%rbp),%rbx
	movq %rax,40(%rbp)
	testb $7,%bl
	jne _caaUY
_caaV2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caaUT, .-_caaUT


==================== Asm code ====================
2018-03-16 16:05:07.420976372 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaUT_info:
	.quad	_caaUT
	.quad	517
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.422278185 UTC

.section .text
.align 8
_caaUY:
_caaUY:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caaV8
_caaV7:
	movq 8(%rbp),%rax
	movq 40(%rbp),%rcx
	cmpq 39(%rbx),%rcx
	je _caaVj
_caaVe:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caaVj:
	addq $-24,%r12
	movq $block_caaVg_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	movq 24(%rbp),%rbx
	addq $8,%rbp
	jmp stg_ap_ppv_fast
_caaV8:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caaUY, .-_caaUY


==================== Asm code ====================
2018-03-16 16:05:07.422974121 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaUY_info:
	.quad	_caaUY
	.quad	1541
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.423619602 UTC

.section .text
.align 8
_caaVg:
_caaVg:
	movq $block_caaVi_info,(%rbp)
	testb $7,%bl
	jne _caaVi
_caaVl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caaVg, .-_caaVg


==================== Asm code ====================
2018-03-16 16:05:07.424220316 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaVg_info:
	.quad	_caaVg
	.quad	772
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.424822254 UTC

.section .text
.align 8
_caaVi:
_caaVi:
	movq 7(%rbx),%rax
	movq %rax,24(%rbp)
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp _caaUu
	.size _caaVi, .-_caaVi


==================== Asm code ====================
2018-03-16 16:05:07.425435983 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaVi_info:
	.quad	_caaVi
	.quad	772
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.427140148 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.dEFAULT_CHAR_BUFFER_SIZE_closure
.type GHC.IO.Handle.Internals.dEFAULT_CHAR_BUFFER_SIZE_closure, @object
GHC.IO.Handle.Internals.dEFAULT_CHAR_BUFFER_SIZE_closure:
	.quad	GHC.Types.I#_con_info
	.quad	2048


==================== Asm code ====================
2018-03-16 16:05:07.430149435 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.initBufferState_closure
.type GHC.IO.Handle.Internals.initBufferState_closure, @object
GHC.IO.Handle.Internals.initBufferState_closure:
	.quad	GHC.IO.Handle.Internals.initBufferState_info


==================== Asm code ====================
2018-03-16 16:05:07.430897341 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.initBufferState_entry
.type GHC.IO.Handle.Internals.initBufferState_entry, @object
GHC.IO.Handle.Internals.initBufferState_entry:
_caaWs:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caaWt
_caaWu:
	movq $block_caaWl_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caaWl
_caaWm:
	movq (%rbx),%rax
	jmp *(%rax)
_caaWt:
	movl $GHC.IO.Handle.Internals.initBufferState_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.initBufferState_entry, .-GHC.IO.Handle.Internals.initBufferState_entry


==================== Asm code ====================
2018-03-16 16:05:07.431554081 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.initBufferState_info
.type GHC.IO.Handle.Internals.initBufferState_info, @object
GHC.IO.Handle.Internals.initBufferState_info:
	.quad	GHC.IO.Handle.Internals.initBufferState_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:05:07.432294258 UTC

.section .text
.align 8
_caaWl:
_caaWl:
	andl $7,%ebx
	cmpq $3,%rbx
	je _caaWq
_caaWp:
	movl $GHC.IO.Buffer.WriteBuffer_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caaWq:
	movl $GHC.IO.Buffer.ReadBuffer_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caaWl, .-_caaWl


==================== Asm code ====================
2018-03-16 16:05:07.432924113 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaWl_info:
	.quad	_caaWl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.437279799 UTC

.section .data
.align 8
.align 1
lvl3_ra7Pj_closure:
	.quad	lvl3_ra7Pj_info


==================== Asm code ====================
2018-03-16 16:05:07.437966131 UTC

.section .text
.align 8
lvl3_ra7Pj_entry:
_caaX2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caaX5
_caaX6:
	movq $block_caaWT_info,-8(%rbp)
	addq $-8,%rbp
	jmp stg_noDuplicate#
_caaX5:
	movl $lvl3_ra7Pj_closure,%ebx
	jmp *-8(%r13)
	.size lvl3_ra7Pj_entry, .-lvl3_ra7Pj_entry


==================== Asm code ====================
2018-03-16 16:05:07.438590468 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_ra7Pj_info:
	.quad	lvl3_ra7Pj_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:07.439175197 UTC

.section .text
.align 8
_caaWT:
_caaWT:
	movq $block_caaWV_info,(%rbp)
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	jmp stg_newMutVar#
	.size _caaWT, .-_caaWT


==================== Asm code ====================
2018-03-16 16:05:07.439767006 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaWT_info:
	.quad	_caaWT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.440408512 UTC

.section .text
.align 8
_caaWV:
_caaWV:
	movq $block_caaWX_info,-8(%rbp)
	movq %rbx,%rax
	movl $4,%ebx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_newPinnedByteArray#
	.size _caaWV, .-_caaWV


==================== Asm code ====================
2018-03-16 16:05:07.440964276 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaWV_info:
	.quad	_caaWV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.441729518 UTC

.section .text
.align 8
_caaWX:
_caaWX:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _caaXb
_caaXa:
	movq $GHC.ForeignPtr.MallocPtr_con_info,-72(%r12)
	movq %rbx,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	leaq -70(%r12),%rax
	movq %rax,-40(%r12)
	movq $GHC.IO.Buffer.ReadBuffer_closure+1,-32(%r12)
	leaq 16(%rbx),%rax
	movq %rax,-24(%r12)
	movq $1,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caaXb:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caaWX, .-_caaWX


==================== Asm code ====================
2018-03-16 16:05:07.442436631 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaWX_info:
	.quad	_caaWX
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.445229531 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.noCharBuffer_closure
.type GHC.IO.Handle.Internals.noCharBuffer_closure, @object
GHC.IO.Handle.Internals.noCharBuffer_closure:
	.quad	GHC.IO.Handle.Internals.noCharBuffer_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.446429132 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.noCharBuffer_entry
.type GHC.IO.Handle.Internals.noCharBuffer_entry, @object
GHC.IO.Handle.Internals.noCharBuffer_entry:
_caaXC:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caaXD
_caaXE:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caaXz
_caaXy:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_caaXA_info,-24(%rbp)
	addq $-24,%rbp
	jmp lvl3_ra7Pj_entry
_caaXD:
	jmp *-16(%r13)
_caaXz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.noCharBuffer_entry, .-GHC.IO.Handle.Internals.noCharBuffer_entry


==================== Asm code ====================
2018-03-16 16:05:07.447067398 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.noCharBuffer_info
.type GHC.IO.Handle.Internals.noCharBuffer_info, @object
GHC.IO.Handle.Internals.noCharBuffer_info:
	.quad	GHC.IO.Handle.Internals.noCharBuffer_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:07.447703529 UTC

.section .text
.align 8
_caaXA:
_caaXA:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caaXA, .-_caaXA


==================== Asm code ====================
2018-03-16 16:05:07.448270623 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaXA_info:
	.quad	_caaXA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.45168888 UTC

.section .data
.align 8
.align 1
lvl4_ra7Pk_closure:
	.quad	lvl4_ra7Pk_info


==================== Asm code ====================
2018-03-16 16:05:07.45239244 UTC

.section .text
.align 8
lvl4_ra7Pk_entry:
_caaY5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caaY8
_caaY9:
	movq $block_caaXW_info,-8(%rbp)
	addq $-8,%rbp
	jmp stg_noDuplicate#
_caaY8:
	movl $lvl4_ra7Pk_closure,%ebx
	jmp *-8(%r13)
	.size lvl4_ra7Pk_entry, .-lvl4_ra7Pk_entry


==================== Asm code ====================
2018-03-16 16:05:07.452990954 UTC

.section .data.rel.ro
.align 8
.align 1
lvl4_ra7Pk_info:
	.quad	lvl4_ra7Pk_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:07.45358415 UTC

.section .text
.align 8
_caaXW:
_caaXW:
	movq $block_caaXY_info,(%rbp)
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	jmp stg_newMutVar#
	.size _caaXW, .-_caaXW


==================== Asm code ====================
2018-03-16 16:05:07.454111735 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaXW_info:
	.quad	_caaXW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.454744786 UTC

.section .text
.align 8
_caaXY:
_caaXY:
	movq $block_caaY0_info,-8(%rbp)
	movq %rbx,%rax
	movl $1,%ebx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_newPinnedByteArray#
	.size _caaXY, .-_caaXY


==================== Asm code ====================
2018-03-16 16:05:07.455333048 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaXY_info:
	.quad	_caaXY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.456051873 UTC

.section .text
.align 8
_caaY0:
_caaY0:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _caaYe
_caaYd:
	movq $GHC.ForeignPtr.MallocPtr_con_info,-72(%r12)
	movq %rbx,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	leaq -70(%r12),%rax
	movq %rax,-40(%r12)
	movq $GHC.IO.Buffer.ReadBuffer_closure+1,-32(%r12)
	leaq 16(%rbx),%rax
	movq %rax,-24(%r12)
	movq $1,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caaYe:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
	.size _caaY0, .-_caaY0


==================== Asm code ====================
2018-03-16 16:05:07.456709617 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaY0_info:
	.quad	_caaY0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.45980668 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.noByteBuffer_closure
.type GHC.IO.Handle.Internals.noByteBuffer_closure, @object
GHC.IO.Handle.Internals.noByteBuffer_closure:
	.quad	GHC.IO.Handle.Internals.noByteBuffer_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.460580896 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.noByteBuffer_entry
.type GHC.IO.Handle.Internals.noByteBuffer_entry, @object
GHC.IO.Handle.Internals.noByteBuffer_entry:
_caaYF:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caaYG
_caaYH:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caaYC
_caaYB:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_caaYD_info,-24(%rbp)
	addq $-24,%rbp
	jmp lvl4_ra7Pk_entry
_caaYG:
	jmp *-16(%r13)
_caaYC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.noByteBuffer_entry, .-GHC.IO.Handle.Internals.noByteBuffer_entry


==================== Asm code ====================
2018-03-16 16:05:07.461230759 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.noByteBuffer_info
.type GHC.IO.Handle.Internals.noByteBuffer_info, @object
GHC.IO.Handle.Internals.noByteBuffer_info:
	.quad	GHC.IO.Handle.Internals.noByteBuffer_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:07.461905601 UTC

.section .text
.align 8
_caaYD:
_caaYD:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caaYD, .-_caaYD


==================== Asm code ====================
2018-03-16 16:05:07.462418423 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaYD_info:
	.quad	_caaYD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.464081901 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Internals.$trModule4_bytes
.type GHC.IO.Handle.Internals.$trModule4_bytes, @object
GHC.IO.Handle.Internals.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:05:07.465758246 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$trModule3_closure
.type GHC.IO.Handle.Internals.$trModule3_closure, @object
GHC.IO.Handle.Internals.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Internals.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:05:07.467950499 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Internals.$trModule2_bytes
.type GHC.IO.Handle.Internals.$trModule2_bytes, @object
GHC.IO.Handle.Internals.$trModule2_bytes:
	.asciz "GHC.IO.Handle.Internals"


==================== Asm code ====================
2018-03-16 16:05:07.469990759 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$trModule1_closure
.type GHC.IO.Handle.Internals.$trModule1_closure, @object
GHC.IO.Handle.Internals.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Internals.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:05:07.471645525 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$trModule_closure
.type GHC.IO.Handle.Internals.$trModule_closure, @object
GHC.IO.Handle.Internals.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.IO.Handle.Internals.$trModule3_closure+1
	.quad	GHC.IO.Handle.Internals.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:05:07.473266283 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl5_ra7Pl_bytes:
	.asciz "handle is finalized"


==================== Asm code ====================
2018-03-16 16:05:07.475791648 UTC

.section .data
.align 8
.align 1
lvl6_ra7Pm_closure:
	.quad	lvl6_ra7Pm_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.47664068 UTC

.section .text
.align 8
lvl6_ra7Pm_entry:
_caaZ7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caaZ8
_caaZ9:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _caaZ6
_caaZ5:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl5_ra7Pl_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_caaZ8:
	jmp *-16(%r13)
_caaZ6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl6_ra7Pm_entry, .-lvl6_ra7Pm_entry


==================== Asm code ====================
2018-03-16 16:05:07.477286605 UTC

.section .data.rel.ro
.align 8
.align 1
lvl6_ra7Pm_info:
	.quad	lvl6_ra7Pm_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:07.479889462 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_finalizedHandle_closure
.type GHC.IO.Handle.Internals.ioe_finalizedHandle_closure, @object
GHC.IO.Handle.Internals.ioe_finalizedHandle_closure:
	.quad	GHC.IO.Handle.Internals.ioe_finalizedHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.480641814 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_finalizedHandle_entry
.type GHC.IO.Handle.Internals.ioe_finalizedHandle_entry, @object
GHC.IO.Handle.Internals.ioe_finalizedHandle_entry:
_caaZn:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _caaZr
_caaZq:
	movq $GHC.Base.Just_con_info,-64(%r12)
	movq %r14,-56(%r12)
	movq $GHC.IO.Exception.IOError_con_info,-48(%r12)
	movq $GHC.Base.Nothing_closure+1,-40(%r12)
	movq $GHC.IO.Exception.IllegalOperation_closure+1,-32(%r12)
	movq $GHC.Types.[]_closure+1,-24(%r12)
	movq $lvl6_ra7Pm_closure,-16(%r12)
	movq $GHC.Base.Nothing_closure+1,-8(%r12)
	leaq -62(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rsi
	movl $GHC.IO.Exception.$fExceptionIOException_closure,%r14d
	jmp GHC.Exception.throw_entry
_caaZr:
	movq $72,904(%r13)
	movl $GHC.IO.Handle.Internals.ioe_finalizedHandle_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.ioe_finalizedHandle_entry, .-GHC.IO.Handle.Internals.ioe_finalizedHandle_entry


==================== Asm code ====================
2018-03-16 16:05:07.483571606 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_finalizedHandle_info
.type GHC.IO.Handle.Internals.ioe_finalizedHandle_info, @object
GHC.IO.Handle.Internals.ioe_finalizedHandle_info:
	.quad	GHC.IO.Handle.Internals.ioe_finalizedHandle_entry
	.quad	0
	.quad	30064771086
	.quad	4294967301
	.quad	Sa8nI_srt+160


==================== Asm code ====================
2018-03-16 16:05:07.489889289 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.closeTextCodecs1_closure
.type GHC.IO.Handle.Internals.closeTextCodecs1_closure, @object
GHC.IO.Handle.Internals.closeTextCodecs1_closure:
	.quad	GHC.IO.Handle.Internals.closeTextCodecs1_info


==================== Asm code ====================
2018-03-16 16:05:07.490687139 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.closeTextCodecs1_entry
.type GHC.IO.Handle.Internals.closeTextCodecs1_entry, @object
GHC.IO.Handle.Internals.closeTextCodecs1_entry:
_caaZE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caaZF
_caaZG:
	movq $block_caaZB_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caaZB
_caaZC:
	movq (%rbx),%rax
	jmp *(%rax)
_caaZF:
	movl $GHC.IO.Handle.Internals.closeTextCodecs1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.closeTextCodecs1_entry, .-GHC.IO.Handle.Internals.closeTextCodecs1_entry


==================== Asm code ====================
2018-03-16 16:05:07.49135855 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.closeTextCodecs1_info
.type GHC.IO.Handle.Internals.closeTextCodecs1_info, @object
GHC.IO.Handle.Internals.closeTextCodecs1_info:
	.quad	GHC.IO.Handle.Internals.closeTextCodecs1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:07.492039439 UTC

.section .text
.align 8
_caaZB:
_caaZB:
	movq $block_caaZJ_info,-8(%rbp)
	movq 87(%rbx),%rax
	movq 95(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _caaZJ
_caaZL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caaZB, .-_caaZB


==================== Asm code ====================
2018-03-16 16:05:07.492699116 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaZB_info:
	.quad	_caaZB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.493505458 UTC

.section .text
.align 8
_caaZJ:
_caaZJ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _caaZS
_cab0e:
	movq $block_cab0c_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cab0c
_cab0f:
	movq (%rbx),%rax
	jmp *(%rax)
_caaZS:
	movq 8(%rbp),%rax
	movq $block_caaZP_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _caaZP
_caaZT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caaZJ, .-_caaZJ


==================== Asm code ====================
2018-03-16 16:05:07.494152236 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaZJ_info:
	.quad	_caaZJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.494838637 UTC

.section .text
.align 8
_caaZP:
_caaZP:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uab0J
_cab04:
	movq $block_cab02_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cab02
_cab05:
	movq (%rbx),%rax
	jmp *(%rax)
_uab0J:
	addq $8,%rbp
	jmp _cab0u
	.size _caaZP, .-_caaZP


==================== Asm code ====================
2018-03-16 16:05:07.495502446 UTC

.section .data.rel.ro
.align 8
.align 1
block_caaZP_info:
	.quad	_caaZP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.496117448 UTC

.section .text
.align 8
_cab02:
_cab02:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_v_fast
	.size _cab02, .-_cab02


==================== Asm code ====================
2018-03-16 16:05:07.496688646 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab02_info:
	.quad	_cab02
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.497324891 UTC

.section .text
.align 8
_cab0c:
_cab0c:
	movq $block_cab0j_info,(%rbp)
	movq 23(%rbx),%rbx
	jmp stg_ap_v_fast
	.size _cab0c, .-_cab0c


==================== Asm code ====================
2018-03-16 16:05:07.4978765 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab0c_info:
	.quad	_cab0c
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.498487849 UTC

.section .text
.align 8
_cab0j:
_cab0j:
	movq 8(%rbp),%rax
	movq $block_cab0l_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cab0l
_cab0o:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cab0j, .-_cab0j


==================== Asm code ====================
2018-03-16 16:05:07.499045592 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab0j_info:
	.quad	_cab0j
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.499742056 UTC

.section .text
.align 8
_cab0l:
_cab0l:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uab0I
_cab0z:
	movq $block_cab0x_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cab0x
_cab0A:
	movq (%rbx),%rax
	jmp *(%rax)
_uab0I:
	addq $8,%rbp
	jmp _cab0u
	.size _cab0l, .-_cab0l


==================== Asm code ====================
2018-03-16 16:05:07.500315342 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab0l_info:
	.quad	_cab0l
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.500910168 UTC

.section .text
.align 8
_cab0u:
_cab0u:
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cab0u, .-_cab0u


==================== Asm code ====================
2018-03-16 16:05:07.501953914 UTC

.section .text
.align 8
_cab0x:
_cab0x:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_v_fast
	.size _cab0x, .-_cab0x


==================== Asm code ====================
2018-03-16 16:05:07.503233252 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab0x_info:
	.quad	_cab0x
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.505585533 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.closeTextCodecs_closure
.type GHC.IO.Handle.Internals.closeTextCodecs_closure, @object
GHC.IO.Handle.Internals.closeTextCodecs_closure:
	.quad	GHC.IO.Handle.Internals.closeTextCodecs_info


==================== Asm code ====================
2018-03-16 16:05:07.50629373 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.closeTextCodecs_entry
.type GHC.IO.Handle.Internals.closeTextCodecs_entry, @object
GHC.IO.Handle.Internals.closeTextCodecs_entry:
_cab1G:
	jmp GHC.IO.Handle.Internals.closeTextCodecs1_entry
	.size GHC.IO.Handle.Internals.closeTextCodecs_entry, .-GHC.IO.Handle.Internals.closeTextCodecs_entry


==================== Asm code ====================
2018-03-16 16:05:07.506828111 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.closeTextCodecs_info
.type GHC.IO.Handle.Internals.closeTextCodecs_info, @object
GHC.IO.Handle.Internals.closeTextCodecs_info:
	.quad	GHC.IO.Handle.Internals.closeTextCodecs_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:07.516106512 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.openTextEncoding1_closure
.type GHC.IO.Handle.Internals.openTextEncoding1_closure, @object
GHC.IO.Handle.Internals.openTextEncoding1_closure:
	.quad	GHC.IO.Handle.Internals.openTextEncoding1_info


==================== Asm code ====================
2018-03-16 16:05:07.516864935 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.openTextEncoding1_entry
.type GHC.IO.Handle.Internals.openTextEncoding1_entry, @object
GHC.IO.Handle.Internals.openTextEncoding1_entry:
_cab1Y:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cab1Z
_cab20:
	movq $block_cab1R_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cab1R
_cab1S:
	movq (%rbx),%rax
	jmp *(%rax)
_cab1Z:
	movl $GHC.IO.Handle.Internals.openTextEncoding1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.openTextEncoding1_entry, .-GHC.IO.Handle.Internals.openTextEncoding1_entry


==================== Asm code ====================
2018-03-16 16:05:07.517561367 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.openTextEncoding1_info
.type GHC.IO.Handle.Internals.openTextEncoding1_info, @object
GHC.IO.Handle.Internals.openTextEncoding1_info:
	.quad	GHC.IO.Handle.Internals.openTextEncoding1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:05:07.518353266 UTC

.section .text
.align 8
_cab1R:
_cab1R:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cab1V
_cab1W:
	movq $block_cab26_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cab26
_cab28:
	movq (%rbx),%rax
	jmp *(%rax)
_cab1V:
	movl $GHC.Base.Nothing_closure+1,%esi
	movl $GHC.Base.Nothing_closure+1,%r14d
	movq 16(%rbp),%rbx
	addq $24,%rbp
	jmp stg_ap_ppv_fast
	.size _cab1R, .-_cab1R


==================== Asm code ====================
2018-03-16 16:05:07.51896955 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab1R_info:
	.quad	_cab1R
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.519662667 UTC

.section .text
.align 8
_cab26:
_cab26:
	movq $block_cab2e_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cab2e
_cab2W:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cab26, .-_cab26


==================== Asm code ====================
2018-03-16 16:05:07.520298985 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab26_info:
	.quad	_cab26
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.521012319 UTC

.section .text
.align 8
_cab2e:
_cab2e:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $3,%rbx
	jne _uab3p
_cab37:
	movq $block_cab35_info,(%rbp)
	movq %rax,%rbx
	jmp stg_ap_v_fast
_uab3p:
	cmpq $6,%rbx
	jne _cab32
_cab3g:
	movq $block_cab3e_info,(%rbp)
	movq %rax,%rbx
	jmp stg_ap_v_fast
_cab32:
	movq $GHC.Base.Nothing_closure+1,16(%rbp)
	addq $8,%rbp
	jmp _sa7Sv
	.size _cab2e, .-_cab2e


==================== Asm code ====================
2018-03-16 16:05:07.521880941 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab2e_info:
	.quad	_cab2e
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.522579043 UTC

.section .text
.align 8
_cab3e:
_cab3e:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cab3k
_cab3j:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _sa7Sv
_cab3k:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cab3e, .-_cab3e


==================== Asm code ====================
2018-03-16 16:05:07.523233691 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab3e_info:
	.quad	_cab3e
	.quad	132
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.523921671 UTC

.section .text
.align 8
_cab35:
_cab35:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cab3b
_cab3a:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _sa7Sv
_cab3b:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cab35, .-_cab35


==================== Asm code ====================
2018-03-16 16:05:07.524582853 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab35_info:
	.quad	_cab35
	.quad	132
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.5252885 UTC

.section .text
.align 8
_sa7Sv:
_sa7Sv:
	movq $block_cab2j_info,-8(%rbp)
	movq 16(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cab2j
_cab2l:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sa7Sv, .-_sa7Sv


==================== Asm code ====================
2018-03-16 16:05:07.526079874 UTC

.section .text
.align 8
_cab2j:
_cab2j:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $5,%rbx
	jb _uab3q
_uab3r:
	cmpq $6,%rbx
	jb _cab2I
_cab2S:
	movq $block_cab2O_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	jmp stg_ap_v_fast
_cab2I:
	movq $block_cab2E_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	jmp stg_ap_v_fast
_uab3q:
	cmpq $4,%rbx
	jb _cab2r
_cab2y:
	movq $block_cab2u_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	jmp stg_ap_v_fast
_cab2r:
	movq 16(%rbp),%rsi
	movl $GHC.Base.Nothing_closure+1,%r14d
	movq 32(%rbp),%rbx
	addq $40,%rbp
	jmp stg_ap_ppv_fast
	.size _cab2j, .-_cab2j


==================== Asm code ====================
2018-03-16 16:05:07.526795923 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab2j_info:
	.quad	_cab2j
	.quad	260
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.527545837 UTC

.section .text
.align 8
_cab2u:
_cab2u:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cab2B
_cab2A:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rsi
	leaq -6(%r12),%r14
	movq 24(%rbp),%rbx
	addq $32,%rbp
	jmp stg_ap_ppv_fast
_cab2B:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cab2u, .-_cab2u


==================== Asm code ====================
2018-03-16 16:05:07.528189336 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab2u_info:
	.quad	_cab2u
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.528889153 UTC

.section .text
.align 8
_cab2E:
_cab2E:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cab2L
_cab2K:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rsi
	leaq -6(%r12),%r14
	movq 24(%rbp),%rbx
	addq $32,%rbp
	jmp stg_ap_ppv_fast
_cab2L:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cab2E, .-_cab2E


==================== Asm code ====================
2018-03-16 16:05:07.529542253 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab2E_info:
	.quad	_cab2E
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.530238093 UTC

.section .text
.align 8
_cab2O:
_cab2O:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cab2V
_cab2U:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rsi
	leaq -6(%r12),%r14
	movq 24(%rbp),%rbx
	addq $32,%rbp
	jmp stg_ap_ppv_fast
_cab2V:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cab2O, .-_cab2O


==================== Asm code ====================
2018-03-16 16:05:07.530884934 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab2O_info:
	.quad	_cab2O
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.533135751 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.openTextEncoding_closure
.type GHC.IO.Handle.Internals.openTextEncoding_closure, @object
GHC.IO.Handle.Internals.openTextEncoding_closure:
	.quad	GHC.IO.Handle.Internals.openTextEncoding_info


==================== Asm code ====================
2018-03-16 16:05:07.534015106 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.openTextEncoding_entry
.type GHC.IO.Handle.Internals.openTextEncoding_entry, @object
GHC.IO.Handle.Internals.openTextEncoding_entry:
_cab4o:
	jmp GHC.IO.Handle.Internals.openTextEncoding1_entry
	.size GHC.IO.Handle.Internals.openTextEncoding_entry, .-GHC.IO.Handle.Internals.openTextEncoding_entry


==================== Asm code ====================
2018-03-16 16:05:07.534600297 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.openTextEncoding_info
.type GHC.IO.Handle.Internals.openTextEncoding_info, @object
GHC.IO.Handle.Internals.openTextEncoding_info:
	.quad	GHC.IO.Handle.Internals.openTextEncoding_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:05:07.538841145 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushByteWriteBuffer1_closure
.type GHC.IO.Handle.Internals.flushByteWriteBuffer1_closure, @object
GHC.IO.Handle.Internals.flushByteWriteBuffer1_closure:
	.quad	GHC.IO.Handle.Internals.flushByteWriteBuffer1_info


==================== Asm code ====================
2018-03-16 16:05:07.53965939 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushByteWriteBuffer1_entry
.type GHC.IO.Handle.Internals.flushByteWriteBuffer1_entry, @object
GHC.IO.Handle.Internals.flushByteWriteBuffer1_entry:
_cab4C:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cab4G
_cab4H:
	movq $block_cab4z_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cab4z
_cab4A:
	movq (%rbx),%rax
	jmp *(%rax)
_cab4G:
	movl $GHC.IO.Handle.Internals.flushByteWriteBuffer1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.flushByteWriteBuffer1_entry, .-GHC.IO.Handle.Internals.flushByteWriteBuffer1_entry


==================== Asm code ====================
2018-03-16 16:05:07.540366645 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushByteWriteBuffer1_info
.type GHC.IO.Handle.Internals.flushByteWriteBuffer1_info, @object
GHC.IO.Handle.Internals.flushByteWriteBuffer1_info:
	.quad	GHC.IO.Handle.Internals.flushByteWriteBuffer1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:07.541147262 UTC

.section .text
.align 8
_cab4z:
_cab4z:
	movq $block_cab4F_info,-24(%rbp)
	movq 15(%rbx),%rax
	movq 31(%rbx),%rcx
	movq 47(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cab4F
_cab4J:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cab4z, .-_cab4z


==================== Asm code ====================
2018-03-16 16:05:07.541825937 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab4z_info:
	.quad	_cab4z
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.542594939 UTC

.section .text
.align 8
_cab4F:
_cab4F:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cab4W
_cab4T:
	movq 8(%rbp),%rax
	movq $block_cab4R_info,8(%rbp)
	movq 24(%rbp),%r14
	movq $stg_ap_ppv_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.BufferedIO.flushWriteBuffer_entry
_cab4W:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cab4F, .-_cab4F


==================== Asm code ====================
2018-03-16 16:05:07.543803695 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab4F_info:
	.quad	_cab4F
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.544541468 UTC

.section .text
.align 8
_cab4R:
_cab4R:
	movq 8(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cab4R, .-_cab4R


==================== Asm code ====================
2018-03-16 16:05:07.545182739 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab4R_info:
	.quad	_cab4R
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.5477552 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushByteWriteBuffer_closure
.type GHC.IO.Handle.Internals.flushByteWriteBuffer_closure, @object
GHC.IO.Handle.Internals.flushByteWriteBuffer_closure:
	.quad	GHC.IO.Handle.Internals.flushByteWriteBuffer_info


==================== Asm code ====================
2018-03-16 16:05:07.548336173 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushByteWriteBuffer_entry
.type GHC.IO.Handle.Internals.flushByteWriteBuffer_entry, @object
GHC.IO.Handle.Internals.flushByteWriteBuffer_entry:
_cab5q:
	jmp GHC.IO.Handle.Internals.flushByteWriteBuffer1_entry
	.size GHC.IO.Handle.Internals.flushByteWriteBuffer_entry, .-GHC.IO.Handle.Internals.flushByteWriteBuffer_entry


==================== Asm code ====================
2018-03-16 16:05:07.548926581 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushByteWriteBuffer_info
.type GHC.IO.Handle.Internals.flushByteWriteBuffer_info, @object
GHC.IO.Handle.Internals.flushByteWriteBuffer_info:
	.quad	GHC.IO.Handle.Internals.flushByteWriteBuffer_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:07.554443564 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushWriteBuffer1_closure
.type GHC.IO.Handle.Internals.flushWriteBuffer1_closure, @object
GHC.IO.Handle.Internals.flushWriteBuffer1_closure:
	.quad	GHC.IO.Handle.Internals.flushWriteBuffer1_info


==================== Asm code ====================
2018-03-16 16:05:07.555209653 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushWriteBuffer1_entry
.type GHC.IO.Handle.Internals.flushWriteBuffer1_entry, @object
GHC.IO.Handle.Internals.flushWriteBuffer1_entry:
_cab5E:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cab5I
_cab5J:
	movq $block_cab5B_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cab5B
_cab5C:
	movq (%rbx),%rax
	jmp *(%rax)
_cab5I:
	movl $GHC.IO.Handle.Internals.flushWriteBuffer1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.flushWriteBuffer1_entry, .-GHC.IO.Handle.Internals.flushWriteBuffer1_entry


==================== Asm code ====================
2018-03-16 16:05:07.555859553 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushWriteBuffer1_info
.type GHC.IO.Handle.Internals.flushWriteBuffer1_info, @object
GHC.IO.Handle.Internals.flushWriteBuffer1_info:
	.quad	GHC.IO.Handle.Internals.flushWriteBuffer1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:07.556534207 UTC

.section .text
.align 8
_cab5B:
_cab5B:
	movq $block_cab5H_info,-24(%rbp)
	movq 15(%rbx),%rax
	movq 31(%rbx),%rcx
	movq 47(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cab5H
_cab5L:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cab5B, .-_cab5B


==================== Asm code ====================
2018-03-16 16:05:07.557168901 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab5B_info:
	.quad	_cab5B
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.557834863 UTC

.section .text
.align 8
_cab5H:
_cab5H:
	movq $block_cab5P_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _cab5P
_cab5R:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cab5H, .-_cab5H


==================== Asm code ====================
2018-03-16 16:05:07.558433531 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab5H_info:
	.quad	_cab5H
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.559175836 UTC

.section .text
.align 8
_cab5P:
_cab5P:
	andl $7,%ebx
	cmpq $1,%rbx
	je _uab6l
_cab62:
	movq 16(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cab60_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cab60
_cab63:
	movq (%rbx),%rax
	jmp *(%rax)
_uab6l:
	addq $32,%rbp
	jmp _cab6g
	.size _cab5P, .-_cab5P


==================== Asm code ====================
2018-03-16 16:05:07.55981844 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab5P_info:
	.quad	_cab5P
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.5605075 UTC

.section .text
.align 8
_cab60:
_cab60:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _uab6m
_cab6d:
	movq 8(%rbp),%rax
	movq $block_cab6b_info,8(%rbp)
	movq 24(%rbp),%r14
	movq $stg_ap_ppv_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.BufferedIO.flushWriteBuffer_entry
_uab6m:
	addq $32,%rbp
	jmp _cab6g
	.size _cab60, .-_cab60


==================== Asm code ====================
2018-03-16 16:05:07.56111648 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab60_info:
	.quad	_cab60
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.561732669 UTC

.section .text
.align 8
_cab6g:
_cab6g:
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cab6g, .-_cab6g


==================== Asm code ====================
2018-03-16 16:05:07.562467259 UTC

.section .text
.align 8
_cab6b:
_cab6b:
	movq 8(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cab6b, .-_cab6b


==================== Asm code ====================
2018-03-16 16:05:07.563074224 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab6b_info:
	.quad	_cab6b
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.565236813 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushWriteBuffer_closure
.type GHC.IO.Handle.Internals.flushWriteBuffer_closure, @object
GHC.IO.Handle.Internals.flushWriteBuffer_closure:
	.quad	GHC.IO.Handle.Internals.flushWriteBuffer_info


==================== Asm code ====================
2018-03-16 16:05:07.566024611 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushWriteBuffer_entry
.type GHC.IO.Handle.Internals.flushWriteBuffer_entry, @object
GHC.IO.Handle.Internals.flushWriteBuffer_entry:
_cab74:
	jmp GHC.IO.Handle.Internals.flushWriteBuffer1_entry
	.size GHC.IO.Handle.Internals.flushWriteBuffer_entry, .-GHC.IO.Handle.Internals.flushWriteBuffer_entry


==================== Asm code ====================
2018-03-16 16:05:07.566603557 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushWriteBuffer_info
.type GHC.IO.Handle.Internals.flushWriteBuffer_info, @object
GHC.IO.Handle.Internals.flushWriteBuffer_info:
	.quad	GHC.IO.Handle.Internals.flushWriteBuffer_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:07.568219825 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl7_ra7Pn_bytes:
	.asciz "codec_state"


==================== Asm code ====================
2018-03-16 16:05:07.571004319 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.decodeByteBuf2_closure
.type GHC.IO.Handle.Internals.decodeByteBuf2_closure, @object
GHC.IO.Handle.Internals.decodeByteBuf2_closure:
	.quad	GHC.IO.Handle.Internals.decodeByteBuf2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.571823996 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.decodeByteBuf2_entry
.type GHC.IO.Handle.Internals.decodeByteBuf2_entry, @object
GHC.IO.Handle.Internals.decodeByteBuf2_entry:
_cab7k:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cab7l
_cab7m:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cab7h
_cab7g:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_cab7i_info,-24(%rbp)
	movl $lvl7_ra7Pn_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_cab7l:
	jmp *-16(%r13)
_cab7h:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.decodeByteBuf2_entry, .-GHC.IO.Handle.Internals.decodeByteBuf2_entry


==================== Asm code ====================
2018-03-16 16:05:07.572496554 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.decodeByteBuf2_info
.type GHC.IO.Handle.Internals.decodeByteBuf2_info, @object
GHC.IO.Handle.Internals.decodeByteBuf2_info:
	.quad	GHC.IO.Handle.Internals.decodeByteBuf2_entry
	.quad	0
	.quad	4294967317
	.quad	Sa8nI_srt+184


==================== Asm code ====================
2018-03-16 16:05:07.573128 UTC

.section .text
.align 8
_cab7i:
_cab7i:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size _cab7i, .-_cab7i


==================== Asm code ====================
2018-03-16 16:05:07.573697121 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab7i_info:
	.quad	_cab7i
	.quad	0
	.quad	4294967326
	.quad	Sa8nI_srt+184


==================== Asm code ====================
2018-03-16 16:05:07.581434342 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.decodeByteBuf1_closure
.type GHC.IO.Handle.Internals.decodeByteBuf1_closure, @object
GHC.IO.Handle.Internals.decodeByteBuf1_closure:
	.quad	GHC.IO.Handle.Internals.decodeByteBuf1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.582752757 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.decodeByteBuf1_entry
.type GHC.IO.Handle.Internals.decodeByteBuf1_entry, @object
GHC.IO.Handle.Internals.decodeByteBuf1_entry:
_cab7H:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cab7I
_cab7J:
	movq $block_cab7E_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cab7E
_cab7F:
	movq (%rbx),%rax
	jmp *(%rax)
_cab7I:
	movl $GHC.IO.Handle.Internals.decodeByteBuf1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.decodeByteBuf1_entry, .-GHC.IO.Handle.Internals.decodeByteBuf1_entry


==================== Asm code ====================
2018-03-16 16:05:07.583564554 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.decodeByteBuf1_info
.type GHC.IO.Handle.Internals.decodeByteBuf1_info, @object
GHC.IO.Handle.Internals.decodeByteBuf1_info:
	.quad	GHC.IO.Handle.Internals.decodeByteBuf1_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	Sa8nI_srt+192


==================== Asm code ====================
2018-03-16 16:05:07.584299228 UTC

.section .text
.align 8
_cab7E:
_cab7E:
	movq $block_cab7M_info,-24(%rbp)
	movq 47(%rbx),%rax
	movq 63(%rbx),%rcx
	movq 95(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq 8(%rax),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cab7M
_cab7O:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cab7E, .-_cab7E


==================== Asm code ====================
2018-03-16 16:05:07.584909853 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab7E_info:
	.quad	_cab7E
	.quad	1
	.quad	4294967326
	.quad	Sa8nI_srt+200


==================== Asm code ====================
2018-03-16 16:05:07.586196365 UTC

.section .text
.align 8
_cab7M:
_cab7M:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cab80
_cab8r:
	movq $block_cab8c_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cab8c
_cab8d:
	movq (%rbx),%rax
	jmp *(%rax)
_cab83:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_cab80:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cab83
_cab82:
	movq $(,)_con_info,-16(%r12)
	movq $GHC.IO.Handle.Internals.decodeByteBuf2_closure,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 32(%rbp),%rbx
	movq 8(%rbp),%rcx
	leaq -15(%r12),%rdx
	movq %rdx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rdx
	movq %rcx,%rsi
	movq %rdx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cab7W_info,16(%rbp)
	movq %rbx,%rsi
	addq $16,%rbp
	jmp GHC.IO.Encoding.Latin1.latin5_entry
	.size _cab7M, .-_cab7M


==================== Asm code ====================
2018-03-16 16:05:07.586937738 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab7M_info:
	.quad	_cab7M
	.quad	4
	.quad	4294967326
	.quad	Sa8nI_srt+200


==================== Asm code ====================
2018-03-16 16:05:07.587562159 UTC

.section .text
.align 8
_cab7W:
_cab7W:
	movq $block_cab7Y_info,(%rbp)
	testb $7,%bl
	jne _cab7Y
_cab85:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cab7W, .-_cab7W


==================== Asm code ====================
2018-03-16 16:05:07.588151276 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab7W_info:
	.quad	_cab7W
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.588824559 UTC

.section .text
.align 8
_cab7Y:
_cab7Y:
	movq 8(%rbp),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rax,%rsi
	movq %rcx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cab7Y, .-_cab7Y


==================== Asm code ====================
2018-03-16 16:05:07.589446402 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab7Y_info:
	.quad	_cab7Y
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.590115443 UTC

.section .text
.align 8
_cab8c:
_cab8c:
	movq $block_cab8h_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp stg_ap_v_fast
	.size _cab8c, .-_cab8c


==================== Asm code ====================
2018-03-16 16:05:07.590732088 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab8c_info:
	.quad	_cab8c
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.591544849 UTC

.section .text
.align 8
_cab8h:
_cab8h:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cab8v
_cab8u:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq 48(%rbp),%rbx
	movq 24(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq 8(%rbp),%rsi
	leaq -15(%r12),%rdi
	movq %rdi,8(%rcx)
	subq $8,%rsp
	movq %r13,%rdi
	movq %rsi,%r8
	movq %rcx,%rsi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cab8n_info,32(%rbp)
	movq %rbx,%r8
	movq %r14,%rdi
	movq 72(%rsp),%rax
	movq %rax,%rsi
	movq 64(%rsp),%rax
	movq %rax,%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_cab8v:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cab8h, .-_cab8h


==================== Asm code ====================
2018-03-16 16:05:07.592315466 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab8h_info:
	.quad	_cab8h
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.592993409 UTC

.section .text
.align 8
_cab8n:
_cab8n:
	movq $block_cab8p_info,(%rbp)
	testb $7,%bl
	jne _cab8p
_cab8x:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cab8n, .-_cab8n


==================== Asm code ====================
2018-03-16 16:05:07.593610939 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab8n_info:
	.quad	_cab8n
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.594330838 UTC

.section .text
.align 8
_cab8p:
_cab8p:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rax,%rsi
	movq %rcx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cab8p, .-_cab8p


==================== Asm code ====================
2018-03-16 16:05:07.594961658 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab8p_info:
	.quad	_cab8p
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.597225099 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.decodeByteBuf_closure
.type GHC.IO.Handle.Internals.decodeByteBuf_closure, @object
GHC.IO.Handle.Internals.decodeByteBuf_closure:
	.quad	GHC.IO.Handle.Internals.decodeByteBuf_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.598005628 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.decodeByteBuf_entry
.type GHC.IO.Handle.Internals.decodeByteBuf_entry, @object
GHC.IO.Handle.Internals.decodeByteBuf_entry:
_cab9B:
	jmp GHC.IO.Handle.Internals.decodeByteBuf1_entry
	.size GHC.IO.Handle.Internals.decodeByteBuf_entry, .-GHC.IO.Handle.Internals.decodeByteBuf_entry


==================== Asm code ====================
2018-03-16 16:05:07.598584647 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.decodeByteBuf_info
.type GHC.IO.Handle.Internals.decodeByteBuf_info, @object
GHC.IO.Handle.Internals.decodeByteBuf_info:
	.quad	GHC.IO.Handle.Internals.decodeByteBuf_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	Sa8nI_srt+192


==================== Asm code ====================
2018-03-16 16:05:07.604074674 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_closure
.type GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_closure, @object
GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_closure:
	.quad	GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.604893851 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_entry
.type GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_entry, @object
GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_entry:
_cab9P:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cab9T
_cab9U:
	movq $block_cab9M_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cab9M
_cab9N:
	movq (%rbx),%rax
	jmp *(%rax)
_cab9T:
	movl $GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_entry, .-GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_entry


==================== Asm code ====================
2018-03-16 16:05:07.605574365 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_info
.type GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_info, @object
GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_info:
	.quad	GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_entry
	.quad	0
	.quad	2814754062073870
	.quad	12884901903
	.quad	Sa8nI_srt+56


==================== Asm code ====================
2018-03-16 16:05:07.606294467 UTC

.section .text
.align 8
_cab9M:
_cab9M:
	movq $block_cab9S_info,-32(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 47(%rbx),%rbx
	movq %rbx,%rsi
	movq 8(%rbx),%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	movq %rax,(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cab9S
_cab9W:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cab9M, .-_cab9M


==================== Asm code ====================
2018-03-16 16:05:07.606978156 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab9M_info:
	.quad	_cab9M
	.quad	1
	.quad	562954248388638
	.quad	Sa8nI_srt+56


==================== Asm code ====================
2018-03-16 16:05:07.607714846 UTC

.section .text
.align 8
_cab9S:
_cab9S:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cabaa
_caba4:
	movq 40(%rbp),%rsi
	movq 32(%rbp),%r14
	addq $48,%rbp
	jmp GHC.IO.Handle.Internals.decodeByteBuf1_entry
_cabaa:
	movq 16(%rbp),%rax
	movq $block_caba7_info,16(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_ppv_info,-8(%rbp)
	movq %rax,(%rbp)
	movq %rbx,8(%rbp)
	addq $-8,%rbp
	jmp GHC.IO.BufferedIO.fillReadBuffer0_entry
	.size _cab9S, .-_cab9S


==================== Asm code ====================
2018-03-16 16:05:07.608384702 UTC

.section .data.rel.ro
.align 8
.align 1
block_cab9S_info:
	.quad	_cab9S
	.quad	5
	.quad	562954248388638
	.quad	Sa8nI_srt+56


==================== Asm code ====================
2018-03-16 16:05:07.609064778 UTC

.section .text
.align 8
_caba7:
_caba7:
	movq $block_caba9_info,(%rbp)
	testb $7,%bl
	jne _caba9
_cabac:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caba7, .-_caba7


==================== Asm code ====================
2018-03-16 16:05:07.610129452 UTC

.section .data.rel.ro
.align 8
.align 1
block_caba7_info:
	.quad	_caba7
	.quad	3
	.quad	562954248388638
	.quad	Sa8nI_srt+56


==================== Asm code ====================
2018-03-16 16:05:07.610818891 UTC

.section .text
.align 8
_caba9:
_caba9:
	movq $block_cabag_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cabag
_cabai:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caba9, .-_caba9


==================== Asm code ====================
2018-03-16 16:05:07.611440691 UTC

.section .data.rel.ro
.align 8
.align 1
block_caba9_info:
	.quad	_caba9
	.quad	3
	.quad	562954248388638
	.quad	Sa8nI_srt+56


==================== Asm code ====================
2018-03-16 16:05:07.612248795 UTC

.section .text
.align 8
_cabag:
_cabag:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cabao
_cabas:
	movq 32(%rbp),%rax
	movq 24(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq %rdx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rdx
	movq %rcx,%rsi
	movq %rdx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR
	addq $8,%rsp
	movq %r14,%rsi
	movq %rbx,%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.decodeByteBuf1_entry
_cabao:
	movl $GHC.IO.Handle.Internals.hLookAhead_3_closure,%ebx
	addq $40,%rbp
	jmp stg_raiseIO#
	.size _cabag, .-_cabag


==================== Asm code ====================
2018-03-16 16:05:07.612933787 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabag_info:
	.quad	_cabag
	.quad	4
	.quad	562954248388638
	.quad	Sa8nI_srt+56


==================== Asm code ====================
2018-03-16 16:05:07.615311413 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.readTextDeviceNonBlocking_closure
.type GHC.IO.Handle.Internals.readTextDeviceNonBlocking_closure, @object
GHC.IO.Handle.Internals.readTextDeviceNonBlocking_closure:
	.quad	GHC.IO.Handle.Internals.readTextDeviceNonBlocking_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.615966262 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.readTextDeviceNonBlocking_entry
.type GHC.IO.Handle.Internals.readTextDeviceNonBlocking_entry, @object
GHC.IO.Handle.Internals.readTextDeviceNonBlocking_entry:
_cabb7:
	jmp GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_entry
	.size GHC.IO.Handle.Internals.readTextDeviceNonBlocking_entry, .-GHC.IO.Handle.Internals.readTextDeviceNonBlocking_entry


==================== Asm code ====================
2018-03-16 16:05:07.61657956 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.readTextDeviceNonBlocking_info
.type GHC.IO.Handle.Internals.readTextDeviceNonBlocking_info, @object
GHC.IO.Handle.Internals.readTextDeviceNonBlocking_info:
	.quad	GHC.IO.Handle.Internals.readTextDeviceNonBlocking_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	Sa8nI_srt+208


==================== Asm code ====================
2018-03-16 16:05:07.635429356 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle2_closure
.type GHC.IO.Handle.Internals.wantReadableHandle2_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle2_closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.63631239 UTC

.section .text
.align 8
sat_sa7WE_entry:
_cabc5:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cabc9
_cabca:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cabc2_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cabc2
_cabc3:
	movq (%rbx),%rax
	jmp *(%rax)
_cabc9:
	jmp *-16(%r13)
	.size sat_sa7WE_entry, .-sat_sa7WE_entry


==================== Asm code ====================
2018-03-16 16:05:07.636932889 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa7WE_info:
	.quad	sat_sa7WE_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:07.637711081 UTC

.section .text
.align 8
_cabc2:
_cabc2:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cabcd
_cabcc:
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rsi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq $GHC.IO.Buffer.ReadBuffer_closure+1,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabcd:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabc2, .-_cabc2


==================== Asm code ====================
2018-03-16 16:05:07.638418589 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabc2_info:
	.quad	_cabc2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.639186677 UTC

.section .text
.align 8
sat_sa7WQ_entry:
_cabcp:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cabct
_cabcu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cabcm_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cabcm
_cabcn:
	movq (%rbx),%rax
	jmp *(%rax)
_cabct:
	jmp *-16(%r13)
	.size sat_sa7WQ_entry, .-sat_sa7WQ_entry


==================== Asm code ====================
2018-03-16 16:05:07.639867748 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa7WQ_info:
	.quad	sat_sa7WQ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:07.640649799 UTC

.section .text
.align 8
_cabcm:
_cabcm:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cabcx
_cabcw:
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rsi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq $GHC.IO.Buffer.ReadBuffer_closure+1,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabcx:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabcm, .-_cabcm


==================== Asm code ====================
2018-03-16 16:05:07.641403174 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabcm_info:
	.quad	_cabcm
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.642132918 UTC

.section .text
.align 8
sat_sa7X2_entry:
_cabcH:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cabcL
_cabcM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cabcE_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cabcE
_cabcF:
	movq (%rbx),%rax
	jmp *(%rax)
_cabcL:
	jmp *-16(%r13)
	.size sat_sa7X2_entry, .-sat_sa7X2_entry


==================== Asm code ====================
2018-03-16 16:05:07.642788887 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa7X2_info:
	.quad	sat_sa7X2_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:07.643552697 UTC

.section .text
.align 8
_cabcE:
_cabcE:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cabcP
_cabcO:
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rsi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq $GHC.IO.Buffer.ReadBuffer_closure+1,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabcP:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabcE, .-_cabcE


==================== Asm code ====================
2018-03-16 16:05:07.644265594 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabcE_info:
	.quad	_cabcE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.644981458 UTC

.section .text
.align 8
sat_sa7Xe_entry:
_cabd1:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cabd5
_cabd6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cabcY_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cabcY
_cabcZ:
	movq (%rbx),%rax
	jmp *(%rax)
_cabd5:
	jmp *-16(%r13)
	.size sat_sa7Xe_entry, .-sat_sa7Xe_entry


==================== Asm code ====================
2018-03-16 16:05:07.645676687 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa7Xe_info:
	.quad	sat_sa7Xe_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:07.646443624 UTC

.section .text
.align 8
_cabcY:
_cabcY:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cabd9
_cabd8:
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rsi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq $GHC.IO.Buffer.ReadBuffer_closure+1,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabd9:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabcY, .-_cabcY


==================== Asm code ====================
2018-03-16 16:05:07.64714145 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabcY_info:
	.quad	_cabcY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.647824606 UTC

.section .text
.align 8
sat_sa7Xq_entry:
_cabdj:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cabdn
_cabdo:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cabdg_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cabdg
_cabdh:
	movq (%rbx),%rax
	jmp *(%rax)
_cabdn:
	jmp *-16(%r13)
	.size sat_sa7Xq_entry, .-sat_sa7Xq_entry


==================== Asm code ====================
2018-03-16 16:05:07.648472053 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa7Xq_info:
	.quad	sat_sa7Xq_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:07.649219998 UTC

.section .text
.align 8
_cabdg:
_cabdg:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cabdr
_cabdq:
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rsi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq $GHC.IO.Buffer.ReadBuffer_closure+1,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabdr:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabdg, .-_cabdg


==================== Asm code ====================
2018-03-16 16:05:07.649976201 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabdg_info:
	.quad	_cabdg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.650691819 UTC

.section .text
.align 8
sat_sa7XC_entry:
_cabdD:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cabdH
_cabdI:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cabdA_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cabdA
_cabdB:
	movq (%rbx),%rax
	jmp *(%rax)
_cabdH:
	jmp *-16(%r13)
	.size sat_sa7XC_entry, .-sat_sa7XC_entry


==================== Asm code ====================
2018-03-16 16:05:07.651352508 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa7XC_info:
	.quad	sat_sa7XC_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:07.652088347 UTC

.section .text
.align 8
_cabdA:
_cabdA:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cabdL
_cabdK:
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rsi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq $GHC.IO.Buffer.ReadBuffer_closure+1,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabdL:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabdA, .-_cabdA


==================== Asm code ====================
2018-03-16 16:05:07.652780895 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabdA_info:
	.quad	_cabdA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.653947602 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle2_entry
.type GHC.IO.Handle.Internals.wantReadableHandle2_entry, @object
GHC.IO.Handle.Internals.wantReadableHandle2_entry:
_cabdN:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cabdO
_cabdP:
	movq $block_cabbi_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cabbi
_cabbj:
	movq (%rbx),%rax
	jmp *(%rax)
_cabdO:
	movl $GHC.IO.Handle.Internals.wantReadableHandle2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.wantReadableHandle2_entry, .-GHC.IO.Handle.Internals.wantReadableHandle2_entry


==================== Asm code ====================
2018-03-16 16:05:07.654624568 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle2_info
.type GHC.IO.Handle.Internals.wantReadableHandle2_info, @object
GHC.IO.Handle.Internals.wantReadableHandle2_info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle2_entry
	.quad	0
	.quad	144116326242189326
	.quad	12884901903
	.quad	Sa8nI_srt+16


==================== Asm code ====================
2018-03-16 16:05:07.655421687 UTC

.section .text
.align 8
_cabbi:
_cabbi:
	movq $block_cabbn_info,-40(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 71(%rbx),%rdi
	movq 39(%rbx),%rbx
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	movq %rax,(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cabbn
_cabbo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabbi, .-_cabbi


==================== Asm code ====================
2018-03-16 16:05:07.656051625 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabbi_info:
	.quad	_cabbi
	.quad	1
	.quad	1138166333470
	.quad	Sa8nI_srt+16


==================== Asm code ====================
2018-03-16 16:05:07.656844431 UTC

.section .text
.align 8
_cabbn:
_cabbn:
	andl $7,%ebx
	jmp *_nabfT(,%rbx,8)
_uabeF:
	addq $40,%rbp
	jmp _cabed
_cabe6:
	movl $GHC.IO.Handle.Internals.wantReadableHandle3_closure,%ebx
	addq $56,%rbp
	jmp stg_raiseIO#
_cabdX:
	movl $GHC.IO.Handle.Internals.wantReadableHandle7_closure,%ebx
	addq $56,%rbp
	jmp stg_raiseIO#
_cabdU:
	movl $GHC.IO.Handle.Internals.wantReadableHandle11_closure,%ebx
	addq $56,%rbp
	jmp stg_raiseIO#
_cabe8:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cabbx_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cabbx
_cabby:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabbn, .-_cabbn
.section .rodata
.align 8
.align 1
_nabfT:
	.quad	0
	.quad	_cabdU
	.quad	_cabdX
	.quad	_uabeF
	.quad	_cabe6
	.quad	_cabe6
	.quad	_cabe8


==================== Asm code ====================
2018-03-16 16:05:07.657614783 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabbn_info:
	.quad	_cabbn
	.quad	6
	.quad	1138166333470
	.quad	Sa8nI_srt+16


==================== Asm code ====================
2018-03-16 16:05:07.658386826 UTC

.section .text
.align 8
_cabbx:
_cabbx:
	movq $block_cabbC_info,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cabbC
_cabbD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabbx, .-_cabbx


==================== Asm code ====================
2018-03-16 16:05:07.658977906 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabbx_info:
	.quad	_cabbx
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.660047822 UTC

.section .text
.align 8
_cabbC:
_cabbC:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uabeG
_cabee:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cabeh
_cabeg:
	movq 40(%rbp),%rax
	movq 16(%rbp),%rbx
	cmpq 8(%rbp),%rbx
	je _cabet
_cabej:
	movq 8(%rax),%rax
	addq $-48,%r12
	movq $block_cabbL_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cabbL
_cabbM:
	movq (%rbx),%rax
	jmp *(%rax)
_uabeG:
	addq $56,%rbp
	jmp _cabed
_cabet:
	movq 48(%rbp),%rbx
	movq 8(%rbx),%rcx
	movq $sat_sa7Xq_info,-40(%r12)
	movq %rcx,-24(%r12)
	movq 64(%rbp),%rcx
	movq 56(%rbp),%rdx
	leaq -40(%r12),%rsi
	movq %rsi,8(%rbx)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rbx,%rsi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq 8(%rbx),%rax
	movq $sat_sa7XC_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rax
	movq %rax,8(%rbx)
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movq %r14,%rbx
	movq 64(%rsp),%rax
	movq %rax,%r14
	addq $72,%rbp
	jmp stg_ap_pv_fast
_cabeh:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabbC, .-_cabbC


==================== Asm code ====================
2018-03-16 16:05:07.660933647 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabbC_info:
	.quad	_cabbC
	.quad	200
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.661940894 UTC

.section .text
.align 8
_cabbL:
_cabbL:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cabem
_cabel:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cabes
_cabeo:
	addq $-48,%r12
	movq 16(%rbp),%rax
	movq $block_cabbT_info,16(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_ppv_info,-8(%rbp)
	movq %rax,(%rbp)
	movq %rbx,8(%rbp)
	addq $-8,%rbp
	jmp GHC.IO.BufferedIO.flushWriteBuffer_entry
_cabes:
	movq 32(%rbp),%rax
	movq 8(%rax),%rcx
	movq $sat_sa7X2_info,-40(%r12)
	movq %rcx,-24(%r12)
	movq 48(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 24(%rbp),%rsi
	leaq -40(%r12),%rdi
	movq %rdi,8(%rax)
	subq $8,%rsp
	movq %r13,%rdi
	movq %rsi,%r8
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq 72(%rsp),%rax
	movq 8(%rax),%rcx
	movq $sat_sa7Xe_info,-16(%r12)
	movq %rcx,(%r12)
	leaq -16(%r12),%rcx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rax,%rsi
	movq %rcx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movq %r14,%rcx
	movq 64(%rsp),%rax
	movq %rax,%r14
	movq %rcx,%rbx
	addq $56,%rbp
	jmp stg_ap_pv_fast
_cabem:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabbL, .-_cabbL


==================== Asm code ====================
2018-03-16 16:05:07.662838125 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabbL_info:
	.quad	_cabbL
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.663759159 UTC

.section .text
.align 8
_cabbT:
_cabbT:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _caber
_cabeq:
	movq 32(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq 16(%rbp),%rsi
	movq %rbx,8(%rdx)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rsi,%rdi
	movq %rdx,%rsi
	movq %rdi,%r8
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq 72(%rsp),%rax
	movq 8(%rax),%rcx
	movq $sat_sa7WE_info,-40(%r12)
	movq %rcx,-24(%r12)
	leaq -40(%r12),%rcx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rax,%rsi
	movq %rcx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movq 64(%rsp),%rax
	movq 8(%rax),%rcx
	movq $sat_sa7WQ_info,-16(%r12)
	movq %rcx,(%r12)
	leaq -16(%r12),%rcx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rax,%rsi
	movq %rcx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $40,%rbp
	jmp stg_ap_pv_fast
_caber:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabbT, .-_cabbT


==================== Asm code ====================
2018-03-16 16:05:07.664644735 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabbT_info:
	.quad	_cabbT
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.665862981 UTC

.section .text
.align 8
_cabed:
_cabed:
	movq (%rbp),%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_pv_fast
	.size _cabed, .-_cabed


==================== Asm code ====================
2018-03-16 16:05:07.668230932 UTC

.section .data
.align 8
.align 1
lvl8_ra7Po_closure:
	.quad	GHC.IO.Handle.Types.BlockBuffering_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:05:07.69589741 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle5_closure
.type GHC.IO.Handle.Internals.mkDuplexHandle5_closure, @object
GHC.IO.Handle.Internals.mkDuplexHandle5_closure:
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle5_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.696688506 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkDuplexHandle5_slow
.type GHC.IO.Handle.Internals.mkDuplexHandle5_slow, @object
GHC.IO.Handle.Internals.mkDuplexHandle5_slow:
_cabgx:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.mkDuplexHandle5_entry
	.size GHC.IO.Handle.Internals.mkDuplexHandle5_slow, .-GHC.IO.Handle.Internals.mkDuplexHandle5_slow


==================== Asm code ====================
2018-03-16 16:05:07.697551388 UTC

.section .text
.align 8
buf_state_sa7XU_entry:
_cabi8:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cabi9
_cabia:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cabi1_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cabi1
_cabi2:
	movq (%rbx),%rax
	jmp *(%rax)
_cabi9:
	jmp *-16(%r13)
	.size buf_state_sa7XU_entry, .-buf_state_sa7XU_entry


==================== Asm code ====================
2018-03-16 16:05:07.698193757 UTC

.section .data.rel.ro
.align 8
.align 1
buf_state_sa7XU_info:
	.quad	buf_state_sa7XU_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:07.698940368 UTC

.section .text
.align 8
_cabi1:
_cabi1:
	andl $7,%ebx
	cmpq $3,%rbx
	je _cabi6
_cabi5:
	movl $GHC.IO.Buffer.WriteBuffer_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabi6:
	movl $GHC.IO.Buffer.ReadBuffer_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cabi1, .-_cabi1


==================== Asm code ====================
2018-03-16 16:05:07.699548834 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabi1_info:
	.quad	_cabi1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.70024312 UTC

.section .text
.align 8
sat_sa7Yk_entry:
_cabiE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cabiF
_cabiG:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.IO.Handle.Types.outputNL_entry
_cabiF:
	jmp *-16(%r13)
	.size sat_sa7Yk_entry, .-sat_sa7Yk_entry


==================== Asm code ====================
2018-03-16 16:05:07.700833802 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa7Yk_info:
	.quad	sat_sa7Yk_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:07.701567315 UTC

.section .text
.align 8
sat_sa7Yj_entry:
_cabiL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cabiM
_cabiN:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.IO.Handle.Types.inputNL_entry
_cabiM:
	jmp *-16(%r13)
	.size sat_sa7Yj_entry, .-sat_sa7Yj_entry


==================== Asm code ====================
2018-03-16 16:05:07.702224575 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa7Yj_info:
	.quad	sat_sa7Yj_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:07.703090113 UTC

.section .text
.align 8
sat_sa7Yl_entry:
_cabiO:
	leaq -136(%rbp),%rax
	cmpq %r15,%rax
	jb _cabiQ
_cabiR:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cabit_info,-136(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 64(%rbx),%r8
	movq 72(%rbx),%r9
	movq 80(%rbx),%r10
	movq 88(%rbx),%r11
	movq 96(%rbx),%r14
	movq %rax,64(%rsp)
	movq 104(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 112(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 120(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 128(%rbx),%rsi
	movq 40(%rbx),%rbx
	movq %rdi,96(%rsp)
	movq 64(%rsp),%rdi
	movq %rdi,-128(%rbp)
	movq 72(%rsp),%rdi
	movq %rdi,-120(%rbp)
	movq 80(%rsp),%rdi
	movq %rdi,-112(%rbp)
	movq 88(%rsp),%rdi
	movq %rdi,-104(%rbp)
	movq 96(%rsp),%rdi
	movq %rdi,-96(%rbp)
	movq %r8,-88(%rbp)
	movq %r9,-80(%rbp)
	movq %r10,-72(%rbp)
	movq %r11,-64(%rbp)
	movq %r14,-56(%rbp)
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	addq $-136,%rbp
	jmp stg_ap_0_fast
_cabiQ:
	jmp *-16(%r13)
	.size sat_sa7Yl_entry, .-sat_sa7Yl_entry


==================== Asm code ====================
2018-03-16 16:05:07.703963769 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa7Yl_info:
	.quad	sat_sa7Yl_entry
	.quad	15
	.quad	15


==================== Asm code ====================
2018-03-16 16:05:07.704686602 UTC

.section .text
.align 8
_cabit:
_cabit:
	movq $block_cabiv_info,(%rbp)
	movq %rbx,%rax
	movq 96(%rbp),%rbx
	movq %rax,96(%rbp)
	testb $7,%bl
	jne _cabiv
_cabiw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabit, .-_cabit


==================== Asm code ====================
2018-03-16 16:05:07.705347925 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabit_info:
	.quad	_cabit
	.quad	14
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.706220796 UTC

.section .text
.align 8
_cabiv:
_cabiv:
	addq $184,%r12
	cmpq 856(%r13),%r12
	ja _cabiV
_cabiU:
	movq 7(%rbx),%rax
	movq $sat_sa7Yk_info,-176(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-160(%r12)
	movq $sat_sa7Yj_info,-152(%r12)
	movq %rbx,-136(%r12)
	movq $GHC.IO.Handle.Types.Handle___con_info,-128(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-120(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-112(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-104(%r12)
	movq 96(%rbp),%rbx
	movq %rbx,-96(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq 80(%rbp),%rbx
	movq %rbx,-80(%r12)
	movq 104(%rbp),%rbx
	movq %rbx,-72(%r12)
	movq 88(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq 112(%rbp),%rax
	movq %rax,-48(%r12)
	movq 64(%rbp),%rax
	movq %rax,-40(%r12)
	movq 72(%rbp),%rax
	movq %rax,-32(%r12)
	movq 40(%rbp),%rax
	movq %rax,-24(%r12)
	leaq -152(%r12),%rax
	movq %rax,-16(%r12)
	leaq -176(%r12),%rax
	movq %rax,-8(%r12)
	movq 56(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $120,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabiV:
	movq $184,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabiv, .-_cabiv


==================== Asm code ====================
2018-03-16 16:05:07.707039427 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabiv_info:
	.quad	_cabiv
	.quad	14
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.707867721 UTC

.section .text
.align 8
sat_sa7Yr_entry:
_cabja:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cabjb
_cabjc:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cabje
_cabjd:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $GHC.MVar.MVar_con_info,-8(%r12)
	movq %rcx,(%r12)
	leaq -7(%r12),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp stg_ap_pp_fast
_cabje:
	movq $16,904(%r13)
_cabjb:
	jmp *-16(%r13)
	.size sat_sa7Yr_entry, .-sat_sa7Yr_entry


==================== Asm code ====================
2018-03-16 16:05:07.708557339 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa7Yr_info:
	.quad	sat_sa7Yr_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:05:07.709426065 UTC

.section .text
.align 8
sat_sa7Z1_entry:
_cabjo:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cabjp
_cabjq:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cabjh_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cabjh
_cabji:
	movq (%rbx),%rax
	jmp *(%rax)
_cabjp:
	jmp *-16(%r13)
	.size sat_sa7Z1_entry, .-sat_sa7Z1_entry


==================== Asm code ====================
2018-03-16 16:05:07.71010716 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa7Z1_info:
	.quad	sat_sa7Z1_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:07.710821987 UTC

.section .text
.align 8
_cabjh:
_cabjh:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cabjl
_cabjm:
	movl $GHC.IO.Handle.Types.LineBuffering_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabjl:
	movl $lvl8_ra7Po_closure+3,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cabjh, .-_cabjh


==================== Asm code ====================
2018-03-16 16:05:07.711456971 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabjh_info:
	.quad	_cabjh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.712258898 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkDuplexHandle5_entry
.type GHC.IO.Handle.Internals.mkDuplexHandle5_entry, @object
GHC.IO.Handle.Internals.mkDuplexHandle5_entry:
_cabjC:
	leaq -96(%rbp),%rax
	cmpq %r15,%rax
	jb _cabjD
_cabjE:
	movq $block_cabhq_info,-48(%rbp)
	movq 16(%rbp),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _cabhq
_cabhr:
	movq (%rbx),%rax
	jmp *(%rax)
_cabjD:
	movl $GHC.IO.Handle.Internals.mkDuplexHandle5_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.mkDuplexHandle5_entry, .-GHC.IO.Handle.Internals.mkDuplexHandle5_entry


==================== Asm code ====================
2018-03-16 16:05:07.713037171 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle5_info
.type GHC.IO.Handle.Internals.mkDuplexHandle5_info, @object
GHC.IO.Handle.Internals.mkDuplexHandle5_info:
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle5_entry
	.quad	0
	.quad	38654705678
	.quad	51539607552
	.quad	Sa8nI_srt+200
	.quad	11
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle5_slow


==================== Asm code ====================
2018-03-16 16:05:07.713853227 UTC

.section .text
.align 8
_cabhq:
_cabhq:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cabjz
_cabjA:
	movq $block_cabhw_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cabhw
_cabhx:
	movq (%rbx),%rax
	jmp *(%rax)
_cabjz:
	movq $GHC.Base.Nothing_closure+1,(%rbp)
	movq $GHC.Base.Nothing_closure+1,-8(%rbp)
	addq $-8,%rbp
	jmp _cabgE
	.size _cabhq, .-_cabhq


==================== Asm code ====================
2018-03-16 16:05:07.714502461 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabhq_info:
	.quad	_cabhq
	.quad	11
	.quad	4294967326
	.quad	Sa8nI_srt+200


==================== Asm code ====================
2018-03-16 16:05:07.715244603 UTC

.section .text
.align 8
_cabhw:
_cabhw:
	movq $block_cabkx_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rbx
	movq %rbx,%rcx
	movq 48(%rbp),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cabkx
_cabkT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabhw, .-_cabhw


==================== Asm code ====================
2018-03-16 16:05:07.71588211 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabhw_info:
	.quad	_cabhw
	.quad	11
	.quad	4294967326
	.quad	Sa8nI_srt+200


==================== Asm code ====================
2018-03-16 16:05:07.716637079 UTC

.section .text
.align 8
_cabkx:
_cabkx:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $3,%rbx
	jne _uablq
_cabl4:
	movq $block_cabl2_info,(%rbp)
	movq %rax,%rbx
	jmp stg_ap_v_fast
_uablq:
	cmpq $6,%rbx
	jne _cabkZ
_cabld:
	movq $block_cablb_info,(%rbp)
	movq %rax,%rbx
	jmp stg_ap_v_fast
_cabkZ:
	movq $GHC.Base.Nothing_closure+1,16(%rbp)
	addq $8,%rbp
	jmp _sa7Z8
	.size _cabkx, .-_cabkx


==================== Asm code ====================
2018-03-16 16:05:07.717350337 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabkx_info:
	.quad	_cabkx
	.quad	13
	.quad	4294967326
	.quad	Sa8nI_srt+200


==================== Asm code ====================
2018-03-16 16:05:07.718110935 UTC

.section .text
.align 8
_cablb:
_cablb:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cablh
_cablg:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _sa7Z8
_cablh:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cablb, .-_cablb


==================== Asm code ====================
2018-03-16 16:05:07.718741324 UTC

.section .data.rel.ro
.align 8
.align 1
block_cablb_info:
	.quad	_cablb
	.quad	141
	.quad	4294967326
	.quad	Sa8nI_srt+200


==================== Asm code ====================
2018-03-16 16:05:07.719449847 UTC

.section .text
.align 8
_cabl2:
_cabl2:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cabl8
_cabl7:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _sa7Z8
_cabl8:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabl2, .-_cabl2


==================== Asm code ====================
2018-03-16 16:05:07.720123574 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabl2_info:
	.quad	_cabl2
	.quad	141
	.quad	4294967326
	.quad	Sa8nI_srt+200


==================== Asm code ====================
2018-03-16 16:05:07.720826625 UTC

.section .text
.align 8
_sa7Z8:
_sa7Z8:
	movq $block_cabhG_info,-8(%rbp)
	movq 56(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cabhG
_cabhH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sa7Z8, .-_sa7Z8


==================== Asm code ====================
2018-03-16 16:05:07.722097842 UTC

.section .text
.align 8
_cabhG:
_cabhG:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $5,%rbx
	jb _uablo
_uablp:
	cmpq $6,%rbx
	jb _cabkK
_cabkP:
	movq $block_cabhW_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	jmp stg_ap_v_fast
_cabkK:
	movq $block_cabhR_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	jmp stg_ap_v_fast
_uablo:
	cmpq $4,%rbx
	jb _cabkD
_cabkF:
	movq $block_cabhM_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	jmp stg_ap_v_fast
_cabkD:
	movq 16(%rbp),%rax
	movq %rax,8(%rbp)
	movq $GHC.Base.Nothing_closure+1,16(%rbp)
	addq $8,%rbp
	jmp _cabgE
	.size _cabhG, .-_cabhG


==================== Asm code ====================
2018-03-16 16:05:07.722845406 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabhG_info:
	.quad	_cabhG
	.quad	13
	.quad	4294967326
	.quad	Sa8nI_srt+200


==================== Asm code ====================
2018-03-16 16:05:07.723590158 UTC

.section .text
.align 8
_cabhM:
_cabhM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cabkI
_cabkH:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rax
	leaq -6(%r12),%rbx
	movq %rbx,8(%rbp)
	movq %rax,(%rbp)
	jmp _cabgE
_cabkI:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabhM, .-_cabhM


==================== Asm code ====================
2018-03-16 16:05:07.725014331 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabhM_info:
	.quad	_cabhM
	.quad	12
	.quad	4294967326
	.quad	Sa8nI_srt+200


==================== Asm code ====================
2018-03-16 16:05:07.725817259 UTC

.section .text
.align 8
_cabhR:
_cabhR:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cabkN
_cabkM:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rax
	leaq -6(%r12),%rbx
	movq %rbx,8(%rbp)
	movq %rax,(%rbp)
	jmp _cabgE
_cabkN:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabhR, .-_cabhR


==================== Asm code ====================
2018-03-16 16:05:07.726504225 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabhR_info:
	.quad	_cabhR
	.quad	12
	.quad	4294967326
	.quad	Sa8nI_srt+200


==================== Asm code ====================
2018-03-16 16:05:07.727181211 UTC

.section .text
.align 8
_cabhW:
_cabhW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cabkS
_cabkR:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rax
	leaq -6(%r12),%rbx
	movq %rbx,8(%rbp)
	movq %rax,(%rbp)
	jmp _cabgE
_cabkS:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabhW, .-_cabhW


==================== Asm code ====================
2018-03-16 16:05:07.727848042 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabhW_info:
	.quad	_cabhW
	.quad	12
	.quad	4294967326
	.quad	Sa8nI_srt+200


==================== Asm code ====================
2018-03-16 16:05:07.728594679 UTC

.section .text
.align 8
_cabgE:
_cabgE:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cabjH
_cabjG:
	movq $buf_state_sa7XU_info,-16(%r12)
	movq 56(%rbp),%rax
	movq %rax,(%r12)
	movq $block_cabgI_info,-16(%rbp)
	movq 24(%rbp),%r14
	movq $stg_ap_ppv_info,-40(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.IO.BufferedIO.newBuffer_entry
_cabjH:
	movq $24,904(%r13)
	movq 8(%rbp),%rax
	movq $block_cabgD_info,8(%rbp)
	movq (%rbp),%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp stg_gc_pp
	.size _cabgE, .-_cabgE


==================== Asm code ====================
2018-03-16 16:05:07.729389005 UTC

.section .text
.align 8
_cabgD:
_cabgD:
	movq %rbx,(%rbp)
	movq %r14,-8(%rbp)
	addq $-8,%rbp
	jmp _cabgE
	.size _cabgD, .-_cabgD


==================== Asm code ====================
2018-03-16 16:05:07.72998693 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabgD_info:
	.quad	_cabgD
	.quad	11
	.quad	4294967326
	.quad	Sa8nI_srt+200


==================== Asm code ====================
2018-03-16 16:05:07.730625768 UTC

.section .text
.align 8
_cabgI:
_cabgI:
	movq $block_cabgK_info,-8(%rbp)
	movq %rbx,%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_newMutVar#
	.size _cabgI, .-_cabgI


==================== Asm code ====================
2018-03-16 16:05:07.731186289 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabgI_info:
	.quad	_cabgI
	.quad	14
	.quad	4294967326
	.quad	Sa8nI_srt+200


==================== Asm code ====================
2018-03-16 16:05:07.731926961 UTC

.section .text
.align 8
_cabgK:
_cabgK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cabjL
_cabjK:
	movq $(,)_con_info,-16(%r12)
	movq $GHC.IO.Handle.Internals.decodeByteBuf2_closure,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_cabgN_info,(%rbp)
	movq %rbx,%rax
	leaq -15(%r12),%rbx
	movq %rax,8(%rbp)
	jmp stg_newMutVar#
_cabjL:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabgK, .-_cabgK


==================== Asm code ====================
2018-03-16 16:05:07.732583064 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabgK_info:
	.quad	_cabgK
	.quad	15
	.quad	4294967326
	.quad	Sa8nI_srt+200


==================== Asm code ====================
2018-03-16 16:05:07.733699778 UTC

.section .text
.align 8
_cabgN:
_cabgN:
	movq $block_cabgR_info,(%rbp)
	movq %rbx,%rax
	movq 88(%rbp),%rbx
	movq %rax,88(%rbp)
	testb $7,%bl
	jne _cabgR
_cabgS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabgN, .-_cabgN


==================== Asm code ====================
2018-03-16 16:05:07.734299959 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabgN_info:
	.quad	_cabgN
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.7349817 UTC

.section .text
.align 8
_cabgR:
_cabgR:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cabkc
_cabkl:
	movq $block_cabha_info,(%rbp)
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	jmp stg_newMutVar#
_cabkc:
	movq $block_cabgW_info,(%rbp)
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	jmp stg_newMutVar#
	.size _cabgR, .-_cabgR


==================== Asm code ====================
2018-03-16 16:05:07.735602034 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabgR_info:
	.quad	_cabgR
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.736239059 UTC

.section .text
.align 8
_cabgW:
_cabgW:
	movq $block_cabgY_info,-8(%rbp)
	movq %rbx,%rax
	movl $8192,%ebx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_newPinnedByteArray#
	.size _cabgW, .-_cabgW


==================== Asm code ====================
2018-03-16 16:05:07.736857347 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabgW_info:
	.quad	_cabgW
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.737616664 UTC

.section .text
.align 8
_cabgY:
_cabgY:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cabkg
_cabkf:
	movq $GHC.ForeignPtr.MallocPtr_con_info,-72(%r12)
	movq %rbx,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	leaq -70(%r12),%rax
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	leaq 16(%rbx),%rax
	movq %rax,-24(%r12)
	movq $2048,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq $block_cabh5_info,8(%rbp)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	jmp stg_newMutVar#
_cabkg:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabgY, .-_cabgY


==================== Asm code ====================
2018-03-16 16:05:07.73831605 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabgY_info:
	.quad	_cabgY
	.quad	16
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.738989319 UTC

.section .text
.align 8
_cabh5:
_cabh5:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cabkj
_cabki:
	movq $GHC.STRef.STRef_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rax
	movq %rax,16(%rbp)
	movq $GHC.IO.Handle.Types.NoBuffering_closure+1,(%rbp)
	jmp _sa7Y6
_cabkj:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabh5, .-_cabh5


==================== Asm code ====================
2018-03-16 16:05:07.739628404 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabh5_info:
	.quad	_cabh5
	.quad	143
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.740260417 UTC

.section .text
.align 8
_cabha:
_cabha:
	movq $block_cabhc_info,-8(%rbp)
	movq %rbx,%rax
	movl $8192,%ebx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_newPinnedByteArray#
	.size _cabha, .-_cabha


==================== Asm code ====================
2018-03-16 16:05:07.740824458 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabha_info:
	.quad	_cabha
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.741563399 UTC

.section .text
.align 8
_cabhc:
_cabhc:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cabkp
_cabko:
	movq $GHC.ForeignPtr.MallocPtr_con_info,-72(%r12)
	movq %rbx,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	leaq -70(%r12),%rax
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	leaq 16(%rbx),%rax
	movq %rax,-24(%r12)
	movq $2048,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq $block_cabhj_info,8(%rbp)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	jmp stg_newMutVar#
_cabkp:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabhc, .-_cabhc


==================== Asm code ====================
2018-03-16 16:05:07.742253644 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabhc_info:
	.quad	_cabhc
	.quad	16
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.742855071 UTC

.section .text
.align 8
_cabhj:
_cabhj:
	movq $block_cabhl_info,(%rbp)
	movq 40(%rbp),%r14
	movq $stg_ap_pv_info,-16(%rbp)
	movq 64(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,16(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Device.isTerminal_entry
	.size _cabhj, .-_cabhj


==================== Asm code ====================
2018-03-16 16:05:07.743462278 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabhj_info:
	.quad	_cabhj
	.quad	143
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.74416676 UTC

.section .text
.align 8
_cabhl:
_cabhl:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cabkt
_cabks:
	movq $sat_sa7Z1_info,-32(%r12)
	movq %rbx,-16(%r12)
	movq $GHC.STRef.STRef_con_info,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%rbp)
	leaq -7(%r12),%rax
	movq %rax,16(%rbp)
	jmp _sa7Y6
_cabkt:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabhl, .-_cabhl


==================== Asm code ====================
2018-03-16 16:05:07.744799482 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabhl_info:
	.quad	_cabhl
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.745814859 UTC

.section .text
.align 8
_sa7Y6:
_sa7Y6:
	movq $block_cabil_info,-8(%rbp)
	movl $GHC.IO.Handle.Types.BufferListNil_closure+1,%ebx
	addq $-8,%rbp
	jmp stg_newMutVar#
	.size _sa7Y6, .-_sa7Y6


==================== Asm code ====================
2018-03-16 16:05:07.746491542 UTC

.section .text
.align 8
_cabil:
_cabil:
	movq $block_cabin_info,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp stg_newMVar#
	.size _cabil, .-_cabil


==================== Asm code ====================
2018-03-16 16:05:07.74706317 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabil_info:
	.quad	_cabil
	.quad	16
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.74790911 UTC

.section .text
.align 8
_cabin:
_cabin:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cabjR
_cabjQ:
	movq $sat_sa7Yl_info,-128(%r12)
	movq 56(%rbp),%rax
	movq %rax,-112(%r12)
	movq 64(%rbp),%rax
	movq %rax,-104(%r12)
	movq 72(%rbp),%rax
	movq %rax,-96(%r12)
	movq 80(%rbp),%rax
	movq %rax,-88(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 112(%rbp),%rax
	movq %rax,-72(%r12)
	movq 120(%rbp),%rax
	movq %rax,-64(%r12)
	movq 136(%rbp),%rax
	movq %rax,-56(%r12)
	movq 48(%rbp),%rax
	movq %rax,-48(%r12)
	movq 40(%rbp),%rax
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	movq 104(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_cabiX_info,80(%rbp)
	leaq -128(%r12),%r14
	movq %rbx,%rax
	movq %rax,136(%rbp)
	addq $80,%rbp
	jmp stg_putMVar#
_cabjR:
	movq $136,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabin, .-_cabin


==================== Asm code ====================
2018-03-16 16:05:07.748691599 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabin_info:
	.quad	_cabin
	.quad	17
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.749380394 UTC

.section .text
.align 8
_cabiX:
_cabiX:
	movq $block_cabiZ_info,(%rbp)
	movq 48(%rbp),%rbx
	testb $7,%bl
	jne _cabiZ
_cabj0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabiX, .-_cabiX


==================== Asm code ====================
2018-03-16 16:05:07.749973736 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabiX_info:
	.quad	_cabiX
	.quad	1927
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.750801902 UTC

.section .text
.align 8
_cabiZ:
_cabiZ:
	movq 8(%rbp),%rax
	movq 56(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _cabjW
_cabk3:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cabk6
_cabk5:
	movq 6(%rbx),%rbx
	movq $sat_sa7Yr_info,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq $block_cabk0_info,(%rbp)
	leaq -32(%r12),%rsi
	movl $GHC.Tuple.()_closure+1,%r14d
	movq %rcx,%rbx
	jmp stg_mkWeak#
_cabk6:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
_cabjZ:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_cabjW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cabjZ
_cabjY:
	movq $GHC.IO.Handle.Types.FileHandle_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -15(%r12),%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cabiZ, .-_cabiZ


==================== Asm code ====================
2018-03-16 16:05:07.751537784 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabiZ_info:
	.quad	_cabiZ
	.quad	3975
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.752254429 UTC

.section .text
.align 8
_cabk0:
_cabk0:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cabk9
_cabk8:
	movq $GHC.IO.Handle.Types.FileHandle_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 56(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabk9:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabk0, .-_cabk0


==================== Asm code ====================
2018-03-16 16:05:07.752891236 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabk0_info:
	.quad	_cabk0
	.quad	3975
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.756278648 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkHandle_closure
.type GHC.IO.Handle.Internals.mkHandle_closure, @object
GHC.IO.Handle.Internals.mkHandle_closure:
	.quad	GHC.IO.Handle.Internals.mkHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.757008174 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkHandle_slow
.type GHC.IO.Handle.Internals.mkHandle_slow, @object
GHC.IO.Handle.Internals.mkHandle_slow:
_cabph:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.mkHandle_entry
	.size GHC.IO.Handle.Internals.mkHandle_slow, .-GHC.IO.Handle.Internals.mkHandle_slow


==================== Asm code ====================
2018-03-16 16:05:07.758080706 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkHandle_entry
.type GHC.IO.Handle.Internals.mkHandle_entry, @object
GHC.IO.Handle.Internals.mkHandle_entry:
_cabpl:
	jmp GHC.IO.Handle.Internals.mkDuplexHandle5_entry
	.size GHC.IO.Handle.Internals.mkHandle_entry, .-GHC.IO.Handle.Internals.mkHandle_entry


==================== Asm code ====================
2018-03-16 16:05:07.758655682 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkHandle_info
.type GHC.IO.Handle.Internals.mkHandle_info, @object
GHC.IO.Handle.Internals.mkHandle_info:
	.quad	GHC.IO.Handle.Internals.mkHandle_entry
	.quad	0
	.quad	4294967310
	.quad	51539607552
	.quad	Sa8nI_srt+224
	.quad	11
	.quad	GHC.IO.Handle.Internals.mkHandle_slow


==================== Asm code ====================
2018-03-16 16:05:07.76076492 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.debugIO1_closure
.type GHC.IO.Handle.Internals.debugIO1_closure, @object
GHC.IO.Handle.Internals.debugIO1_closure:
	.quad	GHC.IO.Handle.Internals.debugIO1_info


==================== Asm code ====================
2018-03-16 16:05:07.761428191 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.debugIO1_entry
.type GHC.IO.Handle.Internals.debugIO1_entry, @object
GHC.IO.Handle.Internals.debugIO1_entry:
_cabpy:
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.debugIO1_entry, .-GHC.IO.Handle.Internals.debugIO1_entry


==================== Asm code ====================
2018-03-16 16:05:07.762041129 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.debugIO1_info
.type GHC.IO.Handle.Internals.debugIO1_info, @object
GHC.IO.Handle.Internals.debugIO1_info:
	.quad	GHC.IO.Handle.Internals.debugIO1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:07.764088273 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.debugIO_closure
.type GHC.IO.Handle.Internals.debugIO_closure, @object
GHC.IO.Handle.Internals.debugIO_closure:
	.quad	GHC.IO.Handle.Internals.debugIO_info


==================== Asm code ====================
2018-03-16 16:05:07.764737652 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.debugIO_entry
.type GHC.IO.Handle.Internals.debugIO_entry, @object
GHC.IO.Handle.Internals.debugIO_entry:
_cabpK:
	jmp GHC.IO.Handle.Internals.debugIO1_entry
	.size GHC.IO.Handle.Internals.debugIO_entry, .-GHC.IO.Handle.Internals.debugIO_entry


==================== Asm code ====================
2018-03-16 16:05:07.765331542 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.debugIO_info
.type GHC.IO.Handle.Internals.debugIO_info, @object
GHC.IO.Handle.Internals.debugIO_info:
	.quad	GHC.IO.Handle.Internals.debugIO_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:07.78288469 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wwriteCharBuffer_closure
.type GHC.IO.Handle.Internals.$wwriteCharBuffer_closure, @object
GHC.IO.Handle.Internals.$wwriteCharBuffer_closure:
	.quad	GHC.IO.Handle.Internals.$wwriteCharBuffer_info


==================== Asm code ====================
2018-03-16 16:05:07.783640231 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.$wwriteCharBuffer_slow
.type GHC.IO.Handle.Internals.$wwriteCharBuffer_slow, @object
GHC.IO.Handle.Internals.$wwriteCharBuffer_slow:
_cabpS:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.$wwriteCharBuffer_entry
	.size GHC.IO.Handle.Internals.$wwriteCharBuffer_slow, .-GHC.IO.Handle.Internals.$wwriteCharBuffer_slow


==================== Asm code ====================
2018-03-16 16:05:07.784516461 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.$wwriteCharBuffer_entry
.type GHC.IO.Handle.Internals.$wwriteCharBuffer_entry, @object
GHC.IO.Handle.Internals.$wwriteCharBuffer_entry:
_cabpZ:
	leaq -104(%rbp),%rax
	cmpq %r15,%rax
	jb _cabq0
_uabt5:
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp _cabpT
_cabq0:
	movl $GHC.IO.Handle.Internals.$wwriteCharBuffer_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.$wwriteCharBuffer_entry, .-GHC.IO.Handle.Internals.$wwriteCharBuffer_entry


==================== Asm code ====================
2018-03-16 16:05:07.785289423 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wwriteCharBuffer_info
.type GHC.IO.Handle.Internals.$wwriteCharBuffer_info, @object
GHC.IO.Handle.Internals.$wwriteCharBuffer_info:
	.quad	GHC.IO.Handle.Internals.$wwriteCharBuffer_entry
	.quad	0
	.quad	14
	.quad	34359738368
	.quad	0
	.quad	7303
	.quad	GHC.IO.Handle.Internals.$wwriteCharBuffer_slow


==================== Asm code ====================
2018-03-16 16:05:07.786033764 UTC

.section .text
.align 8
_cabpT:
_cabpT:
	movq (%rbp),%rax
	movq $block_cabpW_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cabpW
_cabpX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabpT, .-_cabpT


==================== Asm code ====================
2018-03-16 16:05:07.786846978 UTC

.section .text
.align 8
_cabpW:
_cabpW:
	movq $block_cabq6_info,-48(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 55(%rbx),%rdi
	movq 87(%rbx),%rbx
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq 8(%rsi),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _cabq6
_cabsa:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabpW, .-_cabpW


==================== Asm code ====================
2018-03-16 16:05:07.787521891 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabpW_info:
	.quad	_cabpW
	.quad	3654
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.788418454 UTC

.section .text
.align 8
_cabq6:
_cabq6:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cabso
_cabsQ:
	movq $block_cabsB_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cabsB
_cabsC:
	movq (%rbx),%rax
	jmp *(%rax)
_cabsr:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_cabso:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cabsr
_cabsq:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 64(%rbp),%rax
	movq %rax,-40(%r12)
	movq 72(%rbp),%rax
	movq %rax,-32(%r12)
	movq 56(%rbp),%rax
	movq %rax,-24(%r12)
	movq 80(%rbp),%rax
	movq %rax,-16(%r12)
	movq 88(%rbp),%rax
	movq %rax,-8(%r12)
	movq 96(%rbp),%rax
	movq %rax,(%r12)
	movq $block_cabsf_info,(%rbp)
	movq 40(%rbp),%rsi
	leaq -47(%r12),%r14
	jmp GHC.IO.Encoding.Latin1.latin3_entry
	.size _cabq6, .-_cabq6


==================== Asm code ====================
2018-03-16 16:05:07.789207884 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabq6_info:
	.quad	_cabq6
	.quad	233484
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.789924021 UTC

.section .text
.align 8
_cabsf:
_cabsf:
	movq $block_cabsh_info,(%rbp)
	testb $7,%bl
	jne _cabsh
_cabsi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabsf, .-_cabsf


==================== Asm code ====================
2018-03-16 16:05:07.790544248 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabsf_info:
	.quad	_cabsf
	.quad	259084
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.791240314 UTC

.section .text
.align 8
_cabsh:
_cabsh:
	movq $block_cabsm_info,(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rbx
	movq %rax,96(%rbp)
	testb $7,%bl
	jne _cabsm
_cabsu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabsh, .-_cabsh


==================== Asm code ====================
2018-03-16 16:05:07.791853481 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabsh_info:
	.quad	_cabsh
	.quad	259084
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.792493179 UTC

.section .text
.align 8
_cabsm:
_cabsm:
	movq 96(%rbp),%rax
	movq %rax,96(%rbp)
	movq 23(%rbx),%rax
	movq %rax,80(%rbp)
	movq 7(%rbx),%rax
	movq %rax,72(%rbp)
	movq 15(%rbx),%rax
	movq %rax,64(%rbp)
	movq 31(%rbx),%rax
	movq %rax,56(%rbp)
	movq 39(%rbx),%rax
	movq %rax,40(%rbp)
	movq 47(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp _cabq8
	.size _cabsm, .-_cabsm


==================== Asm code ====================
2018-03-16 16:05:07.793147829 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabsm_info:
	.quad	_cabsm
	.quad	128012
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.794013917 UTC

.section .text
.align 8
_cabsB:
_cabsB:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cabsT
_cabsS:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 64(%rbp),%rcx
	movq %rcx,-40(%r12)
	movq 72(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq 56(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq 80(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq 88(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq 96(%rbp),%rcx
	movq %rcx,(%r12)
	movq $block_cabsH_info,(%rbp)
	movq 40(%rbp),%r8
	leaq -47(%r12),%rdi
	movq %rbx,%rsi
	movq %rax,%r14
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_cabsT:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabsB, .-_cabsB


==================== Asm code ====================
2018-03-16 16:05:07.794697045 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabsB_info:
	.quad	_cabsB
	.quad	233484
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.795340769 UTC

.section .text
.align 8
_cabsH:
_cabsH:
	movq $block_cabsJ_info,(%rbp)
	testb $7,%bl
	jne _cabsJ
_cabsK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabsH, .-_cabsH


==================== Asm code ====================
2018-03-16 16:05:07.795934366 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabsH_info:
	.quad	_cabsH
	.quad	259084
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.796602017 UTC

.section .text
.align 8
_cabsJ:
_cabsJ:
	movq $block_cabsO_info,(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,96(%rbp)
	testb $7,%bl
	jne _cabsO
_cabsW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabsJ, .-_cabsJ


==================== Asm code ====================
2018-03-16 16:05:07.797180282 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabsJ_info:
	.quad	_cabsJ
	.quad	259084
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.797896427 UTC

.section .text
.align 8
_cabsO:
_cabsO:
	movq 47(%rbx),%rax
	movq %rax,(%rbp)
	movq 39(%rbx),%rax
	movq %rax,40(%rbp)
	movq 31(%rbx),%rax
	movq %rax,56(%rbp)
	movq 15(%rbx),%rax
	movq %rax,64(%rbp)
	movq 7(%rbx),%rax
	movq %rax,72(%rbp)
	movq 23(%rbx),%rax
	movq %rax,80(%rbp)
	movq 96(%rbp),%rax
	movq %rax,96(%rbp)
	addq $-8,%rbp
	jmp _cabq8
	.size _cabsO, .-_cabsO


==================== Asm code ====================
2018-03-16 16:05:07.798568416 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabsO_info:
	.quad	_cabsO
	.quad	128012
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.799368957 UTC

.section .text
.align 8
_cabq8:
_cabq8:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cabqd
_cabqc:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 80(%rbp),%rax
	movq %rax,-40(%r12)
	movq 72(%rbp),%rax
	movq %rax,-32(%r12)
	movq 88(%rbp),%rax
	movq %rax,-24(%r12)
	movq 64(%rbp),%rax
	movq %rax,-16(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -47(%r12),%rcx
	cmpq %rbx,%rax
	je _uabt8
_cabqH:
	movq $block_cabqF_info,(%rbp)
	movq 104(%rbp),%rbx
	movq %rcx,88(%rbp)
	testb $7,%bl
	jne _cabqF
_cabqI:
	movq (%rbx),%rax
	jmp *(%rax)
_uabt8:
	movq %rcx,96(%rbp)
	addq $16,%rbp
	jmp _sa80b
_cabqd:
	movq $56,904(%r13)
	movq $block_cabq8_info,(%rbp)
	jmp stg_gc_noregs
	.size _cabq8, .-_cabq8


==================== Asm code ====================
2018-03-16 16:05:07.800149712 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabq8_info:
	.quad	_cabq8
	.quad	206925
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.800945785 UTC

.section .text
.align 8
_cabqF:
_cabqF:
	movq 40(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rsi
	movq 31(%rbx),%rdi
	movq 39(%rbx),%r8
	movq 47(%rbx),%rbx
	cmpq %rbx,%r8
	je _sa80w
_cabs7:
	cmpq 96(%rbp),%r8
	jne _sa80w
_uabt9:
	movq 88(%rbp),%rax
	movq %rax,96(%rbp)
	addq $16,%rbp
	jmp _sa80b
_sa80w:
	movq $block_cabqS_info,-8(%rbp)
	movq %rbx,%r9
	movq %rax,%rbx
	movq %r9,(%rbp)
	movq %r8,40(%rbp)
	movq %rdi,64(%rbp)
	movq %rdx,72(%rbp)
	movq %rcx,80(%rbp)
	movq %rsi,96(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cabqS
_cabqU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabqF, .-_cabqF


==================== Asm code ====================
2018-03-16 16:05:07.801693393 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabqF_info:
	.quad	_cabqF
	.quad	190541
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.803337763 UTC

.section .text
.align 8
_cabqS:
_cabqS:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _uabt4
_cabrh:
	movq $block_cabrf_info,(%rbp)
	movq 5(%rbx),%rbx
	testb $7,%bl
	jne _cabrf
_cabri:
	movq (%rbx),%rax
	jmp *(%rax)
_uabt4:
	movq 96(%rbp),%rcx
	cmpq $2,%rax
	jb _uabta
_cabrc:
	movq 40(%rbp),%rax
	movq 48(%rbp),%rdx
	movq 8(%rbp),%rsi
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rsi,%rdi
	movq %rax,%rsi
	movq %rdi,%rax
	movq %rcx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rdx,%r14
	movq %rcx,72(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq 64(%rsp),%rax
	cmpq %rax,%r14
	je _uabtb
_uabtc:
	addq $8,%rbp
	jmp _cabrT
_uabtb:
	addq $120,%rbp
	jmp _cabrU
_uabta:
	movq %rcx,104(%rbp)
	addq $24,%rbp
	jmp _sa80b
	.size _cabqS, .-_cabqS


==================== Asm code ====================
2018-03-16 16:05:07.804154426 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabqS_info:
	.quad	_cabqS
	.quad	284878
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.805001095 UTC

.section .text
.align 8
_cabrf:
_cabrf:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cabrw
_cabrB:
	movq $block_cabrz_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cabrz
_cabrC:
	movq (%rbx),%rax
	jmp *(%rax)
_cabrw:
	movq 96(%rbp),%rax
	movq 40(%rbp),%rcx
	movq 48(%rbp),%rdx
	movq 8(%rbp),%rsi
	movq %rax,8(%rcx)
	subq $8,%rsp
	movq %r13,%rax
	movq %rsi,%rdi
	movq %rcx,%rsi
	movq %rdi,%rcx
	movq %rax,%rdi
	xorl %eax,%eax
	movq %rdx,%r14
	movq %rcx,72(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq 64(%rsp),%rax
	cmpq %rax,%r14
	je _uabtg
_uabth:
	addq $8,%rbp
	jmp _cabrT
_uabtg:
	addq $120,%rbp
	jmp _cabrU
	.size _cabrf, .-_cabrf


==================== Asm code ====================
2018-03-16 16:05:07.806128932 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabrf_info:
	.quad	_cabrf
	.quad	284878
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.806921091 UTC

.section .text
.align 8
_cabrz:
_cabrz:
	movq 96(%rbp),%rax
	movq 16(%rbp),%rcx
	subq 56(%rbp),%rcx
	cmpq 7(%rbx),%rcx
	jl _cabrW
_uabtd:
	movq %rax,104(%rbp)
	addq $24,%rbp
	jmp _sa80b
_cabrW:
	movq 40(%rbp),%rbx
	movq 48(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq %rax,8(%rbx)
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	movq %rcx,%rbx
	movq %rdx,%r14
	call dirty_MUT_VAR
	addq $8,%rsp
	cmpq %r14,%rbx
	je _uabte
_uabtf:
	addq $8,%rbp
	jmp _cabrT
_uabte:
	addq $120,%rbp
	jmp _cabrU
	.size _cabrz, .-_cabrz


==================== Asm code ====================
2018-03-16 16:05:07.80760912 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabrz_info:
	.quad	_cabrz
	.quad	284878
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.808287872 UTC

.section .text
.align 8
_cabrT:
_cabrT:
	movq 56(%rbp),%rax
	movq %rax,56(%rbp)
	movq 64(%rbp),%rax
	movq 96(%rbp),%rbx
	movq %rbx,64(%rbp)
	movq 72(%rbp),%rbx
	movq 80(%rbp),%rcx
	movq %rcx,72(%rbp)
	movq %rbx,80(%rbp)
	movq %rax,88(%rbp)
	movq 40(%rbp),%rax
	movq %rax,96(%rbp)
	movq (%rbp),%rax
	movq %rax,104(%rbp)
	addq $56,%rbp
	jmp _cabpT
	.size _cabrT, .-_cabrT


==================== Asm code ====================
2018-03-16 16:05:07.808999139 UTC

.section .text
.align 8
_sa80b:
_sa80b:
	movq 8(%rbp),%rax
	movq $block_cabqk_info,8(%rbp)
	movq (%rbp),%r14
	movq $stg_ap_ppv_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq 80(%rbp),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.BufferedIO.flushWriteBuffer_entry
	.size _sa80b, .-_sa80b


==================== Asm code ====================
2018-03-16 16:05:07.809822588 UTC

.section .text
.align 8
_cabqk:
_cabqk:
	movq 8(%rbp),%rax
	movq 80(%rbp),%rcx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	movq %rcx,%rbx
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cabqp_info,24(%rbp)
	addq $24,%rbp
	testb $7,%bl
	jne _cabqp
_cabqs:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabqk, .-_cabqk


==================== Asm code ====================
2018-03-16 16:05:07.810465895 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabqk_info:
	.quad	_cabqk
	.quad	32138
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.811186108 UTC

.section .text
.align 8
_cabqp:
_cabqp:
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	cmpq %rcx,%rax
	je _uabtj
_cabqA:
	movq 8(%rbp),%rdx
	movq %rdx,8(%rbp)
	movq 23(%rbx),%rdx
	movq %rdx,16(%rbp)
	movq 7(%rbx),%rdx
	movq %rdx,24(%rbp)
	movq 15(%rbx),%rdx
	movq %rdx,32(%rbp)
	movq 31(%rbx),%rbx
	movq %rbx,40(%rbp)
	movq %rax,48(%rbp)
	movq %rcx,56(%rbp)
	addq $8,%rbp
	jmp _cabpT
_uabtj:
	addq $64,%rbp
	jmp _cabrU
	.size _cabqp, .-_cabqp


==================== Asm code ====================
2018-03-16 16:05:07.811852429 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabqp_info:
	.quad	_cabqp
	.quad	8071
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.812512398 UTC

.section .text
.align 8
_cabrU:
_cabrU:
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cabrU, .-_cabrU


==================== Asm code ====================
2018-03-16 16:05:07.815688639 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.writeCharBuffer1_closure
.type GHC.IO.Handle.Internals.writeCharBuffer1_closure, @object
GHC.IO.Handle.Internals.writeCharBuffer1_closure:
	.quad	GHC.IO.Handle.Internals.writeCharBuffer1_info


==================== Asm code ====================
2018-03-16 16:05:07.816449539 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.writeCharBuffer1_entry
.type GHC.IO.Handle.Internals.writeCharBuffer1_entry, @object
GHC.IO.Handle.Internals.writeCharBuffer1_entry:
_cabw0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cabw1
_cabw2:
	movq $block_cabvX_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cabvX
_cabvY:
	movq (%rbx),%rax
	jmp *(%rax)
_cabw1:
	movl $GHC.IO.Handle.Internals.writeCharBuffer1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.writeCharBuffer1_entry, .-GHC.IO.Handle.Internals.writeCharBuffer1_entry


==================== Asm code ====================
2018-03-16 16:05:07.817147669 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.writeCharBuffer1_info
.type GHC.IO.Handle.Internals.writeCharBuffer1_info, @object
GHC.IO.Handle.Internals.writeCharBuffer1_info:
	.quad	GHC.IO.Handle.Internals.writeCharBuffer1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:05:07.818238703 UTC

.section .text
.align 8
_cabvX:
_cabvX:
	movq 31(%rbx),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.IO.Handle.Internals.$wwriteCharBuffer_entry
	.size _cabvX, .-_cabvX


==================== Asm code ====================
2018-03-16 16:05:07.818888814 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabvX_info:
	.quad	_cabvX
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.821001015 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.writeCharBuffer_closure
.type GHC.IO.Handle.Internals.writeCharBuffer_closure, @object
GHC.IO.Handle.Internals.writeCharBuffer_closure:
	.quad	GHC.IO.Handle.Internals.writeCharBuffer_info


==================== Asm code ====================
2018-03-16 16:05:07.821673283 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.writeCharBuffer_entry
.type GHC.IO.Handle.Internals.writeCharBuffer_entry, @object
GHC.IO.Handle.Internals.writeCharBuffer_entry:
_cabwm:
	jmp GHC.IO.Handle.Internals.writeCharBuffer1_entry
	.size GHC.IO.Handle.Internals.writeCharBuffer_entry, .-GHC.IO.Handle.Internals.writeCharBuffer_entry


==================== Asm code ====================
2018-03-16 16:05:07.822257394 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.writeCharBuffer_info
.type GHC.IO.Handle.Internals.writeCharBuffer_info, @object
GHC.IO.Handle.Internals.writeCharBuffer_info:
	.quad	GHC.IO.Handle.Internals.writeCharBuffer_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:05:07.834997201 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushCharBuffer3_closure
.type GHC.IO.Handle.Internals.flushCharBuffer3_closure, @object
GHC.IO.Handle.Internals.flushCharBuffer3_closure:
	.quad	GHC.IO.Handle.Internals.flushCharBuffer3_info


==================== Asm code ====================
2018-03-16 16:05:07.835853941 UTC

.section .text
.align 8
sat_sa82j_entry:
_cabx1:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cabx5
_cabx6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cabwY_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cabwY
_cabwZ:
	movq (%rbx),%rax
	jmp *(%rax)
_cabx5:
	jmp *-16(%r13)
	.size sat_sa82j_entry, .-sat_sa82j_entry


==================== Asm code ====================
2018-03-16 16:05:07.836508595 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa82j_info:
	.quad	sat_sa82j_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:07.837305917 UTC

.section .text
.align 8
_cabwY:
_cabwY:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cabx9
_cabx8:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabx9:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabwY, .-_cabwY


==================== Asm code ====================
2018-03-16 16:05:07.83799501 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabwY_info:
	.quad	_cabwY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.838751821 UTC

.section .text
.align 8
sat_sa82C_entry:
_cabxx:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cabxE
_cabxF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cabxu_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cabxu
_cabxv:
	movq (%rbx),%rax
	jmp *(%rax)
_cabxE:
	jmp *-16(%r13)
	.size sat_sa82C_entry, .-sat_sa82C_entry


==================== Asm code ====================
2018-03-16 16:05:07.839432904 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa82C_info:
	.quad	sat_sa82C_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:05:07.840216791 UTC

.section .text
.align 8
_cabxu:
_cabxu:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cabxI
_cabxH:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 39(%rbx),%rbx
	addq 8(%rbp),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabxI:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabxu, .-_cabxu


==================== Asm code ====================
2018-03-16 16:05:07.840936732 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabxu_info:
	.quad	_cabxu
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.841681379 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushCharBuffer3_entry
.type GHC.IO.Handle.Internals.flushCharBuffer3_entry, @object
GHC.IO.Handle.Internals.flushCharBuffer3_entry:
_cabxK:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cabxL
_cabxM:
	movq $block_cabwx_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cabwx
_cabwy:
	movq (%rbx),%rax
	jmp *(%rax)
_cabxL:
	movl $GHC.IO.Handle.Internals.flushCharBuffer3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.flushCharBuffer3_entry, .-GHC.IO.Handle.Internals.flushCharBuffer3_entry


==================== Asm code ====================
2018-03-16 16:05:07.842379458 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushCharBuffer3_info
.type GHC.IO.Handle.Internals.flushCharBuffer3_info, @object
GHC.IO.Handle.Internals.flushCharBuffer3_info:
	.quad	GHC.IO.Handle.Internals.flushCharBuffer3_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:07.843115006 UTC

.section .text
.align 8
_cabwx:
_cabwx:
	movq $block_cabwC_info,-32(%rbp)
	movq 47(%rbx),%rax
	movq 63(%rbx),%rcx
	movq 71(%rbx),%rdx
	movq 95(%rbx),%rbx
	movq %rbx,%rsi
	movq 8(%rdx),%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	movq %rax,(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cabwC
_cabwD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabwx, .-_cabwx


==================== Asm code ====================
2018-03-16 16:05:07.843752633 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabwx_info:
	.quad	_cabwx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.844422832 UTC

.section .text
.align 8
_cabwC:
_cabwC:
	movq $block_cabwH_info,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cabwH
_cabwI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabwC, .-_cabwC


==================== Asm code ====================
2018-03-16 16:05:07.845032326 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabwC_info:
	.quad	_cabwC
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.846697746 UTC

.section .text
.align 8
_cabwH:
_cabwH:
	andl $7,%ebx
	cmpq $1,%rbx
	jne _cabyz
_cabyv:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _cabyz
_cabxR:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cabwP_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _cabwP
_cabwQ:
	movq (%rbx),%rax
	jmp *(%rax)
_cabyz:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cabwH, .-_cabwH


==================== Asm code ====================
2018-03-16 16:05:07.847433383 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabwH_info:
	.quad	_cabwH
	.quad	198
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.848334215 UTC

.section .text
.align 8
_cabwP:
_cabwP:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cabxU
_cabxT:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq 8(%rax),%rdx
	movq $sat_sa82j_info,-16(%r12)
	movq %rdx,(%r12)
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cabxe_info,-8(%rbp)
	movq %rbx,%rcx
	movq 64(%rsp),%rax
	movq %rax,%rbx
	movq %rcx,(%rbp)
	movq %r14,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cabxe
_cabxf:
	movq (%rbx),%rax
	jmp *(%rax)
_cabxU:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabwP, .-_cabwP


==================== Asm code ====================
2018-03-16 16:05:07.849116376 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabwP_info:
	.quad	_cabwP
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.850005469 UTC

.section .text
.align 8
_cabxe:
_cabxe:
	movq 39(%rbx),%rax
	testq %rax,%rax
	jne _cabxX
_cabys:
	movq 32(%rbp),%rax
	movq 8(%rbp),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabxX:
	movq $block_cabxl_info,-24(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq 24(%rbp),%rbx
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rsi,24(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cabxl
_cabxm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabxe, .-_cabxe


==================== Asm code ====================
2018-03-16 16:05:07.850755518 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabxe_info:
	.quad	_cabxe
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.851659779 UTC

.section .text
.align 8
_cabxl:
_cabxl:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cabxZ
_cabyh:
	movq $block_caby5_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _caby5
_caby6:
	movq (%rbx),%rax
	jmp *(%rax)
_caby2:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_cabxZ:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _caby2
_caby1:
	movq $sat_sa82C_info,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 56(%rbp),%rax
	leaq -24(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cabxl, .-_cabxl


==================== Asm code ====================
2018-03-16 16:05:07.852459947 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabxl_info:
	.quad	_cabxl
	.quad	2183
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.853124217 UTC

.section .text
.align 8
_caby5:
_caby5:
	movq $block_cabya_info,-8(%rbp)
	movq 40(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,40(%rbp)
	addq $-8,%rbp
	jmp stg_ap_pv_fast
	.size _caby5, .-_caby5


==================== Asm code ====================
2018-03-16 16:05:07.853801282 UTC

.section .data.rel.ro
.align 8
.align 1
block_caby5_info:
	.quad	_caby5
	.quad	2183
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.8545776 UTC

.section .text
.align 8
_cabya:
_cabya:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cabyl
_cabyk:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 56(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq $block_cabyd_info,56(%rbp)
	leaq -47(%r12),%r8
	movq 40(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 48(%rbp),%r14
	addq $56,%rbp
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_cabyl:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabya, .-_cabya


==================== Asm code ====================
2018-03-16 16:05:07.85525098 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabya_info:
	.quad	_cabya
	.quad	4360
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.855919546 UTC

.section .text
.align 8
_cabyd:
_cabyd:
	movq $block_cabyf_info,(%rbp)
	testb $7,%bl
	jne _cabyf
_cabyn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabyd, .-_cabyd


==================== Asm code ====================
2018-03-16 16:05:07.856490171 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabyd_info:
	.quad	_cabyd
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.857227412 UTC

.section .text
.align 8
_cabyf:
_cabyf:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cabyf, .-_cabyf


==================== Asm code ====================
2018-03-16 16:05:07.857875656 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabyf_info:
	.quad	_cabyf
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.860177109 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushCharReadBuffer_closure
.type GHC.IO.Handle.Internals.flushCharReadBuffer_closure, @object
GHC.IO.Handle.Internals.flushCharReadBuffer_closure:
	.quad	GHC.IO.Handle.Internals.flushCharReadBuffer_info


==================== Asm code ====================
2018-03-16 16:05:07.860773961 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushCharReadBuffer_entry
.type GHC.IO.Handle.Internals.flushCharReadBuffer_entry, @object
GHC.IO.Handle.Internals.flushCharReadBuffer_entry:
_cabAk:
	jmp GHC.IO.Handle.Internals.flushCharBuffer3_entry
	.size GHC.IO.Handle.Internals.flushCharReadBuffer_entry, .-GHC.IO.Handle.Internals.flushCharReadBuffer_entry


==================== Asm code ====================
2018-03-16 16:05:07.861435469 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushCharReadBuffer_info
.type GHC.IO.Handle.Internals.flushCharReadBuffer_info, @object
GHC.IO.Handle.Internals.flushCharReadBuffer_info:
	.quad	GHC.IO.Handle.Internals.flushCharReadBuffer_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:07.863196064 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl9_ra7Pp_bytes:
	.asciz "error"


==================== Asm code ====================
2018-03-16 16:05:07.866188195 UTC

.section .data
.align 8
.align 1
lvl10_ra7Pq_closure:
	.quad	lvl10_ra7Pq_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.867031318 UTC

.section .text
.align 8
lvl10_ra7Pq_entry:
_cabAy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cabAz
_cabAA:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cabAx
_cabAw:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl9_ra7Pp_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cabAz:
	jmp *-16(%r13)
_cabAx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl10_ra7Pq_entry, .-lvl10_ra7Pq_entry


==================== Asm code ====================
2018-03-16 16:05:07.867698359 UTC

.section .data.rel.ro
.align 8
.align 1
lvl10_ra7Pq_info:
	.quad	lvl10_ra7Pq_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:07.870237843 UTC

.section .data
.align 8
.align 1
lvl11_ra7Pr_closure:
	.quad	lvl11_ra7Pr_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.871056891 UTC

.section .text
.align 8
lvl11_ra7Pr_entry:
_cabAO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cabAP
_cabAQ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cabAN
_cabAM:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Internals.$trModule4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cabAP:
	jmp *-16(%r13)
_cabAN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl11_ra7Pr_entry, .-lvl11_ra7Pr_entry


==================== Asm code ====================
2018-03-16 16:05:07.871756391 UTC

.section .data.rel.ro
.align 8
.align 1
lvl11_ra7Pr_info:
	.quad	lvl11_ra7Pr_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:07.87433708 UTC

.section .data
.align 8
.align 1
lvl12_ra7Ps_closure:
	.quad	lvl12_ra7Ps_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.875158702 UTC

.section .text
.align 8
lvl12_ra7Ps_entry:
_cabB4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cabB5
_cabB6:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cabB3
_cabB2:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Internals.$trModule2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cabB5:
	jmp *-16(%r13)
_cabB3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl12_ra7Ps_entry, .-lvl12_ra7Ps_entry


==================== Asm code ====================
2018-03-16 16:05:07.875859379 UTC

.section .data.rel.ro
.align 8
.align 1
lvl12_ra7Ps_info:
	.quad	lvl12_ra7Ps_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:07.877638867 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl13_ra7Pt_bytes:
	.asciz "./GHC/IO/Handle/Internals.hs"


==================== Asm code ====================
2018-03-16 16:05:07.880743234 UTC

.section .data
.align 8
.align 1
lvl14_ra7Pu_closure:
	.quad	lvl14_ra7Pu_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.881582991 UTC

.section .text
.align 8
lvl14_ra7Pu_entry:
_cabBl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cabBm
_cabBn:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cabBk
_cabBj:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl13_ra7Pt_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cabBm:
	jmp *-16(%r13)
_cabBk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl14_ra7Pu_entry, .-lvl14_ra7Pu_entry


==================== Asm code ====================
2018-03-16 16:05:07.882264682 UTC

.section .data.rel.ro
.align 8
.align 1
lvl14_ra7Pu_info:
	.quad	lvl14_ra7Pu_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:07.88401971 UTC

.section .data
.align 8
.align 1
lvl15_ra7Pv_closure:
	.quad	GHC.Types.I#_con_info
	.quad	487


==================== Asm code ====================
2018-03-16 16:05:07.885697496 UTC

.section .data
.align 8
.align 1
lvl16_ra7Pw_closure:
	.quad	GHC.Types.I#_con_info
	.quad	12


==================== Asm code ====================
2018-03-16 16:05:07.887435368 UTC

.section .data
.align 8
.align 1
lvl17_ra7Px_closure:
	.quad	GHC.Types.I#_con_info
	.quad	68


==================== Asm code ====================
2018-03-16 16:05:07.88922679 UTC

.section .data
.align 8
.align 1
lvl18_ra7Py_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl11_ra7Pr_closure
	.quad	lvl12_ra7Ps_closure
	.quad	lvl14_ra7Pu_closure
	.quad	lvl15_ra7Pv_closure+1
	.quad	lvl16_ra7Pw_closure+1
	.quad	lvl15_ra7Pv_closure+1
	.quad	lvl17_ra7Px_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.891540807 UTC

.section .data
.align 8
.align 1
lvl19_ra7Pz_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl10_ra7Pq_closure
	.quad	lvl18_ra7Py_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.893373685 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl20_ra7PA_bytes:
	.asciz "internal IO library error: Char buffer non-empty"


==================== Asm code ====================
2018-03-16 16:05:07.896479054 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushCharBuffer2_closure
.type GHC.IO.Handle.Internals.flushCharBuffer2_closure, @object
GHC.IO.Handle.Internals.flushCharBuffer2_closure:
	.quad	GHC.IO.Handle.Internals.flushCharBuffer2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.897451428 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushCharBuffer2_entry
.type GHC.IO.Handle.Internals.flushCharBuffer2_entry, @object
GHC.IO.Handle.Internals.flushCharBuffer2_entry:
_cabBJ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cabBK
_cabBL:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cabBG
_cabBF:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_cabBH_info,-24(%rbp)
	movl $lvl20_ra7PA_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_cabBK:
	jmp *-16(%r13)
_cabBG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.flushCharBuffer2_entry, .-GHC.IO.Handle.Internals.flushCharBuffer2_entry


==================== Asm code ====================
2018-03-16 16:05:07.898161242 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushCharBuffer2_info
.type GHC.IO.Handle.Internals.flushCharBuffer2_info, @object
GHC.IO.Handle.Internals.flushCharBuffer2_info:
	.quad	GHC.IO.Handle.Internals.flushCharBuffer2_entry
	.quad	0
	.quad	12884901909
	.quad	Sa8nI_srt+232


==================== Asm code ====================
2018-03-16 16:05:07.898785318 UTC

.section .text
.align 8
_cabBH:
_cabBH:
	movq %rbx,%rsi
	movl $lvl19_ra7Pz_closure+2,%r14d
	addq $8,%rbp
	jmp GHC.Err.error_entry
	.size _cabBH, .-_cabBH


==================== Asm code ====================
2018-03-16 16:05:07.899390653 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabBH_info:
	.quad	_cabBH
	.quad	0
	.quad	12884901918
	.quad	Sa8nI_srt+232


==================== Asm code ====================
2018-03-16 16:05:07.904205404 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushCharBuffer1_closure
.type GHC.IO.Handle.Internals.flushCharBuffer1_closure, @object
GHC.IO.Handle.Internals.flushCharBuffer1_closure:
	.quad	GHC.IO.Handle.Internals.flushCharBuffer1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.904940734 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushCharBuffer1_entry
.type GHC.IO.Handle.Internals.flushCharBuffer1_entry, @object
GHC.IO.Handle.Internals.flushCharBuffer1_entry:
_cabC6:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cabCa
_cabCb:
	movq $block_cabC3_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cabC3
_cabC4:
	movq (%rbx),%rax
	jmp *(%rax)
_cabCa:
	movl $GHC.IO.Handle.Internals.flushCharBuffer1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.flushCharBuffer1_entry, .-GHC.IO.Handle.Internals.flushCharBuffer1_entry


==================== Asm code ====================
2018-03-16 16:05:07.90565309 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushCharBuffer1_info
.type GHC.IO.Handle.Internals.flushCharBuffer1_info, @object
GHC.IO.Handle.Internals.flushCharBuffer1_info:
	.quad	GHC.IO.Handle.Internals.flushCharBuffer1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	Sa8nI_srt+248


==================== Asm code ====================
2018-03-16 16:05:07.906385889 UTC

.section .text
.align 8
_cabC3:
_cabC3:
	movq 71(%rbx),%rax
	movq 8(%rax),%rax
	movq $block_cabC9_info,-8(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cabC9
_cabCd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabC3, .-_cabC3


==================== Asm code ====================
2018-03-16 16:05:07.907027192 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabC3_info:
	.quad	_cabC3
	.quad	0
	.quad	4294967326
	.quad	Sa8nI_srt+256


==================== Asm code ====================
2018-03-16 16:05:07.907735522 UTC

.section .text
.align 8
_cabC9:
_cabC9:
	movq $block_cabCh_info,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cabCh
_cabCj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabC9, .-_cabC9


==================== Asm code ====================
2018-03-16 16:05:07.908340982 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabC9_info:
	.quad	_cabC9
	.quad	1
	.quad	4294967326
	.quad	Sa8nI_srt+256


==================== Asm code ====================
2018-03-16 16:05:07.909099575 UTC

.section .text
.align 8
_cabCh:
_cabCh:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cabCp
_cabCy:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _cabCx
_cabCw:
	movl $GHC.IO.Handle.Internals.flushCharBuffer2_closure,%ebx
	addq $32,%rbp
	jmp stg_ap_0_fast
_cabCx:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabCp:
	movq 24(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.flushCharBuffer3_entry
	.size _cabCh, .-_cabCh


==================== Asm code ====================
2018-03-16 16:05:07.909749474 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabCh_info:
	.quad	_cabCh
	.quad	195
	.quad	4294967326
	.quad	Sa8nI_srt+256


==================== Asm code ====================
2018-03-16 16:05:07.911893418 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushCharBuffer_closure
.type GHC.IO.Handle.Internals.flushCharBuffer_closure, @object
GHC.IO.Handle.Internals.flushCharBuffer_closure:
	.quad	GHC.IO.Handle.Internals.flushCharBuffer_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.913033006 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushCharBuffer_entry
.type GHC.IO.Handle.Internals.flushCharBuffer_entry, @object
GHC.IO.Handle.Internals.flushCharBuffer_entry:
_cabD3:
	jmp GHC.IO.Handle.Internals.flushCharBuffer1_entry
	.size GHC.IO.Handle.Internals.flushCharBuffer_entry, .-GHC.IO.Handle.Internals.flushCharBuffer_entry


==================== Asm code ====================
2018-03-16 16:05:07.913945698 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushCharBuffer_info
.type GHC.IO.Handle.Internals.flushCharBuffer_info, @object
GHC.IO.Handle.Internals.flushCharBuffer_info:
	.quad	GHC.IO.Handle.Internals.flushCharBuffer_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	Sa8nI_srt+248


==================== Asm code ====================
2018-03-16 16:05:07.920642386 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer2_closure
.type GHC.IO.Handle.Internals.flushBuffer2_closure, @object
GHC.IO.Handle.Internals.flushBuffer2_closure:
	.quad	GHC.IO.Handle.Internals.flushBuffer2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.921468992 UTC

.section .text
.align 8
sat_sa844_entry:
_cabDF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cabDG
_cabDH:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 16(%rbx),%rax
	movq 24(%rbx),%r14
	subq (%rax),%r14
	negq %r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_cabDG:
	jmp *-16(%r13)
	.size sat_sa844_entry, .-sat_sa844_entry


==================== Asm code ====================
2018-03-16 16:05:07.922074312 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa844_info:
	.quad	sat_sa844_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 16:05:07.922793489 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushBuffer2_entry
.type GHC.IO.Handle.Internals.flushBuffer2_entry, @object
GHC.IO.Handle.Internals.flushBuffer2_entry:
_cabDK:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _cabDL
_cabDM:
	movq $block_cabDe_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cabDe
_cabDf:
	movq (%rbx),%rax
	jmp *(%rax)
_cabDL:
	movl $GHC.IO.Handle.Internals.flushBuffer2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.flushBuffer2_entry, .-GHC.IO.Handle.Internals.flushBuffer2_entry


==================== Asm code ====================
2018-03-16 16:05:07.923506373 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer2_info
.type GHC.IO.Handle.Internals.flushBuffer2_info, @object
GHC.IO.Handle.Internals.flushBuffer2_info:
	.quad	GHC.IO.Handle.Internals.flushBuffer2_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	Sa8nI_srt+264


==================== Asm code ====================
2018-03-16 16:05:07.924239933 UTC

.section .text
.align 8
_cabDe:
_cabDe:
	movq $block_cabDj_info,-24(%rbp)
	movq 7(%rbx),%rax
	movq 31(%rbx),%rcx
	movq 47(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cabDj
_cabDk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabDe, .-_cabDe


==================== Asm code ====================
2018-03-16 16:05:07.924875761 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabDe_info:
	.quad	_cabDe
	.quad	0
	.quad	4294967326
	.quad	Sa8nI_srt+272


==================== Asm code ====================
2018-03-16 16:05:07.925979277 UTC

.section .text
.align 8
_cabDj:
_cabDj:
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	cmpq %rcx,%rax
	je _cabE5
_cabDQ:
	movq $block_cabDr_info,-48(%rbp)
	movq 24(%rbp),%r14
	movq $stg_ap_pv_info,-64(%rbp)
	movq 8(%rbp),%rdx
	movq %rdx,-56(%rbp)
	movq 7(%rbx),%rdx
	movq %rdx,-40(%rbp)
	movq 15(%rbx),%rdx
	movq %rdx,-32(%rbp)
	movq 31(%rbx),%rdx
	movq %rdx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	addq $-64,%rbp
	jmp GHC.IO.Device.isSeekable_entry
_cabE5:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cabDj, .-_cabDj


==================== Asm code ====================
2018-03-16 16:05:07.926689446 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabDj_info:
	.quad	_cabDj
	.quad	3
	.quad	4294967326
	.quad	Sa8nI_srt+272


==================== Asm code ====================
2018-03-16 16:05:07.92737973 UTC

.section .text
.align 8
_cabDr:
_cabDr:
	movq $block_cabDt_info,(%rbp)
	testb $7,%bl
	jne _cabDt
_cabDu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabDr, .-_cabDr


==================== Asm code ====================
2018-03-16 16:05:07.927921937 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabDr_info:
	.quad	_cabDr
	.quad	3849
	.quad	4294967326
	.quad	Sa8nI_srt+272


==================== Asm code ====================
2018-03-16 16:05:07.928771339 UTC

.section .text
.align 8
_cabDt:
_cabDt:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cabDV
_cabDX:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cabE0
_cabDZ:
	movq $sat_sa844_info,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-8(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	movq $block_cabDW_info,(%rbp)
	movq 72(%rbp),%r14
	movq $stg_ap_pppv_info,-32(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-24(%rbp)
	movq $GHC.IO.Device.RelativeSeek_closure+2,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.IO.Device.seek_entry
_cabE0:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_cabDV:
	movl $GHC.IO.Handle.Internals.flushBuffer3_closure,%ebx
	addq $80,%rbp
	jmp stg_raiseIO#
	.size _cabDt, .-_cabDt


==================== Asm code ====================
2018-03-16 16:05:07.929568775 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabDt_info:
	.quad	_cabDt
	.quad	3849
	.quad	4294967326
	.quad	Sa8nI_srt+272


==================== Asm code ====================
2018-03-16 16:05:07.930380873 UTC

.section .text
.align 8
_cabDW:
_cabDW:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cabE4
_cabE3:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 8(%rbp),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 48(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 64(%rbp),%rax
	leaq -47(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabE4:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabDW, .-_cabDW


==================== Asm code ====================
2018-03-16 16:05:07.931119781 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabDW_info:
	.quad	_cabDW
	.quad	24329
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.933424051 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushByteReadBuffer_closure
.type GHC.IO.Handle.Internals.flushByteReadBuffer_closure, @object
GHC.IO.Handle.Internals.flushByteReadBuffer_closure:
	.quad	GHC.IO.Handle.Internals.flushByteReadBuffer_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.934046208 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushByteReadBuffer_entry
.type GHC.IO.Handle.Internals.flushByteReadBuffer_entry, @object
GHC.IO.Handle.Internals.flushByteReadBuffer_entry:
_cabF4:
	jmp GHC.IO.Handle.Internals.flushBuffer2_entry
	.size GHC.IO.Handle.Internals.flushByteReadBuffer_entry, .-GHC.IO.Handle.Internals.flushByteReadBuffer_entry


==================== Asm code ====================
2018-03-16 16:05:07.934578917 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushByteReadBuffer_info
.type GHC.IO.Handle.Internals.flushByteReadBuffer_info, @object
GHC.IO.Handle.Internals.flushByteReadBuffer_info:
	.quad	GHC.IO.Handle.Internals.flushByteReadBuffer_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	Sa8nI_srt+264


==================== Asm code ====================
2018-03-16 16:05:07.950139164 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer1_closure
.type GHC.IO.Handle.Internals.flushBuffer1_closure, @object
GHC.IO.Handle.Internals.flushBuffer1_closure:
	.quad	GHC.IO.Handle.Internals.flushBuffer1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.950974327 UTC

.section .text
.align 8
sat_sa856_entry:
_cabFT:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cabFX
_cabFY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cabFQ_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cabFQ
_cabFR:
	movq (%rbx),%rax
	jmp *(%rax)
_cabFX:
	jmp *-16(%r13)
	.size sat_sa856_entry, .-sat_sa856_entry


==================== Asm code ====================
2018-03-16 16:05:07.951628217 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa856_info:
	.quad	sat_sa856_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:07.952396174 UTC

.section .text
.align 8
_cabFQ:
_cabFQ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cabG1
_cabG0:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabG1:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabFQ, .-_cabFQ


==================== Asm code ====================
2018-03-16 16:05:07.953089576 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabFQ_info:
	.quad	_cabFQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.95382129 UTC

.section .text
.align 8
sat_sa85p_entry:
_cabGp:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cabGw
_cabGx:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cabGm_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cabGm
_cabGn:
	movq (%rbx),%rax
	jmp *(%rax)
_cabGw:
	jmp *-16(%r13)
	.size sat_sa85p_entry, .-sat_sa85p_entry


==================== Asm code ====================
2018-03-16 16:05:07.954475882 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa85p_info:
	.quad	sat_sa85p_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:05:07.9552239 UTC

.section .text
.align 8
_cabGm:
_cabGm:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cabGA
_cabGz:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 39(%rbx),%rbx
	addq 8(%rbp),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabGA:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabGm, .-_cabGm


==================== Asm code ====================
2018-03-16 16:05:07.955882876 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabGm_info:
	.quad	_cabGm
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.956595419 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushBuffer1_entry
.type GHC.IO.Handle.Internals.flushBuffer1_entry, @object
GHC.IO.Handle.Internals.flushBuffer1_entry:
_cabGC:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _cabGD
_cabGE:
	movq $block_cabFf_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cabFf
_cabFg:
	movq (%rbx),%rax
	jmp *(%rax)
_cabGD:
	movl $GHC.IO.Handle.Internals.flushBuffer1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.flushBuffer1_entry, .-GHC.IO.Handle.Internals.flushBuffer1_entry


==================== Asm code ====================
2018-03-16 16:05:07.957264682 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer1_info
.type GHC.IO.Handle.Internals.flushBuffer1_info, @object
GHC.IO.Handle.Internals.flushBuffer1_info:
	.quad	GHC.IO.Handle.Internals.flushBuffer1_entry
	.quad	0
	.quad	21474836494
	.quad	8589934597
	.quad	Sa8nI_srt+264


==================== Asm code ====================
2018-03-16 16:05:07.958053573 UTC

.section .text
.align 8
_cabFf:
_cabFf:
	movq $block_cabFk_info,-56(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 63(%rbx),%rdi
	movq 71(%rbx),%r8
	movq 95(%rbx),%rbx
	movq %rbx,%r9
	movq 8(%r8),%rbx
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rax,(%rbp)
	addq $-56,%rbp
	testb $7,%bl
	jne _cabFk
_cabFl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabFf, .-_cabFf


==================== Asm code ====================
2018-03-16 16:05:07.958748924 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabFf_info:
	.quad	_cabFf
	.quad	0
	.quad	4294967326
	.quad	Sa8nI_srt+264


==================== Asm code ====================
2018-03-16 16:05:07.959407532 UTC

.section .text
.align 8
_cabFk:
_cabFk:
	movq $block_cabFp_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _cabFp
_cabFq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabFk, .-_cabFk


==================== Asm code ====================
2018-03-16 16:05:07.960003684 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabFk_info:
	.quad	_cabFk
	.quad	7
	.quad	4294967326
	.quad	Sa8nI_srt+264


==================== Asm code ====================
2018-03-16 16:05:07.960784017 UTC

.section .text
.align 8
_cabFp:
_cabFp:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cabGJ
_cabHA:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cabHy_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cabHy
_cabHB:
	movq (%rbx),%rax
	jmp *(%rax)
_cabGJ:
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cabFu_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cabFu
_cabFv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabFp, .-_cabFp


==================== Asm code ====================
2018-03-16 16:05:07.96212878 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabFp_info:
	.quad	_cabFp
	.quad	7
	.quad	4294967326
	.quad	Sa8nI_srt+264


==================== Asm code ====================
2018-03-16 16:05:07.962859067 UTC

.section .text
.align 8
_cabFu:
_cabFu:
	movq $block_cabFz_info,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cabFz
_cabFA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabFu, .-_cabFu


==================== Asm code ====================
2018-03-16 16:05:07.963490476 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabFu_info:
	.quad	_cabFu
	.quad	5
	.quad	4294967326
	.quad	Sa8nI_srt+264


==================== Asm code ====================
2018-03-16 16:05:07.964263797 UTC

.section .text
.align 8
_cabFz:
_cabFz:
	movq 56(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	jne _cabHv
_cabHr:
	movq 16(%rbp),%rbx
	cmpq 8(%rbp),%rbx
	je _cabHv
_cabGN:
	movq 32(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cabFH_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cabFH
_cabFI:
	movq (%rbx),%rax
	jmp *(%rax)
_cabHv:
	movq %rax,%r14
	addq $64,%rbp
	jmp GHC.IO.Handle.Internals.flushBuffer2_entry
	.size _cabFz, .-_cabFz


==================== Asm code ====================
2018-03-16 16:05:07.964927011 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabFz_info:
	.quad	_cabFz
	.quad	199
	.quad	4294967326
	.quad	Sa8nI_srt+264


==================== Asm code ====================
2018-03-16 16:05:07.96589271 UTC

.section .text
.align 8
_cabFH:
_cabFH:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cabGQ
_cabGP:
	movq 24(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq 8(%rax),%rdx
	movq $sat_sa856_info,-16(%r12)
	movq %rdx,(%r12)
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cabG6_info,(%rbp)
	movq %rbx,%rcx
	movq 64(%rsp),%rax
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	movq %r14,24(%rbp)
	testb $7,%bl
	jne _cabG6
_cabG7:
	movq (%rbx),%rax
	jmp *(%rax)
_cabGQ:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabFH, .-_cabFH


==================== Asm code ====================
2018-03-16 16:05:07.966608112 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabFH_info:
	.quad	_cabFH
	.quad	133
	.quad	4294967326
	.quad	Sa8nI_srt+264


==================== Asm code ====================
2018-03-16 16:05:07.96742705 UTC

.section .text
.align 8
_cabG6:
_cabG6:
	movq 39(%rbx),%rax
	testq %rax,%rax
	jne _cabGT
_cabHo:
	movq 40(%rbp),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq %rcx,8(%rbx)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rbx,%rsi
	movq %rcx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movq %rbx,%r14
	addq $48,%rbp
	jmp GHC.IO.Handle.Internals.flushBuffer2_entry
_cabGT:
	movq $block_cabGd_info,-24(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq 32(%rbp),%rbx
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rsi,32(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cabGd
_cabGe:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabG6, .-_cabG6


==================== Asm code ====================
2018-03-16 16:05:07.968146404 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabG6_info:
	.quad	_cabG6
	.quad	5
	.quad	4294967326
	.quad	Sa8nI_srt+264


==================== Asm code ====================
2018-03-16 16:05:07.969032353 UTC

.section .text
.align 8
_cabGd:
_cabGd:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cabGV
_cabHd:
	movq $block_cabH1_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cabH1
_cabH2:
	movq (%rbx),%rax
	jmp *(%rax)
_cabGY:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_cabGV:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cabGY
_cabGX:
	movq $sat_sa85p_info,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 64(%rbp),%rax
	movq 32(%rbp),%rbx
	leaq -24(%r12),%rcx
	movq %rcx,8(%rbx)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rbx,%rsi
	movq %rcx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movq %rbx,%r14
	addq $72,%rbp
	jmp GHC.IO.Handle.Internals.flushBuffer2_entry
	.size _cabGd, .-_cabGd


==================== Asm code ====================
2018-03-16 16:05:07.969809296 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabGd_info:
	.quad	_cabGd
	.quad	4232
	.quad	4294967326
	.quad	Sa8nI_srt+264


==================== Asm code ====================
2018-03-16 16:05:07.970445413 UTC

.section .text
.align 8
_cabH1:
_cabH1:
	movq $block_cabH6_info,-8(%rbp)
	movq 48(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,48(%rbp)
	addq $-8,%rbp
	jmp stg_ap_pv_fast
	.size _cabH1, .-_cabH1


==================== Asm code ====================
2018-03-16 16:05:07.971046885 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabH1_info:
	.quad	_cabH1
	.quad	4232
	.quad	4294967326
	.quad	Sa8nI_srt+264


==================== Asm code ====================
2018-03-16 16:05:07.971773913 UTC

.section .text
.align 8
_cabH6:
_cabH6:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cabHh
_cabHg:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 64(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq $block_cabH9_info,32(%rbp)
	leaq -47(%r12),%r8
	movq 48(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 56(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_cabHh:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabH6, .-_cabH6


==================== Asm code ====================
2018-03-16 16:05:07.972485178 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabH6_info:
	.quad	_cabH6
	.quad	8457
	.quad	4294967326
	.quad	Sa8nI_srt+264


==================== Asm code ====================
2018-03-16 16:05:07.973122353 UTC

.section .text
.align 8
_cabH9:
_cabH9:
	movq $block_cabHb_info,(%rbp)
	testb $7,%bl
	jne _cabHb
_cabHj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabH9, .-_cabH9


==================== Asm code ====================
2018-03-16 16:05:07.973746683 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabH9_info:
	.quad	_cabH9
	.quad	901
	.quad	4294967326
	.quad	Sa8nI_srt+264


==================== Asm code ====================
2018-03-16 16:05:07.97441102 UTC

.section .text
.align 8
_cabHb:
_cabHb:
	movq 40(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq %rbx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rcx,%rsi
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movq %rbx,%r14
	addq $48,%rbp
	jmp GHC.IO.Handle.Internals.flushBuffer2_entry
	.size _cabHb, .-_cabHb


==================== Asm code ====================
2018-03-16 16:05:07.9750486 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabHb_info:
	.quad	_cabHb
	.quad	901
	.quad	4294967326
	.quad	Sa8nI_srt+264


==================== Asm code ====================
2018-03-16 16:05:07.975721242 UTC

.section .text
.align 8
_cabHy:
_cabHy:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cabHO
_cabHL:
	movq 16(%rbp),%rax
	movq $block_cabHJ_info,16(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_ppv_info,-8(%rbp)
	movq %rax,(%rbp)
	movq %rbx,8(%rbp)
	addq $-8,%rbp
	jmp GHC.IO.BufferedIO.flushWriteBuffer_entry
_cabHO:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cabHy, .-_cabHy


==================== Asm code ====================
2018-03-16 16:05:07.976383657 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabHy_info:
	.quad	_cabHy
	.quad	7687
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.977080798 UTC

.section .text
.align 8
_cabHJ:
_cabHJ:
	movq 8(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cabHJ, .-_cabHJ


==================== Asm code ====================
2018-03-16 16:05:07.978163249 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabHJ_info:
	.quad	_cabHJ
	.quad	1925
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:07.980426684 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer_closure
.type GHC.IO.Handle.Internals.flushBuffer_closure, @object
GHC.IO.Handle.Internals.flushBuffer_closure:
	.quad	GHC.IO.Handle.Internals.flushBuffer_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.981010825 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushBuffer_entry
.type GHC.IO.Handle.Internals.flushBuffer_entry, @object
GHC.IO.Handle.Internals.flushBuffer_entry:
_cabJZ:
	jmp GHC.IO.Handle.Internals.flushBuffer1_entry
	.size GHC.IO.Handle.Internals.flushBuffer_entry, .-GHC.IO.Handle.Internals.flushBuffer_entry


==================== Asm code ====================
2018-03-16 16:05:07.981603799 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer_info
.type GHC.IO.Handle.Internals.flushBuffer_info, @object
GHC.IO.Handle.Internals.flushBuffer_info:
	.quad	GHC.IO.Handle.Internals.flushBuffer_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	Sa8nI_srt+280


==================== Asm code ====================
2018-03-16 16:05:07.983346135 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl21_ra7PB_bytes:
	.asciz "GHC/IO/Handle/Internals.hs:881:7-30|Just decoder"


==================== Asm code ====================
2018-03-16 16:05:07.985895178 UTC

.section .data
.align 8
.align 1
lvl22_ra7PC_closure:
	.quad	lvl22_ra7PC_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:07.986689885 UTC

.section .text
.align 8
lvl22_ra7PC_entry:
_cabKd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cabKe
_cabKf:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cabKc
_cabKb:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl21_ra7PB_bytes,%r14d
	addq $-16,%rbp
	jmp Control.Exception.Base.patError_entry
_cabKe:
	jmp *-16(%r13)
_cabKc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl22_ra7PC_entry, .-lvl22_ra7PC_entry


==================== Asm code ====================
2018-03-16 16:05:07.987363684 UTC

.section .data.rel.ro
.align 8
.align 1
lvl22_ra7PC_info:
	.quad	lvl22_ra7PC_entry
	.quad	0
	.quad	4294967317
	.quad	Sa8nI_srt+288


==================== Asm code ====================
2018-03-16 16:05:08.01630688 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hLookAhead_2_closure
.type GHC.IO.Handle.Internals.hLookAhead_2_closure, @object
GHC.IO.Handle.Internals.hLookAhead_2_closure:
	.quad	GHC.IO.Handle.Internals.hLookAhead_2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.017138448 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.hLookAhead_2_entry
.type GHC.IO.Handle.Internals.hLookAhead_2_entry, @object
GHC.IO.Handle.Internals.hLookAhead_2_entry:
_cabKu:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cabKy
_cabKz:
	movq $block_cabKr_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cabKr
_cabKs:
	movq (%rbx),%rax
	jmp *(%rax)
_cabKy:
	movl $GHC.IO.Handle.Internals.hLookAhead_2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.hLookAhead_2_entry, .-GHC.IO.Handle.Internals.hLookAhead_2_entry


==================== Asm code ====================
2018-03-16 16:05:08.017831561 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hLookAhead_2_info
.type GHC.IO.Handle.Internals.hLookAhead_2_info, @object
GHC.IO.Handle.Internals.hLookAhead_2_info:
	.quad	GHC.IO.Handle.Internals.hLookAhead_2_entry
	.quad	0
	.quad	-4610560114225577970
	.quad	12884901903
	.quad	Sa8nI_srt+56


==================== Asm code ====================
2018-03-16 16:05:08.018638152 UTC

.section .text
.align 8
_cabKr:
_cabKr:
	movq $block_cabKx_info,-48(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 63(%rbx),%rdi
	movq 95(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rsi),%rbx
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _cabKx
_cabKB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabKr, .-_cabKr


==================== Asm code ====================
2018-03-16 16:05:08.019282328 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabKr_info:
	.quad	_cabKr
	.quad	1
	.quad	-9222246132652965858
	.quad	Sa8nI_srt+56


==================== Asm code ====================
2018-03-16 16:05:08.020983618 UTC

.section .text
.align 8
_cabKx:
_cabKx:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cabMJ
_cabMy:
	movq %rbx,16(%rbp)
	addq $16,%rbp
	jmp _sa86t
_cabMJ:
	movq 16(%rbp),%rax
	movq $block_cabMB_info,16(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_ppv_info,-8(%rbp)
	movq %rax,(%rbp)
	movq %rbx,8(%rbp)
	addq $-8,%rbp
	jmp GHC.IO.BufferedIO.fillReadBuffer_entry
	.size _cabKx, .-_cabKx


==================== Asm code ====================
2018-03-16 16:05:08.021692582 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabKx_info:
	.quad	_cabKx
	.quad	7
	.quad	-9222246132652965858
	.quad	Sa8nI_srt+56


==================== Asm code ====================
2018-03-16 16:05:08.022345465 UTC

.section .text
.align 8
_cabMB:
_cabMB:
	movq $block_cabMD_info,(%rbp)
	testb $7,%bl
	jne _cabMD
_cabME:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabMB, .-_cabMB


==================== Asm code ====================
2018-03-16 16:05:08.022912458 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabMB_info:
	.quad	_cabMB
	.quad	5
	.quad	-9222246132652965858
	.quad	Sa8nI_srt+56


==================== Asm code ====================
2018-03-16 16:05:08.023607797 UTC

.section .text
.align 8
_cabMD:
_cabMD:
	movq $block_cabMI_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cabMI
_cabMM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabMD, .-_cabMD


==================== Asm code ====================
2018-03-16 16:05:08.024249382 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabMD_info:
	.quad	_cabMD
	.quad	5
	.quad	-9222246132652965858
	.quad	Sa8nI_srt+56


==================== Asm code ====================
2018-03-16 16:05:08.024919626 UTC

.section .text
.align 8
_cabMI:
_cabMI:
	cmpq $0,7(%rbx)
	je _cabMU
_cabMT:
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _sa86t
_cabMU:
	movl $GHC.IO.Handle.Internals.hLookAhead_3_closure,%ebx
	addq $56,%rbp
	jmp stg_raiseIO#
	.size _cabMI, .-_cabMI


==================== Asm code ====================
2018-03-16 16:05:08.025566271 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabMI_info:
	.quad	_cabMI
	.quad	6
	.quad	-9222246132652965858
	.quad	Sa8nI_srt+56


==================== Asm code ====================
2018-03-16 16:05:08.026236991 UTC

.section .text
.align 8
_sa86t:
_sa86t:
	movq $block_cabKL_info,-8(%rbp)
	movq 24(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cabKL
_cabKN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sa86t, .-_sa86t


==================== Asm code ====================
2018-03-16 16:05:08.0271548 UTC

.section .text
.align 8
_cabKL:
_cabKL:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cabLc
_cabM5:
	movq $block_cabLD_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cabLD
_cabLE:
	movq (%rbx),%rax
	jmp *(%rax)
_cabLf:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_cabLc:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cabLf
_cabLe:
	movq $(,)_con_info,-16(%r12)
	movq $GHC.IO.Handle.Internals.decodeByteBuf2_closure,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq 48(%rbp),%rbx
	movq 24(%rbp),%rcx
	leaq -15(%r12),%rdx
	movq %rdx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rdx
	movq %rcx,%rsi
	movq %rdx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cabKV_info,8(%rbp)
	movq %rbx,%rsi
	addq $8,%rbp
	jmp GHC.IO.Encoding.Latin1.latin5_entry
	.size _cabKL, .-_cabKL


==================== Asm code ====================
2018-03-16 16:05:08.02790013 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabKL_info:
	.quad	_cabKL
	.quad	518
	.quad	35188667056158
	.quad	Sa8nI_srt+200


==================== Asm code ====================
2018-03-16 16:05:08.028520799 UTC

.section .text
.align 8
_cabKV:
_cabKV:
	movq $block_cabKX_info,(%rbp)
	testb $7,%bl
	jne _cabKX
_cabKY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabKV, .-_cabKV


==================== Asm code ====================
2018-03-16 16:05:08.029121518 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabKV_info:
	.quad	_cabKV
	.quad	389
	.quad	4294967326
	.quad	Sa8nI_srt+304


==================== Asm code ====================
2018-03-16 16:05:08.029888223 UTC

.section .text
.align 8
_cabKX:
_cabKX:
	movq 8(%rbp),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rdx
	movq %rax,%rsi
	movq %rdx,%rdi
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cabL5_info,16(%rbp)
	movq %r14,24(%rbp)
	addq $16,%rbp
	testb $7,%bl
	jne _cabL5
_cabL6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabKX, .-_cabKX


==================== Asm code ====================
2018-03-16 16:05:08.030524826 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabKX_info:
	.quad	_cabKX
	.quad	389
	.quad	4294967326
	.quad	Sa8nI_srt+304


==================== Asm code ====================
2018-03-16 16:05:08.031228033 UTC

.section .text
.align 8
_cabL5:
_cabL5:
	movq $block_cabLa_info,-8(%rbp)
	movq %rbx,%rax
	movq 47(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cabLa
_cabLj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabL5, .-_cabL5


==================== Asm code ====================
2018-03-16 16:05:08.031842452 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabL5_info:
	.quad	_cabL5
	.quad	3
	.quad	4294967326
	.quad	Sa8nI_srt+304


==================== Asm code ====================
2018-03-16 16:05:08.032559241 UTC

.section .text
.align 8
_cabLa:
_cabLa:
	movq 8(%rbp),%rax
	cmpq 47(%rbx),%rax
	je _cabLv
_cabLr:
	movq 32(%rbp),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabLv:
	movq 16(%rbp),%rax
	movq $block_cabLu_info,16(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,32(%rbp)
	addq $16,%rbp
	testb $7,%bl
	jne _cabLu
_cabLw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabLa, .-_cabLa


==================== Asm code ====================
2018-03-16 16:05:08.033229387 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabLa_info:
	.quad	_cabLa
	.quad	68
	.quad	4294967326
	.quad	Sa8nI_srt+304


==================== Asm code ====================
2018-03-16 16:05:08.03389589 UTC

.section .text
.align 8
_cabLu:
_cabLu:
	movq 31(%rbx),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.IO.Handle.Internals.$wreadTextDevice'_entry
	.size _cabLu, .-_cabLu


==================== Asm code ====================
2018-03-16 16:05:08.034469968 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabLu_info:
	.quad	_cabLu
	.quad	2
	.quad	4294967326
	.quad	Sa8nI_srt+304


==================== Asm code ====================
2018-03-16 16:05:08.035100914 UTC

.section .text
.align 8
_cabLD:
_cabLD:
	movq $block_cabLI_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	jmp stg_ap_v_fast
	.size _cabLD, .-_cabLD


==================== Asm code ====================
2018-03-16 16:05:08.035699772 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabLD_info:
	.quad	_cabLD
	.quad	518
	.quad	4294967326
	.quad	Sa8nI_srt+304


==================== Asm code ====================
2018-03-16 16:05:08.03651347 UTC

.section .text
.align 8
_cabLI:
_cabLI:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cabM9
_cabM8:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 56(%rbp),%rbx
	movq 32(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 8(%rbp),%rsi
	leaq -15(%r12),%rdi
	movq %rdi,8(%rcx)
	subq $8,%rsp
	movq %r13,%rdi
	movq %rsi,%r8
	movq %rcx,%rsi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cabLO_info,16(%rbp)
	movq %rbx,%r8
	movq %r14,%rdi
	movq 72(%rsp),%rax
	movq %rax,%rsi
	movq 64(%rsp),%rax
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_cabM9:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabLI, .-_cabLI


==================== Asm code ====================
2018-03-16 16:05:08.037237083 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabLI_info:
	.quad	_cabLI
	.quad	7
	.quad	4294967326
	.quad	Sa8nI_srt+304


==================== Asm code ====================
2018-03-16 16:05:08.038184057 UTC

.section .text
.align 8
_cabLO:
_cabLO:
	movq $block_cabLQ_info,(%rbp)
	testb $7,%bl
	jne _cabLQ
_cabLR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabLO, .-_cabLO


==================== Asm code ====================
2018-03-16 16:05:08.038774397 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabLO_info:
	.quad	_cabLO
	.quad	389
	.quad	4294967326
	.quad	Sa8nI_srt+304


==================== Asm code ====================
2018-03-16 16:05:08.039538973 UTC

.section .text
.align 8
_cabLQ:
_cabLQ:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rdx
	movq %rax,%rsi
	movq %rdx,%rdi
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cabLY_info,16(%rbp)
	movq %r14,24(%rbp)
	addq $16,%rbp
	testb $7,%bl
	jne _cabLY
_cabLZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabLQ, .-_cabLQ


==================== Asm code ====================
2018-03-16 16:05:08.040205366 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabLQ_info:
	.quad	_cabLQ
	.quad	389
	.quad	4294967326
	.quad	Sa8nI_srt+304


==================== Asm code ====================
2018-03-16 16:05:08.040928044 UTC

.section .text
.align 8
_cabLY:
_cabLY:
	movq $block_cabM3_info,-8(%rbp)
	movq %rbx,%rax
	movq 47(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cabM3
_cabMd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabLY, .-_cabLY


==================== Asm code ====================
2018-03-16 16:05:08.041560111 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabLY_info:
	.quad	_cabLY
	.quad	3
	.quad	4294967326
	.quad	Sa8nI_srt+304


==================== Asm code ====================
2018-03-16 16:05:08.04226283 UTC

.section .text
.align 8
_cabM3:
_cabM3:
	movq 8(%rbp),%rax
	cmpq 47(%rbx),%rax
	je _cabMp
_cabMl:
	movq 32(%rbp),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabMp:
	movq 16(%rbp),%rax
	movq $block_cabMo_info,16(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,32(%rbp)
	addq $16,%rbp
	testb $7,%bl
	jne _cabMo
_cabMq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabM3, .-_cabM3


==================== Asm code ====================
2018-03-16 16:05:08.042914187 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabM3_info:
	.quad	_cabM3
	.quad	68
	.quad	4294967326
	.quad	Sa8nI_srt+304


==================== Asm code ====================
2018-03-16 16:05:08.043591516 UTC

.section .text
.align 8
_cabMo:
_cabMo:
	movq 31(%rbx),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.IO.Handle.Internals.$wreadTextDevice'_entry
	.size _cabMo, .-_cabMo


==================== Asm code ====================
2018-03-16 16:05:08.044183812 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabMo_info:
	.quad	_cabMo
	.quad	2
	.quad	4294967326
	.quad	Sa8nI_srt+304


==================== Asm code ====================
2018-03-16 16:05:08.044741239 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wreadTextDevice'_closure
.type GHC.IO.Handle.Internals.$wreadTextDevice'_closure, @object
GHC.IO.Handle.Internals.$wreadTextDevice'_closure:
	.quad	GHC.IO.Handle.Internals.$wreadTextDevice'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.045413936 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.$wreadTextDevice'_slow
.type GHC.IO.Handle.Internals.$wreadTextDevice'_slow, @object
GHC.IO.Handle.Internals.$wreadTextDevice'_slow:
_cabNf:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.$wreadTextDevice'_entry
	.size GHC.IO.Handle.Internals.$wreadTextDevice'_slow, .-GHC.IO.Handle.Internals.$wreadTextDevice'_slow


==================== Asm code ====================
2018-03-16 16:05:08.045993626 UTC

.section .data.rel.ro
.align 8
.align 1
uabQs_srtd:
	.quad	Sa8nI_srt+56
	.quad	33
	.quad	7516192769


==================== Asm code ====================
2018-03-16 16:05:08.046702272 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.$wreadTextDevice'_entry
.type GHC.IO.Handle.Internals.$wreadTextDevice'_entry, @object
GHC.IO.Handle.Internals.$wreadTextDevice'_entry:
_cabNm:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cabNM
_uabQ5:
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp _cabNg
_cabNM:
	movl $GHC.IO.Handle.Internals.$wreadTextDevice'_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.$wreadTextDevice'_entry, .-GHC.IO.Handle.Internals.$wreadTextDevice'_entry


==================== Asm code ====================
2018-03-16 16:05:08.047366201 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wreadTextDevice'_info
.type GHC.IO.Handle.Internals.$wreadTextDevice'_info, @object
GHC.IO.Handle.Internals.$wreadTextDevice'_info:
	.quad	GHC.IO.Handle.Internals.$wreadTextDevice'_entry
	.quad	0
	.quad	-4294967282
	.quad	38654705664
	.quad	uabQs_srtd
	.quad	7304
	.quad	GHC.IO.Handle.Internals.$wreadTextDevice'_slow


==================== Asm code ====================
2018-03-16 16:05:08.048068065 UTC

.section .text
.align 8
_cabNg:
_cabNg:
	movq (%rbp),%rax
	movq $block_cabNj_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cabNj
_cabNk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabNg, .-_cabNg


==================== Asm code ====================
2018-03-16 16:05:08.048651984 UTC

.section .data.rel.ro
.align 8
.align 1
uabQt_srtd:
	.quad	Sa8nI_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:08.050016956 UTC

.section .text
.align 8
_cabNj:
_cabNj:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cabNQ
_cabNP:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq 15(%rbx),%r8
	movq 31(%rbx),%r9
	movq 47(%rbx),%r10
	movq 63(%rbx),%r11
	movq 95(%rbx),%r14
	movq %rax,64(%rsp)
	movq 48(%rbp),%rax
	subq %rdi,%rax
	subq $8,%rsp
	movq %rcx,80(%rsp)
	movq 72(%rsp),%rcx
	movq %rcx,88(%rsp)
	movq 72(%rsp),%rcx
	addq %rdi,%rcx
	movq %rdx,%rdi
	movq %rax,%rdx
	movq %rdi,104(%rsp)
	movq %rcx,96(%rsp)
	movq 88(%rsp),%rcx
	movq %rcx,%rdi
	movq %rsi,112(%rsp)
	movq 96(%rsp),%rcx
	movq %rcx,%rsi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %r8,120(%rsp)
	movq %r9,128(%rsp)
	movq %r10,136(%rsp)
	movq %r11,144(%rsp)
	movq %rcx,152(%rsp)
	call memmove
	addq $8,%rsp
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-40(%r12)
	movq 96(%rsp),%rcx
	movq %rcx,-32(%r12)
	movq 64(%rsp),%rcx
	movq %rcx,-24(%r12)
	movq 104(%rsp),%rcx
	movq %rcx,-16(%r12)
	movq $0,-8(%r12)
	movq 144(%rsp),%rcx
	movq %rcx,(%r12)
	movq $block_cabNE_info,16(%rbp)
	movq %r14,%rdx
	movq 112(%rsp),%rcx
	movq %rcx,%r14
	movq $stg_ap_ppv_info,-8(%rbp)
	movq 120(%rsp),%rcx
	movq %rcx,(%rbp)
	leaq -47(%r12),%rcx
	movq %rcx,8(%rbp)
	movq %rdx,24(%rbp)
	movq 136(%rsp),%rcx
	movq %rcx,32(%rbp)
	movq 128(%rsp),%rcx
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	addq $-8,%rbp
	jmp GHC.IO.BufferedIO.fillReadBuffer_entry
_cabNQ:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabNj, .-_cabNj


==================== Asm code ====================
2018-03-16 16:05:08.051562659 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabNj_info:
	.quad	_cabNj
	.quad	3655
	.quad	-4294967266
	.quad	uabQt_srtd


==================== Asm code ====================
2018-03-16 16:05:08.052137634 UTC

.section .data.rel.ro
.align 8
.align 1
uabQu_srtd:
	.quad	Sa8nI_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:08.052785206 UTC

.section .text
.align 8
_cabNE:
_cabNE:
	movq $block_cabNG_info,(%rbp)
	testb $7,%bl
	jne _cabNG
_cabNH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabNE, .-_cabNE


==================== Asm code ====================
2018-03-16 16:05:08.053348838 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabNE_info:
	.quad	_cabNE
	.quad	5
	.quad	-4294967266
	.quad	uabQu_srtd


==================== Asm code ====================
2018-03-16 16:05:08.053930898 UTC

.section .data.rel.ro
.align 8
.align 1
uabQv_srtd:
	.quad	Sa8nI_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:08.054646646 UTC

.section .text
.align 8
_cabNG:
_cabNG:
	movq $block_cabNL_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cabNL
_cabNT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabNG, .-_cabNG


==================== Asm code ====================
2018-03-16 16:05:08.055266828 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabNG_info:
	.quad	_cabNG
	.quad	5
	.quad	-4294967266
	.quad	uabQv_srtd


==================== Asm code ====================
2018-03-16 16:05:08.055825536 UTC

.section .data.rel.ro
.align 8
.align 1
uabQw_srtd:
	.quad	Sa8nI_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:08.056532903 UTC

.section .text
.align 8
_cabNL:
_cabNL:
	cmpq $0,7(%rbx)
	je _cabP6
_cabO2:
	movq $block_cabO0_info,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _cabO0
_cabO3:
	movq (%rbx),%rax
	jmp *(%rax)
_cabP6:
	movq 8(%rbp),%rax
	movq $block_cabP5_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cabP5
_cabP7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabNL, .-_cabNL


==================== Asm code ====================
2018-03-16 16:05:08.057180094 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabNL_info:
	.quad	_cabNL
	.quad	6
	.quad	-4294967266
	.quad	uabQw_srtd


==================== Asm code ====================
2018-03-16 16:05:08.057766882 UTC

.section .data.rel.ro
.align 8
.align 1
uabQx_srtd:
	.quad	Sa8nI_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:08.058518154 UTC

.section .text
.align 8
_cabP5:
_cabP5:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cabQ2
_cabPh:
	movq 8(%rbp),%rax
	movq $block_cabPf_info,8(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _cabPf
_cabPi:
	movq (%rbx),%rax
	jmp *(%rax)
_cabQ2:
	movl $GHC.IO.Handle.Internals.hLookAhead_3_closure,%ebx
	addq $48,%rbp
	jmp stg_raiseIO#
	.size _cabP5, .-_cabP5


==================== Asm code ====================
2018-03-16 16:05:08.059139275 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabP5_info:
	.quad	_cabP5
	.quad	133
	.quad	-4294967266
	.quad	uabQx_srtd


==================== Asm code ====================
2018-03-16 16:05:08.059823668 UTC

.section .text
.align 8
_cabPf:
_cabPf:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uabQ8
_cabPN:
	movq $block_cabPr_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cabPr
_cabPs:
	movq (%rbx),%rax
	jmp *(%rax)
_uabQ8:
	addq $40,%rbp
	jmp _cabPo
	.size _cabPf, .-_cabPf


==================== Asm code ====================
2018-03-16 16:05:08.060435931 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabPf_info:
	.quad	_cabPf
	.quad	4
	.quad	21474836510
	.quad	Sa8nI_srt+296


==================== Asm code ====================
2018-03-16 16:05:08.061090108 UTC

.section .text
.align 8
_cabPr:
_cabPr:
	movq 8(%rbp),%rax
	movq $block_cabPw_info,8(%rbp)
	movq 32(%rbp),%rsi
	movq %rax,%r14
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_ppv_fast
	.size _cabPr, .-_cabPr


==================== Asm code ====================
2018-03-16 16:05:08.06205339 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabPr_info:
	.quad	_cabPr
	.quad	4
	.quad	4294967326
	.quad	Sa8nI_srt+296


==================== Asm code ====================
2018-03-16 16:05:08.062683622 UTC

.section .text
.align 8
_cabPw:
_cabPw:
	movq $block_cabPy_info,(%rbp)
	testb $7,%bl
	jne _cabPy
_cabPz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabPw, .-_cabPw


==================== Asm code ====================
2018-03-16 16:05:08.063261498 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabPw_info:
	.quad	_cabPw
	.quad	3
	.quad	4294967326
	.quad	Sa8nI_srt+296


==================== Asm code ====================
2018-03-16 16:05:08.064011476 UTC

.section .text
.align 8
_cabPy:
_cabPy:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rax,%rsi
	movq %rcx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cabPG_info,8(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _cabPG
_cabPH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabPy, .-_cabPy


==================== Asm code ====================
2018-03-16 16:05:08.064660474 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabPy_info:
	.quad	_cabPy
	.quad	3
	.quad	4294967326
	.quad	Sa8nI_srt+296


==================== Asm code ====================
2018-03-16 16:05:08.065387765 UTC

.section .text
.align 8
_cabPG:
_cabPG:
	movq $block_cabPL_info,-8(%rbp)
	movq %rbx,%rax
	movq 47(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cabPL
_cabPS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabPG, .-_cabPG


==================== Asm code ====================
2018-03-16 16:05:08.066053026 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabPG_info:
	.quad	_cabPG
	.quad	2
	.quad	4294967326
	.quad	Sa8nI_srt+296


==================== Asm code ====================
2018-03-16 16:05:08.066747691 UTC

.section .text
.align 8
_cabPL:
_cabPL:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	cmpq 47(%rbx),%rcx
	je _cabQ1
_cabQ0:
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabQ1:
	movq %rax,%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.hLookAhead_2_entry
	.size _cabPL, .-_cabPL


==================== Asm code ====================
2018-03-16 16:05:08.067364449 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabPL_info:
	.quad	_cabPL
	.quad	67
	.quad	4294967326
	.quad	Sa8nI_srt+296


==================== Asm code ====================
2018-03-16 16:05:08.067942492 UTC

.section .data.rel.ro
.align 8
.align 1
uabQy_srtd:
	.quad	Sa8nI_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:08.068638281 UTC

.section .text
.align 8
_cabO0:
_cabO0:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uabQ6
_cabOE:
	movq $block_cabOc_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cabOc
_cabOd:
	movq (%rbx),%rax
	jmp *(%rax)
_uabQ6:
	addq $56,%rbp
	jmp _cabPo
	.size _cabO0, .-_cabO0


==================== Asm code ====================
2018-03-16 16:05:08.069297498 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabO0_info:
	.quad	_cabO0
	.quad	134
	.quad	-4294967266
	.quad	uabQy_srtd


==================== Asm code ====================
2018-03-16 16:05:08.069923003 UTC

.section .text
.align 8
_cabPo:
_cabPo:
	movl $lvl22_ra7PC_closure,%ebx
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabPo, .-_cabPo


==================== Asm code ====================
2018-03-16 16:05:08.070477388 UTC

.section .data.rel.ro
.align 8
.align 1
uabQz_srtd:
	.quad	Sa8nI_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:08.071124343 UTC

.section .text
.align 8
_cabOc:
_cabOc:
	movq $block_cabOh_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	jmp stg_ap_v_fast
	.size _cabOc, .-_cabOc


==================== Asm code ====================
2018-03-16 16:05:08.071712074 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabOc_info:
	.quad	_cabOc
	.quad	134
	.quad	-4294967266
	.quad	uabQz_srtd


==================== Asm code ====================
2018-03-16 16:05:08.072277229 UTC

.section .data.rel.ro
.align 8
.align 1
uabQA_srtd:
	.quad	Sa8nI_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:08.073092574 UTC

.section .text
.align 8
_cabOh:
_cabOh:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cabOI
_cabOH:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 56(%rbp),%rbx
	movq 32(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 8(%rbp),%rsi
	leaq -15(%r12),%rdi
	movq %rdi,8(%rcx)
	subq $8,%rsp
	movq %r13,%rdi
	movq %rsi,%r8
	movq %rcx,%rsi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cabOn_info,32(%rbp)
	movq %rbx,%r8
	movq %r14,%rdi
	movq 72(%rsp),%rax
	movq %rax,%rsi
	movq 64(%rsp),%rax
	movq %rax,%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_cabOI:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabOh, .-_cabOh


==================== Asm code ====================
2018-03-16 16:05:08.074179791 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabOh_info:
	.quad	_cabOh
	.quad	7
	.quad	-4294967266
	.quad	uabQA_srtd


==================== Asm code ====================
2018-03-16 16:05:08.074689072 UTC

.section .data.rel.ro
.align 8
.align 1
uabQB_srtd:
	.quad	Sa8nI_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:08.075334429 UTC

.section .text
.align 8
_cabOn:
_cabOn:
	movq $block_cabOp_info,(%rbp)
	testb $7,%bl
	jne _cabOp
_cabOq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabOn, .-_cabOn


==================== Asm code ====================
2018-03-16 16:05:08.075923504 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabOn_info:
	.quad	_cabOn
	.quad	3
	.quad	-4294967266
	.quad	uabQB_srtd


==================== Asm code ====================
2018-03-16 16:05:08.076469181 UTC

.section .data.rel.ro
.align 8
.align 1
uabQC_srtd:
	.quad	Sa8nI_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:08.07725794 UTC

.section .text
.align 8
_cabOp:
_cabOp:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rbx
	movq %rdx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rcx,%rsi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cabOx_info,(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,8(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _cabOx
_cabOy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabOp, .-_cabOp


==================== Asm code ====================
2018-03-16 16:05:08.077921763 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabOp_info:
	.quad	_cabOp
	.quad	3
	.quad	-4294967266
	.quad	uabQC_srtd


==================== Asm code ====================
2018-03-16 16:05:08.07843484 UTC

.section .data.rel.ro
.align 8
.align 1
uabQD_srtd:
	.quad	Sa8nI_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:08.07955304 UTC

.section .text
.align 8
_cabOx:
_cabOx:
	movq $block_cabOC_info,(%rbp)
	movq 47(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cabOC
_cabOM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabOx, .-_cabOx


==================== Asm code ====================
2018-03-16 16:05:08.080205366 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabOx_info:
	.quad	_cabOx
	.quad	3
	.quad	-4294967266
	.quad	uabQD_srtd


==================== Asm code ====================
2018-03-16 16:05:08.080743577 UTC

.section .data.rel.ro
.align 8
.align 1
uabQE_srtd:
	.quad	Sa8nI_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:08.081530312 UTC

.section .text
.align 8
_cabOC:
_cabOC:
	movq 8(%rbp),%rax
	cmpq 47(%rbx),%rax
	je _cabOY
_cabOU:
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabOY:
	movq $block_cabOX_info,8(%rbp)
	movq %rbx,%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _cabOX
_cabOZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabOC, .-_cabOC


==================== Asm code ====================
2018-03-16 16:05:08.082182643 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabOC_info:
	.quad	_cabOC
	.quad	67
	.quad	-4294967266
	.quad	uabQE_srtd


==================== Asm code ====================
2018-03-16 16:05:08.082711514 UTC

.section .data.rel.ro
.align 8
.align 1
uabQF_srtd:
	.quad	Sa8nI_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:08.083393363 UTC

.section .text
.align 8
_cabOX:
_cabOX:
	movq 8(%rbp),%rax
	movq %rax,-40(%rbp)
	movq 23(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	addq $-40,%rbp
	jmp _cabNg
	.size _cabOX, .-_cabOX


==================== Asm code ====================
2018-03-16 16:05:08.084024293 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabOX_info:
	.quad	_cabOX
	.quad	2
	.quad	-4294967266
	.quad	uabQF_srtd


==================== Asm code ====================
2018-03-16 16:05:08.086667588 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.readTextDevice_closure
.type GHC.IO.Handle.Internals.readTextDevice_closure, @object
GHC.IO.Handle.Internals.readTextDevice_closure:
	.quad	GHC.IO.Handle.Internals.readTextDevice_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.087284229 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.readTextDevice_entry
.type GHC.IO.Handle.Internals.readTextDevice_entry, @object
GHC.IO.Handle.Internals.readTextDevice_entry:
_cabUf:
	jmp GHC.IO.Handle.Internals.hLookAhead_2_entry
	.size GHC.IO.Handle.Internals.readTextDevice_entry, .-GHC.IO.Handle.Internals.readTextDevice_entry


==================== Asm code ====================
2018-03-16 16:05:08.087871687 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.readTextDevice_info
.type GHC.IO.Handle.Internals.readTextDevice_info, @object
GHC.IO.Handle.Internals.readTextDevice_info:
	.quad	GHC.IO.Handle.Internals.readTextDevice_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	Sa8nI_srt+296


==================== Asm code ====================
2018-03-16 16:05:08.093051658 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hLookAhead_1_closure
.type GHC.IO.Handle.Internals.hLookAhead_1_closure, @object
GHC.IO.Handle.Internals.hLookAhead_1_closure:
	.quad	GHC.IO.Handle.Internals.hLookAhead_1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.093862285 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.hLookAhead_1_entry
.type GHC.IO.Handle.Internals.hLookAhead_1_entry, @object
GHC.IO.Handle.Internals.hLookAhead_1_entry:
_cabUt:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cabUx
_cabUy:
	movq $block_cabUq_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cabUq
_cabUr:
	movq (%rbx),%rax
	jmp *(%rax)
_cabUx:
	movl $GHC.IO.Handle.Internals.hLookAhead_1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.hLookAhead_1_entry, .-GHC.IO.Handle.Internals.hLookAhead_1_entry


==================== Asm code ====================
2018-03-16 16:05:08.094526356 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hLookAhead_1_info
.type GHC.IO.Handle.Internals.hLookAhead_1_info, @object
GHC.IO.Handle.Internals.hLookAhead_1_info:
	.quad	GHC.IO.Handle.Internals.hLookAhead_1_entry
	.quad	0
	.quad	38654705678
	.quad	8589934597
	.quad	Sa8nI_srt+296


==================== Asm code ====================
2018-03-16 16:05:08.095267804 UTC

.section .text
.align 8
_cabUq:
_cabUq:
	movq $block_cabUw_info,-16(%rbp)
	movq %rbx,%rax
	movq 71(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cabUw
_cabUA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabUq, .-_cabUq


==================== Asm code ====================
2018-03-16 16:05:08.095834579 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabUq_info:
	.quad	_cabUq
	.quad	0
	.quad	4294967326
	.quad	Sa8nI_srt+296


==================== Asm code ====================
2018-03-16 16:05:08.096755133 UTC

.section .text
.align 8
_cabUw:
_cabUw:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cabUG
_cabUF:
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 39(%rbx),%rdx
	cmpq 47(%rbx),%rdx
	je _cabUZ
_cabUQ:
	movq 8(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	movq %rcx,%rbx
	movq %rdx,%r14
	call dirty_MUT_VAR
	addq $8,%rsp
	movl (%rbx,%r14,4),%eax
	movq $GHC.Types.C#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabUZ:
	addq $-16,%r12
	movq $block_cabUS_info,-16(%rbp)
	movq %rbx,%rsi
	movq 16(%rbp),%r14
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,16(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.hLookAhead_2_entry
_cabUG:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabUw, .-_cabUw


==================== Asm code ====================
2018-03-16 16:05:08.097872817 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabUw_info:
	.quad	_cabUw
	.quad	2
	.quad	4294967326
	.quad	Sa8nI_srt+296


==================== Asm code ====================
2018-03-16 16:05:08.098688404 UTC

.section .text
.align 8
_cabUS:
_cabUS:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cabV2
_cabV1:
	movq 24(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq 8(%rbp),%rdx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	movq %rcx,%rbx
	movq %rdx,%r14
	call dirty_MUT_VAR
	addq $8,%rsp
	movl (%rbx,%r14,4),%eax
	movq $GHC.Types.C#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabV2:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabUS, .-_cabUS


==================== Asm code ====================
2018-03-16 16:05:08.099367009 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabUS_info:
	.quad	_cabUS
	.quad	580
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.101583367 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hLookAhead__closure
.type GHC.IO.Handle.Internals.hLookAhead__closure, @object
GHC.IO.Handle.Internals.hLookAhead__closure:
	.quad	GHC.IO.Handle.Internals.hLookAhead__info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.102236459 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.hLookAhead__entry
.type GHC.IO.Handle.Internals.hLookAhead__entry, @object
GHC.IO.Handle.Internals.hLookAhead__entry:
_cabVt:
	jmp GHC.IO.Handle.Internals.hLookAhead_1_entry
	.size GHC.IO.Handle.Internals.hLookAhead__entry, .-GHC.IO.Handle.Internals.hLookAhead__entry


==================== Asm code ====================
2018-03-16 16:05:08.102796809 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hLookAhead__info
.type GHC.IO.Handle.Internals.hLookAhead__info, @object
GHC.IO.Handle.Internals.hLookAhead__info:
	.quad	GHC.IO.Handle.Internals.hLookAhead__entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	Sa8nI_srt+320


==================== Asm code ====================
2018-03-16 16:05:08.105186338 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hClose_help2_closure
.type GHC.IO.Handle.Internals.hClose_help2_closure, @object
GHC.IO.Handle.Internals.hClose_help2_closure:
	.quad	GHC.IO.Handle.Internals.hClose_help2_info


==================== Asm code ====================
2018-03-16 16:05:08.105931748 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.hClose_help2_entry
.type GHC.IO.Handle.Internals.hClose_help2_entry, @object
GHC.IO.Handle.Internals.hClose_help2_entry:
_cabVF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cabVJ
_cabVI:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %r14,(%r12)
	leaq -6(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cabVJ:
	movq $16,904(%r13)
	movl $GHC.IO.Handle.Internals.hClose_help2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.hClose_help2_entry, .-GHC.IO.Handle.Internals.hClose_help2_entry


==================== Asm code ====================
2018-03-16 16:05:08.106563817 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hClose_help2_info
.type GHC.IO.Handle.Internals.hClose_help2_info, @object
GHC.IO.Handle.Internals.hClose_help2_info:
	.quad	GHC.IO.Handle.Internals.hClose_help2_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:08.125212215 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hClose_help1_closure
.type GHC.IO.Handle.Internals.hClose_help1_closure, @object
GHC.IO.Handle.Internals.hClose_help1_closure:
	.quad	GHC.IO.Handle.Internals.hClose_help1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.126112566 UTC

.section .text
.align 8
sat_sa8bs_entry:
_cabWb:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cabWc
_cabWd:
	movq $block_cabW8_info,-32(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbx),%rbx
	movq %rax,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cabW8
_cabW9:
	movq (%rbx),%rax
	jmp *(%rax)
_cabWc:
	jmp *-8(%r13)
	.size sat_sa8bs_entry, .-sat_sa8bs_entry


==================== Asm code ====================
2018-03-16 16:05:08.126811284 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8bs_info:
	.quad	sat_sa8bs_entry
	.quad	3
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:08.127483204 UTC

.section .text
.align 8
_cabW8:
_cabW8:
	movq $block_cabWg_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _cabWg
_cabWi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabW8, .-_cabW8


==================== Asm code ====================
2018-03-16 16:05:08.128083871 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabW8_info:
	.quad	_cabW8
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.128858861 UTC

.section .text
.align 8
_cabWg:
_cabWg:
	andl $7,%ebx
	cmpq $1,%rbx
	je _uabWM
_cabWt:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cabWr_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cabWr
_cabWu:
	movq (%rbx),%rax
	jmp *(%rax)
_uabWM:
	addq $32,%rbp
	jmp _cabWH
	.size _cabWg, .-_cabWg


==================== Asm code ====================
2018-03-16 16:05:08.129572597 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabWg_info:
	.quad	_cabWg
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.13110674 UTC

.section .text
.align 8
_cabWr:
_cabWr:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _uabWN
_cabWE:
	movq 16(%rbp),%rax
	movq $block_cabWC_info,16(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_ppv_info,-8(%rbp)
	movq %rax,(%rbp)
	movq %rbx,8(%rbp)
	addq $-8,%rbp
	jmp GHC.IO.BufferedIO.flushWriteBuffer_entry
_uabWN:
	addq $32,%rbp
	jmp _cabWH
	.size _cabWr, .-_cabWr


==================== Asm code ====================
2018-03-16 16:05:08.13179528 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabWr_info:
	.quad	_cabWr
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.132399028 UTC

.section .text
.align 8
_cabWH:
_cabWH:
	movl $GHC.Base.Nothing_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cabWH, .-_cabWH


==================== Asm code ====================
2018-03-16 16:05:08.133102555 UTC

.section .text
.align 8
_cabWC:
_cabWC:
	movq 8(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Base.Nothing_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cabWC, .-_cabWC


==================== Asm code ====================
2018-03-16 16:05:08.133798307 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabWC_info:
	.quad	_cabWC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.134501288 UTC

.section .text
.align 8
sat_sa8bI_entry:
_cabXu:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cabXv
_cabXw:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cabXn_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cabXn
_cabXo:
	movq (%rbx),%rax
	jmp *(%rax)
_cabXv:
	jmp *-16(%r13)
	.size sat_sa8bI_entry, .-sat_sa8bI_entry


==================== Asm code ====================
2018-03-16 16:05:08.135115752 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8bI_info:
	.quad	sat_sa8bI_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:05:08.13577717 UTC

.section .text
.align 8
_cabXn:
_cabXn:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cabXr
_cabXs:
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cabXr:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabXn, .-_cabXn


==================== Asm code ====================
2018-03-16 16:05:08.136388116 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabXn_info:
	.quad	_cabXn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.137080681 UTC

.section .text
.align 8
sat_sa8bX_entry:
_cabXY:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cabXZ
_cabY0:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cabXR_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cabXR
_cabXS:
	movq (%rbx),%rax
	jmp *(%rax)
_cabXZ:
	jmp *-16(%r13)
	.size sat_sa8bX_entry, .-sat_sa8bX_entry


==================== Asm code ====================
2018-03-16 16:05:08.137758699 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8bX_info:
	.quad	sat_sa8bX_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:05:08.138436207 UTC

.section .text
.align 8
_cabXR:
_cabXR:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cabXV
_cabXW:
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cabXV:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabXR, .-_cabXR


==================== Asm code ====================
2018-03-16 16:05:08.139093699 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabXR_info:
	.quad	_cabXR
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.139813362 UTC

.section .text
.align 8
sat_sa8cf_entry:
_cabYk:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cabYl
_cabYm:
	movq $block_cabYi_info,-8(%rbp)
	movq 7(%rbx),%r14
	movq $stg_ap_pv_info,-24(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-16(%rbp)
	addq $-24,%rbp
	jmp GHC.IO.Device.close_entry
_cabYl:
	jmp *-8(%r13)
	.size sat_sa8cf_entry, .-sat_sa8cf_entry


==================== Asm code ====================
2018-03-16 16:05:08.140483718 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8cf_info:
	.quad	sat_sa8cf_entry
	.quad	2
	.quad	11
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:08.141102577 UTC

.section .text
.align 8
_cabYi:
_cabYi:
	movl $GHC.Base.Nothing_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cabYi, .-_cabYi


==================== Asm code ====================
2018-03-16 16:05:08.141695226 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabYi_info:
	.quad	_cabYi
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.142454546 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.hClose_help1_entry
.type GHC.IO.Handle.Internals.hClose_help1_entry, @object
GHC.IO.Handle.Internals.hClose_help1_entry:
_cabYo:
	leaq -144(%rbp),%rax
	cmpq %r15,%rax
	jb _cabYp
_cabYq:
	movq $block_cabVT_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cabVT
_cabVU:
	movq (%rbx),%rax
	jmp *(%rax)
_cabYp:
	movl $GHC.IO.Handle.Internals.hClose_help1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.hClose_help1_entry, .-GHC.IO.Handle.Internals.hClose_help1_entry


==================== Asm code ====================
2018-03-16 16:05:08.143104466 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hClose_help1_info
.type GHC.IO.Handle.Internals.hClose_help1_info, @object
GHC.IO.Handle.Internals.hClose_help1_info:
	.quad	GHC.IO.Handle.Internals.hClose_help1_entry
	.quad	0
	.quad	30064771086
	.quad	8589934597
	.quad	Sa8nI_srt+328


==================== Asm code ====================
2018-03-16 16:05:08.143999812 UTC

.section .text
.align 8
_cabVT:
_cabVT:
	movq $block_cabVY_info,-128(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rsi
	movq 31(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 119(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 127(%rbx),%r8
	movq 39(%rbx),%rbx
	movq %r9,112(%rsp)
	movq 72(%rsp),%r9
	movq %r9,-120(%rbp)
	movq 80(%rsp),%r9
	movq %r9,-112(%rbp)
	movq 88(%rsp),%r9
	movq %r9,-104(%rbp)
	movq 96(%rsp),%r9
	movq %r9,-96(%rbp)
	movq 104(%rsp),%r9
	movq %r9,-88(%rbp)
	movq 112(%rsp),%r9
	movq %r9,-80(%rbp)
	movq %r10,-72(%rbp)
	movq %r11,-64(%rbp)
	movq %r14,-56(%rbp)
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq 64(%rsp),%rax
	movq %rax,(%rbp)
	addq $-128,%rbp
	testb $7,%bl
	jne _cabVY
_cabVZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabVT, .-_cabVT


==================== Asm code ====================
2018-03-16 16:05:08.1448101 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabVT_info:
	.quad	_cabVT
	.quad	0
	.quad	12884901918
	.quad	Sa8nI_srt+328


==================== Asm code ====================
2018-03-16 16:05:08.145915389 UTC

.section .text
.align 8
_cabVY:
_cabVY:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cabZp
_cabYt:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cabYw
_cabYv:
	movq $sat_sa8bs_info,-24(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,-8(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	movq $block_cabWT_info,(%rbp)
	movl $GHC.IO.Handle.Internals.hClose_help2_closure+2,%r14d
	leaq -23(%r12),%rbx
	jmp stg_catch#
_cabZs:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_cabZp:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cabZs
_cabZr:
	movq $(,)_con_info,-16(%r12)
	movq 128(%rbp),%rax
	movq %rax,-8(%r12)
	movq $GHC.Base.Nothing_closure+1,(%r12)
	leaq -15(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabYw:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabVY, .-_cabVY


==================== Asm code ====================
2018-03-16 16:05:08.14668799 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabVY_info:
	.quad	_cabVY
	.quad	16
	.quad	12884901918
	.quad	Sa8nI_srt+328


==================== Asm code ====================
2018-03-16 16:05:08.147364091 UTC

.section .text
.align 8
_cabWT:
_cabWT:
	movq $block_cabY8_info,(%rbp)
	movq %rbx,%rax
	movq 120(%rbp),%rbx
	movq %rax,128(%rbp)
	testb $7,%bl
	jne _cabY8
_cabY9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cabWT, .-_cabWT


==================== Asm code ====================
2018-03-16 16:05:08.147968385 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabWT_info:
	.quad	_cabWT
	.quad	2097168
	.quad	12884901918
	.quad	Sa8nI_srt+328


==================== Asm code ====================
2018-03-16 16:05:08.148720989 UTC

.section .text
.align 8
_cabY8:
_cabY8:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cabZc
_cabZl:
	movq $GHC.Base.Nothing_closure+1,(%rbp)
	jmp _sa8bw
_cabZf:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_cabZc:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cabZf
_cabZe:
	movq $sat_sa8cf_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq $block_cabZa_info,(%rbp)
	movl $GHC.IO.Handle.Internals.hClose_help2_closure+2,%r14d
	leaq -15(%r12),%rbx
	jmp stg_catch#
	.size _cabY8, .-_cabY8


==================== Asm code ====================
2018-03-16 16:05:08.149456512 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabY8_info:
	.quad	_cabY8
	.quad	16
	.quad	12884901918
	.quad	Sa8nI_srt+328


==================== Asm code ====================
2018-03-16 16:05:08.150016777 UTC

.section .text
.align 8
_cabZa:
_cabZa:
	movq %rbx,(%rbp)
	jmp _sa8bw
	.size _cabZa, .-_cabZa


==================== Asm code ====================
2018-03-16 16:05:08.150603332 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabZa_info:
	.quad	_cabZa
	.quad	16
	.quad	12884901918
	.quad	Sa8nI_srt+328


==================== Asm code ====================
2018-03-16 16:05:08.151481719 UTC

.section .text
.align 8
_sa8bw:
_sa8bw:
	movq 40(%rbp),%rax
	movq 64(%rbp),%rbx
	movq 72(%rbp),%rcx
	movq 88(%rbp),%rdx
	movq $GHC.IO.Handle.Types.BufferListNil_closure+1,8(%rcx)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rcx,%rsi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.IO.Handle.Internals.noCharBuffer_closure,8(%rbx)
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.IO.Handle.Internals.noByteBuffer_closure,8(%r14)
	subq $8,%rsp
	movq %r13,%rax
	movq %r14,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cabYy_info,-8(%rbp)
	movq 64(%rsp),%rax
	movq %rax,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cabYy
_cabYQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sa8bw, .-_sa8bw


==================== Asm code ====================
2018-03-16 16:05:08.15240441 UTC

.section .text
.align 8
_cabYy:
_cabYy:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uabZz
_cabZ6:
	movq $block_cabYZ_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cabYZ
_cabZ0:
	movq (%rbx),%rax
	jmp *(%rax)
_uabZz:
	addq $8,%rbp
	jmp _sa8bC
	.size _cabYy, .-_cabYy


==================== Asm code ====================
2018-03-16 16:05:08.153049523 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabYy_info:
	.quad	_cabYy
	.quad	17
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.153722878 UTC

.section .text
.align 8
_cabYZ:
_cabYZ:
	movq $block_cabZ4_info,(%rbp)
	movq 23(%rbx),%rbx
	jmp stg_ap_v_fast
	.size _cabYZ, .-_cabYZ


==================== Asm code ====================
2018-03-16 16:05:08.154300471 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabYZ_info:
	.quad	_cabYZ
	.quad	17
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.154929685 UTC

.section .text
.align 8
_cabZ4:
_cabZ4:
	addq $8,%rbp
	jmp _sa8bC
	.size _cabZ4, .-_cabZ4


==================== Asm code ====================
2018-03-16 16:05:08.155445375 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabZ4_info:
	.quad	_cabZ4
	.quad	17
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.156102189 UTC

.section .text
.align 8
_sa8bC:
_sa8bC:
	movq $block_cabXe_info,-8(%rbp)
	movq 80(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cabXe
_cabXf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sa8bC, .-_sa8bC


==================== Asm code ====================
2018-03-16 16:05:08.157142793 UTC

.section .text
.align 8
_cabXe:
_cabXe:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cabYE
_cabYL:
	movq $block_cabXG_info,(%rbp)
	movq %rbx,%rax
	movq 6(%rbx),%rbx
	movq %rax,88(%rbp)
	testb $7,%bl
	jne _cabXG
_cabXH:
	movq (%rbx),%rax
	jmp *(%rax)
_cabYH:
	movq $192,904(%r13)
	jmp stg_gc_unpt_r1
_cabYE:
	addq $192,%r12
	cmpq 856(%r13),%r12
	ja _cabYH
_cabYG:
	movq $sat_sa8bI_info,-184(%r12)
	movq 136(%rbp),%rax
	movq %rax,-168(%r12)
	movq 8(%rbp),%rax
	movq %rax,-160(%r12)
	movq $GHC.IO.Handle.Types.Handle___con_info,-152(%r12)
	movq 16(%rbp),%rax
	movq %rax,-144(%r12)
	movq 24(%rbp),%rax
	movq %rax,-136(%r12)
	movq 32(%rbp),%rax
	movq %rax,-128(%r12)
	movq 40(%rbp),%rax
	movq %rax,-120(%r12)
	movq $GHC.IO.Handle.Types.ClosedHandle_closure+1,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq 56(%rbp),%rax
	movq %rax,-96(%r12)
	movq 64(%rbp),%rax
	movq %rax,-88(%r12)
	movq 72(%rbp),%rax
	movq %rax,-80(%r12)
	movq 80(%rbp),%rax
	movq %rax,-72(%r12)
	movq $GHC.Base.Nothing_closure+1,-64(%r12)
	movq 96(%rbp),%rax
	movq %rax,-56(%r12)
	movq 104(%rbp),%rax
	movq %rax,-48(%r12)
	movq 112(%rbp),%rax
	movq %rax,-40(%r12)
	movq 120(%rbp),%rax
	movq %rax,-32(%r12)
	movq 128(%rbp),%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -151(%r12),%rax
	movq %rax,-8(%r12)
	leaq -184(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cabXe, .-_cabXe


==================== Asm code ====================
2018-03-16 16:05:08.15809338 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabXe_info:
	.quad	_cabXe
	.quad	65553
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.158731402 UTC

.section .text
.align 8
_cabXG:
_cabXG:
	movq $block_cabXL_info,(%rbp)
	movq 23(%rbx),%rbx
	jmp stg_ap_v_fast
	.size _cabXG, .-_cabXG


==================== Asm code ====================
2018-03-16 16:05:08.15931735 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabXG_info:
	.quad	_cabXG
	.quad	17
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.160167516 UTC

.section .text
.align 8
_cabXL:
_cabXL:
	addq $192,%r12
	cmpq 856(%r13),%r12
	ja _cabYP
_cabYO:
	movq $sat_sa8bX_info,-184(%r12)
	movq 136(%rbp),%rax
	movq %rax,-168(%r12)
	movq 8(%rbp),%rax
	movq %rax,-160(%r12)
	movq $GHC.IO.Handle.Types.Handle___con_info,-152(%r12)
	movq 16(%rbp),%rax
	movq %rax,-144(%r12)
	movq 24(%rbp),%rax
	movq %rax,-136(%r12)
	movq 32(%rbp),%rax
	movq %rax,-128(%r12)
	movq 40(%rbp),%rax
	movq %rax,-120(%r12)
	movq $GHC.IO.Handle.Types.ClosedHandle_closure+1,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq 56(%rbp),%rax
	movq %rax,-96(%r12)
	movq 64(%rbp),%rax
	movq %rax,-88(%r12)
	movq 72(%rbp),%rax
	movq %rax,-80(%r12)
	movq 80(%rbp),%rax
	movq %rax,-72(%r12)
	movq 88(%rbp),%rax
	movq %rax,-64(%r12)
	movq 96(%rbp),%rax
	movq %rax,-56(%r12)
	movq 104(%rbp),%rax
	movq %rax,-48(%r12)
	movq 112(%rbp),%rax
	movq %rax,-40(%r12)
	movq 120(%rbp),%rax
	movq %rax,-32(%r12)
	movq 128(%rbp),%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -151(%r12),%rax
	movq %rax,-8(%r12)
	leaq -184(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cabYP:
	movq $192,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cabXL, .-_cabXL


==================== Asm code ====================
2018-03-16 16:05:08.161013388 UTC

.section .data.rel.ro
.align 8
.align 1
block_cabXL_info:
	.quad	_cabXL
	.quad	17
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.163937508 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hClose_help_closure
.type GHC.IO.Handle.Internals.hClose_help_closure, @object
GHC.IO.Handle.Internals.hClose_help_closure:
	.quad	GHC.IO.Handle.Internals.hClose_help_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.164532301 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.hClose_help_entry
.type GHC.IO.Handle.Internals.hClose_help_entry, @object
GHC.IO.Handle.Internals.hClose_help_entry:
_cac2B:
	jmp GHC.IO.Handle.Internals.hClose_help1_entry
	.size GHC.IO.Handle.Internals.hClose_help_entry, .-GHC.IO.Handle.Internals.hClose_help_entry


==================== Asm code ====================
2018-03-16 16:05:08.165131011 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hClose_help_info
.type GHC.IO.Handle.Internals.hClose_help_info, @object
GHC.IO.Handle.Internals.hClose_help_info:
	.quad	GHC.IO.Handle.Internals.hClose_help_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	Sa8nI_srt+344


==================== Asm code ====================
2018-03-16 16:05:08.169174825 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.handleFinalizer1_closure
.type GHC.IO.Handle.Internals.handleFinalizer1_closure, @object
GHC.IO.Handle.Internals.handleFinalizer1_closure:
	.quad	GHC.IO.Handle.Internals.handleFinalizer1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.170324798 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.handleFinalizer1_entry
.type GHC.IO.Handle.Internals.handleFinalizer1_entry, @object
GHC.IO.Handle.Internals.handleFinalizer1_entry:
_cac2P:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cac32
_cac33:
	movq $block_cac2M_info,-8(%rbp)
	movq %rsi,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cac2M
_cac2N:
	movq (%rbx),%rax
	jmp *(%rax)
_cac32:
	movl $GHC.IO.Handle.Internals.handleFinalizer1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.handleFinalizer1_entry, .-GHC.IO.Handle.Internals.handleFinalizer1_entry


==================== Asm code ====================
2018-03-16 16:05:08.170984631 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.handleFinalizer1_info
.type GHC.IO.Handle.Internals.handleFinalizer1_info, @object
GHC.IO.Handle.Internals.handleFinalizer1_info:
	.quad	GHC.IO.Handle.Internals.handleFinalizer1_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	Sa8nI_srt+344


==================== Asm code ====================
2018-03-16 16:05:08.171666688 UTC

.section .text
.align 8
_cac2M:
_cac2M:
	movq $block_cac2S_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_takeMVar#
	.size _cac2M, .-_cac2M


==================== Asm code ====================
2018-03-16 16:05:08.172247961 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac2M_info:
	.quad	_cac2M
	.quad	0
	.quad	4294967326
	.quad	Sa8nI_srt+344


==================== Asm code ====================
2018-03-16 16:05:08.172868037 UTC

.section .text
.align 8
_cac2S:
_cac2S:
	movq $block_cac2U_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.IO.Handle.Internals.hClose_help1_entry
	.size _cac2S, .-_cac2S


==================== Asm code ====================
2018-03-16 16:05:08.173525814 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac2S_info:
	.quad	_cac2S
	.quad	1
	.quad	4294967326
	.quad	Sa8nI_srt+344


==================== Asm code ====================
2018-03-16 16:05:08.174236961 UTC

.section .text
.align 8
_cac2U:
_cac2U:
	movq $block_cac2W_info,(%rbp)
	testb $7,%bl
	jne _cac2W
_cac2X:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cac2U, .-_cac2U


==================== Asm code ====================
2018-03-16 16:05:08.174812463 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac2U_info:
	.quad	_cac2U
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.175464448 UTC

.section .text
.align 8
_cac2W:
_cac2W:
	movq 8(%rbp),%rax
	movq $block_cac31_info,8(%rbp)
	movq 7(%rbx),%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp stg_putMVar#
	.size _cac2W, .-_cac2W


==================== Asm code ====================
2018-03-16 16:05:08.176024617 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac2W_info:
	.quad	_cac2W
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.176673655 UTC

.section .text
.align 8
_cac31:
_cac31:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cac31, .-_cac31


==================== Asm code ====================
2018-03-16 16:05:08.177223919 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac31_info:
	.quad	_cac31
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.179532906 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.handleFinalizer_closure
.type GHC.IO.Handle.Internals.handleFinalizer_closure, @object
GHC.IO.Handle.Internals.handleFinalizer_closure:
	.quad	GHC.IO.Handle.Internals.handleFinalizer_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.180179478 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.handleFinalizer_entry
.type GHC.IO.Handle.Internals.handleFinalizer_entry, @object
GHC.IO.Handle.Internals.handleFinalizer_entry:
_cac3D:
	jmp GHC.IO.Handle.Internals.handleFinalizer1_entry
	.size GHC.IO.Handle.Internals.handleFinalizer_entry, .-GHC.IO.Handle.Internals.handleFinalizer_entry


==================== Asm code ====================
2018-03-16 16:05:08.180740351 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.handleFinalizer_info
.type GHC.IO.Handle.Internals.handleFinalizer_info, @object
GHC.IO.Handle.Internals.handleFinalizer_info:
	.quad	GHC.IO.Handle.Internals.handleFinalizer_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	Sa8nI_srt+352


==================== Asm code ====================
2018-03-16 16:05:08.182470875 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle4_closure
.type GHC.IO.Handle.Internals.mkDuplexHandle4_closure, @object
GHC.IO.Handle.Internals.mkDuplexHandle4_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.IO.Handle.Internals.handleFinalizer1_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.188087303 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkFileHandle1_closure
.type GHC.IO.Handle.Internals.mkFileHandle1_closure, @object
GHC.IO.Handle.Internals.mkFileHandle1_closure:
	.quad	GHC.IO.Handle.Internals.mkFileHandle1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.188778963 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkFileHandle1_slow
.type GHC.IO.Handle.Internals.mkFileHandle1_slow, @object
GHC.IO.Handle.Internals.mkFileHandle1_slow:
_cac3M:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.mkFileHandle1_entry
	.size GHC.IO.Handle.Internals.mkFileHandle1_slow, .-GHC.IO.Handle.Internals.mkFileHandle1_slow


==================== Asm code ====================
2018-03-16 16:05:08.189595968 UTC

.section .text
.align 8
sat_sa8cK_entry:
_cac43:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cac44
_cac45:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cac3U_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cac3U
_cac3V:
	movq (%rbx),%rax
	jmp *(%rax)
_cac44:
	jmp *-16(%r13)
	.size sat_sa8cK_entry, .-sat_sa8cK_entry


==================== Asm code ====================
2018-03-16 16:05:08.190255091 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8cK_info:
	.quad	sat_sa8cK_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:08.191072608 UTC

.section .text
.align 8
_cac3U:
_cac3U:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _uac4i
_uac4j:
	cmpq $4,%rbx
	jb _cac40
_cac41:
	movl $GHC.IO.Handle.Types.ReadWriteHandle_closure+6,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cac40:
	movl $GHC.IO.Handle.Types.AppendHandle_closure+5,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_uac4i:
	cmpq $2,%rbx
	jb _cac3Y
_cac3Z:
	movl $GHC.IO.Handle.Types.WriteHandle_closure+4,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cac3Y:
	movl $GHC.IO.Handle.Types.ReadHandle_closure+3,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cac3U, .-_cac3U


==================== Asm code ====================
2018-03-16 16:05:08.191737968 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac3U_info:
	.quad	_cac3U
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.192600474 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkFileHandle1_entry
.type GHC.IO.Handle.Internals.mkFileHandle1_entry, @object
GHC.IO.Handle.Internals.mkFileHandle1_entry:
_cac4l:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cac4m
_cac4n:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cac4p
_cac4o:
	movq $sat_sa8cK_info,-16(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	movq $GHC.Types.True_closure+2,-16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,(%rbp)
	movq $GHC.IO.Handle.Internals.mkDuplexHandle4_closure+2,8(%rbp)
	movq $GHC.Base.Nothing_closure+1,16(%rbp)
	addq $-24,%rbp
	jmp GHC.IO.Handle.Internals.mkDuplexHandle5_entry
_cac4p:
	movq $24,904(%r13)
_cac4m:
	movl $GHC.IO.Handle.Internals.mkFileHandle1_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.mkFileHandle1_entry, .-GHC.IO.Handle.Internals.mkFileHandle1_entry


==================== Asm code ====================
2018-03-16 16:05:08.193393013 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkFileHandle1_info
.type GHC.IO.Handle.Internals.mkFileHandle1_info, @object
GHC.IO.Handle.Internals.mkFileHandle1_info:
	.quad	GHC.IO.Handle.Internals.mkFileHandle1_entry
	.quad	0
	.quad	1688854155231246
	.quad	38654705664
	.quad	Sa8nI_srt+224
	.quad	8
	.quad	GHC.IO.Handle.Internals.mkFileHandle1_slow


==================== Asm code ====================
2018-03-16 16:05:08.19615569 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkFileHandle_closure
.type GHC.IO.Handle.Internals.mkFileHandle_closure, @object
GHC.IO.Handle.Internals.mkFileHandle_closure:
	.quad	GHC.IO.Handle.Internals.mkFileHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.196827649 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkFileHandle_slow
.type GHC.IO.Handle.Internals.mkFileHandle_slow, @object
GHC.IO.Handle.Internals.mkFileHandle_slow:
_cac4P:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.mkFileHandle_entry
	.size GHC.IO.Handle.Internals.mkFileHandle_slow, .-GHC.IO.Handle.Internals.mkFileHandle_slow


==================== Asm code ====================
2018-03-16 16:05:08.198430036 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkFileHandle_entry
.type GHC.IO.Handle.Internals.mkFileHandle_entry, @object
GHC.IO.Handle.Internals.mkFileHandle_entry:
_cac4T:
	jmp GHC.IO.Handle.Internals.mkFileHandle1_entry
	.size GHC.IO.Handle.Internals.mkFileHandle_entry, .-GHC.IO.Handle.Internals.mkFileHandle_entry


==================== Asm code ====================
2018-03-16 16:05:08.199080712 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkFileHandle_info
.type GHC.IO.Handle.Internals.mkFileHandle_info, @object
GHC.IO.Handle.Internals.mkFileHandle_info:
	.quad	GHC.IO.Handle.Internals.mkFileHandle_entry
	.quad	0
	.quad	4294967310
	.quad	38654705664
	.quad	Sa8nI_srt+368
	.quad	8
	.quad	GHC.IO.Handle.Internals.mkFileHandle_slow


==================== Asm code ====================
2018-03-16 16:05:08.200757861 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl23_ra7PD_bytes:
	.asciz "Pattern match failure in do expression at GHC/IO/Handle/Internals.hs:686:3-33"


==================== Asm code ====================
2018-03-16 16:05:08.203261292 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle3_closure
.type GHC.IO.Handle.Internals.mkDuplexHandle3_closure, @object
GHC.IO.Handle.Internals.mkDuplexHandle3_closure:
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle3_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.203964955 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkDuplexHandle3_entry
.type GHC.IO.Handle.Internals.mkDuplexHandle3_entry, @object
GHC.IO.Handle.Internals.mkDuplexHandle3_entry:
_cac59:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cac5a
_cac5b:
	movq $block_cac57_info,-8(%rbp)
	movl $lvl23_ra7PD_bytes,%r14d
	addq $-8,%rbp
	jmp GHC.CString.unpackCString#_entry
_cac5a:
	movl $GHC.IO.Handle.Internals.mkDuplexHandle3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.mkDuplexHandle3_entry, .-GHC.IO.Handle.Internals.mkDuplexHandle3_entry


==================== Asm code ====================
2018-03-16 16:05:08.204598997 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle3_info
.type GHC.IO.Handle.Internals.mkDuplexHandle3_info, @object
GHC.IO.Handle.Internals.mkDuplexHandle3_info:
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle3_entry
	.quad	0
	.quad	12884901902
	.quad	4294967299
	.quad	Sa8nI_srt+376


==================== Asm code ====================
2018-03-16 16:05:08.205227261 UTC

.section .text
.align 8
_cac57:
_cac57:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.IO.failIO1_entry
	.size _cac57, .-_cac57


==================== Asm code ====================
2018-03-16 16:05:08.205854386 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac57_info:
	.quad	_cac57
	.quad	0
	.quad	4294967326
	.quad	Sa8nI_srt+376


==================== Asm code ====================
2018-03-16 16:05:08.207526893 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl24_ra7PE_bytes:
	.asciz "Pattern match failure in do expression at GHC/IO/Handle/Internals.hs:680:3-35"


==================== Asm code ====================
2018-03-16 16:05:08.210294804 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle2_closure
.type GHC.IO.Handle.Internals.mkDuplexHandle2_closure, @object
GHC.IO.Handle.Internals.mkDuplexHandle2_closure:
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.211009983 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkDuplexHandle2_entry
.type GHC.IO.Handle.Internals.mkDuplexHandle2_entry, @object
GHC.IO.Handle.Internals.mkDuplexHandle2_entry:
_cac5u:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cac5v
_cac5w:
	movq $block_cac5s_info,-8(%rbp)
	movl $lvl24_ra7PE_bytes,%r14d
	addq $-8,%rbp
	jmp GHC.CString.unpackCString#_entry
_cac5v:
	movl $GHC.IO.Handle.Internals.mkDuplexHandle2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.mkDuplexHandle2_entry, .-GHC.IO.Handle.Internals.mkDuplexHandle2_entry


==================== Asm code ====================
2018-03-16 16:05:08.211656222 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle2_info
.type GHC.IO.Handle.Internals.mkDuplexHandle2_info, @object
GHC.IO.Handle.Internals.mkDuplexHandle2_info:
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle2_entry
	.quad	0
	.quad	21474836494
	.quad	4294967299
	.quad	Sa8nI_srt+376


==================== Asm code ====================
2018-03-16 16:05:08.212283592 UTC

.section .text
.align 8
_cac5s:
_cac5s:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.IO.failIO1_entry
	.size _cac5s, .-_cac5s


==================== Asm code ====================
2018-03-16 16:05:08.212834755 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac5s_info:
	.quad	_cac5s
	.quad	0
	.quad	4294967326
	.quad	Sa8nI_srt+376


==================== Asm code ====================
2018-03-16 16:05:08.219023955 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle1_closure
.type GHC.IO.Handle.Internals.mkDuplexHandle1_closure, @object
GHC.IO.Handle.Internals.mkDuplexHandle1_closure:
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.219694321 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkDuplexHandle1_slow
.type GHC.IO.Handle.Internals.mkDuplexHandle1_slow, @object
GHC.IO.Handle.Internals.mkDuplexHandle1_slow:
_cac5J:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.mkDuplexHandle1_entry
	.size GHC.IO.Handle.Internals.mkDuplexHandle1_slow, .-GHC.IO.Handle.Internals.mkDuplexHandle1_slow


==================== Asm code ====================
2018-03-16 16:05:08.220590534 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkDuplexHandle1_entry
.type GHC.IO.Handle.Internals.mkDuplexHandle1_entry, @object
GHC.IO.Handle.Internals.mkDuplexHandle1_entry:
_cac5W:
	leaq -96(%rbp),%rax
	cmpq %r15,%rax
	jb _cac5X
_cac5Y:
	movq $block_cac5N_info,-48(%rbp)
	movq %r9,%rax
	movq %r8,%rbx
	movq %rdi,%rcx
	movq %rsi,%rdx
	movq %r14,%r10
	movq $GHC.IO.Handle.Types.WriteHandle_closure+4,-96(%rbp)
	movq $GHC.Types.True_closure+2,-88(%rbp)
	movq (%rbp),%r11
	movq %r11,-80(%rbp)
	movq 8(%rbp),%r11
	movq %r11,-72(%rbp)
	movq $GHC.IO.Handle.Internals.mkDuplexHandle4_closure+2,-64(%rbp)
	movq $GHC.Base.Nothing_closure+1,-56(%rbp)
	movq %r10,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-96,%rbp
	jmp GHC.IO.Handle.Internals.mkDuplexHandle5_entry
_cac5X:
	movl $GHC.IO.Handle.Internals.mkDuplexHandle1_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.mkDuplexHandle1_entry, .-GHC.IO.Handle.Internals.mkDuplexHandle1_entry


==================== Asm code ====================
2018-03-16 16:05:08.221711834 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle1_info
.type GHC.IO.Handle.Internals.mkDuplexHandle1_info, @object
GHC.IO.Handle.Internals.mkDuplexHandle1_info:
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle1_entry
	.quad	0
	.quad	32088151639982094
	.quad	34359738368
	.quad	Sa8nI_srt+224
	.quad	7
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle1_slow


==================== Asm code ====================
2018-03-16 16:05:08.222419369 UTC

.section .text
.align 8
_cac5N:
_cac5N:
	movq $block_cac5P_info,(%rbp)
	testb $7,%bl
	jne _cac5P
_cac5Q:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cac5N, .-_cac5N


==================== Asm code ====================
2018-03-16 16:05:08.223020684 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac5N_info:
	.quad	_cac5N
	.quad	7
	.quad	13510803177078814
	.quad	Sa8nI_srt+224


==================== Asm code ====================
2018-03-16 16:05:08.223846968 UTC

.section .text
.align 8
_cac5P:
_cac5P:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cac5T
_cac5U:
	addq $64,%rbp
	jmp GHC.IO.Handle.Internals.mkDuplexHandle2_entry
_cac69:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_cac5T:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cac69
_cac68:
	movq 15(%rbx),%rax
	movq $GHC.MVar.MVar_con_info,-24(%r12)
	movq %rax,-16(%r12)
	movq $GHC.Base.Just_con_info,-8(%r12)
	leaq -23(%r12),%rbx
	movq %rbx,(%r12)
	movq 32(%rbp),%rbx
	movq $block_cac64_info,32(%rbp)
	movq 40(%rbp),%r9
	movq %rbx,%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq $GHC.IO.Handle.Types.ReadHandle_closure+3,-16(%rbp)
	movq $GHC.Types.True_closure+2,-8(%rbp)
	movq 48(%rbp),%rbx
	movq %rbx,(%rbp)
	movq 56(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq $GHC.Base.Nothing_closure+1,16(%rbp)
	leaq -6(%r12),%rbx
	movq %rbx,24(%rbp)
	movq %rax,56(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.mkDuplexHandle5_entry
	.size _cac5P, .-_cac5P


==================== Asm code ====================
2018-03-16 16:05:08.22464147 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac5P_info:
	.quad	_cac5P
	.quad	7
	.quad	13510803177078814
	.quad	Sa8nI_srt+224


==================== Asm code ====================
2018-03-16 16:05:08.225327762 UTC

.section .text
.align 8
_cac64:
_cac64:
	movq $block_cac66_info,(%rbp)
	testb $7,%bl
	jne _cac66
_cac6b:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cac64, .-_cac64


==================== Asm code ====================
2018-03-16 16:05:08.225953494 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac64_info:
	.quad	_cac64
	.quad	131
	.quad	4294967326
	.quad	Sa8nI_srt+384


==================== Asm code ====================
2018-03-16 16:05:08.226729343 UTC

.section .text
.align 8
_cac66:
_cac66:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cac6h
_cac6o:
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.mkDuplexHandle3_entry
_cac6k:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_cac6h:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cac6k
_cac6j:
	movq 15(%rbx),%rax
	movq $GHC.IO.Handle.Types.DuplexHandle_con_info,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	leaq -22(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cac66, .-_cac66


==================== Asm code ====================
2018-03-16 16:05:08.227439014 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac66_info:
	.quad	_cac66
	.quad	131
	.quad	4294967326
	.quad	Sa8nI_srt+384


==================== Asm code ====================
2018-03-16 16:05:08.230275925 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle_closure
.type GHC.IO.Handle.Internals.mkDuplexHandle_closure, @object
GHC.IO.Handle.Internals.mkDuplexHandle_closure:
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.230922405 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkDuplexHandle_slow
.type GHC.IO.Handle.Internals.mkDuplexHandle_slow, @object
GHC.IO.Handle.Internals.mkDuplexHandle_slow:
_cac74:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.mkDuplexHandle_entry
	.size GHC.IO.Handle.Internals.mkDuplexHandle_slow, .-GHC.IO.Handle.Internals.mkDuplexHandle_slow


==================== Asm code ====================
2018-03-16 16:05:08.231571198 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkDuplexHandle_entry
.type GHC.IO.Handle.Internals.mkDuplexHandle_entry, @object
GHC.IO.Handle.Internals.mkDuplexHandle_entry:
_cac78:
	jmp GHC.IO.Handle.Internals.mkDuplexHandle1_entry
	.size GHC.IO.Handle.Internals.mkDuplexHandle_entry, .-GHC.IO.Handle.Internals.mkDuplexHandle_entry


==================== Asm code ====================
2018-03-16 16:05:08.232137635 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle_info
.type GHC.IO.Handle.Internals.mkDuplexHandle_info, @object
GHC.IO.Handle.Internals.mkDuplexHandle_info:
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle_entry
	.quad	0
	.quad	4294967310
	.quad	34359738368
	.quad	Sa8nI_srt+400
	.quad	7
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle_slow


==================== Asm code ====================
2018-03-16 16:05:08.239145879 UTC

.section .data
.align 8
.align 1
$wlvl_ra7PF_closure:
	.quad	$wlvl_ra7PF_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.239927829 UTC

.section .text
.align 8
sat_sa8dy_entry:
_cac7A:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cac7B
_cac7C:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cac7t_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cac7t
_cac7u:
	movq (%rbx),%rax
	jmp *(%rax)
_cac7B:
	jmp *-16(%r13)
	.size sat_sa8dy_entry, .-sat_sa8dy_entry


==================== Asm code ====================
2018-03-16 16:05:08.240583322 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8dy_info:
	.quad	sat_sa8dy_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:05:08.241380101 UTC

.section .text
.align 8
_cac7t:
_cac7t:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cac7x
_cac7y:
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cac7x:
	movq 8(%rbp),%rax
	movq $block_cac7F_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cac7F
_cac7H:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cac7t, .-_cac7t


==================== Asm code ====================
2018-03-16 16:05:08.24200403 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac7t_info:
	.quad	_cac7t
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.242813612 UTC

.section .text
.align 8
_cac7F:
_cac7F:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cac7N
_cac7U:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cac7X
_cac7W:
	movq 6(%rbx),%rax
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cac7X:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_cac7N:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cac7X
_cac7P:
	movq 7(%rbx),%rax
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cac7F, .-_cac7F


==================== Asm code ====================
2018-03-16 16:05:08.243524913 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac7F_info:
	.quad	_cac7F
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.244372169 UTC

.section .text
.align 8
sat_sa8dA_entry:
_cac86:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cac87
_cac88:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cac8a
_cac89:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	movq $sat_sa8dy_info,-96(%r12)
	movq %rsi,-80(%r12)
	movq %rbx,-72(%r12)
	movq $GHC.Base.Just_con_info,-64(%r12)
	movq %rbx,-56(%r12)
	movq $GHC.IO.Exception.IOError_con_info,-48(%r12)
	leaq -62(%r12),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_cac8a:
	movq $104,904(%r13)
_cac87:
	jmp *-16(%r13)
	.size sat_sa8dA_entry, .-sat_sa8dA_entry


==================== Asm code ====================
2018-03-16 16:05:08.245143293 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8dA_info:
	.quad	sat_sa8dA_entry
	.quad	6
	.quad	4294967311
	.quad	Sa8nI_srt+408


==================== Asm code ====================
2018-03-16 16:05:08.245947607 UTC

.section .text
.align 8
$wlvl_ra7PF_entry:
_cac8b:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cac8f
_cac8e:
	movq $sat_sa8dA_info,-56(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	leaq -56(%r12),%rbx
	addq $8,%rbp
	jmp stg_raiseIO#
_cac8f:
	movq $64,904(%r13)
	movl $$wlvl_ra7PF_closure,%ebx
	jmp *-8(%r13)
	.size $wlvl_ra7PF_entry, .-$wlvl_ra7PF_entry


==================== Asm code ====================
2018-03-16 16:05:08.246643428 UTC

.section .data.rel.ro
.align 8
.align 1
$wlvl_ra7PF_info:
	.quad	$wlvl_ra7PF_entry
	.quad	0
	.quad	12884901902
	.quad	30064771098
	.quad	Sa8nI_srt+408


==================== Asm code ====================
2018-03-16 16:05:08.254806306 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wdo_operation_closure
.type GHC.IO.Handle.Internals.$wdo_operation_closure, @object
GHC.IO.Handle.Internals.$wdo_operation_closure:
	.quad	GHC.IO.Handle.Internals.$wdo_operation_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.255597615 UTC

.section .text
.align 8
sat_sa8e5_entry:
_cac93:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cac97
_cac98:
	movq $block_cac8Y_info,-48(%rbp)
	movq %r14,%rax
	movq 38(%rbx),%r14
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rdx
	movq 22(%rbx),%rsi
	movq 30(%rbx),%rbx
	movq %rbx,%rdi
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-48,%rbp
	jmp stg_putMVar#
_cac97:
	jmp *-8(%r13)
	.size sat_sa8e5_entry, .-sat_sa8e5_entry


==================== Asm code ====================
2018-03-16 16:05:08.256280723 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8e5_info:
	.quad	sat_sa8e5_entry
	.quad	5
	.quad	133143986184
	.quad	8589934597
	.quad	Sa8nI_srt+416


==================== Asm code ====================
2018-03-16 16:05:08.256986316 UTC

.section .text
.align 8
_cac8Y:
_cac8Y:
	movq $block_cac90_info,(%rbp)
	movq 40(%rbp),%rbx
	testb $7,%bl
	jne _cac90
_cac91:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cac8Y, .-_cac8Y


==================== Asm code ====================
2018-03-16 16:05:08.257595802 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac8Y_info:
	.quad	_cac8Y
	.quad	5
	.quad	133143986206
	.quad	Sa8nI_srt+416


==================== Asm code ====================
2018-03-16 16:05:08.258263153 UTC

.section .text
.align 8
_cac90:
_cac90:
	movq $block_cac96_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%r14
	movq 15(%rbx),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rbx,40(%rbp)
	addq $-16,%rbp
	jmp GHC.Exception.$p1Exception_entry
	.size _cac90, .-_cac90


==================== Asm code ====================
2018-03-16 16:05:08.258898465 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac90_info:
	.quad	_cac90
	.quad	1029
	.quad	133143986206
	.quad	Sa8nI_srt+416


==================== Asm code ====================
2018-03-16 16:05:08.259499521 UTC

.section .text
.align 8
_cac96:
_cac96:
	movq $block_cac9e_info,(%rbp)
	movl $GHC.IO.Exception.$fExceptionIOException4_closure,%esi
	movq %rbx,%r14
	jmp Data.Typeable.Internal.sameTypeRep_entry
	.size _cac96, .-_cac96


==================== Asm code ====================
2018-03-16 16:05:08.260104989 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac96_info:
	.quad	_cac96
	.quad	7
	.quad	133143986206
	.quad	Sa8nI_srt+416


==================== Asm code ====================
2018-03-16 16:05:08.260809771 UTC

.section .text
.align 8
_cac9e:
_cac9e:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cac9m
_cac9J:
	movq $block_cac9H_info,16(%rbp)
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_0_fast
_cac9m:
	movq 16(%rbp),%rax
	movq $block_cac9j_info,16(%rbp)
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Exception.$p1Exception_entry
	.size _cac9e, .-_cac9e


==================== Asm code ====================
2018-03-16 16:05:08.261703749 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac9e_info:
	.quad	_cac9e
	.quad	7
	.quad	98784247838
	.quad	Sa8nI_srt+416


==================== Asm code ====================
2018-03-16 16:05:08.262361188 UTC

.section .text
.align 8
_cac9j:
_cac9j:
	movq $block_cac9q_info,(%rbp)
	movl $GHC.IO.Exception.$fExceptionAllocationLimitExceeded6_closure,%esi
	movq %rbx,%r14
	jmp Data.Typeable.Internal.sameTypeRep_entry
	.size _cac9j, .-_cac9j


==================== Asm code ====================
2018-03-16 16:05:08.262949113 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac9j_info:
	.quad	_cac9j
	.quad	5
	.quad	47244640286
	.quad	Sa8nI_srt+424


==================== Asm code ====================
2018-03-16 16:05:08.263685987 UTC

.section .text
.align 8
_cac9q:
_cac9q:
	movq 40(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cac9x
_cac9C:
	movq $block_cac9A_info,(%rbp)
	movq %rax,%r14
	movq 872(%r13),%rbx
	jmp stg_killThread#
_cac9x:
	movq %rax,%rbx
	addq $48,%rbp
	jmp stg_raiseIO#
	.size _cac9q, .-_cac9q


==================== Asm code ====================
2018-03-16 16:05:08.264345445 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac9q_info:
	.quad	_cac9q
	.quad	5
	.quad	4294967326
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.265006617 UTC

.section .text
.align 8
_cac9A:
_cac9A:
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $48,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
	.size _cac9A, .-_cac9A


==================== Asm code ====================
2018-03-16 16:05:08.265667819 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac9A_info:
	.quad	_cac9A
	.quad	1029
	.quad	4294967326
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.266373112 UTC

.section .text
.align 8
_cac9H:
_cac9H:
	movq 8(%rbp),%r9
	movq 47(%rbx),%r8
	movq 39(%rbx),%rdi
	movq 31(%rbx),%rsi
	movq 15(%rbx),%r14
	movq 16(%rbp),%rax
	movq %rax,40(%rbp)
	addq $40,%rbp
	jmp $wlvl_ra7PF_entry
	.size _cac9H, .-_cac9H


==================== Asm code ====================
2018-03-16 16:05:08.266935392 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac9H_info:
	.quad	_cac9H
	.quad	1797
	.quad	4294967326
	.quad	Sa8nI_srt+416


==================== Asm code ====================
2018-03-16 16:05:08.267649594 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.$wdo_operation_entry
.type GHC.IO.Handle.Internals.$wdo_operation_entry, @object
GHC.IO.Handle.Internals.$wdo_operation_entry:
_cac9R:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cac9S
_cac9T:
	movq $block_cac8P_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp stg_takeMVar#
_cac9S:
	movl $GHC.IO.Handle.Internals.$wdo_operation_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.$wdo_operation_entry, .-GHC.IO.Handle.Internals.$wdo_operation_entry


==================== Asm code ====================
2018-03-16 16:05:08.2683186 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wdo_operation_info
.type GHC.IO.Handle.Internals.$wdo_operation_info, @object
GHC.IO.Handle.Internals.$wdo_operation_info:
	.quad	GHC.IO.Handle.Internals.$wdo_operation_entry
	.quad	0
	.quad	133143986190
	.quad	21474836504
	.quad	Sa8nI_srt+416


==================== Asm code ====================
2018-03-16 16:05:08.268973512 UTC

.section .text
.align 8
_cac8P:
_cac8P:
	movq $block_cac8R_info,-8(%rbp)
	movq %rbx,%r14
	movq %rbx,%rax
	movq 24(%rbp),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_ap_p_fast
	.size _cac8P, .-_cac8P


==================== Asm code ====================
2018-03-16 16:05:08.269600125 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac8P_info:
	.quad	_cac8P
	.quad	4
	.quad	133143986206
	.quad	Sa8nI_srt+416


==================== Asm code ====================
2018-03-16 16:05:08.270317972 UTC

.section .text
.align 8
_cac8R:
_cac8R:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cac9X
_cac9W:
	movq $sat_sa8e5_info,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -38(%r12),%r14
	addq $48,%rbp
	jmp stg_catch#
_cac9X:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cac8R, .-_cac8R


==================== Asm code ====================
2018-03-16 16:05:08.270974424 UTC

.section .data.rel.ro
.align 8
.align 1
block_cac8R_info:
	.quad	_cac8R
	.quad	5
	.quad	133143986206
	.quad	Sa8nI_srt+416


==================== Asm code ====================
2018-03-16 16:05:08.274412444 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle_1_closure
.type GHC.IO.Handle.Internals.withHandle_1_closure, @object
GHC.IO.Handle.Internals.withHandle_1_closure:
	.quad	GHC.IO.Handle.Internals.withHandle_1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.275193922 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withHandle_1_entry
.type GHC.IO.Handle.Internals.withHandle_1_entry, @object
GHC.IO.Handle.Internals.withHandle_1_entry:
_cacaU:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cacaV
_cacaW:
	movq $block_cacaR_info,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cacaR
_cacaS:
	movq (%rbx),%rax
	jmp *(%rax)
_cacaV:
	movl $GHC.IO.Handle.Internals.withHandle_1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.withHandle_1_entry, .-GHC.IO.Handle.Internals.withHandle_1_entry


==================== Asm code ====================
2018-03-16 16:05:08.276426323 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle_1_info
.type GHC.IO.Handle.Internals.withHandle_1_info, @object
GHC.IO.Handle.Internals.withHandle_1_info:
	.quad	GHC.IO.Handle.Internals.withHandle_1_entry
	.quad	0
	.quad	12884901902
	.quad	21474836504
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.277138945 UTC

.section .text
.align 8
_cacaR:
_cacaR:
	movq 7(%rbx),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
	.size _cacaR, .-_cacaR


==================== Asm code ====================
2018-03-16 16:05:08.277779097 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacaR_info:
	.quad	_cacaR
	.quad	3
	.quad	4294967326
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.283003315 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wwithHandle__'_closure
.type GHC.IO.Handle.Internals.$wwithHandle__'_closure, @object
GHC.IO.Handle.Internals.$wwithHandle__'_closure:
	.quad	GHC.IO.Handle.Internals.$wwithHandle__'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.283738552 UTC

.section .text
.align 8
sat_sa8ev_entry:
_cacbs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cacbt
_cacbu:
	movq $block_cacbo_info,-16(%rbp)
	movq 23(%rbx),%rax
	movq %rax,%r8
	movq 31(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cacbt:
	jmp *-8(%r13)
	.size sat_sa8ev_entry, .-sat_sa8ev_entry


==================== Asm code ====================
2018-03-16 16:05:08.284359616 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8ev_info:
	.quad	sat_sa8ev_entry
	.quad	4
	.quad	4294967304
	.quad	4294967299
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.284973423 UTC

.section .text
.align 8
_cacbo:
_cacbo:
	movq 8(%rbp),%rax
	movq $block_cacbq_info,8(%rbp)
	movq %rbx,%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp stg_putMVar#
	.size _cacbo, .-_cacbo


==================== Asm code ====================
2018-03-16 16:05:08.285941217 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacbo_info:
	.quad	_cacbo
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.286559302 UTC

.section .text
.align 8
_cacbq:
_cacbq:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cacbq, .-_cacbq


==================== Asm code ====================
2018-03-16 16:05:08.287127981 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacbq_info:
	.quad	_cacbq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.287839114 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.$wwithHandle__'_entry
.type GHC.IO.Handle.Internals.$wwithHandle__'_entry, @object
GHC.IO.Handle.Internals.$wwithHandle__'_entry:
_cacbA:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cacbB
_cacbC:
	movq $block_cacbe_info,-40(%rbp)
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp stg_getMaskingState#
_cacbB:
	movl $GHC.IO.Handle.Internals.$wwithHandle__'_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.$wwithHandle__'_entry, .-GHC.IO.Handle.Internals.$wwithHandle__'_entry


==================== Asm code ====================
2018-03-16 16:05:08.288490984 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wwithHandle__'_info
.type GHC.IO.Handle.Internals.$wwithHandle__'_info, @object
GHC.IO.Handle.Internals.$wwithHandle__'_info:
	.quad	GHC.IO.Handle.Internals.$wwithHandle__'_entry
	.quad	0
	.quad	21474836494
	.quad	21474836504
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.289335852 UTC

.section .text
.align 8
_cacbe:
_cacbe:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cacbF
_cacbE:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	testq %rbx,%rbx
	je _cacbz
_cacby:
	addq $-40,%r12
	movq $block_cacbG_info,16(%rbp)
	movq %rdx,%r8
	movq %rsi,%rdi
	movq %rcx,%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cacbF:
	movq $40,904(%r13)
	jmp stg_gc_unbx_r1
_cacbz:
	movq $sat_sa8ev_info,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rsi,(%r12)
	leaq -31(%r12),%rbx
	addq $40,%rbp
	jmp stg_maskAsyncExceptions#
	.size _cacbe, .-_cacbe


==================== Asm code ====================
2018-03-16 16:05:08.290046672 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacbe_info:
	.quad	_cacbe
	.quad	4
	.quad	4294967326
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.290691828 UTC

.section .text
.align 8
_cacbG:
_cacbG:
	movq $block_cacbI_info,16(%rbp)
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_putMVar#
	.size _cacbG, .-_cacbG


==================== Asm code ====================
2018-03-16 16:05:08.291260535 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacbG_info:
	.quad	_cacbG
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.291873909 UTC

.section .text
.align 8
_cacbI:
_cacbI:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cacbI, .-_cacbI


==================== Asm code ====================
2018-03-16 16:05:08.292452274 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacbI_info:
	.quad	_cacbI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.295560522 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle__'1_closure
.type GHC.IO.Handle.Internals.withHandle__'1_closure, @object
GHC.IO.Handle.Internals.withHandle__'1_closure:
	.quad	GHC.IO.Handle.Internals.withHandle__'1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.296340271 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withHandle__'1_entry
.type GHC.IO.Handle.Internals.withHandle__'1_entry, @object
GHC.IO.Handle.Internals.withHandle__'1_entry:
_caccj:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cacck
_caccl:
	movq $block_caccg_info,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _caccg
_cacch:
	movq (%rbx),%rax
	jmp *(%rax)
_cacck:
	movl $GHC.IO.Handle.Internals.withHandle__'1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.withHandle__'1_entry, .-GHC.IO.Handle.Internals.withHandle__'1_entry


==================== Asm code ====================
2018-03-16 16:05:08.297030856 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle__'1_info
.type GHC.IO.Handle.Internals.withHandle__'1_info, @object
GHC.IO.Handle.Internals.withHandle__'1_info:
	.quad	GHC.IO.Handle.Internals.withHandle__'1_entry
	.quad	0
	.quad	12884901902
	.quad	21474836504
	.quad	Sa8nI_srt+464


==================== Asm code ====================
2018-03-16 16:05:08.297939053 UTC

.section .text
.align 8
_caccg:
_caccg:
	movq 24(%rbp),%r8
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.$wwithHandle__'_entry
	.size _caccg, .-_caccg


==================== Asm code ====================
2018-03-16 16:05:08.298523767 UTC

.section .data.rel.ro
.align 8
.align 1
block_caccg_info:
	.quad	_caccg
	.quad	3
	.quad	4294967326
	.quad	Sa8nI_srt+464


==================== Asm code ====================
2018-03-16 16:05:08.300682177 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle__'_closure
.type GHC.IO.Handle.Internals.withHandle__'_closure, @object
GHC.IO.Handle.Internals.withHandle__'_closure:
	.quad	GHC.IO.Handle.Internals.withHandle__'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.301347673 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withHandle__'_entry
.type GHC.IO.Handle.Internals.withHandle__'_entry, @object
GHC.IO.Handle.Internals.withHandle__'_entry:
_caccD:
	jmp GHC.IO.Handle.Internals.withHandle__'1_entry
	.size GHC.IO.Handle.Internals.withHandle__'_entry, .-GHC.IO.Handle.Internals.withHandle__'_entry


==================== Asm code ====================
2018-03-16 16:05:08.301937824 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle__'_info
.type GHC.IO.Handle.Internals.withHandle__'_info, @object
GHC.IO.Handle.Internals.withHandle__'_info:
	.quad	GHC.IO.Handle.Internals.withHandle__'_entry
	.quad	0
	.quad	4294967310
	.quad	21474836504
	.quad	Sa8nI_srt+472


==================== Asm code ====================
2018-03-16 16:05:08.31366077 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withAllHandles__1_closure
.type GHC.IO.Handle.Internals.withAllHandles__1_closure, @object
GHC.IO.Handle.Internals.withAllHandles__1_closure:
	.quad	GHC.IO.Handle.Internals.withAllHandles__1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.314533412 UTC

.section .text
.align 8
sat_sa8eX_entry:
_cacd7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cacd8
_cacd9:
	movq $block_cacd3_info,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 7(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cacd8:
	jmp *-8(%r13)
	.size sat_sa8eX_entry, .-sat_sa8eX_entry


==================== Asm code ====================
2018-03-16 16:05:08.315181646 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8eX_info:
	.quad	sat_sa8eX_entry
	.quad	4
	.quad	4294967304
	.quad	4294967299
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.315837824 UTC

.section .text
.align 8
_cacd3:
_cacd3:
	movq 8(%rbp),%rax
	movq $block_cacd5_info,8(%rbp)
	movq %rbx,%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp stg_putMVar#
	.size _cacd3, .-_cacd3


==================== Asm code ====================
2018-03-16 16:05:08.316394164 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacd3_info:
	.quad	_cacd3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.316973871 UTC

.section .text
.align 8
_cacd5:
_cacd5:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cacd5, .-_cacd5


==================== Asm code ====================
2018-03-16 16:05:08.317726712 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacd5_info:
	.quad	_cacd5
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.318421807 UTC

.section .text
.align 8
sat_sa8fj_entry:
_cacdz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cacdA
_cacdB:
	movq $block_cacdv_info,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 7(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cacdA:
	jmp *-8(%r13)
	.size sat_sa8fj_entry, .-sat_sa8fj_entry


==================== Asm code ====================
2018-03-16 16:05:08.319689888 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8fj_info:
	.quad	sat_sa8fj_entry
	.quad	4
	.quad	4294967304
	.quad	4294967299
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.320408362 UTC

.section .text
.align 8
_cacdv:
_cacdv:
	movq 8(%rbp),%rax
	movq $block_cacdx_info,8(%rbp)
	movq %rbx,%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp stg_putMVar#
	.size _cacdv, .-_cacdv


==================== Asm code ====================
2018-03-16 16:05:08.320994666 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacdv_info:
	.quad	_cacdv
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.321646944 UTC

.section .text
.align 8
_cacdx:
_cacdx:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cacdx, .-_cacdx


==================== Asm code ====================
2018-03-16 16:05:08.322224431 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacdx_info:
	.quad	_cacdx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.322970058 UTC

.section .text
.align 8
sat_sa8fu_entry:
_cacdQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cacdR
_cacdS:
	movq $block_cacdM_info,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 7(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cacdR:
	jmp *-8(%r13)
	.size sat_sa8fu_entry, .-sat_sa8fu_entry


==================== Asm code ====================
2018-03-16 16:05:08.323643185 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8fu_info:
	.quad	sat_sa8fu_entry
	.quad	4
	.quad	4294967304
	.quad	4294967299
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.324271635 UTC

.section .text
.align 8
_cacdM:
_cacdM:
	movq 8(%rbp),%rax
	movq $block_cacdO_info,8(%rbp)
	movq %rbx,%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp stg_putMVar#
	.size _cacdM, .-_cacdM


==================== Asm code ====================
2018-03-16 16:05:08.324836356 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacdM_info:
	.quad	_cacdM
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.325461029 UTC

.section .text
.align 8
_cacdO:
_cacdO:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cacdO, .-_cacdO


==================== Asm code ====================
2018-03-16 16:05:08.326054795 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacdO_info:
	.quad	_cacdO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.326755647 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withAllHandles__1_entry
.type GHC.IO.Handle.Internals.withAllHandles__1_entry, @object
GHC.IO.Handle.Internals.withAllHandles__1_entry:
_cacdZ:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cace0
_cace1:
	movq $block_caccO_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _caccO
_caccP:
	movq (%rbx),%rax
	jmp *(%rax)
_cace0:
	movl $GHC.IO.Handle.Internals.withAllHandles__1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.withAllHandles__1_entry, .-GHC.IO.Handle.Internals.withAllHandles__1_entry


==================== Asm code ====================
2018-03-16 16:05:08.327433439 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withAllHandles__1_info
.type GHC.IO.Handle.Internals.withAllHandles__1_info, @object
GHC.IO.Handle.Internals.withAllHandles__1_info:
	.quad	GHC.IO.Handle.Internals.withAllHandles__1_entry
	.quad	0
	.quad	73014444046
	.quad	17179869207
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.328141784 UTC

.section .text
.align 8
_caccO:
_caccO:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cacdW
_cacdX:
	movq $block_cacde_info,-24(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 22(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-24,%rbp
	jmp stg_getMaskingState#
_cacdW:
	movq $block_caccT_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
	.size _caccO, .-_caccO


==================== Asm code ====================
2018-03-16 16:05:08.328776889 UTC

.section .data.rel.ro
.align 8
.align 1
block_caccO_info:
	.quad	_caccO
	.quad	2
	.quad	4294967326
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.329736776 UTC

.section .text
.align 8
_caccT:
_caccT:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cace5
_cace4:
	movq 24(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq 8(%rbp),%rsi
	testq %rbx,%rbx
	je _cacee
_cacea:
	addq $-40,%r12
	movq $block_cace6_info,(%rbp)
	movq %rsi,%r8
	movq %rcx,%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cacee:
	movq $sat_sa8eX_info,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rsi,(%r12)
	leaq -31(%r12),%rbx
	addq $40,%rbp
	jmp stg_maskAsyncExceptions#
_cace5:
	movq $40,904(%r13)
	jmp stg_gc_unbx_r1
	.size _caccT, .-_caccT


==================== Asm code ====================
2018-03-16 16:05:08.330440546 UTC

.section .data.rel.ro
.align 8
.align 1
block_caccT_info:
	.quad	_caccT
	.quad	4
	.quad	4294967326
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.331051513 UTC

.section .text
.align 8
_cace6:
_cace6:
	movq $block_cacep_info,32(%rbp)
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $32,%rbp
	jmp stg_putMVar#
	.size _cace6, .-_cace6


==================== Asm code ====================
2018-03-16 16:05:08.331640416 UTC

.section .data.rel.ro
.align 8
.align 1
block_cace6_info:
	.quad	_cace6
	.quad	900
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.332405293 UTC

.section .text
.align 8
_cacde:
_cacde:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cacei
_caceh:
	movq 32(%rbp),%rax
	movq 40(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 8(%rbp),%rsi
	testq %rbx,%rbx
	je _caceF
_caceA:
	addq $-40,%r12
	movq $block_cacew_info,(%rbp)
	movq %rsi,%r8
	movq %rcx,%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_caceF:
	movq $sat_sa8fu_info,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rsi,(%r12)
	movq $block_caceE_info,8(%rbp)
	leaq -31(%r12),%rbx
	addq $8,%rbp
	jmp stg_maskAsyncExceptions#
_cacei:
	movq $40,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cacde, .-_cacde


==================== Asm code ====================
2018-03-16 16:05:08.333106466 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacde_info:
	.quad	_cacde
	.quad	5
	.quad	4294967326
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.333697749 UTC

.section .text
.align 8
_caceE:
_caceE:
	jmp _sa8f4
	.size _caceE, .-_caceE


==================== Asm code ====================
2018-03-16 16:05:08.334232454 UTC

.section .data.rel.ro
.align 8
.align 1
block_caceE_info:
	.quad	_caceE
	.quad	4
	.quad	4294967326
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.334862237 UTC

.section .text
.align 8
_cacew:
_cacew:
	movq 8(%rbp),%rax
	movq $block_sa8f4_info,8(%rbp)
	movq %rbx,%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp stg_putMVar#
	.size _cacew, .-_cacew


==================== Asm code ====================
2018-03-16 16:05:08.335451478 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacew_info:
	.quad	_cacew
	.quad	5
	.quad	4294967326
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.336056717 UTC

.section .text
.align 8
_sa8f4:
_sa8f4:
	movq $block_cacdl_info,(%rbp)
	jmp stg_getMaskingState#
	.size _sa8f4, .-_sa8f4


==================== Asm code ====================
2018-03-16 16:05:08.336659567 UTC

.section .data.rel.ro
.align 8
.align 1
block_sa8f4_info:
	.quad	_sa8f4
	.quad	4
	.quad	4294967326
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.337500604 UTC

.section .text
.align 8
_cacdl:
_cacdl:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cacem
_cacel:
	movq 24(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq 8(%rbp),%rsi
	testq %rbx,%rbx
	je _cacev
_cacer:
	addq $-40,%r12
	movq $block_cacen_info,(%rbp)
	movq %rsi,%r8
	movq %rcx,%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cacev:
	movq $sat_sa8fj_info,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rsi,(%r12)
	leaq -31(%r12),%rbx
	addq $40,%rbp
	jmp stg_maskAsyncExceptions#
_cacem:
	movq $40,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cacdl, .-_cacdl


==================== Asm code ====================
2018-03-16 16:05:08.338183045 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacdl_info:
	.quad	_cacdl
	.quad	4
	.quad	4294967326
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.338833713 UTC

.section .text
.align 8
_cacen:
_cacen:
	movq $block_cacep_info,32(%rbp)
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $32,%rbp
	jmp stg_putMVar#
	.size _cacen, .-_cacen


==================== Asm code ====================
2018-03-16 16:05:08.339423452 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacen_info:
	.quad	_cacen
	.quad	900
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.340045635 UTC

.section .text
.align 8
_cacep:
_cacep:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cacep, .-_cacep


==================== Asm code ====================
2018-03-16 16:05:08.340633667 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacep_info:
	.quad	_cacep
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.343368131 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withAllHandles___closure
.type GHC.IO.Handle.Internals.withAllHandles___closure, @object
GHC.IO.Handle.Internals.withAllHandles___closure:
	.quad	GHC.IO.Handle.Internals.withAllHandles___info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.34400404 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withAllHandles___entry
.type GHC.IO.Handle.Internals.withAllHandles___entry, @object
GHC.IO.Handle.Internals.withAllHandles___entry:
_cacg1:
	jmp GHC.IO.Handle.Internals.withAllHandles__1_entry
	.size GHC.IO.Handle.Internals.withAllHandles___entry, .-GHC.IO.Handle.Internals.withAllHandles___entry


==================== Asm code ====================
2018-03-16 16:05:08.344556707 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withAllHandles___info
.type GHC.IO.Handle.Internals.withAllHandles___info, @object
GHC.IO.Handle.Internals.withAllHandles___info:
	.quad	GHC.IO.Handle.Internals.withAllHandles___entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	Sa8nI_srt+480


==================== Asm code ====================
2018-03-16 16:05:08.349628778 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wwithHandle'_closure
.type GHC.IO.Handle.Internals.$wwithHandle'_closure, @object
GHC.IO.Handle.Internals.$wwithHandle'_closure:
	.quad	GHC.IO.Handle.Internals.$wwithHandle'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.350410632 UTC

.section .text
.align 8
io_sa8fG_entry:
_cacgo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cacgs
_cacgt:
	movq $block_cacgj_info,-16(%rbp)
	movq 23(%rbx),%rax
	movq %rax,%r8
	movq 31(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cacgs:
	jmp *-8(%r13)
	.size io_sa8fG_entry, .-io_sa8fG_entry


==================== Asm code ====================
2018-03-16 16:05:08.351045628 UTC

.section .data.rel.ro
.align 8
.align 1
io_sa8fG_info:
	.quad	io_sa8fG_entry
	.quad	4
	.quad	4294967304
	.quad	4294967299
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.352264736 UTC

.section .text
.align 8
_cacgj:
_cacgj:
	movq $block_cacgl_info,(%rbp)
	testb $7,%bl
	jne _cacgl
_cacgm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cacgj, .-_cacgj


==================== Asm code ====================
2018-03-16 16:05:08.352900869 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacgj_info:
	.quad	_cacgj
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.354004231 UTC

.section .text
.align 8
_cacgl:
_cacgl:
	movq $block_cacgr_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cacgl, .-_cacgl


==================== Asm code ====================
2018-03-16 16:05:08.354603583 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacgl_info:
	.quad	_cacgl
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.355230734 UTC

.section .text
.align 8
_cacgr:
_cacgr:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cacgr, .-_cacgr


==================== Asm code ====================
2018-03-16 16:05:08.355794329 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacgr_info:
	.quad	_cacgr
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.356534576 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.$wwithHandle'_entry
.type GHC.IO.Handle.Internals.$wwithHandle'_entry, @object
GHC.IO.Handle.Internals.$wwithHandle'_entry:
_cacgD:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cacgE
_cacgF:
	movq $block_cacgc_info,-40(%rbp)
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp stg_getMaskingState#
_cacgE:
	movl $GHC.IO.Handle.Internals.$wwithHandle'_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.$wwithHandle'_entry, .-GHC.IO.Handle.Internals.$wwithHandle'_entry


==================== Asm code ====================
2018-03-16 16:05:08.35717807 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wwithHandle'_info
.type GHC.IO.Handle.Internals.$wwithHandle'_info, @object
GHC.IO.Handle.Internals.$wwithHandle'_info:
	.quad	GHC.IO.Handle.Internals.$wwithHandle'_entry
	.quad	0
	.quad	141733920782
	.quad	21474836504
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.357948077 UTC

.section .text
.align 8
_cacgc:
_cacgc:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cacgI
_cacgH:
	movq $io_sa8fG_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	testq %rbx,%rbx
	je _cacgC
_cacgB:
	movq %rax,%rbx
	addq $40,%rbp
	jmp io_sa8fG_entry
_cacgI:
	movq $40,904(%r13)
	jmp stg_gc_unbx_r1
_cacgC:
	movq %rax,%rbx
	addq $40,%rbp
	jmp stg_maskAsyncExceptions#
	.size _cacgc, .-_cacgc


==================== Asm code ====================
2018-03-16 16:05:08.35867467 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacgc_info:
	.quad	_cacgc
	.quad	4
	.quad	4294967326
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.36185801 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle1_closure
.type GHC.IO.Handle.Internals.withHandle1_closure, @object
GHC.IO.Handle.Internals.withHandle1_closure:
	.quad	GHC.IO.Handle.Internals.withHandle1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.362603837 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withHandle1_entry
.type GHC.IO.Handle.Internals.withHandle1_entry, @object
GHC.IO.Handle.Internals.withHandle1_entry:
_cachh:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cachi
_cachj:
	movq $block_cache_info,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cache
_cachf:
	movq (%rbx),%rax
	jmp *(%rax)
_cachi:
	movl $GHC.IO.Handle.Internals.withHandle1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.withHandle1_entry, .-GHC.IO.Handle.Internals.withHandle1_entry


==================== Asm code ====================
2018-03-16 16:05:08.36334191 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle1_info
.type GHC.IO.Handle.Internals.withHandle1_info, @object
GHC.IO.Handle.Internals.withHandle1_info:
	.quad	GHC.IO.Handle.Internals.withHandle1_entry
	.quad	0
	.quad	12884901902
	.quad	21474836504
	.quad	Sa8nI_srt+488


==================== Asm code ====================
2018-03-16 16:05:08.364020295 UTC

.section .text
.align 8
_cache:
_cache:
	movq 24(%rbp),%r8
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.$wwithHandle'_entry
	.size _cache, .-_cache


==================== Asm code ====================
2018-03-16 16:05:08.364598741 UTC

.section .data.rel.ro
.align 8
.align 1
block_cache_info:
	.quad	_cache
	.quad	3
	.quad	4294967326
	.quad	Sa8nI_srt+488


==================== Asm code ====================
2018-03-16 16:05:08.36717615 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle'_closure
.type GHC.IO.Handle.Internals.withHandle'_closure, @object
GHC.IO.Handle.Internals.withHandle'_closure:
	.quad	GHC.IO.Handle.Internals.withHandle'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.367827512 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withHandle'_entry
.type GHC.IO.Handle.Internals.withHandle'_entry, @object
GHC.IO.Handle.Internals.withHandle'_entry:
_cachB:
	jmp GHC.IO.Handle.Internals.withHandle1_entry
	.size GHC.IO.Handle.Internals.withHandle'_entry, .-GHC.IO.Handle.Internals.withHandle'_entry


==================== Asm code ====================
2018-03-16 16:05:08.368429426 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle'_info
.type GHC.IO.Handle.Internals.withHandle'_info, @object
GHC.IO.Handle.Internals.withHandle'_info:
	.quad	GHC.IO.Handle.Internals.withHandle'_entry
	.quad	0
	.quad	4294967310
	.quad	21474836504
	.quad	Sa8nI_srt+496


==================== Asm code ====================
2018-03-16 16:05:08.372872256 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle_'1_closure
.type GHC.IO.Handle.Internals.withHandle_'1_closure, @object
GHC.IO.Handle.Internals.withHandle_'1_closure:
	.quad	GHC.IO.Handle.Internals.withHandle_'1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.373647021 UTC

.section .text
.align 8
sat_sa8ga_entry:
_cachZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caci0
_caci1:
	movq $block_cachW_info,-16(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_pv_fast
_caci0:
	jmp *-8(%r13)
	.size sat_sa8ga_entry, .-sat_sa8ga_entry


==================== Asm code ====================
2018-03-16 16:05:08.374274088 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8ga_info:
	.quad	sat_sa8ga_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:08.37499697 UTC

.section .text
.align 8
_cachW:
_cachW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caci4
_caci3:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caci4:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cachW, .-_cachW


==================== Asm code ====================
2018-03-16 16:05:08.375593192 UTC

.section .data.rel.ro
.align 8
.align 1
block_cachW_info:
	.quad	_cachW
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.376327523 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withHandle_'1_entry
.type GHC.IO.Handle.Internals.withHandle_'1_entry, @object
GHC.IO.Handle.Internals.withHandle_'1_entry:
_caci5:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _caci6
_caci7:
	movq $block_cachM_info,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cachM
_cachN:
	movq (%rbx),%rax
	jmp *(%rax)
_caci6:
	movl $GHC.IO.Handle.Internals.withHandle_'1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.withHandle_'1_entry, .-GHC.IO.Handle.Internals.withHandle_'1_entry


==================== Asm code ====================
2018-03-16 16:05:08.376979718 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle_'1_info
.type GHC.IO.Handle.Internals.withHandle_'1_info, @object
GHC.IO.Handle.Internals.withHandle_'1_info:
	.quad	GHC.IO.Handle.Internals.withHandle_'1_entry
	.quad	0
	.quad	21474836494
	.quad	21474836504
	.quad	Sa8nI_srt+488


==================== Asm code ====================
2018-03-16 16:05:08.377807323 UTC

.section .text
.align 8
_cachM:
_cachM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cacia
_caci9:
	movq 7(%rbx),%rax
	movq $sat_sa8ga_info,-8(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -6(%r12),%r8
	movq %rax,%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.$wwithHandle'_entry
_cacia:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cachM, .-_cachM


==================== Asm code ====================
2018-03-16 16:05:08.378500958 UTC

.section .data.rel.ro
.align 8
.align 1
block_cachM_info:
	.quad	_cachM
	.quad	3
	.quad	4294967326
	.quad	Sa8nI_srt+488


==================== Asm code ====================
2018-03-16 16:05:08.380871533 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle_'_closure
.type GHC.IO.Handle.Internals.withHandle_'_closure, @object
GHC.IO.Handle.Internals.withHandle_'_closure:
	.quad	GHC.IO.Handle.Internals.withHandle_'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.38185734 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withHandle_'_entry
.type GHC.IO.Handle.Internals.withHandle_'_entry, @object
GHC.IO.Handle.Internals.withHandle_'_entry:
_caciz:
	jmp GHC.IO.Handle.Internals.withHandle_'1_entry
	.size GHC.IO.Handle.Internals.withHandle_'_entry, .-GHC.IO.Handle.Internals.withHandle_'_entry


==================== Asm code ====================
2018-03-16 16:05:08.382449334 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle_'_info
.type GHC.IO.Handle.Internals.withHandle_'_info, @object
GHC.IO.Handle.Internals.withHandle_'_info:
	.quad	GHC.IO.Handle.Internals.withHandle_'_entry
	.quad	0
	.quad	4294967310
	.quad	21474836504
	.quad	Sa8nI_srt+504


==================== Asm code ====================
2018-03-16 16:05:08.393451858 UTC

.section .data
.align 8
.align 1
withHandle_2_ra7PG_closure:
	.quad	withHandle_2_ra7PG_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.394280865 UTC

.section .text
.align 8
sat_sa8gt_entry:
_cacj4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cacj5
_cacj6:
	movq $block_cacj1_info,-16(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_pv_fast
_cacj5:
	jmp *-8(%r13)
	.size sat_sa8gt_entry, .-sat_sa8gt_entry


==================== Asm code ====================
2018-03-16 16:05:08.394919678 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8gt_info:
	.quad	sat_sa8gt_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:08.396375186 UTC

.section .text
.align 8
_cacj1:
_cacj1:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cacj9
_cacj8:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cacj9:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cacj1, .-_cacj1


==================== Asm code ====================
2018-03-16 16:05:08.397069656 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacj1_info:
	.quad	_cacj1
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.397919487 UTC

.section .text
.align 8
io_sa8gl_entry:
_cacjf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cacjj
_cacjk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cacjm
_cacjl:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $sat_sa8gt_info,-8(%r12)
	movq %rcx,(%r12)
	movq $block_cacja_info,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cacjm:
	movq $16,904(%r13)
_cacjj:
	jmp *-8(%r13)
	.size io_sa8gl_entry, .-io_sa8gl_entry


==================== Asm code ====================
2018-03-16 16:05:08.39859565 UTC

.section .data.rel.ro
.align 8
.align 1
io_sa8gl_info:
	.quad	io_sa8gl_entry
	.quad	4
	.quad	4294967304
	.quad	4294967299
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.399266821 UTC

.section .text
.align 8
_cacja:
_cacja:
	movq $block_cacjc_info,(%rbp)
	testb $7,%bl
	jne _cacjc
_cacjd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cacja, .-_cacja


==================== Asm code ====================
2018-03-16 16:05:08.399887975 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacja_info:
	.quad	_cacja
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.400514429 UTC

.section .text
.align 8
_cacjc:
_cacjc:
	movq $block_cacji_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cacjc, .-_cacjc


==================== Asm code ====================
2018-03-16 16:05:08.401092603 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacjc_info:
	.quad	_cacjc
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.401792643 UTC

.section .text
.align 8
_cacji:
_cacji:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cacji, .-_cacji


==================== Asm code ====================
2018-03-16 16:05:08.402342446 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacji_info:
	.quad	_cacji
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.403038287 UTC

.section .text
.align 8
sat_sa8gQ_entry:
_cacjJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cacjK
_cacjL:
	movq $block_cacjG_info,-16(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_pv_fast
_cacjK:
	jmp *-8(%r13)
	.size sat_sa8gQ_entry, .-sat_sa8gQ_entry


==================== Asm code ====================
2018-03-16 16:05:08.403692502 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8gQ_info:
	.quad	sat_sa8gQ_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:08.404402175 UTC

.section .text
.align 8
_cacjG:
_cacjG:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cacjO
_cacjN:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cacjO:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cacjG, .-_cacjG


==================== Asm code ====================
2018-03-16 16:05:08.404995354 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacjG_info:
	.quad	_cacjG
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.406228977 UTC

.section .text
.align 8
io_sa8gI_entry:
_cacjU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cacjY
_cacjZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cack1
_cack0:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $sat_sa8gQ_info,-8(%r12)
	movq %rcx,(%r12)
	movq $block_cacjP_info,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cack1:
	movq $16,904(%r13)
_cacjY:
	jmp *-8(%r13)
	.size io_sa8gI_entry, .-io_sa8gI_entry


==================== Asm code ====================
2018-03-16 16:05:08.406923416 UTC

.section .data.rel.ro
.align 8
.align 1
io_sa8gI_info:
	.quad	io_sa8gI_entry
	.quad	4
	.quad	4294967304
	.quad	4294967299
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.407582224 UTC

.section .text
.align 8
_cacjP:
_cacjP:
	movq $block_cacjR_info,(%rbp)
	testb $7,%bl
	jne _cacjR
_cacjS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cacjP, .-_cacjP


==================== Asm code ====================
2018-03-16 16:05:08.408133994 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacjP_info:
	.quad	_cacjP
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.408802406 UTC

.section .text
.align 8
_cacjR:
_cacjR:
	movq $block_cacjX_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cacjR, .-_cacjR


==================== Asm code ====================
2018-03-16 16:05:08.409419335 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacjR_info:
	.quad	_cacjR
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.410051116 UTC

.section .text
.align 8
_cacjX:
_cacjX:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cacjX, .-_cacjX


==================== Asm code ====================
2018-03-16 16:05:08.410642628 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacjX_info:
	.quad	_cacjX
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.411355668 UTC

.section .text
.align 8
withHandle_2_ra7PG_entry:
_cackb:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cackc
_cackd:
	movq $block_caciK_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _caciK
_caciL:
	movq (%rbx),%rax
	jmp *(%rax)
_cackc:
	movl $withHandle_2_ra7PG_closure,%ebx
	jmp *-8(%r13)
	.size withHandle_2_ra7PG_entry, .-withHandle_2_ra7PG_entry


==================== Asm code ====================
2018-03-16 16:05:08.412012219 UTC

.section .data.rel.ro
.align 8
.align 1
withHandle_2_ra7PG_info:
	.quad	withHandle_2_ra7PG_entry
	.quad	0
	.quad	1103806595086
	.quad	17179869207
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.412758399 UTC

.section .text
.align 8
_caciK:
_caciK:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cack8
_cack9:
	movq $block_cacju_info,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
_cack8:
	movq $block_caciP_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
	.size _caciK, .-_caciK


==================== Asm code ====================
2018-03-16 16:05:08.41345616 UTC

.section .data.rel.ro
.align 8
.align 1
block_caciK_info:
	.quad	_caciK
	.quad	2
	.quad	4294967326
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.414222416 UTC

.section .text
.align 8
_caciP:
_caciP:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cackh
_cackg:
	movq $io_sa8gl_info,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	testq %rbx,%rbx
	je _cackl
_cackk:
	movq %rax,%rbx
	addq $40,%rbp
	jmp io_sa8gl_entry
_cackl:
	movq %rax,%rbx
	addq $40,%rbp
	jmp stg_maskAsyncExceptions#
_cackh:
	movq $40,904(%r13)
	jmp stg_gc_unbx_r1
	.size _caciP, .-_caciP


==================== Asm code ====================
2018-03-16 16:05:08.414917049 UTC

.section .data.rel.ro
.align 8
.align 1
block_caciP_info:
	.quad	_caciP
	.quad	4
	.quad	4294967326
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.415692416 UTC

.section .text
.align 8
_cacju:
_cacju:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cackp
_cacko:
	movq $io_sa8gI_info,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	testq %rbx,%rbx
	je _cackt
_cacks:
	movq %rax,%rbx
	addq $40,%rbp
	jmp io_sa8gI_entry
_cackt:
	movq %rax,%rbx
	addq $40,%rbp
	jmp stg_maskAsyncExceptions#
_cackp:
	movq $40,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cacju, .-_cacju


==================== Asm code ====================
2018-03-16 16:05:08.416362726 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacju_info:
	.quad	_cacju
	.quad	4
	.quad	4294967326
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.418674772 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle__closure
.type GHC.IO.Handle.Internals.withHandle__closure, @object
GHC.IO.Handle.Internals.withHandle__closure:
	.quad	GHC.IO.Handle.Internals.withHandle__info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.419266433 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withHandle__entry
.type GHC.IO.Handle.Internals.withHandle__entry, @object
GHC.IO.Handle.Internals.withHandle__entry:
_caclM:
	jmp withHandle_2_ra7PG_entry
	.size GHC.IO.Handle.Internals.withHandle__entry, .-GHC.IO.Handle.Internals.withHandle__entry


==================== Asm code ====================
2018-03-16 16:05:08.419859456 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle__info
.type GHC.IO.Handle.Internals.withHandle__info, @object
GHC.IO.Handle.Internals.withHandle__info:
	.quad	GHC.IO.Handle.Internals.withHandle__entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	Sa8nI_srt+512


==================== Asm code ====================
2018-03-16 16:05:08.431090898 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle_1_closure
.type GHC.IO.Handle.Internals.wantReadableHandle_1_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle_1_closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle_1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.431939373 UTC

.section .text
.align 8
sat_sa8hh_entry:
_cacmh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cacmi
_cacmj:
	movq $block_cacme_info,-16(%rbp)
	movq %r14,%rsi
	movq %r14,%rax
	movq 6(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.wantReadableHandle2_entry
_cacmi:
	jmp *-8(%r13)
	.size sat_sa8hh_entry, .-sat_sa8hh_entry


==================== Asm code ====================
2018-03-16 16:05:08.43261366 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8hh_info:
	.quad	sat_sa8hh_entry
	.quad	1
	.quad	4294967305
	.quad	8589934597
	.quad	Sa8nI_srt+520


==================== Asm code ====================
2018-03-16 16:05:08.433767025 UTC

.section .text
.align 8
_cacme:
_cacme:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cacmm
_cacml:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cacmm:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cacme, .-_cacme


==================== Asm code ====================
2018-03-16 16:05:08.434362636 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacme_info:
	.quad	_cacme
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.435789365 UTC

.section .text
.align 8
io_sa8h9_entry:
_cacms:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cacmw
_cacmx:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cacmz
_cacmy:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $sat_sa8hh_info,-8(%r12)
	movq %rcx,(%r12)
	movq $block_cacmn_info,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cacmz:
	movq $16,904(%r13)
_cacmw:
	jmp *-8(%r13)
	.size io_sa8h9_entry, .-io_sa8h9_entry


==================== Asm code ====================
2018-03-16 16:05:08.43656434 UTC

.section .data.rel.ro
.align 8
.align 1
io_sa8h9_info:
	.quad	io_sa8h9_entry
	.quad	4
	.quad	2203318222856
	.quad	4294967299
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.437264045 UTC

.section .text
.align 8
_cacmn:
_cacmn:
	movq $block_cacmp_info,(%rbp)
	testb $7,%bl
	jne _cacmp
_cacmq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cacmn, .-_cacmn


==================== Asm code ====================
2018-03-16 16:05:08.437833366 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacmn_info:
	.quad	_cacmn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.43846371 UTC

.section .text
.align 8
_cacmp:
_cacmp:
	movq $block_cacmv_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cacmp, .-_cacmp


==================== Asm code ====================
2018-03-16 16:05:08.439032737 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacmp_info:
	.quad	_cacmp
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.439658872 UTC

.section .text
.align 8
_cacmv:
_cacmv:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cacmv, .-_cacmv


==================== Asm code ====================
2018-03-16 16:05:08.440234847 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacmv_info:
	.quad	_cacmv
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.440948935 UTC

.section .text
.align 8
sat_sa8hE_entry:
_cacmW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cacmX
_cacmY:
	movq $block_cacmT_info,-16(%rbp)
	movq %r14,%rsi
	movq %r14,%rax
	movq 6(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.wantReadableHandle2_entry
_cacmX:
	jmp *-8(%r13)
	.size sat_sa8hE_entry, .-sat_sa8hE_entry


==================== Asm code ====================
2018-03-16 16:05:08.44158195 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8hE_info:
	.quad	sat_sa8hE_entry
	.quad	1
	.quad	4294967305
	.quad	8589934597
	.quad	Sa8nI_srt+520


==================== Asm code ====================
2018-03-16 16:05:08.442297345 UTC

.section .text
.align 8
_cacmT:
_cacmT:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cacn1
_cacn0:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cacn1:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cacmT, .-_cacmT


==================== Asm code ====================
2018-03-16 16:05:08.44290744 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacmT_info:
	.quad	_cacmT
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.443634828 UTC

.section .text
.align 8
io_sa8hw_entry:
_cacn7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cacnb
_cacnc:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cacne
_cacnd:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $sat_sa8hE_info,-8(%r12)
	movq %rcx,(%r12)
	movq $block_cacn2_info,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cacne:
	movq $16,904(%r13)
_cacnb:
	jmp *-8(%r13)
	.size io_sa8hw_entry, .-io_sa8hw_entry


==================== Asm code ====================
2018-03-16 16:05:08.444331495 UTC

.section .data.rel.ro
.align 8
.align 1
io_sa8hw_info:
	.quad	io_sa8hw_entry
	.quad	4
	.quad	2203318222856
	.quad	4294967299
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.444968148 UTC

.section .text
.align 8
_cacn2:
_cacn2:
	movq $block_cacn4_info,(%rbp)
	testb $7,%bl
	jne _cacn4
_cacn5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cacn2, .-_cacn2


==================== Asm code ====================
2018-03-16 16:05:08.445657543 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacn2_info:
	.quad	_cacn2
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.446298931 UTC

.section .text
.align 8
_cacn4:
_cacn4:
	movq $block_cacna_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cacn4, .-_cacn4


==================== Asm code ====================
2018-03-16 16:05:08.44688647 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacn4_info:
	.quad	_cacn4
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.447478907 UTC

.section .text
.align 8
_cacna:
_cacna:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cacna, .-_cacna


==================== Asm code ====================
2018-03-16 16:05:08.448045529 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacna_info:
	.quad	_cacna
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.448789314 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle_1_entry
.type GHC.IO.Handle.Internals.wantReadableHandle_1_entry, @object
GHC.IO.Handle.Internals.wantReadableHandle_1_entry:
_cacno:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cacnp
_cacnq:
	movq $block_caclX_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _caclX
_caclY:
	movq (%rbx),%rax
	jmp *(%rax)
_cacnp:
	movl $GHC.IO.Handle.Internals.wantReadableHandle_1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.wantReadableHandle_1_entry, .-GHC.IO.Handle.Internals.wantReadableHandle_1_entry


==================== Asm code ====================
2018-03-16 16:05:08.449491546 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle_1_info
.type GHC.IO.Handle.Internals.wantReadableHandle_1_info, @object
GHC.IO.Handle.Internals.wantReadableHandle_1_info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle_1_entry
	.quad	0
	.quad	6601364733966
	.quad	17179869207
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.450224491 UTC

.section .text
.align 8
_caclX:
_caclX:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cacnl
_cacnm:
	movq $block_cacmH_info,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
_cacnl:
	movq $block_cacm2_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
	.size _caclX, .-_caclX


==================== Asm code ====================
2018-03-16 16:05:08.45086101 UTC

.section .data.rel.ro
.align 8
.align 1
block_caclX_info:
	.quad	_caclX
	.quad	2
	.quad	2203318222878
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.451640643 UTC

.section .text
.align 8
_cacm2:
_cacm2:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cacnu
_cacnt:
	movq $io_sa8h9_info,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	testq %rbx,%rbx
	je _cacny
_cacnx:
	movq %rax,%rbx
	addq $40,%rbp
	jmp io_sa8h9_entry
_cacny:
	movq %rax,%rbx
	addq $40,%rbp
	jmp stg_maskAsyncExceptions#
_cacnu:
	movq $40,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cacm2, .-_cacm2


==================== Asm code ====================
2018-03-16 16:05:08.452341553 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacm2_info:
	.quad	_cacm2
	.quad	4
	.quad	2203318222878
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.453093312 UTC

.section .text
.align 8
_cacmH:
_cacmH:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cacnC
_cacnB:
	movq $io_sa8hw_info,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	testq %rbx,%rbx
	je _cacnG
_cacnF:
	movq %rax,%rbx
	addq $40,%rbp
	jmp io_sa8hw_entry
_cacnG:
	movq %rax,%rbx
	addq $40,%rbp
	jmp stg_maskAsyncExceptions#
_cacnC:
	movq $40,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cacmH, .-_cacmH


==================== Asm code ====================
2018-03-16 16:05:08.453805198 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacmH_info:
	.quad	_cacmH
	.quad	4
	.quad	2203318222878
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.456138107 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle__closure
.type GHC.IO.Handle.Internals.wantReadableHandle__closure, @object
GHC.IO.Handle.Internals.wantReadableHandle__closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle__info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.45676708 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle__entry
.type GHC.IO.Handle.Internals.wantReadableHandle__entry, @object
GHC.IO.Handle.Internals.wantReadableHandle__entry:
_cacoZ:
	jmp GHC.IO.Handle.Internals.wantReadableHandle_1_entry
	.size GHC.IO.Handle.Internals.wantReadableHandle__entry, .-GHC.IO.Handle.Internals.wantReadableHandle__entry


==================== Asm code ====================
2018-03-16 16:05:08.457706544 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle__info
.type GHC.IO.Handle.Internals.wantReadableHandle__info, @object
GHC.IO.Handle.Internals.wantReadableHandle__info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle__entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	Sa8nI_srt+528


==================== Asm code ====================
2018-03-16 16:05:08.461101308 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle2_closure
.type GHC.IO.Handle.Internals.wantSeekableHandle2_closure, @object
GHC.IO.Handle.Internals.wantSeekableHandle2_closure:
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.461955714 UTC

.section .text
.align 8
sat_sa8hS_entry:
_cacpg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cacph
_cacpi:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cacpk
_cacpj:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $GHC.Base.Just_con_info,-64(%r12)
	movq %rbx,-56(%r12)
	movq $GHC.IO.Exception.IOError_con_info,-48(%r12)
	leaq -62(%r12),%rbx
	movq %rbx,-40(%r12)
	movq $GHC.IO.Exception.IllegalOperation_closure+1,-32(%r12)
	movq %rax,-24(%r12)
	movq $GHC.IO.Handle.Internals.wantSeekableHandle5_closure,-16(%r12)
	movq $GHC.Base.Nothing_closure+1,-8(%r12)
	movq $GHC.Base.Nothing_closure+1,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_cacpk:
	movq $72,904(%r13)
_cacph:
	jmp *-16(%r13)
	.size sat_sa8hS_entry, .-sat_sa8hS_entry


==================== Asm code ====================
2018-03-16 16:05:08.46266163 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8hS_info:
	.quad	sat_sa8hS_entry
	.quad	2
	.quad	281479271677970
	.quad	Sa8nI_srt+408


==================== Asm code ====================
2018-03-16 16:05:08.463354691 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantSeekableHandle2_entry
.type GHC.IO.Handle.Internals.wantSeekableHandle2_entry, @object
GHC.IO.Handle.Internals.wantSeekableHandle2_entry:
_cacpl:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cacpp
_cacpo:
	movq $sat_sa8hS_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%rbx
	jmp stg_raiseIO#
_cacpp:
	movq $32,904(%r13)
	movl $GHC.IO.Handle.Internals.wantSeekableHandle2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.wantSeekableHandle2_entry, .-GHC.IO.Handle.Internals.wantSeekableHandle2_entry


==================== Asm code ====================
2018-03-16 16:05:08.464055736 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle2_info
.type GHC.IO.Handle.Internals.wantSeekableHandle2_info, @object
GHC.IO.Handle.Internals.wantSeekableHandle2_info:
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle2_entry
	.quad	0
	.quad	844429225099278
	.quad	12884901903
	.quad	Sa8nI_srt+408


==================== Asm code ====================
2018-03-16 16:05:08.473921248 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle1_closure
.type GHC.IO.Handle.Internals.wantSeekableHandle1_closure, @object
GHC.IO.Handle.Internals.wantSeekableHandle1_closure:
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.475390729 UTC

.section .text
.align 8
sat_sa8iB_entry:
_cacpX:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cacpY
_cacpZ:
	movq $block_cacpU_info,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cacpU
_cacpV:
	movq (%rbx),%rax
	jmp *(%rax)
_cacpY:
	jmp *-8(%r13)
	.size sat_sa8iB_entry, .-sat_sa8iB_entry


==================== Asm code ====================
2018-03-16 16:05:08.47614343 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8iB_info:
	.quad	sat_sa8iB_entry
	.quad	1
	.quad	30064771081
	.quad	8589934597
	.quad	Sa8nI_srt+552


==================== Asm code ====================
2018-03-16 16:05:08.476837465 UTC

.section .text
.align 8
_cacpU:
_cacpU:
	movq $block_cacq2_info,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cacq2
_cacq4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cacpU, .-_cacpU


==================== Asm code ====================
2018-03-16 16:05:08.47747338 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacpU_info:
	.quad	_cacpU
	.quad	1
	.quad	30064771102
	.quad	Sa8nI_srt+552


==================== Asm code ====================
2018-03-16 16:05:08.478222247 UTC

.section .text
.align 8
_cacq2:
_cacq2:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _uacqK
_uacqL:
	cmpq $5,%rbx
	jne _cacqd
_uacqM:
	addq $40,%rbp
	jmp _cacqH
_uacqK:
	cmpq $2,%rbx
	jb _cacqz
_cacqD:
	movl $GHC.IO.Handle.Internals.wantReadableHandle7_closure,%ebx
	addq $40,%rbp
	jmp stg_raiseIO#
_cacqz:
	movl $GHC.IO.Handle.Internals.wantReadableHandle11_closure,%ebx
	addq $40,%rbp
	jmp stg_raiseIO#
_cacqd:
	movq 16(%rbp),%rax
	movq $block_cacq8_info,16(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_pv_info,(%rbp)
	movq %rax,8(%rbp)
	jmp GHC.IO.Device.isSeekable_entry
	.size _cacq2, .-_cacq2


==================== Asm code ====================
2018-03-16 16:05:08.478937492 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacq2_info:
	.quad	_cacq2
	.quad	4
	.quad	30064771102
	.quad	Sa8nI_srt+552


==================== Asm code ====================
2018-03-16 16:05:08.479578979 UTC

.section .text
.align 8
_cacq8:
_cacq8:
	movq $block_cacqa_info,(%rbp)
	testb $7,%bl
	jne _cacqa
_cacqf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cacq8, .-_cacq8


==================== Asm code ====================
2018-03-16 16:05:08.480167163 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacq8_info:
	.quad	_cacq8
	.quad	2
	.quad	4294967326
	.quad	Sa8nI_srt+552


==================== Asm code ====================
2018-03-16 16:05:08.480847645 UTC

.section .text
.align 8
_cacqa:
_cacqa:
	andl $7,%ebx
	cmpq $1,%rbx
	je _uacqN
_cacqs:
	movq $block_cacqo_info,(%rbp)
	movq 8(%rbp),%r14
	movq 16(%rbp),%rbx
	jmp stg_ap_pv_fast
_uacqN:
	addq $24,%rbp
	jmp _cacqH
	.size _cacqa, .-_cacqa


==================== Asm code ====================
2018-03-16 16:05:08.481627754 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacqa_info:
	.quad	_cacqa
	.quad	2
	.quad	4294967326
	.quad	Sa8nI_srt+552


==================== Asm code ====================
2018-03-16 16:05:08.482307708 UTC

.section .text
.align 8
_cacqo:
_cacqo:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cacqv
_cacqu:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cacqv:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cacqo, .-_cacqo


==================== Asm code ====================
2018-03-16 16:05:08.482922879 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacqo_info:
	.quad	_cacqo
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.48352502 UTC

.section .text
.align 8
_cacqH:
_cacqH:
	movl $GHC.IO.Handle.Internals.wantSeekableHandle3_closure,%ebx
	jmp stg_raiseIO#
	.size _cacqH, .-_cacqH


==================== Asm code ====================
2018-03-16 16:05:08.484312622 UTC

.section .text
.align 8
io_sa8i3_entry:
_cacqY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cacr2
_cacr3:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cacr5
_cacr4:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $sat_sa8iB_info,-8(%r12)
	movq %rcx,(%r12)
	movq $block_cacqT_info,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cacr5:
	movq $16,904(%r13)
_cacr2:
	jmp *-8(%r13)
	.size io_sa8i3_entry, .-io_sa8i3_entry


==================== Asm code ====================
2018-03-16 16:05:08.484988089 UTC

.section .data.rel.ro
.align 8
.align 1
io_sa8i3_info:
	.quad	io_sa8i3_entry
	.quad	4
	.quad	246294899589128
	.quad	4294967299
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.485680162 UTC

.section .text
.align 8
_cacqT:
_cacqT:
	movq $block_cacqV_info,(%rbp)
	testb $7,%bl
	jne _cacqV
_cacqW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cacqT, .-_cacqT


==================== Asm code ====================
2018-03-16 16:05:08.486248102 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacqT_info:
	.quad	_cacqT
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.486900101 UTC

.section .text
.align 8
_cacqV:
_cacqV:
	movq $block_cacr1_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cacqV, .-_cacqV


==================== Asm code ====================
2018-03-16 16:05:08.487490587 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacqV_info:
	.quad	_cacqV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.488080345 UTC

.section .text
.align 8
_cacr1:
_cacr1:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cacr1, .-_cacr1


==================== Asm code ====================
2018-03-16 16:05:08.488633705 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacr1_info:
	.quad	_cacr1
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.489380862 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantSeekableHandle1_entry
.type GHC.IO.Handle.Internals.wantSeekableHandle1_entry, @object
GHC.IO.Handle.Internals.wantSeekableHandle1_entry:
_cacrf:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cacrg
_cacrh:
	movq $block_cacpD_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cacpD
_cacpE:
	movq (%rbx),%rax
	jmp *(%rax)
_cacrg:
	movl $GHC.IO.Handle.Internals.wantSeekableHandle1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.wantSeekableHandle1_entry, .-GHC.IO.Handle.Internals.wantSeekableHandle1_entry


==================== Asm code ====================
2018-03-16 16:05:08.490022689 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle1_info
.type GHC.IO.Handle.Internals.wantSeekableHandle1_info, @object
GHC.IO.Handle.Internals.wantSeekableHandle1_info:
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle1_entry
	.quad	0
	.quad	545362062344206
	.quad	17179869207
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.490759256 UTC

.section .text
.align 8
_cacpD:
_cacpD:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cacrc
_cacrd:
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Internals.wantSeekableHandle2_entry
_cacrc:
	movq $block_cacpI_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
	.size _cacpD, .-_cacpD


==================== Asm code ====================
2018-03-16 16:05:08.491375708 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacpD_info:
	.quad	_cacpD
	.quad	2
	.quad	263887085633566
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.492107775 UTC

.section .text
.align 8
_cacpI:
_cacpI:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cacrl
_cacrk:
	movq $io_sa8i3_info,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	testq %rbx,%rbx
	je _cacrp
_cacro:
	movq %rax,%rbx
	addq $40,%rbp
	jmp io_sa8i3_entry
_cacrp:
	movq %rax,%rbx
	addq $40,%rbp
	jmp stg_maskAsyncExceptions#
_cacrl:
	movq $40,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cacpI, .-_cacpI


==================== Asm code ====================
2018-03-16 16:05:08.492770047 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacpI_info:
	.quad	_cacpI
	.quad	4
	.quad	246294899589150
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.495322744 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle_closure
.type GHC.IO.Handle.Internals.wantSeekableHandle_closure, @object
GHC.IO.Handle.Internals.wantSeekableHandle_closure:
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.495903723 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantSeekableHandle_entry
.type GHC.IO.Handle.Internals.wantSeekableHandle_entry, @object
GHC.IO.Handle.Internals.wantSeekableHandle_entry:
_cacsz:
	jmp GHC.IO.Handle.Internals.wantSeekableHandle1_entry
	.size GHC.IO.Handle.Internals.wantSeekableHandle_entry, .-GHC.IO.Handle.Internals.wantSeekableHandle_entry


==================== Asm code ====================
2018-03-16 16:05:08.496488197 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle_info
.type GHC.IO.Handle.Internals.wantSeekableHandle_info, @object
GHC.IO.Handle.Internals.wantSeekableHandle_info:
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	Sa8nI_srt+576


==================== Asm code ====================
2018-03-16 16:05:08.517926838 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wwantWritableHandle'_closure
.type GHC.IO.Handle.Internals.$wwantWritableHandle'_closure, @object
GHC.IO.Handle.Internals.$wwantWritableHandle'_closure:
	.quad	GHC.IO.Handle.Internals.$wwantWritableHandle'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.518832787 UTC

.section .text
.align 8
sat_sa8jT_entry:
_cactw:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cactA
_cactB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cactt_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cactt
_cactu:
	movq (%rbx),%rax
	jmp *(%rax)
_cactA:
	jmp *-16(%r13)
	.size sat_sa8jT_entry, .-sat_sa8jT_entry


==================== Asm code ====================
2018-03-16 16:05:08.519476581 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8jT_info:
	.quad	sat_sa8jT_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:08.520251157 UTC

.section .text
.align 8
_cactt:
_cactt:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cactE
_cactD:
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rsi
	movq 47(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq $GHC.IO.Buffer.WriteBuffer_closure+2,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cactE:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cactt, .-_cactt


==================== Asm code ====================
2018-03-16 16:05:08.520955659 UTC

.section .data.rel.ro
.align 8
.align 1
block_cactt_info:
	.quad	_cactt
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.521651787 UTC

.section .text
.align 8
sat_sa8ko_entry:
_cacu0:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cacu4
_cacu5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cactX_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cactX
_cactY:
	movq (%rbx),%rax
	jmp *(%rax)
_cacu4:
	jmp *-16(%r13)
	.size sat_sa8ko_entry, .-sat_sa8ko_entry


==================== Asm code ====================
2018-03-16 16:05:08.522308508 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8ko_info:
	.quad	sat_sa8ko_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:08.523058558 UTC

.section .text
.align 8
_cactX:
_cactX:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cacu8
_cacu7:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cacu8:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cactX, .-_cactX


==================== Asm code ====================
2018-03-16 16:05:08.523727211 UTC

.section .data.rel.ro
.align 8
.align 1
block_cactX_info:
	.quad	_cactX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.52545257 UTC

.section .text
.align 8
sat_sa8kH_entry:
_cacuw:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cacuD
_cacuE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cacut_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cacut
_cacuu:
	movq (%rbx),%rax
	jmp *(%rax)
_cacuD:
	jmp *-16(%r13)
	.size sat_sa8kH_entry, .-sat_sa8kH_entry


==================== Asm code ====================
2018-03-16 16:05:08.526172825 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8kH_info:
	.quad	sat_sa8kH_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:05:08.526937727 UTC

.section .text
.align 8
_cacut:
_cacut:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cacuH
_cacuG:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 39(%rbx),%rbx
	addq 8(%rbp),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cacuH:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cacut, .-_cacut


==================== Asm code ====================
2018-03-16 16:05:08.527653096 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacut_info:
	.quad	_cacut
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.528182376 UTC

.section .data.rel.ro
.align 8
.align 1
uacx8_srtd:
	.quad	Sa8nI_srt+104
	.quad	59
	.quad	432345564228616193


==================== Asm code ====================
2018-03-16 16:05:08.528889305 UTC

.section .text
.align 8
sat_sa8l6_entry:
_cacuJ:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _cacuK
_cacuL:
	movq $block_cacsP_info,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cacsP
_cacsQ:
	movq (%rbx),%rax
	jmp *(%rax)
_cacuK:
	jmp *-8(%r13)
	.size sat_sa8l6_entry, .-sat_sa8l6_entry


==================== Asm code ====================
2018-03-16 16:05:08.529607754 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8l6_info:
	.quad	sat_sa8l6_entry
	.quad	1
	.quad	-4294967287
	.quad	8589934597
	.quad	uacx8_srtd


==================== Asm code ====================
2018-03-16 16:05:08.530157983 UTC

.section .data.rel.ro
.align 8
.align 1
uacx9_srtd:
	.quad	Sa8nI_srt+104
	.quad	59
	.quad	432345564228616193


==================== Asm code ====================
2018-03-16 16:05:08.530931908 UTC

.section .text
.align 8
_cacsP:
_cacsP:
	movq $block_cacsU_info,-56(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 63(%rbx),%rdi
	movq 71(%rbx),%r8
	movq 95(%rbx),%r9
	movq 39(%rbx),%rbx
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rax,(%rbp)
	addq $-56,%rbp
	testb $7,%bl
	jne _cacsU
_cacsV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cacsP, .-_cacsP


==================== Asm code ====================
2018-03-16 16:05:08.531583641 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacsP_info:
	.quad	_cacsP
	.quad	1
	.quad	-4294967266
	.quad	uacx9_srtd


==================== Asm code ====================
2018-03-16 16:05:08.532168328 UTC

.section .data.rel.ro
.align 8
.align 1
uacxa_srtd:
	.quad	Sa8nI_srt+104
	.quad	59
	.quad	432345564228616193


==================== Asm code ====================
2018-03-16 16:05:08.533055435 UTC

.section .text
.align 8
_cacsU:
_cacsU:
	andl $7,%ebx
	cmpq $4,%rbx
	jb _uacwF
_uacwH:
	cmpq $6,%rbx
	jb _cacuT
_cacv7:
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cact3_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cact3
_cact4:
	movq (%rbx),%rax
	jmp *(%rax)
_uacwF:
	cmpq $3,%rbx
	jb _uacwG
_cacv5:
	movl $GHC.IO.Handle.Internals.wantWritableHandle2_closure,%ebx
	addq $72,%rbp
	jmp stg_raiseIO#
_uacwG:
	cmpq $2,%rbx
	jb _cacuZ
_cacv2:
	movl $GHC.IO.Handle.Internals.wantReadableHandle7_closure,%ebx
	addq $72,%rbp
	jmp stg_raiseIO#
_cacuZ:
	movl $GHC.IO.Handle.Internals.wantReadableHandle11_closure,%ebx
	addq $72,%rbp
	jmp stg_raiseIO#
_cacuT:
	movq $block_cacuO_info,48(%rbp)
	movq 56(%rbp),%r14
	movq 64(%rbp),%rbx
	addq $48,%rbp
	jmp stg_ap_pv_fast
	.size _cacsU, .-_cacsU


==================== Asm code ====================
2018-03-16 16:05:08.533851368 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacsU_info:
	.quad	_cacsU
	.quad	8
	.quad	-4294967266
	.quad	uacxa_srtd


==================== Asm code ====================
2018-03-16 16:05:08.534536505 UTC

.section .text
.align 8
_cacuO:
_cacuO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cacuW
_cacuV:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cacuW:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cacuO, .-_cacuO


==================== Asm code ====================
2018-03-16 16:05:08.535168877 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacuO_info:
	.quad	_cacuO
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.535859863 UTC

.section .text
.align 8
_cact3:
_cact3:
	movq $block_cact8_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _cact8
_cact9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cact3, .-_cact3


==================== Asm code ====================
2018-03-16 16:05:08.536484404 UTC

.section .data.rel.ro
.align 8
.align 1
block_cact3_info:
	.quad	_cact3
	.quad	8
	.quad	4294967326
	.quad	Sa8nI_srt+584


==================== Asm code ====================
2018-03-16 16:05:08.537203863 UTC

.section .text
.align 8
_cact8:
_cact8:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cacvb
_cacwn:
	movq $block_cacwj_info,48(%rbp)
	movq 56(%rbp),%r14
	movq 64(%rbp),%rbx
	addq $48,%rbp
	jmp stg_ap_pv_fast
_cacvb:
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cactd_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cactd
_cacte:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cact8, .-_cact8


==================== Asm code ====================
2018-03-16 16:05:08.537927393 UTC

.section .data.rel.ro
.align 8
.align 1
block_cact8_info:
	.quad	_cact8
	.quad	8
	.quad	4294967326
	.quad	Sa8nI_srt+584


==================== Asm code ====================
2018-03-16 16:05:08.538635375 UTC

.section .text
.align 8
_cactd:
_cactd:
	movq $block_cactG_info,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cactG
_cactH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cactd, .-_cactd


==================== Asm code ====================
2018-03-16 16:05:08.539184521 UTC

.section .data.rel.ro
.align 8
.align 1
block_cactd_info:
	.quad	_cactd
	.quad	8
	.quad	4294967326
	.quad	Sa8nI_srt+584


==================== Asm code ====================
2018-03-16 16:05:08.539954839 UTC

.section .text
.align 8
_cactG:
_cactG:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cacwc
_uacwI:
	addq $24,%rbp
	jmp _sa8jE
_uacwJ:
	addq $24,%rbp
	jmp _sa8jE
_cacwc:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _uacwJ
_cacvy:
	movq 48(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cactO_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cactO
_cactP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cactG, .-_cactG


==================== Asm code ====================
2018-03-16 16:05:08.5406423 UTC

.section .data.rel.ro
.align 8
.align 1
block_cactG_info:
	.quad	_cactG
	.quad	202
	.quad	4294967326
	.quad	Sa8nI_srt+584


==================== Asm code ====================
2018-03-16 16:05:08.541577939 UTC

.section .text
.align 8
_cactO:
_cactO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cacvB
_cacvA:
	movq 40(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq 8(%rax),%rdx
	movq $sat_sa8ko_info,-16(%r12)
	movq %rdx,(%r12)
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cacud_info,-8(%rbp)
	movq %rbx,%rcx
	movq 64(%rsp),%rax
	movq %rax,%rbx
	movq %rcx,(%rbp)
	movq %r14,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cacud
_cacue:
	movq (%rbx),%rax
	jmp *(%rax)
_cacvB:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cactO, .-_cactO


==================== Asm code ====================
2018-03-16 16:05:08.542343095 UTC

.section .data.rel.ro
.align 8
.align 1
block_cactO_info:
	.quad	_cactO
	.quad	520
	.quad	4294967326
	.quad	Sa8nI_srt+584


==================== Asm code ====================
2018-03-16 16:05:08.543139969 UTC

.section .text
.align 8
_cacud:
_cacud:
	movq 39(%rbx),%rax
	testq %rax,%rax
	jne _cacvE
_cacw9:
	movq 32(%rbp),%rax
	movq 8(%rbp),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $16,%rbp
	jmp _sa8jE
_cacvE:
	movq $block_cacuk_info,-24(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq 56(%rbp),%rbx
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rsi,56(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cacuk
_cacul:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cacud, .-_cacud


==================== Asm code ====================
2018-03-16 16:05:08.543834523 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacud_info:
	.quad	_cacud
	.quad	9
	.quad	4294967326
	.quad	Sa8nI_srt+584


==================== Asm code ====================
2018-03-16 16:05:08.544691938 UTC

.section .text
.align 8
_cacuk:
_cacuk:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cacvG
_cacvY:
	movq $block_cacvM_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cacvM
_cacvN:
	movq (%rbx),%rax
	jmp *(%rax)
_cacvJ:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_cacvG:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cacvJ
_cacvI:
	movq $sat_sa8kH_info,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 56(%rbp),%rax
	leaq -24(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $40,%rbp
	jmp _sa8jE
	.size _cacuk, .-_cacuk


==================== Asm code ====================
2018-03-16 16:05:08.54556029 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacuk_info:
	.quad	_cacuk
	.quad	32908
	.quad	4294967326
	.quad	Sa8nI_srt+584


==================== Asm code ====================
2018-03-16 16:05:08.546204608 UTC

.section .text
.align 8
_cacvM:
_cacvM:
	movq $block_cacvR_info,-8(%rbp)
	movq 64(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,64(%rbp)
	addq $-8,%rbp
	jmp stg_ap_pv_fast
	.size _cacvM, .-_cacvM


==================== Asm code ====================
2018-03-16 16:05:08.546776373 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacvM_info:
	.quad	_cacvM
	.quad	32908
	.quad	4294967326
	.quad	Sa8nI_srt+584


==================== Asm code ====================
2018-03-16 16:05:08.547560925 UTC

.section .text
.align 8
_cacvR:
_cacvR:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cacw2
_cacw1:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 88(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 40(%rbp),%rax
	movq $block_cacvU_info,40(%rbp)
	leaq -47(%r12),%r8
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 72(%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_cacw2:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cacvR, .-_cacvR


==================== Asm code ====================
2018-03-16 16:05:08.548222378 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacvR_info:
	.quad	_cacvR
	.quad	65805
	.quad	4294967326
	.quad	Sa8nI_srt+584


==================== Asm code ====================
2018-03-16 16:05:08.548893536 UTC

.section .text
.align 8
_cacvU:
_cacvU:
	movq $block_cacvW_info,(%rbp)
	testb $7,%bl
	jne _cacvW
_cacw4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cacvU, .-_cacvU


==================== Asm code ====================
2018-03-16 16:05:08.549487802 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacvU_info:
	.quad	_cacvU
	.quad	2568
	.quad	4294967326
	.quad	Sa8nI_srt+584


==================== Asm code ====================
2018-03-16 16:05:08.550148832 UTC

.section .text
.align 8
_cacvW:
_cacvW:
	movq 24(%rbp),%rax
	movq 7(%rbx),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $8,%rbp
	jmp _sa8jE
	.size _cacvW, .-_cacvW


==================== Asm code ====================
2018-03-16 16:05:08.550724683 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacvW_info:
	.quad	_cacvW
	.quad	2568
	.quad	4294967326
	.quad	Sa8nI_srt+584


==================== Asm code ====================
2018-03-16 16:05:08.551288896 UTC

.section .text
.align 8
_sa8jE:
_sa8jE:
	movq $block_cactn_info,-8(%rbp)
	movq 48(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.IO.Handle.Internals.flushBuffer2_entry
	.size _sa8jE, .-_sa8jE


==================== Asm code ====================
2018-03-16 16:05:08.552153735 UTC

.section .text
.align 8
_cactn:
_cactn:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cacvr
_cacvq:
	movq 40(%rbp),%rax
	movq 8(%rax),%rbx
	movq $sat_sa8jT_info,-16(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cacvg_info,16(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq $stg_ap_ppv_info,-8(%rbp)
	movq %rax,(%rbp)
	movq 64(%rsp),%rax
	movq 8(%rax),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp GHC.IO.BufferedIO.emptyWriteBuffer_entry
_cacvr:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cactn, .-_cactn


==================== Asm code ====================
2018-03-16 16:05:08.552891207 UTC

.section .data.rel.ro
.align 8
.align 1
block_cactn_info:
	.quad	_cactn
	.quad	2568
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.553820653 UTC

.section .text
.align 8
_cacvg:
_cacvg:
	movq 48(%rbp),%rax
	movq 40(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq %rbx,8(%rdx)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rdx,%rsi
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cacvl_info,32(%rbp)
	addq $32,%rbp
	jmp stg_ap_pv_fast
	.size _cacvg, .-_cacvg


==================== Asm code ====================
2018-03-16 16:05:08.554447014 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacvg_info:
	.quad	_cacvg
	.quad	902
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.555670701 UTC

.section .text
.align 8
_cacvl:
_cacvl:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cacvv
_cacvu:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cacvv:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cacvl, .-_cacvl


==================== Asm code ====================
2018-03-16 16:05:08.55634998 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacvl_info:
	.quad	_cacvl
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.557060106 UTC

.section .text
.align 8
_cacwj:
_cacwj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cacwq
_cacwp:
	movq $(,)_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cacwq:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cacwj, .-_cacwj


==================== Asm code ====================
2018-03-16 16:05:08.557692168 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacwj_info:
	.quad	_cacwj
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.558166025 UTC

.section .data.rel.ro
.align 8
.align 1
uacxb_srtd:
	.quad	Sa8nI_srt+104
	.quad	62
	.quad	3891391553024819201


==================== Asm code ====================
2018-03-16 16:05:08.558864165 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.$wwantWritableHandle'_entry
.type GHC.IO.Handle.Internals.$wwantWritableHandle'_entry, @object
GHC.IO.Handle.Internals.$wwantWritableHandle'_entry:
_cacx3:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cacx7
_cacx6:
	movq $sat_sa8l6_info,-8(%r12)
	movq %r8,(%r12)
	leaq -6(%r12),%r8
	jmp GHC.IO.Handle.Internals.$wwithHandle'_entry
_cacx7:
	movq $16,904(%r13)
	movl $GHC.IO.Handle.Internals.$wwantWritableHandle'_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.$wwantWritableHandle'_entry, .-GHC.IO.Handle.Internals.$wwantWritableHandle'_entry


==================== Asm code ====================
2018-03-16 16:05:08.559498323 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wwantWritableHandle'_info
.type GHC.IO.Handle.Internals.$wwantWritableHandle'_info, @object
GHC.IO.Handle.Internals.$wwantWritableHandle'_info:
	.quad	GHC.IO.Handle.Internals.$wwantWritableHandle'_entry
	.quad	0
	.quad	-4294967282
	.quad	21474836504
	.quad	uacxb_srtd


==================== Asm code ====================
2018-03-16 16:05:08.563017827 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantWritableHandle1_closure
.type GHC.IO.Handle.Internals.wantWritableHandle1_closure, @object
GHC.IO.Handle.Internals.wantWritableHandle1_closure:
	.quad	GHC.IO.Handle.Internals.wantWritableHandle1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.563771969 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantWritableHandle1_entry
.type GHC.IO.Handle.Internals.wantWritableHandle1_entry, @object
GHC.IO.Handle.Internals.wantWritableHandle1_entry:
_caczD:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caczE
_caczF:
	movq $block_caczw_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _caczw
_caczx:
	movq (%rbx),%rax
	jmp *(%rax)
_caczE:
	movl $GHC.IO.Handle.Internals.wantWritableHandle1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.wantWritableHandle1_entry, .-GHC.IO.Handle.Internals.wantWritableHandle1_entry


==================== Asm code ====================
2018-03-16 16:05:08.564446549 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantWritableHandle1_info
.type GHC.IO.Handle.Internals.wantWritableHandle1_info, @object
GHC.IO.Handle.Internals.wantWritableHandle1_info:
	.quad	GHC.IO.Handle.Internals.wantWritableHandle1_entry
	.quad	0
	.quad	12884901902
	.quad	17179869207
	.quad	Sa8nI_srt+592


==================== Asm code ====================
2018-03-16 16:05:08.565167981 UTC

.section .text
.align 8
_caczw:
_caczw:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _caczA
_caczB:
	movq %rcx,%r8
	movq 22(%rbx),%rdi
	movq %rbx,%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Internals.$wwantWritableHandle'_entry
_caczA:
	movq %rcx,%r8
	movq 15(%rbx),%rdi
	movq %rbx,%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Internals.$wwantWritableHandle'_entry
	.size _caczw, .-_caczw


==================== Asm code ====================
2018-03-16 16:05:08.566389683 UTC

.section .data.rel.ro
.align 8
.align 1
block_caczw_info:
	.quad	_caczw
	.quad	2
	.quad	4294967326
	.quad	Sa8nI_srt+592


==================== Asm code ====================
2018-03-16 16:05:08.568487303 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantWritableHandle_closure
.type GHC.IO.Handle.Internals.wantWritableHandle_closure, @object
GHC.IO.Handle.Internals.wantWritableHandle_closure:
	.quad	GHC.IO.Handle.Internals.wantWritableHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.56911412 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantWritableHandle_entry
.type GHC.IO.Handle.Internals.wantWritableHandle_entry, @object
GHC.IO.Handle.Internals.wantWritableHandle_entry:
_cacA2:
	jmp GHC.IO.Handle.Internals.wantWritableHandle1_entry
	.size GHC.IO.Handle.Internals.wantWritableHandle_entry, .-GHC.IO.Handle.Internals.wantWritableHandle_entry


==================== Asm code ====================
2018-03-16 16:05:08.56968004 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantWritableHandle_info
.type GHC.IO.Handle.Internals.wantWritableHandle_info, @object
GHC.IO.Handle.Internals.wantWritableHandle_info:
	.quad	GHC.IO.Handle.Internals.wantWritableHandle_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	Sa8nI_srt+600


==================== Asm code ====================
2018-03-16 16:05:08.577997447 UTC

.section .data
.align 8
.align 1
withHandle2_ra7PH_closure:
	.quad	withHandle2_ra7PH_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.578788451 UTC

.section .text
.align 8
io_sa8lr_entry:
_cacAu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cacAy
_cacAz:
	movq $block_cacAp_info,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 7(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cacAy:
	jmp *-8(%r13)
	.size io_sa8lr_entry, .-io_sa8lr_entry


==================== Asm code ====================
2018-03-16 16:05:08.579409958 UTC

.section .data.rel.ro
.align 8
.align 1
io_sa8lr_info:
	.quad	io_sa8lr_entry
	.quad	4
	.quad	4294967304
	.quad	4294967299
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.580115564 UTC

.section .text
.align 8
_cacAp:
_cacAp:
	movq $block_cacAr_info,(%rbp)
	testb $7,%bl
	jne _cacAr
_cacAs:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cacAp, .-_cacAp


==================== Asm code ====================
2018-03-16 16:05:08.580708239 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacAp_info:
	.quad	_cacAp
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.581350735 UTC

.section .text
.align 8
_cacAr:
_cacAr:
	movq $block_cacAx_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cacAr, .-_cacAr


==================== Asm code ====================
2018-03-16 16:05:08.58190123 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacAr_info:
	.quad	_cacAr
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.582537369 UTC

.section .text
.align 8
_cacAx:
_cacAx:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cacAx, .-_cacAx


==================== Asm code ====================
2018-03-16 16:05:08.583156279 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacAx_info:
	.quad	_cacAx
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.583867687 UTC

.section .text
.align 8
io_sa8lH_entry:
_cacAT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cacAX
_cacAY:
	movq $block_cacAO_info,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 7(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cacAX:
	jmp *-8(%r13)
	.size io_sa8lH_entry, .-io_sa8lH_entry


==================== Asm code ====================
2018-03-16 16:05:08.584519571 UTC

.section .data.rel.ro
.align 8
.align 1
io_sa8lH_info:
	.quad	io_sa8lH_entry
	.quad	4
	.quad	4294967304
	.quad	4294967299
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.585183644 UTC

.section .text
.align 8
_cacAO:
_cacAO:
	movq $block_cacAQ_info,(%rbp)
	testb $7,%bl
	jne _cacAQ
_cacAR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cacAO, .-_cacAO


==================== Asm code ====================
2018-03-16 16:05:08.585822553 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacAO_info:
	.quad	_cacAO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.586475084 UTC

.section .text
.align 8
_cacAQ:
_cacAQ:
	movq $block_cacAW_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cacAQ, .-_cacAQ


==================== Asm code ====================
2018-03-16 16:05:08.587072185 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacAQ_info:
	.quad	_cacAQ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.587677703 UTC

.section .text
.align 8
_cacAW:
_cacAW:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cacAW, .-_cacAW


==================== Asm code ====================
2018-03-16 16:05:08.588202031 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacAW_info:
	.quad	_cacAW
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.588942368 UTC

.section .text
.align 8
withHandle2_ra7PH_entry:
_cacB8:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cacB9
_cacBa:
	movq $block_cacAd_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cacAd
_cacAe:
	movq (%rbx),%rax
	jmp *(%rax)
_cacB9:
	movl $withHandle2_ra7PH_closure,%ebx
	jmp *-8(%r13)
	.size withHandle2_ra7PH_entry, .-withHandle2_ra7PH_entry


==================== Asm code ====================
2018-03-16 16:05:08.589757127 UTC

.section .data.rel.ro
.align 8
.align 1
withHandle2_ra7PH_info:
	.quad	withHandle2_ra7PH_entry
	.quad	0
	.quad	4503603922337806
	.quad	17179869207
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.590493713 UTC

.section .text
.align 8
_cacAd:
_cacAd:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cacB5
_cacB6:
	movq $block_cacAH_info,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
_cacB5:
	movq $block_cacAi_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
	.size _cacAd, .-_cacAd


==================== Asm code ====================
2018-03-16 16:05:08.591185383 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacAd_info:
	.quad	_cacAd
	.quad	2
	.quad	4294967326
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.591963256 UTC

.section .text
.align 8
_cacAi:
_cacAi:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cacBe
_cacBd:
	movq $io_sa8lr_info,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	testq %rbx,%rbx
	je _cacBi
_cacBh:
	movq %rax,%rbx
	addq $40,%rbp
	jmp io_sa8lr_entry
_cacBi:
	movq %rax,%rbx
	addq $40,%rbp
	jmp stg_maskAsyncExceptions#
_cacBe:
	movq $40,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cacAi, .-_cacAi


==================== Asm code ====================
2018-03-16 16:05:08.59318694 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacAi_info:
	.quad	_cacAi
	.quad	4
	.quad	4294967326
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.594020189 UTC

.section .text
.align 8
_cacAH:
_cacAH:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cacBm
_cacBl:
	movq $io_sa8lH_info,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	testq %rbx,%rbx
	je _cacBq
_cacBp:
	movq %rax,%rbx
	addq $40,%rbp
	jmp io_sa8lH_entry
_cacBq:
	movq %rax,%rbx
	addq $40,%rbp
	jmp stg_maskAsyncExceptions#
_cacBm:
	movq $40,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cacAH, .-_cacAH


==================== Asm code ====================
2018-03-16 16:05:08.594744573 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacAH_info:
	.quad	_cacAH
	.quad	4
	.quad	4294967326
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.597094824 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle_closure
.type GHC.IO.Handle.Internals.withHandle_closure, @object
GHC.IO.Handle.Internals.withHandle_closure:
	.quad	GHC.IO.Handle.Internals.withHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.59773437 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withHandle_entry
.type GHC.IO.Handle.Internals.withHandle_entry, @object
GHC.IO.Handle.Internals.withHandle_entry:
_cacCr:
	jmp withHandle2_ra7PH_entry
	.size GHC.IO.Handle.Internals.withHandle_entry, .-GHC.IO.Handle.Internals.withHandle_entry


==================== Asm code ====================
2018-03-16 16:05:08.598286729 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle_info
.type GHC.IO.Handle.Internals.withHandle_info, @object
GHC.IO.Handle.Internals.withHandle_info:
	.quad	GHC.IO.Handle.Internals.withHandle_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	Sa8nI_srt+608


==================== Asm code ====================
2018-03-16 16:05:08.607811555 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle1_closure
.type GHC.IO.Handle.Internals.wantReadableHandle1_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle1_closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.608504725 UTC

.section .text
.align 8
sat_sa8m3_entry:
_cacCT:
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.IO.Handle.Internals.wantReadableHandle2_entry
	.size sat_sa8m3_entry, .-sat_sa8m3_entry


==================== Asm code ====================
2018-03-16 16:05:08.609045069 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8m3_info:
	.quad	sat_sa8m3_entry
	.quad	1
	.quad	4294967305
	.quad	8589934597
	.quad	Sa8nI_srt+520


==================== Asm code ====================
2018-03-16 16:05:08.609926563 UTC

.section .text
.align 8
io_sa8m1_entry:
_cacD1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cacD5
_cacD6:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cacD8
_cacD7:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $sat_sa8m3_info,-8(%r12)
	movq %rcx,(%r12)
	movq $block_cacCW_info,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cacD8:
	movq $16,904(%r13)
_cacD5:
	jmp *-8(%r13)
	.size io_sa8m1_entry, .-io_sa8m1_entry


==================== Asm code ====================
2018-03-16 16:05:08.610670161 UTC

.section .data.rel.ro
.align 8
.align 1
io_sa8m1_info:
	.quad	io_sa8m1_entry
	.quad	4
	.quad	2203318222856
	.quad	4294967299
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.611372647 UTC

.section .text
.align 8
_cacCW:
_cacCW:
	movq $block_cacCY_info,(%rbp)
	testb $7,%bl
	jne _cacCY
_cacCZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cacCW, .-_cacCW


==================== Asm code ====================
2018-03-16 16:05:08.611970281 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacCW_info:
	.quad	_cacCW
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.61262488 UTC

.section .text
.align 8
_cacCY:
_cacCY:
	movq $block_cacD4_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cacCY, .-_cacCY


==================== Asm code ====================
2018-03-16 16:05:08.613201271 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacCY_info:
	.quad	_cacCY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.614149004 UTC

.section .text
.align 8
_cacD4:
_cacD4:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cacD4, .-_cacD4


==================== Asm code ====================
2018-03-16 16:05:08.614677882 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacD4_info:
	.quad	_cacD4
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.615293302 UTC

.section .text
.align 8
sat_sa8mk_entry:
_cacDs:
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.IO.Handle.Internals.wantReadableHandle2_entry
	.size sat_sa8mk_entry, .-sat_sa8mk_entry


==================== Asm code ====================
2018-03-16 16:05:08.615882018 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sa8mk_info:
	.quad	sat_sa8mk_entry
	.quad	1
	.quad	4294967305
	.quad	8589934597
	.quad	Sa8nI_srt+520


==================== Asm code ====================
2018-03-16 16:05:08.616712484 UTC

.section .text
.align 8
io_sa8mi_entry:
_cacDA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cacDE
_cacDF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cacDH
_cacDG:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $sat_sa8mk_info,-8(%r12)
	movq %rcx,(%r12)
	movq $block_cacDv_info,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cacDH:
	movq $16,904(%r13)
_cacDE:
	jmp *-8(%r13)
	.size io_sa8mi_entry, .-io_sa8mi_entry


==================== Asm code ====================
2018-03-16 16:05:08.617459142 UTC

.section .data.rel.ro
.align 8
.align 1
io_sa8mi_info:
	.quad	io_sa8mi_entry
	.quad	4
	.quad	2203318222856
	.quad	4294967299
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.618143779 UTC

.section .text
.align 8
_cacDv:
_cacDv:
	movq $block_cacDx_info,(%rbp)
	testb $7,%bl
	jne _cacDx
_cacDy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cacDv, .-_cacDv


==================== Asm code ====================
2018-03-16 16:05:08.618757138 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacDv_info:
	.quad	_cacDv
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.619442957 UTC

.section .text
.align 8
_cacDx:
_cacDx:
	movq $block_cacDD_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cacDx, .-_cacDx


==================== Asm code ====================
2018-03-16 16:05:08.620055825 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacDx_info:
	.quad	_cacDx
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.62068286 UTC

.section .text
.align 8
_cacDD:
_cacDD:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cacDD, .-_cacDD


==================== Asm code ====================
2018-03-16 16:05:08.621269553 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacDD_info:
	.quad	_cacDD
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:08.622025595 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle1_entry
.type GHC.IO.Handle.Internals.wantReadableHandle1_entry, @object
GHC.IO.Handle.Internals.wantReadableHandle1_entry:
_cacDR:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cacDS
_cacDT:
	movq $block_cacCC_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cacCC
_cacCD:
	movq (%rbx),%rax
	jmp *(%rax)
_cacDS:
	movl $GHC.IO.Handle.Internals.wantReadableHandle1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.wantReadableHandle1_entry, .-GHC.IO.Handle.Internals.wantReadableHandle1_entry


==================== Asm code ====================
2018-03-16 16:05:08.622720717 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle1_info
.type GHC.IO.Handle.Internals.wantReadableHandle1_info, @object
GHC.IO.Handle.Internals.wantReadableHandle1_info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle1_entry
	.quad	0
	.quad	9009402572963854
	.quad	17179869207
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.623460225 UTC

.section .text
.align 8
_cacCC:
_cacCC:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cacDO
_cacDP:
	movq $block_cacDg_info,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
_cacDO:
	movq $block_cacCH_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
	.size _cacCC, .-_cacCC


==================== Asm code ====================
2018-03-16 16:05:08.624113219 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacCC_info:
	.quad	_cacCC
	.quad	2
	.quad	2203318222878
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.6249178 UTC

.section .text
.align 8
_cacCH:
_cacCH:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cacDX
_cacDW:
	movq $io_sa8m1_info,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	testq %rbx,%rbx
	je _cacE1
_cacE0:
	movq %rax,%rbx
	addq $40,%rbp
	jmp io_sa8m1_entry
_cacE1:
	movq %rax,%rbx
	addq $40,%rbp
	jmp stg_maskAsyncExceptions#
_cacDX:
	movq $40,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cacCH, .-_cacCH


==================== Asm code ====================
2018-03-16 16:05:08.625613364 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacCH_info:
	.quad	_cacCH
	.quad	4
	.quad	2203318222878
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.626375987 UTC

.section .text
.align 8
_cacDg:
_cacDg:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cacE5
_cacE4:
	movq $io_sa8mi_info,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	testq %rbx,%rbx
	je _cacE9
_cacE8:
	movq %rax,%rbx
	addq $40,%rbp
	jmp io_sa8mi_entry
_cacE9:
	movq %rax,%rbx
	addq $40,%rbp
	jmp stg_maskAsyncExceptions#
_cacE5:
	movq $40,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cacDg, .-_cacDg


==================== Asm code ====================
2018-03-16 16:05:08.627090101 UTC

.section .data.rel.ro
.align 8
.align 1
block_cacDg_info:
	.quad	_cacDg
	.quad	4
	.quad	2203318222878
	.quad	Sa8nI_srt+448


==================== Asm code ====================
2018-03-16 16:05:08.629653705 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle_closure
.type GHC.IO.Handle.Internals.wantReadableHandle_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle_closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:08.630281969 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle_entry
.type GHC.IO.Handle.Internals.wantReadableHandle_entry, @object
GHC.IO.Handle.Internals.wantReadableHandle_entry:
_cacFg:
	jmp GHC.IO.Handle.Internals.wantReadableHandle1_entry
	.size GHC.IO.Handle.Internals.wantReadableHandle_entry, .-GHC.IO.Handle.Internals.wantReadableHandle_entry


==================== Asm code ====================
2018-03-16 16:05:08.631401493 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle_info
.type GHC.IO.Handle.Internals.wantReadableHandle_info, @object
GHC.IO.Handle.Internals.wantReadableHandle_info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	Sa8nI_srt+616


==================== Asm code ====================
2018-03-16 16:05:08.634212731 UTC

.section .data.rel.ro
.align 8
.align 1
Sa8nI_srt:
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle12_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle11_closure
	.quad	ioe_closedHandle2_ra7Pb_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle8_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle7_closure
	.quad	ioe_semiclosedHandle2_ra7Pc_closure
	.quad	GHC.IO.Handle.Internals.hLookAhead_3_closure
	.quad	ioe_EOF2_ra7Pd_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle4_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle3_closure
	.quad	ioe_notReadable2_ra7Pe_closure
	.quad	GHC.IO.Handle.Internals.wantWritableHandle3_closure
	.quad	GHC.IO.Handle.Internals.wantWritableHandle2_closure
	.quad	ioe_notWritable2_ra7Pf_closure
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle4_closure
	.quad	GHC.IO.Handle.Internals.flushBuffer4_closure
	.quad	lvl1_ra7Ph_closure
	.quad	GHC.IO.Handle.Internals.$wioe_bufsiz_closure
	.quad	GHC.IO.Handle.Internals.ioe_bufsiz1_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_closure
	.quad	GHC.IO.Handle.Internals.ioe_finalizedHandle_closure
	.quad	lvl6_ra7Pm_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	GHC.IO.Handle.Internals.decodeByteBuf1_closure
	.quad	GHC.IO.Handle.Internals.decodeByteBuf2_closure
	.quad	GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle2_closure
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle5_closure
	.quad	GHC.Err.error_closure
	.quad	lvl19_ra7Pz_closure
	.quad	GHC.IO.Handle.Internals.flushCharBuffer1_closure
	.quad	GHC.IO.Handle.Internals.flushCharBuffer2_closure
	.quad	GHC.IO.Handle.Internals.flushBuffer2_closure
	.quad	GHC.IO.Handle.Internals.flushBuffer3_closure
	.quad	GHC.IO.Handle.Internals.flushBuffer1_closure
	.quad	Control.Exception.Base.patError_closure
	.quad	GHC.IO.Handle.Internals.hLookAhead_2_closure
	.quad	GHC.IO.Handle.Internals.$wreadTextDevice'_closure
	.quad	lvl22_ra7PC_closure
	.quad	GHC.IO.Handle.Internals.hLookAhead_1_closure
	.quad	GHC.IO.Handle.Internals.noCharBuffer_closure
	.quad	GHC.IO.Handle.Internals.noByteBuffer_closure
	.quad	GHC.IO.Handle.Internals.hClose_help1_closure
	.quad	GHC.IO.Handle.Internals.handleFinalizer1_closure
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle4_closure
	.quad	GHC.IO.Handle.Internals.mkFileHandle1_closure
	.quad	GHC.IO.failIO1_closure
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle3_closure
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle2_closure
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle1_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	$wlvl_ra7PF_closure
	.quad	Data.Typeable.Internal.sameTypeRep_closure
	.quad	GHC.IO.Exception.$fExceptionAllocationLimitExceeded6_closure
	.quad	GHC.IO.Exception.$fExceptionIOException4_closure
	.quad	GHC.IO.Handle.Internals.$wdo_operation_closure
	.quad	GHC.IO.Handle.Internals.withHandle_1_closure
	.quad	GHC.IO.Handle.Internals.$wwithHandle__'_closure
	.quad	GHC.IO.Handle.Internals.withHandle__'1_closure
	.quad	GHC.IO.Handle.Internals.withAllHandles__1_closure
	.quad	GHC.IO.Handle.Internals.$wwithHandle'_closure
	.quad	GHC.IO.Handle.Internals.withHandle1_closure
	.quad	GHC.IO.Handle.Internals.withHandle_'1_closure
	.quad	withHandle_2_ra7PG_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle2_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle_1_closure
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle5_closure
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle2_closure
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle3_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle7_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle11_closure
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle1_closure
	.quad	GHC.IO.Handle.Internals.flushBuffer2_closure
	.quad	GHC.IO.Handle.Internals.$wwantWritableHandle'_closure
	.quad	GHC.IO.Handle.Internals.wantWritableHandle1_closure
	.quad	withHandle2_ra7PH_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle1_closure


==================== Asm code ====================
2018-03-16 16:05:15.234611889 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.augmentIOError_closure
.type GHC.IO.Handle.Internals.augmentIOError_closure, @object
GHC.IO.Handle.Internals.augmentIOError_closure:
	.quad	GHC.IO.Handle.Internals.augmentIOError_info


==================== Asm code ====================
2018-03-16 16:05:15.235520325 UTC

.section .text
.align 8
sat_sacFH_entry:
_cadcs:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cadct
_cadcu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cadcl_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cadcl
_cadcm:
	movq (%rbx),%rax
	jmp *(%rax)
_cadct:
	jmp *-16(%r13)
	.size sat_sacFH_entry, .-sat_sacFH_entry


==================== Asm code ====================
2018-03-16 16:05:15.236161634 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sacFH_info:
	.quad	sat_sacFH_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:05:15.236912265 UTC

.section .text
.align 8
_cadcl:
_cadcl:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cadcp
_cadcq:
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cadcp:
	movq 8(%rbp),%rax
	leaq block_cadcx_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cadcx
_cadcz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadcl, .-_cadcl


==================== Asm code ====================
2018-03-16 16:05:15.237635399 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadcl_info:
	.quad	_cadcl
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.238481542 UTC

.section .text
.align 8
_cadcx:
_cadcx:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cadcF
_cadcM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cadcP
_cadcO:
	movq 6(%rbx),%rax
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cadcP:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cadcF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cadcP
_cadcH:
	movq 7(%rbx),%rax
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cadcx, .-_cadcx


==================== Asm code ====================
2018-03-16 16:05:15.239230923 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadcx_info:
	.quad	_cadcx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.239993639 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.augmentIOError_entry
.type GHC.IO.Handle.Internals.augmentIOError_entry, @object
GHC.IO.Handle.Internals.augmentIOError_entry:
_cadcW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cadcZ
_cadd0:
	leaq block_cadcc_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cadcc
_cadcd:
	movq (%rbx),%rax
	jmp *(%rax)
_cadcZ:
	leaq GHC.IO.Handle.Internals.augmentIOError_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.augmentIOError_entry, .-GHC.IO.Handle.Internals.augmentIOError_entry


==================== Asm code ====================
2018-03-16 16:05:15.240664858 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.augmentIOError_info
.type GHC.IO.Handle.Internals.augmentIOError_info, @object
GHC.IO.Handle.Internals.augmentIOError_info:
	.quad	GHC.IO.Handle.Internals.augmentIOError_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:05:15.241526946 UTC

.section .text
.align 8
_cadcc:
_cadcc:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cadd3
_cadd2:
	movq 15(%rbx),%rax
	movq 31(%rbx),%rcx
	movq 39(%rbx),%rdx
	movq 47(%rbx),%rbx
	leaq sat_sacFH_info(%rip),%rsi
	movq %rsi,-96(%r12)
	movq 16(%rbp),%rsi
	movq %rsi,-80(%r12)
	movq %rbx,-72(%r12)
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%r12)
	movq %rsi,-56(%r12)
	movq GHC.IO.Exception.IOError_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	leaq -62(%r12),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cadd3:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadcc, .-_cadcc


==================== Asm code ====================
2018-03-16 16:05:15.242269735 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadcc_info:
	.quad	_cadcc
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.243975915 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle14_bytes
.type GHC.IO.Handle.Internals.wantReadableHandle14_bytes, @object
GHC.IO.Handle.Internals.wantReadableHandle14_bytes:
	.asciz "handle is closed"


==================== Asm code ====================
2018-03-16 16:05:15.24664445 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle13_closure
.type GHC.IO.Handle.Internals.wantReadableHandle13_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle13_closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle13_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.247469958 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle13_entry
.type GHC.IO.Handle.Internals.wantReadableHandle13_entry, @object
GHC.IO.Handle.Internals.wantReadableHandle13_entry:
_caddS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caddT
_caddU:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _caddR
_caddQ:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Internals.wantReadableHandle14_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_caddT:
	jmp *-16(%r13)
_caddR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.wantReadableHandle13_entry, .-GHC.IO.Handle.Internals.wantReadableHandle13_entry


==================== Asm code ====================
2018-03-16 16:05:15.248191828 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle13_info
.type GHC.IO.Handle.Internals.wantReadableHandle13_info, @object
GHC.IO.Handle.Internals.wantReadableHandle13_info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle13_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:15.250077746 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle12_closure
.type GHC.IO.Handle.Internals.wantReadableHandle12_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle12_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.IllegalOperation_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.IO.Handle.Internals.wantReadableHandle13_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.25254345 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle11_closure
.type GHC.IO.Handle.Internals.wantReadableHandle11_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle11_closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle11_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.253407806 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle11_entry
.type GHC.IO.Handle.Internals.wantReadableHandle11_entry, @object
GHC.IO.Handle.Internals.wantReadableHandle11_entry:
_cadea:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadeb
_cadec:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cade9
_cade8:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Internals.wantReadableHandle12_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cadeb:
	jmp *-16(%r13)
_cade9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.wantReadableHandle11_entry, .-GHC.IO.Handle.Internals.wantReadableHandle11_entry


==================== Asm code ====================
2018-03-16 16:05:15.254150375 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle11_info
.type GHC.IO.Handle.Internals.wantReadableHandle11_info, @object
GHC.IO.Handle.Internals.wantReadableHandle11_info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle11_entry
	.quad	0
	.quad	12884901909
	.quad	Saded_srt


==================== Asm code ====================
2018-03-16 16:05:15.256175294 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_closedHandle1_closure
.type GHC.IO.Handle.Internals.ioe_closedHandle1_closure, @object
GHC.IO.Handle.Internals.ioe_closedHandle1_closure:
	.quad	GHC.IO.Handle.Internals.ioe_closedHandle1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.256808684 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_closedHandle1_entry
.type GHC.IO.Handle.Internals.ioe_closedHandle1_entry, @object
GHC.IO.Handle.Internals.ioe_closedHandle1_entry:
_cadeq:
	leaq GHC.IO.Handle.Internals.wantReadableHandle11_closure(%rip),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size GHC.IO.Handle.Internals.ioe_closedHandle1_entry, .-GHC.IO.Handle.Internals.ioe_closedHandle1_entry


==================== Asm code ====================
2018-03-16 16:05:15.257475698 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_closedHandle1_info
.type GHC.IO.Handle.Internals.ioe_closedHandle1_info, @object
GHC.IO.Handle.Internals.ioe_closedHandle1_info:
	.quad	GHC.IO.Handle.Internals.ioe_closedHandle1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Saded_srt+16


==================== Asm code ====================
2018-03-16 16:05:15.259619846 UTC

.section .data
.align 8
.align 1
ioe_closedHandle2_ra7Pb_closure:
	.quad	ioe_closedHandle2_ra7Pb_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.260259219 UTC

.section .text
.align 8
ioe_closedHandle2_ra7Pb_entry:
_cadeB:
	leaq GHC.IO.Handle.Internals.wantReadableHandle11_closure(%rip),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size ioe_closedHandle2_ra7Pb_entry, .-ioe_closedHandle2_ra7Pb_entry


==================== Asm code ====================
2018-03-16 16:05:15.260842642 UTC

.section .data.rel.ro
.align 8
.align 1
ioe_closedHandle2_ra7Pb_info:
	.quad	ioe_closedHandle2_ra7Pb_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Saded_srt+16


==================== Asm code ====================
2018-03-16 16:05:15.26394432 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_closedHandle_closure
.type GHC.IO.Handle.Internals.ioe_closedHandle_closure, @object
GHC.IO.Handle.Internals.ioe_closedHandle_closure:
	.quad	GHC.IO.Handle.Internals.ioe_closedHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.264541731 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_closedHandle_entry
.type GHC.IO.Handle.Internals.ioe_closedHandle_entry, @object
GHC.IO.Handle.Internals.ioe_closedHandle_entry:
_cadeM:
	jmp ioe_closedHandle2_ra7Pb_entry
	.size GHC.IO.Handle.Internals.ioe_closedHandle_entry, .-GHC.IO.Handle.Internals.ioe_closedHandle_entry


==================== Asm code ====================
2018-03-16 16:05:15.265189575 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_closedHandle_info
.type GHC.IO.Handle.Internals.ioe_closedHandle_info, @object
GHC.IO.Handle.Internals.ioe_closedHandle_info:
	.quad	GHC.IO.Handle.Internals.ioe_closedHandle_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Saded_srt+24


==================== Asm code ====================
2018-03-16 16:05:15.267024155 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle10_bytes
.type GHC.IO.Handle.Internals.wantReadableHandle10_bytes, @object
GHC.IO.Handle.Internals.wantReadableHandle10_bytes:
	.asciz "handle is semi-closed"


==================== Asm code ====================
2018-03-16 16:05:15.269632615 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle9_closure
.type GHC.IO.Handle.Internals.wantReadableHandle9_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle9_closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle9_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.270507897 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle9_entry
.type GHC.IO.Handle.Internals.wantReadableHandle9_entry, @object
GHC.IO.Handle.Internals.wantReadableHandle9_entry:
_cadf0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadf1
_cadf2:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cadeZ
_cadeY:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Internals.wantReadableHandle10_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cadf1:
	jmp *-16(%r13)
_cadeZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.wantReadableHandle9_entry, .-GHC.IO.Handle.Internals.wantReadableHandle9_entry


==================== Asm code ====================
2018-03-16 16:05:15.271235524 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle9_info
.type GHC.IO.Handle.Internals.wantReadableHandle9_info, @object
GHC.IO.Handle.Internals.wantReadableHandle9_info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle9_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:15.273009116 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle8_closure
.type GHC.IO.Handle.Internals.wantReadableHandle8_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle8_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.IllegalOperation_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.IO.Handle.Internals.wantReadableHandle9_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.275591463 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle7_closure
.type GHC.IO.Handle.Internals.wantReadableHandle7_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle7_closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle7_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.276423276 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle7_entry
.type GHC.IO.Handle.Internals.wantReadableHandle7_entry, @object
GHC.IO.Handle.Internals.wantReadableHandle7_entry:
_cadfi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadfj
_cadfk:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cadfh
_cadfg:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Internals.wantReadableHandle8_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cadfj:
	jmp *-16(%r13)
_cadfh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.wantReadableHandle7_entry, .-GHC.IO.Handle.Internals.wantReadableHandle7_entry


==================== Asm code ====================
2018-03-16 16:05:15.277167609 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle7_info
.type GHC.IO.Handle.Internals.wantReadableHandle7_info, @object
GHC.IO.Handle.Internals.wantReadableHandle7_info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle7_entry
	.quad	0
	.quad	73014444053
	.quad	Saded_srt


==================== Asm code ====================
2018-03-16 16:05:15.279593369 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_semiclosedHandle1_closure
.type GHC.IO.Handle.Internals.ioe_semiclosedHandle1_closure, @object
GHC.IO.Handle.Internals.ioe_semiclosedHandle1_closure:
	.quad	GHC.IO.Handle.Internals.ioe_semiclosedHandle1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.280211994 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry
.type GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry, @object
GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry:
_cadfx:
	leaq GHC.IO.Handle.Internals.wantReadableHandle7_closure(%rip),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry, .-GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry


==================== Asm code ====================
2018-03-16 16:05:15.280850397 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_semiclosedHandle1_info
.type GHC.IO.Handle.Internals.ioe_semiclosedHandle1_info, @object
GHC.IO.Handle.Internals.ioe_semiclosedHandle1_info:
	.quad	GHC.IO.Handle.Internals.ioe_semiclosedHandle1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Saded_srt+40


==================== Asm code ====================
2018-03-16 16:05:15.283024939 UTC

.section .data
.align 8
.align 1
ioe_semiclosedHandle2_ra7Pc_closure:
	.quad	ioe_semiclosedHandle2_ra7Pc_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.283618086 UTC

.section .text
.align 8
ioe_semiclosedHandle2_ra7Pc_entry:
_cadfI:
	leaq GHC.IO.Handle.Internals.wantReadableHandle7_closure(%rip),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size ioe_semiclosedHandle2_ra7Pc_entry, .-ioe_semiclosedHandle2_ra7Pc_entry


==================== Asm code ====================
2018-03-16 16:05:15.284185821 UTC

.section .data.rel.ro
.align 8
.align 1
ioe_semiclosedHandle2_ra7Pc_info:
	.quad	ioe_semiclosedHandle2_ra7Pc_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Saded_srt+40


==================== Asm code ====================
2018-03-16 16:05:15.286272589 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_semiclosedHandle_closure
.type GHC.IO.Handle.Internals.ioe_semiclosedHandle_closure, @object
GHC.IO.Handle.Internals.ioe_semiclosedHandle_closure:
	.quad	GHC.IO.Handle.Internals.ioe_semiclosedHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.286897933 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_semiclosedHandle_entry
.type GHC.IO.Handle.Internals.ioe_semiclosedHandle_entry, @object
GHC.IO.Handle.Internals.ioe_semiclosedHandle_entry:
_cadfT:
	jmp ioe_semiclosedHandle2_ra7Pc_entry
	.size GHC.IO.Handle.Internals.ioe_semiclosedHandle_entry, .-GHC.IO.Handle.Internals.ioe_semiclosedHandle_entry


==================== Asm code ====================
2018-03-16 16:05:15.287476922 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_semiclosedHandle_info
.type GHC.IO.Handle.Internals.ioe_semiclosedHandle_info, @object
GHC.IO.Handle.Internals.ioe_semiclosedHandle_info:
	.quad	GHC.IO.Handle.Internals.ioe_semiclosedHandle_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Saded_srt+48


==================== Asm code ====================
2018-03-16 16:05:15.289714116 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hLookAhead_4_closure
.type GHC.IO.Handle.Internals.hLookAhead_4_closure, @object
GHC.IO.Handle.Internals.hLookAhead_4_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.EOF_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:05:15.292179911 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hLookAhead_3_closure
.type GHC.IO.Handle.Internals.hLookAhead_3_closure, @object
GHC.IO.Handle.Internals.hLookAhead_3_closure:
	.quad	GHC.IO.Handle.Internals.hLookAhead_3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.293057277 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.hLookAhead_3_entry
.type GHC.IO.Handle.Internals.hLookAhead_3_entry, @object
GHC.IO.Handle.Internals.hLookAhead_3_entry:
_cadg7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadg8
_cadg9:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cadg6
_cadg5:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Internals.hLookAhead_4_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cadg8:
	jmp *-16(%r13)
_cadg6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.hLookAhead_3_entry, .-GHC.IO.Handle.Internals.hLookAhead_3_entry


==================== Asm code ====================
2018-03-16 16:05:15.29435919 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hLookAhead_3_info
.type GHC.IO.Handle.Internals.hLookAhead_3_info, @object
GHC.IO.Handle.Internals.hLookAhead_3_info:
	.quad	GHC.IO.Handle.Internals.hLookAhead_3_entry
	.quad	0
	.quad	4294967317
	.quad	Saded_srt


==================== Asm code ====================
2018-03-16 16:05:15.296465561 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_EOF1_closure
.type GHC.IO.Handle.Internals.ioe_EOF1_closure, @object
GHC.IO.Handle.Internals.ioe_EOF1_closure:
	.quad	GHC.IO.Handle.Internals.ioe_EOF1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.297097019 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_EOF1_entry
.type GHC.IO.Handle.Internals.ioe_EOF1_entry, @object
GHC.IO.Handle.Internals.ioe_EOF1_entry:
_cadgm:
	leaq GHC.IO.Handle.Internals.hLookAhead_3_closure(%rip),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size GHC.IO.Handle.Internals.ioe_EOF1_entry, .-GHC.IO.Handle.Internals.ioe_EOF1_entry


==================== Asm code ====================
2018-03-16 16:05:15.297768953 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_EOF1_info
.type GHC.IO.Handle.Internals.ioe_EOF1_info, @object
GHC.IO.Handle.Internals.ioe_EOF1_info:
	.quad	GHC.IO.Handle.Internals.ioe_EOF1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Saded_srt+56


==================== Asm code ====================
2018-03-16 16:05:15.299865267 UTC

.section .data
.align 8
.align 1
ioe_EOF2_ra7Pd_closure:
	.quad	ioe_EOF2_ra7Pd_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.300463216 UTC

.section .text
.align 8
ioe_EOF2_ra7Pd_entry:
_cadgx:
	leaq GHC.IO.Handle.Internals.hLookAhead_3_closure(%rip),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size ioe_EOF2_ra7Pd_entry, .-ioe_EOF2_ra7Pd_entry


==================== Asm code ====================
2018-03-16 16:05:15.301028938 UTC

.section .data.rel.ro
.align 8
.align 1
ioe_EOF2_ra7Pd_info:
	.quad	ioe_EOF2_ra7Pd_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Saded_srt+56


==================== Asm code ====================
2018-03-16 16:05:15.303513339 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_EOF_closure
.type GHC.IO.Handle.Internals.ioe_EOF_closure, @object
GHC.IO.Handle.Internals.ioe_EOF_closure:
	.quad	GHC.IO.Handle.Internals.ioe_EOF_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.304113912 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_EOF_entry
.type GHC.IO.Handle.Internals.ioe_EOF_entry, @object
GHC.IO.Handle.Internals.ioe_EOF_entry:
_cadgI:
	jmp ioe_EOF2_ra7Pd_entry
	.size GHC.IO.Handle.Internals.ioe_EOF_entry, .-GHC.IO.Handle.Internals.ioe_EOF_entry


==================== Asm code ====================
2018-03-16 16:05:15.304665995 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_EOF_info
.type GHC.IO.Handle.Internals.ioe_EOF_info, @object
GHC.IO.Handle.Internals.ioe_EOF_info:
	.quad	GHC.IO.Handle.Internals.ioe_EOF_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Saded_srt+64


==================== Asm code ====================
2018-03-16 16:05:15.30639086 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle6_bytes
.type GHC.IO.Handle.Internals.wantReadableHandle6_bytes, @object
GHC.IO.Handle.Internals.wantReadableHandle6_bytes:
	.asciz "handle is not open for reading"


==================== Asm code ====================
2018-03-16 16:05:15.308873953 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle5_closure
.type GHC.IO.Handle.Internals.wantReadableHandle5_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle5_closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.310174739 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle5_entry
.type GHC.IO.Handle.Internals.wantReadableHandle5_entry, @object
GHC.IO.Handle.Internals.wantReadableHandle5_entry:
_cadgW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadgX
_cadgY:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cadgV
_cadgU:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Internals.wantReadableHandle6_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cadgX:
	jmp *-16(%r13)
_cadgV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.wantReadableHandle5_entry, .-GHC.IO.Handle.Internals.wantReadableHandle5_entry


==================== Asm code ====================
2018-03-16 16:05:15.310917917 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle5_info
.type GHC.IO.Handle.Internals.wantReadableHandle5_info, @object
GHC.IO.Handle.Internals.wantReadableHandle5_info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:15.312777846 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle4_closure
.type GHC.IO.Handle.Internals.wantReadableHandle4_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle4_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.IllegalOperation_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.IO.Handle.Internals.wantReadableHandle5_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.315403071 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle3_closure
.type GHC.IO.Handle.Internals.wantReadableHandle3_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle3_closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.31627292 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle3_entry
.type GHC.IO.Handle.Internals.wantReadableHandle3_entry, @object
GHC.IO.Handle.Internals.wantReadableHandle3_entry:
_cadhe:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadhf
_cadhg:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cadhd
_cadhc:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Internals.wantReadableHandle4_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cadhf:
	jmp *-16(%r13)
_cadhd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.wantReadableHandle3_entry, .-GHC.IO.Handle.Internals.wantReadableHandle3_entry


==================== Asm code ====================
2018-03-16 16:05:15.317001325 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle3_info
.type GHC.IO.Handle.Internals.wantReadableHandle3_info, @object
GHC.IO.Handle.Internals.wantReadableHandle3_info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle3_entry
	.quad	0
	.quad	2203318222869
	.quad	Saded_srt


==================== Asm code ====================
2018-03-16 16:05:15.319120409 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_notReadable1_closure
.type GHC.IO.Handle.Internals.ioe_notReadable1_closure, @object
GHC.IO.Handle.Internals.ioe_notReadable1_closure:
	.quad	GHC.IO.Handle.Internals.ioe_notReadable1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.319742619 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_notReadable1_entry
.type GHC.IO.Handle.Internals.ioe_notReadable1_entry, @object
GHC.IO.Handle.Internals.ioe_notReadable1_entry:
_cadht:
	leaq GHC.IO.Handle.Internals.wantReadableHandle3_closure(%rip),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size GHC.IO.Handle.Internals.ioe_notReadable1_entry, .-GHC.IO.Handle.Internals.ioe_notReadable1_entry


==================== Asm code ====================
2018-03-16 16:05:15.32035304 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_notReadable1_info
.type GHC.IO.Handle.Internals.ioe_notReadable1_info, @object
GHC.IO.Handle.Internals.ioe_notReadable1_info:
	.quad	GHC.IO.Handle.Internals.ioe_notReadable1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Saded_srt+80


==================== Asm code ====================
2018-03-16 16:05:15.32245709 UTC

.section .data
.align 8
.align 1
ioe_notReadable2_ra7Pe_closure:
	.quad	ioe_notReadable2_ra7Pe_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.323068304 UTC

.section .text
.align 8
ioe_notReadable2_ra7Pe_entry:
_cadhE:
	leaq GHC.IO.Handle.Internals.wantReadableHandle3_closure(%rip),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size ioe_notReadable2_ra7Pe_entry, .-ioe_notReadable2_ra7Pe_entry


==================== Asm code ====================
2018-03-16 16:05:15.323626221 UTC

.section .data.rel.ro
.align 8
.align 1
ioe_notReadable2_ra7Pe_info:
	.quad	ioe_notReadable2_ra7Pe_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Saded_srt+80


==================== Asm code ====================
2018-03-16 16:05:15.32627158 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_notReadable_closure
.type GHC.IO.Handle.Internals.ioe_notReadable_closure, @object
GHC.IO.Handle.Internals.ioe_notReadable_closure:
	.quad	GHC.IO.Handle.Internals.ioe_notReadable_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.326881521 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_notReadable_entry
.type GHC.IO.Handle.Internals.ioe_notReadable_entry, @object
GHC.IO.Handle.Internals.ioe_notReadable_entry:
_cadhP:
	jmp ioe_notReadable2_ra7Pe_entry
	.size GHC.IO.Handle.Internals.ioe_notReadable_entry, .-GHC.IO.Handle.Internals.ioe_notReadable_entry


==================== Asm code ====================
2018-03-16 16:05:15.327476558 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_notReadable_info
.type GHC.IO.Handle.Internals.ioe_notReadable_info, @object
GHC.IO.Handle.Internals.ioe_notReadable_info:
	.quad	GHC.IO.Handle.Internals.ioe_notReadable_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Saded_srt+88


==================== Asm code ====================
2018-03-16 16:05:15.329209035 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Internals.wantWritableHandle5_bytes
.type GHC.IO.Handle.Internals.wantWritableHandle5_bytes, @object
GHC.IO.Handle.Internals.wantWritableHandle5_bytes:
	.asciz "handle is not open for writing"


==================== Asm code ====================
2018-03-16 16:05:15.332163959 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantWritableHandle4_closure
.type GHC.IO.Handle.Internals.wantWritableHandle4_closure, @object
GHC.IO.Handle.Internals.wantWritableHandle4_closure:
	.quad	GHC.IO.Handle.Internals.wantWritableHandle4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.333035421 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantWritableHandle4_entry
.type GHC.IO.Handle.Internals.wantWritableHandle4_entry, @object
GHC.IO.Handle.Internals.wantWritableHandle4_entry:
_cadi3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadi4
_cadi5:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cadi2
_cadi1:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Internals.wantWritableHandle5_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cadi4:
	jmp *-16(%r13)
_cadi2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.wantWritableHandle4_entry, .-GHC.IO.Handle.Internals.wantWritableHandle4_entry


==================== Asm code ====================
2018-03-16 16:05:15.333832152 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantWritableHandle4_info
.type GHC.IO.Handle.Internals.wantWritableHandle4_info, @object
GHC.IO.Handle.Internals.wantWritableHandle4_info:
	.quad	GHC.IO.Handle.Internals.wantWritableHandle4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:15.335585855 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantWritableHandle3_closure
.type GHC.IO.Handle.Internals.wantWritableHandle3_closure, @object
GHC.IO.Handle.Internals.wantWritableHandle3_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.IllegalOperation_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.IO.Handle.Internals.wantWritableHandle4_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.338277332 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantWritableHandle2_closure
.type GHC.IO.Handle.Internals.wantWritableHandle2_closure, @object
GHC.IO.Handle.Internals.wantWritableHandle2_closure:
	.quad	GHC.IO.Handle.Internals.wantWritableHandle2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.339118172 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantWritableHandle2_entry
.type GHC.IO.Handle.Internals.wantWritableHandle2_entry, @object
GHC.IO.Handle.Internals.wantWritableHandle2_entry:
_cadil:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadim
_cadin:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cadik
_cadij:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Internals.wantWritableHandle3_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cadim:
	jmp *-16(%r13)
_cadik:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.wantWritableHandle2_entry, .-GHC.IO.Handle.Internals.wantWritableHandle2_entry


==================== Asm code ====================
2018-03-16 16:05:15.339819986 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantWritableHandle2_info
.type GHC.IO.Handle.Internals.wantWritableHandle2_info, @object
GHC.IO.Handle.Internals.wantWritableHandle2_info:
	.quad	GHC.IO.Handle.Internals.wantWritableHandle2_entry
	.quad	0
	.quad	17596481011733
	.quad	Saded_srt


==================== Asm code ====================
2018-03-16 16:05:15.343034848 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_notWritable1_closure
.type GHC.IO.Handle.Internals.ioe_notWritable1_closure, @object
GHC.IO.Handle.Internals.ioe_notWritable1_closure:
	.quad	GHC.IO.Handle.Internals.ioe_notWritable1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.343629271 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_notWritable1_entry
.type GHC.IO.Handle.Internals.ioe_notWritable1_entry, @object
GHC.IO.Handle.Internals.ioe_notWritable1_entry:
_cadiA:
	leaq GHC.IO.Handle.Internals.wantWritableHandle2_closure(%rip),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size GHC.IO.Handle.Internals.ioe_notWritable1_entry, .-GHC.IO.Handle.Internals.ioe_notWritable1_entry


==================== Asm code ====================
2018-03-16 16:05:15.344236572 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_notWritable1_info
.type GHC.IO.Handle.Internals.ioe_notWritable1_info, @object
GHC.IO.Handle.Internals.ioe_notWritable1_info:
	.quad	GHC.IO.Handle.Internals.ioe_notWritable1_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Saded_srt+104


==================== Asm code ====================
2018-03-16 16:05:15.346407045 UTC

.section .data
.align 8
.align 1
ioe_notWritable2_ra7Pf_closure:
	.quad	ioe_notWritable2_ra7Pf_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.347050753 UTC

.section .text
.align 8
ioe_notWritable2_ra7Pf_entry:
_cadiL:
	leaq GHC.IO.Handle.Internals.wantWritableHandle2_closure(%rip),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size ioe_notWritable2_ra7Pf_entry, .-ioe_notWritable2_ra7Pf_entry


==================== Asm code ====================
2018-03-16 16:05:15.347591789 UTC

.section .data.rel.ro
.align 8
.align 1
ioe_notWritable2_ra7Pf_info:
	.quad	ioe_notWritable2_ra7Pf_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Saded_srt+104


==================== Asm code ====================
2018-03-16 16:05:15.349654282 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_notWritable_closure
.type GHC.IO.Handle.Internals.ioe_notWritable_closure, @object
GHC.IO.Handle.Internals.ioe_notWritable_closure:
	.quad	GHC.IO.Handle.Internals.ioe_notWritable_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.350245493 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_notWritable_entry
.type GHC.IO.Handle.Internals.ioe_notWritable_entry, @object
GHC.IO.Handle.Internals.ioe_notWritable_entry:
_cadiW:
	jmp ioe_notWritable2_ra7Pf_entry
	.size GHC.IO.Handle.Internals.ioe_notWritable_entry, .-GHC.IO.Handle.Internals.ioe_notWritable_entry


==================== Asm code ====================
2018-03-16 16:05:15.350842416 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_notWritable_info
.type GHC.IO.Handle.Internals.ioe_notWritable_info, @object
GHC.IO.Handle.Internals.ioe_notWritable_info:
	.quad	GHC.IO.Handle.Internals.ioe_notWritable_entry
	.quad	0
	.quad	4294967310
	.quad	4294967299
	.quad	Saded_srt+112


==================== Asm code ====================
2018-03-16 16:05:15.35259995 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle6_bytes
.type GHC.IO.Handle.Internals.wantSeekableHandle6_bytes, @object
GHC.IO.Handle.Internals.wantSeekableHandle6_bytes:
	.asciz "handle is not seekable"


==================== Asm code ====================
2018-03-16 16:05:15.35521209 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle5_closure
.type GHC.IO.Handle.Internals.wantSeekableHandle5_closure, @object
GHC.IO.Handle.Internals.wantSeekableHandle5_closure:
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.356085098 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantSeekableHandle5_entry
.type GHC.IO.Handle.Internals.wantSeekableHandle5_entry, @object
GHC.IO.Handle.Internals.wantSeekableHandle5_entry:
_cadja:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadjb
_cadjc:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cadj9
_cadj8:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Internals.wantSeekableHandle6_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cadjb:
	jmp *-16(%r13)
_cadj9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.wantSeekableHandle5_entry, .-GHC.IO.Handle.Internals.wantSeekableHandle5_entry


==================== Asm code ====================
2018-03-16 16:05:15.356822169 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle5_info
.type GHC.IO.Handle.Internals.wantSeekableHandle5_info, @object
GHC.IO.Handle.Internals.wantSeekableHandle5_info:
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:15.359352934 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle4_closure
.type GHC.IO.Handle.Internals.wantSeekableHandle4_closure, @object
GHC.IO.Handle.Internals.wantSeekableHandle4_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.IllegalOperation_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle5_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.361957322 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle3_closure
.type GHC.IO.Handle.Internals.wantSeekableHandle3_closure, @object
GHC.IO.Handle.Internals.wantSeekableHandle3_closure:
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.362873327 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantSeekableHandle3_entry
.type GHC.IO.Handle.Internals.wantSeekableHandle3_entry, @object
GHC.IO.Handle.Internals.wantSeekableHandle3_entry:
_cadjs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadjt
_cadju:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cadjr
_cadjq:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Internals.wantSeekableHandle4_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cadjt:
	jmp *-16(%r13)
_cadjr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.wantSeekableHandle3_entry, .-GHC.IO.Handle.Internals.wantSeekableHandle3_entry


==================== Asm code ====================
2018-03-16 16:05:15.36361591 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle3_info
.type GHC.IO.Handle.Internals.wantSeekableHandle3_info, @object
GHC.IO.Handle.Internals.wantSeekableHandle3_info:
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle3_entry
	.quad	0
	.quad	140741783322645
	.quad	Saded_srt


==================== Asm code ====================
2018-03-16 16:05:15.365403843 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer6_bytes
.type GHC.IO.Handle.Internals.flushBuffer6_bytes, @object
GHC.IO.Handle.Internals.flushBuffer6_bytes:
	.asciz "cannot flush the read buffer: underlying device is not seekable"


==================== Asm code ====================
2018-03-16 16:05:15.367880136 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer5_closure
.type GHC.IO.Handle.Internals.flushBuffer5_closure, @object
GHC.IO.Handle.Internals.flushBuffer5_closure:
	.quad	GHC.IO.Handle.Internals.flushBuffer5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.368731132 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushBuffer5_entry
.type GHC.IO.Handle.Internals.flushBuffer5_entry, @object
GHC.IO.Handle.Internals.flushBuffer5_entry:
_cadjK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadjL
_cadjM:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cadjJ
_cadjI:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Internals.flushBuffer6_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cadjL:
	jmp *-16(%r13)
_cadjJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.flushBuffer5_entry, .-GHC.IO.Handle.Internals.flushBuffer5_entry


==================== Asm code ====================
2018-03-16 16:05:15.370110254 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer5_info
.type GHC.IO.Handle.Internals.flushBuffer5_info, @object
GHC.IO.Handle.Internals.flushBuffer5_info:
	.quad	GHC.IO.Handle.Internals.flushBuffer5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:15.371959448 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer4_closure
.type GHC.IO.Handle.Internals.flushBuffer4_closure, @object
GHC.IO.Handle.Internals.flushBuffer4_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.IllegalOperation_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	GHC.IO.Handle.Internals.flushBuffer5_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.37459793 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer3_closure
.type GHC.IO.Handle.Internals.flushBuffer3_closure, @object
GHC.IO.Handle.Internals.flushBuffer3_closure:
	.quad	GHC.IO.Handle.Internals.flushBuffer3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.375416339 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushBuffer3_entry
.type GHC.IO.Handle.Internals.flushBuffer3_entry, @object
GHC.IO.Handle.Internals.flushBuffer3_entry:
_cadk2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadk3
_cadk4:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cadk1
_cadk0:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Internals.flushBuffer4_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cadk3:
	jmp *-16(%r13)
_cadk1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.flushBuffer3_entry, .-GHC.IO.Handle.Internals.flushBuffer3_entry


==================== Asm code ====================
2018-03-16 16:05:15.376148182 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer3_info
.type GHC.IO.Handle.Internals.flushBuffer3_info, @object
GHC.IO.Handle.Internals.flushBuffer3_info:
	.quad	GHC.IO.Handle.Internals.flushBuffer3_entry
	.quad	0
	.quad	281479271677973
	.quad	Saded_srt


==================== Asm code ====================
2018-03-16 16:05:15.378232667 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_ra7Pg_bytes:
	.asciz "hSetBuffering"


==================== Asm code ====================
2018-03-16 16:05:15.380682306 UTC

.section .data
.align 8
.align 1
lvl1_ra7Ph_closure:
	.quad	lvl1_ra7Ph_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.381526929 UTC

.section .text
.align 8
lvl1_ra7Ph_entry:
_cadkk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadkl
_cadkm:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cadkj
_cadki:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl_ra7Pg_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cadkl:
	jmp *-16(%r13)
_cadkj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl1_ra7Ph_entry, .-lvl1_ra7Ph_entry


==================== Asm code ====================
2018-03-16 16:05:15.382223589 UTC

.section .data.rel.ro
.align 8
.align 1
lvl1_ra7Ph_info:
	.quad	lvl1_ra7Ph_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:15.383886755 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl2_ra7Pi_bytes:
	.asciz "illegal buffer size "


==================== Asm code ====================
2018-03-16 16:05:15.38905876 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wioe_bufsiz_closure
.type GHC.IO.Handle.Internals.$wioe_bufsiz_closure, @object
GHC.IO.Handle.Internals.$wioe_bufsiz_closure:
	.quad	GHC.IO.Handle.Internals.$wioe_bufsiz_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.389868253 UTC

.section .text
.align 8
sat_sacFX_entry:
_cadkP:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cadkQ
_cadkR:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cadkM_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 16(%rbx),%rsi
	movl $9,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
_cadkQ:
	jmp *-16(%r13)
	.size sat_sacFX_entry, .-sat_sacFX_entry


==================== Asm code ====================
2018-03-16 16:05:15.39059737 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sacFX_info:
	.quad	sat_sacFX_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:05:15.391338506 UTC

.section .text
.align 8
_cadkM:
_cadkM:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cadkU
_cadkT:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cadkU:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cadkM, .-_cadkM


==================== Asm code ====================
2018-03-16 16:05:15.391995765 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadkM_info:
	.quad	_cadkM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.39411162 UTC

.section .text
.align 8
sat_sacFY_entry:
_cadkV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadkW
_cadkX:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cadkZ
_cadkY:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq sat_sacFX_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	leaq lvl2_ra7Pi_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_cadkZ:
	movq $24,904(%r13)
_cadkW:
	jmp *-16(%r13)
	.size sat_sacFY_entry, .-sat_sacFY_entry


==================== Asm code ====================
2018-03-16 16:05:15.39483887 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sacFY_info:
	.quad	sat_sacFY_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:05:15.395685343 UTC

.section .text
.align 8
sat_sacG0_entry:
_cadl1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadl2
_cadl3:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cadl5
_cadl4:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq sat_sacFY_info(%rip),%rbx
	movq %rbx,-72(%r12)
	movq %rax,-56(%r12)
	movq GHC.IO.Exception.IOError_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	movq GHC.IO.Exception.InvalidArgument_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	leaq lvl1_ra7Ph_closure(%rip),%rax
	movq %rax,-24(%r12)
	leaq -72(%r12),%rax
	movq %rax,-16(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cadl5:
	movq $80,904(%r13)
_cadl2:
	jmp *-16(%r13)
	.size sat_sacG0_entry, .-sat_sacG0_entry


==================== Asm code ====================
2018-03-16 16:05:15.396482742 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sacG0_info:
	.quad	sat_sacG0_entry
	.quad	4294967296
	.quad	562954248388625
	.quad	Saded_srt


==================== Asm code ====================
2018-03-16 16:05:15.39727821 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.$wioe_bufsiz_entry
.type GHC.IO.Handle.Internals.$wioe_bufsiz_entry, @object
GHC.IO.Handle.Internals.$wioe_bufsiz_entry:
_cadl6:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cadla
_cadl9:
	leaq sat_sacG0_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
_cadla:
	movq $24,904(%r13)
	leaq GHC.IO.Handle.Internals.$wioe_bufsiz_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.$wioe_bufsiz_entry, .-GHC.IO.Handle.Internals.$wioe_bufsiz_entry


==================== Asm code ====================
2018-03-16 16:05:15.397950653 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wioe_bufsiz_info
.type GHC.IO.Handle.Internals.$wioe_bufsiz_info, @object
GHC.IO.Handle.Internals.$wioe_bufsiz_info:
	.quad	GHC.IO.Handle.Internals.$wioe_bufsiz_entry
	.quad	0
	.quad	1688854155231246
	.quad	8589934596
	.quad	Saded_srt


==================== Asm code ====================
2018-03-16 16:05:15.400793456 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_bufsiz1_closure
.type GHC.IO.Handle.Internals.ioe_bufsiz1_closure, @object
GHC.IO.Handle.Internals.ioe_bufsiz1_closure:
	.quad	GHC.IO.Handle.Internals.ioe_bufsiz1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.401611043 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_bufsiz1_entry
.type GHC.IO.Handle.Internals.ioe_bufsiz1_entry, @object
GHC.IO.Handle.Internals.ioe_bufsiz1_entry:
_cadlW:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cadlX
_cadlY:
	leaq block_cadlT_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cadlT
_cadlU:
	movq (%rbx),%rax
	jmp *(%rax)
_cadlX:
	leaq GHC.IO.Handle.Internals.ioe_bufsiz1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.ioe_bufsiz1_entry, .-GHC.IO.Handle.Internals.ioe_bufsiz1_entry


==================== Asm code ====================
2018-03-16 16:05:15.402268383 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_bufsiz1_info
.type GHC.IO.Handle.Internals.ioe_bufsiz1_info, @object
GHC.IO.Handle.Internals.ioe_bufsiz1_info:
	.quad	GHC.IO.Handle.Internals.ioe_bufsiz1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	Saded_srt+144


==================== Asm code ====================
2018-03-16 16:05:15.402910761 UTC

.section .text
.align 8
_cadlT:
_cadlT:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.IO.Handle.Internals.$wioe_bufsiz_entry
	.size _cadlT, .-_cadlT


==================== Asm code ====================
2018-03-16 16:05:15.403490801 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadlT_info:
	.quad	_cadlT
	.quad	0
	.quad	4294967326
	.quad	Saded_srt+144


==================== Asm code ====================
2018-03-16 16:05:15.405842771 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_bufsiz_closure
.type GHC.IO.Handle.Internals.ioe_bufsiz_closure, @object
GHC.IO.Handle.Internals.ioe_bufsiz_closure:
	.quad	GHC.IO.Handle.Internals.ioe_bufsiz_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.406520362 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_bufsiz_entry
.type GHC.IO.Handle.Internals.ioe_bufsiz_entry, @object
GHC.IO.Handle.Internals.ioe_bufsiz_entry:
_cadmh:
	jmp GHC.IO.Handle.Internals.ioe_bufsiz1_entry
	.size GHC.IO.Handle.Internals.ioe_bufsiz_entry, .-GHC.IO.Handle.Internals.ioe_bufsiz_entry


==================== Asm code ====================
2018-03-16 16:05:15.407113353 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_bufsiz_info
.type GHC.IO.Handle.Internals.ioe_bufsiz_info, @object
GHC.IO.Handle.Internals.ioe_bufsiz_info:
	.quad	GHC.IO.Handle.Internals.ioe_bufsiz_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	Saded_srt+152


==================== Asm code ====================
2018-03-16 16:05:15.414089552 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wstreamEncode_closure
.type GHC.IO.Handle.Internals.$wstreamEncode_closure, @object
GHC.IO.Handle.Internals.$wstreamEncode_closure:
	.quad	GHC.IO.Handle.Internals.$wstreamEncode_info


==================== Asm code ====================
2018-03-16 16:05:15.414837719 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.$wstreamEncode_entry
.type GHC.IO.Handle.Internals.$wstreamEncode_entry, @object
GHC.IO.Handle.Internals.$wstreamEncode_entry:
_cadmu:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cadmv
_cadmw:
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp _cadmy
_cadmv:
	leaq GHC.IO.Handle.Internals.$wstreamEncode_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.$wstreamEncode_entry, .-GHC.IO.Handle.Internals.$wstreamEncode_entry


==================== Asm code ====================
2018-03-16 16:05:15.41552938 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wstreamEncode_info
.type GHC.IO.Handle.Internals.$wstreamEncode_info, @object
GHC.IO.Handle.Internals.$wstreamEncode_info:
	.quad	GHC.IO.Handle.Internals.$wstreamEncode_entry
	.quad	0
	.quad	14
	.quad	21474836504


==================== Asm code ====================
2018-03-16 16:05:15.416233307 UTC

.section .text
.align 8
_cadmy:
_cadmy:
	leaq block_cadmA_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	movq (%rbp),%rbx
	addq $-8,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
	.size _cadmy, .-_cadmy


==================== Asm code ====================
2018-03-16 16:05:15.417030276 UTC

.section .text
.align 8
_cadmA:
_cadmA:
	leaq block_cadmC_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cadmC
_cadmF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadmA, .-_cadmA


==================== Asm code ====================
2018-03-16 16:05:15.417660317 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadmA_info:
	.quad	_cadmA
	.quad	516
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.418355909 UTC

.section .text
.align 8
_cadmC:
_cadmC:
	leaq block_cadmJ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 7(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cadmJ
_cadmL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadmC, .-_cadmC


==================== Asm code ====================
2018-03-16 16:05:15.419013454 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadmC_info:
	.quad	_cadmC
	.quad	516
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.419826593 UTC

.section .text
.align 8
_cadmJ:
_cadmJ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	je _cadn4
_cadmR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cadmU
_cadmT:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cadn4:
	leaq block_cadmX_info(%rip),%rax
	movq %rax,(%rbp)
	movq 32(%rbp),%rbx
	testb $7,%bl
	jne _cadmX
_cadmY:
	movq (%rbx),%rax
	jmp *(%rax)
_cadmU:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadmJ, .-_cadmJ


==================== Asm code ====================
2018-03-16 16:05:15.420558215 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadmJ_info:
	.quad	_cadmJ
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.421268237 UTC

.section .text
.align 8
_cadmX:
_cadmX:
	leaq block_cadn2_info(%rip),%rax
	movq %rax,(%rbp)
	movq 39(%rbx),%rax
	movq 40(%rbp),%rbx
	movq %rax,40(%rbp)
	testb $7,%bl
	jne _cadn2
_cadn6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadmX, .-_cadmX


==================== Asm code ====================
2018-03-16 16:05:15.421898342 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadmX_info:
	.quad	_cadmX
	.quad	517
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.422718786 UTC

.section .text
.align 8
_cadn2:
_cadn2:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cadnc
_cadnb:
	movq 8(%rbp),%rax
	movq 40(%rbp),%rcx
	cmpq 39(%rbx),%rcx
	je _cadnn
_cadni:
	movq (,)_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cadnn:
	addq $-24,%r12
	leaq block_cadnk_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	movq 24(%rbp),%rbx
	addq $8,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
_cadnc:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadn2, .-_cadn2


==================== Asm code ====================
2018-03-16 16:05:15.423452596 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadn2_info:
	.quad	_cadn2
	.quad	1541
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.424115335 UTC

.section .text
.align 8
_cadnk:
_cadnk:
	leaq block_cadnm_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cadnm
_cadnp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadnk, .-_cadnk


==================== Asm code ====================
2018-03-16 16:05:15.424737466 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadnk_info:
	.quad	_cadnk
	.quad	772
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.425648842 UTC

.section .text
.align 8
_cadnm:
_cadnm:
	movq 7(%rbx),%rax
	movq %rax,24(%rbp)
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp _cadmy
	.size _cadnm, .-_cadnm


==================== Asm code ====================
2018-03-16 16:05:15.426286564 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadnm_info:
	.quad	_cadnm
	.quad	772
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.428048817 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.dEFAULT_CHAR_BUFFER_SIZE_closure
.type GHC.IO.Handle.Internals.dEFAULT_CHAR_BUFFER_SIZE_closure, @object
GHC.IO.Handle.Internals.dEFAULT_CHAR_BUFFER_SIZE_closure:
	.quad	GHC.Types.I#_con_info
	.quad	2048


==================== Asm code ====================
2018-03-16 16:05:15.431620057 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.initBufferState_closure
.type GHC.IO.Handle.Internals.initBufferState_closure, @object
GHC.IO.Handle.Internals.initBufferState_closure:
	.quad	GHC.IO.Handle.Internals.initBufferState_info


==================== Asm code ====================
2018-03-16 16:05:15.432423448 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.initBufferState_entry
.type GHC.IO.Handle.Internals.initBufferState_entry, @object
GHC.IO.Handle.Internals.initBufferState_entry:
_cadoF:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cadoG
_cadoH:
	leaq block_cadoy_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cadoy
_cadoz:
	movq (%rbx),%rax
	jmp *(%rax)
_cadoG:
	leaq GHC.IO.Handle.Internals.initBufferState_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.initBufferState_entry, .-GHC.IO.Handle.Internals.initBufferState_entry


==================== Asm code ====================
2018-03-16 16:05:15.433069438 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.initBufferState_info
.type GHC.IO.Handle.Internals.initBufferState_info, @object
GHC.IO.Handle.Internals.initBufferState_info:
	.quad	GHC.IO.Handle.Internals.initBufferState_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:05:15.433846704 UTC

.section .text
.align 8
_cadoy:
_cadoy:
	andl $7,%ebx
	cmpq $3,%rbx
	je _cadoD
_cadoC:
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cadoD:
	movq GHC.IO.Buffer.ReadBuffer_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cadoy, .-_cadoy


==================== Asm code ====================
2018-03-16 16:05:15.434509861 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadoy_info:
	.quad	_cadoy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.438340007 UTC

.section .data
.align 8
.align 1
lvl3_ra7Pj_closure:
	.quad	lvl3_ra7Pj_info


==================== Asm code ====================
2018-03-16 16:05:15.439026549 UTC

.section .text
.align 8
lvl3_ra7Pj_entry:
_cadpi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadpl
_cadpm:
	leaq block_cadp9_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *stg_noDuplicate#@gotpcrel(%rip)
_cadpl:
	leaq lvl3_ra7Pj_closure(%rip),%rbx
	jmp *-8(%r13)
	.size lvl3_ra7Pj_entry, .-lvl3_ra7Pj_entry


==================== Asm code ====================
2018-03-16 16:05:15.439654631 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_ra7Pj_info:
	.quad	lvl3_ra7Pj_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:15.44032798 UTC

.section .text
.align 8
_cadp9:
_cadp9:
	leaq block_cadpb_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _cadp9, .-_cadp9


==================== Asm code ====================
2018-03-16 16:05:15.440953276 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadp9_info:
	.quad	_cadp9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.441683075 UTC

.section .text
.align 8
_cadpb:
_cadpb:
	leaq block_cadpd_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movl $4,%ebx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_newPinnedByteArray#@gotpcrel(%rip)
	.size _cadpb, .-_cadpb


==================== Asm code ====================
2018-03-16 16:05:15.44229427 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadpb_info:
	.quad	_cadpb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.443145162 UTC

.section .text
.align 8
_cadpd:
_cadpd:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cadpr
_cadpq:
	movq GHC.ForeignPtr.MallocPtr_con_info@gotpcrel(%rip),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -70(%r12),%rax
	movq %rax,-40(%r12)
	movq GHC.IO.Buffer.ReadBuffer_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	leaq 16(%rbx),%rax
	movq %rax,-24(%r12)
	movq $1,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cadpr:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadpd, .-_cadpd


==================== Asm code ====================
2018-03-16 16:05:15.443921085 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadpd_info:
	.quad	_cadpd
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.446788487 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.noCharBuffer_closure
.type GHC.IO.Handle.Internals.noCharBuffer_closure, @object
GHC.IO.Handle.Internals.noCharBuffer_closure:
	.quad	GHC.IO.Handle.Internals.noCharBuffer_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.447620726 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.noCharBuffer_entry
.type GHC.IO.Handle.Internals.noCharBuffer_entry, @object
GHC.IO.Handle.Internals.noCharBuffer_entry:
_cadq0:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cadq1
_cadq2:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cadpX
_cadpW:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_cadpY_info(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-24,%rbp
	jmp lvl3_ra7Pj_entry
_cadq1:
	jmp *-16(%r13)
_cadpX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.noCharBuffer_entry, .-GHC.IO.Handle.Internals.noCharBuffer_entry


==================== Asm code ====================
2018-03-16 16:05:15.44834441 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.noCharBuffer_info
.type GHC.IO.Handle.Internals.noCharBuffer_info, @object
GHC.IO.Handle.Internals.noCharBuffer_info:
	.quad	GHC.IO.Handle.Internals.noCharBuffer_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:15.44900478 UTC

.section .text
.align 8
_cadpY:
_cadpY:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadpY, .-_cadpY


==================== Asm code ====================
2018-03-16 16:05:15.449631321 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadpY_info:
	.quad	_cadpY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.453111711 UTC

.section .data
.align 8
.align 1
lvl4_ra7Pk_closure:
	.quad	lvl4_ra7Pk_info


==================== Asm code ====================
2018-03-16 16:05:15.454128213 UTC

.section .text
.align 8
lvl4_ra7Pk_entry:
_cadqv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadqy
_cadqz:
	leaq block_cadqm_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *stg_noDuplicate#@gotpcrel(%rip)
_cadqy:
	leaq lvl4_ra7Pk_closure(%rip),%rbx
	jmp *-8(%r13)
	.size lvl4_ra7Pk_entry, .-lvl4_ra7Pk_entry


==================== Asm code ====================
2018-03-16 16:05:15.454763623 UTC

.section .data.rel.ro
.align 8
.align 1
lvl4_ra7Pk_info:
	.quad	lvl4_ra7Pk_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:15.455415247 UTC

.section .text
.align 8
_cadqm:
_cadqm:
	leaq block_cadqo_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _cadqm, .-_cadqm


==================== Asm code ====================
2018-03-16 16:05:15.456049874 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadqm_info:
	.quad	_cadqm
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.45674642 UTC

.section .text
.align 8
_cadqo:
_cadqo:
	leaq block_cadqq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movl $1,%ebx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_newPinnedByteArray#@gotpcrel(%rip)
	.size _cadqo, .-_cadqo


==================== Asm code ====================
2018-03-16 16:05:15.457406401 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadqo_info:
	.quad	_cadqo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.458183228 UTC

.section .text
.align 8
_cadqq:
_cadqq:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cadqE
_cadqD:
	movq GHC.ForeignPtr.MallocPtr_con_info@gotpcrel(%rip),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -70(%r12),%rax
	movq %rax,-40(%r12)
	movq GHC.IO.Buffer.ReadBuffer_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	leaq 16(%rbx),%rax
	movq %rax,-24(%r12)
	movq $1,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cadqE:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadqq, .-_cadqq


==================== Asm code ====================
2018-03-16 16:05:15.458929076 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadqq_info:
	.quad	_cadqq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.4618672 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.noByteBuffer_closure
.type GHC.IO.Handle.Internals.noByteBuffer_closure, @object
GHC.IO.Handle.Internals.noByteBuffer_closure:
	.quad	GHC.IO.Handle.Internals.noByteBuffer_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.462664436 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.noByteBuffer_entry
.type GHC.IO.Handle.Internals.noByteBuffer_entry, @object
GHC.IO.Handle.Internals.noByteBuffer_entry:
_cadrd:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cadre
_cadrf:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cadra
_cadr9:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_cadrb_info(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-24,%rbp
	jmp lvl4_ra7Pk_entry
_cadre:
	jmp *-16(%r13)
_cadra:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.noByteBuffer_entry, .-GHC.IO.Handle.Internals.noByteBuffer_entry


==================== Asm code ====================
2018-03-16 16:05:15.46337417 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.noByteBuffer_info
.type GHC.IO.Handle.Internals.noByteBuffer_info, @object
GHC.IO.Handle.Internals.noByteBuffer_info:
	.quad	GHC.IO.Handle.Internals.noByteBuffer_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:15.464004278 UTC

.section .text
.align 8
_cadrb:
_cadrb:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadrb, .-_cadrb


==================== Asm code ====================
2018-03-16 16:05:15.464587809 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadrb_info:
	.quad	_cadrb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.4667874 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Internals.$trModule4_bytes
.type GHC.IO.Handle.Internals.$trModule4_bytes, @object
GHC.IO.Handle.Internals.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:05:15.468493046 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$trModule3_closure
.type GHC.IO.Handle.Internals.$trModule3_closure, @object
GHC.IO.Handle.Internals.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Internals.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:05:15.470568374 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Internals.$trModule2_bytes
.type GHC.IO.Handle.Internals.$trModule2_bytes, @object
GHC.IO.Handle.Internals.$trModule2_bytes:
	.asciz "GHC.IO.Handle.Internals"


==================== Asm code ====================
2018-03-16 16:05:15.472223998 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$trModule1_closure
.type GHC.IO.Handle.Internals.$trModule1_closure, @object
GHC.IO.Handle.Internals.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Internals.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:05:15.47395261 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$trModule_closure
.type GHC.IO.Handle.Internals.$trModule_closure, @object
GHC.IO.Handle.Internals.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.IO.Handle.Internals.$trModule3_closure+1
	.quad	GHC.IO.Handle.Internals.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:05:15.47558902 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl5_ra7Pl_bytes:
	.asciz "handle is finalized"


==================== Asm code ====================
2018-03-16 16:05:15.478179617 UTC

.section .data
.align 8
.align 1
lvl6_ra7Pm_closure:
	.quad	lvl6_ra7Pm_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.479088688 UTC

.section .text
.align 8
lvl6_ra7Pm_entry:
_cadrH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadrI
_cadrJ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cadrG
_cadrF:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl5_ra7Pl_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cadrI:
	jmp *-16(%r13)
_cadrG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl6_ra7Pm_entry, .-lvl6_ra7Pm_entry


==================== Asm code ====================
2018-03-16 16:05:15.479815909 UTC

.section .data.rel.ro
.align 8
.align 1
lvl6_ra7Pm_info:
	.quad	lvl6_ra7Pm_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:15.482461111 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_finalizedHandle_closure
.type GHC.IO.Handle.Internals.ioe_finalizedHandle_closure, @object
GHC.IO.Handle.Internals.ioe_finalizedHandle_closure:
	.quad	GHC.IO.Handle.Internals.ioe_finalizedHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.483310272 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.ioe_finalizedHandle_entry
.type GHC.IO.Handle.Internals.ioe_finalizedHandle_entry, @object
GHC.IO.Handle.Internals.ioe_finalizedHandle_entry:
_cadrY:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cads2
_cads1:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-56(%r12)
	movq GHC.IO.Exception.IOError_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-40(%r12)
	movq GHC.IO.Exception.IllegalOperation_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-24(%r12)
	leaq lvl6_ra7Pm_closure(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%r12)
	leaq -62(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rsi
	movq GHC.IO.Exception.$fExceptionIOException_closure@gotpcrel(%rip),%r14
	jmp *GHC.Exception.throw_entry@gotpcrel(%rip)
_cads2:
	movq $72,904(%r13)
	leaq GHC.IO.Handle.Internals.ioe_finalizedHandle_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.ioe_finalizedHandle_entry, .-GHC.IO.Handle.Internals.ioe_finalizedHandle_entry


==================== Asm code ====================
2018-03-16 16:05:15.484066763 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.ioe_finalizedHandle_info
.type GHC.IO.Handle.Internals.ioe_finalizedHandle_info, @object
GHC.IO.Handle.Internals.ioe_finalizedHandle_info:
	.quad	GHC.IO.Handle.Internals.ioe_finalizedHandle_entry
	.quad	0
	.quad	30064771086
	.quad	4294967301
	.quad	Saded_srt+160


==================== Asm code ====================
2018-03-16 16:05:15.490232378 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.closeTextCodecs1_closure
.type GHC.IO.Handle.Internals.closeTextCodecs1_closure, @object
GHC.IO.Handle.Internals.closeTextCodecs1_closure:
	.quad	GHC.IO.Handle.Internals.closeTextCodecs1_info


==================== Asm code ====================
2018-03-16 16:05:15.4909716 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.closeTextCodecs1_entry
.type GHC.IO.Handle.Internals.closeTextCodecs1_entry, @object
GHC.IO.Handle.Internals.closeTextCodecs1_entry:
_cadsq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadsr
_cadss:
	leaq block_cadsn_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cadsn
_cadso:
	movq (%rbx),%rax
	jmp *(%rax)
_cadsr:
	leaq GHC.IO.Handle.Internals.closeTextCodecs1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.closeTextCodecs1_entry, .-GHC.IO.Handle.Internals.closeTextCodecs1_entry


==================== Asm code ====================
2018-03-16 16:05:15.491618185 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.closeTextCodecs1_info
.type GHC.IO.Handle.Internals.closeTextCodecs1_info, @object
GHC.IO.Handle.Internals.closeTextCodecs1_info:
	.quad	GHC.IO.Handle.Internals.closeTextCodecs1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:15.492345812 UTC

.section .text
.align 8
_cadsn:
_cadsn:
	leaq block_cadsv_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 87(%rbx),%rax
	movq 95(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cadsv
_cadsx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadsn, .-_cadsn


==================== Asm code ====================
2018-03-16 16:05:15.492926573 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadsn_info:
	.quad	_cadsn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.494333242 UTC

.section .text
.align 8
_cadsv:
_cadsv:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cadsE
_cadt0:
	leaq block_cadsY_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cadsY
_cadt1:
	movq (%rbx),%rax
	jmp *(%rax)
_cadsE:
	movq 8(%rbp),%rax
	leaq block_cadsB_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cadsB
_cadsF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadsv, .-_cadsv


==================== Asm code ====================
2018-03-16 16:05:15.495019844 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadsv_info:
	.quad	_cadsv
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.495744217 UTC

.section .text
.align 8
_cadsB:
_cadsB:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uadtv
_cadsQ:
	leaq block_cadsO_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cadsO
_cadsR:
	movq (%rbx),%rax
	jmp *(%rax)
_uadtv:
	addq $8,%rbp
	jmp _cadtg
	.size _cadsB, .-_cadsB


==================== Asm code ====================
2018-03-16 16:05:15.496406287 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadsB_info:
	.quad	_cadsB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.497007029 UTC

.section .text
.align 8
_cadsO:
_cadsO:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cadsO, .-_cadsO


==================== Asm code ====================
2018-03-16 16:05:15.497640551 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadsO_info:
	.quad	_cadsO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.498270578 UTC

.section .text
.align 8
_cadsY:
_cadsY:
	leaq block_cadt5_info(%rip),%rax
	movq %rax,(%rbp)
	movq 23(%rbx),%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cadsY, .-_cadsY


==================== Asm code ====================
2018-03-16 16:05:15.498816727 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadsY_info:
	.quad	_cadsY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.499483998 UTC

.section .text
.align 8
_cadt5:
_cadt5:
	movq 8(%rbp),%rax
	leaq block_cadt7_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cadt7
_cadta:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadt5, .-_cadt5


==================== Asm code ====================
2018-03-16 16:05:15.500600783 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadt5_info:
	.quad	_cadt5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.501407367 UTC

.section .text
.align 8
_cadt7:
_cadt7:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uadtu
_cadtl:
	leaq block_cadtj_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cadtj
_cadtm:
	movq (%rbx),%rax
	jmp *(%rax)
_uadtu:
	addq $8,%rbp
	jmp _cadtg
	.size _cadt7, .-_cadt7


==================== Asm code ====================
2018-03-16 16:05:15.502051785 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadt7_info:
	.quad	_cadt7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.502671508 UTC

.section .text
.align 8
_cadtg:
_cadtg:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cadtg, .-_cadtg


==================== Asm code ====================
2018-03-16 16:05:15.503305288 UTC

.section .text
.align 8
_cadtj:
_cadtj:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cadtj, .-_cadtj


==================== Asm code ====================
2018-03-16 16:05:15.503849379 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadtj_info:
	.quad	_cadtj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.506161073 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.closeTextCodecs_closure
.type GHC.IO.Handle.Internals.closeTextCodecs_closure, @object
GHC.IO.Handle.Internals.closeTextCodecs_closure:
	.quad	GHC.IO.Handle.Internals.closeTextCodecs_info


==================== Asm code ====================
2018-03-16 16:05:15.506761808 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.closeTextCodecs_entry
.type GHC.IO.Handle.Internals.closeTextCodecs_entry, @object
GHC.IO.Handle.Internals.closeTextCodecs_entry:
_caduB:
	jmp GHC.IO.Handle.Internals.closeTextCodecs1_entry
	.size GHC.IO.Handle.Internals.closeTextCodecs_entry, .-GHC.IO.Handle.Internals.closeTextCodecs_entry


==================== Asm code ====================
2018-03-16 16:05:15.507314806 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.closeTextCodecs_info
.type GHC.IO.Handle.Internals.closeTextCodecs_info, @object
GHC.IO.Handle.Internals.closeTextCodecs_info:
	.quad	GHC.IO.Handle.Internals.closeTextCodecs_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:15.515629214 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.openTextEncoding1_closure
.type GHC.IO.Handle.Internals.openTextEncoding1_closure, @object
GHC.IO.Handle.Internals.openTextEncoding1_closure:
	.quad	GHC.IO.Handle.Internals.openTextEncoding1_info


==================== Asm code ====================
2018-03-16 16:05:15.51648168 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.openTextEncoding1_entry
.type GHC.IO.Handle.Internals.openTextEncoding1_entry, @object
GHC.IO.Handle.Internals.openTextEncoding1_entry:
_caduT:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _caduU
_caduV:
	leaq block_caduM_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _caduM
_caduN:
	movq (%rbx),%rax
	jmp *(%rax)
_caduU:
	leaq GHC.IO.Handle.Internals.openTextEncoding1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.openTextEncoding1_entry, .-GHC.IO.Handle.Internals.openTextEncoding1_entry


==================== Asm code ====================
2018-03-16 16:05:15.517192739 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.openTextEncoding1_info
.type GHC.IO.Handle.Internals.openTextEncoding1_info, @object
GHC.IO.Handle.Internals.openTextEncoding1_info:
	.quad	GHC.IO.Handle.Internals.openTextEncoding1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:05:15.518017623 UTC

.section .text
.align 8
_caduM:
_caduM:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _caduQ
_caduR:
	leaq block_cadv1_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cadv1
_cadv3:
	movq (%rbx),%rax
	jmp *(%rax)
_caduQ:
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	movq 16(%rbp),%rbx
	addq $24,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
	.size _caduM, .-_caduM


==================== Asm code ====================
2018-03-16 16:05:15.518718154 UTC

.section .data.rel.ro
.align 8
.align 1
block_caduM_info:
	.quad	_caduM
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.519463516 UTC

.section .text
.align 8
_cadv1:
_cadv1:
	leaq block_cadv9_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cadv9
_cadvR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadv1, .-_cadv1


==================== Asm code ====================
2018-03-16 16:05:15.520078333 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadv1_info:
	.quad	_cadv1
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.520850095 UTC

.section .text
.align 8
_cadv9:
_cadv9:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $3,%rbx
	jne _uadwk
_cadw2:
	leaq block_cadw0_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_uadwk:
	cmpq $6,%rbx
	jne _cadvX
_cadwb:
	leaq block_cadw9_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_cadvX:
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _sacIa
	.size _cadv9, .-_cadv9


==================== Asm code ====================
2018-03-16 16:05:15.521760867 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadv9_info:
	.quad	_cadv9
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.522481005 UTC

.section .text
.align 8
_cadw9:
_cadw9:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cadwf
_cadwe:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _sacIa
_cadwf:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadw9, .-_cadw9


==================== Asm code ====================
2018-03-16 16:05:15.523128109 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadw9_info:
	.quad	_cadw9
	.quad	132
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.523851638 UTC

.section .text
.align 8
_cadw0:
_cadw0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cadw6
_cadw5:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _sacIa
_cadw6:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadw0, .-_cadw0


==================== Asm code ====================
2018-03-16 16:05:15.524515212 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadw0_info:
	.quad	_cadw0
	.quad	132
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.525189018 UTC

.section .text
.align 8
_sacIa:
_sacIa:
	leaq block_cadve_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cadve
_cadvg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sacIa, .-_sacIa


==================== Asm code ====================
2018-03-16 16:05:15.526122035 UTC

.section .text
.align 8
_cadve:
_cadve:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $5,%rbx
	jb _uadwl
_uadwm:
	cmpq $6,%rbx
	jb _cadvD
_cadvN:
	leaq block_cadvJ_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_cadvD:
	leaq block_cadvz_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_uadwl:
	cmpq $4,%rbx
	jb _cadvm
_cadvt:
	leaq block_cadvp_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_cadvm:
	movq 16(%rbp),%rsi
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	movq 32(%rbp),%rbx
	addq $40,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
	.size _cadve, .-_cadve


==================== Asm code ====================
2018-03-16 16:05:15.526878896 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadve_info:
	.quad	_cadve
	.quad	260
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.527599163 UTC

.section .text
.align 8
_cadvp:
_cadvp:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cadvw
_cadvv:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rsi
	leaq -6(%r12),%r14
	movq 24(%rbp),%rbx
	addq $32,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
_cadvw:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadvp, .-_cadvp


==================== Asm code ====================
2018-03-16 16:05:15.528277921 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadvp_info:
	.quad	_cadvp
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.529012003 UTC

.section .text
.align 8
_cadvz:
_cadvz:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cadvG
_cadvF:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rsi
	leaq -6(%r12),%r14
	movq 24(%rbp),%rbx
	addq $32,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
_cadvG:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadvz, .-_cadvz


==================== Asm code ====================
2018-03-16 16:05:15.53004676 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadvz_info:
	.quad	_cadvz
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.530764726 UTC

.section .text
.align 8
_cadvJ:
_cadvJ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cadvQ
_cadvP:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rsi
	leaq -6(%r12),%r14
	movq 24(%rbp),%rbx
	addq $32,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
_cadvQ:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadvJ, .-_cadvJ


==================== Asm code ====================
2018-03-16 16:05:15.531438201 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadvJ_info:
	.quad	_cadvJ
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.533821561 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.openTextEncoding_closure
.type GHC.IO.Handle.Internals.openTextEncoding_closure, @object
GHC.IO.Handle.Internals.openTextEncoding_closure:
	.quad	GHC.IO.Handle.Internals.openTextEncoding_info


==================== Asm code ====================
2018-03-16 16:05:15.534458177 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.openTextEncoding_entry
.type GHC.IO.Handle.Internals.openTextEncoding_entry, @object
GHC.IO.Handle.Internals.openTextEncoding_entry:
_cadxC:
	jmp GHC.IO.Handle.Internals.openTextEncoding1_entry
	.size GHC.IO.Handle.Internals.openTextEncoding_entry, .-GHC.IO.Handle.Internals.openTextEncoding_entry


==================== Asm code ====================
2018-03-16 16:05:15.535078531 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.openTextEncoding_info
.type GHC.IO.Handle.Internals.openTextEncoding_info, @object
GHC.IO.Handle.Internals.openTextEncoding_info:
	.quad	GHC.IO.Handle.Internals.openTextEncoding_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:05:15.539337231 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushByteWriteBuffer1_closure
.type GHC.IO.Handle.Internals.flushByteWriteBuffer1_closure, @object
GHC.IO.Handle.Internals.flushByteWriteBuffer1_closure:
	.quad	GHC.IO.Handle.Internals.flushByteWriteBuffer1_info


==================== Asm code ====================
2018-03-16 16:05:15.540690505 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushByteWriteBuffer1_entry
.type GHC.IO.Handle.Internals.flushByteWriteBuffer1_entry, @object
GHC.IO.Handle.Internals.flushByteWriteBuffer1_entry:
_cadxQ:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cadxU
_cadxV:
	leaq block_cadxN_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cadxN
_cadxO:
	movq (%rbx),%rax
	jmp *(%rax)
_cadxU:
	leaq GHC.IO.Handle.Internals.flushByteWriteBuffer1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.flushByteWriteBuffer1_entry, .-GHC.IO.Handle.Internals.flushByteWriteBuffer1_entry


==================== Asm code ====================
2018-03-16 16:05:15.54171091 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushByteWriteBuffer1_info
.type GHC.IO.Handle.Internals.flushByteWriteBuffer1_info, @object
GHC.IO.Handle.Internals.flushByteWriteBuffer1_info:
	.quad	GHC.IO.Handle.Internals.flushByteWriteBuffer1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:15.54247329 UTC

.section .text
.align 8
_cadxN:
_cadxN:
	leaq block_cadxT_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 15(%rbx),%rax
	movq 31(%rbx),%rcx
	movq 47(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cadxT
_cadxX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadxN, .-_cadxN


==================== Asm code ====================
2018-03-16 16:05:15.543083943 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadxN_info:
	.quad	_cadxN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.543871796 UTC

.section .text
.align 8
_cadxT:
_cadxT:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cadya
_cady7:
	movq 8(%rbp),%rax
	leaq block_cady5_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 24(%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.BufferedIO.flushWriteBuffer_entry@gotpcrel(%rip)
_cadya:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cadxT, .-_cadxT


==================== Asm code ====================
2018-03-16 16:05:15.544531419 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadxT_info:
	.quad	_cadxT
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.545320235 UTC

.section .text
.align 8
_cady5:
_cady5:
	movq 8(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cady5, .-_cady5


==================== Asm code ====================
2018-03-16 16:05:15.545927312 UTC

.section .data.rel.ro
.align 8
.align 1
block_cady5_info:
	.quad	_cady5
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.548060989 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushByteWriteBuffer_closure
.type GHC.IO.Handle.Internals.flushByteWriteBuffer_closure, @object
GHC.IO.Handle.Internals.flushByteWriteBuffer_closure:
	.quad	GHC.IO.Handle.Internals.flushByteWriteBuffer_info


==================== Asm code ====================
2018-03-16 16:05:15.548667248 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushByteWriteBuffer_entry
.type GHC.IO.Handle.Internals.flushByteWriteBuffer_entry, @object
GHC.IO.Handle.Internals.flushByteWriteBuffer_entry:
_cadyK:
	jmp GHC.IO.Handle.Internals.flushByteWriteBuffer1_entry
	.size GHC.IO.Handle.Internals.flushByteWriteBuffer_entry, .-GHC.IO.Handle.Internals.flushByteWriteBuffer_entry


==================== Asm code ====================
2018-03-16 16:05:15.549219163 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushByteWriteBuffer_info
.type GHC.IO.Handle.Internals.flushByteWriteBuffer_info, @object
GHC.IO.Handle.Internals.flushByteWriteBuffer_info:
	.quad	GHC.IO.Handle.Internals.flushByteWriteBuffer_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:15.554709733 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushWriteBuffer1_closure
.type GHC.IO.Handle.Internals.flushWriteBuffer1_closure, @object
GHC.IO.Handle.Internals.flushWriteBuffer1_closure:
	.quad	GHC.IO.Handle.Internals.flushWriteBuffer1_info


==================== Asm code ====================
2018-03-16 16:05:15.555473586 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushWriteBuffer1_entry
.type GHC.IO.Handle.Internals.flushWriteBuffer1_entry, @object
GHC.IO.Handle.Internals.flushWriteBuffer1_entry:
_cadyY:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cadz2
_cadz3:
	leaq block_cadyV_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cadyV
_cadyW:
	movq (%rbx),%rax
	jmp *(%rax)
_cadz2:
	leaq GHC.IO.Handle.Internals.flushWriteBuffer1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.flushWriteBuffer1_entry, .-GHC.IO.Handle.Internals.flushWriteBuffer1_entry


==================== Asm code ====================
2018-03-16 16:05:15.556114238 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushWriteBuffer1_info
.type GHC.IO.Handle.Internals.flushWriteBuffer1_info, @object
GHC.IO.Handle.Internals.flushWriteBuffer1_info:
	.quad	GHC.IO.Handle.Internals.flushWriteBuffer1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:15.556862945 UTC

.section .text
.align 8
_cadyV:
_cadyV:
	leaq block_cadz1_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 15(%rbx),%rax
	movq 31(%rbx),%rcx
	movq 47(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cadz1
_cadz5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadyV, .-_cadyV


==================== Asm code ====================
2018-03-16 16:05:15.55754523 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadyV_info:
	.quad	_cadyV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.558214076 UTC

.section .text
.align 8
_cadz1:
_cadz1:
	leaq block_cadz9_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _cadz9
_cadzb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadz1, .-_cadz1


==================== Asm code ====================
2018-03-16 16:05:15.558826482 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadz1_info:
	.quad	_cadz1
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.559582947 UTC

.section .text
.align 8
_cadz9:
_cadz9:
	andl $7,%ebx
	cmpq $1,%rbx
	je _uadzF
_cadzm:
	movq 16(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cadzk_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cadzk
_cadzn:
	movq (%rbx),%rax
	jmp *(%rax)
_uadzF:
	addq $32,%rbp
	jmp _cadzA
	.size _cadz9, .-_cadz9


==================== Asm code ====================
2018-03-16 16:05:15.560239483 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadz9_info:
	.quad	_cadz9
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.561000822 UTC

.section .text
.align 8
_cadzk:
_cadzk:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _uadzG
_cadzx:
	movq 8(%rbp),%rax
	leaq block_cadzv_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 24(%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.BufferedIO.flushWriteBuffer_entry@gotpcrel(%rip)
_uadzG:
	addq $32,%rbp
	jmp _cadzA
	.size _cadzk, .-_cadzk


==================== Asm code ====================
2018-03-16 16:05:15.562088969 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadzk_info:
	.quad	_cadzk
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.562741589 UTC

.section .text
.align 8
_cadzA:
_cadzA:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cadzA, .-_cadzA


==================== Asm code ====================
2018-03-16 16:05:15.563523143 UTC

.section .text
.align 8
_cadzv:
_cadzv:
	movq 8(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cadzv, .-_cadzv


==================== Asm code ====================
2018-03-16 16:05:15.564161352 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadzv_info:
	.quad	_cadzv
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.56631984 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushWriteBuffer_closure
.type GHC.IO.Handle.Internals.flushWriteBuffer_closure, @object
GHC.IO.Handle.Internals.flushWriteBuffer_closure:
	.quad	GHC.IO.Handle.Internals.flushWriteBuffer_info


==================== Asm code ====================
2018-03-16 16:05:15.56692901 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushWriteBuffer_entry
.type GHC.IO.Handle.Internals.flushWriteBuffer_entry, @object
GHC.IO.Handle.Internals.flushWriteBuffer_entry:
_cadAw:
	jmp GHC.IO.Handle.Internals.flushWriteBuffer1_entry
	.size GHC.IO.Handle.Internals.flushWriteBuffer_entry, .-GHC.IO.Handle.Internals.flushWriteBuffer_entry


==================== Asm code ====================
2018-03-16 16:05:15.567494427 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushWriteBuffer_info
.type GHC.IO.Handle.Internals.flushWriteBuffer_info, @object
GHC.IO.Handle.Internals.flushWriteBuffer_info:
	.quad	GHC.IO.Handle.Internals.flushWriteBuffer_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:15.569191096 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl7_ra7Pn_bytes:
	.asciz "codec_state"


==================== Asm code ====================
2018-03-16 16:05:15.572107586 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.decodeByteBuf2_closure
.type GHC.IO.Handle.Internals.decodeByteBuf2_closure, @object
GHC.IO.Handle.Internals.decodeByteBuf2_closure:
	.quad	GHC.IO.Handle.Internals.decodeByteBuf2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.57295515 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.decodeByteBuf2_entry
.type GHC.IO.Handle.Internals.decodeByteBuf2_entry, @object
GHC.IO.Handle.Internals.decodeByteBuf2_entry:
_cadAM:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cadAN
_cadAO:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cadAJ
_cadAI:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_cadAK_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl7_ra7Pn_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cadAN:
	jmp *-16(%r13)
_cadAJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.decodeByteBuf2_entry, .-GHC.IO.Handle.Internals.decodeByteBuf2_entry


==================== Asm code ====================
2018-03-16 16:05:15.573843671 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.decodeByteBuf2_info
.type GHC.IO.Handle.Internals.decodeByteBuf2_info, @object
GHC.IO.Handle.Internals.decodeByteBuf2_info:
	.quad	GHC.IO.Handle.Internals.decodeByteBuf2_entry
	.quad	0
	.quad	4294967317
	.quad	Saded_srt+184


==================== Asm code ====================
2018-03-16 16:05:15.574538082 UTC

.section .text
.align 8
_cadAK:
_cadAK:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size _cadAK, .-_cadAK


==================== Asm code ====================
2018-03-16 16:05:15.575652032 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadAK_info:
	.quad	_cadAK
	.quad	0
	.quad	4294967326
	.quad	Saded_srt+184


==================== Asm code ====================
2018-03-16 16:05:15.583253696 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.decodeByteBuf1_closure
.type GHC.IO.Handle.Internals.decodeByteBuf1_closure, @object
GHC.IO.Handle.Internals.decodeByteBuf1_closure:
	.quad	GHC.IO.Handle.Internals.decodeByteBuf1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.58403418 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.decodeByteBuf1_entry
.type GHC.IO.Handle.Internals.decodeByteBuf1_entry, @object
GHC.IO.Handle.Internals.decodeByteBuf1_entry:
_cadBb:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cadBc
_cadBd:
	leaq block_cadB8_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cadB8
_cadB9:
	movq (%rbx),%rax
	jmp *(%rax)
_cadBc:
	leaq GHC.IO.Handle.Internals.decodeByteBuf1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.decodeByteBuf1_entry, .-GHC.IO.Handle.Internals.decodeByteBuf1_entry


==================== Asm code ====================
2018-03-16 16:05:15.584690446 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.decodeByteBuf1_info
.type GHC.IO.Handle.Internals.decodeByteBuf1_info, @object
GHC.IO.Handle.Internals.decodeByteBuf1_info:
	.quad	GHC.IO.Handle.Internals.decodeByteBuf1_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	Saded_srt+192


==================== Asm code ====================
2018-03-16 16:05:15.585460739 UTC

.section .text
.align 8
_cadB8:
_cadB8:
	leaq block_cadBg_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 47(%rbx),%rax
	movq 63(%rbx),%rcx
	movq 95(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq 8(%rax),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cadBg
_cadBi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadB8, .-_cadB8


==================== Asm code ====================
2018-03-16 16:05:15.586122463 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadB8_info:
	.quad	_cadB8
	.quad	1
	.quad	4294967326
	.quad	Saded_srt+200


==================== Asm code ====================
2018-03-16 16:05:15.587117737 UTC

.section .text
.align 8
_cadBg:
_cadBg:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cadBu
_cadBV:
	leaq block_cadBG_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cadBG
_cadBH:
	movq (%rbx),%rax
	jmp *(%rax)
_cadBx:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cadBu:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cadBx
_cadBw:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.IO.Handle.Internals.decodeByteBuf2_closure(%rip),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 32(%rbp),%rbx
	movq 8(%rbp),%rcx
	leaq -15(%r12),%rdx
	movq %rdx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rdx
	movq %rcx,%rsi
	movq %rdx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_cadBq_info(%rip),%rax
	movq %rax,16(%rbp)
	movq %rbx,%rsi
	addq $16,%rbp
	jmp *GHC.IO.Encoding.Latin1.latin5_entry@gotpcrel(%rip)
	.size _cadBg, .-_cadBg


==================== Asm code ====================
2018-03-16 16:05:15.587957026 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadBg_info:
	.quad	_cadBg
	.quad	4
	.quad	4294967326
	.quad	Saded_srt+200


==================== Asm code ====================
2018-03-16 16:05:15.588663291 UTC

.section .text
.align 8
_cadBq:
_cadBq:
	leaq block_cadBs_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cadBs
_cadBz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadBq, .-_cadBq


==================== Asm code ====================
2018-03-16 16:05:15.589320507 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadBq_info:
	.quad	_cadBq
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.59005255 UTC

.section .text
.align 8
_cadBs:
_cadBs:
	movq 8(%rbp),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rax,%rsi
	movq %rcx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cadBs, .-_cadBs


==================== Asm code ====================
2018-03-16 16:05:15.590688531 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadBs_info:
	.quad	_cadBs
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.591386522 UTC

.section .text
.align 8
_cadBG:
_cadBG:
	leaq block_cadBL_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cadBG, .-_cadBG


==================== Asm code ====================
2018-03-16 16:05:15.592024087 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadBG_info:
	.quad	_cadBG
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.592941832 UTC

.section .text
.align 8
_cadBL:
_cadBL:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cadBZ
_cadBY:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq 48(%rbp),%rbx
	movq 24(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq 8(%rbp),%rsi
	leaq -15(%r12),%rdi
	movq %rdi,8(%rcx)
	subq $8,%rsp
	movq %r13,%rdi
	movq %rsi,%r8
	movq %rcx,%rsi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_cadBR_info(%rip),%rax
	movq %rax,32(%rbp)
	movq %rbx,%r8
	movq %r14,%rdi
	movq 72(%rsp),%rax
	movq %rax,%rsi
	movq 64(%rsp),%rax
	movq %rax,%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_cadBZ:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadBL, .-_cadBL


==================== Asm code ====================
2018-03-16 16:05:15.594035172 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadBL_info:
	.quad	_cadBL
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.594738194 UTC

.section .text
.align 8
_cadBR:
_cadBR:
	leaq block_cadBT_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cadBT
_cadC1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadBR, .-_cadBR


==================== Asm code ====================
2018-03-16 16:05:15.595362041 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadBR_info:
	.quad	_cadBR
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.596084963 UTC

.section .text
.align 8
_cadBT:
_cadBT:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rax,%rsi
	movq %rcx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cadBT, .-_cadBT


==================== Asm code ====================
2018-03-16 16:05:15.596772124 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadBT_info:
	.quad	_cadBT
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.599126474 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.decodeByteBuf_closure
.type GHC.IO.Handle.Internals.decodeByteBuf_closure, @object
GHC.IO.Handle.Internals.decodeByteBuf_closure:
	.quad	GHC.IO.Handle.Internals.decodeByteBuf_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.599740134 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.decodeByteBuf_entry
.type GHC.IO.Handle.Internals.decodeByteBuf_entry, @object
GHC.IO.Handle.Internals.decodeByteBuf_entry:
_cadDg:
	jmp GHC.IO.Handle.Internals.decodeByteBuf1_entry
	.size GHC.IO.Handle.Internals.decodeByteBuf_entry, .-GHC.IO.Handle.Internals.decodeByteBuf_entry


==================== Asm code ====================
2018-03-16 16:05:15.600334002 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.decodeByteBuf_info
.type GHC.IO.Handle.Internals.decodeByteBuf_info, @object
GHC.IO.Handle.Internals.decodeByteBuf_info:
	.quad	GHC.IO.Handle.Internals.decodeByteBuf_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	Saded_srt+192


==================== Asm code ====================
2018-03-16 16:05:15.605981887 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_closure
.type GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_closure, @object
GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_closure:
	.quad	GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.606823419 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_entry
.type GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_entry, @object
GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_entry:
_cadDu:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cadDy
_cadDz:
	leaq block_cadDr_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cadDr
_cadDs:
	movq (%rbx),%rax
	jmp *(%rax)
_cadDy:
	leaq GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_entry, .-GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_entry


==================== Asm code ====================
2018-03-16 16:05:15.607553121 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_info
.type GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_info, @object
GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_info:
	.quad	GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_entry
	.quad	0
	.quad	2814754062073870
	.quad	12884901903
	.quad	Saded_srt+56


==================== Asm code ====================
2018-03-16 16:05:15.608409454 UTC

.section .text
.align 8
_cadDr:
_cadDr:
	leaq block_cadDx_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 47(%rbx),%rbx
	movq %rbx,%rsi
	movq 8(%rbx),%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	movq %rax,(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cadDx
_cadDB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadDr, .-_cadDr


==================== Asm code ====================
2018-03-16 16:05:15.609106004 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadDr_info:
	.quad	_cadDr
	.quad	1
	.quad	562954248388638
	.quad	Saded_srt+56


==================== Asm code ====================
2018-03-16 16:05:15.610210897 UTC

.section .text
.align 8
_cadDx:
_cadDx:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cadDP
_cadDJ:
	movq 40(%rbp),%rsi
	movq 32(%rbp),%r14
	addq $48,%rbp
	jmp GHC.IO.Handle.Internals.decodeByteBuf1_entry
_cadDP:
	movq 16(%rbp),%rax
	leaq block_cadDM_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rbx,8(%rbp)
	addq $-8,%rbp
	jmp *GHC.IO.BufferedIO.fillReadBuffer0_entry@gotpcrel(%rip)
	.size _cadDx, .-_cadDx


==================== Asm code ====================
2018-03-16 16:05:15.610926179 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadDx_info:
	.quad	_cadDx
	.quad	5
	.quad	562954248388638
	.quad	Saded_srt+56


==================== Asm code ====================
2018-03-16 16:05:15.611603672 UTC

.section .text
.align 8
_cadDM:
_cadDM:
	leaq block_cadDO_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cadDO
_cadDR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadDM, .-_cadDM


==================== Asm code ====================
2018-03-16 16:05:15.612236994 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadDM_info:
	.quad	_cadDM
	.quad	3
	.quad	562954248388638
	.quad	Saded_srt+56


==================== Asm code ====================
2018-03-16 16:05:15.612929253 UTC

.section .text
.align 8
_cadDO:
_cadDO:
	leaq block_cadDV_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cadDV
_cadDX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadDO, .-_cadDO


==================== Asm code ====================
2018-03-16 16:05:15.61364081 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadDO_info:
	.quad	_cadDO
	.quad	3
	.quad	562954248388638
	.quad	Saded_srt+56


==================== Asm code ====================
2018-03-16 16:05:15.614487517 UTC

.section .text
.align 8
_cadDV:
_cadDV:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cadE3
_cadE7:
	movq 32(%rbp),%rax
	movq 24(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq %rdx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rdx
	movq %rcx,%rsi
	movq %rdx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq %r14,%rsi
	movq %rbx,%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.decodeByteBuf1_entry
_cadE3:
	leaq GHC.IO.Handle.Internals.hLookAhead_3_closure(%rip),%rbx
	addq $40,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _cadDV, .-_cadDV


==================== Asm code ====================
2018-03-16 16:05:15.615222815 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadDV_info:
	.quad	_cadDV
	.quad	4
	.quad	562954248388638
	.quad	Saded_srt+56


==================== Asm code ====================
2018-03-16 16:05:15.618122734 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.readTextDeviceNonBlocking_closure
.type GHC.IO.Handle.Internals.readTextDeviceNonBlocking_closure, @object
GHC.IO.Handle.Internals.readTextDeviceNonBlocking_closure:
	.quad	GHC.IO.Handle.Internals.readTextDeviceNonBlocking_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.61879596 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.readTextDeviceNonBlocking_entry
.type GHC.IO.Handle.Internals.readTextDeviceNonBlocking_entry, @object
GHC.IO.Handle.Internals.readTextDeviceNonBlocking_entry:
_cadES:
	jmp GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_entry
	.size GHC.IO.Handle.Internals.readTextDeviceNonBlocking_entry, .-GHC.IO.Handle.Internals.readTextDeviceNonBlocking_entry


==================== Asm code ====================
2018-03-16 16:05:15.619388312 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.readTextDeviceNonBlocking_info
.type GHC.IO.Handle.Internals.readTextDeviceNonBlocking_info, @object
GHC.IO.Handle.Internals.readTextDeviceNonBlocking_info:
	.quad	GHC.IO.Handle.Internals.readTextDeviceNonBlocking_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	Saded_srt+208


==================== Asm code ====================
2018-03-16 16:05:15.637493851 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle2_closure
.type GHC.IO.Handle.Internals.wantReadableHandle2_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle2_closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.638412328 UTC

.section .text
.align 8
sat_sacMj_entry:
_cadFQ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cadFU
_cadFV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cadFN_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cadFN
_cadFO:
	movq (%rbx),%rax
	jmp *(%rax)
_cadFU:
	jmp *-16(%r13)
	.size sat_sacMj_entry, .-sat_sacMj_entry


==================== Asm code ====================
2018-03-16 16:05:15.639099261 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sacMj_info:
	.quad	sat_sacMj_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:15.639887446 UTC

.section .text
.align 8
_cadFN:
_cadFN:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cadFY
_cadFX:
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rsi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rdi
	movq %rdi,-48(%r12)
	movq %rax,-40(%r12)
	movq GHC.IO.Buffer.ReadBuffer_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cadFY:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadFN, .-_cadFN


==================== Asm code ====================
2018-03-16 16:05:15.640580732 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadFN_info:
	.quad	_cadFN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.641393629 UTC

.section .text
.align 8
sat_sacMv_entry:
_cadGa:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cadGe
_cadGf:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cadG7_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cadG7
_cadG8:
	movq (%rbx),%rax
	jmp *(%rax)
_cadGe:
	jmp *-16(%r13)
	.size sat_sacMv_entry, .-sat_sacMv_entry


==================== Asm code ====================
2018-03-16 16:05:15.64209826 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sacMv_info:
	.quad	sat_sacMv_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:15.642869646 UTC

.section .text
.align 8
_cadG7:
_cadG7:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cadGi
_cadGh:
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rsi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rdi
	movq %rdi,-48(%r12)
	movq %rax,-40(%r12)
	movq GHC.IO.Buffer.ReadBuffer_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cadGi:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadG7, .-_cadG7


==================== Asm code ====================
2018-03-16 16:05:15.643553607 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadG7_info:
	.quad	_cadG7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.644319195 UTC

.section .text
.align 8
sat_sacMH_entry:
_cadGs:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cadGw
_cadGx:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cadGp_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cadGp
_cadGq:
	movq (%rbx),%rax
	jmp *(%rax)
_cadGw:
	jmp *-16(%r13)
	.size sat_sacMH_entry, .-sat_sacMH_entry


==================== Asm code ====================
2018-03-16 16:05:15.644984797 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sacMH_info:
	.quad	sat_sacMH_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:15.64597654 UTC

.section .text
.align 8
_cadGp:
_cadGp:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cadGA
_cadGz:
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rsi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rdi
	movq %rdi,-48(%r12)
	movq %rax,-40(%r12)
	movq GHC.IO.Buffer.ReadBuffer_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cadGA:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadGp, .-_cadGp


==================== Asm code ====================
2018-03-16 16:05:15.646692378 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadGp_info:
	.quad	_cadGp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.647446756 UTC

.section .text
.align 8
sat_sacMT_entry:
_cadGM:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cadGQ
_cadGR:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cadGJ_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cadGJ
_cadGK:
	movq (%rbx),%rax
	jmp *(%rax)
_cadGQ:
	jmp *-16(%r13)
	.size sat_sacMT_entry, .-sat_sacMT_entry


==================== Asm code ====================
2018-03-16 16:05:15.64813191 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sacMT_info:
	.quad	sat_sacMT_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:15.648894502 UTC

.section .text
.align 8
_cadGJ:
_cadGJ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cadGU
_cadGT:
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rsi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rdi
	movq %rdi,-48(%r12)
	movq %rax,-40(%r12)
	movq GHC.IO.Buffer.ReadBuffer_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cadGU:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadGJ, .-_cadGJ


==================== Asm code ====================
2018-03-16 16:05:15.649632071 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadGJ_info:
	.quad	_cadGJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.650407843 UTC

.section .text
.align 8
sat_sacN5_entry:
_cadH4:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cadH8
_cadH9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cadH1_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cadH1
_cadH2:
	movq (%rbx),%rax
	jmp *(%rax)
_cadH8:
	jmp *-16(%r13)
	.size sat_sacN5_entry, .-sat_sacN5_entry


==================== Asm code ====================
2018-03-16 16:05:15.651061684 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sacN5_info:
	.quad	sat_sacN5_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:15.651859935 UTC

.section .text
.align 8
_cadH1:
_cadH1:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cadHc
_cadHb:
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rsi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rdi
	movq %rdi,-48(%r12)
	movq %rax,-40(%r12)
	movq GHC.IO.Buffer.ReadBuffer_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cadHc:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadH1, .-_cadH1


==================== Asm code ====================
2018-03-16 16:05:15.652569346 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadH1_info:
	.quad	_cadH1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.653312736 UTC

.section .text
.align 8
sat_sacNh_entry:
_cadHo:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cadHs
_cadHt:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cadHl_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cadHl
_cadHm:
	movq (%rbx),%rax
	jmp *(%rax)
_cadHs:
	jmp *-16(%r13)
	.size sat_sacNh_entry, .-sat_sacNh_entry


==================== Asm code ====================
2018-03-16 16:05:15.653947546 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sacNh_info:
	.quad	sat_sacNh_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:15.654724137 UTC

.section .text
.align 8
_cadHl:
_cadHl:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cadHw
_cadHv:
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rsi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rdi
	movq %rdi,-48(%r12)
	movq %rax,-40(%r12)
	movq GHC.IO.Buffer.ReadBuffer_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cadHw:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadHl, .-_cadHl


==================== Asm code ====================
2018-03-16 16:05:15.655468508 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadHl_info:
	.quad	_cadHl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.656196903 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle2_entry
.type GHC.IO.Handle.Internals.wantReadableHandle2_entry, @object
GHC.IO.Handle.Internals.wantReadableHandle2_entry:
_cadHy:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cadHz
_cadHA:
	leaq block_cadF3_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cadF3
_cadF4:
	movq (%rbx),%rax
	jmp *(%rax)
_cadHz:
	leaq GHC.IO.Handle.Internals.wantReadableHandle2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.wantReadableHandle2_entry, .-GHC.IO.Handle.Internals.wantReadableHandle2_entry


==================== Asm code ====================
2018-03-16 16:05:15.656903492 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle2_info
.type GHC.IO.Handle.Internals.wantReadableHandle2_info, @object
GHC.IO.Handle.Internals.wantReadableHandle2_info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle2_entry
	.quad	0
	.quad	144116326242189326
	.quad	12884901903
	.quad	Saded_srt+16


==================== Asm code ====================
2018-03-16 16:05:15.657690255 UTC

.section .text
.align 8
_cadF3:
_cadF3:
	leaq block_cadF8_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 71(%rbx),%rdi
	movq 39(%rbx),%rbx
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	movq %rax,(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cadF8
_cadF9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadF3, .-_cadF3


==================== Asm code ====================
2018-03-16 16:05:15.658336334 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadF3_info:
	.quad	_cadF3
	.quad	1
	.quad	1138166333470
	.quad	Saded_srt+16


==================== Asm code ====================
2018-03-16 16:05:15.659238192 UTC

.section .text
.align 8
_cadF8:
_cadF8:
	andl $7,%ebx
	leaq _nadKa(%rip),%rax
	movslq (%rax,%rbx,8),%rbx
	addq %rbx,%rax
	jmp *%rax
_uadIq:
	addq $40,%rbp
	jmp _cadHY
_cadHR:
	leaq GHC.IO.Handle.Internals.wantReadableHandle3_closure(%rip),%rbx
	addq $56,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_cadHI:
	leaq GHC.IO.Handle.Internals.wantReadableHandle7_closure(%rip),%rbx
	addq $56,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_cadHF:
	leaq GHC.IO.Handle.Internals.wantReadableHandle11_closure(%rip),%rbx
	addq $56,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_cadHT:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cadFi_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cadFi
_cadFj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadF8, .-_cadF8
.section .rodata
.align 8
.align 1
_nadKa:
	.quad	0
	.long	_cadHF-(_nadKa)+0
	.long	0
	.long	_cadHI-(_nadKa)+0
	.long	0
	.long	_uadIq-(_nadKa)+0
	.long	0
	.long	_cadHR-(_nadKa)+0
	.long	0
	.long	_cadHR-(_nadKa)+0
	.long	0
	.long	_cadHT-(_nadKa)+0
	.long	0


==================== Asm code ====================
2018-03-16 16:05:15.660027052 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadF8_info:
	.quad	_cadF8
	.quad	6
	.quad	1138166333470
	.quad	Saded_srt+16


==================== Asm code ====================
2018-03-16 16:05:15.660746255 UTC

.section .text
.align 8
_cadFi:
_cadFi:
	leaq block_cadFn_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cadFn
_cadFo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadFi, .-_cadFi


==================== Asm code ====================
2018-03-16 16:05:15.661676569 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadFi_info:
	.quad	_cadFi
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.662700288 UTC

.section .text
.align 8
_cadFn:
_cadFn:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uadIr
_cadHZ:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cadI2
_cadI1:
	movq 40(%rbp),%rax
	movq 16(%rbp),%rbx
	cmpq 8(%rbp),%rbx
	je _cadIe
_cadI4:
	movq 8(%rax),%rax
	addq $-48,%r12
	leaq block_cadFw_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cadFw
_cadFx:
	movq (%rbx),%rax
	jmp *(%rax)
_uadIr:
	addq $56,%rbp
	jmp _cadHY
_cadIe:
	movq 48(%rbp),%rbx
	movq 8(%rbx),%rcx
	leaq sat_sacN5_info(%rip),%rdx
	movq %rdx,-40(%r12)
	movq %rcx,-24(%r12)
	movq 64(%rbp),%rcx
	movq 56(%rbp),%rdx
	leaq -40(%r12),%rsi
	movq %rsi,8(%rbx)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rbx,%rsi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq 8(%rbx),%rax
	leaq sat_sacNh_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rax
	movq %rax,8(%rbx)
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq %r14,%rbx
	movq 64(%rsp),%rax
	movq %rax,%r14
	addq $72,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
_cadI2:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadFn, .-_cadFn


==================== Asm code ====================
2018-03-16 16:05:15.663598457 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadFn_info:
	.quad	_cadFn
	.quad	200
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.664669341 UTC

.section .text
.align 8
_cadFw:
_cadFw:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cadI7
_cadI6:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cadId
_cadI9:
	addq $-48,%r12
	movq 16(%rbp),%rax
	leaq block_cadFE_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rbx,8(%rbp)
	addq $-8,%rbp
	jmp *GHC.IO.BufferedIO.flushWriteBuffer_entry@gotpcrel(%rip)
_cadId:
	movq 32(%rbp),%rax
	movq 8(%rax),%rcx
	leaq sat_sacMH_info(%rip),%rdx
	movq %rdx,-40(%r12)
	movq %rcx,-24(%r12)
	movq 48(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 24(%rbp),%rsi
	leaq -40(%r12),%rdi
	movq %rdi,8(%rax)
	subq $8,%rsp
	movq %r13,%rdi
	movq %rsi,%r8
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq 72(%rsp),%rax
	movq 8(%rax),%rcx
	leaq sat_sacMT_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %rcx,(%r12)
	leaq -16(%r12),%rcx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rax,%rsi
	movq %rcx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq %r14,%rcx
	movq 64(%rsp),%rax
	movq %rax,%r14
	movq %rcx,%rbx
	addq $56,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
_cadI7:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadFw, .-_cadFw


==================== Asm code ====================
2018-03-16 16:05:15.66616852 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadFw_info:
	.quad	_cadFw
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.667161972 UTC

.section .text
.align 8
_cadFE:
_cadFE:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cadIc
_cadIb:
	movq 32(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq 16(%rbp),%rsi
	movq %rbx,8(%rdx)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rsi,%rdi
	movq %rdx,%rsi
	movq %rdi,%r8
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq 72(%rsp),%rax
	movq 8(%rax),%rcx
	leaq sat_sacMj_info(%rip),%rdx
	movq %rdx,-40(%r12)
	movq %rcx,-24(%r12)
	leaq -40(%r12),%rcx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rax,%rsi
	movq %rcx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq 64(%rsp),%rax
	movq 8(%rax),%rcx
	leaq sat_sacMv_info(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %rcx,(%r12)
	leaq -16(%r12),%rcx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rax,%rsi
	movq %rcx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $40,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
_cadIc:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadFE, .-_cadFE


==================== Asm code ====================
2018-03-16 16:05:15.667980004 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadFE_info:
	.quad	_cadFE
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.668624108 UTC

.section .text
.align 8
_cadHY:
_cadHY:
	movq (%rbp),%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
	.size _cadHY, .-_cadHY


==================== Asm code ====================
2018-03-16 16:05:15.670449778 UTC

.section .data
.align 8
.align 1
lvl8_ra7Po_closure:
	.quad	GHC.IO.Handle.Types.BlockBuffering_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:05:15.69828775 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle5_closure
.type GHC.IO.Handle.Internals.mkDuplexHandle5_closure, @object
GHC.IO.Handle.Internals.mkDuplexHandle5_closure:
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle5_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.699065345 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkDuplexHandle5_slow
.type GHC.IO.Handle.Internals.mkDuplexHandle5_slow, @object
GHC.IO.Handle.Internals.mkDuplexHandle5_slow:
_cadL1:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.mkDuplexHandle5_entry
	.size GHC.IO.Handle.Internals.mkDuplexHandle5_slow, .-GHC.IO.Handle.Internals.mkDuplexHandle5_slow


==================== Asm code ====================
2018-03-16 16:05:15.69989256 UTC

.section .text
.align 8
buf_state_sacNz_entry:
_cadMC:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cadMD
_cadME:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cadMv_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cadMv
_cadMw:
	movq (%rbx),%rax
	jmp *(%rax)
_cadMD:
	jmp *-16(%r13)
	.size buf_state_sacNz_entry, .-buf_state_sacNz_entry


==================== Asm code ====================
2018-03-16 16:05:15.700563981 UTC

.section .data.rel.ro
.align 8
.align 1
buf_state_sacNz_info:
	.quad	buf_state_sacNz_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:15.701349653 UTC

.section .text
.align 8
_cadMv:
_cadMv:
	andl $7,%ebx
	cmpq $3,%rbx
	je _cadMA
_cadMz:
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cadMA:
	movq GHC.IO.Buffer.ReadBuffer_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cadMv, .-_cadMv


==================== Asm code ====================
2018-03-16 16:05:15.702050508 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadMv_info:
	.quad	_cadMv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.702774785 UTC

.section .text
.align 8
sat_sacNZ_entry:
_cadN8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadN9
_cadNa:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Types.outputNL_entry@gotpcrel(%rip)
_cadN9:
	jmp *-16(%r13)
	.size sat_sacNZ_entry, .-sat_sacNZ_entry


==================== Asm code ====================
2018-03-16 16:05:15.703442136 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sacNZ_info:
	.quad	sat_sacNZ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:15.704171435 UTC

.section .text
.align 8
sat_sacNY_entry:
_cadNf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadNg
_cadNh:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Types.inputNL_entry@gotpcrel(%rip)
_cadNg:
	jmp *-16(%r13)
	.size sat_sacNY_entry, .-sat_sacNY_entry


==================== Asm code ====================
2018-03-16 16:05:15.70485456 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sacNY_info:
	.quad	sat_sacNY_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:15.705760295 UTC

.section .text
.align 8
sat_sacO0_entry:
_cadNi:
	leaq -136(%rbp),%rax
	cmpq %r15,%rax
	jb _cadNk
_cadNl:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cadMX_info(%rip),%rax
	movq %rax,-136(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 64(%rbx),%r8
	movq 72(%rbx),%r9
	movq 80(%rbx),%r10
	movq 88(%rbx),%r11
	movq 96(%rbx),%r14
	movq %rax,64(%rsp)
	movq 104(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 112(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 120(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 128(%rbx),%rsi
	movq 40(%rbx),%rbx
	movq %rdi,96(%rsp)
	movq 64(%rsp),%rdi
	movq %rdi,-128(%rbp)
	movq 72(%rsp),%rdi
	movq %rdi,-120(%rbp)
	movq 80(%rsp),%rdi
	movq %rdi,-112(%rbp)
	movq 88(%rsp),%rdi
	movq %rdi,-104(%rbp)
	movq 96(%rsp),%rdi
	movq %rdi,-96(%rbp)
	movq %r8,-88(%rbp)
	movq %r9,-80(%rbp)
	movq %r10,-72(%rbp)
	movq %r11,-64(%rbp)
	movq %r14,-56(%rbp)
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	addq $-136,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_cadNk:
	jmp *-16(%r13)
	.size sat_sacO0_entry, .-sat_sacO0_entry


==================== Asm code ====================
2018-03-16 16:05:15.706644741 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sacO0_info:
	.quad	sat_sacO0_entry
	.quad	15
	.quad	15


==================== Asm code ====================
2018-03-16 16:05:15.707378264 UTC

.section .text
.align 8
_cadMX:
_cadMX:
	leaq block_cadMZ_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 96(%rbp),%rbx
	movq %rax,96(%rbp)
	testb $7,%bl
	jne _cadMZ
_cadN0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadMX, .-_cadMX


==================== Asm code ====================
2018-03-16 16:05:15.708005331 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadMX_info:
	.quad	_cadMX
	.quad	14
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.708943758 UTC

.section .text
.align 8
_cadMZ:
_cadMZ:
	addq $184,%r12
	cmpq 856(%r13),%r12
	ja _cadNp
_cadNo:
	movq 7(%rbx),%rax
	leaq sat_sacNZ_info(%rip),%rbx
	movq %rbx,-176(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-160(%r12)
	leaq sat_sacNY_info(%rip),%rcx
	movq %rcx,-152(%r12)
	movq %rbx,-136(%r12)
	movq GHC.IO.Handle.Types.Handle___con_info@gotpcrel(%rip),%rbx
	movq %rbx,-128(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-120(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-112(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-104(%r12)
	movq 96(%rbp),%rbx
	movq %rbx,-96(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq 80(%rbp),%rbx
	movq %rbx,-80(%r12)
	movq 104(%rbp),%rbx
	movq %rbx,-72(%r12)
	movq 88(%rbp),%rbx
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq 112(%rbp),%rax
	movq %rax,-48(%r12)
	movq 64(%rbp),%rax
	movq %rax,-40(%r12)
	movq 72(%rbp),%rax
	movq %rax,-32(%r12)
	movq 40(%rbp),%rax
	movq %rax,-24(%r12)
	leaq -152(%r12),%rax
	movq %rax,-16(%r12)
	leaq -176(%r12),%rax
	movq %rax,-8(%r12)
	movq 56(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $120,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cadNp:
	movq $184,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadMZ, .-_cadMZ


==================== Asm code ====================
2018-03-16 16:05:15.709866916 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadMZ_info:
	.quad	_cadMZ
	.quad	14
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.710725059 UTC

.section .text
.align 8
sat_sacO6_entry:
_cadNE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cadNF
_cadNG:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cadNI
_cadNH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq GHC.MVar.MVar_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-8(%r12)
	movq %rcx,(%r12)
	leaq -7(%r12),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cadNI:
	movq $16,904(%r13)
_cadNF:
	jmp *-16(%r13)
	.size sat_sacO6_entry, .-sat_sacO6_entry


==================== Asm code ====================
2018-03-16 16:05:15.711419463 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sacO6_info:
	.quad	sat_sacO6_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:05:15.712165952 UTC

.section .text
.align 8
sat_sacOG_entry:
_cadNS:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cadNT
_cadNU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cadNL_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cadNL
_cadNM:
	movq (%rbx),%rax
	jmp *(%rax)
_cadNT:
	jmp *-16(%r13)
	.size sat_sacOG_entry, .-sat_sacOG_entry


==================== Asm code ====================
2018-03-16 16:05:15.712803719 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sacOG_info:
	.quad	sat_sacOG_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:15.713577265 UTC

.section .text
.align 8
_cadNL:
_cadNL:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cadNP
_cadNQ:
	movq GHC.IO.Handle.Types.LineBuffering_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cadNP:
	leaq lvl8_ra7Po_closure+3(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cadNL, .-_cadNL


==================== Asm code ====================
2018-03-16 16:05:15.714229832 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadNL_info:
	.quad	_cadNL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.715000149 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkDuplexHandle5_entry
.type GHC.IO.Handle.Internals.mkDuplexHandle5_entry, @object
GHC.IO.Handle.Internals.mkDuplexHandle5_entry:
_cadO6:
	leaq -96(%rbp),%rax
	cmpq %r15,%rax
	jb _cadO7
_cadO8:
	leaq block_cadLU_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq 16(%rbp),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _cadLU
_cadLV:
	movq (%rbx),%rax
	jmp *(%rax)
_cadO7:
	leaq GHC.IO.Handle.Internals.mkDuplexHandle5_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.mkDuplexHandle5_entry, .-GHC.IO.Handle.Internals.mkDuplexHandle5_entry


==================== Asm code ====================
2018-03-16 16:05:15.715762555 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle5_info
.type GHC.IO.Handle.Internals.mkDuplexHandle5_info, @object
GHC.IO.Handle.Internals.mkDuplexHandle5_info:
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle5_entry
	.quad	0
	.quad	38654705678
	.quad	51539607552
	.quad	Saded_srt+200
	.quad	11
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle5_slow


==================== Asm code ====================
2018-03-16 16:05:15.716544008 UTC

.section .text
.align 8
_cadLU:
_cadLU:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cadO3
_cadO4:
	leaq block_cadM0_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cadM0
_cadM1:
	movq (%rbx),%rax
	jmp *(%rax)
_cadO3:
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%rbp)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp _cadL8
	.size _cadLU, .-_cadLU


==================== Asm code ====================
2018-03-16 16:05:15.717310494 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadLU_info:
	.quad	_cadLU
	.quad	11
	.quad	4294967326
	.quad	Saded_srt+200


==================== Asm code ====================
2018-03-16 16:05:15.718029844 UTC

.section .text
.align 8
_cadM0:
_cadM0:
	leaq block_cadP1_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rbx
	movq %rbx,%rcx
	movq 48(%rbp),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cadP1
_cadPn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadM0, .-_cadM0


==================== Asm code ====================
2018-03-16 16:05:15.718681648 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadM0_info:
	.quad	_cadM0
	.quad	11
	.quad	4294967326
	.quad	Saded_srt+200


==================== Asm code ====================
2018-03-16 16:05:15.719457118 UTC

.section .text
.align 8
_cadP1:
_cadP1:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $3,%rbx
	jne _uadPU
_cadPy:
	leaq block_cadPw_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_uadPU:
	cmpq $6,%rbx
	jne _cadPt
_cadPH:
	leaq block_cadPF_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_cadPt:
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _sacON
	.size _cadP1, .-_cadP1


==================== Asm code ====================
2018-03-16 16:05:15.720153913 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadP1_info:
	.quad	_cadP1
	.quad	13
	.quad	4294967326
	.quad	Saded_srt+200


==================== Asm code ====================
2018-03-16 16:05:15.720898989 UTC

.section .text
.align 8
_cadPF:
_cadPF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cadPL
_cadPK:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _sacON
_cadPL:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadPF, .-_cadPF


==================== Asm code ====================
2018-03-16 16:05:15.721848326 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadPF_info:
	.quad	_cadPF
	.quad	141
	.quad	4294967326
	.quad	Saded_srt+200


==================== Asm code ====================
2018-03-16 16:05:15.722545988 UTC

.section .text
.align 8
_cadPw:
_cadPw:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cadPC
_cadPB:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _sacON
_cadPC:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadPw, .-_cadPw


==================== Asm code ====================
2018-03-16 16:05:15.723223635 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadPw_info:
	.quad	_cadPw
	.quad	141
	.quad	4294967326
	.quad	Saded_srt+200


==================== Asm code ====================
2018-03-16 16:05:15.724708463 UTC

.section .text
.align 8
_sacON:
_sacON:
	leaq block_cadMa_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 56(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cadMa
_cadMb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sacON, .-_sacON


==================== Asm code ====================
2018-03-16 16:05:15.725691805 UTC

.section .text
.align 8
_cadMa:
_cadMa:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $5,%rbx
	jb _uadPS
_uadPT:
	cmpq $6,%rbx
	jb _cadPe
_cadPj:
	leaq block_cadMq_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_cadPe:
	leaq block_cadMl_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_uadPS:
	cmpq $4,%rbx
	jb _cadP7
_cadP9:
	leaq block_cadMg_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_cadP7:
	movq 16(%rbp),%rax
	movq %rax,8(%rbp)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _cadL8
	.size _cadMa, .-_cadMa


==================== Asm code ====================
2018-03-16 16:05:15.726478868 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadMa_info:
	.quad	_cadMa
	.quad	13
	.quad	4294967326
	.quad	Saded_srt+200


==================== Asm code ====================
2018-03-16 16:05:15.727224994 UTC

.section .text
.align 8
_cadMg:
_cadMg:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cadPc
_cadPb:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rax
	leaq -6(%r12),%rbx
	movq %rbx,8(%rbp)
	movq %rax,(%rbp)
	jmp _cadL8
_cadPc:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadMg, .-_cadMg


==================== Asm code ====================
2018-03-16 16:05:15.727844341 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadMg_info:
	.quad	_cadMg
	.quad	12
	.quad	4294967326
	.quad	Saded_srt+200


==================== Asm code ====================
2018-03-16 16:05:15.728560429 UTC

.section .text
.align 8
_cadMl:
_cadMl:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cadPh
_cadPg:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rax
	leaq -6(%r12),%rbx
	movq %rbx,8(%rbp)
	movq %rax,(%rbp)
	jmp _cadL8
_cadPh:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadMl, .-_cadMl


==================== Asm code ====================
2018-03-16 16:05:15.729211208 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadMl_info:
	.quad	_cadMl
	.quad	12
	.quad	4294967326
	.quad	Saded_srt+200


==================== Asm code ====================
2018-03-16 16:05:15.729949507 UTC

.section .text
.align 8
_cadMq:
_cadMq:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cadPm
_cadPl:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rax
	leaq -6(%r12),%rbx
	movq %rbx,8(%rbp)
	movq %rax,(%rbp)
	jmp _cadL8
_cadPm:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadMq, .-_cadMq


==================== Asm code ====================
2018-03-16 16:05:15.730605909 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadMq_info:
	.quad	_cadMq
	.quad	12
	.quad	4294967326
	.quad	Saded_srt+200


==================== Asm code ====================
2018-03-16 16:05:15.731426362 UTC

.section .text
.align 8
_cadL8:
_cadL8:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cadOb
_cadOa:
	leaq buf_state_sacNz_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 56(%rbp),%rax
	movq %rax,(%r12)
	leaq block_cadLc_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 24(%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp *GHC.IO.BufferedIO.newBuffer_entry@gotpcrel(%rip)
_cadOb:
	movq $24,904(%r13)
	movq 8(%rbp),%rax
	leaq block_cadL7_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq (%rbp),%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cadL8, .-_cadL8


==================== Asm code ====================
2018-03-16 16:05:15.732286432 UTC

.section .text
.align 8
_cadL7:
_cadL7:
	movq %rbx,(%rbp)
	movq %r14,-8(%rbp)
	addq $-8,%rbp
	jmp _cadL8
	.size _cadL7, .-_cadL7


==================== Asm code ====================
2018-03-16 16:05:15.732848791 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadL7_info:
	.quad	_cadL7
	.quad	11
	.quad	4294967326
	.quad	Saded_srt+200


==================== Asm code ====================
2018-03-16 16:05:15.734006454 UTC

.section .text
.align 8
_cadLc:
_cadLc:
	leaq block_cadLe_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _cadLc, .-_cadLc


==================== Asm code ====================
2018-03-16 16:05:15.734609891 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadLc_info:
	.quad	_cadLc
	.quad	14
	.quad	4294967326
	.quad	Saded_srt+200


==================== Asm code ====================
2018-03-16 16:05:15.735344096 UTC

.section .text
.align 8
_cadLe:
_cadLe:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cadOf
_cadOe:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.IO.Handle.Internals.decodeByteBuf2_closure(%rip),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_cadLh_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	leaq -15(%r12),%rbx
	movq %rax,8(%rbp)
	jmp *stg_newMutVar#@gotpcrel(%rip)
_cadOf:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadLe, .-_cadLe


==================== Asm code ====================
2018-03-16 16:05:15.735998109 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadLe_info:
	.quad	_cadLe
	.quad	15
	.quad	4294967326
	.quad	Saded_srt+200


==================== Asm code ====================
2018-03-16 16:05:15.736732352 UTC

.section .text
.align 8
_cadLh:
_cadLh:
	leaq block_cadLl_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 88(%rbp),%rbx
	movq %rax,88(%rbp)
	testb $7,%bl
	jne _cadLl
_cadLm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadLh, .-_cadLh


==================== Asm code ====================
2018-03-16 16:05:15.73734401 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadLh_info:
	.quad	_cadLh
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.73803975 UTC

.section .text
.align 8
_cadLl:
_cadLl:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cadOG
_cadOP:
	leaq block_cadLE_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	jmp *stg_newMutVar#@gotpcrel(%rip)
_cadOG:
	leaq block_cadLq_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _cadLl, .-_cadLl


==================== Asm code ====================
2018-03-16 16:05:15.738654443 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadLl_info:
	.quad	_cadLl
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.739333087 UTC

.section .text
.align 8
_cadLq:
_cadLq:
	leaq block_cadLs_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movl $8192,%ebx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_newPinnedByteArray#@gotpcrel(%rip)
	.size _cadLq, .-_cadLq


==================== Asm code ====================
2018-03-16 16:05:15.739940156 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadLq_info:
	.quad	_cadLq
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.740697407 UTC

.section .text
.align 8
_cadLs:
_cadLs:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cadOK
_cadOJ:
	movq GHC.ForeignPtr.MallocPtr_con_info@gotpcrel(%rip),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -70(%r12),%rax
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	leaq 16(%rbx),%rax
	movq %rax,-24(%r12)
	movq $2048,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq block_cadLz_info(%rip),%rax
	movq %rax,8(%rbp)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
_cadOK:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadLs, .-_cadLs


==================== Asm code ====================
2018-03-16 16:05:15.741463625 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadLs_info:
	.quad	_cadLs
	.quad	16
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.742147614 UTC

.section .text
.align 8
_cadLz:
_cadLz:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cadON
_cadOM:
	movq GHC.STRef.STRef_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rax
	movq %rax,16(%rbp)
	movq GHC.IO.Handle.Types.NoBuffering_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%rbp)
	jmp _sacNL
_cadON:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadLz, .-_cadLz


==================== Asm code ====================
2018-03-16 16:05:15.742800721 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadLz_info:
	.quad	_cadLz
	.quad	143
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.743479254 UTC

.section .text
.align 8
_cadLE:
_cadLE:
	leaq block_cadLG_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movl $8192,%ebx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_newPinnedByteArray#@gotpcrel(%rip)
	.size _cadLE, .-_cadLE


==================== Asm code ====================
2018-03-16 16:05:15.744103975 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadLE_info:
	.quad	_cadLE
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.744852321 UTC

.section .text
.align 8
_cadLG:
_cadLG:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cadOT
_cadOS:
	movq GHC.ForeignPtr.MallocPtr_con_info@gotpcrel(%rip),%rax
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -70(%r12),%rax
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	leaq 16(%rbx),%rax
	movq %rax,-24(%r12)
	movq $2048,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq block_cadLN_info(%rip),%rax
	movq %rax,8(%rbp)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
_cadOT:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadLG, .-_cadLG


==================== Asm code ====================
2018-03-16 16:05:15.745618412 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadLG_info:
	.quad	_cadLG
	.quad	16
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.746306737 UTC

.section .text
.align 8
_cadLN:
_cadLN:
	leaq block_cadLP_info(%rip),%rax
	movq %rax,(%rbp)
	movq 40(%rbp),%r14
	movq stg_ap_pv_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 64(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,16(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.Device.isTerminal_entry@gotpcrel(%rip)
	.size _cadLN, .-_cadLN


==================== Asm code ====================
2018-03-16 16:05:15.746967529 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadLN_info:
	.quad	_cadLN
	.quad	143
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.747712709 UTC

.section .text
.align 8
_cadLP:
_cadLP:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cadOX
_cadOW:
	leaq sat_sacOG_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %rbx,-16(%r12)
	movq GHC.STRef.STRef_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%rbp)
	leaq -7(%r12),%rax
	movq %rax,16(%rbp)
	jmp _sacNL
_cadOX:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadLP, .-_cadLP


==================== Asm code ====================
2018-03-16 16:05:15.748424685 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadLP_info:
	.quad	_cadLP
	.quad	15
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.749065063 UTC

.section .text
.align 8
_sacNL:
_sacNL:
	leaq block_cadMP_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq GHC.IO.Handle.Types.BufferListNil_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $-8,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _sacNL, .-_sacNL


==================== Asm code ====================
2018-03-16 16:05:15.75011791 UTC

.section .text
.align 8
_cadMP:
_cadMP:
	leaq block_cadMR_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *stg_newMVar#@gotpcrel(%rip)
	.size _cadMP, .-_cadMP


==================== Asm code ====================
2018-03-16 16:05:15.750707368 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadMP_info:
	.quad	_cadMP
	.quad	16
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.75150179 UTC

.section .text
.align 8
_cadMR:
_cadMR:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cadOl
_cadOk:
	leaq sat_sacO0_info(%rip),%rax
	movq %rax,-128(%r12)
	movq 56(%rbp),%rax
	movq %rax,-112(%r12)
	movq 64(%rbp),%rax
	movq %rax,-104(%r12)
	movq 72(%rbp),%rax
	movq %rax,-96(%r12)
	movq 80(%rbp),%rax
	movq %rax,-88(%r12)
	movq 96(%rbp),%rax
	movq %rax,-80(%r12)
	movq 112(%rbp),%rax
	movq %rax,-72(%r12)
	movq 120(%rbp),%rax
	movq %rax,-64(%r12)
	movq 136(%rbp),%rax
	movq %rax,-56(%r12)
	movq 48(%rbp),%rax
	movq %rax,-48(%r12)
	movq 40(%rbp),%rax
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	movq 104(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_cadNr_info(%rip),%rax
	movq %rax,80(%rbp)
	leaq -128(%r12),%r14
	movq %rbx,%rax
	movq %rax,136(%rbp)
	addq $80,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
_cadOl:
	movq $136,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadMR, .-_cadMR


==================== Asm code ====================
2018-03-16 16:05:15.752297049 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadMR_info:
	.quad	_cadMR
	.quad	17
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.752979018 UTC

.section .text
.align 8
_cadNr:
_cadNr:
	leaq block_cadNt_info(%rip),%rax
	movq %rax,(%rbp)
	movq 48(%rbp),%rbx
	testb $7,%bl
	jne _cadNt
_cadNu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadNr, .-_cadNr


==================== Asm code ====================
2018-03-16 16:05:15.75362301 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadNr_info:
	.quad	_cadNr
	.quad	1927
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.754533203 UTC

.section .text
.align 8
_cadNt:
_cadNt:
	movq 8(%rbp),%rax
	movq 56(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _cadOq
_cadOx:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cadOA
_cadOz:
	movq 6(%rbx),%rbx
	leaq sat_sacO6_info(%rip),%rdx
	movq %rdx,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq block_cadOu_info(%rip),%rax
	movq %rax,(%rbp)
	leaq -32(%r12),%rsi
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	movq %rcx,%rbx
	jmp *stg_mkWeak#@gotpcrel(%rip)
_cadOA:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cadOt:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cadOq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cadOt
_cadOs:
	movq GHC.IO.Handle.Types.FileHandle_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -15(%r12),%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cadNt, .-_cadNt


==================== Asm code ====================
2018-03-16 16:05:15.755865991 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadNt_info:
	.quad	_cadNt
	.quad	3975
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.756676014 UTC

.section .text
.align 8
_cadOu:
_cadOu:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cadOD
_cadOC:
	movq GHC.IO.Handle.Types.FileHandle_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 56(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cadOD:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadOu, .-_cadOu


==================== Asm code ====================
2018-03-16 16:05:15.757304355 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadOu_info:
	.quad	_cadOu
	.quad	3975
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.760164362 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkHandle_closure
.type GHC.IO.Handle.Internals.mkHandle_closure, @object
GHC.IO.Handle.Internals.mkHandle_closure:
	.quad	GHC.IO.Handle.Internals.mkHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.760814815 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkHandle_slow
.type GHC.IO.Handle.Internals.mkHandle_slow, @object
GHC.IO.Handle.Internals.mkHandle_slow:
_cadV1:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.mkHandle_entry
	.size GHC.IO.Handle.Internals.mkHandle_slow, .-GHC.IO.Handle.Internals.mkHandle_slow


==================== Asm code ====================
2018-03-16 16:05:15.761529422 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkHandle_entry
.type GHC.IO.Handle.Internals.mkHandle_entry, @object
GHC.IO.Handle.Internals.mkHandle_entry:
_cadV5:
	jmp GHC.IO.Handle.Internals.mkDuplexHandle5_entry
	.size GHC.IO.Handle.Internals.mkHandle_entry, .-GHC.IO.Handle.Internals.mkHandle_entry


==================== Asm code ====================
2018-03-16 16:05:15.762133046 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkHandle_info
.type GHC.IO.Handle.Internals.mkHandle_info, @object
GHC.IO.Handle.Internals.mkHandle_info:
	.quad	GHC.IO.Handle.Internals.mkHandle_entry
	.quad	0
	.quad	4294967310
	.quad	51539607552
	.quad	Saded_srt+224
	.quad	11
	.quad	GHC.IO.Handle.Internals.mkHandle_slow


==================== Asm code ====================
2018-03-16 16:05:15.764159578 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.debugIO1_closure
.type GHC.IO.Handle.Internals.debugIO1_closure, @object
GHC.IO.Handle.Internals.debugIO1_closure:
	.quad	GHC.IO.Handle.Internals.debugIO1_info


==================== Asm code ====================
2018-03-16 16:05:15.764838929 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.debugIO1_entry
.type GHC.IO.Handle.Internals.debugIO1_entry, @object
GHC.IO.Handle.Internals.debugIO1_entry:
_cadVi:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.debugIO1_entry, .-GHC.IO.Handle.Internals.debugIO1_entry


==================== Asm code ====================
2018-03-16 16:05:15.765952227 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.debugIO1_info
.type GHC.IO.Handle.Internals.debugIO1_info, @object
GHC.IO.Handle.Internals.debugIO1_info:
	.quad	GHC.IO.Handle.Internals.debugIO1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:15.768006577 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.debugIO_closure
.type GHC.IO.Handle.Internals.debugIO_closure, @object
GHC.IO.Handle.Internals.debugIO_closure:
	.quad	GHC.IO.Handle.Internals.debugIO_info


==================== Asm code ====================
2018-03-16 16:05:15.768658864 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.debugIO_entry
.type GHC.IO.Handle.Internals.debugIO_entry, @object
GHC.IO.Handle.Internals.debugIO_entry:
_cadVv:
	jmp GHC.IO.Handle.Internals.debugIO1_entry
	.size GHC.IO.Handle.Internals.debugIO_entry, .-GHC.IO.Handle.Internals.debugIO_entry


==================== Asm code ====================
2018-03-16 16:05:15.769216884 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.debugIO_info
.type GHC.IO.Handle.Internals.debugIO_info, @object
GHC.IO.Handle.Internals.debugIO_info:
	.quad	GHC.IO.Handle.Internals.debugIO_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:15.786552603 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wwriteCharBuffer_closure
.type GHC.IO.Handle.Internals.$wwriteCharBuffer_closure, @object
GHC.IO.Handle.Internals.$wwriteCharBuffer_closure:
	.quad	GHC.IO.Handle.Internals.$wwriteCharBuffer_info


==================== Asm code ====================
2018-03-16 16:05:15.787330614 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.$wwriteCharBuffer_slow
.type GHC.IO.Handle.Internals.$wwriteCharBuffer_slow, @object
GHC.IO.Handle.Internals.$wwriteCharBuffer_slow:
_cadVD:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.$wwriteCharBuffer_entry
	.size GHC.IO.Handle.Internals.$wwriteCharBuffer_slow, .-GHC.IO.Handle.Internals.$wwriteCharBuffer_slow


==================== Asm code ====================
2018-03-16 16:05:15.788114628 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.$wwriteCharBuffer_entry
.type GHC.IO.Handle.Internals.$wwriteCharBuffer_entry, @object
GHC.IO.Handle.Internals.$wwriteCharBuffer_entry:
_cadVK:
	leaq -104(%rbp),%rax
	cmpq %r15,%rax
	jb _cadVL
_uadYQ:
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp _cadVE
_cadVL:
	leaq GHC.IO.Handle.Internals.$wwriteCharBuffer_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.$wwriteCharBuffer_entry, .-GHC.IO.Handle.Internals.$wwriteCharBuffer_entry


==================== Asm code ====================
2018-03-16 16:05:15.788825455 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wwriteCharBuffer_info
.type GHC.IO.Handle.Internals.$wwriteCharBuffer_info, @object
GHC.IO.Handle.Internals.$wwriteCharBuffer_info:
	.quad	GHC.IO.Handle.Internals.$wwriteCharBuffer_entry
	.quad	0
	.quad	14
	.quad	34359738368
	.quad	0
	.quad	7303
	.quad	GHC.IO.Handle.Internals.$wwriteCharBuffer_slow


==================== Asm code ====================
2018-03-16 16:05:15.789585474 UTC

.section .text
.align 8
_cadVE:
_cadVE:
	movq (%rbp),%rax
	leaq block_cadVH_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cadVH
_cadVI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadVE, .-_cadVE


==================== Asm code ====================
2018-03-16 16:05:15.790339891 UTC

.section .text
.align 8
_cadVH:
_cadVH:
	leaq block_cadVR_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 55(%rbx),%rdi
	movq 87(%rbx),%rbx
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq 8(%rsi),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _cadVR
_cadXV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadVH, .-_cadVH


==================== Asm code ====================
2018-03-16 16:05:15.791029561 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadVH_info:
	.quad	_cadVH
	.quad	3654
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.791893903 UTC

.section .text
.align 8
_cadVR:
_cadVR:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cadY9
_cadYB:
	leaq block_cadYm_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cadYm
_cadYn:
	movq (%rbx),%rax
	jmp *(%rax)
_cadYc:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cadY9:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cadYc
_cadYb:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 64(%rbp),%rax
	movq %rax,-40(%r12)
	movq 72(%rbp),%rax
	movq %rax,-32(%r12)
	movq 56(%rbp),%rax
	movq %rax,-24(%r12)
	movq 80(%rbp),%rax
	movq %rax,-16(%r12)
	movq 88(%rbp),%rax
	movq %rax,-8(%r12)
	movq 96(%rbp),%rax
	movq %rax,(%r12)
	leaq block_cadY0_info(%rip),%rax
	movq %rax,(%rbp)
	movq 40(%rbp),%rsi
	leaq -47(%r12),%r14
	jmp *GHC.IO.Encoding.Latin1.latin3_entry@gotpcrel(%rip)
	.size _cadVR, .-_cadVR


==================== Asm code ====================
2018-03-16 16:05:15.792686015 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadVR_info:
	.quad	_cadVR
	.quad	233484
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.793504735 UTC

.section .text
.align 8
_cadY0:
_cadY0:
	leaq block_cadY2_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cadY2
_cadY3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadY0, .-_cadY0


==================== Asm code ====================
2018-03-16 16:05:15.794120145 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadY0_info:
	.quad	_cadY0
	.quad	259084
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.794792527 UTC

.section .text
.align 8
_cadY2:
_cadY2:
	leaq block_cadY7_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rbx
	movq %rax,96(%rbp)
	testb $7,%bl
	jne _cadY7
_cadYf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadY2, .-_cadY2


==================== Asm code ====================
2018-03-16 16:05:15.79545479 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadY2_info:
	.quad	_cadY2
	.quad	259084
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.796098021 UTC

.section .text
.align 8
_cadY7:
_cadY7:
	movq 96(%rbp),%rax
	movq %rax,96(%rbp)
	movq 23(%rbx),%rax
	movq %rax,80(%rbp)
	movq 7(%rbx),%rax
	movq %rax,72(%rbp)
	movq 15(%rbx),%rax
	movq %rax,64(%rbp)
	movq 31(%rbx),%rax
	movq %rax,56(%rbp)
	movq 39(%rbx),%rax
	movq %rax,40(%rbp)
	movq 47(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp _cadVT
	.size _cadY7, .-_cadY7


==================== Asm code ====================
2018-03-16 16:05:15.796767751 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadY7_info:
	.quad	_cadY7
	.quad	128012
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.797593239 UTC

.section .text
.align 8
_cadYm:
_cadYm:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cadYE
_cadYD:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	movq 64(%rbp),%rcx
	movq %rcx,-40(%r12)
	movq 72(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq 56(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq 80(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq 88(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq 96(%rbp),%rcx
	movq %rcx,(%r12)
	leaq block_cadYs_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 40(%rbp),%r8
	leaq -47(%r12),%rdi
	movq %rbx,%rsi
	movq %rax,%r14
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_cadYE:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cadYm, .-_cadYm


==================== Asm code ====================
2018-03-16 16:05:15.798381975 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadYm_info:
	.quad	_cadYm
	.quad	233484
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.799064523 UTC

.section .text
.align 8
_cadYs:
_cadYs:
	leaq block_cadYu_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cadYu
_cadYv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadYs, .-_cadYs


==================== Asm code ====================
2018-03-16 16:05:15.799664969 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadYs_info:
	.quad	_cadYs
	.quad	259084
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.800387556 UTC

.section .text
.align 8
_cadYu:
_cadYu:
	leaq block_cadYz_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,96(%rbp)
	testb $7,%bl
	jne _cadYz
_cadYH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadYu, .-_cadYu


==================== Asm code ====================
2018-03-16 16:05:15.800975967 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadYu_info:
	.quad	_cadYu
	.quad	259084
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.801719591 UTC

.section .text
.align 8
_cadYz:
_cadYz:
	movq 47(%rbx),%rax
	movq %rax,(%rbp)
	movq 39(%rbx),%rax
	movq %rax,40(%rbp)
	movq 31(%rbx),%rax
	movq %rax,56(%rbp)
	movq 15(%rbx),%rax
	movq %rax,64(%rbp)
	movq 7(%rbx),%rax
	movq %rax,72(%rbp)
	movq 23(%rbx),%rax
	movq %rax,80(%rbp)
	movq 96(%rbp),%rax
	movq %rax,96(%rbp)
	addq $-8,%rbp
	jmp _cadVT
	.size _cadYz, .-_cadYz


==================== Asm code ====================
2018-03-16 16:05:15.803051212 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadYz_info:
	.quad	_cadYz
	.quad	128012
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.803968826 UTC

.section .text
.align 8
_cadVT:
_cadVT:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cadVY
_cadVX:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 80(%rbp),%rax
	movq %rax,-40(%r12)
	movq 72(%rbp),%rax
	movq %rax,-32(%r12)
	movq 88(%rbp),%rax
	movq %rax,-24(%r12)
	movq 64(%rbp),%rax
	movq %rax,-16(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -47(%r12),%rcx
	cmpq %rbx,%rax
	je _uadYT
_cadWs:
	leaq block_cadWq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 104(%rbp),%rbx
	movq %rcx,88(%rbp)
	testb $7,%bl
	jne _cadWq
_cadWt:
	movq (%rbx),%rax
	jmp *(%rax)
_uadYT:
	movq %rcx,96(%rbp)
	addq $16,%rbp
	jmp _sacPQ
_cadVY:
	movq $56,904(%r13)
	leaq block_cadVT_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cadVT, .-_cadVT


==================== Asm code ====================
2018-03-16 16:05:15.804745339 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadVT_info:
	.quad	_cadVT
	.quad	206925
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.805809858 UTC

.section .text
.align 8
_cadWq:
_cadWq:
	movq 40(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rsi
	movq 31(%rbx),%rdi
	movq 39(%rbx),%r8
	movq 47(%rbx),%rbx
	cmpq %rbx,%r8
	je _sacQb
_cadXS:
	cmpq 96(%rbp),%r8
	jne _sacQb
_uadYU:
	movq 88(%rbp),%rax
	movq %rax,96(%rbp)
	addq $16,%rbp
	jmp _sacPQ
_sacQb:
	leaq block_cadWD_info(%rip),%r9
	movq %r9,-8(%rbp)
	movq %rbx,%r9
	movq %rax,%rbx
	movq %r9,(%rbp)
	movq %r8,40(%rbp)
	movq %rdi,64(%rbp)
	movq %rdx,72(%rbp)
	movq %rcx,80(%rbp)
	movq %rsi,96(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cadWD
_cadWF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadWq, .-_cadWq


==================== Asm code ====================
2018-03-16 16:05:15.806544913 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadWq_info:
	.quad	_cadWq
	.quad	190541
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.807466503 UTC

.section .text
.align 8
_cadWD:
_cadWD:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $3,%rax
	jb _uadYP
_cadX2:
	leaq block_cadX0_info(%rip),%rax
	movq %rax,(%rbp)
	movq 5(%rbx),%rbx
	testb $7,%bl
	jne _cadX0
_cadX3:
	movq (%rbx),%rax
	jmp *(%rax)
_uadYP:
	movq 96(%rbp),%rcx
	cmpq $2,%rax
	jb _uadYV
_cadWX:
	movq 40(%rbp),%rax
	movq 48(%rbp),%rdx
	movq 8(%rbp),%rsi
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rsi,%rdi
	movq %rax,%rsi
	movq %rdi,%rax
	movq %rcx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rdx,%r14
	movq %rcx,72(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq 64(%rsp),%rax
	cmpq %rax,%r14
	je _uadYW
_uadYX:
	addq $8,%rbp
	jmp _cadXE
_uadYW:
	addq $120,%rbp
	jmp _cadXF
_uadYV:
	movq %rcx,104(%rbp)
	addq $24,%rbp
	jmp _sacPQ
	.size _cadWD, .-_cadWD


==================== Asm code ====================
2018-03-16 16:05:15.808254145 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadWD_info:
	.quad	_cadWD
	.quad	284878
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.809111352 UTC

.section .text
.align 8
_cadX0:
_cadX0:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cadXh
_cadXm:
	leaq block_cadXk_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cadXk
_cadXn:
	movq (%rbx),%rax
	jmp *(%rax)
_cadXh:
	movq 96(%rbp),%rax
	movq 40(%rbp),%rcx
	movq 48(%rbp),%rdx
	movq 8(%rbp),%rsi
	movq %rax,8(%rcx)
	subq $8,%rsp
	movq %r13,%rax
	movq %rsi,%rdi
	movq %rcx,%rsi
	movq %rdi,%rcx
	movq %rax,%rdi
	xorl %eax,%eax
	movq %rdx,%r14
	movq %rcx,72(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq 64(%rsp),%rax
	cmpq %rax,%r14
	je _uadZ1
_uadZ2:
	addq $8,%rbp
	jmp _cadXE
_uadZ1:
	addq $120,%rbp
	jmp _cadXF
	.size _cadX0, .-_cadX0


==================== Asm code ====================
2018-03-16 16:05:15.809877888 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadX0_info:
	.quad	_cadX0
	.quad	284878
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.810668946 UTC

.section .text
.align 8
_cadXk:
_cadXk:
	movq 96(%rbp),%rax
	movq 16(%rbp),%rcx
	subq 56(%rbp),%rcx
	cmpq 7(%rbx),%rcx
	jl _cadXH
_uadYY:
	movq %rax,104(%rbp)
	addq $24,%rbp
	jmp _sacPQ
_cadXH:
	movq 40(%rbp),%rbx
	movq 48(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq %rax,8(%rbx)
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	movq %rcx,%rbx
	movq %rdx,%r14
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	cmpq %r14,%rbx
	je _uadYZ
_uadZ0:
	addq $8,%rbp
	jmp _cadXE
_uadYZ:
	addq $120,%rbp
	jmp _cadXF
	.size _cadXk, .-_cadXk


==================== Asm code ====================
2018-03-16 16:05:15.811369675 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadXk_info:
	.quad	_cadXk
	.quad	284878
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.812042337 UTC

.section .text
.align 8
_cadXE:
_cadXE:
	movq 56(%rbp),%rax
	movq %rax,56(%rbp)
	movq 64(%rbp),%rax
	movq 96(%rbp),%rbx
	movq %rbx,64(%rbp)
	movq 72(%rbp),%rbx
	movq 80(%rbp),%rcx
	movq %rcx,72(%rbp)
	movq %rbx,80(%rbp)
	movq %rax,88(%rbp)
	movq 40(%rbp),%rax
	movq %rax,96(%rbp)
	movq (%rbp),%rax
	movq %rax,104(%rbp)
	addq $56,%rbp
	jmp _cadVE
	.size _cadXE, .-_cadXE


==================== Asm code ====================
2018-03-16 16:05:15.812757118 UTC

.section .text
.align 8
_sacPQ:
_sacPQ:
	movq 8(%rbp),%rax
	leaq block_cadW5_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq (%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq 80(%rbp),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.BufferedIO.flushWriteBuffer_entry@gotpcrel(%rip)
	.size _sacPQ, .-_sacPQ


==================== Asm code ====================
2018-03-16 16:05:15.813604845 UTC

.section .text
.align 8
_cadW5:
_cadW5:
	movq 8(%rbp),%rax
	movq 80(%rbp),%rcx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	movq %rcx,%rbx
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_cadWa_info(%rip),%rax
	movq %rax,24(%rbp)
	addq $24,%rbp
	testb $7,%bl
	jne _cadWa
_cadWd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cadW5, .-_cadW5


==================== Asm code ====================
2018-03-16 16:05:15.814277157 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadW5_info:
	.quad	_cadW5
	.quad	32138
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.815059314 UTC

.section .text
.align 8
_cadWa:
_cadWa:
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	cmpq %rcx,%rax
	je _uadZ4
_cadWl:
	movq 8(%rbp),%rdx
	movq %rdx,8(%rbp)
	movq 23(%rbx),%rdx
	movq %rdx,16(%rbp)
	movq 7(%rbx),%rdx
	movq %rdx,24(%rbp)
	movq 15(%rbx),%rdx
	movq %rdx,32(%rbp)
	movq 31(%rbx),%rbx
	movq %rbx,40(%rbp)
	movq %rax,48(%rbp)
	movq %rcx,56(%rbp)
	addq $8,%rbp
	jmp _cadVE
_uadZ4:
	addq $64,%rbp
	jmp _cadXF
	.size _cadWa, .-_cadWa


==================== Asm code ====================
2018-03-16 16:05:15.815719447 UTC

.section .data.rel.ro
.align 8
.align 1
block_cadWa_info:
	.quad	_cadWa
	.quad	8071
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.816383282 UTC

.section .text
.align 8
_cadXF:
_cadXF:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cadXF, .-_cadXF


==================== Asm code ====================
2018-03-16 16:05:15.819924149 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.writeCharBuffer1_closure
.type GHC.IO.Handle.Internals.writeCharBuffer1_closure, @object
GHC.IO.Handle.Internals.writeCharBuffer1_closure:
	.quad	GHC.IO.Handle.Internals.writeCharBuffer1_info


==================== Asm code ====================
2018-03-16 16:05:15.820711963 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.writeCharBuffer1_entry
.type GHC.IO.Handle.Internals.writeCharBuffer1_entry, @object
GHC.IO.Handle.Internals.writeCharBuffer1_entry:
_cae26:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cae27
_cae28:
	leaq block_cae23_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cae23
_cae24:
	movq (%rbx),%rax
	jmp *(%rax)
_cae27:
	leaq GHC.IO.Handle.Internals.writeCharBuffer1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.writeCharBuffer1_entry, .-GHC.IO.Handle.Internals.writeCharBuffer1_entry


==================== Asm code ====================
2018-03-16 16:05:15.821451447 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.writeCharBuffer1_info
.type GHC.IO.Handle.Internals.writeCharBuffer1_info, @object
GHC.IO.Handle.Internals.writeCharBuffer1_info:
	.quad	GHC.IO.Handle.Internals.writeCharBuffer1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:05:15.822167417 UTC

.section .text
.align 8
_cae23:
_cae23:
	movq 31(%rbx),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.IO.Handle.Internals.$wwriteCharBuffer_entry
	.size _cae23, .-_cae23


==================== Asm code ====================
2018-03-16 16:05:15.822792811 UTC

.section .data.rel.ro
.align 8
.align 1
block_cae23_info:
	.quad	_cae23
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.824934994 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.writeCharBuffer_closure
.type GHC.IO.Handle.Internals.writeCharBuffer_closure, @object
GHC.IO.Handle.Internals.writeCharBuffer_closure:
	.quad	GHC.IO.Handle.Internals.writeCharBuffer_info


==================== Asm code ====================
2018-03-16 16:05:15.825622759 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.writeCharBuffer_entry
.type GHC.IO.Handle.Internals.writeCharBuffer_entry, @object
GHC.IO.Handle.Internals.writeCharBuffer_entry:
_cae2t:
	jmp GHC.IO.Handle.Internals.writeCharBuffer1_entry
	.size GHC.IO.Handle.Internals.writeCharBuffer_entry, .-GHC.IO.Handle.Internals.writeCharBuffer_entry


==================== Asm code ====================
2018-03-16 16:05:15.826188083 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.writeCharBuffer_info
.type GHC.IO.Handle.Internals.writeCharBuffer_info, @object
GHC.IO.Handle.Internals.writeCharBuffer_info:
	.quad	GHC.IO.Handle.Internals.writeCharBuffer_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:05:15.838937594 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushCharBuffer3_closure
.type GHC.IO.Handle.Internals.flushCharBuffer3_closure, @object
GHC.IO.Handle.Internals.flushCharBuffer3_closure:
	.quad	GHC.IO.Handle.Internals.flushCharBuffer3_info


==================== Asm code ====================
2018-03-16 16:05:15.83980627 UTC

.section .text
.align 8
sat_sacRY_entry:
_cae38:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cae3c
_cae3d:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cae35_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cae35
_cae36:
	movq (%rbx),%rax
	jmp *(%rax)
_cae3c:
	jmp *-16(%r13)
	.size sat_sacRY_entry, .-sat_sacRY_entry


==================== Asm code ====================
2018-03-16 16:05:15.840451451 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sacRY_info:
	.quad	sat_sacRY_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:15.841278403 UTC

.section .text
.align 8
_cae35:
_cae35:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cae3g
_cae3f:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rsi
	movq %rsi,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cae3g:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cae35, .-_cae35


==================== Asm code ====================
2018-03-16 16:05:15.842013984 UTC

.section .data.rel.ro
.align 8
.align 1
block_cae35_info:
	.quad	_cae35
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.842736732 UTC

.section .text
.align 8
sat_sacSh_entry:
_cae3E:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cae3L
_cae3M:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cae3B_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cae3B
_cae3C:
	movq (%rbx),%rax
	jmp *(%rax)
_cae3L:
	jmp *-16(%r13)
	.size sat_sacSh_entry, .-sat_sacSh_entry


==================== Asm code ====================
2018-03-16 16:05:15.843433232 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sacSh_info:
	.quad	sat_sacSh_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:05:15.84420523 UTC

.section .text
.align 8
_cae3B:
_cae3B:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cae3P
_cae3O:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 39(%rbx),%rbx
	addq 8(%rbp),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cae3P:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cae3B, .-_cae3B


==================== Asm code ====================
2018-03-16 16:05:15.844904869 UTC

.section .data.rel.ro
.align 8
.align 1
block_cae3B_info:
	.quad	_cae3B
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.845768263 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushCharBuffer3_entry
.type GHC.IO.Handle.Internals.flushCharBuffer3_entry, @object
GHC.IO.Handle.Internals.flushCharBuffer3_entry:
_cae3R:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cae3S
_cae3T:
	leaq block_cae2E_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cae2E
_cae2F:
	movq (%rbx),%rax
	jmp *(%rax)
_cae3S:
	leaq GHC.IO.Handle.Internals.flushCharBuffer3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.flushCharBuffer3_entry, .-GHC.IO.Handle.Internals.flushCharBuffer3_entry


==================== Asm code ====================
2018-03-16 16:05:15.846454176 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushCharBuffer3_info
.type GHC.IO.Handle.Internals.flushCharBuffer3_info, @object
GHC.IO.Handle.Internals.flushCharBuffer3_info:
	.quad	GHC.IO.Handle.Internals.flushCharBuffer3_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:15.847932362 UTC

.section .text
.align 8
_cae2E:
_cae2E:
	leaq block_cae2J_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 47(%rbx),%rax
	movq 63(%rbx),%rcx
	movq 71(%rbx),%rdx
	movq 95(%rbx),%rbx
	movq %rbx,%rsi
	movq 8(%rdx),%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	movq %rax,(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cae2J
_cae2K:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cae2E, .-_cae2E


==================== Asm code ====================
2018-03-16 16:05:15.848664435 UTC

.section .data.rel.ro
.align 8
.align 1
block_cae2E_info:
	.quad	_cae2E
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.849654737 UTC

.section .text
.align 8
_cae2J:
_cae2J:
	leaq block_cae2O_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cae2O
_cae2P:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cae2J, .-_cae2J


==================== Asm code ====================
2018-03-16 16:05:15.850305857 UTC

.section .data.rel.ro
.align 8
.align 1
block_cae2J_info:
	.quad	_cae2J
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.851088619 UTC

.section .text
.align 8
_cae2O:
_cae2O:
	andl $7,%ebx
	cmpq $1,%rbx
	jne _cae4G
_cae4C:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _cae4G
_cae3Y:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cae2W_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _cae2W
_cae2X:
	movq (%rbx),%rax
	jmp *(%rax)
_cae4G:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cae2O, .-_cae2O


==================== Asm code ====================
2018-03-16 16:05:15.851838616 UTC

.section .data.rel.ro
.align 8
.align 1
block_cae2O_info:
	.quad	_cae2O
	.quad	198
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.852693923 UTC

.section .text
.align 8
_cae2W:
_cae2W:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cae41
_cae40:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq 8(%rax),%rdx
	leaq sat_sacRY_info(%rip),%rsi
	movq %rsi,-16(%r12)
	movq %rdx,(%r12)
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_cae3l_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rcx
	movq 64(%rsp),%rax
	movq %rax,%rbx
	movq %rcx,(%rbp)
	movq %r14,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cae3l
_cae3m:
	movq (%rbx),%rax
	jmp *(%rax)
_cae41:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cae2W, .-_cae2W


==================== Asm code ====================
2018-03-16 16:05:15.853490622 UTC

.section .data.rel.ro
.align 8
.align 1
block_cae2W_info:
	.quad	_cae2W
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.854365283 UTC

.section .text
.align 8
_cae3l:
_cae3l:
	movq 39(%rbx),%rax
	testq %rax,%rax
	jne _cae44
_cae4z:
	movq 32(%rbp),%rax
	movq 8(%rbp),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cae44:
	leaq block_cae3s_info(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq 24(%rbp),%rbx
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rsi,24(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cae3s
_cae3t:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cae3l, .-_cae3l


==================== Asm code ====================
2018-03-16 16:05:15.855164761 UTC

.section .data.rel.ro
.align 8
.align 1
block_cae3l_info:
	.quad	_cae3l
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.856042254 UTC

.section .text
.align 8
_cae3s:
_cae3s:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cae46
_cae4o:
	leaq block_cae4c_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cae4c
_cae4d:
	movq (%rbx),%rax
	jmp *(%rax)
_cae49:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cae46:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cae49
_cae48:
	leaq sat_sacSh_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 56(%rbp),%rax
	leaq -24(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cae3s, .-_cae3s


==================== Asm code ====================
2018-03-16 16:05:15.856837265 UTC

.section .data.rel.ro
.align 8
.align 1
block_cae3s_info:
	.quad	_cae3s
	.quad	2183
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.857539065 UTC

.section .text
.align 8
_cae4c:
_cae4c:
	leaq block_cae4h_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 40(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,40(%rbp)
	addq $-8,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
	.size _cae4c, .-_cae4c


==================== Asm code ====================
2018-03-16 16:05:15.858162757 UTC

.section .data.rel.ro
.align 8
.align 1
block_cae4c_info:
	.quad	_cae4c
	.quad	2183
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.858976257 UTC

.section .text
.align 8
_cae4h:
_cae4h:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cae4s
_cae4r:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 56(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq block_cae4k_info(%rip),%rax
	movq %rax,56(%rbp)
	leaq -47(%r12),%r8
	movq 40(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 48(%rbp),%r14
	addq $56,%rbp
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_cae4s:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cae4h, .-_cae4h


==================== Asm code ====================
2018-03-16 16:05:15.859721564 UTC

.section .data.rel.ro
.align 8
.align 1
block_cae4h_info:
	.quad	_cae4h
	.quad	4360
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.860419132 UTC

.section .text
.align 8
_cae4k:
_cae4k:
	leaq block_cae4m_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cae4m
_cae4u:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cae4k, .-_cae4k


==================== Asm code ====================
2018-03-16 16:05:15.861031086 UTC

.section .data.rel.ro
.align 8
.align 1
block_cae4k_info:
	.quad	_cae4k
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.861781556 UTC

.section .text
.align 8
_cae4m:
_cae4m:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cae4m, .-_cae4m


==================== Asm code ====================
2018-03-16 16:05:15.862462778 UTC

.section .data.rel.ro
.align 8
.align 1
block_cae4m_info:
	.quad	_cae4m
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.864785837 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushCharReadBuffer_closure
.type GHC.IO.Handle.Internals.flushCharReadBuffer_closure, @object
GHC.IO.Handle.Internals.flushCharReadBuffer_closure:
	.quad	GHC.IO.Handle.Internals.flushCharReadBuffer_info


==================== Asm code ====================
2018-03-16 16:05:15.86577475 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushCharReadBuffer_entry
.type GHC.IO.Handle.Internals.flushCharReadBuffer_entry, @object
GHC.IO.Handle.Internals.flushCharReadBuffer_entry:
_cae6O:
	jmp GHC.IO.Handle.Internals.flushCharBuffer3_entry
	.size GHC.IO.Handle.Internals.flushCharReadBuffer_entry, .-GHC.IO.Handle.Internals.flushCharReadBuffer_entry


==================== Asm code ====================
2018-03-16 16:05:15.866328839 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushCharReadBuffer_info
.type GHC.IO.Handle.Internals.flushCharReadBuffer_info, @object
GHC.IO.Handle.Internals.flushCharReadBuffer_info:
	.quad	GHC.IO.Handle.Internals.flushCharReadBuffer_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:15.868080129 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl9_ra7Pp_bytes:
	.asciz "error"


==================== Asm code ====================
2018-03-16 16:05:15.870705599 UTC

.section .data
.align 8
.align 1
lvl10_ra7Pq_closure:
	.quad	lvl10_ra7Pq_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.87155313 UTC

.section .text
.align 8
lvl10_ra7Pq_entry:
_cae72:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cae73
_cae74:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cae71
_cae70:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl9_ra7Pp_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cae73:
	jmp *-16(%r13)
_cae71:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl10_ra7Pq_entry, .-lvl10_ra7Pq_entry


==================== Asm code ====================
2018-03-16 16:05:15.87223585 UTC

.section .data.rel.ro
.align 8
.align 1
lvl10_ra7Pq_info:
	.quad	lvl10_ra7Pq_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:15.874662291 UTC

.section .data
.align 8
.align 1
lvl11_ra7Pr_closure:
	.quad	lvl11_ra7Pr_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.875489299 UTC

.section .text
.align 8
lvl11_ra7Pr_entry:
_cae7j:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cae7k
_cae7l:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cae7i
_cae7h:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Internals.$trModule4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cae7k:
	jmp *-16(%r13)
_cae7i:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl11_ra7Pr_entry, .-lvl11_ra7Pr_entry


==================== Asm code ====================
2018-03-16 16:05:15.876206715 UTC

.section .data.rel.ro
.align 8
.align 1
lvl11_ra7Pr_info:
	.quad	lvl11_ra7Pr_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:15.878682952 UTC

.section .data
.align 8
.align 1
lvl12_ra7Ps_closure:
	.quad	lvl12_ra7Ps_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.879478288 UTC

.section .text
.align 8
lvl12_ra7Ps_entry:
_cae7A:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cae7B
_cae7C:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cae7z
_cae7y:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Internals.$trModule2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cae7B:
	jmp *-16(%r13)
_cae7z:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl12_ra7Ps_entry, .-lvl12_ra7Ps_entry


==================== Asm code ====================
2018-03-16 16:05:15.880678763 UTC

.section .data.rel.ro
.align 8
.align 1
lvl12_ra7Ps_info:
	.quad	lvl12_ra7Ps_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:15.882840541 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl13_ra7Pt_bytes:
	.asciz "./GHC/IO/Handle/Internals.hs"


==================== Asm code ====================
2018-03-16 16:05:15.885319687 UTC

.section .data
.align 8
.align 1
lvl14_ra7Pu_closure:
	.quad	lvl14_ra7Pu_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.886154261 UTC

.section .text
.align 8
lvl14_ra7Pu_entry:
_cae7S:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cae7T
_cae7U:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cae7R
_cae7Q:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl13_ra7Pt_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cae7T:
	jmp *-16(%r13)
_cae7R:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl14_ra7Pu_entry, .-lvl14_ra7Pu_entry


==================== Asm code ====================
2018-03-16 16:05:15.886878716 UTC

.section .data.rel.ro
.align 8
.align 1
lvl14_ra7Pu_info:
	.quad	lvl14_ra7Pu_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:05:15.888508567 UTC

.section .data
.align 8
.align 1
lvl15_ra7Pv_closure:
	.quad	GHC.Types.I#_con_info
	.quad	487


==================== Asm code ====================
2018-03-16 16:05:15.890214445 UTC

.section .data
.align 8
.align 1
lvl16_ra7Pw_closure:
	.quad	GHC.Types.I#_con_info
	.quad	12


==================== Asm code ====================
2018-03-16 16:05:15.891919767 UTC

.section .data
.align 8
.align 1
lvl17_ra7Px_closure:
	.quad	GHC.Types.I#_con_info
	.quad	68


==================== Asm code ====================
2018-03-16 16:05:15.894125183 UTC

.section .data
.align 8
.align 1
lvl18_ra7Py_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl11_ra7Pr_closure
	.quad	lvl12_ra7Ps_closure
	.quad	lvl14_ra7Pu_closure
	.quad	lvl15_ra7Pv_closure+1
	.quad	lvl16_ra7Pw_closure+1
	.quad	lvl15_ra7Pv_closure+1
	.quad	lvl17_ra7Px_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.89585296 UTC

.section .data
.align 8
.align 1
lvl19_ra7Pz_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl10_ra7Pq_closure
	.quad	lvl18_ra7Py_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.897580059 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl20_ra7PA_bytes:
	.asciz "internal IO library error: Char buffer non-empty"


==================== Asm code ====================
2018-03-16 16:05:15.900578863 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushCharBuffer2_closure
.type GHC.IO.Handle.Internals.flushCharBuffer2_closure, @object
GHC.IO.Handle.Internals.flushCharBuffer2_closure:
	.quad	GHC.IO.Handle.Internals.flushCharBuffer2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.901550474 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushCharBuffer2_entry
.type GHC.IO.Handle.Internals.flushCharBuffer2_entry, @object
GHC.IO.Handle.Internals.flushCharBuffer2_entry:
_cae8h:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cae8i
_cae8j:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cae8e
_cae8d:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_cae8f_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl20_ra7PA_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cae8i:
	jmp *-16(%r13)
_cae8e:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Internals.flushCharBuffer2_entry, .-GHC.IO.Handle.Internals.flushCharBuffer2_entry


==================== Asm code ====================
2018-03-16 16:05:15.902291374 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushCharBuffer2_info
.type GHC.IO.Handle.Internals.flushCharBuffer2_info, @object
GHC.IO.Handle.Internals.flushCharBuffer2_info:
	.quad	GHC.IO.Handle.Internals.flushCharBuffer2_entry
	.quad	0
	.quad	12884901909
	.quad	Saded_srt+232


==================== Asm code ====================
2018-03-16 16:05:15.902976902 UTC

.section .text
.align 8
_cae8f:
_cae8f:
	movq %rbx,%rsi
	leaq lvl19_ra7Pz_closure+2(%rip),%r14
	addq $8,%rbp
	jmp *GHC.Err.error_entry@gotpcrel(%rip)
	.size _cae8f, .-_cae8f


==================== Asm code ====================
2018-03-16 16:05:15.903565093 UTC

.section .data.rel.ro
.align 8
.align 1
block_cae8f_info:
	.quad	_cae8f
	.quad	0
	.quad	12884901918
	.quad	Saded_srt+232


==================== Asm code ====================
2018-03-16 16:05:15.90796882 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushCharBuffer1_closure
.type GHC.IO.Handle.Internals.flushCharBuffer1_closure, @object
GHC.IO.Handle.Internals.flushCharBuffer1_closure:
	.quad	GHC.IO.Handle.Internals.flushCharBuffer1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.908747028 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushCharBuffer1_entry
.type GHC.IO.Handle.Internals.flushCharBuffer1_entry, @object
GHC.IO.Handle.Internals.flushCharBuffer1_entry:
_cae8G:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cae8K
_cae8L:
	leaq block_cae8D_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cae8D
_cae8E:
	movq (%rbx),%rax
	jmp *(%rax)
_cae8K:
	leaq GHC.IO.Handle.Internals.flushCharBuffer1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.flushCharBuffer1_entry, .-GHC.IO.Handle.Internals.flushCharBuffer1_entry


==================== Asm code ====================
2018-03-16 16:05:15.909447324 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushCharBuffer1_info
.type GHC.IO.Handle.Internals.flushCharBuffer1_info, @object
GHC.IO.Handle.Internals.flushCharBuffer1_info:
	.quad	GHC.IO.Handle.Internals.flushCharBuffer1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	Saded_srt+248


==================== Asm code ====================
2018-03-16 16:05:15.910163407 UTC

.section .text
.align 8
_cae8D:
_cae8D:
	movq 71(%rbx),%rax
	movq 8(%rax),%rax
	leaq block_cae8J_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cae8J
_cae8N:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cae8D, .-_cae8D


==================== Asm code ====================
2018-03-16 16:05:15.910798365 UTC

.section .data.rel.ro
.align 8
.align 1
block_cae8D_info:
	.quad	_cae8D
	.quad	0
	.quad	4294967326
	.quad	Saded_srt+256


==================== Asm code ====================
2018-03-16 16:05:15.911509947 UTC

.section .text
.align 8
_cae8J:
_cae8J:
	leaq block_cae8R_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cae8R
_cae8T:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cae8J, .-_cae8J


==================== Asm code ====================
2018-03-16 16:05:15.91215361 UTC

.section .data.rel.ro
.align 8
.align 1
block_cae8J_info:
	.quad	_cae8J
	.quad	1
	.quad	4294967326
	.quad	Saded_srt+256


==================== Asm code ====================
2018-03-16 16:05:15.913502674 UTC

.section .text
.align 8
_cae8R:
_cae8R:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cae8Z
_cae98:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _cae97
_cae96:
	leaq GHC.IO.Handle.Internals.flushCharBuffer2_closure(%rip),%rbx
	addq $32,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_cae97:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cae8Z:
	movq 24(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.flushCharBuffer3_entry
	.size _cae8R, .-_cae8R


==================== Asm code ====================
2018-03-16 16:05:15.914256887 UTC

.section .data.rel.ro
.align 8
.align 1
block_cae8R_info:
	.quad	_cae8R
	.quad	195
	.quad	4294967326
	.quad	Saded_srt+256


==================== Asm code ====================
2018-03-16 16:05:15.916398187 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushCharBuffer_closure
.type GHC.IO.Handle.Internals.flushCharBuffer_closure, @object
GHC.IO.Handle.Internals.flushCharBuffer_closure:
	.quad	GHC.IO.Handle.Internals.flushCharBuffer_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.916990065 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushCharBuffer_entry
.type GHC.IO.Handle.Internals.flushCharBuffer_entry, @object
GHC.IO.Handle.Internals.flushCharBuffer_entry:
_cae9H:
	jmp GHC.IO.Handle.Internals.flushCharBuffer1_entry
	.size GHC.IO.Handle.Internals.flushCharBuffer_entry, .-GHC.IO.Handle.Internals.flushCharBuffer_entry


==================== Asm code ====================
2018-03-16 16:05:15.918064233 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushCharBuffer_info
.type GHC.IO.Handle.Internals.flushCharBuffer_info, @object
GHC.IO.Handle.Internals.flushCharBuffer_info:
	.quad	GHC.IO.Handle.Internals.flushCharBuffer_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	Saded_srt+248


==================== Asm code ====================
2018-03-16 16:05:15.924613925 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer2_closure
.type GHC.IO.Handle.Internals.flushBuffer2_closure, @object
GHC.IO.Handle.Internals.flushBuffer2_closure:
	.quad	GHC.IO.Handle.Internals.flushBuffer2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.925420124 UTC

.section .text
.align 8
sat_sacTJ_entry:
_caeaj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caeak
_caeal:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq 16(%rbx),%rax
	movq 24(%rbx),%r14
	subq (%rax),%r14
	negq %r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_caeak:
	jmp *-16(%r13)
	.size sat_sacTJ_entry, .-sat_sacTJ_entry


==================== Asm code ====================
2018-03-16 16:05:15.926058738 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sacTJ_info:
	.quad	sat_sacTJ_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 16:05:15.926893887 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushBuffer2_entry
.type GHC.IO.Handle.Internals.flushBuffer2_entry, @object
GHC.IO.Handle.Internals.flushBuffer2_entry:
_caeao:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _caeap
_caeaq:
	leaq block_cae9S_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cae9S
_cae9T:
	movq (%rbx),%rax
	jmp *(%rax)
_caeap:
	leaq GHC.IO.Handle.Internals.flushBuffer2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.flushBuffer2_entry, .-GHC.IO.Handle.Internals.flushBuffer2_entry


==================== Asm code ====================
2018-03-16 16:05:15.927587503 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer2_info
.type GHC.IO.Handle.Internals.flushBuffer2_info, @object
GHC.IO.Handle.Internals.flushBuffer2_info:
	.quad	GHC.IO.Handle.Internals.flushBuffer2_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	Saded_srt+264


==================== Asm code ====================
2018-03-16 16:05:15.928355279 UTC

.section .text
.align 8
_cae9S:
_cae9S:
	leaq block_cae9X_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 7(%rbx),%rax
	movq 31(%rbx),%rcx
	movq 47(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cae9X
_cae9Y:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cae9S, .-_cae9S


==================== Asm code ====================
2018-03-16 16:05:15.928974354 UTC

.section .data.rel.ro
.align 8
.align 1
block_cae9S_info:
	.quad	_cae9S
	.quad	0
	.quad	4294967326
	.quad	Saded_srt+272


==================== Asm code ====================
2018-03-16 16:05:15.930040105 UTC

.section .text
.align 8
_cae9X:
_cae9X:
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	cmpq %rcx,%rax
	je _caeaJ
_caeau:
	leaq block_caea5_info(%rip),%rdx
	movq %rdx,-48(%rbp)
	movq 24(%rbp),%r14
	movq stg_ap_pv_info@gotpcrel(%rip),%rdx
	movq %rdx,-64(%rbp)
	movq 8(%rbp),%rdx
	movq %rdx,-56(%rbp)
	movq 7(%rbx),%rdx
	movq %rdx,-40(%rbp)
	movq 15(%rbx),%rdx
	movq %rdx,-32(%rbp)
	movq 31(%rbx),%rdx
	movq %rdx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	addq $-64,%rbp
	jmp *GHC.IO.Device.isSeekable_entry@gotpcrel(%rip)
_caeaJ:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cae9X, .-_cae9X


==================== Asm code ====================
2018-03-16 16:05:15.930734898 UTC

.section .data.rel.ro
.align 8
.align 1
block_cae9X_info:
	.quad	_cae9X
	.quad	3
	.quad	4294967326
	.quad	Saded_srt+272


==================== Asm code ====================
2018-03-16 16:05:15.931399773 UTC

.section .text
.align 8
_caea5:
_caea5:
	leaq block_caea7_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _caea7
_caea8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caea5, .-_caea5


==================== Asm code ====================
2018-03-16 16:05:15.932008655 UTC

.section .data.rel.ro
.align 8
.align 1
block_caea5_info:
	.quad	_caea5
	.quad	3849
	.quad	4294967326
	.quad	Saded_srt+272


==================== Asm code ====================
2018-03-16 16:05:15.932854691 UTC

.section .text
.align 8
_caea7:
_caea7:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _caeaz
_caeaB:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _caeaE
_caeaD:
	leaq sat_sacTJ_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-8(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	leaq block_caeaA_info(%rip),%rax
	movq %rax,(%rbp)
	movq 72(%rbp),%r14
	movq stg_ap_pppv_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-24(%rbp)
	movq GHC.IO.Device.RelativeSeek_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp *GHC.IO.Device.seek_entry@gotpcrel(%rip)
_caeaE:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_caeaz:
	leaq GHC.IO.Handle.Internals.flushBuffer3_closure(%rip),%rbx
	addq $80,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _caea7, .-_caea7


==================== Asm code ====================
2018-03-16 16:05:15.933661743 UTC

.section .data.rel.ro
.align 8
.align 1
block_caea7_info:
	.quad	_caea7
	.quad	3849
	.quad	4294967326
	.quad	Saded_srt+272


==================== Asm code ====================
2018-03-16 16:05:15.934497135 UTC

.section .text
.align 8
_caeaA:
_caeaA:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _caeaI
_caeaH:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 8(%rbp),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 48(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 64(%rbp),%rax
	leaq -47(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caeaI:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caeaA, .-_caeaA


==================== Asm code ====================
2018-03-16 16:05:15.93523664 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeaA_info:
	.quad	_caeaA
	.quad	24329
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.937430751 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushByteReadBuffer_closure
.type GHC.IO.Handle.Internals.flushByteReadBuffer_closure, @object
GHC.IO.Handle.Internals.flushByteReadBuffer_closure:
	.quad	GHC.IO.Handle.Internals.flushByteReadBuffer_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.938034703 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushByteReadBuffer_entry
.type GHC.IO.Handle.Internals.flushByteReadBuffer_entry, @object
GHC.IO.Handle.Internals.flushByteReadBuffer_entry:
_caebW:
	jmp GHC.IO.Handle.Internals.flushBuffer2_entry
	.size GHC.IO.Handle.Internals.flushByteReadBuffer_entry, .-GHC.IO.Handle.Internals.flushByteReadBuffer_entry


==================== Asm code ====================
2018-03-16 16:05:15.938633048 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushByteReadBuffer_info
.type GHC.IO.Handle.Internals.flushByteReadBuffer_info, @object
GHC.IO.Handle.Internals.flushByteReadBuffer_info:
	.quad	GHC.IO.Handle.Internals.flushByteReadBuffer_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	Saded_srt+264


==================== Asm code ====================
2018-03-16 16:05:15.953980797 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer1_closure
.type GHC.IO.Handle.Internals.flushBuffer1_closure, @object
GHC.IO.Handle.Internals.flushBuffer1_closure:
	.quad	GHC.IO.Handle.Internals.flushBuffer1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.954916432 UTC

.section .text
.align 8
sat_sacUL_entry:
_caecL:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caecP
_caecQ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_caecI_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _caecI
_caecJ:
	movq (%rbx),%rax
	jmp *(%rax)
_caecP:
	jmp *-16(%r13)
	.size sat_sacUL_entry, .-sat_sacUL_entry


==================== Asm code ====================
2018-03-16 16:05:15.955574345 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sacUL_info:
	.quad	sat_sacUL_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:15.956358393 UTC

.section .text
.align 8
_caecI:
_caecI:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _caecT
_caecS:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rsi
	movq %rsi,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caecT:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caecI, .-_caecI


==================== Asm code ====================
2018-03-16 16:05:15.957085694 UTC

.section .data.rel.ro
.align 8
.align 1
block_caecI_info:
	.quad	_caecI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.958109241 UTC

.section .text
.align 8
sat_sacV4_entry:
_caedh:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _caedo
_caedp:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_caede_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _caede
_caedf:
	movq (%rbx),%rax
	jmp *(%rax)
_caedo:
	jmp *-16(%r13)
	.size sat_sacV4_entry, .-sat_sacV4_entry


==================== Asm code ====================
2018-03-16 16:05:15.958807134 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sacV4_info:
	.quad	sat_sacV4_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:05:15.959611039 UTC

.section .text
.align 8
_caede:
_caede:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _caeds
_caedr:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 39(%rbx),%rbx
	addq 8(%rbp),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caeds:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caede, .-_caede


==================== Asm code ====================
2018-03-16 16:05:15.960333692 UTC

.section .data.rel.ro
.align 8
.align 1
block_caede_info:
	.quad	_caede
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.961097793 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushBuffer1_entry
.type GHC.IO.Handle.Internals.flushBuffer1_entry, @object
GHC.IO.Handle.Internals.flushBuffer1_entry:
_caedu:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _caedv
_caedw:
	leaq block_caec7_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caec7
_caec8:
	movq (%rbx),%rax
	jmp *(%rax)
_caedv:
	leaq GHC.IO.Handle.Internals.flushBuffer1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.flushBuffer1_entry, .-GHC.IO.Handle.Internals.flushBuffer1_entry


==================== Asm code ====================
2018-03-16 16:05:15.961827249 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer1_info
.type GHC.IO.Handle.Internals.flushBuffer1_info, @object
GHC.IO.Handle.Internals.flushBuffer1_info:
	.quad	GHC.IO.Handle.Internals.flushBuffer1_entry
	.quad	0
	.quad	21474836494
	.quad	8589934597
	.quad	Saded_srt+264


==================== Asm code ====================
2018-03-16 16:05:15.962653501 UTC

.section .text
.align 8
_caec7:
_caec7:
	leaq block_caecc_info(%rip),%rax
	movq %rax,-56(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 63(%rbx),%rdi
	movq 71(%rbx),%r8
	movq 95(%rbx),%rbx
	movq %rbx,%r9
	movq 8(%r8),%rbx
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rax,(%rbp)
	addq $-56,%rbp
	testb $7,%bl
	jne _caecc
_caecd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caec7, .-_caec7


==================== Asm code ====================
2018-03-16 16:05:15.964135764 UTC

.section .data.rel.ro
.align 8
.align 1
block_caec7_info:
	.quad	_caec7
	.quad	0
	.quad	4294967326
	.quad	Saded_srt+264


==================== Asm code ====================
2018-03-16 16:05:15.964848143 UTC

.section .text
.align 8
_caecc:
_caecc:
	leaq block_caech_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _caech
_caeci:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caecc, .-_caecc


==================== Asm code ====================
2018-03-16 16:05:15.965446935 UTC

.section .data.rel.ro
.align 8
.align 1
block_caecc_info:
	.quad	_caecc
	.quad	7
	.quad	4294967326
	.quad	Saded_srt+264


==================== Asm code ====================
2018-03-16 16:05:15.966226184 UTC

.section .text
.align 8
_caech:
_caech:
	andl $7,%ebx
	cmpq $1,%rbx
	je _caedB
_caees:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_caeeq_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _caeeq
_caeet:
	movq (%rbx),%rax
	jmp *(%rax)
_caedB:
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_caecm_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _caecm
_caecn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caech, .-_caech


==================== Asm code ====================
2018-03-16 16:05:15.966914227 UTC

.section .data.rel.ro
.align 8
.align 1
block_caech_info:
	.quad	_caech
	.quad	7
	.quad	4294967326
	.quad	Saded_srt+264


==================== Asm code ====================
2018-03-16 16:05:15.967609765 UTC

.section .text
.align 8
_caecm:
_caecm:
	leaq block_caecr_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _caecr
_caecs:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caecm, .-_caecm


==================== Asm code ====================
2018-03-16 16:05:15.96824938 UTC

.section .data.rel.ro
.align 8
.align 1
block_caecm_info:
	.quad	_caecm
	.quad	5
	.quad	4294967326
	.quad	Saded_srt+264


==================== Asm code ====================
2018-03-16 16:05:15.969041887 UTC

.section .text
.align 8
_caecr:
_caecr:
	movq 56(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	jne _caeen
_caeej:
	movq 16(%rbp),%rbx
	cmpq 8(%rbp),%rbx
	je _caeen
_caedF:
	movq 32(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_caecz_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _caecz
_caecA:
	movq (%rbx),%rax
	jmp *(%rax)
_caeen:
	movq %rax,%r14
	addq $64,%rbp
	jmp GHC.IO.Handle.Internals.flushBuffer2_entry
	.size _caecr, .-_caecr


==================== Asm code ====================
2018-03-16 16:05:15.969850511 UTC

.section .data.rel.ro
.align 8
.align 1
block_caecr_info:
	.quad	_caecr
	.quad	199
	.quad	4294967326
	.quad	Saded_srt+264


==================== Asm code ====================
2018-03-16 16:05:15.970734595 UTC

.section .text
.align 8
_caecz:
_caecz:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caedI
_caedH:
	movq 24(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq 8(%rax),%rdx
	leaq sat_sacUL_info(%rip),%rsi
	movq %rsi,-16(%r12)
	movq %rdx,(%r12)
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_caecY_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rcx
	movq 64(%rsp),%rax
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	movq %r14,24(%rbp)
	testb $7,%bl
	jne _caecY
_caecZ:
	movq (%rbx),%rax
	jmp *(%rax)
_caedI:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caecz, .-_caecz


==================== Asm code ====================
2018-03-16 16:05:15.971454625 UTC

.section .data.rel.ro
.align 8
.align 1
block_caecz_info:
	.quad	_caecz
	.quad	133
	.quad	4294967326
	.quad	Saded_srt+264


==================== Asm code ====================
2018-03-16 16:05:15.972273421 UTC

.section .text
.align 8
_caecY:
_caecY:
	movq 39(%rbx),%rax
	testq %rax,%rax
	jne _caedL
_caeeg:
	movq 40(%rbp),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq %rcx,8(%rbx)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rbx,%rsi
	movq %rcx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq %rbx,%r14
	addq $48,%rbp
	jmp GHC.IO.Handle.Internals.flushBuffer2_entry
_caedL:
	leaq block_caed5_info(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq 32(%rbp),%rbx
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rsi,32(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _caed5
_caed6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caecY, .-_caecY


==================== Asm code ====================
2018-03-16 16:05:15.973012051 UTC

.section .data.rel.ro
.align 8
.align 1
block_caecY_info:
	.quad	_caecY
	.quad	5
	.quad	4294967326
	.quad	Saded_srt+264


==================== Asm code ====================
2018-03-16 16:05:15.973938158 UTC

.section .text
.align 8
_caed5:
_caed5:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _caedN
_caee5:
	leaq block_caedT_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _caedT
_caedU:
	movq (%rbx),%rax
	jmp *(%rax)
_caedQ:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_caedN:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _caedQ
_caedP:
	leaq sat_sacV4_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 64(%rbp),%rax
	movq 32(%rbp),%rbx
	leaq -24(%r12),%rcx
	movq %rcx,8(%rbx)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rbx,%rsi
	movq %rcx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq %rbx,%r14
	addq $72,%rbp
	jmp GHC.IO.Handle.Internals.flushBuffer2_entry
	.size _caed5, .-_caed5


==================== Asm code ====================
2018-03-16 16:05:15.974720037 UTC

.section .data.rel.ro
.align 8
.align 1
block_caed5_info:
	.quad	_caed5
	.quad	4232
	.quad	4294967326
	.quad	Saded_srt+264


==================== Asm code ====================
2018-03-16 16:05:15.975427336 UTC

.section .text
.align 8
_caedT:
_caedT:
	leaq block_caedY_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 48(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,48(%rbp)
	addq $-8,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
	.size _caedT, .-_caedT


==================== Asm code ====================
2018-03-16 16:05:15.976077933 UTC

.section .data.rel.ro
.align 8
.align 1
block_caedT_info:
	.quad	_caedT
	.quad	4232
	.quad	4294967326
	.quad	Saded_srt+264


==================== Asm code ====================
2018-03-16 16:05:15.976872354 UTC

.section .text
.align 8
_caedY:
_caedY:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _caee9
_caee8:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 64(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq block_caee1_info(%rip),%rax
	movq %rax,32(%rbp)
	leaq -47(%r12),%r8
	movq 48(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 56(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_caee9:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caedY, .-_caedY


==================== Asm code ====================
2018-03-16 16:05:15.977615568 UTC

.section .data.rel.ro
.align 8
.align 1
block_caedY_info:
	.quad	_caedY
	.quad	8457
	.quad	4294967326
	.quad	Saded_srt+264


==================== Asm code ====================
2018-03-16 16:05:15.978256181 UTC

.section .text
.align 8
_caee1:
_caee1:
	leaq block_caee3_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _caee3
_caeeb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caee1, .-_caee1


==================== Asm code ====================
2018-03-16 16:05:15.978827286 UTC

.section .data.rel.ro
.align 8
.align 1
block_caee1_info:
	.quad	_caee1
	.quad	901
	.quad	4294967326
	.quad	Saded_srt+264


==================== Asm code ====================
2018-03-16 16:05:15.979509061 UTC

.section .text
.align 8
_caee3:
_caee3:
	movq 40(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq %rbx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rcx,%rsi
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq %rbx,%r14
	addq $48,%rbp
	jmp GHC.IO.Handle.Internals.flushBuffer2_entry
	.size _caee3, .-_caee3


==================== Asm code ====================
2018-03-16 16:05:15.980158081 UTC

.section .data.rel.ro
.align 8
.align 1
block_caee3_info:
	.quad	_caee3
	.quad	901
	.quad	4294967326
	.quad	Saded_srt+264


==================== Asm code ====================
2018-03-16 16:05:15.980990575 UTC

.section .text
.align 8
_caeeq:
_caeeq:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _caeeG
_caeeD:
	movq 16(%rbp),%rax
	leaq block_caeeB_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rbx,8(%rbp)
	addq $-8,%rbp
	jmp *GHC.IO.BufferedIO.flushWriteBuffer_entry@gotpcrel(%rip)
_caeeG:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caeeq, .-_caeeq


==================== Asm code ====================
2018-03-16 16:05:15.98200227 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeeq_info:
	.quad	_caeeq
	.quad	7687
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.982671564 UTC

.section .text
.align 8
_caeeB:
_caeeB:
	movq 8(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caeeB, .-_caeeB


==================== Asm code ====================
2018-03-16 16:05:15.98329285 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeeB_info:
	.quad	_caeeB
	.quad	1925
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:15.985556737 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer_closure
.type GHC.IO.Handle.Internals.flushBuffer_closure, @object
GHC.IO.Handle.Internals.flushBuffer_closure:
	.quad	GHC.IO.Handle.Internals.flushBuffer_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.986186307 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.flushBuffer_entry
.type GHC.IO.Handle.Internals.flushBuffer_entry, @object
GHC.IO.Handle.Internals.flushBuffer_entry:
_caehh:
	jmp GHC.IO.Handle.Internals.flushBuffer1_entry
	.size GHC.IO.Handle.Internals.flushBuffer_entry, .-GHC.IO.Handle.Internals.flushBuffer_entry


==================== Asm code ====================
2018-03-16 16:05:15.986772624 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.flushBuffer_info
.type GHC.IO.Handle.Internals.flushBuffer_info, @object
GHC.IO.Handle.Internals.flushBuffer_info:
	.quad	GHC.IO.Handle.Internals.flushBuffer_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	Saded_srt+280


==================== Asm code ====================
2018-03-16 16:05:15.988394846 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl21_ra7PB_bytes:
	.asciz "GHC/IO/Handle/Internals.hs:881:7-30|Just decoder"


==================== Asm code ====================
2018-03-16 16:05:15.990855454 UTC

.section .data
.align 8
.align 1
lvl22_ra7PC_closure:
	.quad	lvl22_ra7PC_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:15.991664641 UTC

.section .text
.align 8
lvl22_ra7PC_entry:
_caehv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caehw
_caehx:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _caehu
_caeht:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl21_ra7PB_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *Control.Exception.Base.patError_entry@gotpcrel(%rip)
_caehw:
	jmp *-16(%r13)
_caehu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl22_ra7PC_entry, .-lvl22_ra7PC_entry


==================== Asm code ====================
2018-03-16 16:05:15.992359587 UTC

.section .data.rel.ro
.align 8
.align 1
lvl22_ra7PC_info:
	.quad	lvl22_ra7PC_entry
	.quad	0
	.quad	4294967317
	.quad	Saded_srt+288


==================== Asm code ====================
2018-03-16 16:05:16.022457932 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hLookAhead_2_closure
.type GHC.IO.Handle.Internals.hLookAhead_2_closure, @object
GHC.IO.Handle.Internals.hLookAhead_2_closure:
	.quad	GHC.IO.Handle.Internals.hLookAhead_2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.023462781 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.hLookAhead_2_entry
.type GHC.IO.Handle.Internals.hLookAhead_2_entry, @object
GHC.IO.Handle.Internals.hLookAhead_2_entry:
_caehN:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _caehR
_caehS:
	leaq block_caehK_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _caehK
_caehL:
	movq (%rbx),%rax
	jmp *(%rax)
_caehR:
	leaq GHC.IO.Handle.Internals.hLookAhead_2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.hLookAhead_2_entry, .-GHC.IO.Handle.Internals.hLookAhead_2_entry


==================== Asm code ====================
2018-03-16 16:05:16.024142451 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hLookAhead_2_info
.type GHC.IO.Handle.Internals.hLookAhead_2_info, @object
GHC.IO.Handle.Internals.hLookAhead_2_info:
	.quad	GHC.IO.Handle.Internals.hLookAhead_2_entry
	.quad	0
	.quad	-4610560114225577970
	.quad	12884901903
	.quad	Saded_srt+56


==================== Asm code ====================
2018-03-16 16:05:16.024914267 UTC

.section .text
.align 8
_caehK:
_caehK:
	leaq block_caehQ_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 63(%rbx),%rdi
	movq 95(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rsi),%rbx
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _caehQ
_caehU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caehK, .-_caehK


==================== Asm code ====================
2018-03-16 16:05:16.02564852 UTC

.section .data.rel.ro
.align 8
.align 1
block_caehK_info:
	.quad	_caehK
	.quad	1
	.quad	-9222246132652965858
	.quad	Saded_srt+56


==================== Asm code ====================
2018-03-16 16:05:16.026343964 UTC

.section .text
.align 8
_caehQ:
_caehQ:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _caek2
_caejR:
	movq %rbx,16(%rbp)
	addq $16,%rbp
	jmp _sacW8
_caek2:
	movq 16(%rbp),%rax
	leaq block_caejU_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rbx,8(%rbp)
	addq $-8,%rbp
	jmp *GHC.IO.BufferedIO.fillReadBuffer_entry@gotpcrel(%rip)
	.size _caehQ, .-_caehQ


==================== Asm code ====================
2018-03-16 16:05:16.026991917 UTC

.section .data.rel.ro
.align 8
.align 1
block_caehQ_info:
	.quad	_caehQ
	.quad	7
	.quad	-9222246132652965858
	.quad	Saded_srt+56


==================== Asm code ====================
2018-03-16 16:05:16.027634497 UTC

.section .text
.align 8
_caejU:
_caejU:
	leaq block_caejW_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _caejW
_caejX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caejU, .-_caejU


==================== Asm code ====================
2018-03-16 16:05:16.028220111 UTC

.section .data.rel.ro
.align 8
.align 1
block_caejU_info:
	.quad	_caejU
	.quad	5
	.quad	-9222246132652965858
	.quad	Saded_srt+56


==================== Asm code ====================
2018-03-16 16:05:16.028955294 UTC

.section .text
.align 8
_caejW:
_caejW:
	leaq block_caek1_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _caek1
_caek5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caejW, .-_caejW


==================== Asm code ====================
2018-03-16 16:05:16.029590222 UTC

.section .data.rel.ro
.align 8
.align 1
block_caejW_info:
	.quad	_caejW
	.quad	5
	.quad	-9222246132652965858
	.quad	Saded_srt+56


==================== Asm code ====================
2018-03-16 16:05:16.030290458 UTC

.section .text
.align 8
_caek1:
_caek1:
	cmpq $0,7(%rbx)
	je _caekd
_caekc:
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _sacW8
_caekd:
	leaq GHC.IO.Handle.Internals.hLookAhead_3_closure(%rip),%rbx
	addq $56,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _caek1, .-_caek1


==================== Asm code ====================
2018-03-16 16:05:16.030885041 UTC

.section .data.rel.ro
.align 8
.align 1
block_caek1_info:
	.quad	_caek1
	.quad	6
	.quad	-9222246132652965858
	.quad	Saded_srt+56


==================== Asm code ====================
2018-03-16 16:05:16.031581912 UTC

.section .text
.align 8
_sacW8:
_sacW8:
	leaq block_caei4_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caei4
_caei6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sacW8, .-_sacW8


==================== Asm code ====================
2018-03-16 16:05:16.032553026 UTC

.section .text
.align 8
_caei4:
_caei4:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _caeiv
_caejo:
	leaq block_caeiW_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _caeiW
_caeiX:
	movq (%rbx),%rax
	jmp *(%rax)
_caeiy:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_caeiv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caeiy
_caeix:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.IO.Handle.Internals.decodeByteBuf2_closure(%rip),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq 48(%rbp),%rbx
	movq 24(%rbp),%rcx
	leaq -15(%r12),%rdx
	movq %rdx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rdx
	movq %rcx,%rsi
	movq %rdx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_caeie_info(%rip),%rax
	movq %rax,8(%rbp)
	movq %rbx,%rsi
	addq $8,%rbp
	jmp *GHC.IO.Encoding.Latin1.latin5_entry@gotpcrel(%rip)
	.size _caei4, .-_caei4


==================== Asm code ====================
2018-03-16 16:05:16.033393943 UTC

.section .data.rel.ro
.align 8
.align 1
block_caei4_info:
	.quad	_caei4
	.quad	518
	.quad	35188667056158
	.quad	Saded_srt+200


==================== Asm code ====================
2018-03-16 16:05:16.034057035 UTC

.section .text
.align 8
_caeie:
_caeie:
	leaq block_caeig_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _caeig
_caeih:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caeie, .-_caeie


==================== Asm code ====================
2018-03-16 16:05:16.034628671 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeie_info:
	.quad	_caeie
	.quad	389
	.quad	4294967326
	.quad	Saded_srt+304


==================== Asm code ====================
2018-03-16 16:05:16.035413944 UTC

.section .text
.align 8
_caeig:
_caeig:
	movq 8(%rbp),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rdx
	movq %rax,%rsi
	movq %rdx,%rdi
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_caeio_info(%rip),%rax
	movq %rax,16(%rbp)
	movq %r14,24(%rbp)
	addq $16,%rbp
	testb $7,%bl
	jne _caeio
_caeip:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caeig, .-_caeig


==================== Asm code ====================
2018-03-16 16:05:16.036069128 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeig_info:
	.quad	_caeig
	.quad	389
	.quad	4294967326
	.quad	Saded_srt+304


==================== Asm code ====================
2018-03-16 16:05:16.036793148 UTC

.section .text
.align 8
_caeio:
_caeio:
	leaq block_caeit_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 47(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _caeit
_caeiC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caeio, .-_caeio


==================== Asm code ====================
2018-03-16 16:05:16.037444503 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeio_info:
	.quad	_caeio
	.quad	3
	.quad	4294967326
	.quad	Saded_srt+304


==================== Asm code ====================
2018-03-16 16:05:16.038229873 UTC

.section .text
.align 8
_caeit:
_caeit:
	movq 8(%rbp),%rax
	cmpq 47(%rbx),%rax
	je _caeiO
_caeiK:
	movq 32(%rbp),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caeiO:
	movq 16(%rbp),%rax
	leaq block_caeiN_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,32(%rbp)
	addq $16,%rbp
	testb $7,%bl
	jne _caeiN
_caeiP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caeit, .-_caeit


==================== Asm code ====================
2018-03-16 16:05:16.038899178 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeit_info:
	.quad	_caeit
	.quad	68
	.quad	4294967326
	.quad	Saded_srt+304


==================== Asm code ====================
2018-03-16 16:05:16.039522863 UTC

.section .text
.align 8
_caeiN:
_caeiN:
	movq 31(%rbx),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.IO.Handle.Internals.$wreadTextDevice'_entry
	.size _caeiN, .-_caeiN


==================== Asm code ====================
2018-03-16 16:05:16.040102914 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeiN_info:
	.quad	_caeiN
	.quad	2
	.quad	4294967326
	.quad	Saded_srt+304


==================== Asm code ====================
2018-03-16 16:05:16.040782576 UTC

.section .text
.align 8
_caeiW:
_caeiW:
	leaq block_caej1_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,32(%rbp)
	addq $-8,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _caeiW, .-_caeiW


==================== Asm code ====================
2018-03-16 16:05:16.041392056 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeiW_info:
	.quad	_caeiW
	.quad	518
	.quad	4294967326
	.quad	Saded_srt+304


==================== Asm code ====================
2018-03-16 16:05:16.042256451 UTC

.section .text
.align 8
_caej1:
_caej1:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caejs
_caejr:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 56(%rbp),%rbx
	movq 32(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 8(%rbp),%rsi
	leaq -15(%r12),%rdi
	movq %rdi,8(%rcx)
	subq $8,%rsp
	movq %r13,%rdi
	movq %rsi,%r8
	movq %rcx,%rsi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_caej7_info(%rip),%rax
	movq %rax,16(%rbp)
	movq %rbx,%r8
	movq %r14,%rdi
	movq 72(%rsp),%rax
	movq %rax,%rsi
	movq 64(%rsp),%rax
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_caejs:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caej1, .-_caej1


==================== Asm code ====================
2018-03-16 16:05:16.043041668 UTC

.section .data.rel.ro
.align 8
.align 1
block_caej1_info:
	.quad	_caej1
	.quad	7
	.quad	4294967326
	.quad	Saded_srt+304


==================== Asm code ====================
2018-03-16 16:05:16.043681614 UTC

.section .text
.align 8
_caej7:
_caej7:
	leaq block_caej9_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _caej9
_caeja:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caej7, .-_caej7


==================== Asm code ====================
2018-03-16 16:05:16.044265718 UTC

.section .data.rel.ro
.align 8
.align 1
block_caej7_info:
	.quad	_caej7
	.quad	389
	.quad	4294967326
	.quad	Saded_srt+304


==================== Asm code ====================
2018-03-16 16:05:16.045008231 UTC

.section .text
.align 8
_caej9:
_caej9:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rdx
	movq %rax,%rsi
	movq %rdx,%rdi
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_caejh_info(%rip),%rax
	movq %rax,16(%rbp)
	movq %r14,24(%rbp)
	addq $16,%rbp
	testb $7,%bl
	jne _caejh
_caeji:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caej9, .-_caej9


==================== Asm code ====================
2018-03-16 16:05:16.046028126 UTC

.section .data.rel.ro
.align 8
.align 1
block_caej9_info:
	.quad	_caej9
	.quad	389
	.quad	4294967326
	.quad	Saded_srt+304


==================== Asm code ====================
2018-03-16 16:05:16.046740924 UTC

.section .text
.align 8
_caejh:
_caejh:
	leaq block_caejm_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 47(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _caejm
_caejw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caejh, .-_caejh


==================== Asm code ====================
2018-03-16 16:05:16.04735596 UTC

.section .data.rel.ro
.align 8
.align 1
block_caejh_info:
	.quad	_caejh
	.quad	3
	.quad	4294967326
	.quad	Saded_srt+304


==================== Asm code ====================
2018-03-16 16:05:16.048070936 UTC

.section .text
.align 8
_caejm:
_caejm:
	movq 8(%rbp),%rax
	cmpq 47(%rbx),%rax
	je _caejI
_caejE:
	movq 32(%rbp),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caejI:
	movq 16(%rbp),%rax
	leaq block_caejH_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,32(%rbp)
	addq $16,%rbp
	testb $7,%bl
	jne _caejH
_caejJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caejm, .-_caejm


==================== Asm code ====================
2018-03-16 16:05:16.048698052 UTC

.section .data.rel.ro
.align 8
.align 1
block_caejm_info:
	.quad	_caejm
	.quad	68
	.quad	4294967326
	.quad	Saded_srt+304


==================== Asm code ====================
2018-03-16 16:05:16.049421253 UTC

.section .text
.align 8
_caejH:
_caejH:
	movq 31(%rbx),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.IO.Handle.Internals.$wreadTextDevice'_entry
	.size _caejH, .-_caejH


==================== Asm code ====================
2018-03-16 16:05:16.050063717 UTC

.section .data.rel.ro
.align 8
.align 1
block_caejH_info:
	.quad	_caejH
	.quad	2
	.quad	4294967326
	.quad	Saded_srt+304


==================== Asm code ====================
2018-03-16 16:05:16.05061401 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wreadTextDevice'_closure
.type GHC.IO.Handle.Internals.$wreadTextDevice'_closure, @object
GHC.IO.Handle.Internals.$wreadTextDevice'_closure:
	.quad	GHC.IO.Handle.Internals.$wreadTextDevice'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.051292412 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.$wreadTextDevice'_slow
.type GHC.IO.Handle.Internals.$wreadTextDevice'_slow, @object
GHC.IO.Handle.Internals.$wreadTextDevice'_slow:
_caeky:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.$wreadTextDevice'_entry
	.size GHC.IO.Handle.Internals.$wreadTextDevice'_slow, .-GHC.IO.Handle.Internals.$wreadTextDevice'_slow


==================== Asm code ====================
2018-03-16 16:05:16.051898733 UTC

.section .data.rel.ro
.align 8
.align 1
uaenL_srtd:
	.quad	Saded_srt+56
	.quad	33
	.quad	7516192769


==================== Asm code ====================
2018-03-16 16:05:16.053278681 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.$wreadTextDevice'_entry
.type GHC.IO.Handle.Internals.$wreadTextDevice'_entry, @object
GHC.IO.Handle.Internals.$wreadTextDevice'_entry:
_caekF:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cael5
_uaeno:
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp _caekz
_cael5:
	leaq GHC.IO.Handle.Internals.$wreadTextDevice'_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.$wreadTextDevice'_entry, .-GHC.IO.Handle.Internals.$wreadTextDevice'_entry


==================== Asm code ====================
2018-03-16 16:05:16.054022259 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wreadTextDevice'_info
.type GHC.IO.Handle.Internals.$wreadTextDevice'_info, @object
GHC.IO.Handle.Internals.$wreadTextDevice'_info:
	.quad	GHC.IO.Handle.Internals.$wreadTextDevice'_entry
	.quad	0
	.quad	-4294967282
	.quad	38654705664
	.quad	uaenL_srtd
	.quad	7304
	.quad	GHC.IO.Handle.Internals.$wreadTextDevice'_slow


==================== Asm code ====================
2018-03-16 16:05:16.054728464 UTC

.section .text
.align 8
_caekz:
_caekz:
	movq (%rbp),%rax
	leaq block_caekC_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _caekC
_caekD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caekz, .-_caekz


==================== Asm code ====================
2018-03-16 16:05:16.055256998 UTC

.section .data.rel.ro
.align 8
.align 1
uaenM_srtd:
	.quad	Saded_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:16.056315202 UTC

.section .text
.align 8
_caekC:
_caekC:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cael9
_cael8:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq 15(%rbx),%r8
	movq 31(%rbx),%r9
	movq 47(%rbx),%r10
	movq 63(%rbx),%r11
	movq 95(%rbx),%r14
	movq %rax,64(%rsp)
	movq 48(%rbp),%rax
	subq %rdi,%rax
	subq $8,%rsp
	movq %rcx,80(%rsp)
	movq 72(%rsp),%rcx
	movq %rcx,88(%rsp)
	movq 72(%rsp),%rcx
	addq %rdi,%rcx
	movq %rdx,%rdi
	movq %rax,%rdx
	movq %rdi,104(%rsp)
	movq %rcx,96(%rsp)
	movq 88(%rsp),%rcx
	movq %rcx,%rdi
	movq %rsi,112(%rsp)
	movq 96(%rsp),%rcx
	movq %rcx,%rsi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %r8,120(%rsp)
	movq %r9,128(%rsp)
	movq %r10,136(%rsp)
	movq %r11,144(%rsp)
	movq %rcx,152(%rsp)
	call memmove@plt
	addq $8,%rsp
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-40(%r12)
	movq 96(%rsp),%rcx
	movq %rcx,-32(%r12)
	movq 64(%rsp),%rcx
	movq %rcx,-24(%r12)
	movq 104(%rsp),%rcx
	movq %rcx,-16(%r12)
	movq $0,-8(%r12)
	movq 144(%rsp),%rcx
	movq %rcx,(%r12)
	leaq block_caekX_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %r14,%rdx
	movq 112(%rsp),%rcx
	movq %rcx,%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq 120(%rsp),%rcx
	movq %rcx,(%rbp)
	leaq -47(%r12),%rcx
	movq %rcx,8(%rbp)
	movq %rdx,24(%rbp)
	movq 136(%rsp),%rcx
	movq %rcx,32(%rbp)
	movq 128(%rsp),%rcx
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	addq $-8,%rbp
	jmp *GHC.IO.BufferedIO.fillReadBuffer_entry@gotpcrel(%rip)
_cael9:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caekC, .-_caekC


==================== Asm code ====================
2018-03-16 16:05:16.057646807 UTC

.section .data.rel.ro
.align 8
.align 1
block_caekC_info:
	.quad	_caekC
	.quad	3655
	.quad	-4294967266
	.quad	uaenM_srtd


==================== Asm code ====================
2018-03-16 16:05:16.058191706 UTC

.section .data.rel.ro
.align 8
.align 1
uaenN_srtd:
	.quad	Saded_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:16.058885989 UTC

.section .text
.align 8
_caekX:
_caekX:
	leaq block_caekZ_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _caekZ
_cael0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caekX, .-_caekX


==================== Asm code ====================
2018-03-16 16:05:16.059487465 UTC

.section .data.rel.ro
.align 8
.align 1
block_caekX_info:
	.quad	_caekX
	.quad	5
	.quad	-4294967266
	.quad	uaenN_srtd


==================== Asm code ====================
2018-03-16 16:05:16.060010711 UTC

.section .data.rel.ro
.align 8
.align 1
uaenO_srtd:
	.quad	Saded_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:16.060688564 UTC

.section .text
.align 8
_caekZ:
_caekZ:
	leaq block_cael4_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cael4
_caelc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caekZ, .-_caekZ


==================== Asm code ====================
2018-03-16 16:05:16.061333739 UTC

.section .data.rel.ro
.align 8
.align 1
block_caekZ_info:
	.quad	_caekZ
	.quad	5
	.quad	-4294967266
	.quad	uaenO_srtd


==================== Asm code ====================
2018-03-16 16:05:16.061907683 UTC

.section .data.rel.ro
.align 8
.align 1
uaenP_srtd:
	.quad	Saded_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:16.062672119 UTC

.section .text
.align 8
_cael4:
_cael4:
	cmpq $0,7(%rbx)
	je _caemp
_caell:
	leaq block_caelj_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _caelj
_caelm:
	movq (%rbx),%rax
	jmp *(%rax)
_caemp:
	movq 8(%rbp),%rax
	leaq block_caemo_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _caemo
_caemq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cael4, .-_cael4


==================== Asm code ====================
2018-03-16 16:05:16.063342237 UTC

.section .data.rel.ro
.align 8
.align 1
block_cael4_info:
	.quad	_cael4
	.quad	6
	.quad	-4294967266
	.quad	uaenP_srtd


==================== Asm code ====================
2018-03-16 16:05:16.063913089 UTC

.section .data.rel.ro
.align 8
.align 1
uaenQ_srtd:
	.quad	Saded_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:16.064712598 UTC

.section .text
.align 8
_caemo:
_caemo:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _caenl
_caemA:
	movq 8(%rbp),%rax
	leaq block_caemy_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _caemy
_caemB:
	movq (%rbx),%rax
	jmp *(%rax)
_caenl:
	leaq GHC.IO.Handle.Internals.hLookAhead_3_closure(%rip),%rbx
	addq $48,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _caemo, .-_caemo


==================== Asm code ====================
2018-03-16 16:05:16.065448801 UTC

.section .data.rel.ro
.align 8
.align 1
block_caemo_info:
	.quad	_caemo
	.quad	133
	.quad	-4294967266
	.quad	uaenQ_srtd


==================== Asm code ====================
2018-03-16 16:05:16.066195281 UTC

.section .text
.align 8
_caemy:
_caemy:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uaenr
_caen6:
	leaq block_caemK_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _caemK
_caemL:
	movq (%rbx),%rax
	jmp *(%rax)
_uaenr:
	addq $40,%rbp
	jmp _caemH
	.size _caemy, .-_caemy


==================== Asm code ====================
2018-03-16 16:05:16.066842801 UTC

.section .data.rel.ro
.align 8
.align 1
block_caemy_info:
	.quad	_caemy
	.quad	4
	.quad	21474836510
	.quad	Saded_srt+296


==================== Asm code ====================
2018-03-16 16:05:16.067510011 UTC

.section .text
.align 8
_caemK:
_caemK:
	movq 8(%rbp),%rax
	leaq block_caemP_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 32(%rbp),%rsi
	movq %rax,%r14
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
	.size _caemK, .-_caemK


==================== Asm code ====================
2018-03-16 16:05:16.068141487 UTC

.section .data.rel.ro
.align 8
.align 1
block_caemK_info:
	.quad	_caemK
	.quad	4
	.quad	4294967326
	.quad	Saded_srt+296


==================== Asm code ====================
2018-03-16 16:05:16.068820457 UTC

.section .text
.align 8
_caemP:
_caemP:
	leaq block_caemR_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _caemR
_caemS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caemP, .-_caemP


==================== Asm code ====================
2018-03-16 16:05:16.069454252 UTC

.section .data.rel.ro
.align 8
.align 1
block_caemP_info:
	.quad	_caemP
	.quad	3
	.quad	4294967326
	.quad	Saded_srt+296


==================== Asm code ====================
2018-03-16 16:05:16.070213194 UTC

.section .text
.align 8
_caemR:
_caemR:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rax,%rsi
	movq %rcx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_caemZ_info(%rip),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _caemZ
_caen0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caemR, .-_caemR


==================== Asm code ====================
2018-03-16 16:05:16.070858738 UTC

.section .data.rel.ro
.align 8
.align 1
block_caemR_info:
	.quad	_caemR
	.quad	3
	.quad	4294967326
	.quad	Saded_srt+296


==================== Asm code ====================
2018-03-16 16:05:16.071561039 UTC

.section .text
.align 8
_caemZ:
_caemZ:
	leaq block_caen4_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 47(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _caen4
_caenb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caemZ, .-_caemZ


==================== Asm code ====================
2018-03-16 16:05:16.072192749 UTC

.section .data.rel.ro
.align 8
.align 1
block_caemZ_info:
	.quad	_caemZ
	.quad	2
	.quad	4294967326
	.quad	Saded_srt+296


==================== Asm code ====================
2018-03-16 16:05:16.072881332 UTC

.section .text
.align 8
_caen4:
_caen4:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	cmpq 47(%rbx),%rcx
	je _caenk
_caenj:
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caenk:
	movq %rax,%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.hLookAhead_2_entry
	.size _caen4, .-_caen4


==================== Asm code ====================
2018-03-16 16:05:16.073894652 UTC

.section .data.rel.ro
.align 8
.align 1
block_caen4_info:
	.quad	_caen4
	.quad	67
	.quad	4294967326
	.quad	Saded_srt+296


==================== Asm code ====================
2018-03-16 16:05:16.07444007 UTC

.section .data.rel.ro
.align 8
.align 1
uaenR_srtd:
	.quad	Saded_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:16.075180943 UTC

.section .text
.align 8
_caelj:
_caelj:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uaenp
_caelX:
	leaq block_caelv_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _caelv
_caelw:
	movq (%rbx),%rax
	jmp *(%rax)
_uaenp:
	addq $56,%rbp
	jmp _caemH
	.size _caelj, .-_caelj


==================== Asm code ====================
2018-03-16 16:05:16.075834369 UTC

.section .data.rel.ro
.align 8
.align 1
block_caelj_info:
	.quad	_caelj
	.quad	134
	.quad	-4294967266
	.quad	uaenR_srtd


==================== Asm code ====================
2018-03-16 16:05:16.076487018 UTC

.section .text
.align 8
_caemH:
_caemH:
	leaq lvl22_ra7PC_closure(%rip),%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caemH, .-_caemH


==================== Asm code ====================
2018-03-16 16:05:16.077023821 UTC

.section .data.rel.ro
.align 8
.align 1
uaenS_srtd:
	.quad	Saded_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:16.077731496 UTC

.section .text
.align 8
_caelv:
_caelv:
	leaq block_caelA_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _caelv, .-_caelv


==================== Asm code ====================
2018-03-16 16:05:16.078340132 UTC

.section .data.rel.ro
.align 8
.align 1
block_caelv_info:
	.quad	_caelv
	.quad	134
	.quad	-4294967266
	.quad	uaenS_srtd


==================== Asm code ====================
2018-03-16 16:05:16.078908261 UTC

.section .data.rel.ro
.align 8
.align 1
uaenT_srtd:
	.quad	Saded_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:16.079801306 UTC

.section .text
.align 8
_caelA:
_caelA:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caem1
_caem0:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 56(%rbp),%rbx
	movq 32(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 8(%rbp),%rsi
	leaq -15(%r12),%rdi
	movq %rdi,8(%rcx)
	subq $8,%rsp
	movq %r13,%rdi
	movq %rsi,%r8
	movq %rcx,%rsi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_caelG_info(%rip),%rax
	movq %rax,32(%rbp)
	movq %rbx,%r8
	movq %r14,%rdi
	movq 72(%rsp),%rax
	movq %rax,%rsi
	movq 64(%rsp),%rax
	movq %rax,%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_caem1:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caelA, .-_caelA


==================== Asm code ====================
2018-03-16 16:05:16.080595602 UTC

.section .data.rel.ro
.align 8
.align 1
block_caelA_info:
	.quad	_caelA
	.quad	7
	.quad	-4294967266
	.quad	uaenT_srtd


==================== Asm code ====================
2018-03-16 16:05:16.081161255 UTC

.section .data.rel.ro
.align 8
.align 1
uaenU_srtd:
	.quad	Saded_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:16.081868349 UTC

.section .text
.align 8
_caelG:
_caelG:
	leaq block_caelI_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _caelI
_caelJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caelG, .-_caelG


==================== Asm code ====================
2018-03-16 16:05:16.082482367 UTC

.section .data.rel.ro
.align 8
.align 1
block_caelG_info:
	.quad	_caelG
	.quad	3
	.quad	-4294967266
	.quad	uaenU_srtd


==================== Asm code ====================
2018-03-16 16:05:16.083593227 UTC

.section .data.rel.ro
.align 8
.align 1
uaenV_srtd:
	.quad	Saded_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:16.084464683 UTC

.section .text
.align 8
_caelI:
_caelI:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rbx
	movq %rdx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rcx,%rsi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_caelQ_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,8(%rbp)
	movq 64(%rsp),%rax
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _caelQ
_caelR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caelI, .-_caelI


==================== Asm code ====================
2018-03-16 16:05:16.085191467 UTC

.section .data.rel.ro
.align 8
.align 1
block_caelI_info:
	.quad	_caelI
	.quad	3
	.quad	-4294967266
	.quad	uaenV_srtd


==================== Asm code ====================
2018-03-16 16:05:16.086263693 UTC

.section .data.rel.ro
.align 8
.align 1
uaenW_srtd:
	.quad	Saded_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:16.086971824 UTC

.section .text
.align 8
_caelQ:
_caelQ:
	leaq block_caelV_info(%rip),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _caelV
_caem5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caelQ, .-_caelQ


==================== Asm code ====================
2018-03-16 16:05:16.087550261 UTC

.section .data.rel.ro
.align 8
.align 1
block_caelQ_info:
	.quad	_caelQ
	.quad	3
	.quad	-4294967266
	.quad	uaenW_srtd


==================== Asm code ====================
2018-03-16 16:05:16.088116999 UTC

.section .data.rel.ro
.align 8
.align 1
uaenX_srtd:
	.quad	Saded_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:16.088880141 UTC

.section .text
.align 8
_caelV:
_caelV:
	movq 8(%rbp),%rax
	cmpq 47(%rbx),%rax
	je _caemh
_caemd:
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caemh:
	leaq block_caemg_info(%rip),%rax
	movq %rax,8(%rbp)
	movq %rbx,%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _caemg
_caemi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caelV, .-_caelV


==================== Asm code ====================
2018-03-16 16:05:16.089550488 UTC

.section .data.rel.ro
.align 8
.align 1
block_caelV_info:
	.quad	_caelV
	.quad	67
	.quad	-4294967266
	.quad	uaenX_srtd


==================== Asm code ====================
2018-03-16 16:05:16.090066113 UTC

.section .data.rel.ro
.align 8
.align 1
uaenY_srtd:
	.quad	Saded_srt+56
	.quad	33
	.quad	5368709121


==================== Asm code ====================
2018-03-16 16:05:16.09075468 UTC

.section .text
.align 8
_caemg:
_caemg:
	movq 8(%rbp),%rax
	movq %rax,-40(%rbp)
	movq 23(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	addq $-40,%rbp
	jmp _caekz
	.size _caemg, .-_caemg


==================== Asm code ====================
2018-03-16 16:05:16.09135034 UTC

.section .data.rel.ro
.align 8
.align 1
block_caemg_info:
	.quad	_caemg
	.quad	2
	.quad	-4294967266
	.quad	uaenY_srtd


==================== Asm code ====================
2018-03-16 16:05:16.093711058 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.readTextDevice_closure
.type GHC.IO.Handle.Internals.readTextDevice_closure, @object
GHC.IO.Handle.Internals.readTextDevice_closure:
	.quad	GHC.IO.Handle.Internals.readTextDevice_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.094321046 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.readTextDevice_entry
.type GHC.IO.Handle.Internals.readTextDevice_entry, @object
GHC.IO.Handle.Internals.readTextDevice_entry:
_caesg:
	jmp GHC.IO.Handle.Internals.hLookAhead_2_entry
	.size GHC.IO.Handle.Internals.readTextDevice_entry, .-GHC.IO.Handle.Internals.readTextDevice_entry


==================== Asm code ====================
2018-03-16 16:05:16.094905905 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.readTextDevice_info
.type GHC.IO.Handle.Internals.readTextDevice_info, @object
GHC.IO.Handle.Internals.readTextDevice_info:
	.quad	GHC.IO.Handle.Internals.readTextDevice_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	Saded_srt+296


==================== Asm code ====================
2018-03-16 16:05:16.100158933 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hLookAhead_1_closure
.type GHC.IO.Handle.Internals.hLookAhead_1_closure, @object
GHC.IO.Handle.Internals.hLookAhead_1_closure:
	.quad	GHC.IO.Handle.Internals.hLookAhead_1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.100922826 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.hLookAhead_1_entry
.type GHC.IO.Handle.Internals.hLookAhead_1_entry, @object
GHC.IO.Handle.Internals.hLookAhead_1_entry:
_caesu:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _caesy
_caesz:
	leaq block_caesr_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caesr
_caess:
	movq (%rbx),%rax
	jmp *(%rax)
_caesy:
	leaq GHC.IO.Handle.Internals.hLookAhead_1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.hLookAhead_1_entry, .-GHC.IO.Handle.Internals.hLookAhead_1_entry


==================== Asm code ====================
2018-03-16 16:05:16.101961342 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hLookAhead_1_info
.type GHC.IO.Handle.Internals.hLookAhead_1_info, @object
GHC.IO.Handle.Internals.hLookAhead_1_info:
	.quad	GHC.IO.Handle.Internals.hLookAhead_1_entry
	.quad	0
	.quad	38654705678
	.quad	8589934597
	.quad	Saded_srt+296


==================== Asm code ====================
2018-03-16 16:05:16.102698489 UTC

.section .text
.align 8
_caesr:
_caesr:
	leaq block_caesx_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%rax
	movq 71(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _caesx
_caesB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caesr, .-_caesr


==================== Asm code ====================
2018-03-16 16:05:16.103362274 UTC

.section .data.rel.ro
.align 8
.align 1
block_caesr_info:
	.quad	_caesr
	.quad	0
	.quad	4294967326
	.quad	Saded_srt+296


==================== Asm code ====================
2018-03-16 16:05:16.104314871 UTC

.section .text
.align 8
_caesx:
_caesx:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caesH
_caesG:
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 39(%rbx),%rdx
	cmpq 47(%rbx),%rdx
	je _caet0
_caesR:
	movq 8(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	movq %rcx,%rbx
	movq %rdx,%r14
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movl (%rbx,%r14,4),%eax
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caet0:
	addq $-16,%r12
	leaq block_caesT_info(%rip),%rsi
	movq %rsi,-16(%rbp)
	movq %rbx,%rsi
	movq 16(%rbp),%r14
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,16(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.hLookAhead_2_entry
_caesH:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caesx, .-_caesx


==================== Asm code ====================
2018-03-16 16:05:16.1051342 UTC

.section .data.rel.ro
.align 8
.align 1
block_caesx_info:
	.quad	_caesx
	.quad	2
	.quad	4294967326
	.quad	Saded_srt+296


==================== Asm code ====================
2018-03-16 16:05:16.105950076 UTC

.section .text
.align 8
_caesT:
_caesT:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caet3
_caet2:
	movq 24(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq 8(%rbp),%rdx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	movq %rcx,%rbx
	movq %rdx,%r14
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movl (%rbx,%r14,4),%eax
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caet3:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caesT, .-_caesT


==================== Asm code ====================
2018-03-16 16:05:16.106710101 UTC

.section .data.rel.ro
.align 8
.align 1
block_caesT_info:
	.quad	_caesT
	.quad	580
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.108926874 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hLookAhead__closure
.type GHC.IO.Handle.Internals.hLookAhead__closure, @object
GHC.IO.Handle.Internals.hLookAhead__closure:
	.quad	GHC.IO.Handle.Internals.hLookAhead__info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.109596158 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.hLookAhead__entry
.type GHC.IO.Handle.Internals.hLookAhead__entry, @object
GHC.IO.Handle.Internals.hLookAhead__entry:
_caetz:
	jmp GHC.IO.Handle.Internals.hLookAhead_1_entry
	.size GHC.IO.Handle.Internals.hLookAhead__entry, .-GHC.IO.Handle.Internals.hLookAhead__entry


==================== Asm code ====================
2018-03-16 16:05:16.110139 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hLookAhead__info
.type GHC.IO.Handle.Internals.hLookAhead__info, @object
GHC.IO.Handle.Internals.hLookAhead__info:
	.quad	GHC.IO.Handle.Internals.hLookAhead__entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	Saded_srt+320


==================== Asm code ====================
2018-03-16 16:05:16.11248991 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hClose_help2_closure
.type GHC.IO.Handle.Internals.hClose_help2_closure, @object
GHC.IO.Handle.Internals.hClose_help2_closure:
	.quad	GHC.IO.Handle.Internals.hClose_help2_info


==================== Asm code ====================
2018-03-16 16:05:16.113644411 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.hClose_help2_entry
.type GHC.IO.Handle.Internals.hClose_help2_entry, @object
GHC.IO.Handle.Internals.hClose_help2_entry:
_caetL:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caetP
_caetO:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -6(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_caetP:
	movq $16,904(%r13)
	leaq GHC.IO.Handle.Internals.hClose_help2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.hClose_help2_entry, .-GHC.IO.Handle.Internals.hClose_help2_entry


==================== Asm code ====================
2018-03-16 16:05:16.114336387 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hClose_help2_info
.type GHC.IO.Handle.Internals.hClose_help2_info, @object
GHC.IO.Handle.Internals.hClose_help2_info:
	.quad	GHC.IO.Handle.Internals.hClose_help2_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:16.133017015 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hClose_help1_closure
.type GHC.IO.Handle.Internals.hClose_help1_closure, @object
GHC.IO.Handle.Internals.hClose_help1_closure:
	.quad	GHC.IO.Handle.Internals.hClose_help1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.13394029 UTC

.section .text
.align 8
sat_sad17_entry:
_caeui:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _caeuj
_caeuk:
	leaq block_caeuf_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rbx),%rbx
	movq %rax,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _caeuf
_caeug:
	movq (%rbx),%rax
	jmp *(%rax)
_caeuj:
	jmp *-8(%r13)
	.size sat_sad17_entry, .-sat_sad17_entry


==================== Asm code ====================
2018-03-16 16:05:16.135408927 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sad17_info:
	.quad	sat_sad17_entry
	.quad	3
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:16.136179749 UTC

.section .text
.align 8
_caeuf:
_caeuf:
	leaq block_caeun_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _caeun
_caeup:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caeuf, .-_caeuf


==================== Asm code ====================
2018-03-16 16:05:16.136793667 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeuf_info:
	.quad	_caeuf
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.137602633 UTC

.section .text
.align 8
_caeun:
_caeun:
	andl $7,%ebx
	cmpq $1,%rbx
	je _uaeuT
_caeuA:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_caeuy_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _caeuy
_caeuB:
	movq (%rbx),%rax
	jmp *(%rax)
_uaeuT:
	addq $32,%rbp
	jmp _caeuO
	.size _caeun, .-_caeun


==================== Asm code ====================
2018-03-16 16:05:16.138253618 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeun_info:
	.quad	_caeun
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.138974214 UTC

.section .text
.align 8
_caeuy:
_caeuy:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _uaeuU
_caeuL:
	movq 16(%rbp),%rax
	leaq block_caeuJ_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rbx,8(%rbp)
	addq $-8,%rbp
	jmp *GHC.IO.BufferedIO.flushWriteBuffer_entry@gotpcrel(%rip)
_uaeuU:
	addq $32,%rbp
	jmp _caeuO
	.size _caeuy, .-_caeuy


==================== Asm code ====================
2018-03-16 16:05:16.139657537 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeuy_info:
	.quad	_caeuy
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.140267868 UTC

.section .text
.align 8
_caeuO:
_caeuO:
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caeuO, .-_caeuO


==================== Asm code ====================
2018-03-16 16:05:16.1410116 UTC

.section .text
.align 8
_caeuJ:
_caeuJ:
	movq 8(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caeuJ, .-_caeuJ


==================== Asm code ====================
2018-03-16 16:05:16.141639752 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeuJ_info:
	.quad	_caeuJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.142392323 UTC

.section .text
.align 8
sat_sad1n_entry:
_caevB:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _caevC
_caevD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_caevu_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _caevu
_caevv:
	movq (%rbx),%rax
	jmp *(%rax)
_caevC:
	jmp *-16(%r13)
	.size sat_sad1n_entry, .-sat_sad1n_entry


==================== Asm code ====================
2018-03-16 16:05:16.143045385 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sad1n_info:
	.quad	sat_sad1n_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:05:16.143782705 UTC

.section .text
.align 8
_caevu:
_caevu:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _caevy
_caevz:
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_caevy:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caevu, .-_caevu


==================== Asm code ====================
2018-03-16 16:05:16.144372381 UTC

.section .data.rel.ro
.align 8
.align 1
block_caevu_info:
	.quad	_caevu
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.145152898 UTC

.section .text
.align 8
sat_sad1C_entry:
_caew5:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _caew6
_caew7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_caevY_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _caevY
_caevZ:
	movq (%rbx),%rax
	jmp *(%rax)
_caew6:
	jmp *-16(%r13)
	.size sat_sad1C_entry, .-sat_sad1C_entry


==================== Asm code ====================
2018-03-16 16:05:16.145878659 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sad1C_info:
	.quad	sat_sad1C_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:05:16.14659205 UTC

.section .text
.align 8
_caevY:
_caevY:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _caew2
_caew3:
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_caew2:
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caevY, .-_caevY


==================== Asm code ====================
2018-03-16 16:05:16.147199145 UTC

.section .data.rel.ro
.align 8
.align 1
block_caevY_info:
	.quad	_caevY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.147929326 UTC

.section .text
.align 8
sat_sad1U_entry:
_caewr:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caews
_caewt:
	leaq block_caewp_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%r14
	movq stg_ap_pv_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-16(%rbp)
	addq $-24,%rbp
	jmp *GHC.IO.Device.close_entry@gotpcrel(%rip)
_caews:
	jmp *-8(%r13)
	.size sat_sad1U_entry, .-sat_sad1U_entry


==================== Asm code ====================
2018-03-16 16:05:16.148583158 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sad1U_info:
	.quad	sat_sad1U_entry
	.quad	2
	.quad	11
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:05:16.149386534 UTC

.section .text
.align 8
_caewp:
_caewp:
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caewp, .-_caewp


==================== Asm code ====================
2018-03-16 16:05:16.149995662 UTC

.section .data.rel.ro
.align 8
.align 1
block_caewp_info:
	.quad	_caewp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.150705197 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.hClose_help1_entry
.type GHC.IO.Handle.Internals.hClose_help1_entry, @object
GHC.IO.Handle.Internals.hClose_help1_entry:
_caewv:
	leaq -144(%rbp),%rax
	cmpq %r15,%rax
	jb _caeww
_caewx:
	leaq block_caeu0_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caeu0
_caeu1:
	movq (%rbx),%rax
	jmp *(%rax)
_caeww:
	leaq GHC.IO.Handle.Internals.hClose_help1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.hClose_help1_entry, .-GHC.IO.Handle.Internals.hClose_help1_entry


==================== Asm code ====================
2018-03-16 16:05:16.151350703 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hClose_help1_info
.type GHC.IO.Handle.Internals.hClose_help1_info, @object
GHC.IO.Handle.Internals.hClose_help1_info:
	.quad	GHC.IO.Handle.Internals.hClose_help1_entry
	.quad	0
	.quad	30064771086
	.quad	8589934597
	.quad	Saded_srt+328


==================== Asm code ====================
2018-03-16 16:05:16.152323278 UTC

.section .text
.align 8
_caeu0:
_caeu0:
	leaq block_caeu5_info(%rip),%rax
	movq %rax,-128(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rsi
	movq 31(%rbx),%rdi
	movq 47(%rbx),%r8
	movq 55(%rbx),%r9
	movq 63(%rbx),%r10
	movq 71(%rbx),%r11
	movq 79(%rbx),%r14
	movq %rax,64(%rsp)
	movq 87(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 95(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 103(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 111(%rbx),%rsi
	movq %rdi,96(%rsp)
	movq 119(%rbx),%rdi
	movq %r8,104(%rsp)
	movq 127(%rbx),%r8
	movq 39(%rbx),%rbx
	movq %r9,112(%rsp)
	movq 72(%rsp),%r9
	movq %r9,-120(%rbp)
	movq 80(%rsp),%r9
	movq %r9,-112(%rbp)
	movq 88(%rsp),%r9
	movq %r9,-104(%rbp)
	movq 96(%rsp),%r9
	movq %r9,-96(%rbp)
	movq 104(%rsp),%r9
	movq %r9,-88(%rbp)
	movq 112(%rsp),%r9
	movq %r9,-80(%rbp)
	movq %r10,-72(%rbp)
	movq %r11,-64(%rbp)
	movq %r14,-56(%rbp)
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq 64(%rsp),%rax
	movq %rax,(%rbp)
	addq $-128,%rbp
	testb $7,%bl
	jne _caeu5
_caeu6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caeu0, .-_caeu0


==================== Asm code ====================
2018-03-16 16:05:16.153158231 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeu0_info:
	.quad	_caeu0
	.quad	0
	.quad	12884901918
	.quad	Saded_srt+328


==================== Asm code ====================
2018-03-16 16:05:16.154048778 UTC

.section .text
.align 8
_caeu5:
_caeu5:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _caexw
_caewA:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _caewD
_caewC:
	leaq sat_sad17_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,-8(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	leaq block_caev0_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.IO.Handle.Internals.hClose_help2_closure+2(%rip),%r14
	leaq -23(%r12),%rbx
	jmp *stg_catch#@gotpcrel(%rip)
_caexz:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_caexw:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caexz
_caexy:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 128(%rbp),%rax
	movq %rax,-8(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $136,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caewD:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caeu5, .-_caeu5


==================== Asm code ====================
2018-03-16 16:05:16.154864772 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeu5_info:
	.quad	_caeu5
	.quad	16
	.quad	12884901918
	.quad	Saded_srt+328


==================== Asm code ====================
2018-03-16 16:05:16.155556443 UTC

.section .text
.align 8
_caev0:
_caev0:
	leaq block_caewf_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 120(%rbp),%rbx
	movq %rax,128(%rbp)
	testb $7,%bl
	jne _caewf
_caewg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caev0, .-_caev0


==================== Asm code ====================
2018-03-16 16:05:16.156142971 UTC

.section .data.rel.ro
.align 8
.align 1
block_caev0_info:
	.quad	_caev0
	.quad	2097168
	.quad	12884901918
	.quad	Saded_srt+328


==================== Asm code ====================
2018-03-16 16:05:16.156925561 UTC

.section .text
.align 8
_caewf:
_caewf:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _caexj
_caexs:
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%rbp)
	jmp _sad1b
_caexm:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_caexj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caexm
_caexl:
	leaq sat_sad1U_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq block_caexh_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.IO.Handle.Internals.hClose_help2_closure+2(%rip),%r14
	leaq -15(%r12),%rbx
	jmp *stg_catch#@gotpcrel(%rip)
	.size _caewf, .-_caewf


==================== Asm code ====================
2018-03-16 16:05:16.15769066 UTC

.section .data.rel.ro
.align 8
.align 1
block_caewf_info:
	.quad	_caewf
	.quad	16
	.quad	12884901918
	.quad	Saded_srt+328


==================== Asm code ====================
2018-03-16 16:05:16.158284835 UTC

.section .text
.align 8
_caexh:
_caexh:
	movq %rbx,(%rbp)
	jmp _sad1b
	.size _caexh, .-_caexh


==================== Asm code ====================
2018-03-16 16:05:16.158841416 UTC

.section .data.rel.ro
.align 8
.align 1
block_caexh_info:
	.quad	_caexh
	.quad	16
	.quad	12884901918
	.quad	Saded_srt+328


==================== Asm code ====================
2018-03-16 16:05:16.159765267 UTC

.section .text
.align 8
_sad1b:
_sad1b:
	movq 40(%rbp),%rax
	movq 64(%rbp),%rbx
	movq 72(%rbp),%rcx
	movq 88(%rbp),%rdx
	movq GHC.IO.Handle.Types.BufferListNil_closure@gotpcrel(%rip),%rsi
	incq %rsi
	movq %rsi,8(%rcx)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rcx,%rsi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq GHC.IO.Handle.Internals.noCharBuffer_closure(%rip),%rax
	movq %rax,8(%rbx)
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq GHC.IO.Handle.Internals.noByteBuffer_closure(%rip),%rax
	movq %rax,8(%r14)
	subq $8,%rsp
	movq %r13,%rax
	movq %r14,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_caewF_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 64(%rsp),%rax
	movq %rax,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caewF
_caewX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sad1b, .-_sad1b


==================== Asm code ====================
2018-03-16 16:05:16.160746157 UTC

.section .text
.align 8
_caewF:
_caewF:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _uaexG
_caexd:
	leaq block_caex6_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _caex6
_caex7:
	movq (%rbx),%rax
	jmp *(%rax)
_uaexG:
	addq $8,%rbp
	jmp _sad1h
	.size _caewF, .-_caewF


==================== Asm code ====================
2018-03-16 16:05:16.161785133 UTC

.section .data.rel.ro
.align 8
.align 1
block_caewF_info:
	.quad	_caewF
	.quad	17
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.162406909 UTC

.section .text
.align 8
_caex6:
_caex6:
	leaq block_caexb_info(%rip),%rax
	movq %rax,(%rbp)
	movq 23(%rbx),%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _caex6, .-_caex6


==================== Asm code ====================
2018-03-16 16:05:16.162984096 UTC

.section .data.rel.ro
.align 8
.align 1
block_caex6_info:
	.quad	_caex6
	.quad	17
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.163567942 UTC

.section .text
.align 8
_caexb:
_caexb:
	addq $8,%rbp
	jmp _sad1h
	.size _caexb, .-_caexb


==================== Asm code ====================
2018-03-16 16:05:16.164119412 UTC

.section .data.rel.ro
.align 8
.align 1
block_caexb_info:
	.quad	_caexb
	.quad	17
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.164789298 UTC

.section .text
.align 8
_sad1h:
_sad1h:
	leaq block_caevl_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 80(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caevl
_caevm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sad1h, .-_sad1h


==================== Asm code ====================
2018-03-16 16:05:16.165864294 UTC

.section .text
.align 8
_caevl:
_caevl:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _caewL
_caewS:
	leaq block_caevN_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 6(%rbx),%rbx
	movq %rax,88(%rbp)
	testb $7,%bl
	jne _caevN
_caevO:
	movq (%rbx),%rax
	jmp *(%rax)
_caewO:
	movq $192,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_caewL:
	addq $192,%r12
	cmpq 856(%r13),%r12
	ja _caewO
_caewN:
	leaq sat_sad1n_info(%rip),%rax
	movq %rax,-184(%r12)
	movq 136(%rbp),%rax
	movq %rax,-168(%r12)
	movq 8(%rbp),%rax
	movq %rax,-160(%r12)
	movq GHC.IO.Handle.Types.Handle___con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 16(%rbp),%rax
	movq %rax,-144(%r12)
	movq 24(%rbp),%rax
	movq %rax,-136(%r12)
	movq 32(%rbp),%rax
	movq %rax,-128(%r12)
	movq 40(%rbp),%rax
	movq %rax,-120(%r12)
	movq GHC.IO.Handle.Types.ClosedHandle_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq 56(%rbp),%rax
	movq %rax,-96(%r12)
	movq 64(%rbp),%rax
	movq %rax,-88(%r12)
	movq 72(%rbp),%rax
	movq %rax,-80(%r12)
	movq 80(%rbp),%rax
	movq %rax,-72(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-64(%r12)
	movq 96(%rbp),%rax
	movq %rax,-56(%r12)
	movq 104(%rbp),%rax
	movq %rax,-48(%r12)
	movq 112(%rbp),%rax
	movq %rax,-40(%r12)
	movq 120(%rbp),%rax
	movq %rax,-32(%r12)
	movq 128(%rbp),%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -151(%r12),%rax
	movq %rax,-8(%r12)
	leaq -184(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caevl, .-_caevl


==================== Asm code ====================
2018-03-16 16:05:16.167341597 UTC

.section .data.rel.ro
.align 8
.align 1
block_caevl_info:
	.quad	_caevl
	.quad	65553
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.16807032 UTC

.section .text
.align 8
_caevN:
_caevN:
	leaq block_caevS_info(%rip),%rax
	movq %rax,(%rbp)
	movq 23(%rbx),%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _caevN, .-_caevN


==================== Asm code ====================
2018-03-16 16:05:16.168675719 UTC

.section .data.rel.ro
.align 8
.align 1
block_caevN_info:
	.quad	_caevN
	.quad	17
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.16958386 UTC

.section .text
.align 8
_caevS:
_caevS:
	addq $192,%r12
	cmpq 856(%r13),%r12
	ja _caewW
_caewV:
	leaq sat_sad1C_info(%rip),%rax
	movq %rax,-184(%r12)
	movq 136(%rbp),%rax
	movq %rax,-168(%r12)
	movq 8(%rbp),%rax
	movq %rax,-160(%r12)
	movq GHC.IO.Handle.Types.Handle___con_info@gotpcrel(%rip),%rax
	movq %rax,-152(%r12)
	movq 16(%rbp),%rax
	movq %rax,-144(%r12)
	movq 24(%rbp),%rax
	movq %rax,-136(%r12)
	movq 32(%rbp),%rax
	movq %rax,-128(%r12)
	movq 40(%rbp),%rax
	movq %rax,-120(%r12)
	movq GHC.IO.Handle.Types.ClosedHandle_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-112(%r12)
	movq 48(%rbp),%rax
	movq %rax,-104(%r12)
	movq 56(%rbp),%rax
	movq %rax,-96(%r12)
	movq 64(%rbp),%rax
	movq %rax,-88(%r12)
	movq 72(%rbp),%rax
	movq %rax,-80(%r12)
	movq 80(%rbp),%rax
	movq %rax,-72(%r12)
	movq 88(%rbp),%rax
	movq %rax,-64(%r12)
	movq 96(%rbp),%rax
	movq %rax,-56(%r12)
	movq 104(%rbp),%rax
	movq %rax,-48(%r12)
	movq 112(%rbp),%rax
	movq %rax,-40(%r12)
	movq 120(%rbp),%rax
	movq %rax,-32(%r12)
	movq 128(%rbp),%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -151(%r12),%rax
	movq %rax,-8(%r12)
	leaq -184(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caewW:
	movq $192,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caevS, .-_caevS


==================== Asm code ====================
2018-03-16 16:05:16.170473985 UTC

.section .data.rel.ro
.align 8
.align 1
block_caevS_info:
	.quad	_caevS
	.quad	17
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.172726284 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hClose_help_closure
.type GHC.IO.Handle.Internals.hClose_help_closure, @object
GHC.IO.Handle.Internals.hClose_help_closure:
	.quad	GHC.IO.Handle.Internals.hClose_help_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.173653347 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.hClose_help_entry
.type GHC.IO.Handle.Internals.hClose_help_entry, @object
GHC.IO.Handle.Internals.hClose_help_entry:
_caeBu:
	jmp GHC.IO.Handle.Internals.hClose_help1_entry
	.size GHC.IO.Handle.Internals.hClose_help_entry, .-GHC.IO.Handle.Internals.hClose_help_entry


==================== Asm code ====================
2018-03-16 16:05:16.174202421 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.hClose_help_info
.type GHC.IO.Handle.Internals.hClose_help_info, @object
GHC.IO.Handle.Internals.hClose_help_info:
	.quad	GHC.IO.Handle.Internals.hClose_help_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	Saded_srt+344


==================== Asm code ====================
2018-03-16 16:05:16.178183437 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.handleFinalizer1_closure
.type GHC.IO.Handle.Internals.handleFinalizer1_closure, @object
GHC.IO.Handle.Internals.handleFinalizer1_closure:
	.quad	GHC.IO.Handle.Internals.handleFinalizer1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.178998981 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.handleFinalizer1_entry
.type GHC.IO.Handle.Internals.handleFinalizer1_entry, @object
GHC.IO.Handle.Internals.handleFinalizer1_entry:
_caeBI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caeBV
_caeBW:
	leaq block_caeBF_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rsi,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _caeBF
_caeBG:
	movq (%rbx),%rax
	jmp *(%rax)
_caeBV:
	leaq GHC.IO.Handle.Internals.handleFinalizer1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.handleFinalizer1_entry, .-GHC.IO.Handle.Internals.handleFinalizer1_entry


==================== Asm code ====================
2018-03-16 16:05:16.179720864 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.handleFinalizer1_info
.type GHC.IO.Handle.Internals.handleFinalizer1_info, @object
GHC.IO.Handle.Internals.handleFinalizer1_info:
	.quad	GHC.IO.Handle.Internals.handleFinalizer1_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	Saded_srt+344


==================== Asm code ====================
2018-03-16 16:05:16.180397184 UTC

.section .text
.align 8
_caeBF:
_caeBF:
	leaq block_caeBL_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_takeMVar#@gotpcrel(%rip)
	.size _caeBF, .-_caeBF


==================== Asm code ====================
2018-03-16 16:05:16.180984249 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeBF_info:
	.quad	_caeBF
	.quad	0
	.quad	4294967326
	.quad	Saded_srt+344


==================== Asm code ====================
2018-03-16 16:05:16.181662473 UTC

.section .text
.align 8
_caeBL:
_caeBL:
	leaq block_caeBN_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp GHC.IO.Handle.Internals.hClose_help1_entry
	.size _caeBL, .-_caeBL


==================== Asm code ====================
2018-03-16 16:05:16.182292504 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeBL_info:
	.quad	_caeBL
	.quad	1
	.quad	4294967326
	.quad	Saded_srt+344


==================== Asm code ====================
2018-03-16 16:05:16.182943591 UTC

.section .text
.align 8
_caeBN:
_caeBN:
	leaq block_caeBP_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _caeBP
_caeBQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caeBN, .-_caeBN


==================== Asm code ====================
2018-03-16 16:05:16.183500974 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeBN_info:
	.quad	_caeBN
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.184138672 UTC

.section .text
.align 8
_caeBP:
_caeBP:
	movq 8(%rbp),%rax
	leaq block_caeBU_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _caeBP, .-_caeBP


==================== Asm code ====================
2018-03-16 16:05:16.184743239 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeBP_info:
	.quad	_caeBP
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.185754441 UTC

.section .text
.align 8
_caeBU:
_caeBU:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caeBU, .-_caeBU


==================== Asm code ====================
2018-03-16 16:05:16.186398659 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeBU_info:
	.quad	_caeBU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.188593123 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.handleFinalizer_closure
.type GHC.IO.Handle.Internals.handleFinalizer_closure, @object
GHC.IO.Handle.Internals.handleFinalizer_closure:
	.quad	GHC.IO.Handle.Internals.handleFinalizer_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.189235175 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.handleFinalizer_entry
.type GHC.IO.Handle.Internals.handleFinalizer_entry, @object
GHC.IO.Handle.Internals.handleFinalizer_entry:
_caeCC:
	jmp GHC.IO.Handle.Internals.handleFinalizer1_entry
	.size GHC.IO.Handle.Internals.handleFinalizer_entry, .-GHC.IO.Handle.Internals.handleFinalizer_entry


==================== Asm code ====================
2018-03-16 16:05:16.189794331 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.handleFinalizer_info
.type GHC.IO.Handle.Internals.handleFinalizer_info, @object
GHC.IO.Handle.Internals.handleFinalizer_info:
	.quad	GHC.IO.Handle.Internals.handleFinalizer_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	Saded_srt+352


==================== Asm code ====================
2018-03-16 16:05:16.191570158 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle4_closure
.type GHC.IO.Handle.Internals.mkDuplexHandle4_closure, @object
GHC.IO.Handle.Internals.mkDuplexHandle4_closure:
	.quad	GHC.Base.Just_con_info
	.quad	GHC.IO.Handle.Internals.handleFinalizer1_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.196575111 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkFileHandle1_closure
.type GHC.IO.Handle.Internals.mkFileHandle1_closure, @object
GHC.IO.Handle.Internals.mkFileHandle1_closure:
	.quad	GHC.IO.Handle.Internals.mkFileHandle1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.197594932 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkFileHandle1_slow
.type GHC.IO.Handle.Internals.mkFileHandle1_slow, @object
GHC.IO.Handle.Internals.mkFileHandle1_slow:
_caeCL:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.mkFileHandle1_entry
	.size GHC.IO.Handle.Internals.mkFileHandle1_slow, .-GHC.IO.Handle.Internals.mkFileHandle1_slow


==================== Asm code ====================
2018-03-16 16:05:16.198434789 UTC

.section .text
.align 8
sat_sad2p_entry:
_caeD2:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caeD3
_caeD4:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_caeCT_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _caeCT
_caeCU:
	movq (%rbx),%rax
	jmp *(%rax)
_caeD3:
	jmp *-16(%r13)
	.size sat_sad2p_entry, .-sat_sad2p_entry


==================== Asm code ====================
2018-03-16 16:05:16.199090283 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sad2p_info:
	.quad	sat_sad2p_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:16.199923562 UTC

.section .text
.align 8
_caeCT:
_caeCT:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _uaeDh
_uaeDi:
	cmpq $4,%rbx
	jb _caeCZ
_caeD0:
	movq GHC.IO.Handle.Types.ReadWriteHandle_closure@gotpcrel(%rip),%rax
	leaq 6(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caeCZ:
	movq GHC.IO.Handle.Types.AppendHandle_closure@gotpcrel(%rip),%rax
	leaq 5(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_uaeDh:
	cmpq $2,%rbx
	jb _caeCX
_caeCY:
	movq GHC.IO.Handle.Types.WriteHandle_closure@gotpcrel(%rip),%rax
	leaq 4(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caeCX:
	movq GHC.IO.Handle.Types.ReadHandle_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caeCT, .-_caeCT


==================== Asm code ====================
2018-03-16 16:05:16.20063546 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeCT_info:
	.quad	_caeCT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.201578999 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkFileHandle1_entry
.type GHC.IO.Handle.Internals.mkFileHandle1_entry, @object
GHC.IO.Handle.Internals.mkFileHandle1_entry:
_caeDk:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caeDl
_caeDm:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caeDo
_caeDn:
	leaq sat_sad2p_info(%rip),%rax
	movq %rax,-16(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-16(%rbp)
	movq 8(%rbp),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,(%rbp)
	leaq GHC.IO.Handle.Internals.mkDuplexHandle4_closure+2(%rip),%rax
	movq %rax,8(%rbp)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,16(%rbp)
	addq $-24,%rbp
	jmp GHC.IO.Handle.Internals.mkDuplexHandle5_entry
_caeDo:
	movq $24,904(%r13)
_caeDl:
	leaq GHC.IO.Handle.Internals.mkFileHandle1_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.mkFileHandle1_entry, .-GHC.IO.Handle.Internals.mkFileHandle1_entry


==================== Asm code ====================
2018-03-16 16:05:16.202437974 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkFileHandle1_info
.type GHC.IO.Handle.Internals.mkFileHandle1_info, @object
GHC.IO.Handle.Internals.mkFileHandle1_info:
	.quad	GHC.IO.Handle.Internals.mkFileHandle1_entry
	.quad	0
	.quad	1688854155231246
	.quad	38654705664
	.quad	Saded_srt+224
	.quad	8
	.quad	GHC.IO.Handle.Internals.mkFileHandle1_slow


==================== Asm code ====================
2018-03-16 16:05:16.205928837 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkFileHandle_closure
.type GHC.IO.Handle.Internals.mkFileHandle_closure, @object
GHC.IO.Handle.Internals.mkFileHandle_closure:
	.quad	GHC.IO.Handle.Internals.mkFileHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.206601801 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkFileHandle_slow
.type GHC.IO.Handle.Internals.mkFileHandle_slow, @object
GHC.IO.Handle.Internals.mkFileHandle_slow:
_caeE0:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.mkFileHandle_entry
	.size GHC.IO.Handle.Internals.mkFileHandle_slow, .-GHC.IO.Handle.Internals.mkFileHandle_slow


==================== Asm code ====================
2018-03-16 16:05:16.207273173 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkFileHandle_entry
.type GHC.IO.Handle.Internals.mkFileHandle_entry, @object
GHC.IO.Handle.Internals.mkFileHandle_entry:
_caeE4:
	jmp GHC.IO.Handle.Internals.mkFileHandle1_entry
	.size GHC.IO.Handle.Internals.mkFileHandle_entry, .-GHC.IO.Handle.Internals.mkFileHandle_entry


==================== Asm code ====================
2018-03-16 16:05:16.207877029 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkFileHandle_info
.type GHC.IO.Handle.Internals.mkFileHandle_info, @object
GHC.IO.Handle.Internals.mkFileHandle_info:
	.quad	GHC.IO.Handle.Internals.mkFileHandle_entry
	.quad	0
	.quad	4294967310
	.quad	38654705664
	.quad	Saded_srt+368
	.quad	8
	.quad	GHC.IO.Handle.Internals.mkFileHandle_slow


==================== Asm code ====================
2018-03-16 16:05:16.209969198 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl23_ra7PD_bytes:
	.asciz "Pattern match failure in do expression at GHC/IO/Handle/Internals.hs:686:3-33"


==================== Asm code ====================
2018-03-16 16:05:16.212487071 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle3_closure
.type GHC.IO.Handle.Internals.mkDuplexHandle3_closure, @object
GHC.IO.Handle.Internals.mkDuplexHandle3_closure:
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle3_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.213209464 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkDuplexHandle3_entry
.type GHC.IO.Handle.Internals.mkDuplexHandle3_entry, @object
GHC.IO.Handle.Internals.mkDuplexHandle3_entry:
_caeEk:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caeEl
_caeEm:
	leaq block_caeEi_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq lvl23_ra7PD_bytes(%rip),%r14
	addq $-8,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_caeEl:
	leaq GHC.IO.Handle.Internals.mkDuplexHandle3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.mkDuplexHandle3_entry, .-GHC.IO.Handle.Internals.mkDuplexHandle3_entry


==================== Asm code ====================
2018-03-16 16:05:16.213916926 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle3_info
.type GHC.IO.Handle.Internals.mkDuplexHandle3_info, @object
GHC.IO.Handle.Internals.mkDuplexHandle3_info:
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle3_entry
	.quad	0
	.quad	12884901902
	.quad	4294967299
	.quad	Saded_srt+376


==================== Asm code ====================
2018-03-16 16:05:16.214580627 UTC

.section .text
.align 8
_caeEi:
_caeEi:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.IO.failIO1_entry@gotpcrel(%rip)
	.size _caeEi, .-_caeEi


==================== Asm code ====================
2018-03-16 16:05:16.21520758 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeEi_info:
	.quad	_caeEi
	.quad	0
	.quad	4294967326
	.quad	Saded_srt+376


==================== Asm code ====================
2018-03-16 16:05:16.216938964 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl24_ra7PE_bytes:
	.asciz "Pattern match failure in do expression at GHC/IO/Handle/Internals.hs:680:3-35"


==================== Asm code ====================
2018-03-16 16:05:16.21952323 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle2_closure
.type GHC.IO.Handle.Internals.mkDuplexHandle2_closure, @object
GHC.IO.Handle.Internals.mkDuplexHandle2_closure:
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.220267514 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkDuplexHandle2_entry
.type GHC.IO.Handle.Internals.mkDuplexHandle2_entry, @object
GHC.IO.Handle.Internals.mkDuplexHandle2_entry:
_caeEG:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _caeEH
_caeEI:
	leaq block_caeEE_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq lvl24_ra7PE_bytes(%rip),%r14
	addq $-8,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_caeEH:
	leaq GHC.IO.Handle.Internals.mkDuplexHandle2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.mkDuplexHandle2_entry, .-GHC.IO.Handle.Internals.mkDuplexHandle2_entry


==================== Asm code ====================
2018-03-16 16:05:16.220954904 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle2_info
.type GHC.IO.Handle.Internals.mkDuplexHandle2_info, @object
GHC.IO.Handle.Internals.mkDuplexHandle2_info:
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle2_entry
	.quad	0
	.quad	21474836494
	.quad	4294967299
	.quad	Saded_srt+376


==================== Asm code ====================
2018-03-16 16:05:16.221652071 UTC

.section .text
.align 8
_caeEE:
_caeEE:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.IO.failIO1_entry@gotpcrel(%rip)
	.size _caeEE, .-_caeEE


==================== Asm code ====================
2018-03-16 16:05:16.222250196 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeEE_info:
	.quad	_caeEE
	.quad	0
	.quad	4294967326
	.quad	Saded_srt+376


==================== Asm code ====================
2018-03-16 16:05:16.228565387 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle1_closure
.type GHC.IO.Handle.Internals.mkDuplexHandle1_closure, @object
GHC.IO.Handle.Internals.mkDuplexHandle1_closure:
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.229570682 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkDuplexHandle1_slow
.type GHC.IO.Handle.Internals.mkDuplexHandle1_slow, @object
GHC.IO.Handle.Internals.mkDuplexHandle1_slow:
_caeEW:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.mkDuplexHandle1_entry
	.size GHC.IO.Handle.Internals.mkDuplexHandle1_slow, .-GHC.IO.Handle.Internals.mkDuplexHandle1_slow


==================== Asm code ====================
2018-03-16 16:05:16.230521854 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkDuplexHandle1_entry
.type GHC.IO.Handle.Internals.mkDuplexHandle1_entry, @object
GHC.IO.Handle.Internals.mkDuplexHandle1_entry:
_caeF9:
	leaq -96(%rbp),%rax
	cmpq %r15,%rax
	jb _caeFa
_caeFb:
	leaq block_caeF0_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq %r9,%rax
	movq %r8,%rbx
	movq %rdi,%rcx
	movq %rsi,%rdx
	movq %r14,%r10
	movq GHC.IO.Handle.Types.WriteHandle_closure@gotpcrel(%rip),%r11
	addq $4,%r11
	movq %r11,-96(%rbp)
	movq GHC.Types.True_closure@gotpcrel(%rip),%r11
	addq $2,%r11
	movq %r11,-88(%rbp)
	movq (%rbp),%r11
	movq %r11,-80(%rbp)
	movq 8(%rbp),%r11
	movq %r11,-72(%rbp)
	leaq GHC.IO.Handle.Internals.mkDuplexHandle4_closure+2(%rip),%r11
	movq %r11,-64(%rbp)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%r11
	incq %r11
	movq %r11,-56(%rbp)
	movq %r10,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-96,%rbp
	jmp GHC.IO.Handle.Internals.mkDuplexHandle5_entry
_caeFa:
	leaq GHC.IO.Handle.Internals.mkDuplexHandle1_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.mkDuplexHandle1_entry, .-GHC.IO.Handle.Internals.mkDuplexHandle1_entry


==================== Asm code ====================
2018-03-16 16:05:16.231406068 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle1_info
.type GHC.IO.Handle.Internals.mkDuplexHandle1_info, @object
GHC.IO.Handle.Internals.mkDuplexHandle1_info:
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle1_entry
	.quad	0
	.quad	32088151639982094
	.quad	34359738368
	.quad	Saded_srt+224
	.quad	7
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle1_slow


==================== Asm code ====================
2018-03-16 16:05:16.232107973 UTC

.section .text
.align 8
_caeF0:
_caeF0:
	leaq block_caeF2_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _caeF2
_caeF3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caeF0, .-_caeF0


==================== Asm code ====================
2018-03-16 16:05:16.232692653 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeF0_info:
	.quad	_caeF0
	.quad	7
	.quad	13510803177078814
	.quad	Saded_srt+224


==================== Asm code ====================
2018-03-16 16:05:16.233631492 UTC

.section .text
.align 8
_caeF2:
_caeF2:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _caeF6
_caeF7:
	addq $64,%rbp
	jmp GHC.IO.Handle.Internals.mkDuplexHandle2_entry
_caeFm:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_caeF6:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _caeFm
_caeFl:
	movq 15(%rbx),%rax
	movq GHC.MVar.MVar_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	leaq -23(%r12),%rbx
	movq %rbx,(%r12)
	movq 32(%rbp),%rbx
	leaq block_caeFh_info(%rip),%rcx
	movq %rcx,32(%rbp)
	movq 40(%rbp),%r9
	movq %rbx,%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	movq GHC.IO.Handle.Types.ReadHandle_closure@gotpcrel(%rip),%rbx
	addq $3,%rbx
	movq %rbx,-16(%rbp)
	movq GHC.Types.True_closure@gotpcrel(%rip),%rbx
	addq $2,%rbx
	movq %rbx,-8(%rbp)
	movq 48(%rbp),%rbx
	movq %rbx,(%rbp)
	movq 56(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rbx,16(%rbp)
	leaq -6(%r12),%rbx
	movq %rbx,24(%rbp)
	movq %rax,56(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.mkDuplexHandle5_entry
	.size _caeF2, .-_caeF2


==================== Asm code ====================
2018-03-16 16:05:16.234474506 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeF2_info:
	.quad	_caeF2
	.quad	7
	.quad	13510803177078814
	.quad	Saded_srt+224


==================== Asm code ====================
2018-03-16 16:05:16.235158229 UTC

.section .text
.align 8
_caeFh:
_caeFh:
	leaq block_caeFj_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _caeFj
_caeFo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caeFh, .-_caeFh


==================== Asm code ====================
2018-03-16 16:05:16.235750438 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeFh_info:
	.quad	_caeFh
	.quad	131
	.quad	4294967326
	.quad	Saded_srt+384


==================== Asm code ====================
2018-03-16 16:05:16.236556362 UTC

.section .text
.align 8
_caeFj:
_caeFj:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _caeFu
_caeFB:
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.mkDuplexHandle3_entry
_caeFx:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_caeFu:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _caeFx
_caeFw:
	movq 15(%rbx),%rax
	movq GHC.IO.Handle.Types.DuplexHandle_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	leaq -22(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caeFj, .-_caeFj


==================== Asm code ====================
2018-03-16 16:05:16.237296371 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeFj_info:
	.quad	_caeFj
	.quad	131
	.quad	4294967326
	.quad	Saded_srt+384


==================== Asm code ====================
2018-03-16 16:05:16.240745023 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle_closure
.type GHC.IO.Handle.Internals.mkDuplexHandle_closure, @object
GHC.IO.Handle.Internals.mkDuplexHandle_closure:
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.241518527 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkDuplexHandle_slow
.type GHC.IO.Handle.Internals.mkDuplexHandle_slow, @object
GHC.IO.Handle.Internals.mkDuplexHandle_slow:
_caeGB:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.mkDuplexHandle_entry
	.size GHC.IO.Handle.Internals.mkDuplexHandle_slow, .-GHC.IO.Handle.Internals.mkDuplexHandle_slow


==================== Asm code ====================
2018-03-16 16:05:16.242180913 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.mkDuplexHandle_entry
.type GHC.IO.Handle.Internals.mkDuplexHandle_entry, @object
GHC.IO.Handle.Internals.mkDuplexHandle_entry:
_caeGF:
	jmp GHC.IO.Handle.Internals.mkDuplexHandle1_entry
	.size GHC.IO.Handle.Internals.mkDuplexHandle_entry, .-GHC.IO.Handle.Internals.mkDuplexHandle_entry


==================== Asm code ====================
2018-03-16 16:05:16.242757864 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.mkDuplexHandle_info
.type GHC.IO.Handle.Internals.mkDuplexHandle_info, @object
GHC.IO.Handle.Internals.mkDuplexHandle_info:
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle_entry
	.quad	0
	.quad	4294967310
	.quad	34359738368
	.quad	Saded_srt+400
	.quad	7
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle_slow


==================== Asm code ====================
2018-03-16 16:05:16.248784177 UTC

.section .data
.align 8
.align 1
$wlvl_ra7PF_closure:
	.quad	$wlvl_ra7PF_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.250030138 UTC

.section .text
.align 8
sat_sad3d_entry:
_caeH7:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _caeH8
_caeH9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_caeH0_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _caeH0
_caeH1:
	movq (%rbx),%rax
	jmp *(%rax)
_caeH8:
	jmp *-16(%r13)
	.size sat_sad3d_entry, .-sat_sad3d_entry


==================== Asm code ====================
2018-03-16 16:05:16.250656244 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sad3d_info:
	.quad	sat_sad3d_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:05:16.251383472 UTC

.section .text
.align 8
_caeH0:
_caeH0:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _caeH4
_caeH5:
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_caeH4:
	movq 8(%rbp),%rax
	leaq block_caeHc_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _caeHc
_caeHe:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caeH0, .-_caeH0


==================== Asm code ====================
2018-03-16 16:05:16.252025272 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeH0_info:
	.quad	_caeH0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.252857811 UTC

.section .text
.align 8
_caeHc:
_caeHc:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _caeHk
_caeHr:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caeHu
_caeHt:
	movq 6(%rbx),%rax
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caeHu:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_caeHk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caeHu
_caeHm:
	movq 7(%rbx),%rax
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caeHc, .-_caeHc


==================== Asm code ====================
2018-03-16 16:05:16.253618357 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeHc_info:
	.quad	_caeHc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.254510006 UTC

.section .text
.align 8
sat_sad3f_entry:
_caeHD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caeHE
_caeHF:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _caeHH
_caeHG:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	leaq sat_sad3d_info(%rip),%r8
	movq %r8,-96(%r12)
	movq %rsi,-80(%r12)
	movq %rbx,-72(%r12)
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rsi
	movq %rsi,-64(%r12)
	movq %rbx,-56(%r12)
	movq GHC.IO.Exception.IOError_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	leaq -62(%r12),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-32(%r12)
	movq %rdi,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_caeHH:
	movq $104,904(%r13)
_caeHE:
	jmp *-16(%r13)
	.size sat_sad3f_entry, .-sat_sad3f_entry


==================== Asm code ====================
2018-03-16 16:05:16.255298644 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sad3f_info:
	.quad	sat_sad3f_entry
	.quad	6
	.quad	4294967311
	.quad	Saded_srt+408


==================== Asm code ====================
2018-03-16 16:05:16.256009763 UTC

.section .text
.align 8
$wlvl_ra7PF_entry:
_caeHI:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _caeHM
_caeHL:
	leaq sat_sad3f_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq %r8,-16(%r12)
	movq %r9,-8(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	leaq -56(%r12),%rbx
	addq $8,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_caeHM:
	movq $64,904(%r13)
	leaq $wlvl_ra7PF_closure(%rip),%rbx
	jmp *-8(%r13)
	.size $wlvl_ra7PF_entry, .-$wlvl_ra7PF_entry


==================== Asm code ====================
2018-03-16 16:05:16.256712771 UTC

.section .data.rel.ro
.align 8
.align 1
$wlvl_ra7PF_info:
	.quad	$wlvl_ra7PF_entry
	.quad	0
	.quad	12884901902
	.quad	30064771098
	.quad	Saded_srt+408


==================== Asm code ====================
2018-03-16 16:05:16.26504462 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wdo_operation_closure
.type GHC.IO.Handle.Internals.$wdo_operation_closure, @object
GHC.IO.Handle.Internals.$wdo_operation_closure:
	.quad	GHC.IO.Handle.Internals.$wdo_operation_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.26589525 UTC

.section .text
.align 8
sat_sad3K_entry:
_caeIK:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _caeIO
_caeIP:
	leaq block_caeIF_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq %r14,%rax
	movq 38(%rbx),%r14
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rdx
	movq 22(%rbx),%rsi
	movq 30(%rbx),%rbx
	movq %rbx,%rdi
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-48,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
_caeIO:
	jmp *-8(%r13)
	.size sat_sad3K_entry, .-sat_sad3K_entry


==================== Asm code ====================
2018-03-16 16:05:16.266541433 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sad3K_info:
	.quad	sat_sad3K_entry
	.quad	5
	.quad	133143986184
	.quad	8589934597
	.quad	Saded_srt+416


==================== Asm code ====================
2018-03-16 16:05:16.267237982 UTC

.section .text
.align 8
_caeIF:
_caeIF:
	leaq block_caeIH_info(%rip),%rax
	movq %rax,(%rbp)
	movq 40(%rbp),%rbx
	testb $7,%bl
	jne _caeIH
_caeII:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caeIF, .-_caeIF


==================== Asm code ====================
2018-03-16 16:05:16.26781188 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeIF_info:
	.quad	_caeIF
	.quad	5
	.quad	133143986206
	.quad	Saded_srt+416


==================== Asm code ====================
2018-03-16 16:05:16.268452283 UTC

.section .text
.align 8
_caeIH:
_caeIH:
	leaq block_caeIN_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%r14
	movq 15(%rbx),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rbx,40(%rbp)
	addq $-16,%rbp
	jmp *GHC.Exception.$p1Exception_entry@gotpcrel(%rip)
	.size _caeIH, .-_caeIH


==================== Asm code ====================
2018-03-16 16:05:16.269093285 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeIH_info:
	.quad	_caeIH
	.quad	1029
	.quad	133143986206
	.quad	Saded_srt+416


==================== Asm code ====================
2018-03-16 16:05:16.269767882 UTC

.section .text
.align 8
_caeIN:
_caeIN:
	leaq block_caeIV_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.IO.Exception.$fExceptionIOException4_closure@gotpcrel(%rip),%rsi
	movq %rbx,%r14
	jmp *Data.Typeable.Internal.sameTypeRep_entry@gotpcrel(%rip)
	.size _caeIN, .-_caeIN


==================== Asm code ====================
2018-03-16 16:05:16.270361177 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeIN_info:
	.quad	_caeIN
	.quad	7
	.quad	133143986206
	.quad	Saded_srt+416


==================== Asm code ====================
2018-03-16 16:05:16.271108744 UTC

.section .text
.align 8
_caeIV:
_caeIV:
	andl $7,%ebx
	cmpq $1,%rbx
	je _caeJ3
_caeJq:
	leaq block_caeJo_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_caeJ3:
	movq 16(%rbp),%rax
	leaq block_caeJ0_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%r14
	addq $16,%rbp
	jmp *GHC.Exception.$p1Exception_entry@gotpcrel(%rip)
	.size _caeIV, .-_caeIV


==================== Asm code ====================
2018-03-16 16:05:16.271754292 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeIV_info:
	.quad	_caeIV
	.quad	7
	.quad	98784247838
	.quad	Saded_srt+416


==================== Asm code ====================
2018-03-16 16:05:16.27236236 UTC

.section .text
.align 8
_caeJ0:
_caeJ0:
	leaq block_caeJ7_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.IO.Exception.$fExceptionAllocationLimitExceeded6_closure@gotpcrel(%rip),%rsi
	movq %rbx,%r14
	jmp *Data.Typeable.Internal.sameTypeRep_entry@gotpcrel(%rip)
	.size _caeJ0, .-_caeJ0


==================== Asm code ====================
2018-03-16 16:05:16.272943179 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeJ0_info:
	.quad	_caeJ0
	.quad	5
	.quad	47244640286
	.quad	Saded_srt+424


==================== Asm code ====================
2018-03-16 16:05:16.273920915 UTC

.section .text
.align 8
_caeJ7:
_caeJ7:
	movq 40(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _caeJe
_caeJj:
	leaq block_caeJh_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	movq 872(%r13),%rbx
	jmp *stg_killThread#@gotpcrel(%rip)
_caeJe:
	movq %rax,%rbx
	addq $48,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _caeJ7, .-_caeJ7


==================== Asm code ====================
2018-03-16 16:05:16.274556416 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeJ7_info:
	.quad	_caeJ7
	.quad	5
	.quad	4294967326
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.27517338 UTC

.section .text
.align 8
_caeJh:
_caeJh:
	movq 32(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $48,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
	.size _caeJh, .-_caeJh


==================== Asm code ====================
2018-03-16 16:05:16.275790561 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeJh_info:
	.quad	_caeJh
	.quad	1029
	.quad	4294967326
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.276464767 UTC

.section .text
.align 8
_caeJo:
_caeJo:
	movq 8(%rbp),%r9
	movq 47(%rbx),%r8
	movq 39(%rbx),%rdi
	movq 31(%rbx),%rsi
	movq 15(%rbx),%r14
	movq 16(%rbp),%rax
	movq %rax,40(%rbp)
	addq $40,%rbp
	jmp $wlvl_ra7PF_entry
	.size _caeJo, .-_caeJo


==================== Asm code ====================
2018-03-16 16:05:16.277050956 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeJo_info:
	.quad	_caeJo
	.quad	1797
	.quad	4294967326
	.quad	Saded_srt+416


==================== Asm code ====================
2018-03-16 16:05:16.277850628 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.$wdo_operation_entry
.type GHC.IO.Handle.Internals.$wdo_operation_entry, @object
GHC.IO.Handle.Internals.$wdo_operation_entry:
_caeJy:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _caeJz
_caeJA:
	leaq block_caeIw_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp *stg_takeMVar#@gotpcrel(%rip)
_caeJz:
	leaq GHC.IO.Handle.Internals.$wdo_operation_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.$wdo_operation_entry, .-GHC.IO.Handle.Internals.$wdo_operation_entry


==================== Asm code ====================
2018-03-16 16:05:16.278522118 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wdo_operation_info
.type GHC.IO.Handle.Internals.$wdo_operation_info, @object
GHC.IO.Handle.Internals.$wdo_operation_info:
	.quad	GHC.IO.Handle.Internals.$wdo_operation_entry
	.quad	0
	.quad	133143986190
	.quad	21474836504
	.quad	Saded_srt+416


==================== Asm code ====================
2018-03-16 16:05:16.279203447 UTC

.section .text
.align 8
_caeIw:
_caeIw:
	leaq block_caeIy_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	movq %rbx,%rax
	movq 24(%rbp),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size _caeIw, .-_caeIw


==================== Asm code ====================
2018-03-16 16:05:16.279847568 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeIw_info:
	.quad	_caeIw
	.quad	4
	.quad	133143986206
	.quad	Saded_srt+416


==================== Asm code ====================
2018-03-16 16:05:16.280613268 UTC

.section .text
.align 8
_caeIy:
_caeIy:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _caeJE
_caeJD:
	leaq sat_sad3K_info(%rip),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -38(%r12),%r14
	addq $48,%rbp
	jmp *stg_catch#@gotpcrel(%rip)
_caeJE:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caeIy, .-_caeIy


==================== Asm code ====================
2018-03-16 16:05:16.281875959 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeIy_info:
	.quad	_caeIy
	.quad	5
	.quad	133143986206
	.quad	Saded_srt+416


==================== Asm code ====================
2018-03-16 16:05:16.285179482 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle_1_closure
.type GHC.IO.Handle.Internals.withHandle_1_closure, @object
GHC.IO.Handle.Internals.withHandle_1_closure:
	.quad	GHC.IO.Handle.Internals.withHandle_1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.286266243 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withHandle_1_entry
.type GHC.IO.Handle.Internals.withHandle_1_entry, @object
GHC.IO.Handle.Internals.withHandle_1_entry:
_caeKM:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _caeKN
_caeKO:
	leaq block_caeKJ_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _caeKJ
_caeKK:
	movq (%rbx),%rax
	jmp *(%rax)
_caeKN:
	leaq GHC.IO.Handle.Internals.withHandle_1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.withHandle_1_entry, .-GHC.IO.Handle.Internals.withHandle_1_entry


==================== Asm code ====================
2018-03-16 16:05:16.286906256 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle_1_info
.type GHC.IO.Handle.Internals.withHandle_1_info, @object
GHC.IO.Handle.Internals.withHandle_1_info:
	.quad	GHC.IO.Handle.Internals.withHandle_1_entry
	.quad	0
	.quad	12884901902
	.quad	21474836504
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.287546938 UTC

.section .text
.align 8
_caeKJ:
_caeKJ:
	movq 7(%rbx),%r8
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
	.size _caeKJ, .-_caeKJ


==================== Asm code ====================
2018-03-16 16:05:16.288147735 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeKJ_info:
	.quad	_caeKJ
	.quad	3
	.quad	4294967326
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.29330514 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wwithHandle__'_closure
.type GHC.IO.Handle.Internals.$wwithHandle__'_closure, @object
GHC.IO.Handle.Internals.$wwithHandle__'_closure:
	.quad	GHC.IO.Handle.Internals.$wwithHandle__'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.29408683 UTC

.section .text
.align 8
sat_sad4a_entry:
_caeLl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caeLm
_caeLn:
	leaq block_caeLh_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 23(%rbx),%rax
	movq %rax,%r8
	movq 31(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_caeLm:
	jmp *-8(%r13)
	.size sat_sad4a_entry, .-sat_sad4a_entry


==================== Asm code ====================
2018-03-16 16:05:16.294767278 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sad4a_info:
	.quad	sat_sad4a_entry
	.quad	4
	.quad	4294967304
	.quad	4294967299
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.295451871 UTC

.section .text
.align 8
_caeLh:
_caeLh:
	movq 8(%rbp),%rax
	leaq block_caeLj_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _caeLh, .-_caeLh


==================== Asm code ====================
2018-03-16 16:05:16.296041879 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeLh_info:
	.quad	_caeLh
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.296693556 UTC

.section .text
.align 8
_caeLj:
_caeLj:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caeLj, .-_caeLj


==================== Asm code ====================
2018-03-16 16:05:16.297292099 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeLj_info:
	.quad	_caeLj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.298023176 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.$wwithHandle__'_entry
.type GHC.IO.Handle.Internals.$wwithHandle__'_entry, @object
GHC.IO.Handle.Internals.$wwithHandle__'_entry:
_caeLt:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _caeLu
_caeLv:
	leaq block_caeL7_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_caeLu:
	leaq GHC.IO.Handle.Internals.$wwithHandle__'_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.$wwithHandle__'_entry, .-GHC.IO.Handle.Internals.$wwithHandle__'_entry


==================== Asm code ====================
2018-03-16 16:05:16.298735764 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wwithHandle__'_info
.type GHC.IO.Handle.Internals.$wwithHandle__'_info, @object
GHC.IO.Handle.Internals.$wwithHandle__'_info:
	.quad	GHC.IO.Handle.Internals.$wwithHandle__'_entry
	.quad	0
	.quad	21474836494
	.quad	21474836504
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.299572233 UTC

.section .text
.align 8
_caeL7:
_caeL7:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _caeLy
_caeLx:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	testq %rbx,%rbx
	je _caeLs
_caeLr:
	addq $-40,%r12
	leaq block_caeLz_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rdx,%r8
	movq %rsi,%rdi
	movq %rcx,%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_caeLy:
	movq $40,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_caeLs:
	leaq sat_sad4a_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rsi,(%r12)
	leaq -31(%r12),%rbx
	addq $40,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
	.size _caeL7, .-_caeL7


==================== Asm code ====================
2018-03-16 16:05:16.300350411 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeL7_info:
	.quad	_caeL7
	.quad	4
	.quad	4294967326
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.301004178 UTC

.section .text
.align 8
_caeLz:
_caeLz:
	leaq block_caeLB_info(%rip),%rax
	movq %rax,16(%rbp)
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _caeLz, .-_caeLz


==================== Asm code ====================
2018-03-16 16:05:16.301657869 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeLz_info:
	.quad	_caeLz
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.302332592 UTC

.section .text
.align 8
_caeLB:
_caeLB:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caeLB, .-_caeLB


==================== Asm code ====================
2018-03-16 16:05:16.302915878 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeLB_info:
	.quad	_caeLB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.306366533 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle__'1_closure
.type GHC.IO.Handle.Internals.withHandle__'1_closure, @object
GHC.IO.Handle.Internals.withHandle__'1_closure:
	.quad	GHC.IO.Handle.Internals.withHandle__'1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.307186905 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withHandle__'1_entry
.type GHC.IO.Handle.Internals.withHandle__'1_entry, @object
GHC.IO.Handle.Internals.withHandle__'1_entry:
_caeMk:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _caeMl
_caeMm:
	leaq block_caeMh_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _caeMh
_caeMi:
	movq (%rbx),%rax
	jmp *(%rax)
_caeMl:
	leaq GHC.IO.Handle.Internals.withHandle__'1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.withHandle__'1_entry, .-GHC.IO.Handle.Internals.withHandle__'1_entry


==================== Asm code ====================
2018-03-16 16:05:16.307873797 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle__'1_info
.type GHC.IO.Handle.Internals.withHandle__'1_info, @object
GHC.IO.Handle.Internals.withHandle__'1_info:
	.quad	GHC.IO.Handle.Internals.withHandle__'1_entry
	.quad	0
	.quad	12884901902
	.quad	21474836504
	.quad	Saded_srt+464


==================== Asm code ====================
2018-03-16 16:05:16.308526724 UTC

.section .text
.align 8
_caeMh:
_caeMh:
	movq 24(%rbp),%r8
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.$wwithHandle__'_entry
	.size _caeMh, .-_caeMh


==================== Asm code ====================
2018-03-16 16:05:16.309108624 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeMh_info:
	.quad	_caeMh
	.quad	3
	.quad	4294967326
	.quad	Saded_srt+464


==================== Asm code ====================
2018-03-16 16:05:16.311353336 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle__'_closure
.type GHC.IO.Handle.Internals.withHandle__'_closure, @object
GHC.IO.Handle.Internals.withHandle__'_closure:
	.quad	GHC.IO.Handle.Internals.withHandle__'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.311969739 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withHandle__'_entry
.type GHC.IO.Handle.Internals.withHandle__'_entry, @object
GHC.IO.Handle.Internals.withHandle__'_entry:
_caeMF:
	jmp GHC.IO.Handle.Internals.withHandle__'1_entry
	.size GHC.IO.Handle.Internals.withHandle__'_entry, .-GHC.IO.Handle.Internals.withHandle__'_entry


==================== Asm code ====================
2018-03-16 16:05:16.312600925 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle__'_info
.type GHC.IO.Handle.Internals.withHandle__'_info, @object
GHC.IO.Handle.Internals.withHandle__'_info:
	.quad	GHC.IO.Handle.Internals.withHandle__'_entry
	.quad	0
	.quad	4294967310
	.quad	21474836504
	.quad	Saded_srt+472


==================== Asm code ====================
2018-03-16 16:05:16.324628778 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withAllHandles__1_closure
.type GHC.IO.Handle.Internals.withAllHandles__1_closure, @object
GHC.IO.Handle.Internals.withAllHandles__1_closure:
	.quad	GHC.IO.Handle.Internals.withAllHandles__1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.325481909 UTC

.section .text
.align 8
sat_sad4C_entry:
_caeN9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caeNa
_caeNb:
	leaq block_caeN5_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 7(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_caeNa:
	jmp *-8(%r13)
	.size sat_sad4C_entry, .-sat_sad4C_entry


==================== Asm code ====================
2018-03-16 16:05:16.326148209 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sad4C_info:
	.quad	sat_sad4C_entry
	.quad	4
	.quad	4294967304
	.quad	4294967299
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.326819346 UTC

.section .text
.align 8
_caeN5:
_caeN5:
	movq 8(%rbp),%rax
	leaq block_caeN7_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _caeN5, .-_caeN5


==================== Asm code ====================
2018-03-16 16:05:16.328122733 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeN5_info:
	.quad	_caeN5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.328829177 UTC

.section .text
.align 8
_caeN7:
_caeN7:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caeN7, .-_caeN7


==================== Asm code ====================
2018-03-16 16:05:16.329639193 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeN7_info:
	.quad	_caeN7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.330351024 UTC

.section .text
.align 8
sat_sad4Y_entry:
_caeNB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caeNC
_caeND:
	leaq block_caeNx_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 7(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_caeNC:
	jmp *-8(%r13)
	.size sat_sad4Y_entry, .-sat_sad4Y_entry


==================== Asm code ====================
2018-03-16 16:05:16.33098041 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sad4Y_info:
	.quad	sat_sad4Y_entry
	.quad	4
	.quad	4294967304
	.quad	4294967299
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.331655969 UTC

.section .text
.align 8
_caeNx:
_caeNx:
	movq 8(%rbp),%rax
	leaq block_caeNz_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _caeNx, .-_caeNx


==================== Asm code ====================
2018-03-16 16:05:16.332220349 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeNx_info:
	.quad	_caeNx
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.332845577 UTC

.section .text
.align 8
_caeNz:
_caeNz:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caeNz, .-_caeNz


==================== Asm code ====================
2018-03-16 16:05:16.333444552 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeNz_info:
	.quad	_caeNz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.334123209 UTC

.section .text
.align 8
sat_sad59_entry:
_caeNS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caeNT
_caeNU:
	leaq block_caeNO_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 7(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_caeNT:
	jmp *-8(%r13)
	.size sat_sad59_entry, .-sat_sad59_entry


==================== Asm code ====================
2018-03-16 16:05:16.334785856 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sad59_info:
	.quad	sat_sad59_entry
	.quad	4
	.quad	4294967304
	.quad	4294967299
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.335405709 UTC

.section .text
.align 8
_caeNO:
_caeNO:
	movq 8(%rbp),%rax
	leaq block_caeNQ_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _caeNO, .-_caeNO


==================== Asm code ====================
2018-03-16 16:05:16.335998645 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeNO_info:
	.quad	_caeNO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.336639269 UTC

.section .text
.align 8
_caeNQ:
_caeNQ:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caeNQ, .-_caeNQ


==================== Asm code ====================
2018-03-16 16:05:16.337201912 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeNQ_info:
	.quad	_caeNQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.337960856 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withAllHandles__1_entry
.type GHC.IO.Handle.Internals.withAllHandles__1_entry, @object
GHC.IO.Handle.Internals.withAllHandles__1_entry:
_caeO1:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _caeO2
_caeO3:
	leaq block_caeMQ_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _caeMQ
_caeMR:
	movq (%rbx),%rax
	jmp *(%rax)
_caeO2:
	leaq GHC.IO.Handle.Internals.withAllHandles__1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.withAllHandles__1_entry, .-GHC.IO.Handle.Internals.withAllHandles__1_entry


==================== Asm code ====================
2018-03-16 16:05:16.338603564 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withAllHandles__1_info
.type GHC.IO.Handle.Internals.withAllHandles__1_info, @object
GHC.IO.Handle.Internals.withAllHandles__1_info:
	.quad	GHC.IO.Handle.Internals.withAllHandles__1_entry
	.quad	0
	.quad	73014444046
	.quad	17179869207
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.339323128 UTC

.section .text
.align 8
_caeMQ:
_caeMQ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _caeNY
_caeNZ:
	leaq block_caeNg_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 22(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-24,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_caeNY:
	leaq block_caeMV_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _caeMQ, .-_caeMQ


==================== Asm code ====================
2018-03-16 16:05:16.340000627 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeMQ_info:
	.quad	_caeMQ
	.quad	2
	.quad	4294967326
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.340794314 UTC

.section .text
.align 8
_caeMV:
_caeMV:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _caeO7
_caeO6:
	movq 24(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq 8(%rbp),%rsi
	testq %rbx,%rbx
	je _caeOg
_caeOc:
	addq $-40,%r12
	leaq block_caeO8_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rsi,%r8
	movq %rcx,%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_caeOg:
	leaq sat_sad4C_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rsi,(%r12)
	leaq -31(%r12),%rbx
	addq $40,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_caeO7:
	movq $40,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _caeMV, .-_caeMV


==================== Asm code ====================
2018-03-16 16:05:16.341672855 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeMV_info:
	.quad	_caeMV
	.quad	4
	.quad	4294967326
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.342342915 UTC

.section .text
.align 8
_caeO8:
_caeO8:
	leaq block_caeOr_info(%rip),%rax
	movq %rax,32(%rbp)
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $32,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _caeO8, .-_caeO8


==================== Asm code ====================
2018-03-16 16:05:16.342883538 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeO8_info:
	.quad	_caeO8
	.quad	900
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.34370801 UTC

.section .text
.align 8
_caeNg:
_caeNg:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _caeOk
_caeOj:
	movq 32(%rbp),%rax
	movq 40(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 8(%rbp),%rsi
	testq %rbx,%rbx
	je _caeOH
_caeOC:
	addq $-40,%r12
	leaq block_caeOy_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rsi,%r8
	movq %rcx,%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_caeOH:
	leaq sat_sad59_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rsi,(%r12)
	leaq block_caeOG_info(%rip),%rax
	movq %rax,8(%rbp)
	leaq -31(%r12),%rbx
	addq $8,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_caeOk:
	movq $40,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _caeNg, .-_caeNg


==================== Asm code ====================
2018-03-16 16:05:16.344446584 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeNg_info:
	.quad	_caeNg
	.quad	5
	.quad	4294967326
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.34503564 UTC

.section .text
.align 8
_caeOG:
_caeOG:
	jmp _sad4J
	.size _caeOG, .-_caeOG


==================== Asm code ====================
2018-03-16 16:05:16.34559967 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeOG_info:
	.quad	_caeOG
	.quad	4
	.quad	4294967326
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.346264704 UTC

.section .text
.align 8
_caeOy:
_caeOy:
	movq 8(%rbp),%rax
	leaq block_sad4J_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _caeOy, .-_caeOy


==================== Asm code ====================
2018-03-16 16:05:16.34681788 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeOy_info:
	.quad	_caeOy
	.quad	5
	.quad	4294967326
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.34741863 UTC

.section .text
.align 8
_sad4J:
_sad4J:
	leaq block_caeNn_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _sad4J, .-_sad4J


==================== Asm code ====================
2018-03-16 16:05:16.347986626 UTC

.section .data.rel.ro
.align 8
.align 1
block_sad4J_info:
	.quad	_sad4J
	.quad	4
	.quad	4294967326
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.348769862 UTC

.section .text
.align 8
_caeNn:
_caeNn:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _caeOo
_caeOn:
	movq 24(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq 8(%rbp),%rsi
	testq %rbx,%rbx
	je _caeOx
_caeOt:
	addq $-40,%r12
	leaq block_caeOp_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rsi,%r8
	movq %rcx,%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_caeOx:
	leaq sat_sad4Y_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rsi,(%r12)
	leaq -31(%r12),%rbx
	addq $40,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_caeOo:
	movq $40,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _caeNn, .-_caeNn


==================== Asm code ====================
2018-03-16 16:05:16.349510936 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeNn_info:
	.quad	_caeNn
	.quad	4
	.quad	4294967326
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.350140164 UTC

.section .text
.align 8
_caeOp:
_caeOp:
	leaq block_caeOr_info(%rip),%rax
	movq %rax,32(%rbp)
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $32,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _caeOp, .-_caeOp


==================== Asm code ====================
2018-03-16 16:05:16.350749478 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeOp_info:
	.quad	_caeOp
	.quad	900
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.351403728 UTC

.section .text
.align 8
_caeOr:
_caeOr:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caeOr, .-_caeOr


==================== Asm code ====================
2018-03-16 16:05:16.351972653 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeOr_info:
	.quad	_caeOr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.354684942 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withAllHandles___closure
.type GHC.IO.Handle.Internals.withAllHandles___closure, @object
GHC.IO.Handle.Internals.withAllHandles___closure:
	.quad	GHC.IO.Handle.Internals.withAllHandles___info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.355289803 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withAllHandles___entry
.type GHC.IO.Handle.Internals.withAllHandles___entry, @object
GHC.IO.Handle.Internals.withAllHandles___entry:
_caeQr:
	jmp GHC.IO.Handle.Internals.withAllHandles__1_entry
	.size GHC.IO.Handle.Internals.withAllHandles___entry, .-GHC.IO.Handle.Internals.withAllHandles___entry


==================== Asm code ====================
2018-03-16 16:05:16.355913471 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withAllHandles___info
.type GHC.IO.Handle.Internals.withAllHandles___info, @object
GHC.IO.Handle.Internals.withAllHandles___info:
	.quad	GHC.IO.Handle.Internals.withAllHandles___entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	Saded_srt+480


==================== Asm code ====================
2018-03-16 16:05:16.361610722 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wwithHandle'_closure
.type GHC.IO.Handle.Internals.$wwithHandle'_closure, @object
GHC.IO.Handle.Internals.$wwithHandle'_closure:
	.quad	GHC.IO.Handle.Internals.$wwithHandle'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.362382435 UTC

.section .text
.align 8
io_sad5l_entry:
_caeQO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caeQS
_caeQT:
	leaq block_caeQJ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 23(%rbx),%rax
	movq %rax,%r8
	movq 31(%rbx),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_caeQS:
	jmp *-8(%r13)
	.size io_sad5l_entry, .-io_sad5l_entry


==================== Asm code ====================
2018-03-16 16:05:16.363023117 UTC

.section .data.rel.ro
.align 8
.align 1
io_sad5l_info:
	.quad	io_sad5l_entry
	.quad	4
	.quad	4294967304
	.quad	4294967299
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.363676093 UTC

.section .text
.align 8
_caeQJ:
_caeQJ:
	leaq block_caeQL_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _caeQL
_caeQM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caeQJ, .-_caeQJ


==================== Asm code ====================
2018-03-16 16:05:16.364250531 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeQJ_info:
	.quad	_caeQJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.364878984 UTC

.section .text
.align 8
_caeQL:
_caeQL:
	leaq block_caeQR_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _caeQL, .-_caeQL


==================== Asm code ====================
2018-03-16 16:05:16.365865818 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeQL_info:
	.quad	_caeQL
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.366515031 UTC

.section .text
.align 8
_caeQR:
_caeQR:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caeQR, .-_caeQR


==================== Asm code ====================
2018-03-16 16:05:16.367120025 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeQR_info:
	.quad	_caeQR
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.367837632 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.$wwithHandle'_entry
.type GHC.IO.Handle.Internals.$wwithHandle'_entry, @object
GHC.IO.Handle.Internals.$wwithHandle'_entry:
_caeR3:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _caeR4
_caeR5:
	leaq block_caeQC_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_caeR4:
	leaq GHC.IO.Handle.Internals.$wwithHandle'_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.$wwithHandle'_entry, .-GHC.IO.Handle.Internals.$wwithHandle'_entry


==================== Asm code ====================
2018-03-16 16:05:16.368481124 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wwithHandle'_info
.type GHC.IO.Handle.Internals.$wwithHandle'_info, @object
GHC.IO.Handle.Internals.$wwithHandle'_info:
	.quad	GHC.IO.Handle.Internals.$wwithHandle'_entry
	.quad	0
	.quad	141733920782
	.quad	21474836504
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.36929394 UTC

.section .text
.align 8
_caeQC:
_caeQC:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _caeR8
_caeR7:
	leaq io_sad5l_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	testq %rbx,%rbx
	je _caeR2
_caeR1:
	movq %rax,%rbx
	addq $40,%rbp
	jmp io_sad5l_entry
_caeR8:
	movq $40,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_caeR2:
	movq %rax,%rbx
	addq $40,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
	.size _caeQC, .-_caeQC


==================== Asm code ====================
2018-03-16 16:05:16.369990869 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeQC_info:
	.quad	_caeQC
	.quad	4
	.quad	4294967326
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.373130808 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle1_closure
.type GHC.IO.Handle.Internals.withHandle1_closure, @object
GHC.IO.Handle.Internals.withHandle1_closure:
	.quad	GHC.IO.Handle.Internals.withHandle1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.373923618 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withHandle1_entry
.type GHC.IO.Handle.Internals.withHandle1_entry, @object
GHC.IO.Handle.Internals.withHandle1_entry:
_caeRM:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _caeRN
_caeRO:
	leaq block_caeRJ_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _caeRJ
_caeRK:
	movq (%rbx),%rax
	jmp *(%rax)
_caeRN:
	leaq GHC.IO.Handle.Internals.withHandle1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.withHandle1_entry, .-GHC.IO.Handle.Internals.withHandle1_entry


==================== Asm code ====================
2018-03-16 16:05:16.374603756 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle1_info
.type GHC.IO.Handle.Internals.withHandle1_info, @object
GHC.IO.Handle.Internals.withHandle1_info:
	.quad	GHC.IO.Handle.Internals.withHandle1_entry
	.quad	0
	.quad	12884901902
	.quad	21474836504
	.quad	Saded_srt+488


==================== Asm code ====================
2018-03-16 16:05:16.375263705 UTC

.section .text
.align 8
_caeRJ:
_caeRJ:
	movq 24(%rbp),%r8
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.$wwithHandle'_entry
	.size _caeRJ, .-_caeRJ


==================== Asm code ====================
2018-03-16 16:05:16.375847358 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeRJ_info:
	.quad	_caeRJ
	.quad	3
	.quad	4294967326
	.quad	Saded_srt+488


==================== Asm code ====================
2018-03-16 16:05:16.378345083 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle'_closure
.type GHC.IO.Handle.Internals.withHandle'_closure, @object
GHC.IO.Handle.Internals.withHandle'_closure:
	.quad	GHC.IO.Handle.Internals.withHandle'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.378991928 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withHandle'_entry
.type GHC.IO.Handle.Internals.withHandle'_entry, @object
GHC.IO.Handle.Internals.withHandle'_entry:
_caeS7:
	jmp GHC.IO.Handle.Internals.withHandle1_entry
	.size GHC.IO.Handle.Internals.withHandle'_entry, .-GHC.IO.Handle.Internals.withHandle'_entry


==================== Asm code ====================
2018-03-16 16:05:16.379567662 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle'_info
.type GHC.IO.Handle.Internals.withHandle'_info, @object
GHC.IO.Handle.Internals.withHandle'_info:
	.quad	GHC.IO.Handle.Internals.withHandle'_entry
	.quad	0
	.quad	4294967310
	.quad	21474836504
	.quad	Saded_srt+496


==================== Asm code ====================
2018-03-16 16:05:16.384049827 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle_'1_closure
.type GHC.IO.Handle.Internals.withHandle_'1_closure, @object
GHC.IO.Handle.Internals.withHandle_'1_closure:
	.quad	GHC.IO.Handle.Internals.withHandle_'1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.384822159 UTC

.section .text
.align 8
sat_sad5P_entry:
_caeSv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caeSw
_caeSx:
	leaq block_caeSs_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
_caeSw:
	jmp *-8(%r13)
	.size sat_sad5P_entry, .-sat_sad5P_entry


==================== Asm code ====================
2018-03-16 16:05:16.385472919 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sad5P_info:
	.quad	sat_sad5P_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:16.38622052 UTC

.section .text
.align 8
_caeSs:
_caeSs:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caeSA
_caeSz:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caeSA:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caeSs, .-_caeSs


==================== Asm code ====================
2018-03-16 16:05:16.386861997 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeSs_info:
	.quad	_caeSs
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.387676993 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withHandle_'1_entry
.type GHC.IO.Handle.Internals.withHandle_'1_entry, @object
GHC.IO.Handle.Internals.withHandle_'1_entry:
_caeSB:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _caeSC
_caeSD:
	leaq block_caeSi_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _caeSi
_caeSj:
	movq (%rbx),%rax
	jmp *(%rax)
_caeSC:
	leaq GHC.IO.Handle.Internals.withHandle_'1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.withHandle_'1_entry, .-GHC.IO.Handle.Internals.withHandle_'1_entry


==================== Asm code ====================
2018-03-16 16:05:16.388395885 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle_'1_info
.type GHC.IO.Handle.Internals.withHandle_'1_info, @object
GHC.IO.Handle.Internals.withHandle_'1_info:
	.quad	GHC.IO.Handle.Internals.withHandle_'1_entry
	.quad	0
	.quad	21474836494
	.quad	21474836504
	.quad	Saded_srt+488


==================== Asm code ====================
2018-03-16 16:05:16.389167068 UTC

.section .text
.align 8
_caeSi:
_caeSi:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caeSG
_caeSF:
	movq 7(%rbx),%rax
	leaq sat_sad5P_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -6(%r12),%r8
	movq %rax,%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.$wwithHandle'_entry
_caeSG:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caeSi, .-_caeSi


==================== Asm code ====================
2018-03-16 16:05:16.390171832 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeSi_info:
	.quad	_caeSi
	.quad	3
	.quad	4294967326
	.quad	Saded_srt+488


==================== Asm code ====================
2018-03-16 16:05:16.392447832 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle_'_closure
.type GHC.IO.Handle.Internals.withHandle_'_closure, @object
GHC.IO.Handle.Internals.withHandle_'_closure:
	.quad	GHC.IO.Handle.Internals.withHandle_'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.393111788 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withHandle_'_entry
.type GHC.IO.Handle.Internals.withHandle_'_entry, @object
GHC.IO.Handle.Internals.withHandle_'_entry:
_caeT9:
	jmp GHC.IO.Handle.Internals.withHandle_'1_entry
	.size GHC.IO.Handle.Internals.withHandle_'_entry, .-GHC.IO.Handle.Internals.withHandle_'_entry


==================== Asm code ====================
2018-03-16 16:05:16.393729486 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle_'_info
.type GHC.IO.Handle.Internals.withHandle_'_info, @object
GHC.IO.Handle.Internals.withHandle_'_info:
	.quad	GHC.IO.Handle.Internals.withHandle_'_entry
	.quad	0
	.quad	4294967310
	.quad	21474836504
	.quad	Saded_srt+504


==================== Asm code ====================
2018-03-16 16:05:16.4054575 UTC

.section .data
.align 8
.align 1
withHandle_2_ra7PG_closure:
	.quad	withHandle_2_ra7PG_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.40623409 UTC

.section .text
.align 8
sat_sad68_entry:
_caeTE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caeTF
_caeTG:
	leaq block_caeTB_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
_caeTF:
	jmp *-8(%r13)
	.size sat_sad68_entry, .-sat_sad68_entry


==================== Asm code ====================
2018-03-16 16:05:16.406815211 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sad68_info:
	.quad	sat_sad68_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:16.407561858 UTC

.section .text
.align 8
_caeTB:
_caeTB:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caeTJ
_caeTI:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caeTJ:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caeTB, .-_caeTB


==================== Asm code ====================
2018-03-16 16:05:16.408190775 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeTB_info:
	.quad	_caeTB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.408953402 UTC

.section .text
.align 8
io_sad60_entry:
_caeTP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caeTT
_caeTU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caeTW
_caeTV:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	leaq sat_sad68_info(%rip),%rsi
	movq %rsi,-8(%r12)
	movq %rcx,(%r12)
	leaq block_caeTK_info(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_caeTW:
	movq $16,904(%r13)
_caeTT:
	jmp *-8(%r13)
	.size io_sad60_entry, .-io_sad60_entry


==================== Asm code ====================
2018-03-16 16:05:16.409707935 UTC

.section .data.rel.ro
.align 8
.align 1
io_sad60_info:
	.quad	io_sad60_entry
	.quad	4
	.quad	4294967304
	.quad	4294967299
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.410381199 UTC

.section .text
.align 8
_caeTK:
_caeTK:
	leaq block_caeTM_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _caeTM
_caeTN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caeTK, .-_caeTK


==================== Asm code ====================
2018-03-16 16:05:16.411009543 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeTK_info:
	.quad	_caeTK
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.411692423 UTC

.section .text
.align 8
_caeTM:
_caeTM:
	leaq block_caeTS_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _caeTM, .-_caeTM


==================== Asm code ====================
2018-03-16 16:05:16.412297823 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeTM_info:
	.quad	_caeTM
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.412974709 UTC

.section .text
.align 8
_caeTS:
_caeTS:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caeTS, .-_caeTS


==================== Asm code ====================
2018-03-16 16:05:16.413775246 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeTS_info:
	.quad	_caeTS
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.414406053 UTC

.section .text
.align 8
sat_sad6v_entry:
_caeUj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caeUk
_caeUl:
	leaq block_caeUg_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
_caeUk:
	jmp *-8(%r13)
	.size sat_sad6v_entry, .-sat_sad6v_entry


==================== Asm code ====================
2018-03-16 16:05:16.4150827 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sad6v_info:
	.quad	sat_sad6v_entry
	.quad	1
	.quad	9
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:05:16.415767547 UTC

.section .text
.align 8
_caeUg:
_caeUg:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caeUo
_caeUn:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caeUo:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caeUg, .-_caeUg


==================== Asm code ====================
2018-03-16 16:05:16.416409879 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeUg_info:
	.quad	_caeUg
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.417254964 UTC

.section .text
.align 8
io_sad6n_entry:
_caeUu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caeUy
_caeUz:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caeUB
_caeUA:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	leaq sat_sad6v_info(%rip),%rsi
	movq %rsi,-8(%r12)
	movq %rcx,(%r12)
	leaq block_caeUp_info(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_caeUB:
	movq $16,904(%r13)
_caeUy:
	jmp *-8(%r13)
	.size io_sad6n_entry, .-io_sad6n_entry


==================== Asm code ====================
2018-03-16 16:05:16.418026601 UTC

.section .data.rel.ro
.align 8
.align 1
io_sad6n_info:
	.quad	io_sad6n_entry
	.quad	4
	.quad	4294967304
	.quad	4294967299
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.418758331 UTC

.section .text
.align 8
_caeUp:
_caeUp:
	leaq block_caeUr_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _caeUr
_caeUs:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caeUp, .-_caeUp


==================== Asm code ====================
2018-03-16 16:05:16.419405798 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeUp_info:
	.quad	_caeUp
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.420101361 UTC

.section .text
.align 8
_caeUr:
_caeUr:
	leaq block_caeUx_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _caeUr, .-_caeUr


==================== Asm code ====================
2018-03-16 16:05:16.420760345 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeUr_info:
	.quad	_caeUr
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.421453029 UTC

.section .text
.align 8
_caeUx:
_caeUx:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caeUx, .-_caeUx


==================== Asm code ====================
2018-03-16 16:05:16.422056484 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeUx_info:
	.quad	_caeUx
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.422815494 UTC

.section .text
.align 8
withHandle_2_ra7PG_entry:
_caeUL:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _caeUM
_caeUN:
	leaq block_caeTk_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _caeTk
_caeTl:
	movq (%rbx),%rax
	jmp *(%rax)
_caeUM:
	leaq withHandle_2_ra7PG_closure(%rip),%rbx
	jmp *-8(%r13)
	.size withHandle_2_ra7PG_entry, .-withHandle_2_ra7PG_entry


==================== Asm code ====================
2018-03-16 16:05:16.423516887 UTC

.section .data.rel.ro
.align 8
.align 1
withHandle_2_ra7PG_info:
	.quad	withHandle_2_ra7PG_entry
	.quad	0
	.quad	1103806595086
	.quad	17179869207
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.424290666 UTC

.section .text
.align 8
_caeTk:
_caeTk:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _caeUI
_caeUJ:
	leaq block_caeU4_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_caeUI:
	leaq block_caeTp_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _caeTk, .-_caeTk


==================== Asm code ====================
2018-03-16 16:05:16.425000667 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeTk_info:
	.quad	_caeTk
	.quad	2
	.quad	4294967326
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.426084751 UTC

.section .text
.align 8
_caeTp:
_caeTp:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _caeUR
_caeUQ:
	leaq io_sad60_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	testq %rbx,%rbx
	je _caeUV
_caeUU:
	movq %rax,%rbx
	addq $40,%rbp
	jmp io_sad60_entry
_caeUV:
	movq %rax,%rbx
	addq $40,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_caeUR:
	movq $40,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _caeTp, .-_caeTp


==================== Asm code ====================
2018-03-16 16:05:16.426804428 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeTp_info:
	.quad	_caeTp
	.quad	4
	.quad	4294967326
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.427586769 UTC

.section .text
.align 8
_caeU4:
_caeU4:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _caeUZ
_caeUY:
	leaq io_sad6n_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	testq %rbx,%rbx
	je _caeV3
_caeV2:
	movq %rax,%rbx
	addq $40,%rbp
	jmp io_sad6n_entry
_caeV3:
	movq %rax,%rbx
	addq $40,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_caeUZ:
	movq $40,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _caeU4, .-_caeU4


==================== Asm code ====================
2018-03-16 16:05:16.428286484 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeU4_info:
	.quad	_caeU4
	.quad	4
	.quad	4294967326
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.430637629 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle__closure
.type GHC.IO.Handle.Internals.withHandle__closure, @object
GHC.IO.Handle.Internals.withHandle__closure:
	.quad	GHC.IO.Handle.Internals.withHandle__info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.431279087 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withHandle__entry
.type GHC.IO.Handle.Internals.withHandle__entry, @object
GHC.IO.Handle.Internals.withHandle__entry:
_caeWD:
	jmp withHandle_2_ra7PG_entry
	.size GHC.IO.Handle.Internals.withHandle__entry, .-GHC.IO.Handle.Internals.withHandle__entry


==================== Asm code ====================
2018-03-16 16:05:16.431884978 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle__info
.type GHC.IO.Handle.Internals.withHandle__info, @object
GHC.IO.Handle.Internals.withHandle__info:
	.quad	GHC.IO.Handle.Internals.withHandle__entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	Saded_srt+512


==================== Asm code ====================
2018-03-16 16:05:16.443187646 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle_1_closure
.type GHC.IO.Handle.Internals.wantReadableHandle_1_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle_1_closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle_1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.444700542 UTC

.section .text
.align 8
sat_sad6W_entry:
_caeX8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caeX9
_caeXa:
	leaq block_caeX5_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rsi
	movq %r14,%rax
	movq 6(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.wantReadableHandle2_entry
_caeX9:
	jmp *-8(%r13)
	.size sat_sad6W_entry, .-sat_sad6W_entry


==================== Asm code ====================
2018-03-16 16:05:16.445429509 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sad6W_info:
	.quad	sat_sad6W_entry
	.quad	1
	.quad	4294967305
	.quad	8589934597
	.quad	Saded_srt+520


==================== Asm code ====================
2018-03-16 16:05:16.446192795 UTC

.section .text
.align 8
_caeX5:
_caeX5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caeXd
_caeXc:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caeXd:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caeX5, .-_caeX5


==================== Asm code ====================
2018-03-16 16:05:16.446851478 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeX5_info:
	.quad	_caeX5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.44762436 UTC

.section .text
.align 8
io_sad6O_entry:
_caeXj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caeXn
_caeXo:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caeXq
_caeXp:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	leaq sat_sad6W_info(%rip),%rsi
	movq %rsi,-8(%r12)
	movq %rcx,(%r12)
	leaq block_caeXe_info(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_caeXq:
	movq $16,904(%r13)
_caeXn:
	jmp *-8(%r13)
	.size io_sad6O_entry, .-io_sad6O_entry


==================== Asm code ====================
2018-03-16 16:05:16.448335115 UTC

.section .data.rel.ro
.align 8
.align 1
io_sad6O_info:
	.quad	io_sad6O_entry
	.quad	4
	.quad	2203318222856
	.quad	4294967299
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.449048171 UTC

.section .text
.align 8
_caeXe:
_caeXe:
	leaq block_caeXg_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _caeXg
_caeXh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caeXe, .-_caeXe


==================== Asm code ====================
2018-03-16 16:05:16.449655352 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeXe_info:
	.quad	_caeXe
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.450316554 UTC

.section .text
.align 8
_caeXg:
_caeXg:
	leaq block_caeXm_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _caeXg, .-_caeXg


==================== Asm code ====================
2018-03-16 16:05:16.450945674 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeXg_info:
	.quad	_caeXg
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.45156339 UTC

.section .text
.align 8
_caeXm:
_caeXm:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caeXm, .-_caeXm


==================== Asm code ====================
2018-03-16 16:05:16.452120424 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeXm_info:
	.quad	_caeXm
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.452823858 UTC

.section .text
.align 8
sat_sad7j_entry:
_caeXN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caeXO
_caeXP:
	leaq block_caeXK_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rsi
	movq %r14,%rax
	movq 6(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.wantReadableHandle2_entry
_caeXO:
	jmp *-8(%r13)
	.size sat_sad7j_entry, .-sat_sad7j_entry


==================== Asm code ====================
2018-03-16 16:05:16.453707101 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sad7j_info:
	.quad	sat_sad7j_entry
	.quad	1
	.quad	4294967305
	.quad	8589934597
	.quad	Saded_srt+520


==================== Asm code ====================
2018-03-16 16:05:16.454443573 UTC

.section .text
.align 8
_caeXK:
_caeXK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caeXS
_caeXR:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caeXS:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caeXK, .-_caeXK


==================== Asm code ====================
2018-03-16 16:05:16.455086406 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeXK_info:
	.quad	_caeXK
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.455889214 UTC

.section .text
.align 8
io_sad7b_entry:
_caeXY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caeY2
_caeY3:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caeY5
_caeY4:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	leaq sat_sad7j_info(%rip),%rsi
	movq %rsi,-8(%r12)
	movq %rcx,(%r12)
	leaq block_caeXT_info(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_caeY5:
	movq $16,904(%r13)
_caeY2:
	jmp *-8(%r13)
	.size io_sad7b_entry, .-io_sad7b_entry


==================== Asm code ====================
2018-03-16 16:05:16.456637383 UTC

.section .data.rel.ro
.align 8
.align 1
io_sad7b_info:
	.quad	io_sad7b_entry
	.quad	4
	.quad	2203318222856
	.quad	4294967299
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.457362425 UTC

.section .text
.align 8
_caeXT:
_caeXT:
	leaq block_caeXV_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _caeXV
_caeXW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caeXT, .-_caeXT


==================== Asm code ====================
2018-03-16 16:05:16.457929985 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeXT_info:
	.quad	_caeXT
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.458576041 UTC

.section .text
.align 8
_caeXV:
_caeXV:
	leaq block_caeY1_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _caeXV, .-_caeXV


==================== Asm code ====================
2018-03-16 16:05:16.459225443 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeXV_info:
	.quad	_caeXV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.459848952 UTC

.section .text
.align 8
_caeY1:
_caeY1:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caeY1, .-_caeY1


==================== Asm code ====================
2018-03-16 16:05:16.460428661 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeY1_info:
	.quad	_caeY1
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.461194942 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle_1_entry
.type GHC.IO.Handle.Internals.wantReadableHandle_1_entry, @object
GHC.IO.Handle.Internals.wantReadableHandle_1_entry:
_caeYf:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _caeYg
_caeYh:
	leaq block_caeWO_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _caeWO
_caeWP:
	movq (%rbx),%rax
	jmp *(%rax)
_caeYg:
	leaq GHC.IO.Handle.Internals.wantReadableHandle_1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.wantReadableHandle_1_entry, .-GHC.IO.Handle.Internals.wantReadableHandle_1_entry


==================== Asm code ====================
2018-03-16 16:05:16.461887362 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle_1_info
.type GHC.IO.Handle.Internals.wantReadableHandle_1_info, @object
GHC.IO.Handle.Internals.wantReadableHandle_1_info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle_1_entry
	.quad	0
	.quad	6601364733966
	.quad	17179869207
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.462673247 UTC

.section .text
.align 8
_caeWO:
_caeWO:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _caeYc
_caeYd:
	leaq block_caeXy_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_caeYc:
	leaq block_caeWT_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _caeWO, .-_caeWO


==================== Asm code ====================
2018-03-16 16:05:16.463345887 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeWO_info:
	.quad	_caeWO
	.quad	2
	.quad	2203318222878
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.464140332 UTC

.section .text
.align 8
_caeWT:
_caeWT:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _caeYl
_caeYk:
	leaq io_sad6O_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	testq %rbx,%rbx
	je _caeYp
_caeYo:
	movq %rax,%rbx
	addq $40,%rbp
	jmp io_sad6O_entry
_caeYp:
	movq %rax,%rbx
	addq $40,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_caeYl:
	movq $40,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _caeWT, .-_caeWT


==================== Asm code ====================
2018-03-16 16:05:16.464855995 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeWT_info:
	.quad	_caeWT
	.quad	4
	.quad	2203318222878
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.46597452 UTC

.section .text
.align 8
_caeXy:
_caeXy:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _caeYt
_caeYs:
	leaq io_sad7b_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	testq %rbx,%rbx
	je _caeYx
_caeYw:
	movq %rax,%rbx
	addq $40,%rbp
	jmp io_sad7b_entry
_caeYx:
	movq %rax,%rbx
	addq $40,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_caeYt:
	movq $40,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _caeXy, .-_caeXy


==================== Asm code ====================
2018-03-16 16:05:16.466696669 UTC

.section .data.rel.ro
.align 8
.align 1
block_caeXy_info:
	.quad	_caeXy
	.quad	4
	.quad	2203318222878
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.469039386 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle__closure
.type GHC.IO.Handle.Internals.wantReadableHandle__closure, @object
GHC.IO.Handle.Internals.wantReadableHandle__closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle__info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.469717465 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle__entry
.type GHC.IO.Handle.Internals.wantReadableHandle__entry, @object
GHC.IO.Handle.Internals.wantReadableHandle__entry:
_caf07:
	jmp GHC.IO.Handle.Internals.wantReadableHandle_1_entry
	.size GHC.IO.Handle.Internals.wantReadableHandle__entry, .-GHC.IO.Handle.Internals.wantReadableHandle__entry


==================== Asm code ====================
2018-03-16 16:05:16.470286387 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle__info
.type GHC.IO.Handle.Internals.wantReadableHandle__info, @object
GHC.IO.Handle.Internals.wantReadableHandle__info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle__entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	Saded_srt+528


==================== Asm code ====================
2018-03-16 16:05:16.473741341 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle2_closure
.type GHC.IO.Handle.Internals.wantSeekableHandle2_closure, @object
GHC.IO.Handle.Internals.wantSeekableHandle2_closure:
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.474682171 UTC

.section .text
.align 8
sat_sad7x_entry:
_caf0o:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caf0p
_caf0q:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _caf0s
_caf0r:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-64(%r12)
	movq %rbx,-56(%r12)
	movq GHC.IO.Exception.IOError_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	leaq -62(%r12),%rbx
	movq %rbx,-40(%r12)
	movq GHC.IO.Exception.IllegalOperation_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	leaq GHC.IO.Handle.Internals.wantSeekableHandle5_closure(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_caf0s:
	movq $72,904(%r13)
_caf0p:
	jmp *-16(%r13)
	.size sat_sad7x_entry, .-sat_sad7x_entry


==================== Asm code ====================
2018-03-16 16:05:16.475508182 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sad7x_info:
	.quad	sat_sad7x_entry
	.quad	2
	.quad	281479271677970
	.quad	Saded_srt+408


==================== Asm code ====================
2018-03-16 16:05:16.47674999 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantSeekableHandle2_entry
.type GHC.IO.Handle.Internals.wantSeekableHandle2_entry, @object
GHC.IO.Handle.Internals.wantSeekableHandle2_entry:
_caf0t:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _caf0x
_caf0w:
	leaq sat_sad7x_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
_caf0x:
	movq $32,904(%r13)
	leaq GHC.IO.Handle.Internals.wantSeekableHandle2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.wantSeekableHandle2_entry, .-GHC.IO.Handle.Internals.wantSeekableHandle2_entry


==================== Asm code ====================
2018-03-16 16:05:16.477565282 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle2_info
.type GHC.IO.Handle.Internals.wantSeekableHandle2_info, @object
GHC.IO.Handle.Internals.wantSeekableHandle2_info:
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle2_entry
	.quad	0
	.quad	844429225099278
	.quad	12884901903
	.quad	Saded_srt+408


==================== Asm code ====================
2018-03-16 16:05:16.487616169 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle1_closure
.type GHC.IO.Handle.Internals.wantSeekableHandle1_closure, @object
GHC.IO.Handle.Internals.wantSeekableHandle1_closure:
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.488457555 UTC

.section .text
.align 8
sat_sad8g_entry:
_caf1g:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _caf1h
_caf1i:
	leaq block_caf1d_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _caf1d
_caf1e:
	movq (%rbx),%rax
	jmp *(%rax)
_caf1h:
	jmp *-8(%r13)
	.size sat_sad8g_entry, .-sat_sad8g_entry


==================== Asm code ====================
2018-03-16 16:05:16.489098683 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sad8g_info:
	.quad	sat_sad8g_entry
	.quad	1
	.quad	30064771081
	.quad	8589934597
	.quad	Saded_srt+552


==================== Asm code ====================
2018-03-16 16:05:16.489882814 UTC

.section .text
.align 8
_caf1d:
_caf1d:
	leaq block_caf1l_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _caf1l
_caf1n:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caf1d, .-_caf1d


==================== Asm code ====================
2018-03-16 16:05:16.490509053 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf1d_info:
	.quad	_caf1d
	.quad	1
	.quad	30064771102
	.quad	Saded_srt+552


==================== Asm code ====================
2018-03-16 16:05:16.491381481 UTC

.section .text
.align 8
_caf1l:
_caf1l:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _uaf23
_uaf24:
	cmpq $5,%rbx
	jne _caf1w
_uaf25:
	addq $40,%rbp
	jmp _caf20
_uaf23:
	cmpq $2,%rbx
	jb _caf1S
_caf1W:
	leaq GHC.IO.Handle.Internals.wantReadableHandle7_closure(%rip),%rbx
	addq $40,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_caf1S:
	leaq GHC.IO.Handle.Internals.wantReadableHandle11_closure(%rip),%rbx
	addq $40,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_caf1w:
	movq 16(%rbp),%rax
	leaq block_caf1r_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_pv_info@gotpcrel(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	jmp *GHC.IO.Device.isSeekable_entry@gotpcrel(%rip)
	.size _caf1l, .-_caf1l


==================== Asm code ====================
2018-03-16 16:05:16.492123368 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf1l_info:
	.quad	_caf1l
	.quad	4
	.quad	30064771102
	.quad	Saded_srt+552


==================== Asm code ====================
2018-03-16 16:05:16.492774677 UTC

.section .text
.align 8
_caf1r:
_caf1r:
	leaq block_caf1t_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _caf1t
_caf1y:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caf1r, .-_caf1r


==================== Asm code ====================
2018-03-16 16:05:16.493394842 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf1r_info:
	.quad	_caf1r
	.quad	2
	.quad	4294967326
	.quad	Saded_srt+552


==================== Asm code ====================
2018-03-16 16:05:16.494076826 UTC

.section .text
.align 8
_caf1t:
_caf1t:
	andl $7,%ebx
	cmpq $1,%rbx
	je _uaf26
_caf1L:
	leaq block_caf1H_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq 16(%rbp),%rbx
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
_uaf26:
	addq $24,%rbp
	jmp _caf20
	.size _caf1t, .-_caf1t


==================== Asm code ====================
2018-03-16 16:05:16.494706997 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf1t_info:
	.quad	_caf1t
	.quad	2
	.quad	4294967326
	.quad	Saded_srt+552


==================== Asm code ====================
2018-03-16 16:05:16.495423132 UTC

.section .text
.align 8
_caf1H:
_caf1H:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caf1O
_caf1N:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caf1O:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caf1H, .-_caf1H


==================== Asm code ====================
2018-03-16 16:05:16.49605782 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf1H_info:
	.quad	_caf1H
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.496618181 UTC

.section .text
.align 8
_caf20:
_caf20:
	leaq GHC.IO.Handle.Internals.wantSeekableHandle3_closure(%rip),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _caf20, .-_caf20


==================== Asm code ====================
2018-03-16 16:05:16.49750183 UTC

.section .text
.align 8
io_sad7I_entry:
_caf2h:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caf2l
_caf2m:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caf2o
_caf2n:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	leaq sat_sad8g_info(%rip),%rsi
	movq %rsi,-8(%r12)
	movq %rcx,(%r12)
	leaq block_caf2c_info(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_caf2o:
	movq $16,904(%r13)
_caf2l:
	jmp *-8(%r13)
	.size io_sad7I_entry, .-io_sad7I_entry


==================== Asm code ====================
2018-03-16 16:05:16.498216688 UTC

.section .data.rel.ro
.align 8
.align 1
io_sad7I_info:
	.quad	io_sad7I_entry
	.quad	4
	.quad	246294899589128
	.quad	4294967299
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.4988829 UTC

.section .text
.align 8
_caf2c:
_caf2c:
	leaq block_caf2e_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _caf2e
_caf2f:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caf2c, .-_caf2c


==================== Asm code ====================
2018-03-16 16:05:16.499442242 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf2c_info:
	.quad	_caf2c
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.500062154 UTC

.section .text
.align 8
_caf2e:
_caf2e:
	leaq block_caf2k_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _caf2e, .-_caf2e


==================== Asm code ====================
2018-03-16 16:05:16.500634213 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf2e_info:
	.quad	_caf2e
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.50130596 UTC

.section .text
.align 8
_caf2k:
_caf2k:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caf2k, .-_caf2k


==================== Asm code ====================
2018-03-16 16:05:16.501865344 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf2k_info:
	.quad	_caf2k
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.502605274 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantSeekableHandle1_entry
.type GHC.IO.Handle.Internals.wantSeekableHandle1_entry, @object
GHC.IO.Handle.Internals.wantSeekableHandle1_entry:
_caf2y:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _caf2z
_caf2A:
	leaq block_caf0W_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _caf0W
_caf0X:
	movq (%rbx),%rax
	jmp *(%rax)
_caf2z:
	leaq GHC.IO.Handle.Internals.wantSeekableHandle1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.wantSeekableHandle1_entry, .-GHC.IO.Handle.Internals.wantSeekableHandle1_entry


==================== Asm code ====================
2018-03-16 16:05:16.503305214 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle1_info
.type GHC.IO.Handle.Internals.wantSeekableHandle1_info, @object
GHC.IO.Handle.Internals.wantSeekableHandle1_info:
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle1_entry
	.quad	0
	.quad	545362062344206
	.quad	17179869207
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.504076454 UTC

.section .text
.align 8
_caf0W:
_caf0W:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _caf2v
_caf2w:
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Internals.wantSeekableHandle2_entry
_caf2v:
	leaq block_caf11_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _caf0W, .-_caf0W


==================== Asm code ====================
2018-03-16 16:05:16.504745741 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf0W_info:
	.quad	_caf0W
	.quad	2
	.quad	263887085633566
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.505905878 UTC

.section .text
.align 8
_caf11:
_caf11:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _caf2E
_caf2D:
	leaq io_sad7I_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	testq %rbx,%rbx
	je _caf2I
_caf2H:
	movq %rax,%rbx
	addq $40,%rbp
	jmp io_sad7I_entry
_caf2I:
	movq %rax,%rbx
	addq $40,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_caf2E:
	movq $40,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _caf11, .-_caf11


==================== Asm code ====================
2018-03-16 16:05:16.506631883 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf11_info:
	.quad	_caf11
	.quad	4
	.quad	246294899589150
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.508984043 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle_closure
.type GHC.IO.Handle.Internals.wantSeekableHandle_closure, @object
GHC.IO.Handle.Internals.wantSeekableHandle_closure:
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.509636823 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantSeekableHandle_entry
.type GHC.IO.Handle.Internals.wantSeekableHandle_entry, @object
GHC.IO.Handle.Internals.wantSeekableHandle_entry:
_caf46:
	jmp GHC.IO.Handle.Internals.wantSeekableHandle1_entry
	.size GHC.IO.Handle.Internals.wantSeekableHandle_entry, .-GHC.IO.Handle.Internals.wantSeekableHandle_entry


==================== Asm code ====================
2018-03-16 16:05:16.510218039 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantSeekableHandle_info
.type GHC.IO.Handle.Internals.wantSeekableHandle_info, @object
GHC.IO.Handle.Internals.wantSeekableHandle_info:
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	Saded_srt+576


==================== Asm code ====================
2018-03-16 16:05:16.532057605 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wwantWritableHandle'_closure
.type GHC.IO.Handle.Internals.$wwantWritableHandle'_closure, @object
GHC.IO.Handle.Internals.$wwantWritableHandle'_closure:
	.quad	GHC.IO.Handle.Internals.$wwantWritableHandle'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.532942101 UTC

.section .text
.align 8
sat_sad9y_entry:
_caf53:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caf57
_caf58:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_caf50_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _caf50
_caf51:
	movq (%rbx),%rax
	jmp *(%rax)
_caf57:
	jmp *-16(%r13)
	.size sat_sad9y_entry, .-sat_sad9y_entry


==================== Asm code ====================
2018-03-16 16:05:16.533641953 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sad9y_info:
	.quad	sat_sad9y_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:16.534484421 UTC

.section .text
.align 8
_caf50:
_caf50:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _caf5b
_caf5a:
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rsi
	movq 47(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rdi
	movq %rdi,-48(%r12)
	movq %rax,-40(%r12)
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caf5b:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caf50, .-_caf50


==================== Asm code ====================
2018-03-16 16:05:16.536070306 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf50_info:
	.quad	_caf50
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.536924152 UTC

.section .text
.align 8
sat_sada3_entry:
_caf5x:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _caf5B
_caf5C:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_caf5u_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _caf5u
_caf5v:
	movq (%rbx),%rax
	jmp *(%rax)
_caf5B:
	jmp *-16(%r13)
	.size sat_sada3_entry, .-sat_sada3_entry


==================== Asm code ====================
2018-03-16 16:05:16.537826549 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sada3_info:
	.quad	sat_sada3_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:05:16.538603934 UTC

.section .text
.align 8
_caf5u:
_caf5u:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _caf5F
_caf5E:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rsi
	movq %rsi,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caf5F:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caf5u, .-_caf5u


==================== Asm code ====================
2018-03-16 16:05:16.539278736 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf5u_info:
	.quad	_caf5u
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.540057276 UTC

.section .text
.align 8
sat_sadam_entry:
_caf63:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _caf6a
_caf6b:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_caf60_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _caf60
_caf61:
	movq (%rbx),%rax
	jmp *(%rax)
_caf6a:
	jmp *-16(%r13)
	.size sat_sadam_entry, .-sat_sadam_entry


==================== Asm code ====================
2018-03-16 16:05:16.5407459 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sadam_info:
	.quad	sat_sadam_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:05:16.541552825 UTC

.section .text
.align 8
_caf60:
_caf60:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _caf6e
_caf6d:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 39(%rbx),%rbx
	addq 8(%rbp),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caf6e:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caf60, .-_caf60


==================== Asm code ====================
2018-03-16 16:05:16.542269487 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf60_info:
	.quad	_caf60
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.542828379 UTC

.section .data.rel.ro
.align 8
.align 1
uaf8F_srtd:
	.quad	Saded_srt+104
	.quad	59
	.quad	432345564228616193


==================== Asm code ====================
2018-03-16 16:05:16.543637877 UTC

.section .text
.align 8
sat_sadaL_entry:
_caf6g:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _caf6h
_caf6i:
	leaq block_caf4m_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _caf4m
_caf4n:
	movq (%rbx),%rax
	jmp *(%rax)
_caf6h:
	jmp *-8(%r13)
	.size sat_sadaL_entry, .-sat_sadaL_entry


==================== Asm code ====================
2018-03-16 16:05:16.544298952 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sadaL_info:
	.quad	sat_sadaL_entry
	.quad	1
	.quad	-4294967287
	.quad	8589934597
	.quad	uaf8F_srtd


==================== Asm code ====================
2018-03-16 16:05:16.544867882 UTC

.section .data.rel.ro
.align 8
.align 1
uaf8G_srtd:
	.quad	Saded_srt+104
	.quad	59
	.quad	432345564228616193


==================== Asm code ====================
2018-03-16 16:05:16.545621171 UTC

.section .text
.align 8
_caf4m:
_caf4m:
	leaq block_caf4r_info(%rip),%rax
	movq %rax,-56(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 63(%rbx),%rdi
	movq 71(%rbx),%r8
	movq 95(%rbx),%r9
	movq 39(%rbx),%rbx
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rax,(%rbp)
	addq $-56,%rbp
	testb $7,%bl
	jne _caf4r
_caf4s:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caf4m, .-_caf4m


==================== Asm code ====================
2018-03-16 16:05:16.546321627 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf4m_info:
	.quad	_caf4m
	.quad	1
	.quad	-4294967266
	.quad	uaf8G_srtd


==================== Asm code ====================
2018-03-16 16:05:16.546909027 UTC

.section .data.rel.ro
.align 8
.align 1
uaf8H_srtd:
	.quad	Saded_srt+104
	.quad	59
	.quad	432345564228616193


==================== Asm code ====================
2018-03-16 16:05:16.547799304 UTC

.section .text
.align 8
_caf4r:
_caf4r:
	andl $7,%ebx
	cmpq $4,%rbx
	jb _uaf8c
_uaf8e:
	cmpq $6,%rbx
	jb _caf6q
_caf6E:
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_caf4A_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _caf4A
_caf4B:
	movq (%rbx),%rax
	jmp *(%rax)
_uaf8c:
	cmpq $3,%rbx
	jb _uaf8d
_caf6C:
	leaq GHC.IO.Handle.Internals.wantWritableHandle2_closure(%rip),%rbx
	addq $72,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_uaf8d:
	cmpq $2,%rbx
	jb _caf6w
_caf6z:
	leaq GHC.IO.Handle.Internals.wantReadableHandle7_closure(%rip),%rbx
	addq $72,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_caf6w:
	leaq GHC.IO.Handle.Internals.wantReadableHandle11_closure(%rip),%rbx
	addq $72,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_caf6q:
	leaq block_caf6l_info(%rip),%rax
	movq %rax,48(%rbp)
	movq 56(%rbp),%r14
	movq 64(%rbp),%rbx
	addq $48,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
	.size _caf4r, .-_caf4r


==================== Asm code ====================
2018-03-16 16:05:16.548590776 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf4r_info:
	.quad	_caf4r
	.quad	8
	.quad	-4294967266
	.quad	uaf8H_srtd


==================== Asm code ====================
2018-03-16 16:05:16.549335149 UTC

.section .text
.align 8
_caf6l:
_caf6l:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caf6t
_caf6s:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caf6t:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caf6l, .-_caf6l


==================== Asm code ====================
2018-03-16 16:05:16.55000053 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf6l_info:
	.quad	_caf6l
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.550655745 UTC

.section .text
.align 8
_caf4A:
_caf4A:
	leaq block_caf4F_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _caf4F
_caf4G:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caf4A, .-_caf4A


==================== Asm code ====================
2018-03-16 16:05:16.551266478 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf4A_info:
	.quad	_caf4A
	.quad	8
	.quad	4294967326
	.quad	Saded_srt+584


==================== Asm code ====================
2018-03-16 16:05:16.55204759 UTC

.section .text
.align 8
_caf4F:
_caf4F:
	andl $7,%ebx
	cmpq $1,%rbx
	je _caf6I
_caf7U:
	leaq block_caf7Q_info(%rip),%rax
	movq %rax,48(%rbp)
	movq 56(%rbp),%r14
	movq 64(%rbp),%rbx
	addq $48,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
_caf6I:
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_caf4K_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _caf4K
_caf4L:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caf4F, .-_caf4F


==================== Asm code ====================
2018-03-16 16:05:16.552722387 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf4F_info:
	.quad	_caf4F
	.quad	8
	.quad	4294967326
	.quad	Saded_srt+584


==================== Asm code ====================
2018-03-16 16:05:16.553596467 UTC

.section .text
.align 8
_caf4K:
_caf4K:
	leaq block_caf5d_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _caf5d
_caf5e:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caf4K, .-_caf4K


==================== Asm code ====================
2018-03-16 16:05:16.554233953 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf4K_info:
	.quad	_caf4K
	.quad	8
	.quad	4294967326
	.quad	Saded_srt+584


==================== Asm code ====================
2018-03-16 16:05:16.555041503 UTC

.section .text
.align 8
_caf5d:
_caf5d:
	andl $7,%ebx
	cmpq $1,%rbx
	je _caf7J
_uaf8f:
	addq $24,%rbp
	jmp _sad9j
_uaf8g:
	addq $24,%rbp
	jmp _sad9j
_caf7J:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _uaf8g
_caf75:
	movq 48(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_caf5l_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _caf5l
_caf5m:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caf5d, .-_caf5d


==================== Asm code ====================
2018-03-16 16:05:16.555744968 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf5d_info:
	.quad	_caf5d
	.quad	202
	.quad	4294967326
	.quad	Saded_srt+584


==================== Asm code ====================
2018-03-16 16:05:16.556595872 UTC

.section .text
.align 8
_caf5l:
_caf5l:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caf78
_caf77:
	movq 40(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq 8(%rax),%rdx
	leaq sat_sada3_info(%rip),%rsi
	movq %rsi,-16(%r12)
	movq %rdx,(%r12)
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_caf5K_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rcx
	movq 64(%rsp),%rax
	movq %rax,%rbx
	movq %rcx,(%rbp)
	movq %r14,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _caf5K
_caf5L:
	movq (%rbx),%rax
	jmp *(%rax)
_caf78:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caf5l, .-_caf5l


==================== Asm code ====================
2018-03-16 16:05:16.557346596 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf5l_info:
	.quad	_caf5l
	.quad	520
	.quad	4294967326
	.quad	Saded_srt+584


==================== Asm code ====================
2018-03-16 16:05:16.558217045 UTC

.section .text
.align 8
_caf5K:
_caf5K:
	movq 39(%rbx),%rax
	testq %rax,%rax
	jne _caf7b
_caf7G:
	movq 32(%rbp),%rax
	movq 8(%rbp),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $16,%rbp
	jmp _sad9j
_caf7b:
	leaq block_caf5R_info(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq 56(%rbp),%rbx
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rsi,56(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _caf5R
_caf5S:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caf5K, .-_caf5K


==================== Asm code ====================
2018-03-16 16:05:16.558977208 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf5K_info:
	.quad	_caf5K
	.quad	9
	.quad	4294967326
	.quad	Saded_srt+584


==================== Asm code ====================
2018-03-16 16:05:16.559858329 UTC

.section .text
.align 8
_caf5R:
_caf5R:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _caf7d
_caf7v:
	leaq block_caf7j_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _caf7j
_caf7k:
	movq (%rbx),%rax
	jmp *(%rax)
_caf7g:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_caf7d:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _caf7g
_caf7f:
	leaq sat_sadam_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 56(%rbp),%rax
	leaq -24(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $40,%rbp
	jmp _sad9j
	.size _caf5R, .-_caf5R


==================== Asm code ====================
2018-03-16 16:05:16.560650992 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf5R_info:
	.quad	_caf5R
	.quad	32908
	.quad	4294967326
	.quad	Saded_srt+584


==================== Asm code ====================
2018-03-16 16:05:16.561354039 UTC

.section .text
.align 8
_caf7j:
_caf7j:
	leaq block_caf7o_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 64(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,64(%rbp)
	addq $-8,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
	.size _caf7j, .-_caf7j


==================== Asm code ====================
2018-03-16 16:05:16.562017497 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf7j_info:
	.quad	_caf7j
	.quad	32908
	.quad	4294967326
	.quad	Saded_srt+584


==================== Asm code ====================
2018-03-16 16:05:16.562781105 UTC

.section .text
.align 8
_caf7o:
_caf7o:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _caf7z
_caf7y:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 88(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq 40(%rbp),%rax
	leaq block_caf7r_info(%rip),%rbx
	movq %rbx,40(%rbp)
	leaq -47(%r12),%r8
	movq %rax,%rdi
	movq 8(%rbp),%rsi
	movq 72(%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_caf7z:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caf7o, .-_caf7o


==================== Asm code ====================
2018-03-16 16:05:16.563499763 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf7o_info:
	.quad	_caf7o
	.quad	65805
	.quad	4294967326
	.quad	Saded_srt+584


==================== Asm code ====================
2018-03-16 16:05:16.56421159 UTC

.section .text
.align 8
_caf7r:
_caf7r:
	leaq block_caf7t_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _caf7t
_caf7B:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caf7r, .-_caf7r


==================== Asm code ====================
2018-03-16 16:05:16.564847253 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf7r_info:
	.quad	_caf7r
	.quad	2568
	.quad	4294967326
	.quad	Saded_srt+584


==================== Asm code ====================
2018-03-16 16:05:16.565569351 UTC

.section .text
.align 8
_caf7t:
_caf7t:
	movq 24(%rbp),%rax
	movq 7(%rbx),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $8,%rbp
	jmp _sad9j
	.size _caf7t, .-_caf7t


==================== Asm code ====================
2018-03-16 16:05:16.566175926 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf7t_info:
	.quad	_caf7t
	.quad	2568
	.quad	4294967326
	.quad	Saded_srt+584


==================== Asm code ====================
2018-03-16 16:05:16.566807493 UTC

.section .text
.align 8
_sad9j:
_sad9j:
	leaq block_caf4U_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 48(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.IO.Handle.Internals.flushBuffer2_entry
	.size _sad9j, .-_sad9j


==================== Asm code ====================
2018-03-16 16:05:16.568309857 UTC

.section .text
.align 8
_caf4U:
_caf4U:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caf6Y
_caf6X:
	movq 40(%rbp),%rax
	movq 8(%rax),%rbx
	leaq sat_sad9y_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_caf6N_info(%rip),%rax
	movq %rax,16(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	movq 64(%rsp),%rax
	movq 8(%rax),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp *GHC.IO.BufferedIO.emptyWriteBuffer_entry@gotpcrel(%rip)
_caf6Y:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caf4U, .-_caf4U


==================== Asm code ====================
2018-03-16 16:05:16.569163643 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf4U_info:
	.quad	_caf4U
	.quad	2568
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.569979152 UTC

.section .text
.align 8
_caf6N:
_caf6N:
	movq 48(%rbp),%rax
	movq 40(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq %rbx,8(%rdx)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rdx,%rsi
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_caf6S_info(%rip),%rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
	.size _caf6N, .-_caf6N


==================== Asm code ====================
2018-03-16 16:05:16.570635814 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf6N_info:
	.quad	_caf6N
	.quad	902
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.571373972 UTC

.section .text
.align 8
_caf6S:
_caf6S:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caf72
_caf71:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caf72:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caf6S, .-_caf6S


==================== Asm code ====================
2018-03-16 16:05:16.572009561 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf6S_info:
	.quad	_caf6S
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.57273003 UTC

.section .text
.align 8
_caf7Q:
_caf7Q:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _caf7X
_caf7W:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_caf7X:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _caf7Q, .-_caf7Q


==================== Asm code ====================
2018-03-16 16:05:16.573845162 UTC

.section .data.rel.ro
.align 8
.align 1
block_caf7Q_info:
	.quad	_caf7Q
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.574434752 UTC

.section .data.rel.ro
.align 8
.align 1
uaf8I_srtd:
	.quad	Saded_srt+104
	.quad	62
	.quad	3891391553024819201


==================== Asm code ====================
2018-03-16 16:05:16.575167805 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.$wwantWritableHandle'_entry
.type GHC.IO.Handle.Internals.$wwantWritableHandle'_entry, @object
GHC.IO.Handle.Internals.$wwantWritableHandle'_entry:
_caf8A:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _caf8E
_caf8D:
	leaq sat_sadaL_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r8,(%r12)
	leaq -6(%r12),%r8
	jmp GHC.IO.Handle.Internals.$wwithHandle'_entry
_caf8E:
	movq $16,904(%r13)
	leaq GHC.IO.Handle.Internals.$wwantWritableHandle'_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.$wwantWritableHandle'_entry, .-GHC.IO.Handle.Internals.$wwantWritableHandle'_entry


==================== Asm code ====================
2018-03-16 16:05:16.575867405 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.$wwantWritableHandle'_info
.type GHC.IO.Handle.Internals.$wwantWritableHandle'_info, @object
GHC.IO.Handle.Internals.$wwantWritableHandle'_info:
	.quad	GHC.IO.Handle.Internals.$wwantWritableHandle'_entry
	.quad	0
	.quad	-4294967282
	.quad	21474836504
	.quad	uaf8I_srtd


==================== Asm code ====================
2018-03-16 16:05:16.579494632 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantWritableHandle1_closure
.type GHC.IO.Handle.Internals.wantWritableHandle1_closure, @object
GHC.IO.Handle.Internals.wantWritableHandle1_closure:
	.quad	GHC.IO.Handle.Internals.wantWritableHandle1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.580296908 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantWritableHandle1_entry
.type GHC.IO.Handle.Internals.wantWritableHandle1_entry, @object
GHC.IO.Handle.Internals.wantWritableHandle1_entry:
_cafbM:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cafbN
_cafbO:
	leaq block_cafbF_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cafbF
_cafbG:
	movq (%rbx),%rax
	jmp *(%rax)
_cafbN:
	leaq GHC.IO.Handle.Internals.wantWritableHandle1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.wantWritableHandle1_entry, .-GHC.IO.Handle.Internals.wantWritableHandle1_entry


==================== Asm code ====================
2018-03-16 16:05:16.581035025 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantWritableHandle1_info
.type GHC.IO.Handle.Internals.wantWritableHandle1_info, @object
GHC.IO.Handle.Internals.wantWritableHandle1_info:
	.quad	GHC.IO.Handle.Internals.wantWritableHandle1_entry
	.quad	0
	.quad	12884901902
	.quad	17179869207
	.quad	Saded_srt+592


==================== Asm code ====================
2018-03-16 16:05:16.581815696 UTC

.section .text
.align 8
_cafbF:
_cafbF:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _cafbJ
_cafbK:
	movq %rcx,%r8
	movq 22(%rbx),%rdi
	movq %rbx,%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Internals.$wwantWritableHandle'_entry
_cafbJ:
	movq %rcx,%r8
	movq 15(%rbx),%rdi
	movq %rbx,%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Internals.$wwantWritableHandle'_entry
	.size _cafbF, .-_cafbF


==================== Asm code ====================
2018-03-16 16:05:16.58245896 UTC

.section .data.rel.ro
.align 8
.align 1
block_cafbF_info:
	.quad	_cafbF
	.quad	2
	.quad	4294967326
	.quad	Saded_srt+592


==================== Asm code ====================
2018-03-16 16:05:16.584654231 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantWritableHandle_closure
.type GHC.IO.Handle.Internals.wantWritableHandle_closure, @object
GHC.IO.Handle.Internals.wantWritableHandle_closure:
	.quad	GHC.IO.Handle.Internals.wantWritableHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.585882215 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantWritableHandle_entry
.type GHC.IO.Handle.Internals.wantWritableHandle_entry, @object
GHC.IO.Handle.Internals.wantWritableHandle_entry:
_cafcc:
	jmp GHC.IO.Handle.Internals.wantWritableHandle1_entry
	.size GHC.IO.Handle.Internals.wantWritableHandle_entry, .-GHC.IO.Handle.Internals.wantWritableHandle_entry


==================== Asm code ====================
2018-03-16 16:05:16.586457704 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantWritableHandle_info
.type GHC.IO.Handle.Internals.wantWritableHandle_info, @object
GHC.IO.Handle.Internals.wantWritableHandle_info:
	.quad	GHC.IO.Handle.Internals.wantWritableHandle_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	Saded_srt+600


==================== Asm code ====================
2018-03-16 16:05:16.594516454 UTC

.section .data
.align 8
.align 1
withHandle2_ra7PH_closure:
	.quad	withHandle2_ra7PH_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.595314811 UTC

.section .text
.align 8
io_sadb6_entry:
_cafcE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cafcI
_cafcJ:
	leaq block_cafcz_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 7(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cafcI:
	jmp *-8(%r13)
	.size io_sadb6_entry, .-io_sadb6_entry


==================== Asm code ====================
2018-03-16 16:05:16.595999341 UTC

.section .data.rel.ro
.align 8
.align 1
io_sadb6_info:
	.quad	io_sadb6_entry
	.quad	4
	.quad	4294967304
	.quad	4294967299
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.596699871 UTC

.section .text
.align 8
_cafcz:
_cafcz:
	leaq block_cafcB_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cafcB
_cafcC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cafcz, .-_cafcz


==================== Asm code ====================
2018-03-16 16:05:16.597335038 UTC

.section .data.rel.ro
.align 8
.align 1
block_cafcz_info:
	.quad	_cafcz
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.598014284 UTC

.section .text
.align 8
_cafcB:
_cafcB:
	leaq block_cafcH_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cafcB, .-_cafcB


==================== Asm code ====================
2018-03-16 16:05:16.59864186 UTC

.section .data.rel.ro
.align 8
.align 1
block_cafcB_info:
	.quad	_cafcB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.599228277 UTC

.section .text
.align 8
_cafcH:
_cafcH:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cafcH, .-_cafcH


==================== Asm code ====================
2018-03-16 16:05:16.599807729 UTC

.section .data.rel.ro
.align 8
.align 1
block_cafcH_info:
	.quad	_cafcH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.600559662 UTC

.section .text
.align 8
io_sadbm_entry:
_cafd3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cafd7
_cafd8:
	leaq block_cafcY_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 7(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cafd7:
	jmp *-8(%r13)
	.size io_sadbm_entry, .-io_sadbm_entry


==================== Asm code ====================
2018-03-16 16:05:16.601227183 UTC

.section .data.rel.ro
.align 8
.align 1
io_sadbm_info:
	.quad	io_sadbm_entry
	.quad	4
	.quad	4294967304
	.quad	4294967299
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.60219688 UTC

.section .text
.align 8
_cafcY:
_cafcY:
	leaq block_cafd0_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cafd0
_cafd1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cafcY, .-_cafcY


==================== Asm code ====================
2018-03-16 16:05:16.602830244 UTC

.section .data.rel.ro
.align 8
.align 1
block_cafcY_info:
	.quad	_cafcY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.603516841 UTC

.section .text
.align 8
_cafd0:
_cafd0:
	leaq block_cafd6_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cafd0, .-_cafd0


==================== Asm code ====================
2018-03-16 16:05:16.604155044 UTC

.section .data.rel.ro
.align 8
.align 1
block_cafd0_info:
	.quad	_cafd0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.60478471 UTC

.section .text
.align 8
_cafd6:
_cafd6:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cafd6, .-_cafd6


==================== Asm code ====================
2018-03-16 16:05:16.605401336 UTC

.section .data.rel.ro
.align 8
.align 1
block_cafd6_info:
	.quad	_cafd6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.606790521 UTC

.section .text
.align 8
withHandle2_ra7PH_entry:
_cafdi:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cafdj
_cafdk:
	leaq block_cafcn_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cafcn
_cafco:
	movq (%rbx),%rax
	jmp *(%rax)
_cafdj:
	leaq withHandle2_ra7PH_closure(%rip),%rbx
	jmp *-8(%r13)
	.size withHandle2_ra7PH_entry, .-withHandle2_ra7PH_entry


==================== Asm code ====================
2018-03-16 16:05:16.607572298 UTC

.section .data.rel.ro
.align 8
.align 1
withHandle2_ra7PH_info:
	.quad	withHandle2_ra7PH_entry
	.quad	0
	.quad	4503603922337806
	.quad	17179869207
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.608370081 UTC

.section .text
.align 8
_cafcn:
_cafcn:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cafdf
_cafdg:
	leaq block_cafcR_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_cafdf:
	leaq block_cafcs_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _cafcn, .-_cafcn


==================== Asm code ====================
2018-03-16 16:05:16.609098464 UTC

.section .data.rel.ro
.align 8
.align 1
block_cafcn_info:
	.quad	_cafcn
	.quad	2
	.quad	4294967326
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.609943278 UTC

.section .text
.align 8
_cafcs:
_cafcs:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cafdo
_cafdn:
	leaq io_sadb6_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	testq %rbx,%rbx
	je _cafds
_cafdr:
	movq %rax,%rbx
	addq $40,%rbp
	jmp io_sadb6_entry
_cafds:
	movq %rax,%rbx
	addq $40,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cafdo:
	movq $40,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cafcs, .-_cafcs


==================== Asm code ====================
2018-03-16 16:05:16.610666127 UTC

.section .data.rel.ro
.align 8
.align 1
block_cafcs_info:
	.quad	_cafcs
	.quad	4
	.quad	4294967326
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.611482903 UTC

.section .text
.align 8
_cafcR:
_cafcR:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cafdw
_cafdv:
	leaq io_sadbm_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	testq %rbx,%rbx
	je _cafdA
_cafdz:
	movq %rax,%rbx
	addq $40,%rbp
	jmp io_sadbm_entry
_cafdA:
	movq %rax,%rbx
	addq $40,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cafdw:
	movq $40,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cafcR, .-_cafcR


==================== Asm code ====================
2018-03-16 16:05:16.612243338 UTC

.section .data.rel.ro
.align 8
.align 1
block_cafcR_info:
	.quad	_cafcR
	.quad	4
	.quad	4294967326
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.614916155 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle_closure
.type GHC.IO.Handle.Internals.withHandle_closure, @object
GHC.IO.Handle.Internals.withHandle_closure:
	.quad	GHC.IO.Handle.Internals.withHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.615542349 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.withHandle_entry
.type GHC.IO.Handle.Internals.withHandle_entry, @object
GHC.IO.Handle.Internals.withHandle_entry:
_cafeM:
	jmp withHandle2_ra7PH_entry
	.size GHC.IO.Handle.Internals.withHandle_entry, .-GHC.IO.Handle.Internals.withHandle_entry


==================== Asm code ====================
2018-03-16 16:05:16.616167088 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.withHandle_info
.type GHC.IO.Handle.Internals.withHandle_info, @object
GHC.IO.Handle.Internals.withHandle_info:
	.quad	GHC.IO.Handle.Internals.withHandle_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	Saded_srt+608


==================== Asm code ====================
2018-03-16 16:05:16.625642068 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle1_closure
.type GHC.IO.Handle.Internals.wantReadableHandle1_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle1_closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.626351244 UTC

.section .text
.align 8
sat_sadbI_entry:
_caffe:
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.IO.Handle.Internals.wantReadableHandle2_entry
	.size sat_sadbI_entry, .-sat_sadbI_entry


==================== Asm code ====================
2018-03-16 16:05:16.62694767 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sadbI_info:
	.quad	sat_sadbI_entry
	.quad	1
	.quad	4294967305
	.quad	8589934597
	.quad	Saded_srt+520


==================== Asm code ====================
2018-03-16 16:05:16.627829123 UTC

.section .text
.align 8
io_sadbG_entry:
_caffm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caffq
_caffr:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cafft
_caffs:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	leaq sat_sadbI_info(%rip),%rsi
	movq %rsi,-8(%r12)
	movq %rcx,(%r12)
	leaq block_caffh_info(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cafft:
	movq $16,904(%r13)
_caffq:
	jmp *-8(%r13)
	.size io_sadbG_entry, .-io_sadbG_entry


==================== Asm code ====================
2018-03-16 16:05:16.628578391 UTC

.section .data.rel.ro
.align 8
.align 1
io_sadbG_info:
	.quad	io_sadbG_entry
	.quad	4
	.quad	2203318222856
	.quad	4294967299
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.6295273 UTC

.section .text
.align 8
_caffh:
_caffh:
	leaq block_caffj_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _caffj
_caffk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caffh, .-_caffh


==================== Asm code ====================
2018-03-16 16:05:16.630105514 UTC

.section .data.rel.ro
.align 8
.align 1
block_caffh_info:
	.quad	_caffh
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.630791384 UTC

.section .text
.align 8
_caffj:
_caffj:
	leaq block_caffp_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _caffj, .-_caffj


==================== Asm code ====================
2018-03-16 16:05:16.63141654 UTC

.section .data.rel.ro
.align 8
.align 1
block_caffj_info:
	.quad	_caffj
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.632083664 UTC

.section .text
.align 8
_caffp:
_caffp:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caffp, .-_caffp


==================== Asm code ====================
2018-03-16 16:05:16.632644842 UTC

.section .data.rel.ro
.align 8
.align 1
block_caffp_info:
	.quad	_caffp
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.6332994 UTC

.section .text
.align 8
sat_sadbZ_entry:
_caffN:
	movq %r14,%rsi
	movq 6(%rbx),%r14
	jmp GHC.IO.Handle.Internals.wantReadableHandle2_entry
	.size sat_sadbZ_entry, .-sat_sadbZ_entry


==================== Asm code ====================
2018-03-16 16:05:16.633850105 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sadbZ_info:
	.quad	sat_sadbZ_entry
	.quad	1
	.quad	4294967305
	.quad	8589934597
	.quad	Saded_srt+520


==================== Asm code ====================
2018-03-16 16:05:16.634677016 UTC

.section .text
.align 8
io_sadbX_entry:
_caffV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _caffZ
_cafg0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cafg2
_cafg1:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	leaq sat_sadbZ_info(%rip),%rsi
	movq %rsi,-8(%r12)
	movq %rcx,(%r12)
	leaq block_caffQ_info(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rbx,%r8
	leaq -6(%r12),%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	movq %rbx,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.$wdo_operation_entry
_cafg2:
	movq $16,904(%r13)
_caffZ:
	jmp *-8(%r13)
	.size io_sadbX_entry, .-io_sadbX_entry


==================== Asm code ====================
2018-03-16 16:05:16.635430887 UTC

.section .data.rel.ro
.align 8
.align 1
io_sadbX_info:
	.quad	io_sadbX_entry
	.quad	4
	.quad	2203318222856
	.quad	4294967299
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.636159142 UTC

.section .text
.align 8
_caffQ:
_caffQ:
	leaq block_caffS_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _caffS
_caffT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _caffQ, .-_caffQ


==================== Asm code ====================
2018-03-16 16:05:16.636787118 UTC

.section .data.rel.ro
.align 8
.align 1
block_caffQ_info:
	.quad	_caffQ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.637484473 UTC

.section .text
.align 8
_caffS:
_caffS:
	leaq block_caffY_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _caffS, .-_caffS


==================== Asm code ====================
2018-03-16 16:05:16.638125477 UTC

.section .data.rel.ro
.align 8
.align 1
block_caffS_info:
	.quad	_caffS
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.638785765 UTC

.section .text
.align 8
_caffY:
_caffY:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _caffY, .-_caffY


==================== Asm code ====================
2018-03-16 16:05:16.639363711 UTC

.section .data.rel.ro
.align 8
.align 1
block_caffY_info:
	.quad	_caffY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:05:16.640169787 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle1_entry
.type GHC.IO.Handle.Internals.wantReadableHandle1_entry, @object
GHC.IO.Handle.Internals.wantReadableHandle1_entry:
_cafgc:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cafgd
_cafge:
	leaq block_cafeX_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cafeX
_cafeY:
	movq (%rbx),%rax
	jmp *(%rax)
_cafgd:
	leaq GHC.IO.Handle.Internals.wantReadableHandle1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Internals.wantReadableHandle1_entry, .-GHC.IO.Handle.Internals.wantReadableHandle1_entry


==================== Asm code ====================
2018-03-16 16:05:16.640936943 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle1_info
.type GHC.IO.Handle.Internals.wantReadableHandle1_info, @object
GHC.IO.Handle.Internals.wantReadableHandle1_info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle1_entry
	.quad	0
	.quad	9009402572963854
	.quad	17179869207
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.641782232 UTC

.section .text
.align 8
_cafeX:
_cafeX:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cafg9
_cafga:
	leaq block_caffB_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_cafg9:
	leaq block_caff2_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _cafeX, .-_cafeX


==================== Asm code ====================
2018-03-16 16:05:16.642479379 UTC

.section .data.rel.ro
.align 8
.align 1
block_cafeX_info:
	.quad	_cafeX
	.quad	2
	.quad	2203318222878
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.643295716 UTC

.section .text
.align 8
_caff2:
_caff2:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cafgi
_cafgh:
	leaq io_sadbG_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	testq %rbx,%rbx
	je _cafgm
_cafgl:
	movq %rax,%rbx
	addq $40,%rbp
	jmp io_sadbG_entry
_cafgm:
	movq %rax,%rbx
	addq $40,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cafgi:
	movq $40,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _caff2, .-_caff2


==================== Asm code ====================
2018-03-16 16:05:16.644042151 UTC

.section .data.rel.ro
.align 8
.align 1
block_caff2_info:
	.quad	_caff2
	.quad	4
	.quad	2203318222878
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.644846124 UTC

.section .text
.align 8
_caffB:
_caffB:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cafgq
_cafgp:
	leaq io_sadbX_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rax
	testq %rbx,%rbx
	je _cafgu
_cafgt:
	movq %rax,%rbx
	addq $40,%rbp
	jmp io_sadbX_entry
_cafgu:
	movq %rax,%rbx
	addq $40,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
_cafgq:
	movq $40,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _caffB, .-_caffB


==================== Asm code ====================
2018-03-16 16:05:16.646920795 UTC

.section .data.rel.ro
.align 8
.align 1
block_caffB_info:
	.quad	_caffB
	.quad	4
	.quad	2203318222878
	.quad	Saded_srt+448


==================== Asm code ====================
2018-03-16 16:05:16.649413717 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle_closure
.type GHC.IO.Handle.Internals.wantReadableHandle_closure, @object
GHC.IO.Handle.Internals.wantReadableHandle_closure:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:05:16.650081437 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Internals.wantReadableHandle_entry
.type GHC.IO.Handle.Internals.wantReadableHandle_entry, @object
GHC.IO.Handle.Internals.wantReadableHandle_entry:
_cafhO:
	jmp GHC.IO.Handle.Internals.wantReadableHandle1_entry
	.size GHC.IO.Handle.Internals.wantReadableHandle_entry, .-GHC.IO.Handle.Internals.wantReadableHandle_entry


==================== Asm code ====================
2018-03-16 16:05:16.650699942 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Internals.wantReadableHandle_info
.type GHC.IO.Handle.Internals.wantReadableHandle_info, @object
GHC.IO.Handle.Internals.wantReadableHandle_info:
	.quad	GHC.IO.Handle.Internals.wantReadableHandle_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	Saded_srt+616


==================== Asm code ====================
2018-03-16 16:05:16.653483693 UTC

.section .data.rel.ro
.align 8
.align 1
Saded_srt:
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle12_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle11_closure
	.quad	ioe_closedHandle2_ra7Pb_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle8_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle7_closure
	.quad	ioe_semiclosedHandle2_ra7Pc_closure
	.quad	GHC.IO.Handle.Internals.hLookAhead_3_closure
	.quad	ioe_EOF2_ra7Pd_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle4_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle3_closure
	.quad	ioe_notReadable2_ra7Pe_closure
	.quad	GHC.IO.Handle.Internals.wantWritableHandle3_closure
	.quad	GHC.IO.Handle.Internals.wantWritableHandle2_closure
	.quad	ioe_notWritable2_ra7Pf_closure
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle4_closure
	.quad	GHC.IO.Handle.Internals.flushBuffer4_closure
	.quad	lvl1_ra7Ph_closure
	.quad	GHC.IO.Handle.Internals.$wioe_bufsiz_closure
	.quad	GHC.IO.Handle.Internals.ioe_bufsiz1_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_closure
	.quad	GHC.IO.Handle.Internals.ioe_finalizedHandle_closure
	.quad	lvl6_ra7Pm_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	GHC.IO.Handle.Internals.decodeByteBuf1_closure
	.quad	GHC.IO.Handle.Internals.decodeByteBuf2_closure
	.quad	GHC.IO.Handle.Internals.readTextDeviceNonBlocking1_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle2_closure
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle5_closure
	.quad	GHC.Err.error_closure
	.quad	lvl19_ra7Pz_closure
	.quad	GHC.IO.Handle.Internals.flushCharBuffer1_closure
	.quad	GHC.IO.Handle.Internals.flushCharBuffer2_closure
	.quad	GHC.IO.Handle.Internals.flushBuffer2_closure
	.quad	GHC.IO.Handle.Internals.flushBuffer3_closure
	.quad	GHC.IO.Handle.Internals.flushBuffer1_closure
	.quad	Control.Exception.Base.patError_closure
	.quad	GHC.IO.Handle.Internals.hLookAhead_2_closure
	.quad	GHC.IO.Handle.Internals.$wreadTextDevice'_closure
	.quad	lvl22_ra7PC_closure
	.quad	GHC.IO.Handle.Internals.hLookAhead_1_closure
	.quad	GHC.IO.Handle.Internals.noCharBuffer_closure
	.quad	GHC.IO.Handle.Internals.noByteBuffer_closure
	.quad	GHC.IO.Handle.Internals.hClose_help1_closure
	.quad	GHC.IO.Handle.Internals.handleFinalizer1_closure
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle4_closure
	.quad	GHC.IO.Handle.Internals.mkFileHandle1_closure
	.quad	GHC.IO.failIO1_closure
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle3_closure
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle2_closure
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle1_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	$wlvl_ra7PF_closure
	.quad	Data.Typeable.Internal.sameTypeRep_closure
	.quad	GHC.IO.Exception.$fExceptionAllocationLimitExceeded6_closure
	.quad	GHC.IO.Exception.$fExceptionIOException4_closure
	.quad	GHC.IO.Handle.Internals.$wdo_operation_closure
	.quad	GHC.IO.Handle.Internals.withHandle_1_closure
	.quad	GHC.IO.Handle.Internals.$wwithHandle__'_closure
	.quad	GHC.IO.Handle.Internals.withHandle__'1_closure
	.quad	GHC.IO.Handle.Internals.withAllHandles__1_closure
	.quad	GHC.IO.Handle.Internals.$wwithHandle'_closure
	.quad	GHC.IO.Handle.Internals.withHandle1_closure
	.quad	GHC.IO.Handle.Internals.withHandle_'1_closure
	.quad	withHandle_2_ra7PG_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle2_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle_1_closure
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle5_closure
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle2_closure
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle3_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle7_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle11_closure
	.quad	GHC.IO.Handle.Internals.wantSeekableHandle1_closure
	.quad	GHC.IO.Handle.Internals.flushBuffer2_closure
	.quad	GHC.IO.Handle.Internals.$wwantWritableHandle'_closure
	.quad	GHC.IO.Handle.Internals.wantWritableHandle1_closure
	.quad	withHandle2_ra7PH_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle1_closure

