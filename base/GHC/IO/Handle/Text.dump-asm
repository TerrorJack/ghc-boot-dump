
==================== Asm code ====================
2018-03-16 16:06:03.305184265 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_rb6WB_bytes:
	.asciz "illegal buffer size "


==================== Asm code ====================
2018-03-16 16:06:03.310668577 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$willegalBufferSize_closure
.type GHC.IO.Handle.Text.$willegalBufferSize_closure, @object
GHC.IO.Handle.Text.$willegalBufferSize_closure:
	.quad	GHC.IO.Handle.Text.$willegalBufferSize_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.311473506 UTC

.section .text
.align 8
sat_sb6Xn_entry:
_cb9YN:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cb9YO
_cb9YP:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cb9YK_info,-24(%rbp)
	movl $GHC.Types.[]_closure+1,%edi
	movq 16(%rbx),%rsi
	movl $9,%r14d
	addq $-24,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
_cb9YO:
	jmp *-16(%r13)
	.size sat_sb6Xn_entry, .-sat_sb6Xn_entry


==================== Asm code ====================
2018-03-16 16:06:03.312102839 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb6Xn_info:
	.quad	sat_sb6Xn_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:06:03.312804027 UTC

.section .text
.align 8
_cb9YK:
_cb9YK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb9YS
_cb9YR:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cb9YS:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _cb9YK, .-_cb9YK


==================== Asm code ====================
2018-03-16 16:06:03.31346915 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb9YK_info:
	.quad	_cb9YK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.314211119 UTC

.section .text
.align 8
sat_sb6Xo_entry:
_cb9YT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb9YU
_cb9YV:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cb9YX
_cb9YW:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $sat_sb6Xn_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	movl $lvl_rb6WB_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_cb9YX:
	movq $24,904(%r13)
_cb9YU:
	jmp *-16(%r13)
	.size sat_sb6Xo_entry, .-sat_sb6Xo_entry


==================== Asm code ====================
2018-03-16 16:06:03.314869615 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb6Xo_info:
	.quad	sat_sb6Xo_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:06:03.315688393 UTC

.section .text
.align 8
sat_sb6Xq_entry:
_cb9Z0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cb9Z1
_cb9Z2:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cb9Z4
_cb9Z3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_sb6Xo_info,-88(%r12)
	movq %rbx,-72(%r12)
	movq $GHC.Base.Just_con_info,-64(%r12)
	movq %rax,-56(%r12)
	movq $GHC.IO.Exception.IOError_con_info,-48(%r12)
	leaq -62(%r12),%rax
	movq %rax,-40(%r12)
	movq $GHC.IO.Exception.InvalidArgument_closure+1,-32(%r12)
	movq %rcx,-24(%r12)
	leaq -88(%r12),%rax
	movq %rax,-16(%r12)
	movq $GHC.Base.Nothing_closure+1,-8(%r12)
	movq $GHC.Base.Nothing_closure+1,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_cb9Z4:
	movq $96,904(%r13)
_cb9Z1:
	jmp *-16(%r13)
	.size sat_sb6Xq_entry, .-sat_sb6Xq_entry


==================== Asm code ====================
2018-03-16 16:06:03.316430166 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb6Xq_info:
	.quad	sat_sb6Xq_entry
	.quad	4294967298
	.quad	4294967311
	.quad	Sb7vQ_srt


==================== Asm code ====================
2018-03-16 16:06:03.317096441 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$willegalBufferSize_entry
.type GHC.IO.Handle.Text.$willegalBufferSize_entry, @object
GHC.IO.Handle.Text.$willegalBufferSize_entry:
_cb9Z5:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cb9Z9
_cb9Z8:
	movq $sat_sb6Xq_info,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -32(%r12),%rbx
	jmp stg_raiseIO#
_cb9Z9:
	movq $40,904(%r13)
	movl $GHC.IO.Handle.Text.$willegalBufferSize_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.$willegalBufferSize_entry, .-GHC.IO.Handle.Text.$willegalBufferSize_entry


==================== Asm code ====================
2018-03-16 16:06:03.317777819 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$willegalBufferSize_info
.type GHC.IO.Handle.Text.$willegalBufferSize_info, @object
GHC.IO.Handle.Text.$willegalBufferSize_info:
	.quad	GHC.IO.Handle.Text.$willegalBufferSize_entry
	.quad	0
	.quad	12884901902
	.quad	17179869206
	.quad	Sb7vQ_srt


==================== Asm code ====================
2018-03-16 16:06:03.319416744 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.$trModule4_bytes
.type GHC.IO.Handle.Text.$trModule4_bytes, @object
GHC.IO.Handle.Text.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:06:03.321018638 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$trModule3_closure
.type GHC.IO.Handle.Text.$trModule3_closure, @object
GHC.IO.Handle.Text.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Text.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:06:03.322861016 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.$trModule2_bytes
.type GHC.IO.Handle.Text.$trModule2_bytes, @object
GHC.IO.Handle.Text.$trModule2_bytes:
	.asciz "GHC.IO.Handle.Text"


==================== Asm code ====================
2018-03-16 16:06:03.32446647 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$trModule1_closure
.type GHC.IO.Handle.Text.$trModule1_closure, @object
GHC.IO.Handle.Text.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Text.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:06:03.327942627 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$trModule_closure
.type GHC.IO.Handle.Text.$trModule_closure, @object
GHC.IO.Handle.Text.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.IO.Handle.Text.$trModule3_closure+1
	.quad	GHC.IO.Handle.Text.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:03.332164989 UTC

.section .data
.align 8
.align 1
memcpy1_rb6WC_closure:
	.quad	memcpy1_rb6WC_info


==================== Asm code ====================
2018-03-16 16:06:03.332936132 UTC

.section .text
.align 8
memcpy1_rb6WC_entry:
_cb9ZI:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cba00
_cba01:
	movq $block_cb9ZF_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cb9ZF
_cb9ZG:
	movq (%rbx),%rax
	jmp *(%rax)
_cba00:
	movl $memcpy1_rb6WC_closure,%ebx
	jmp *-8(%r13)
	.size memcpy1_rb6WC_entry, .-memcpy1_rb6WC_entry


==================== Asm code ====================
2018-03-16 16:06:03.33398542 UTC

.section .data.rel.ro
.align 8
.align 1
memcpy1_rb6WC_info:
	.quad	memcpy1_rb6WC_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:06:03.33459432 UTC

.section .text
.align 8
_cb9ZF:
_cb9ZF:
	movq $block_cb9ZL_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cb9ZL
_cb9ZM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb9ZF, .-_cb9ZF


==================== Asm code ====================
2018-03-16 16:06:03.335148737 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb9ZF_info:
	.quad	_cb9ZF
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.335821343 UTC

.section .text
.align 8
_cb9ZL:
_cb9ZL:
	movq $block_cb9ZQ_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cb9ZQ
_cb9ZR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cb9ZL, .-_cb9ZL


==================== Asm code ====================
2018-03-16 16:06:03.336394134 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb9ZL_info:
	.quad	_cb9ZL
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.33713785 UTC

.section .text
.align 8
_cb9ZQ:
_cb9ZQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cba06
_cba05:
	subq $8,%rsp
	movq 8(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 7(%rbx),%rdx
	xorl %eax,%eax
	call memcpy
	addq $8,%rsp
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cba06:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cb9ZQ, .-_cb9ZQ


==================== Asm code ====================
2018-03-16 16:06:03.337806932 UTC

.section .data.rel.ro
.align 8
.align 1
block_cb9ZQ_info:
	.quad	_cb9ZQ
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.339888065 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.memcpy_closure
.type GHC.IO.Handle.Text.memcpy_closure, @object
GHC.IO.Handle.Text.memcpy_closure:
	.quad	GHC.IO.Handle.Text.memcpy_info


==================== Asm code ====================
2018-03-16 16:06:03.340435058 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.memcpy_entry
.type GHC.IO.Handle.Text.memcpy_entry, @object
GHC.IO.Handle.Text.memcpy_entry:
_cba0w:
	jmp memcpy1_rb6WC_entry
	.size GHC.IO.Handle.Text.memcpy_entry, .-GHC.IO.Handle.Text.memcpy_entry


==================== Asm code ====================
2018-03-16 16:06:03.341004988 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.memcpy_info
.type GHC.IO.Handle.Text.memcpy_info, @object
GHC.IO.Handle.Text.memcpy_info:
	.quad	GHC.IO.Handle.Text.memcpy_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:06:03.35526202 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$wcommitBuffer'_closure
.type GHC.IO.Handle.Text.$wcommitBuffer'_closure, @object
GHC.IO.Handle.Text.$wcommitBuffer'_closure:
	.quad	GHC.IO.Handle.Text.$wcommitBuffer'_info


==================== Asm code ====================
2018-03-16 16:06:03.355966196 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$wcommitBuffer'_slow
.type GHC.IO.Handle.Text.$wcommitBuffer'_slow, @object
GHC.IO.Handle.Text.$wcommitBuffer'_slow:
_cba0E:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Text.$wcommitBuffer'_entry
	.size GHC.IO.Handle.Text.$wcommitBuffer'_slow, .-GHC.IO.Handle.Text.$wcommitBuffer'_slow


==================== Asm code ====================
2018-03-16 16:06:03.356831691 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$wcommitBuffer'_entry
.type GHC.IO.Handle.Text.$wcommitBuffer'_entry, @object
GHC.IO.Handle.Text.$wcommitBuffer'_entry:
_cba0L:
	leaq -96(%rbp),%rax
	cmpq %r15,%rax
	jb _cba0M
_cba0N:
	movq $block_cba0I_info,-40(%rbp)
	movq 8(%rbp),%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %r14,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cba0I
_cba0J:
	movq (%rbx),%rax
	jmp *(%rax)
_cba0M:
	movl $GHC.IO.Handle.Text.$wcommitBuffer'_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.$wcommitBuffer'_entry, .-GHC.IO.Handle.Text.$wcommitBuffer'_entry


==================== Asm code ====================
2018-03-16 16:06:03.357901271 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$wcommitBuffer'_info
.type GHC.IO.Handle.Text.$wcommitBuffer'_info, @object
GHC.IO.Handle.Text.$wcommitBuffer'_info:
	.quad	GHC.IO.Handle.Text.$wcommitBuffer'_entry
	.quad	0
	.quad	14
	.quad	34359738368
	.quad	0
	.quad	839
	.quad	GHC.IO.Handle.Text.$wcommitBuffer'_slow


==================== Asm code ====================
2018-03-16 16:06:03.358645377 UTC

.section .text
.align 8
_cba0I:
_cba0I:
	movq $block_cba0Q_info,-40(%rbp)
	movq 16(%rbp),%r9
	movl $GHC.IO.Buffer.WriteBuffer_closure+2,%r8d
	movq 8(%rbp),%rdi
	movq 48(%rbp),%rsi
	movq %rbx,%r14
	movq $0,-56(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-48(%rbp)
	movq 31(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 47(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 71(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 79(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	addq $-56,%rbp
	jmp GHC.IO.Handle.Internals.$wwriteCharBuffer_entry
	.size _cba0I, .-_cba0I


==================== Asm code ====================
2018-03-16 16:06:03.359356429 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba0I_info:
	.quad	_cba0I
	.quad	2438
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.360058173 UTC

.section .text
.align 8
_cba0Q:
_cba0Q:
	movq $block_cba0S_info,(%rbp)
	movq 72(%rbp),%rbx
	testb $7,%bl
	jne _cba0S
_cba0V:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cba0Q, .-_cba0Q


==================== Asm code ====================
2018-03-16 16:06:03.360635454 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba0Q_info:
	.quad	_cba0Q
	.quad	77835
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.361421822 UTC

.section .text
.align 8
_cba0S:
_cba0S:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cba12
_cba1H:
	movq 16(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cba1F_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cba1F
_cba1I:
	movq (%rbx),%rax
	jmp *(%rax)
_cba12:
	movq $block_cba0Z_info,16(%rbp)
	movq 80(%rbp),%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cba0Z
_cba13:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cba0S, .-_cba0S


==================== Asm code ====================
2018-03-16 16:06:03.362111877 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba0S_info:
	.quad	_cba0S
	.quad	94219
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.362948662 UTC

.section .text
.align 8
_cba0Z:
_cba0Z:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cba19
_cba1h:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cba1f_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cba1f
_cba1i:
	movq (%rbx),%rax
	jmp *(%rax)
_cba1c:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_cba19:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cba1c
_cba1b:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq $GHC.IO.Buffer.WriteBuffer_closure+2,-32(%r12)
	movq 72(%rbp),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq 48(%rbp),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cba0Z, .-_cba0Z


==================== Asm code ====================
2018-03-16 16:06:03.363673301 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba0Z_info:
	.quad	_cba0Z
	.quad	32009
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.364646709 UTC

.section .text
.align 8
_cba1f:
_cba1f:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cba1o
_cba1n:
	movq 64(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 40(%rbp),%rsi
	cmpq 31(%rbx),%rdx
	je _cba1C
_cba1u:
	movq $GHC.IO.Buffer.Buffer_con_info,-96(%r12)
	movq %rcx,-88(%r12)
	movq $GHC.IO.Buffer.WriteBuffer_closure+2,-80(%r12)
	movq %rax,-72(%r12)
	movq %rdx,-64(%r12)
	movq $0,-56(%r12)
	movq %rsi,-48(%r12)
	leaq -95(%r12),%rax
	addq $-48,%r12
	movq %rax,%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cba1C:
	movq 8(%rbp),%rbx
	movq 8(%rbx),%rdi
	movq $GHC.ForeignPtr.ForeignPtr_con_info,-96(%r12)
	movq %rcx,-88(%r12)
	movq %rax,-80(%r12)
	movq $GHC.IO.Handle.Types.BufferListCons_con_info,-72(%r12)
	leaq -95(%r12),%r8
	movq %r8,-64(%r12)
	movq %rdi,-56(%r12)
	leaq -70(%r12),%rdi
	movq %rdi,8(%rbx)
	subq $8,%rsp
	movq %r13,%rdi
	movq %rsi,%r8
	movq %rbx,%rsi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %r14,-40(%r12)
	movq $GHC.IO.Buffer.WriteBuffer_closure+2,-32(%r12)
	movq %rbx,-24(%r12)
	movq 64(%rsp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq 72(%rsp),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cba1o:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cba1f, .-_cba1f


==================== Asm code ====================
2018-03-16 16:06:03.365686046 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba1f_info:
	.quad	_cba1f
	.quad	16008
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.366500127 UTC

.section .text
.align 8
_cba1F:
_cba1F:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cba2B
_cba1X:
	movq 8(%rbp),%rax
	movq $block_cba1Q_info,8(%rbp)
	movq 40(%rbp),%r14
	movq $stg_ap_ppv_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.BufferedIO.flushWriteBuffer_entry
_cba2B:
	movq $block_cba2A_info,16(%rbp)
	movq 80(%rbp),%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cba2A
_cba2C:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cba1F, .-_cba1F


==================== Asm code ====================
2018-03-16 16:06:03.367162255 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba1F_info:
	.quad	_cba1F
	.quad	94219
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.368016043 UTC

.section .text
.align 8
_cba2A:
_cba2A:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cba2I
_cba2Q:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cba2O_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cba2O
_cba2R:
	movq (%rbx),%rax
	jmp *(%rax)
_cba2L:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_cba2I:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cba2L
_cba2K:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq $GHC.IO.Buffer.WriteBuffer_closure+2,-32(%r12)
	movq 72(%rbp),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq 48(%rbp),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cba2A, .-_cba2A


==================== Asm code ====================
2018-03-16 16:06:03.368788918 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba2A_info:
	.quad	_cba2A
	.quad	32009
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.369755647 UTC

.section .text
.align 8
_cba2O:
_cba2O:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cba2X
_cba2W:
	movq 64(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 40(%rbp),%rsi
	cmpq 31(%rbx),%rdx
	je _cba3b
_cba33:
	movq $GHC.IO.Buffer.Buffer_con_info,-96(%r12)
	movq %rcx,-88(%r12)
	movq $GHC.IO.Buffer.WriteBuffer_closure+2,-80(%r12)
	movq %rax,-72(%r12)
	movq %rdx,-64(%r12)
	movq $0,-56(%r12)
	movq %rsi,-48(%r12)
	leaq -95(%r12),%rax
	addq $-48,%r12
	movq %rax,%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cba3b:
	movq 8(%rbp),%rbx
	movq 8(%rbx),%rdi
	movq $GHC.ForeignPtr.ForeignPtr_con_info,-96(%r12)
	movq %rcx,-88(%r12)
	movq %rax,-80(%r12)
	movq $GHC.IO.Handle.Types.BufferListCons_con_info,-72(%r12)
	leaq -95(%r12),%r8
	movq %r8,-64(%r12)
	movq %rdi,-56(%r12)
	leaq -70(%r12),%rdi
	movq %rdi,8(%rbx)
	subq $8,%rsp
	movq %r13,%rdi
	movq %rsi,%r8
	movq %rbx,%rsi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %r14,-40(%r12)
	movq $GHC.IO.Buffer.WriteBuffer_closure+2,-32(%r12)
	movq %rbx,-24(%r12)
	movq 64(%rsp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq 72(%rsp),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cba2X:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cba2O, .-_cba2O


==================== Asm code ====================
2018-03-16 16:06:03.370688068 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba2O_info:
	.quad	_cba2O
	.quad	16008
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.371409866 UTC

.section .text
.align 8
_cba1Q:
_cba1Q:
	movq 72(%rbp),%rax
	movq 8(%rbp),%rcx
	movq %rbx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rcx,%rsi
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cba1V_info,8(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _cba1V
_cba1Z:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cba1Q, .-_cba1Q


==================== Asm code ====================
2018-03-16 16:06:03.372051322 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba1Q_info:
	.quad	_cba1Q
	.quad	47626
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.372901054 UTC

.section .text
.align 8
_cba1V:
_cba1V:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cba25
_cba2d:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cba2b_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cba2b
_cba2e:
	movq (%rbx),%rax
	jmp *(%rax)
_cba28:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_cba25:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cba28
_cba27:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq $GHC.IO.Buffer.WriteBuffer_closure+2,-32(%r12)
	movq 72(%rbp),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq 48(%rbp),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cba1V, .-_cba1V


==================== Asm code ====================
2018-03-16 16:06:03.373934567 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba1V_info:
	.quad	_cba1V
	.quad	32009
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.375776602 UTC

.section .text
.align 8
_cba2b:
_cba2b:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cba2k
_cba2j:
	movq 64(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 40(%rbp),%rsi
	cmpq 31(%rbx),%rdx
	je _cba2y
_cba2q:
	movq $GHC.IO.Buffer.Buffer_con_info,-96(%r12)
	movq %rcx,-88(%r12)
	movq $GHC.IO.Buffer.WriteBuffer_closure+2,-80(%r12)
	movq %rax,-72(%r12)
	movq %rdx,-64(%r12)
	movq $0,-56(%r12)
	movq %rsi,-48(%r12)
	leaq -95(%r12),%rax
	addq $-48,%r12
	movq %rax,%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cba2y:
	movq 8(%rbp),%rbx
	movq 8(%rbx),%rdi
	movq $GHC.ForeignPtr.ForeignPtr_con_info,-96(%r12)
	movq %rcx,-88(%r12)
	movq %rax,-80(%r12)
	movq $GHC.IO.Handle.Types.BufferListCons_con_info,-72(%r12)
	leaq -95(%r12),%r8
	movq %r8,-64(%r12)
	movq %rdi,-56(%r12)
	leaq -70(%r12),%rdi
	movq %rdi,8(%rbx)
	subq $8,%rsp
	movq %r13,%rdi
	movq %rsi,%r8
	movq %rbx,%rsi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %r14,-40(%r12)
	movq $GHC.IO.Buffer.WriteBuffer_closure+2,-32(%r12)
	movq %rbx,-24(%r12)
	movq 64(%rsp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq 72(%rsp),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cba2k:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cba2b, .-_cba2b


==================== Asm code ====================
2018-03-16 16:06:03.376719578 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba2b_info:
	.quad	_cba2b
	.quad	16008
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.380963321 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.commitBuffer'1_closure
.type GHC.IO.Handle.Text.commitBuffer'1_closure, @object
GHC.IO.Handle.Text.commitBuffer'1_closure:
	.quad	GHC.IO.Handle.Text.commitBuffer'1_info


==================== Asm code ====================
2018-03-16 16:06:03.381767952 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.commitBuffer'1_entry
.type GHC.IO.Handle.Text.commitBuffer'1_entry, @object
GHC.IO.Handle.Text.commitBuffer'1_entry:
_cba57:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cba5g
_cba5h:
	movq $block_cba54_info,-40(%rbp)
	movq %r14,%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cba54
_cba55:
	movq (%rbx),%rax
	jmp *(%rax)
_cba5g:
	movl $GHC.IO.Handle.Text.commitBuffer'1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.commitBuffer'1_entry, .-GHC.IO.Handle.Text.commitBuffer'1_entry


==================== Asm code ====================
2018-03-16 16:06:03.382445182 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.commitBuffer'1_info
.type GHC.IO.Handle.Text.commitBuffer'1_info, @object
GHC.IO.Handle.Text.commitBuffer'1_info:
	.quad	GHC.IO.Handle.Text.commitBuffer'1_entry
	.quad	0
	.quad	14
	.quad	30064771098


==================== Asm code ====================
2018-03-16 16:06:03.383160526 UTC

.section .text
.align 8
_cba54:
_cba54:
	movq $block_cba5a_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rax,(%rbp)
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cba5a
_cba5b:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cba54, .-_cba54


==================== Asm code ====================
2018-03-16 16:06:03.383827301 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba54_info:
	.quad	_cba54
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.384543572 UTC

.section .text
.align 8
_cba5a:
_cba5a:
	movq $block_cba5f_info,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _cba5f
_cba5k:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cba5a, .-_cba5a


==================== Asm code ====================
2018-03-16 16:06:03.38515439 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba5a_info:
	.quad	_cba5a
	.quad	134
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.386098175 UTC

.section .text
.align 8
_cba5f:
_cba5f:
	movq 32(%rbp),%r9
	movq 7(%rbx),%r8
	movq 24(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Text.$wcommitBuffer'_entry
	.size _cba5f, .-_cba5f


==================== Asm code ====================
2018-03-16 16:06:03.386695013 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba5f_info:
	.quad	_cba5f
	.quad	390
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.38893396 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.commitBuffer'_closure
.type GHC.IO.Handle.Text.commitBuffer'_closure, @object
GHC.IO.Handle.Text.commitBuffer'_closure:
	.quad	GHC.IO.Handle.Text.commitBuffer'_info


==================== Asm code ====================
2018-03-16 16:06:03.389550528 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.commitBuffer'_entry
.type GHC.IO.Handle.Text.commitBuffer'_entry, @object
GHC.IO.Handle.Text.commitBuffer'_entry:
_cba5N:
	jmp GHC.IO.Handle.Text.commitBuffer'1_entry
	.size GHC.IO.Handle.Text.commitBuffer'_entry, .-GHC.IO.Handle.Text.commitBuffer'_entry


==================== Asm code ====================
2018-03-16 16:06:03.390093047 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.commitBuffer'_info
.type GHC.IO.Handle.Text.commitBuffer'_info, @object
GHC.IO.Handle.Text.commitBuffer'_info:
	.quad	GHC.IO.Handle.Text.commitBuffer'_entry
	.quad	0
	.quad	14
	.quad	30064771098


==================== Asm code ====================
2018-03-16 16:06:03.391772506 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl1_rb6WD_bytes:
	.asciz "commitBuffer"


==================== Asm code ====================
2018-03-16 16:06:03.394254701 UTC

.section .data
.align 8
.align 1
lvl2_rb6WE_closure:
	.quad	lvl2_rb6WE_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.395055487 UTC

.section .text
.align 8
lvl2_rb6WE_entry:
_cba61:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cba62
_cba63:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cba60
_cba5Z:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl1_rb6WD_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cba62:
	jmp *-16(%r13)
_cba60:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl2_rb6WE_entry, .-lvl2_rb6WE_entry


==================== Asm code ====================
2018-03-16 16:06:03.39572975 UTC

.section .data.rel.ro
.align 8
.align 1
lvl2_rb6WE_info:
	.quad	lvl2_rb6WE_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:03.397595958 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.hPutChar3_bytes
.type GHC.IO.Handle.Text.hPutChar3_bytes, @object
GHC.IO.Handle.Text.hPutChar3_bytes:
	.asciz "hPutChar"


==================== Asm code ====================
2018-03-16 16:06:03.400038536 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutChar2_closure
.type GHC.IO.Handle.Text.hPutChar2_closure, @object
GHC.IO.Handle.Text.hPutChar2_closure:
	.quad	GHC.IO.Handle.Text.hPutChar2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.400824736 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutChar2_entry
.type GHC.IO.Handle.Text.hPutChar2_entry, @object
GHC.IO.Handle.Text.hPutChar2_entry:
_cba6i:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cba6j
_cba6k:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cba6h
_cba6g:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Text.hPutChar3_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cba6j:
	jmp *-16(%r13)
_cba6h:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.hPutChar2_entry, .-GHC.IO.Handle.Text.hPutChar2_entry


==================== Asm code ====================
2018-03-16 16:06:03.401538493 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutChar2_info
.type GHC.IO.Handle.Text.hPutChar2_info, @object
GHC.IO.Handle.Text.hPutChar2_info:
	.quad	GHC.IO.Handle.Text.hPutChar2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:03.413152878 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whPutChar_closure
.type GHC.IO.Handle.Text.$whPutChar_closure, @object
GHC.IO.Handle.Text.$whPutChar_closure:
	.quad	GHC.IO.Handle.Text.$whPutChar_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.414000887 UTC

.section .text
.align 8
act_sb6ZG_entry:
_cba6E:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _cba6F
_cba6G:
	movq $block_cba6B_info,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cba6B
_cba6C:
	movq (%rbx),%rax
	jmp *(%rax)
_cba6F:
	jmp *-8(%r13)
	.size act_sb6ZG_entry, .-act_sb6ZG_entry


==================== Asm code ====================
2018-03-16 16:06:03.414654004 UTC

.section .data.rel.ro
.align 8
.align 1
act_sb6ZG_info:
	.quad	act_sb6ZG_entry
	.quad	4294967296
	.quad	10
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:06:03.415458881 UTC

.section .text
.align 8
_cba6B:
_cba6B:
	movq 71(%rbx),%rax
	movq 8(%rax),%rax
	movq 8(%rbp),%rcx
	cmpq $10,%rcx
	je _cba7D
_cba6X:
	movq $block_cba6M_info,-8(%rbp)
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rcx,(%rbp)
	movq %rdx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cba6M
_cba6N:
	movq (%rbx),%rax
	jmp *(%rax)
_cba7D:
	movq $block_cba74_info,-40(%rbp)
	movq %rbx,%rcx
	movq 15(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 55(%rbx),%r8
	movq 119(%rbx),%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cba74
_cba7E:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cba6B, .-_cba6B


==================== Asm code ====================
2018-03-16 16:06:03.416183803 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba6B_info:
	.quad	_cba6B
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.416942779 UTC

.section .text
.align 8
_cba74:
_cba74:
	movq 32(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cba7L
_cba7V:
	movq $block_cba7T_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cba7T
_cba7W:
	movq (%rbx),%rax
	jmp *(%rax)
_cba7L:
	movq $block_cba7I_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cba7I
_cba7M:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cba74, .-_cba74


==================== Asm code ====================
2018-03-16 16:06:03.41763721 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba74_info:
	.quad	_cba74
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.418970491 UTC

.section .text
.align 8
_cba7I:
_cba7I:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movl $10,(%rdx,%rbx,4)
	movq %rdx,32(%rbp)
	movq %rax,(%rbp)
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	leaq 1(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp _sb70h
	.size _cba7I, .-_cba7I


==================== Asm code ====================
2018-03-16 16:06:03.419667136 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba7I_info:
	.quad	_cba7I
	.quad	518
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.42035679 UTC

.section .text
.align 8
_cba7T:
_cba7T:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movl $13,(%rdx,%rbx,4)
	incq %rbx
	movl $10,(%rdx,%rbx,4)
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	incq %rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,32(%rbp)
	addq $-32,%rbp
	jmp _sb70h
	.size _cba7T, .-_cba7T


==================== Asm code ====================
2018-03-16 16:06:03.42100078 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba7T_info:
	.quad	_cba7T
	.quad	518
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.421885781 UTC

.section .text
.align 8
_sb70h:
_sb70h:
	movq 32(%rbp),%rax
	movq $block_cba78_info,32(%rbp)
	movq 8(%rbp),%r9
	movq (%rbp),%r8
	movq %rax,%rdi
	movq 64(%rbp),%rsi
	movq 80(%rbp),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.Internals.$wwriteCharBuffer_entry
	.size _sb70h, .-_sb70h


==================== Asm code ====================
2018-03-16 16:06:03.422621019 UTC

.section .text
.align 8
_cba78:
_cba78:
	movq $block_cba7a_info,(%rbp)
	movq 24(%rbp),%rbx
	testb $7,%bl
	jne _cba7a
_cba7d:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cba78, .-_cba78


==================== Asm code ====================
2018-03-16 16:06:03.423242369 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba78_info:
	.quad	_cba78
	.quad	2566
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.423944325 UTC

.section .text
.align 8
_cba7a:
_cba7a:
	andl $7,%ebx
	cmpq $2,%rbx
	je _cba7o
_uba8g:
	addq $56,%rbp
	jmp _cba7C
_cba7o:
	movq 16(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cba7m_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cba7m
_cba7p:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cba7a, .-_cba7a


==================== Asm code ====================
2018-03-16 16:06:03.424570872 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba7a_info:
	.quad	_cba7a
	.quad	2822
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.425285541 UTC

.section .text
.align 8
_cba7m:
_cba7m:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _uba8h
_cba7z:
	movq 8(%rbp),%rax
	movq $block_cba7x_info,8(%rbp)
	movq 40(%rbp),%r14
	movq $stg_ap_ppv_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.BufferedIO.flushWriteBuffer_entry
_uba8h:
	addq $56,%rbp
	jmp _cba7C
	.size _cba7m, .-_cba7m


==================== Asm code ====================
2018-03-16 16:06:03.425907211 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba7m_info:
	.quad	_cba7m
	.quad	2822
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.426630513 UTC

.section .text
.align 8
_cba7x:
_cba7x:
	movq 8(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cba7x, .-_cba7x


==================== Asm code ====================
2018-03-16 16:06:03.427241802 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba7x_info:
	.quad	_cba7x
	.quad	1925
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.427866219 UTC

.section .text
.align 8
_cba7C:
_cba7C:
	movl $GHC.Tuple.()_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cba7C, .-_cba7C


==================== Asm code ====================
2018-03-16 16:06:03.428606793 UTC

.section .text
.align 8
_cba6M:
_cba6M:
	movq 16(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rsi
	movq 31(%rbx),%rdi
	movq 39(%rbx),%r8
	movq 47(%rbx),%rbx
	movq 8(%rbp),%r9
	movl %r9d,(%rsi,%rbx,4)
	movq $block_cba6V_info,16(%rbp)
	movq %rdi,%r9
	movq %r8,%rdi
	movq %rdx,%r8
	movq %rdi,%rdx
	movq %rcx,%rdi
	movq %rax,%r14
	movq %rdx,(%rbp)
	leaq 1(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.IO.Handle.Internals.$wwriteCharBuffer_entry
	.size _cba6M, .-_cba6M


==================== Asm code ====================
2018-03-16 16:06:03.429220205 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba6M_info:
	.quad	_cba6M
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.429808862 UTC

.section .text
.align 8
_cba6V:
_cba6V:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cba6V, .-_cba6V


==================== Asm code ====================
2018-03-16 16:06:03.430359011 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba6V_info:
	.quad	_cba6V
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.431168774 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$whPutChar_entry
.type GHC.IO.Handle.Text.$whPutChar_entry, @object
GHC.IO.Handle.Text.$whPutChar_entry:
_cba8A:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cba8B
_cba8C:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cba8E
_cba8D:
	movq $act_sb6ZG_info,-8(%r12)
	movq %rsi,(%r12)
	movq $block_cba8t_info,-16(%rbp)
	movq %r14,%rbx
	leaq -6(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cba8t
_cba8u:
	movq (%rbx),%rax
	jmp *(%rax)
_cba8E:
	movq $16,904(%r13)
_cba8B:
	movl $GHC.IO.Handle.Text.$whPutChar_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.$whPutChar_entry, .-GHC.IO.Handle.Text.$whPutChar_entry


==================== Asm code ====================
2018-03-16 16:06:03.431867476 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whPutChar_info
.type GHC.IO.Handle.Text.$whPutChar_info, @object
GHC.IO.Handle.Text.$whPutChar_info:
	.quad	GHC.IO.Handle.Text.$whPutChar_entry
	.quad	0
	.quad	30064771086
	.quad	12884901902
	.quad	Sb7vQ_srt+16


==================== Asm code ====================
2018-03-16 16:06:03.432608121 UTC

.section .text
.align 8
_cba8t:
_cba8t:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cba8x
_cba8y:
	movq %rax,%r8
	movq 22(%rbx),%rdi
	movq %rbx,%rsi
	movl $GHC.IO.Handle.Text.hPutChar2_closure,%r14d
	addq $16,%rbp
	jmp GHC.IO.Handle.Internals.$wwantWritableHandle'_entry
_cba8x:
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq %rbx,%rsi
	movl $GHC.IO.Handle.Text.hPutChar2_closure,%r14d
	addq $16,%rbp
	jmp GHC.IO.Handle.Internals.$wwantWritableHandle'_entry
	.size _cba8t, .-_cba8t


==================== Asm code ====================
2018-03-16 16:06:03.4335895 UTC

.section .data.rel.ro
.align 8
.align 1
block_cba8t_info:
	.quad	_cba8t
	.quad	1
	.quad	21474836510
	.quad	Sb7vQ_srt+16


==================== Asm code ====================
2018-03-16 16:06:03.436516944 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutChar1_closure
.type GHC.IO.Handle.Text.hPutChar1_closure, @object
GHC.IO.Handle.Text.hPutChar1_closure:
	.quad	GHC.IO.Handle.Text.hPutChar1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.437281632 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutChar1_entry
.type GHC.IO.Handle.Text.hPutChar1_entry, @object
GHC.IO.Handle.Text.hPutChar1_entry:
_cbaa3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaa4
_cbaa5:
	movq $block_cbaa0_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbaa0
_cbaa1:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaa4:
	movl $GHC.IO.Handle.Text.hPutChar1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hPutChar1_entry, .-GHC.IO.Handle.Text.hPutChar1_entry


==================== Asm code ====================
2018-03-16 16:06:03.437903977 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutChar1_info
.type GHC.IO.Handle.Text.hPutChar1_info, @object
GHC.IO.Handle.Text.hPutChar1_info:
	.quad	GHC.IO.Handle.Text.hPutChar1_entry
	.quad	0
	.quad	21474836494
	.quad	12884901903
	.quad	Sb7vQ_srt+24


==================== Asm code ====================
2018-03-16 16:06:03.438553699 UTC

.section .text
.align 8
_cbaa0:
_cbaa0:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.Text.$whPutChar_entry
	.size _cbaa0, .-_cbaa0


==================== Asm code ====================
2018-03-16 16:06:03.43914985 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaa0_info:
	.quad	_cbaa0
	.quad	1
	.quad	4294967326
	.quad	Sb7vQ_srt+24


==================== Asm code ====================
2018-03-16 16:06:03.441696971 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutChar_closure
.type GHC.IO.Handle.Text.hPutChar_closure, @object
GHC.IO.Handle.Text.hPutChar_closure:
	.quad	GHC.IO.Handle.Text.hPutChar_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.442276165 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutChar_entry
.type GHC.IO.Handle.Text.hPutChar_entry, @object
GHC.IO.Handle.Text.hPutChar_entry:
_cbaan:
	jmp GHC.IO.Handle.Text.hPutChar1_entry
	.size GHC.IO.Handle.Text.hPutChar_entry, .-GHC.IO.Handle.Text.hPutChar_entry


==================== Asm code ====================
2018-03-16 16:06:03.442851914 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutChar_info
.type GHC.IO.Handle.Text.hPutChar_info, @object
GHC.IO.Handle.Text.hPutChar_info:
	.quad	GHC.IO.Handle.Text.hPutChar_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	Sb7vQ_srt+40


==================== Asm code ====================
2018-03-16 16:06:03.44682419 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr7_closure
.type GHC.IO.Handle.Text.hPutStr7_closure, @object
GHC.IO.Handle.Text.hPutStr7_closure:
	.quad	GHC.IO.Handle.Text.hPutStr7_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.4475168 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutStr7_entry
.type GHC.IO.Handle.Text.hPutStr7_entry, @object
GHC.IO.Handle.Text.hPutStr7_entry:
_cbaaF:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaaG
_ubaaX:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _cbaav
_cbaaG:
	movl $GHC.IO.Handle.Text.hPutStr7_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hPutStr7_entry, .-GHC.IO.Handle.Text.hPutStr7_entry


==================== Asm code ====================
2018-03-16 16:06:03.448111372 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr7_info
.type GHC.IO.Handle.Text.hPutStr7_info, @object
GHC.IO.Handle.Text.hPutStr7_info:
	.quad	GHC.IO.Handle.Text.hPutStr7_entry
	.quad	0
	.quad	38654705678
	.quad	12884901903
	.quad	Sb7vQ_srt+24


==================== Asm code ====================
2018-03-16 16:06:03.448802811 UTC

.section .text
.align 8
_cbaav:
_cbaav:
	movq $block_cbaay_info,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbaay
_cbaaz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbaav, .-_cbaav


==================== Asm code ====================
2018-03-16 16:06:03.449628291 UTC

.section .text
.align 8
_cbaay:
_cbaay:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbaaC
_cbaaD:
	movq $block_cbaaN_info,(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cbaaN
_cbaaP:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaaC:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbaay, .-_cbaay


==================== Asm code ====================
2018-03-16 16:06:03.45030686 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaay_info:
	.quad	_cbaay
	.quad	130
	.quad	4294967326
	.quad	Sb7vQ_srt+24


==================== Asm code ====================
2018-03-16 16:06:03.451454939 UTC

.section .text
.align 8
_cbaaN:
_cbaaN:
	movq $block_cbaaT_info,(%rbp)
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	jmp GHC.IO.Handle.Text.$whPutChar_entry
	.size _cbaaN, .-_cbaaN


==================== Asm code ====================
2018-03-16 16:06:03.452083386 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaaN_info:
	.quad	_cbaaN
	.quad	2
	.quad	4294967326
	.quad	Sb7vQ_srt+24


==================== Asm code ====================
2018-03-16 16:06:03.452727024 UTC

.section .text
.align 8
_cbaaT:
_cbaaT:
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _cbaav
	.size _cbaaT, .-_cbaaT


==================== Asm code ====================
2018-03-16 16:06:03.453581657 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaaT_info:
	.quad	_cbaaT
	.quad	2
	.quad	4294967326
	.quad	Sb7vQ_srt+24


==================== Asm code ====================
2018-03-16 16:06:03.458858131 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar3_closure
.type GHC.IO.Handle.Text.hGetChar3_closure, @object
GHC.IO.Handle.Text.hGetChar3_closure:
	.quad	GHC.IO.Handle.Text.hGetChar3_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.459596134 UTC

.section .text
.align 8
sat_sb71H_entry:
_cbabV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbabW
_cbabX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_cbabW:
	jmp *-16(%r13)
	.size sat_sb71H_entry, .-sat_sb71H_entry


==================== Asm code ====================
2018-03-16 16:06:03.460188287 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb71H_info:
	.quad	sat_sb71H_entry
	.quad	1
	.quad	4294967312
	.quad	Sb7vQ_srt


==================== Asm code ====================
2018-03-16 16:06:03.460919907 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetChar3_entry
.type GHC.IO.Handle.Text.hGetChar3_entry, @object
GHC.IO.Handle.Text.hGetChar3_entry:
_cbabY:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbabZ
_cbac0:
	movq $block_cbabu_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbabu
_cbabv:
	movq (%rbx),%rax
	jmp *(%rax)
_cbabZ:
	movl $GHC.IO.Handle.Text.hGetChar3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetChar3_entry, .-GHC.IO.Handle.Text.hGetChar3_entry


==================== Asm code ====================
2018-03-16 16:06:03.46157482 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar3_info
.type GHC.IO.Handle.Text.hGetChar3_info, @object
GHC.IO.Handle.Text.hGetChar3_info:
	.quad	GHC.IO.Handle.Text.hGetChar3_entry
	.quad	0
	.quad	3852585664526
	.quad	8589934597
	.quad	Sb7vQ_srt


==================== Asm code ====================
2018-03-16 16:06:03.462189939 UTC

.section .text
.align 8
_cbabu:
_cbabu:
	movq $block_cbabz_info,-16(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.Exception.$p1Exception_entry
	.size _cbabu, .-_cbabu


==================== Asm code ====================
2018-03-16 16:06:03.462780198 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbabu_info:
	.quad	_cbabu
	.quad	0
	.quad	1653562408990
	.quad	Sb7vQ_srt


==================== Asm code ====================
2018-03-16 16:06:03.463442397 UTC

.section .text
.align 8
_cbabz:
_cbabz:
	movq $block_cbabD_info,(%rbp)
	movl $GHC.IO.Exception.$fExceptionIOException4_closure,%esi
	movq %rbx,%r14
	jmp Data.Typeable.Internal.sameTypeRep_entry
	.size _cbabz, .-_cbabz


==================== Asm code ====================
2018-03-16 16:06:03.463999271 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbabz_info:
	.quad	_cbabz
	.quad	2
	.quad	1653562408990
	.quad	Sb7vQ_srt


==================== Asm code ====================
2018-03-16 16:06:03.464684206 UTC

.section .text
.align 8
_cbabD:
_cbabD:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbac6
_cbac8:
	movq $block_cbabI_info,16(%rbp)
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_0_fast
_cbac6:
	movq 16(%rbp),%rbx
	addq $24,%rbp
	jmp stg_raiseIO#
	.size _cbabD, .-_cbabD


==================== Asm code ====================
2018-03-16 16:06:03.465681103 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbabD_info:
	.quad	_cbabD
	.quad	2
	.quad	4294967326
	.quad	Sb7vQ_srt


==================== Asm code ====================
2018-03-16 16:06:03.466325464 UTC

.section .text
.align 8
_cbabI:
_cbabI:
	movq $block_cbabM_info,-8(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbabM
_cbabN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbabI, .-_cbabI


==================== Asm code ====================
2018-03-16 16:06:03.46692273 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbabI_info:
	.quad	_cbabI
	.quad	0
	.quad	4294967326
	.quad	Sb7vQ_srt


==================== Asm code ====================
2018-03-16 16:06:03.467659676 UTC

.section .text
.align 8
_cbabM:
_cbabM:
	movq -1(%rbx),%rax
	cmpl $4,20(%rax)
	je _cbaci
_cbacb:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbace
_cbacd:
	movq $sat_sb71H_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -16(%r12),%rbx
	addq $16,%rbp
	jmp stg_raiseIO#
_cbaci:
	movl $GHC.Base.Nothing_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbace:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbabM, .-_cbabM


==================== Asm code ====================
2018-03-16 16:06:03.468313131 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbabM_info:
	.quad	_cbabM
	.quad	1
	.quad	4294967326
	.quad	Sb7vQ_srt


==================== Asm code ====================
2018-03-16 16:06:03.470047573 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.hGetChar7_bytes
.type GHC.IO.Handle.Text.hGetChar7_bytes, @object
GHC.IO.Handle.Text.hGetChar7_bytes:
	.asciz "hGetChar"


==================== Asm code ====================
2018-03-16 16:06:03.472653701 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar6_closure
.type GHC.IO.Handle.Text.hGetChar6_closure, @object
GHC.IO.Handle.Text.hGetChar6_closure:
	.quad	GHC.IO.Handle.Text.hGetChar6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.473511403 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetChar6_entry
.type GHC.IO.Handle.Text.hGetChar6_entry, @object
GHC.IO.Handle.Text.hGetChar6_entry:
_cbad0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbad1
_cbad2:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbacZ
_cbacY:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Text.hGetChar7_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbad1:
	jmp *-16(%r13)
_cbacZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.hGetChar6_entry, .-GHC.IO.Handle.Text.hGetChar6_entry


==================== Asm code ====================
2018-03-16 16:06:03.474181081 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar6_info
.type GHC.IO.Handle.Text.hGetChar6_info, @object
GHC.IO.Handle.Text.hGetChar6_info:
	.quad	GHC.IO.Handle.Text.hGetChar6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:03.47586538 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar5_closure
.type GHC.IO.Handle.Text.hGetChar5_closure, @object
GHC.IO.Handle.Text.hGetChar5_closure:
	.quad	GHC.Types.C#_con_info
	.quad	13


==================== Asm code ====================
2018-03-16 16:06:03.477791348 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar4_closure
.type GHC.IO.Handle.Text.hGetChar4_closure, @object
GHC.IO.Handle.Text.hGetChar4_closure:
	.quad	GHC.Types.C#_con_info
	.quad	10


==================== Asm code ====================
2018-03-16 16:06:03.500827064 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar2_closure
.type GHC.IO.Handle.Text.hGetChar2_closure, @object
GHC.IO.Handle.Text.hGetChar2_closure:
	.quad	GHC.IO.Handle.Text.hGetChar2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.501947649 UTC

.section .text
.align 8
sat_sb72q_entry:
_cbae0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbae1
_cbae2:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbae4
_cbae3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	cmpq %rdi,%rbx
	je _cbadZ
_cbadY:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbae4:
	movq $56,904(%r13)
_cbae1:
	jmp *-16(%r13)
_cbadZ:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_sb72q_entry, .-sat_sb72q_entry


==================== Asm code ====================
2018-03-16 16:06:03.502729026 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb72q_info:
	.quad	sat_sb72q_entry
	.quad	17179869186
	.quad	15


==================== Asm code ====================
2018-03-16 16:06:03.503607728 UTC

.section .text
.align 8
sat_sb72v_entry:
_cbaei:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaej
_cbaek:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbaem
_cbael:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	cmpq %rdi,%rbx
	je _cbaeh
_cbaeg:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaem:
	movq $56,904(%r13)
_cbaej:
	jmp *-16(%r13)
_cbaeh:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_sb72v_entry, .-sat_sb72v_entry


==================== Asm code ====================
2018-03-16 16:06:03.504371012 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb72v_info:
	.quad	sat_sb72v_entry
	.quad	17179869186
	.quad	15


==================== Asm code ====================
2018-03-16 16:06:03.505296905 UTC

.section .text
.align 8
sat_sb72P_entry:
_cbaeH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaeI
_cbaeJ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbaeL
_cbaeK:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 48(%rbx),%rbx
	incq %rbx
	cmpq %rdi,%rbx
	je _cbaeV
_cbaeS:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaeV:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaeL:
	movq $56,904(%r13)
_cbaeI:
	jmp *-16(%r13)
	.size sat_sb72P_entry, .-sat_sb72P_entry


==================== Asm code ====================
2018-03-16 16:06:03.506857815 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb72P_info:
	.quad	sat_sb72P_entry
	.quad	17179869186
	.quad	15


==================== Asm code ====================
2018-03-16 16:06:03.507701963 UTC

.section .text
.align 8
sat_sb73b_entry:
_cbaf8:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaf9
_cbafa:
	movq 7(%rbx),%rax
	movq 31(%rbx),%rcx
	movq 55(%rbx),%rdx
	movq 63(%rbx),%rsi
	subq %rdx,%rsi
	testq %rsi,%rsi
	jne _ubafR
_cbaf6:
	movq $block_cbafn_info,-8(%rbp)
	movq %rcx,%rsi
	movq %rax,%r14
	addq $-8,%rbp
	jmp GHC.IO.Handle.Internals.hLookAhead_2_entry
_ubafT:
	movq %rcx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _cbafd
_ubafR:
	cmpq $1,%rsi
	jne _ubafT
_ubafS:
	movq %rax,-64(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-56(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-48(%rbp)
	movq 23(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 47(%rbx),%rax
	movq %rax,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-64,%rbp
	jmp _cbafw
_cbaf9:
	jmp *-8(%r13)
	.size sat_sb73b_entry, .-sat_sb73b_entry


==================== Asm code ====================
2018-03-16 16:06:03.50846027 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb73b_info:
	.quad	sat_sb73b_entry
	.quad	17179869188
	.quad	4294967304
	.quad	4294967299
	.quad	Sb7vQ_srt+80


==================== Asm code ====================
2018-03-16 16:06:03.509156906 UTC

.section .text
.align 8
_cbafd:
_cbafd:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbafi
_cbafh:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbafi:
	movq $16,904(%r13)
	movq $block_cbafc_info,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _cbafd, .-_cbafd


==================== Asm code ====================
2018-03-16 16:06:03.509871304 UTC

.section .text
.align 8
_cbafc:
_cbafc:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _cbafd
	.size _cbafc, .-_cbafc


==================== Asm code ====================
2018-03-16 16:06:03.510440253 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbafc_info:
	.quad	_cbafc
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.51126752 UTC

.section .text
.align 8
_cbafw:
_cbafw:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbafA
_cbafz:
	movq (%rbp),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 48(%rbp),%rdi
	movq 40(%rbp),%r8
	movl (%rbx,%r8,4),%r8d
	cmpq $13,%r8
	je _cbafN
_cbafG:
	movq $GHC.Base.Just_con_info,-48(%r12)
	movq %rdi,-40(%r12)
	leaq -46(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbafN:
	movl $13,(%rbx)
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rbx,-24(%r12)
	movq %rsi,-16(%r12)
	movq $0,-8(%r12)
	movq $1,(%r12)
	movq $block_cbafK_info,56(%rbp)
	leaq -47(%r12),%rsi
	movq %rax,%r14
	addq $56,%rbp
	jmp GHC.IO.Handle.Internals.hLookAhead_2_entry
_cbafA:
	movq $56,904(%r13)
	movq $block_cbafv_info,-8(%rbp)
	movq 56(%rbp),%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _cbafw, .-_cbafw


==================== Asm code ====================
2018-03-16 16:06:03.512069925 UTC

.section .text
.align 8
_cbafv:
_cbafv:
	movq %rbx,64(%rbp)
	addq $8,%rbp
	jmp _cbafw
	.size _cbafv, .-_cbafv


==================== Asm code ====================
2018-03-16 16:06:03.512599842 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbafv_info:
	.quad	_cbafv
	.quad	11400
	.quad	4294967326
	.quad	Sb7vQ_srt+80


==================== Asm code ====================
2018-03-16 16:06:03.513364959 UTC

.section .text
.align 8
_cbafK:
_cbafK:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbafQ
_cbafP:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbafQ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbafK, .-_cbafK


==================== Asm code ====================
2018-03-16 16:06:03.513984204 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbafK_info:
	.quad	_cbafK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.514672187 UTC

.section .text
.align 8
_cbafn:
_cbafn:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbaft
_cbafs:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaft:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbafn, .-_cbafn


==================== Asm code ====================
2018-03-16 16:06:03.515262051 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbafn_info:
	.quad	_cbafn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.516044328 UTC

.section .text
.align 8
sat_sb73x_entry:
_cbagj:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbagk
_cbagl:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbagg_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbagg
_cbagh:
	movq (%rbx),%rax
	jmp *(%rax)
_cbagk:
	jmp *-16(%r13)
	.size sat_sb73x_entry, .-sat_sb73x_entry


==================== Asm code ====================
2018-03-16 16:06:03.516673616 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb73x_info:
	.quad	sat_sb73x_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:03.517484803 UTC

.section .text
.align 8
_cbagg:
_cbagg:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbagq
_cbagp:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rbx
	movq 8(%rbp),%rdi
	incq %rdi
	cmpq %rbx,%rdi
	je _cbagC
_cbagz:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbagC:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbagq:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbagg, .-_cbagg


==================== Asm code ====================
2018-03-16 16:06:03.518242163 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbagg_info:
	.quad	_cbagg
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.518944193 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetChar2_entry
.type GHC.IO.Handle.Text.hGetChar2_entry, @object
GHC.IO.Handle.Text.hGetChar2_entry:
_cbagE:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _cbagF
_cbagG:
	movq $block_cbadg_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbadg
_cbadh:
	movq (%rbx),%rax
	jmp *(%rax)
_cbagF:
	movl $GHC.IO.Handle.Text.hGetChar2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetChar2_entry, .-GHC.IO.Handle.Text.hGetChar2_entry


==================== Asm code ====================
2018-03-16 16:06:03.519587286 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar2_info
.type GHC.IO.Handle.Text.hGetChar2_info, @object
GHC.IO.Handle.Text.hGetChar2_info:
	.quad	GHC.IO.Handle.Text.hGetChar2_entry
	.quad	0
	.quad	30064771086
	.quad	8589934597
	.quad	Sb7vQ_srt+72


==================== Asm code ====================
2018-03-16 16:06:03.520328896 UTC

.section .text
.align 8
_cbadg:
_cbadg:
	movq $block_cbadl_info,-24(%rbp)
	movq %rbx,%rax
	movq 71(%rbx),%rcx
	movq 111(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rcx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbadl
_cbadm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbadg, .-_cbadg


==================== Asm code ====================
2018-03-16 16:06:03.520910573 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbadg_info:
	.quad	_cbadg
	.quad	0
	.quad	12884901918
	.quad	Sb7vQ_srt+72


==================== Asm code ====================
2018-03-16 16:06:03.522001161 UTC

.section .text
.align 8
_cbadl:
_cbadl:
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	cmpq %rcx,%rax
	je _cbahB
_cbahv:
	movq 7(%rbx),%rdx
	movq %rdx,-40(%rbp)
	movq 15(%rbx),%rdx
	movq %rdx,-32(%rbp)
	movq 31(%rbx),%rdx
	movq %rdx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	addq $-40,%rbp
	jmp _sb72b
_cbahB:
	movq $block_cbahy_info,(%rbp)
	movq %rbx,%rsi
	movq 24(%rbp),%r14
	jmp GHC.IO.Handle.Internals.hLookAhead_2_entry
	.size _cbadl, .-_cbadl


==================== Asm code ====================
2018-03-16 16:06:03.522651698 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbadl_info:
	.quad	_cbadl
	.quad	3
	.quad	12884901918
	.quad	Sb7vQ_srt+72


==================== Asm code ====================
2018-03-16 16:06:03.523315854 UTC

.section .text
.align 8
_cbahy:
_cbahy:
	movq $block_cbahA_info,(%rbp)
	testb $7,%bl
	jne _cbahA
_cbahD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbahy, .-_cbahy


==================== Asm code ====================
2018-03-16 16:06:03.523838437 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbahy_info:
	.quad	_cbahy
	.quad	3
	.quad	12884901918
	.quad	Sb7vQ_srt+72


==================== Asm code ====================
2018-03-16 16:06:03.524500508 UTC

.section .text
.align 8
_cbahA:
_cbahA:
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 31(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 47(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp _sb72b
	.size _cbahA, .-_cbahA


==================== Asm code ====================
2018-03-16 16:06:03.525124767 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbahA_info:
	.quad	_cbahA
	.quad	3
	.quad	12884901918
	.quad	Sb7vQ_srt+72


==================== Asm code ====================
2018-03-16 16:06:03.525883248 UTC

.section .text
.align 8
_sb72b:
_sb72b:
	movq 56(%rbp),%rax
	movq 24(%rbp),%rbx
	movq 40(%rbp),%rcx
	movl (%rcx,%rbx,4),%ecx
	movq $block_cbadz_info,-8(%rbp)
	movq %rbx,%rdx
	movq %rax,%rbx
	leaq 1(%rdx),%rax
	movq %rax,24(%rbp)
	movq %rcx,56(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbadz
_cbadA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sb72b, .-_sb72b


==================== Asm code ====================
2018-03-16 16:06:03.527227637 UTC

.section .text
.align 8
_cbadz:
_cbadz:
	movq 56(%rbp),%rax
	movq 48(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq 16(%rbp),%rsi
	movq 24(%rbp),%rdi
	movq 40(%rbp),%r8
	movq 64(%rbp),%r9
	movq 32(%rbp),%r10
	movq %rbx,%r11
	andl $7,%r11d
	cmpq $1,%r11
	je _cbagP
_cbagT:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cbagW
_cbagV:
	cmpq $13,%r9
	je _cbahr
_cbah2:
	movq $sat_sb72v_info,-72(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r10,-16(%r12)
	leaq -72(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	movq %r9,%rbx
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.Types.C#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbahq:
	movq $GHC.IO.Buffer.Buffer_con_info,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdi,-40(%r12)
	movq $0,-32(%r12)
	movq $0,-24(%r12)
	leaq -71(%r12),%rax
	addq $-24,%r12
	movq %rcx,64(%rbp)
	movq %rdx,48(%rbp)
	movq %rsi,40(%rbp)
	movq %rdi,32(%rbp)
	movq $0,24(%rbp)
	movq $0,16(%rbp)
	movq %rax,8(%rbp)
	jmp _cbaer
_cbahr:
	cmpq %r8,%r10
	je _cbahq
_cbahp:
	movq $GHC.IO.Buffer.Buffer_con_info,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r10,-32(%r12)
	movq %r8,-24(%r12)
	leaq -71(%r12),%rax
	addq $-24,%r12
	movq %rax,8(%rbp)
	movq %r8,16(%rbp)
	movq %r10,24(%rbp)
	movq %rdi,32(%rbp)
	movq %rsi,40(%rbp)
	movq %rdx,48(%rbp)
	movq %rcx,64(%rbp)
	jmp _cbaer
_cbagW:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
_cbagP:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cbagW
_cbagR:
	movq $sat_sb72q_info,-72(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r10,-16(%r12)
	leaq -72(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	movq %r9,%rbx
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.Types.C#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbadz, .-_cbadz


==================== Asm code ====================
2018-03-16 16:06:03.528325854 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbadz_info:
	.quad	_cbadz
	.quad	12041
	.quad	12884901918
	.quad	Sb7vQ_srt+72


==================== Asm code ====================
2018-03-16 16:06:03.529378833 UTC

.section .text
.align 8
_cbaer:
_cbaer:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbah5
_cbah4:
	movq 64(%rbp),%rax
	movq 48(%rbp),%rbx
	movq 40(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 24(%rbp),%rsi
	movq 16(%rbp),%rdi
	movq 8(%rbp),%r8
	cmpq %rdi,%rsi
	je _cbahb
_cbaha:
	movq 56(%rbp),%r9
	movl (%rax,%rsi,4),%r10d
	cmpq $10,%r10
	je _cbah8
_cbah7:
	movq %r8,8(%r9)
	subq $8,%rsp
	movq %r13,%rax
	movq %r9,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $-72,%r12
	movl $GHC.IO.Handle.Text.hGetChar5_closure+1,%ebx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbahb:
	movq $sat_sb73b_info,-64(%r12)
	movq 72(%rbp),%r9
	movq %r9,-56(%r12)
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq %r8,-32(%r12)
	movq %rax,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	movq $block_cbag0_info,(%rbp)
	movl $GHC.IO.Handle.Text.hGetChar3_closure+2,%r14d
	leaq -63(%r12),%rbx
	jmp stg_catch#
_cbah8:
	movq $sat_sb72P_info,-64(%r12)
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rax,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,8(%r9)
	subq $8,%rsp
	movq %r13,%rax
	movq %r9,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $-8,%r12
	movl $GHC.IO.Handle.Text.hGetChar4_closure+1,%ebx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbah5:
	movq $72,904(%r13)
	movq $block_cbaer_info,(%rbp)
	jmp stg_gc_noregs
	.size _cbaer, .-_cbaer


==================== Asm code ====================
2018-03-16 16:06:03.530280337 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaer_info:
	.quad	_cbaer
	.quad	9097
	.quad	12884901918
	.quad	Sb7vQ_srt+72


==================== Asm code ====================
2018-03-16 16:06:03.530937707 UTC

.section .text
.align 8
_cbag0:
_cbag0:
	movq $block_cbag2_info,(%rbp)
	testb $7,%bl
	jne _cbag2
_cbag3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbag0, .-_cbag0


==================== Asm code ====================
2018-03-16 16:06:03.531550666 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbag0_info:
	.quad	_cbag0
	.quad	26505
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.532536638 UTC

.section .text
.align 8
_cbag2:
_cbag2:
	movq 56(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbahg
_cbahh:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbahk
_cbahj:
	movq 24(%rbp),%rcx
	movq 6(%rbx),%rbx
	movq 64(%rbp),%rdx
	movl (%rdx,%rcx,4),%edx
	cmpq $10,%rdx
	je _cbahn
_cbahm:
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $-32,%r12
	movl $GHC.IO.Handle.Text.hGetChar5_closure+1,%ebx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbahn:
	movq $sat_sb73x_info,-24(%r12)
	movq %rbx,-8(%r12)
	movq %rcx,(%r12)
	leaq -24(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.IO.Handle.Text.hGetChar4_closure+1,%ebx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbahk:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_cbahg:
	movq 8(%rbp),%rcx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rax,%rsi
	movq %rcx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.IO.Handle.Text.hGetChar5_closure+1,%ebx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbag2, .-_cbag2


==================== Asm code ====================
2018-03-16 16:06:03.533680991 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbag2_info:
	.quad	_cbag2
	.quad	26505
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.536025165 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar1_closure
.type GHC.IO.Handle.Text.hGetChar1_closure, @object
GHC.IO.Handle.Text.hGetChar1_closure:
	.quad	GHC.IO.Handle.Text.hGetChar1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.536674656 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetChar1_entry
.type GHC.IO.Handle.Text.hGetChar1_entry, @object
GHC.IO.Handle.Text.hGetChar1_entry:
_cbakp:
	movl $GHC.IO.Handle.Text.hGetChar2_closure+2,%edi
	movq %r14,%rsi
	movl $GHC.IO.Handle.Text.hGetChar6_closure,%r14d
	jmp GHC.IO.Handle.Internals.wantReadableHandle_1_entry
	.size GHC.IO.Handle.Text.hGetChar1_entry, .-GHC.IO.Handle.Text.hGetChar1_entry


==================== Asm code ====================
2018-03-16 16:06:03.537291223 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar1_info
.type GHC.IO.Handle.Text.hGetChar1_info, @object
GHC.IO.Handle.Text.hGetChar1_info:
	.quad	GHC.IO.Handle.Text.hGetChar1_entry
	.quad	0
	.quad	30064771086
	.quad	8589934597
	.quad	Sb7vQ_srt+88


==================== Asm code ====================
2018-03-16 16:06:03.539817679 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar_closure
.type GHC.IO.Handle.Text.hGetChar_closure, @object
GHC.IO.Handle.Text.hGetChar_closure:
	.quad	GHC.IO.Handle.Text.hGetChar_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.540436862 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetChar_entry
.type GHC.IO.Handle.Text.hGetChar_entry, @object
GHC.IO.Handle.Text.hGetChar_entry:
_cbakA:
	jmp GHC.IO.Handle.Text.hGetChar1_entry
	.size GHC.IO.Handle.Text.hGetChar_entry, .-GHC.IO.Handle.Text.hGetChar_entry


==================== Asm code ====================
2018-03-16 16:06:03.541019802 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar_info
.type GHC.IO.Handle.Text.hGetChar_info, @object
GHC.IO.Handle.Text.hGetChar_info:
	.quad	GHC.IO.Handle.Text.hGetChar_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	Sb7vQ_srt+112


==================== Asm code ====================
2018-03-16 16:06:03.542712698 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf3_closure
.type GHC.IO.Handle.Text.hGetBuf3_closure, @object
GHC.IO.Handle.Text.hGetBuf3_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.550442352 UTC

.section .data
.align 8
.align 1
$wunpack_nl_rb6WF_closure:
	.quad	$wunpack_nl_rb6WF_info


==================== Asm code ====================
2018-03-16 16:06:03.551112886 UTC

.section .text
.align 8
$wunpack_nl_rb6WF_slow:
_cbakJ:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp $wunpack_nl_rb6WF_entry
	.size $wunpack_nl_rb6WF_slow, .-$wunpack_nl_rb6WF_slow


==================== Asm code ====================
2018-03-16 16:06:03.552335887 UTC

.section .text
.align 8
$wunpackRB_sb73Z_entry:
_cbaly:
_cbakV:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbalC
_cbalB:
	movq 13(%rbx),%rax
	cmpq %rax,%rsi
	jge _cbalw
_cbalx:
	addq $-40,%r12
	movq %r14,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cbalC:
	movq $40,904(%r13)
	jmp *-8(%r13)
_cbalE:
	movq $GHC.Types.C#_con_info,-32(%r12)
	movq %rdx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	decq %rsi
	leaq -14(%r12),%rax
_nbamz:
	movq %rax,%r14
	jmp _cbakV
_cbalG:
	movq $:_con_info,-32(%r12)
	movq $GHC.IO.Handle.Text.hGetChar4_closure+1,-24(%r12)
	movq %r14,-16(%r12)
	leaq -30(%r12),%rax
	addq $-16,%r12
	decq %rsi
_nbamA:
	movq %rax,%r14
	jmp _cbakV
_cbalw:
	movq 5(%rbx),%rcx
	movl (%rcx,%rsi,4),%edx
	cmpq $10,%rdx
	jne _cbalE
_cbalL:
	cmpq %rax,%rsi
	jle _cbalG
_cbalK:
	leaq -1(%rsi),%rax
	cmpl $13,(%rcx,%rax,4)
	je _cbalJ
_cbalI:
	movq $:_con_info,-32(%r12)
	movq $GHC.IO.Handle.Text.hGetChar4_closure+1,-24(%r12)
	movq %r14,-16(%r12)
	leaq -30(%r12),%rax
	addq $-16,%r12
	decq %rsi
_nbamB:
	movq %rax,%r14
	jmp _cbakV
_cbalJ:
	movq $:_con_info,-32(%r12)
	movq $GHC.IO.Handle.Text.hGetChar4_closure+1,-24(%r12)
	movq %r14,-16(%r12)
	leaq -30(%r12),%rax
	addq $-16,%r12
	addq $-2,%rsi
_nbamC:
	movq %rax,%r14
	jmp _cbakV
	.size $wunpackRB_sb73Z_entry, .-$wunpackRB_sb73Z_entry


==================== Asm code ====================
2018-03-16 16:06:03.553287213 UTC

.section .data.rel.ro
.align 8
.align 1
$wunpackRB_sb73Z_info:
	.quad	$wunpackRB_sb73Z_entry
	.quad	8589934592
	.quad	13
	.quad	12884901902


==================== Asm code ====================
2018-03-16 16:06:03.554313107 UTC

.section .text
.align 8
$wunpack_nl_rb6WF_entry:
_cbalP:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbalQ
_cbalR:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbalT
_cbalS:
	cmpq %r8,%rdi
	je _cbalO
_cbalN:
	leaq -1(%r8),%rax
	movl (%r14,%rax,4),%eax
	movq $$wunpackRB_sb73Z_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	leaq -13(%r12),%rbx
	cmpq $13,%rax
	je _cbaml
_cbam5:
	movq $block_cbalZ_info,-24(%rbp)
	movq %rsi,%rax
	leaq -1(%r8),%rsi
	movq %r9,%r14
	movq %rax,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-24,%rbp
	jmp $wunpackRB_sb73Z_entry
_cbaml:
	movq $block_cbamd_info,-24(%rbp)
	movq %rsi,%rax
	leaq -2(%r8),%rsi
	movq %r9,%r14
	movq %rax,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-24,%rbp
	jmp $wunpackRB_sb73Z_entry
_cbalT:
	movq $24,904(%r13)
_cbalQ:
	movl $$wunpack_nl_rb6WF_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
_cbalO:
	movq $(,)_con_info,-16(%r12)
	movq %r9,-8(%r12)
	movq $GHC.IO.Handle.Text.hGetBuf3_closure+1,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wunpack_nl_rb6WF_entry, .-$wunpack_nl_rb6WF_entry


==================== Asm code ====================
2018-03-16 16:06:03.555159145 UTC

.section .data.rel.ro
.align 8
.align 1
$wunpack_nl_rb6WF_info:
	.quad	$wunpack_nl_rb6WF_entry
	.quad	0
	.quad	14
	.quad	25769803776
	.quad	0
	.quad	837
	.quad	$wunpack_nl_rb6WF_slow


==================== Asm code ====================
2018-03-16 16:06:03.555895298 UTC

.section .text
.align 8
_cbamd:
_cbamd:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbamo
_cbamn:
	movq 16(%rbp),%rax
	movq $GHC.Types.I#_con_info,-32(%r12)
	decq %rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbamo:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbamd, .-_cbamd


==================== Asm code ====================
2018-03-16 16:06:03.556587159 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbamd_info:
	.quad	_cbamd
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.557725693 UTC

.section .text
.align 8
_cbalZ:
_cbalZ:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbam8
_cbam7:
	movq 16(%rbp),%rax
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbam8:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbalZ, .-_cbalZ


==================== Asm code ====================
2018-03-16 16:06:03.55837244 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbalZ_info:
	.quad	_cbalZ
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.560014703 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.hGetContents4_bytes
.type GHC.IO.Handle.Text.hGetContents4_bytes, @object
GHC.IO.Handle.Text.hGetContents4_bytes:
	.asciz "hGetContents"


==================== Asm code ====================
2018-03-16 16:06:03.562660849 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetContents3_closure
.type GHC.IO.Handle.Text.hGetContents3_closure, @object
GHC.IO.Handle.Text.hGetContents3_closure:
	.quad	GHC.IO.Handle.Text.hGetContents3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.563511775 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetContents3_entry
.type GHC.IO.Handle.Text.hGetContents3_entry, @object
GHC.IO.Handle.Text.hGetContents3_entry:
_cban2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cban3
_cban4:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cban1
_cban0:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Text.hGetContents4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cban3:
	jmp *-16(%r13)
_cban1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.hGetContents3_entry, .-GHC.IO.Handle.Text.hGetContents3_entry


==================== Asm code ====================
2018-03-16 16:06:03.564197932 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetContents3_info
.type GHC.IO.Handle.Text.hGetContents3_info, @object
GHC.IO.Handle.Text.hGetContents3_info:
	.quad	GHC.IO.Handle.Text.hGetContents3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:03.565899919 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl3_rb6WG_bytes:
	.asciz "\015"


==================== Asm code ====================
2018-03-16 16:06:03.568285414 UTC

.section .data
.align 8
.align 1
lvl4_rb6WH_closure:
	.quad	lvl4_rb6WH_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.569068155 UTC

.section .text
.align 8
lvl4_rb6WH_entry:
_cbanj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbank
_cbanl:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbani
_cbanh:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl3_rb6WG_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbank:
	jmp *-16(%r13)
_cbani:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl4_rb6WH_entry, .-lvl4_rb6WH_entry


==================== Asm code ====================
2018-03-16 16:06:03.569977856 UTC

.section .data.rel.ro
.align 8
.align 1
lvl4_rb6WH_info:
	.quad	lvl4_rb6WH_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:03.575007919 UTC

.section .data
.align 8
.align 1
$wlvl_rb6WI_closure:
	.quad	$wlvl_rb6WI_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.575788218 UTC

.section .text
.align 8
sat_sb74S_entry:
_cbanI:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbanJ
_cbanK:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbanB_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbanB
_cbanC:
	movq (%rbx),%rax
	jmp *(%rax)
_cbanJ:
	jmp *-16(%r13)
	.size sat_sb74S_entry, .-sat_sb74S_entry


==================== Asm code ====================
2018-03-16 16:06:03.576458045 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb74S_info:
	.quad	sat_sb74S_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:06:03.577223187 UTC

.section .text
.align 8
_cbanB:
_cbanB:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbanF
_cbanG:
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cbanF:
	movq 8(%rbp),%rax
	movq $block_cbanN_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cbanN
_cbanP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbanB, .-_cbanB


==================== Asm code ====================
2018-03-16 16:06:03.577929466 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbanB_info:
	.quad	_cbanB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.578699045 UTC

.section .text
.align 8
_cbanN:
_cbanN:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbanV
_cbao2:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbao5
_cbao4:
	movq 6(%rbx),%rax
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbao5:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_cbanV:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbao5
_cbanX:
	movq 7(%rbx),%rax
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbanN, .-_cbanN


==================== Asm code ====================
2018-03-16 16:06:03.579928008 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbanN_info:
	.quad	_cbanN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.580747043 UTC

.section .text
.align 8
$wlvl_rb6WI_entry:
_cbaoe:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cbaoi
_cbaoh:
	movq $sat_sb74S_info,-96(%r12)
	movq %r14,-80(%r12)
	movq %r9,-72(%r12)
	movq $GHC.Base.Just_con_info,-64(%r12)
	movq %r14,-56(%r12)
	movq $GHC.IO.Exception.IOError_con_info,-48(%r12)
	leaq -62(%r12),%rax
	movq %rax,-40(%r12)
	movq %rsi,-32(%r12)
	movq $GHC.IO.Handle.Text.hGetContents3_closure,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rsi
	movl $GHC.IO.Exception.$fExceptionIOException_closure,%r14d
	jmp GHC.Exception.throw_entry
_cbaoi:
	movq $104,904(%r13)
	movl $$wlvl_rb6WI_closure,%ebx
	jmp *-8(%r13)
	.size $wlvl_rb6WI_entry, .-$wlvl_rb6WI_entry


==================== Asm code ====================
2018-03-16 16:06:03.581937512 UTC

.section .data.rel.ro
.align 8
.align 1
$wlvl_rb6WI_info:
	.quad	$wlvl_rb6WI_entry
	.quad	0
	.quad	30064771086
	.quad	21474836505
	.quad	Sb7vQ_srt+120


==================== Asm code ====================
2018-03-16 16:06:03.583558346 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl5_rb6WJ_bytes:
	.asciz "delayed read on closed handle"


==================== Asm code ====================
2018-03-16 16:06:03.586162107 UTC

.section .data
.align 8
.align 1
lvl6_rb6WK_closure:
	.quad	lvl6_rb6WK_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.586949226 UTC

.section .text
.align 8
lvl6_rb6WK_entry:
_cbaoQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaoR
_cbaoS:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbaoP
_cbaoO:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl5_rb6WJ_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbaoR:
	jmp *-16(%r13)
_cbaoP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl6_rb6WK_entry, .-lvl6_rb6WK_entry


==================== Asm code ====================
2018-03-16 16:06:03.587625747 UTC

.section .data.rel.ro
.align 8
.align 1
lvl6_rb6WK_info:
	.quad	lvl6_rb6WK_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:03.590930857 UTC

.section .data
.align 8
.align 1
lvl7_rb6WL_closure:
	.quad	lvl7_rb6WL_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.5917535 UTC

.section .text
.align 8
sat_sb74Y_entry:
_cbapa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbapb
_cbapc:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbape
_cbapd:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $GHC.Base.Just_con_info,-64(%r12)
	movq %rax,-56(%r12)
	movq $GHC.IO.Exception.IOError_con_info,-48(%r12)
	leaq -62(%r12),%rax
	movq %rax,-40(%r12)
	movq $GHC.IO.Exception.IllegalOperation_closure+1,-32(%r12)
	movq $GHC.IO.Handle.Text.hGetContents3_closure,-24(%r12)
	movq $lvl6_rb6WK_closure,-16(%r12)
	movq $GHC.Base.Nothing_closure+1,-8(%r12)
	movq $GHC.Base.Nothing_closure+1,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_cbape:
	movq $72,904(%r13)
_cbapb:
	jmp *-16(%r13)
	.size sat_sb74Y_entry, .-sat_sb74Y_entry


==================== Asm code ====================
2018-03-16 16:06:03.592477879 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb74Y_info:
	.quad	sat_sb74Y_entry
	.quad	1
	.quad	1407379178520592
	.quad	Sb7vQ_srt


==================== Asm code ====================
2018-03-16 16:06:03.59319785 UTC

.section .text
.align 8
lvl7_rb6WL_entry:
_cbapf:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbapj
_cbapi:
	movq $sat_sb74Y_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	jmp stg_raiseIO#
_cbapj:
	movq $24,904(%r13)
	movl $lvl7_rb6WL_closure,%ebx
	jmp *-8(%r13)
	.size lvl7_rb6WL_entry, .-lvl7_rb6WL_entry


==================== Asm code ====================
2018-03-16 16:06:03.594103472 UTC

.section .data.rel.ro
.align 8
.align 1
lvl7_rb6WL_info:
	.quad	lvl7_rb6WL_entry
	.quad	0
	.quad	3659178992205838
	.quad	8589934597
	.quad	Sb7vQ_srt


==================== Asm code ====================
2018-03-16 16:06:03.595775883 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl8_rb6WM_bytes:
	.asciz "illegal handle type"


==================== Asm code ====================
2018-03-16 16:06:03.598204821 UTC

.section .data
.align 8
.align 1
lvl9_rb6WN_closure:
	.quad	lvl9_rb6WN_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.59896245 UTC

.section .text
.align 8
lvl9_rb6WN_entry:
_cbapA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbapB
_cbapC:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbapz
_cbapy:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl8_rb6WM_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbapB:
	jmp *-16(%r13)
_cbapz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl9_rb6WN_entry, .-lvl9_rb6WN_entry


==================== Asm code ====================
2018-03-16 16:06:03.5996366 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_rb6WN_info:
	.quad	lvl9_rb6WN_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:03.602861858 UTC

.section .data
.align 8
.align 1
lvl10_rb6WO_closure:
	.quad	lvl10_rb6WO_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.603715569 UTC

.section .text
.align 8
sat_sb753_entry:
_cbapU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbapV
_cbapW:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbapY
_cbapX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $GHC.Base.Just_con_info,-64(%r12)
	movq %rax,-56(%r12)
	movq $GHC.IO.Exception.IOError_con_info,-48(%r12)
	leaq -62(%r12),%rax
	movq %rax,-40(%r12)
	movq $GHC.IO.Exception.IllegalOperation_closure+1,-32(%r12)
	movq $GHC.IO.Handle.Text.hGetContents3_closure,-24(%r12)
	movq $lvl9_rb6WN_closure,-16(%r12)
	movq $GHC.Base.Nothing_closure+1,-8(%r12)
	movq $GHC.Base.Nothing_closure+1,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_cbapY:
	movq $72,904(%r13)
_cbapV:
	jmp *-16(%r13)
	.size sat_sb753_entry, .-sat_sb753_entry


==================== Asm code ====================
2018-03-16 16:06:03.604460026 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb753_info:
	.quad	sat_sb753_entry
	.quad	1
	.quad	4785078899048464
	.quad	Sb7vQ_srt


==================== Asm code ====================
2018-03-16 16:06:03.605212704 UTC

.section .text
.align 8
lvl10_rb6WO_entry:
_cbapZ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbaq3
_cbaq2:
	movq $sat_sb753_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	jmp stg_raiseIO#
_cbaq3:
	movq $24,904(%r13)
	movl $lvl10_rb6WO_closure,%ebx
	jmp *-8(%r13)
	.size lvl10_rb6WO_entry, .-lvl10_rb6WO_entry


==================== Asm code ====================
2018-03-16 16:06:03.606221102 UTC

.section .data.rel.ro
.align 8
.align 1
lvl10_rb6WO_info:
	.quad	lvl10_rb6WO_entry
	.quad	0
	.quad	13792278153789454
	.quad	8589934597
	.quad	Sb7vQ_srt


==================== Asm code ====================
2018-03-16 16:06:03.633535324 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetContents2_closure
.type GHC.IO.Handle.Text.hGetContents2_closure, @object
GHC.IO.Handle.Text.hGetContents2_closure:
	.quad	GHC.IO.Handle.Text.hGetContents2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.634423594 UTC

.section .text
.align 8
sat_sb77n_entry:
_cbarb:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cbarc
_cbard:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbar9_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	jmp stg_ap_0_fast
_cbarc:
	jmp *-16(%r13)
	.size sat_sb77n_entry, .-sat_sb77n_entry


==================== Asm code ====================
2018-03-16 16:06:03.635097344 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb77n_info:
	.quad	sat_sb77n_entry
	.quad	3
	.quad	141733920783
	.quad	Sb7vQ_srt+136


==================== Asm code ====================
2018-03-16 16:06:03.635776289 UTC

.section .text
.align 8
_cbar9:
_cbar9:
	movq $block_cbarg_info,-24(%rbp)
	movq 31(%rbx),%rax
	movq 39(%rbx),%rcx
	movq 47(%rbx),%rdx
	movq 15(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbarg
_cbari:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbar9, .-_cbar9


==================== Asm code ====================
2018-03-16 16:06:03.636422852 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbar9_info:
	.quad	_cbar9
	.quad	2
	.quad	141733920798
	.quad	Sb7vQ_srt+136


==================== Asm code ====================
2018-03-16 16:06:03.637188759 UTC

.section .text
.align 8
_cbarg:
_cbarg:
	movq -1(%rbx),%rax
	cmpl $4,20(%rax)
	je _cbart
_cbaro:
	movq 16(%rbp),%r9
	movq 8(%rbp),%r8
	movq 24(%rbp),%rdi
	movq %rbx,%rsi
	movq 32(%rbp),%r14
	addq $48,%rbp
	jmp $wlvl_rb6WI_entry
_cbart:
	movq 40(%rbp),%rax
	movq $block_cbarr_info,40(%rbp)
	movq %rax,%rbx
	addq $40,%rbp
	testb $7,%bl
	jne _cbarr
_cbaru:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbarg, .-_cbarg


==================== Asm code ====================
2018-03-16 16:06:03.637919586 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbarg_info:
	.quad	_cbarg
	.quad	5
	.quad	141733920798
	.quad	Sb7vQ_srt+136


==================== Asm code ====================
2018-03-16 16:06:03.63862685 UTC

.section .text
.align 8
_cbarr:
_cbarr:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cbarD
_cbarC:
	movl $lvl4_rb6WH_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cbarD:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbarr, .-_cbarr


==================== Asm code ====================
2018-03-16 16:06:03.640123372 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbarr_info:
	.quad	_cbarr
	.quad	0
	.quad	4294967326
	.quad	Sb7vQ_srt+176


==================== Asm code ====================
2018-03-16 16:06:03.640915193 UTC

.section .text
.align 8
sat_sb77p_entry:
_cbarH:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbarI
_cbarJ:
	movq $block_cbaqK_info,-32(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rax,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbaqK
_cbaqL:
	movq (%rbx),%rax
	jmp *(%rax)
_cbarI:
	jmp *-8(%r13)
	.size sat_sb77p_entry, .-sat_sb77p_entry


==================== Asm code ====================
2018-03-16 16:06:03.641685967 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb77p_info:
	.quad	sat_sb77p_entry
	.quad	3
	.quad	426623396478984
	.quad	8589934597
	.quad	Sb7vQ_srt+56


==================== Asm code ====================
2018-03-16 16:06:03.642345033 UTC

.section .text
.align 8
_cbaqK:
_cbaqK:
	movq $block_cbaqP_info,-16(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.Exception.$p1Exception_entry
	.size _cbaqK, .-_cbaqK


==================== Asm code ====================
2018-03-16 16:06:03.642954148 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaqK_info:
	.quad	_cbaqK
	.quad	3
	.quad	426623396479006
	.quad	Sb7vQ_srt+56


==================== Asm code ====================
2018-03-16 16:06:03.643564532 UTC

.section .text
.align 8
_cbaqP:
_cbaqP:
	movq $block_cbaqT_info,(%rbp)
	movl $GHC.IO.Exception.$fExceptionIOException4_closure,%esi
	movq %rbx,%r14
	jmp Data.Typeable.Internal.sameTypeRep_entry
	.size _cbaqP, .-_cbaqP


==================== Asm code ====================
2018-03-16 16:06:03.644112858 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaqP_info:
	.quad	_cbaqP
	.quad	5
	.quad	426623396479006
	.quad	Sb7vQ_srt+56


==================== Asm code ====================
2018-03-16 16:06:03.644830443 UTC

.section .text
.align 8
_cbaqT:
_cbaqT:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbarP
_cbarS:
	movq $block_cbaqY_info,(%rbp)
	movq 32(%rbp),%r14
	jmp GHC.IO.Handle.Internals.hClose_help1_entry
_cbarP:
	movq 16(%rbp),%rbx
	addq $48,%rbp
	jmp stg_raiseIO#
	.size _cbaqT, .-_cbaqT


==================== Asm code ====================
2018-03-16 16:06:03.645470956 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaqT_info:
	.quad	_cbaqT
	.quad	5
	.quad	416611827742
	.quad	Sb7vQ_srt+136


==================== Asm code ====================
2018-03-16 16:06:03.646139477 UTC

.section .text
.align 8
_cbaqY:
_cbaqY:
	movq $block_cbar0_info,(%rbp)
	testb $7,%bl
	jne _cbar0
_cbar1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbaqY, .-_cbaqY


==================== Asm code ====================
2018-03-16 16:06:03.646756894 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaqY_info:
	.quad	_cbaqY
	.quad	645
	.quad	141733920798
	.quad	Sb7vQ_srt+136


==================== Asm code ====================
2018-03-16 16:06:03.647491835 UTC

.section .text
.align 8
_cbar0:
_cbar0:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cbarW
_cbarV:
	movq 7(%rbx),%rax
	movq $sat_sb77n_info,-56(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	movq %rax,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbarW:
	movq $64,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbar0, .-_cbar0


==================== Asm code ====================
2018-03-16 16:06:03.648163996 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbar0_info:
	.quad	_cbar0
	.quad	645
	.quad	141733920798
	.quad	Sb7vQ_srt+136


==================== Asm code ====================
2018-03-16 16:06:03.648921667 UTC

.section .text
.align 8
sat_sb76m_entry:
_cbasX:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cbasY
_cbasZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbasU_info,-64(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 32(%rbx),%rbx
	movq %rdx,-56(%rbp)
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _cbasU
_cbasV:
	movq (%rbx),%rax
	jmp *(%rax)
_cbasY:
	jmp *-16(%r13)
	.size sat_sb76m_entry, .-sat_sb76m_entry


==================== Asm code ====================
2018-03-16 16:06:03.64988654 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb76m_info:
	.quad	sat_sb76m_entry
	.quad	12884901891
	.quad	15


==================== Asm code ====================
2018-03-16 16:06:03.650707592 UTC

.section .text
.align 8
_cbasU:
_cbasU:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbat4
_cbat3:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq 7(%rbx),%rbx
	cmpq %rdi,%rbx
	je _cbatd
_cbata:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbatd:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbat4:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbasU, .-_cbasU


==================== Asm code ====================
2018-03-16 16:06:03.651457139 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbasU_info:
	.quad	_cbasU
	.quad	1605
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.652227182 UTC

.section .text
.align 8
sat_sb76T_entry:
_cbatf:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _cbatg
_cbath:
	movq $block_cbas5_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbas5
_cbas6:
	movq (%rbx),%rax
	jmp *(%rax)
_cbatg:
	jmp *-8(%r13)
	.size sat_sb76T_entry, .-sat_sb76T_entry


==================== Asm code ====================
2018-03-16 16:06:03.65288902 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb76T_info:
	.quad	sat_sb76T_entry
	.quad	5
	.quad	70373039144968
	.quad	4294967299
	.quad	Sb7vQ_srt+80


==================== Asm code ====================
2018-03-16 16:06:03.653823499 UTC

.section .text
.align 8
_cbas5:
_cbas5:
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq %rcx,%rdx
	subq %rax,%rdx
	testq %rdx,%rdx
	je _cbauh
_ubav3:
	movq 7(%rbx),%rsi
	movq 15(%rbx),%rdi
	movq 23(%rbx),%r8
	movq 31(%rbx),%rbx
	cmpq $1,%rdx
	jne _ubav4
_cbauu:
	movq $block_cbaut_info,-48(%rbp)
	movq %rbx,%rdx
	movq 32(%rbp),%rbx
	movq %rsi,-40(%rbp)
	movq %rdi,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq %r8,(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _cbaut
_cbauw:
	movq (%rbx),%rax
	jmp *(%rax)
_ubav4:
	movq %rsi,-40(%rbp)
	movq %rdi,-32(%rbp)
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq %r8,(%rbp)
	addq $-40,%rbp
	jmp _cbauC
_cbauh:
	movq $block_cbaue_info,(%rbp)
	movq %rbx,%rsi
	movq 16(%rbp),%r14
	jmp GHC.IO.Handle.Internals.hLookAhead_2_entry
	.size _cbas5, .-_cbas5


==================== Asm code ====================
2018-03-16 16:06:03.654612637 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbas5_info:
	.quad	_cbas5
	.quad	4
	.quad	70373039144990
	.quad	Sb7vQ_srt+80


==================== Asm code ====================
2018-03-16 16:06:03.655306566 UTC

.section .text
.align 8
_cbaue:
_cbaue:
	movq $block_cbaug_info,(%rbp)
	testb $7,%bl
	jne _cbaug
_cbauk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbaue, .-_cbaue


==================== Asm code ====================
2018-03-16 16:06:03.655900752 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaue_info:
	.quad	_cbaue
	.quad	4
	.quad	4294967326
	.quad	Sb7vQ_srt+192


==================== Asm code ====================
2018-03-16 16:06:03.65655692 UTC

.section .text
.align 8
_cbaug:
_cbaug:
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 47(%rbx),%rax
	movq %rax,-40(%rbp)
	addq $-40,%rbp
	jmp _sb75E
	.size _cbaug, .-_cbaug


==================== Asm code ====================
2018-03-16 16:06:03.657186663 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaug_info:
	.quad	_cbaug
	.quad	4
	.quad	4294967326
	.quad	Sb7vQ_srt+192


==================== Asm code ====================
2018-03-16 16:06:03.658137434 UTC

.section .text
.align 8
_cbaut:
_cbaut:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubav5
_cbauD:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbauI
_cbauH:
	movq 64(%rbp),%rax
	movq 48(%rbp),%rbx
	movq 8(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq 24(%rbp),%rsi
	movq 32(%rbp),%rdi
	movq 40(%rbp),%r8
	movl (%rbx,%rdi,4),%r9d
	cmpq $13,%r9
	je _cbauU
_cbauM:
	addq $-56,%r12
	movq %r8,8(%rbp)
	movq %rdi,16(%rbp)
	movq %rsi,24(%rbp)
	movq %rdx,32(%rbp)
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	addq $8,%rbp
	jmp _sb75E
_ubav5:
	addq $8,%rbp
	jmp _cbauC
_cbauU:
	movl $13,(%rbx)
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rbx,-24(%r12)
	movq %rsi,-16(%r12)
	movq $0,-8(%r12)
	movq $1,(%r12)
	movq $block_cbauR_info,48(%rbp)
	leaq -47(%r12),%rsi
	movq %rax,%r14
	addq $48,%rbp
	jmp GHC.IO.Handle.Internals.hLookAhead_2_entry
_cbauI:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbaut, .-_cbaut


==================== Asm code ====================
2018-03-16 16:06:03.658942006 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaut_info:
	.quad	_cbaut
	.quad	3850
	.quad	70373039144990
	.quad	Sb7vQ_srt+80


==================== Asm code ====================
2018-03-16 16:06:03.659604892 UTC

.section .text
.align 8
_cbauC:
_cbauC:
	movq 40(%rbp),%rax
	movq %rax,40(%rbp)
	movq 32(%rbp),%rax
	movq (%rbp),%rbx
	movq %rbx,32(%rbp)
	movq 24(%rbp),%rbx
	movq 8(%rbp),%rcx
	movq %rcx,24(%rbp)
	movq 16(%rbp),%rcx
	movq %rcx,16(%rbp)
	movq %rbx,8(%rbp)
	movq %rax,(%rbp)
	jmp _sb75E
	.size _cbauC, .-_cbauC


==================== Asm code ====================
2018-03-16 16:06:03.6603009 UTC

.section .text
.align 8
_cbauR:
_cbauR:
	movq $block_cbauT_info,(%rbp)
	testb $7,%bl
	jne _cbauT
_cbauW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbauR, .-_cbauR


==================== Asm code ====================
2018-03-16 16:06:03.660855853 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbauR_info:
	.quad	_cbauR
	.quad	4
	.quad	4294967326
	.quad	Sb7vQ_srt+192


==================== Asm code ====================
2018-03-16 16:06:03.661834147 UTC

.section .text
.align 8
_cbauT:
_cbauT:
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 47(%rbx),%rax
	movq %rax,-40(%rbp)
	addq $-40,%rbp
	jmp _sb75E
	.size _cbauT, .-_cbauT


==================== Asm code ====================
2018-03-16 16:06:03.66245518 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbauT_info:
	.quad	_cbauT
	.quad	4
	.quad	4294967326
	.quad	Sb7vQ_srt+192


==================== Asm code ====================
2018-03-16 16:06:03.663094911 UTC

.section .text
.align 8
_sb75E:
_sb75E:
	movq $block_cbasf_info,-8(%rbp)
	movq 48(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.IO.Handle.Text.hGetContents2_entry
	.size _sb75E, .-_sb75E


==================== Asm code ====================
2018-03-16 16:06:03.66378477 UTC

.section .text
.align 8
_cbasf:
_cbasf:
	movq $block_cbash_info,(%rbp)
	movq %rbx,%rax
	movq 80(%rbp),%rbx
	movq %rax,80(%rbp)
	testb $7,%bl
	jne _cbash
_cbasi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbasf, .-_cbasf


==================== Asm code ====================
2018-03-16 16:06:03.664385363 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbasf_info:
	.quad	_cbasf
	.quad	6602
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.665407516 UTC

.section .text
.align 8
_cbash:
_cbash:
	movq 48(%rbp),%rax
	movq 40(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq 8(%rbp),%rsi
	movq 80(%rbp),%rdi
	movq %rbx,%r8
	andl $7,%r8d
	cmpq $1,%r8
	je _cbatm
_cbatW:
	movq $block_cbasJ_info,(%rbp)
	movq %rdi,%r9
	movq %rsi,%r8
	movq %rdx,%rdi
	movq %rcx,%rsi
	movq %rax,%r14
	jmp $wunpack_nl_rb6WF_entry
_cbatQ:
	movq $GHC.IO.Buffer.Buffer_con_info,-72(%r12)
	movq %rcx,-64(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq 24(%rbp),%rax
	movq %rax,-40(%r12)
	movq $0,-32(%r12)
	movq $0,-24(%r12)
	movq 64(%rbp),%rax
	movq 72(%rbp),%rbx
	leaq -71(%r12),%rcx
	movq %rcx,8(%rbx)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rbx,%rsi
	movq %rdi,%rbx
	movq %rcx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $(,)_con_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $88,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbatm:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cbatp
_cbato:
	cmpq %rsi,%rdx
	je _cbatQ
_cbatJ:
	addq $-80,%r12
	leaq -1(%rsi),%rax
	movq %rax,56(%rbp)
	movq %rdi,80(%rbp)
	addq $8,%rbp
	jmp _cbasw
_cbatp:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbash, .-_cbash


==================== Asm code ====================
2018-03-16 16:06:03.666277265 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbash_info:
	.quad	_cbash
	.quad	6602
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.667047815 UTC

.section .text
.align 8
_cbasw:
_cbasw:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbatE
_cbatD:
	movq 72(%rbp),%rax
	movq 48(%rbp),%rbx
	cmpq 8(%rbp),%rbx
	jge _cbatG
_cbatH:
	addq $-40,%r12
	movq %rax,72(%rbp)
	addq $16,%rbp
	jmp _cbatr
_cbatG:
	movq $GHC.Types.C#_con_info,-32(%r12)
	movq 40(%rbp),%rcx
	movl (%rcx,%rbx,4),%ecx
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rax
	movq %rax,72(%rbp)
	leaq -1(%rbx),%rax
	movq %rax,48(%rbp)
	jmp _cbasw
_cbatE:
	movq $40,904(%r13)
	movq $block_cbasw_info,(%rbp)
	jmp stg_gc_noregs
	.size _cbasw, .-_cbasw


==================== Asm code ====================
2018-03-16 16:06:03.667765742 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbasw_info:
	.quad	_cbasw
	.quad	3273
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.668592652 UTC

.section .text
.align 8
_cbatr:
_cbatr:
	addq $80,%r12
	movq 56(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cbatB
_cbatA:
	movq 40(%rbp),%rbx
	movq 48(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 16(%rbp),%rsi
	movq 8(%rbp),%rdi
	movq (%rbp),%r8
	movq $GHC.IO.Buffer.Buffer_con_info,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %rdx,-48(%r12)
	movq %r8,-40(%r12)
	movq $0,-32(%r12)
	movq $0,-24(%r12)
	leaq -71(%r12),%rdx
	movq %rdx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rdx
	movq %rcx,%rsi
	movq %rdx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbatB:
	movq $80,904(%r13)
	movq $block_cbatq_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unpt_r1
	.size _cbatr, .-_cbatr


==================== Asm code ====================
2018-03-16 16:06:03.669447874 UTC

.section .text
.align 8
_cbatq:
_cbatq:
	movq %rbx,64(%rbp)
	addq $8,%rbp
	jmp _cbatr
	.size _cbatq, .-_cbatq


==================== Asm code ====================
2018-03-16 16:06:03.670049473 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbatq_info:
	.quad	_cbatq
	.quad	9800
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.670730563 UTC

.section .text
.align 8
_cbasJ:
_cbasJ:
	movq $block_cbasL_info,(%rbp)
	testb $7,%bl
	jne _cbasL
_cbasM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbasJ, .-_cbasJ


==================== Asm code ====================
2018-03-16 16:06:03.671896111 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbasJ_info:
	.quad	_cbasJ
	.quad	39370
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.672802476 UTC

.section .text
.align 8
_cbasL:
_cbasL:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cbau0
_cbatZ:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sb76m_info,-80(%r12)
	movq 40(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-56(%r12)
	movq %rbx,-48(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 64(%rbp),%rbx
	movq 72(%rbp),%rcx
	leaq -80(%r12),%rdx
	movq %rdx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rdx
	movq %rcx,%rsi
	movq %rdx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $88,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbau0:
	movq $88,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbasL, .-_cbasL


==================== Asm code ====================
2018-03-16 16:06:03.673982546 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbasL_info:
	.quad	_cbasL
	.quad	39370
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.674707402 UTC

.section .text
.align 8
act_sb758_entry:
_cbavu:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cbavv
_cbavw:
	movq $block_cbaqt_info,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbaqt
_cbaqu:
	movq (%rbx),%rax
	jmp *(%rax)
_cbavv:
	jmp *-8(%r13)
	.size act_sb758_entry, .-act_sb758_entry


==================== Asm code ====================
2018-03-16 16:06:03.675350413 UTC

.section .data.rel.ro
.align 8
.align 1
act_sb758_info:
	.quad	act_sb758_entry
	.quad	1
	.quad	1077568639860745
	.quad	8589934597
	.quad	Sb7vQ_srt+56


==================== Asm code ====================
2018-03-16 16:06:03.676033323 UTC

.section .text
.align 8
_cbaqt:
_cbaqt:
	movq $block_cbaqy_info,-24(%rbp)
	movq %rbx,%rax
	movq 71(%rbx),%rcx
	movq 111(%rbx),%rdx
	movq 39(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbaqy
_cbaqz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbaqt, .-_cbaqt


==================== Asm code ====================
2018-03-16 16:06:03.676670562 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaqt_info:
	.quad	_cbaqt
	.quad	1
	.quad	1077568639860766
	.quad	Sb7vQ_srt+56


==================== Asm code ====================
2018-03-16 16:06:03.677502493 UTC

.section .text
.align 8
_cbaqy:
_cbaqy:
	movq 32(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbavE
_ubavK:
	cmpq $2,%rcx
	je _cbavF
_cbavB:
	movq %rax,%r14
	addq $40,%rbp
	jmp lvl10_rb6WO_entry
_cbavI:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
_cbavF:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cbavI
_cbavH:
	movq 8(%rbp),%rbx
	movq 8(%rbx),%rcx
	movq $sat_sb77p_info,-72(%r12)
	movq %rax,-64(%r12)
	movq 24(%rbp),%rdx
	movq %rdx,-56(%r12)
	movq %rcx,-48(%r12)
	movq $sat_sb76T_info,-40(%r12)
	movq %rax,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -70(%r12),%r14
	leaq -39(%r12),%rbx
	addq $40,%rbp
	jmp stg_catch#
_cbavE:
	movq %rax,%r14
	addq $40,%rbp
	jmp lvl7_rb6WL_entry
	.size _cbaqy, .-_cbaqy


==================== Asm code ====================
2018-03-16 16:06:03.678275758 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaqy_info:
	.quad	_cbaqy
	.quad	4
	.quad	1077568639860766
	.quad	Sb7vQ_srt+56


==================== Asm code ====================
2018-03-16 16:06:03.678946127 UTC

.section .text
.align 8
sat_sb77w_entry:
_cbavU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbavV
_cbavW:
	movq $block_cbaqm_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_noDuplicate#
_cbavV:
	jmp *-8(%r13)
	.size sat_sb77w_entry, .-sat_sb77w_entry


==================== Asm code ====================
2018-03-16 16:06:03.679577698 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb77w_info:
	.quad	sat_sb77w_entry
	.quad	1
	.quad	2205667569958921
	.quad	4294967299
	.quad	Sb7vQ_srt+56


==================== Asm code ====================
2018-03-16 16:06:03.680283367 UTC

.section .text
.align 8
_cbaqm:
_cbaqm:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbavZ
_cbavY:
	movq $act_sb758_info,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_cbavN_info,(%rbp)
	movq %rax,%rbx
	leaq -6(%r12),%rax
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cbavN
_cbavO:
	movq (%rbx),%rax
	jmp *(%rax)
_cbavZ:
	movq $16,904(%r13)
	jmp stg_gc_noregs
	.size _cbaqm, .-_cbaqm


==================== Asm code ====================
2018-03-16 16:06:03.680960594 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaqm_info:
	.quad	_cbaqm
	.quad	1
	.quad	2205667569958942
	.quad	Sb7vQ_srt+56


==================== Asm code ====================
2018-03-16 16:06:03.681704177 UTC

.section .text
.align 8
_cbavN:
_cbavN:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbavR
_cbavS:
	movq %rax,%r8
	movq 14(%rbx),%rdi
	movq %rbx,%rsi
	movl $GHC.IO.Handle.Text.hGetContents3_closure,%r14d
	addq $16,%rbp
	jmp GHC.IO.Handle.Internals.$wwithHandle'_entry
_cbavR:
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq %rbx,%rsi
	movl $GHC.IO.Handle.Text.hGetContents3_closure,%r14d
	addq $16,%rbp
	jmp GHC.IO.Handle.Internals.$wwithHandle'_entry
	.size _cbavN, .-_cbavN


==================== Asm code ====================
2018-03-16 16:06:03.682334097 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbavN_info:
	.quad	_cbavN
	.quad	1
	.quad	2203318222878
	.quad	Sb7vQ_srt+128


==================== Asm code ====================
2018-03-16 16:06:03.683025096 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetContents2_entry
.type GHC.IO.Handle.Text.hGetContents2_entry, @object
GHC.IO.Handle.Text.hGetContents2_entry:
_cbaw7:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbawb
_cbawa:
	movq $sat_sb77w_info,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%r14
	jmp GHC.IO.Unsafe.unsafeDupableInterleaveIO_entry
_cbawb:
	movq $16,904(%r13)
	movl $GHC.IO.Handle.Text.hGetContents2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetContents2_entry, .-GHC.IO.Handle.Text.hGetContents2_entry


==================== Asm code ====================
2018-03-16 16:06:03.683660986 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetContents2_info
.type GHC.IO.Handle.Text.hGetContents2_info, @object
GHC.IO.Handle.Text.hGetContents2_info:
	.quad	GHC.IO.Handle.Text.hGetContents2_entry
	.quad	0
	.quad	2205667569958926
	.quad	8589934597
	.quad	Sb7vQ_srt+56


==================== Asm code ====================
2018-03-16 16:06:03.689817555 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetContents1_closure
.type GHC.IO.Handle.Text.hGetContents1_closure, @object
GHC.IO.Handle.Text.hGetContents1_closure:
	.quad	GHC.IO.Handle.Text.hGetContents1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.690554436 UTC

.section .text
.align 8
sat_sb77V_entry:
_cbazu:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbazy
_cbazz:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbazr_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbazr
_cbazs:
	movq (%rbx),%rax
	jmp *(%rax)
_cbazy:
	jmp *-16(%r13)
	.size sat_sb77V_entry, .-sat_sb77V_entry


==================== Asm code ====================
2018-03-16 16:06:03.691182222 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb77V_info:
	.quad	sat_sb77V_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:03.692067316 UTC

.section .text
.align 8
_cbazr:
_cbazr:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cbazC
_cbazB:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 55(%rbx),%r8
	movq 63(%rbx),%r9
	movq 71(%rbx),%r10
	movq 79(%rbx),%r11
	movq 87(%rbx),%r14
	movq %rax,64(%rsp)
	movq 95(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 103(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 111(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 119(%rbx),%rsi
	movq 127(%rbx),%rbx
	movq $GHC.IO.Handle.Types.Handle___con_info,-128(%r12)
	movq %rdi,96(%rsp)
	movq 64(%rsp),%rdi
	movq %rdi,-120(%r12)
	movq 72(%rsp),%rdi
	movq %rdi,-112(%r12)
	movq 80(%rsp),%rdi
	movq %rdi,-104(%r12)
	movq 88(%rsp),%rdi
	movq %rdi,-96(%r12)
	movq $GHC.IO.Handle.Types.SemiClosedHandle_closure+2,-88(%r12)
	movq 96(%rsp),%rdi
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	movq %r9,-64(%r12)
	movq %r10,-56(%r12)
	movq %r11,-48(%r12)
	movq %r14,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -127(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbazC:
	movq $136,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbazr, .-_cbazr


==================== Asm code ====================
2018-03-16 16:06:03.69287527 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbazr_info:
	.quad	_cbazr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.69359447 UTC

.section .text
.align 8
sat_sb77X_entry:
_cbazF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbazG
_cbazH:
	movq $block_cbazl_info,-16(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Text.hGetContents2_entry
_cbazG:
	jmp *-8(%r13)
	.size sat_sb77X_entry, .-sat_sb77X_entry


==================== Asm code ====================
2018-03-16 16:06:03.694218327 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb77X_info:
	.quad	sat_sb77X_entry
	.quad	1
	.quad	4294967305
	.quad	8589934597
	.quad	Sb7vQ_srt+192


==================== Asm code ====================
2018-03-16 16:06:03.69491538 UTC

.section .text
.align 8
_cbazl:
_cbazl:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbazK
_cbazJ:
	movq $sat_sb77V_info,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbazK:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbazl, .-_cbazl


==================== Asm code ====================
2018-03-16 16:06:03.695500063 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbazl_info:
	.quad	_cbazl
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.696219023 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetContents1_entry
.type GHC.IO.Handle.Text.hGetContents1_entry, @object
GHC.IO.Handle.Text.hGetContents1_entry:
_cbazL:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbazP
_cbazO:
	movq $sat_sb77X_info,-8(%r12)
	movq %r14,(%r12)
	leaq -6(%r12),%rdi
	movq %r14,%rsi
	movl $GHC.IO.Handle.Text.hGetContents3_closure,%r14d
	jmp GHC.IO.Handle.Internals.wantReadableHandle1_entry
_cbazP:
	movq $16,904(%r13)
	movl $GHC.IO.Handle.Text.hGetContents1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetContents1_entry, .-GHC.IO.Handle.Text.hGetContents1_entry


==================== Asm code ====================
2018-03-16 16:06:03.696876055 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetContents1_info
.type GHC.IO.Handle.Text.hGetContents1_info, @object
GHC.IO.Handle.Text.hGetContents1_info:
	.quad	GHC.IO.Handle.Text.hGetContents1_entry
	.quad	0
	.quad	14297946128398
	.quad	8589934597
	.quad	Sb7vQ_srt+128


==================== Asm code ====================
2018-03-16 16:06:03.699449305 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetContents_closure
.type GHC.IO.Handle.Text.hGetContents_closure, @object
GHC.IO.Handle.Text.hGetContents_closure:
	.quad	GHC.IO.Handle.Text.hGetContents_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.700048689 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetContents_entry
.type GHC.IO.Handle.Text.hGetContents_entry, @object
GHC.IO.Handle.Text.hGetContents_entry:
_cbaAh:
	jmp GHC.IO.Handle.Text.hGetContents1_entry
	.size GHC.IO.Handle.Text.hGetContents_entry, .-GHC.IO.Handle.Text.hGetContents_entry


==================== Asm code ====================
2018-03-16 16:06:03.700637508 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetContents_info
.type GHC.IO.Handle.Text.hGetContents_info, @object
GHC.IO.Handle.Text.hGetContents_info:
	.quad	GHC.IO.Handle.Text.hGetContents_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	Sb7vQ_srt+216


==================== Asm code ====================
2018-03-16 16:06:03.704197894 UTC

.section .data
.align 8
.align 1
go_rb6WP_closure:
	.quad	go_rb6WP_info


==================== Asm code ====================
2018-03-16 16:06:03.70481416 UTC

.section .text
.align 8
sat_sb782_entry:
_cbaAC:
	movq 16(%rbx),%r14
	jmp go_rb6WP_entry
	.size sat_sb782_entry, .-sat_sb782_entry


==================== Asm code ====================
2018-03-16 16:06:03.705403973 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb782_info:
	.quad	sat_sb782_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:03.7061624 UTC

.section .text
.align 8
go_rb6WP_entry:
_cbaAJ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaAK
_cbaAL:
	movq $block_cbaAs_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbaAs
_cbaAt:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaAK:
	movl $go_rb6WP_closure,%ebx
	jmp *-8(%r13)
	.size go_rb6WP_entry, .-go_rb6WP_entry


==================== Asm code ====================
2018-03-16 16:06:03.706760594 UTC

.section .data.rel.ro
.align 8
.align 1
go_rb6WP_info:
	.quad	go_rb6WP_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:06:03.708065774 UTC

.section .text
.align 8
_cbaAs:
_cbaAs:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbaAG
_cbaAH:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbaAQ
_cbaAP:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $sat_sb782_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Base.++_entry
_cbaAQ:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_cbaAG:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbaAs, .-_cbaAs


==================== Asm code ====================
2018-03-16 16:06:03.70880573 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaAs_info:
	.quad	_cbaAs
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.712182284 UTC

.section .data
.align 8
.align 1
go1_rb6WQ_closure:
	.quad	go1_rb6WQ_info


==================== Asm code ====================
2018-03-16 16:06:03.712809476 UTC

.section .text
.align 8
sat_sb787_entry:
_cbaBl:
	movq 16(%rbx),%r14
	jmp go1_rb6WQ_entry
	.size sat_sb787_entry, .-sat_sb787_entry


==================== Asm code ====================
2018-03-16 16:06:03.713387372 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb787_info:
	.quad	sat_sb787_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:03.714106559 UTC

.section .text
.align 8
go1_rb6WQ_entry:
_cbaBs:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaBt
_cbaBu:
	movq $block_cbaBb_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbaBb
_cbaBc:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaBt:
	movl $go1_rb6WQ_closure,%ebx
	jmp *-8(%r13)
	.size go1_rb6WQ_entry, .-go1_rb6WQ_entry


==================== Asm code ====================
2018-03-16 16:06:03.714753272 UTC

.section .data.rel.ro
.align 8
.align 1
go1_rb6WQ_info:
	.quad	go1_rb6WQ_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:06:03.715513257 UTC

.section .text
.align 8
_cbaBb:
_cbaBb:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbaBp
_cbaBq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbaBz
_cbaBy:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $sat_sb787_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Base.++_entry
_cbaBz:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_cbaBp:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbaBb, .-_cbaBb


==================== Asm code ====================
2018-03-16 16:06:03.716175584 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaBb_info:
	.quad	_cbaBb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.745505458 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whGetLineBufferedLoop_closure
.type GHC.IO.Handle.Text.$whGetLineBufferedLoop_closure, @object
GHC.IO.Handle.Text.$whGetLineBufferedLoop_closure:
	.quad	GHC.IO.Handle.Text.$whGetLineBufferedLoop_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.746300011 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$whGetLineBufferedLoop_slow
.type GHC.IO.Handle.Text.$whGetLineBufferedLoop_slow, @object
GHC.IO.Handle.Text.$whGetLineBufferedLoop_slow:
_cbaBR:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Text.$whGetLineBufferedLoop_entry
	.size GHC.IO.Handle.Text.$whGetLineBufferedLoop_slow, .-GHC.IO.Handle.Text.$whGetLineBufferedLoop_slow


==================== Asm code ====================
2018-03-16 16:06:03.747184984 UTC

.section .text
.align 8
buf1_sb78H_entry:
_cbaDa:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaDb
_cbaDc:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbaD7_info,-64(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 32(%rbx),%rbx
	movq %rdx,-56(%rbp)
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _cbaD7
_cbaD8:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaDb:
	jmp *-16(%r13)
	.size buf1_sb78H_entry, .-buf1_sb78H_entry


==================== Asm code ====================
2018-03-16 16:06:03.747870897 UTC

.section .data.rel.ro
.align 8
.align 1
buf1_sb78H_info:
	.quad	buf1_sb78H_entry
	.quad	12884901891
	.quad	15


==================== Asm code ====================
2018-03-16 16:06:03.74870228 UTC

.section .text
.align 8
_cbaD7:
_cbaD7:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbaDh
_cbaDg:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq 7(%rbx),%rbx
	cmpq %rdi,%rbx
	je _cbaDq
_cbaDn:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaDq:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaDh:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbaD7, .-_cbaD7


==================== Asm code ====================
2018-03-16 16:06:03.749463865 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaD7_info:
	.quad	_cbaD7
	.quad	1605
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.750201819 UTC

.section .text
.align 8
sat_sb79e_entry:
_cbaDy:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaDz
_cbaDA:
	movq $block_cbaDv_info,-24(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbaDv
_cbaDw:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaDz:
	jmp *-8(%r13)
	.size sat_sb79e_entry, .-sat_sb79e_entry


==================== Asm code ====================
2018-03-16 16:06:03.750831737 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb79e_info:
	.quad	sat_sb79e_entry
	.quad	3
	.quad	4294967304
	.quad	4294967299
	.quad	Sb7vQ_srt+80


==================== Asm code ====================
2018-03-16 16:06:03.751703855 UTC

.section .text
.align 8
_cbaDv:
_cbaDv:
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	subq %rax,%rcx
	testq %rcx,%rcx
	je _cbaDX
_ubaEG:
	cmpq $1,%rcx
	je _cbaE7
_ubaEH:
	movq %rcx,8(%rbp)
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _cbaDI
_cbaE7:
	movq $block_cbaE6_info,-40(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rsi
	movq 23(%rbx),%rdi
	movq 31(%rbx),%rbx
	movq %rbx,%r8
	movq 16(%rbp),%rbx
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rdi,(%rbp)
	movq %rcx,16(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbaE6
_cbaE9:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaDX:
	movq $block_cbaDU_info,16(%rbp)
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.Internals.hLookAhead_2_entry
	.size _cbaDv, .-_cbaDv


==================== Asm code ====================
2018-03-16 16:06:03.752460799 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaDv_info:
	.quad	_cbaDv
	.quad	2
	.quad	4294967326
	.quad	Sb7vQ_srt+80


==================== Asm code ====================
2018-03-16 16:06:03.753163562 UTC

.section .text
.align 8
_cbaDU:
_cbaDU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbaE1
_cbaE0:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaE1:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbaDU, .-_cbaDU


==================== Asm code ====================
2018-03-16 16:06:03.75384331 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaDU_info:
	.quad	_cbaDU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.754807192 UTC

.section .text
.align 8
_cbaE6:
_cbaE6:
	movq 56(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbaEf
_cbaEj:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbaEo
_cbaEn:
	movq 48(%rbp),%rbx
	movq 40(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq 16(%rbp),%rsi
	movq 24(%rbp),%rdi
	movq 32(%rbp),%r8
	movl (%rcx,%r8,4),%r8d
	cmpq $13,%r8
	je _cbaEB
_cbaEu:
	movq $GHC.Base.Just_con_info,-48(%r12)
	movq %rax,-40(%r12)
	leaq -46(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaEB:
	movl $13,(%rcx)
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdi,-16(%r12)
	movq $0,-8(%r12)
	movq $1,(%r12)
	movq $block_cbaEy_info,56(%rbp)
	leaq -47(%r12),%rsi
	movq %rbx,%r14
	addq $56,%rbp
	jmp GHC.IO.Handle.Internals.hLookAhead_2_entry
_cbaEo:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
_cbaEi:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_cbaEf:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbaEi
_cbaEh:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbaE6, .-_cbaE6


==================== Asm code ====================
2018-03-16 16:06:03.755623389 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaE6_info:
	.quad	_cbaE6
	.quad	1799
	.quad	4294967326
	.quad	Sb7vQ_srt+80


==================== Asm code ====================
2018-03-16 16:06:03.756341262 UTC

.section .text
.align 8
_cbaEy:
_cbaEy:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbaEE
_cbaED:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaEE:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbaEy, .-_cbaEy


==================== Asm code ====================
2018-03-16 16:06:03.756949225 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaEy_info:
	.quad	_cbaEy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.757671626 UTC

.section .text
.align 8
_cbaDI:
_cbaDI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbaDP
_cbaDO:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaDP:
	movq $16,904(%r13)
	movq (%rbp),%rax
	movq $block_cbaDH_info,(%rbp)
	movq %rax,%rbx
	jmp stg_gc_unbx_r1
	.size _cbaDI, .-_cbaDI


==================== Asm code ====================
2018-03-16 16:06:03.758370333 UTC

.section .text
.align 8
_cbaDH:
_cbaDH:
	movq %rbx,(%rbp)
	jmp _cbaDI
	.size _cbaDH, .-_cbaDH


==================== Asm code ====================
2018-03-16 16:06:03.758958467 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaDH_info:
	.quad	_cbaDH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.759685142 UTC

.section .text
.align 8
sat_sb79q_entry:
_cbaEV:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaEZ
_cbaF0:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbaES_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbaES
_cbaET:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaEZ:
	jmp *-16(%r13)
	.size sat_sb79q_entry, .-sat_sb79q_entry


==================== Asm code ====================
2018-03-16 16:06:03.76031762 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb79q_info:
	.quad	sat_sb79q_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:03.761039993 UTC

.section .text
.align 8
_cbaES:
_cbaES:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbaF3
_cbaF2:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaF3:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbaES, .-_cbaES


==================== Asm code ====================
2018-03-16 16:06:03.761732785 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaES_info:
	.quad	_cbaES
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.76242051 UTC

.section .text
.align 8
sat_sb79A_entry:
_cbaFg:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaFh
_cbaFi:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbaFd_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbaFd
_cbaFe:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaFh:
	jmp *-16(%r13)
	.size sat_sb79A_entry, .-sat_sb79A_entry


==================== Asm code ====================
2018-03-16 16:06:03.763091443 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb79A_info:
	.quad	sat_sb79A_entry
	.quad	1
	.quad	4294967312
	.quad	Sb7vQ_srt+176


==================== Asm code ====================
2018-03-16 16:06:03.763793148 UTC

.section .text
.align 8
_cbaFd:
_cbaFd:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cbaFq
_cbaFp:
	movl $lvl4_rb6WH_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cbaFq:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbaFd, .-_cbaFd


==================== Asm code ====================
2018-03-16 16:06:03.764425773 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaFd_info:
	.quad	_cbaFd
	.quad	0
	.quad	4294967326
	.quad	Sb7vQ_srt+176


==================== Asm code ====================
2018-03-16 16:06:03.76564186 UTC

.section .text
.align 8
sat_sb79S_entry:
_cbaFA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaFB
_cbaFC:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbaFE
_cbaFD:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	incq %rbx
	cmpq %rdi,%rbx
	je _cbaFO
_cbaFL:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaFO:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaFE:
	movq $56,904(%r13)
_cbaFB:
	jmp *-16(%r13)
	.size sat_sb79S_entry, .-sat_sb79S_entry


==================== Asm code ====================
2018-03-16 16:06:03.766405545 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb79S_info:
	.quad	sat_sb79S_entry
	.quad	17179869186
	.quad	15


==================== Asm code ====================
2018-03-16 16:06:03.767204691 UTC

.section .text
.align 8
sat_sb79W_entry:
_cbaFZ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaG0
_cbaG1:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbaG3
_cbaG2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	movq $block_cbaFX_info,-24(%rbp)
	movl $GHC.Types.[]_closure+1,%esi
	leaq -14(%r12),%r14
	addq $-24,%rbp
	jmp GHC.List.reverse1_entry
_cbaG3:
	movq $24,904(%r13)
_cbaG0:
	jmp *-16(%r13)
	.size sat_sb79W_entry, .-sat_sb79W_entry


==================== Asm code ====================
2018-03-16 16:06:03.768715087 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb79W_info:
	.quad	sat_sb79W_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:06:03.769411075 UTC

.section .text
.align 8
_cbaFX:
_cbaFX:
	movq %rbx,%r14
	addq $8,%rbp
	jmp go_rb6WP_entry
	.size _cbaFX, .-_cbaFX


==================== Asm code ====================
2018-03-16 16:06:03.769918406 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaFX_info:
	.quad	_cbaFX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.770611529 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$whGetLineBufferedLoop_entry
.type GHC.IO.Handle.Text.$whGetLineBufferedLoop_entry, @object
GHC.IO.Handle.Text.$whGetLineBufferedLoop_entry:
_cbaG7:
	leaq -96(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaG8
_ubaHZ:
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp _cbaBS
_cbaG8:
	movl $GHC.IO.Handle.Text.$whGetLineBufferedLoop_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.$whGetLineBufferedLoop_entry, .-GHC.IO.Handle.Text.$whGetLineBufferedLoop_entry


==================== Asm code ====================
2018-03-16 16:06:03.771313236 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whGetLineBufferedLoop_info
.type GHC.IO.Handle.Text.$whGetLineBufferedLoop_info, @object
GHC.IO.Handle.Text.$whGetLineBufferedLoop_info:
	.quad	GHC.IO.Handle.Text.$whGetLineBufferedLoop_entry
	.quad	0
	.quad	6790596698046478
	.quad	38654705664
	.quad	Sb7vQ_srt+72
	.quad	7304
	.quad	GHC.IO.Handle.Text.$whGetLineBufferedLoop_slow


==================== Asm code ====================
2018-03-16 16:06:03.771996399 UTC

.section .text
.align 8
_cbaBS:
_cbaBS:
	movq (%rbp),%rax
	movq $block_cbaBV_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbaBV
_cbaBW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbaBS, .-_cbaBS


==================== Asm code ====================
2018-03-16 16:06:03.772765168 UTC

.section .text
.align 8
_cbaBV:
_cbaBV:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbaGc
_cbaGb:
	movq 71(%rbx),%rax
	movq 111(%rbx),%rcx
	movq $GHC.ForeignPtr.ForeignPtr_con_info,-16(%r12)
	movq 16(%rbp),%rdx
	movq %rdx,-8(%r12)
	movq 8(%rbp),%rdx
	movq %rdx,(%r12)
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-16(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-32,%rbp
	jmp _cbaHy
_cbaGc:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbaBV, .-_cbaBV


==================== Asm code ====================
2018-03-16 16:06:03.773438545 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaBV_info:
	.quad	_cbaBV
	.quad	3655
	.quad	2286997070675998
	.quad	Sb7vQ_srt+72


==================== Asm code ====================
2018-03-16 16:06:03.774153873 UTC

.section .text
.align 8
_cbaHy:
_cbaHy:
	movq 80(%rbp),%rax
	cmpq 24(%rbp),%rax
	je _cbaHS
_cbaHH:
	movq $block_cbaHF_info,-8(%rbp)
	movq 16(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbaHF
_cbaHI:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaHS:
	movq $GHC.Types.False_closure+1,24(%rbp)
	movq %rax,16(%rbp)
	jmp _sb78y
	.size _cbaHy, .-_cbaHy


==================== Asm code ====================
2018-03-16 16:06:03.775000687 UTC

.section .text
.align 8
_cbaHF:
_cbaHF:
	movq 32(%rbp),%rax
	movq 15(%rbx),%rcx
	movl (%rcx,%rax,4),%ecx
	cmpq $10,%rcx
	je _cbaHR
_cbaHQ:
	movq %rbx,24(%rbp)
	incq %rax
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp _cbaHy
_cbaHR:
	movq %rax,24(%rbp)
	movq $GHC.Types.True_closure+2,32(%rbp)
	addq $8,%rbp
	jmp _sb78y
	.size _cbaHF, .-_cbaHF


==================== Asm code ====================
2018-03-16 16:06:03.775648809 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaHF_info:
	.quad	_cbaHF
	.quad	117516
	.quad	2286997070675998
	.quad	Sb7vQ_srt+72


==================== Asm code ====================
2018-03-16 16:06:03.77632468 UTC

.section .text
.align 8
_sb78y:
_sb78y:
	movq $block_cbaC8_info,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbaC8
_cbaC9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sb78y, .-_sb78y


==================== Asm code ====================
2018-03-16 16:06:03.777153344 UTC

.section .text
.align 8
_cbaC8:
_cbaC8:
	movq 80(%rbp),%rax
	movq 24(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _cbaGR
_cbaHd:
	movq $block_cbaH9_info,(%rbp)
	movl $GHC.Types.[]_closure+1,%r9d
	movq %rcx,%r8
	movq %rax,%rdi
	movq 56(%rbp),%rsi
	movq 48(%rbp),%r14
	jmp $wunpack_nl_rb6WF_entry
_cbaH6:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rcx,(%r12)
	movq $GHC.Types.[]_closure+1,80(%rbp)
	leaq -7(%r12),%rax
	movq %rax,(%rbp)
	jmp _sb78C
_cbaGR:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbaGU
_cbaGT:
	cmpq %rcx,%rax
	je _cbaH6
_cbaH5:
	addq $-16,%r12
	leaq -1(%rcx),%rax
	movq %rax,-8(%rbp)
	movq $GHC.Types.[]_closure+1,(%rbp)
	addq $-16,%rbp
	jmp _cbaCU
_cbaGU:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbaC8, .-_cbaC8


==================== Asm code ====================
2018-03-16 16:06:03.778318512 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaC8_info:
	.quad	_cbaC8
	.quad	117004
	.quad	2286997070675998
	.quad	Sb7vQ_srt+72


==================== Asm code ====================
2018-03-16 16:06:03.77908732 UTC

.section .text
.align 8
_cbaCU:
_cbaCU:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbaH0
_cbaGZ:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rbx
	cmpq 96(%rbp),%rbx
	jge _cbaH2
_cbaH3:
	addq $-40,%r12
	movq %rax,96(%rbp)
	addq $24,%rbp
	jmp _cbaCO
_cbaH2:
	movq $GHC.Types.C#_con_info,-32(%r12)
	movq 64(%rbp),%rcx
	movl (%rcx,%rbx,4),%ecx
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rax
	movq %rax,16(%rbp)
	leaq -1(%rbx),%rax
	movq %rax,8(%rbp)
	jmp _cbaCU
_cbaH0:
	movq $40,904(%r13)
	movq $block_cbaCU_info,(%rbp)
	jmp stg_gc_noregs
	.size _cbaCU, .-_cbaCU


==================== Asm code ====================
2018-03-16 16:06:03.779767513 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaCU_info:
	.quad	_cbaCU
	.quad	468046
	.quad	2286997070675998
	.quad	Sb7vQ_srt+72


==================== Asm code ====================
2018-03-16 16:06:03.780511383 UTC

.section .text
.align 8
_cbaCO:
_cbaCO:
	addq $16,%r12
	movq 72(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cbaGX
_cbaGW:
	movq 16(%rbp),%rbx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,72(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp _sb78C
_cbaGX:
	movq $16,904(%r13)
	movq $block_cbaCN_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unpt_r1
	.size _cbaCO, .-_cbaCO


==================== Asm code ====================
2018-03-16 16:06:03.781271417 UTC

.section .text
.align 8
_cbaCN:
_cbaCN:
	movq %rbx,80(%rbp)
	addq $8,%rbp
	jmp _cbaCO
	.size _cbaCN, .-_cbaCN


==================== Asm code ====================
2018-03-16 16:06:03.781847806 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaCN_info:
	.quad	_cbaCN
	.quad	117004
	.quad	2286997070675998
	.quad	Sb7vQ_srt+72


==================== Asm code ====================
2018-03-16 16:06:03.782532744 UTC

.section .text
.align 8
_cbaH9:
_cbaH9:
	movq $block_cbaHb_info,(%rbp)
	testb $7,%bl
	jne _cbaHb
_cbaHf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbaH9, .-_cbaH9


==================== Asm code ====================
2018-03-16 16:06:03.783092329 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaH9_info:
	.quad	_cbaH9
	.quad	117004
	.quad	2286997070675998
	.quad	Sb7vQ_srt+72


==================== Asm code ====================
2018-03-16 16:06:03.783733284 UTC

.section .text
.align 8
_cbaHb:
_cbaHb:
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,80(%rbp)
	jmp _sb78C
	.size _cbaHb, .-_cbaHb


==================== Asm code ====================
2018-03-16 16:06:03.784303378 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaHb_info:
	.quad	_cbaHb
	.quad	117004
	.quad	2286997070675998
	.quad	Sb7vQ_srt+72


==================== Asm code ====================
2018-03-16 16:06:03.78500026 UTC

.section .text
.align 8
_sb78C:
_sb78C:
	movq $block_cbaCl_info,-8(%rbp)
	movq 32(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbaCl
_cbaCm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sb78C, .-_sb78C


==================== Asm code ====================
2018-03-16 16:06:03.786137804 UTC

.section .text
.align 8
_cbaCl:
_cbaCl:
	movq 56(%rbp),%rax
	movq 64(%rbp),%rcx
	movq 72(%rbp),%rdx
	movq 80(%rbp),%rsi
	movq 96(%rbp),%rdi
	movq %rbx,%r8
	andl $7,%r8d
	cmpq $1,%r8
	je _cbaGg
_cbaGM:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cbaGP
_cbaGO:
	movq $sat_sb79S_info,-88(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rax,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq 32(%rbp),%rax
	movq %rax,-32(%r12)
	movq 104(%rbp),%rax
	movq 16(%rbp),%rbx
	movq 88(%rbp),%rcx
	leaq -88(%r12),%rdx
	movq %rdx,8(%rbx)
	subq $8,%rsp
	movq %r13,%rdx
	movq %rbx,%rsi
	movq %rdx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $sat_sb79W_info,-24(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -24(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaGP:
	movq $96,904(%r13)
	jmp stg_gc_unpt_r1
_cbaGg:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cbaGP
_cbaGi:
	movq $buf1_sb78H_info,-88(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	movq $sat_sb79e_info,-24(%r12)
	movq 48(%rbp),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	movq $block_cbaCu_info,8(%rbp)
	movl $GHC.IO.Handle.Text.hGetChar3_closure+2,%r14d
	leaq -23(%r12),%rbx
	movq %rax,96(%rbp)
	addq $8,%rbp
	jmp stg_catch#
	.size _cbaCl, .-_cbaCl


==================== Asm code ====================
2018-03-16 16:06:03.787057673 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaCl_info:
	.quad	_cbaCl
	.quad	169485
	.quad	2286997070675998
	.quad	Sb7vQ_srt+72


==================== Asm code ====================
2018-03-16 16:06:03.787742266 UTC

.section .text
.align 8
_cbaCu:
_cbaCu:
	movq $block_cbaCw_info,(%rbp)
	testb $7,%bl
	jne _cbaCw
_cbaCx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbaCu, .-_cbaCu


==================== Asm code ====================
2018-03-16 16:06:03.788334132 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaCu_info:
	.quad	_cbaCu
	.quad	31628
	.quad	2286997070675998
	.quad	Sb7vQ_srt+72


==================== Asm code ====================
2018-03-16 16:06:03.789716609 UTC

.section .text
.align 8
_cbaCw:
_cbaCw:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbaGo
_cbaGI:
	movq $block_cbaCC_info,32(%rbp)
	movq 6(%rbx),%rbx
	addq $32,%rbp
	testb $7,%bl
	jne _cbaCC
_cbaCD:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaGr:
	movq $96,904(%r13)
	jmp stg_gc_unpt_r1
_cbaGo:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cbaGr
_cbaGq:
	movq $sat_sb79q_info,-88(%r12)
	movq 88(%rbp),%rax
	movq %rax,-72(%r12)
	movq 96(%rbp),%rbx
	movq 8(%rbp),%rcx
	movq 80(%rbp),%rdx
	leaq -88(%r12),%rsi
	movq %rsi,8(%rcx)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rcx,%rsi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $:_con_info,-64(%r12)
	movq 64(%rsp),%rax
	movq %rax,-56(%r12)
	movq %rbx,-48(%r12)
	movq $sat_sb79A_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -62(%r12),%rax
	movq %rax,(%r12)
	movq $block_cbaGm_info,96(%rbp)
	movl $GHC.Types.[]_closure+1,%esi
	leaq -14(%r12),%r14
	addq $96,%rbp
	jmp GHC.List.reverse1_entry
	.size _cbaCw, .-_cbaCw


==================== Asm code ====================
2018-03-16 16:06:03.79060028 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaCw_info:
	.quad	_cbaCw
	.quad	31628
	.quad	2286997070675998
	.quad	Sb7vQ_srt+72


==================== Asm code ====================
2018-03-16 16:06:03.791194425 UTC

.section .text
.align 8
_cbaGm:
_cbaGm:
	movq $block_cbaGv_info,(%rbp)
	movq %rbx,%r14
	jmp go1_rb6WQ_entry
	.size _cbaGm, .-_cbaGm


==================== Asm code ====================
2018-03-16 16:06:03.791731724 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaGm_info:
	.quad	_cbaGm
	.quad	0
	.quad	4294967326
	.quad	Sb7vQ_srt+224


==================== Asm code ====================
2018-03-16 16:06:03.792410435 UTC

.section .text
.align 8
_cbaGv:
_cbaGv:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbaGC
_cbaGG:
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaGC:
	addq $8,%rbp
	jmp GHC.IO.Handle.Internals.ioe_EOF1_entry
	.size _cbaGv, .-_cbaGv


==================== Asm code ====================
2018-03-16 16:06:03.793014483 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaGv_info:
	.quad	_cbaGv
	.quad	0
	.quad	4294967326
	.quad	Sb7vQ_srt+224


==================== Asm code ====================
2018-03-16 16:06:03.793841564 UTC

.section .text
.align 8
_cbaCC:
_cbaCC:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbaGL
_cbaGK:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq $:_con_info,-16(%r12)
	movq 48(%rbp),%r8
	movq %r8,-8(%r12)
	movq 64(%rbp),%r8
	movq %r8,(%r12)
	movq 8(%rbp),%r8
	movq %r8,8(%rbp)
	movq %rdx,16(%rbp)
	movq %rax,24(%rbp)
	movq %rcx,32(%rbp)
	movq %rsi,40(%rbp)
	movq %rdi,48(%rbp)
	movq %rbx,56(%rbp)
	leaq -14(%r12),%rax
	movq %rax,64(%rbp)
	addq $8,%rbp
	jmp _cbaBS
_cbaGL:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbaCC, .-_cbaCC


==================== Asm code ====================
2018-03-16 16:06:03.794572883 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaCC_info:
	.quad	_cbaCC
	.quad	6024
	.quad	2286997070675998
	.quad	Sb7vQ_srt+72


==================== Asm code ====================
2018-03-16 16:06:03.797871992 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetLine3_closure
.type GHC.IO.Handle.Text.hGetLine3_closure, @object
GHC.IO.Handle.Text.hGetLine3_closure:
	.quad	GHC.IO.Handle.Text.hGetLine3_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.798584695 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetLine3_entry
.type GHC.IO.Handle.Text.hGetLine3_entry, @object
GHC.IO.Handle.Text.hGetLine3_entry:
_cbaLx:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaLy
_cbaLz:
	movq $block_cbaLu_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbaLu
_cbaLv:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaLy:
	movl $GHC.IO.Handle.Text.hGetLine3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetLine3_entry, .-GHC.IO.Handle.Text.hGetLine3_entry


==================== Asm code ====================
2018-03-16 16:06:03.799244328 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetLine3_info
.type GHC.IO.Handle.Text.hGetLine3_info, @object
GHC.IO.Handle.Text.hGetLine3_info:
	.quad	GHC.IO.Handle.Text.hGetLine3_entry
	.quad	0
	.quad	12884901902
	.quad	17179869207
	.quad	Sb7vQ_srt+232


==================== Asm code ====================
2018-03-16 16:06:03.799929906 UTC

.section .text
.align 8
_cbaLu:
_cbaLu:
	movq 31(%rbx),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.IO.Handle.Text.$whGetLineBufferedLoop_entry
	.size _cbaLu, .-_cbaLu


==================== Asm code ====================
2018-03-16 16:06:03.800515923 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaLu_info:
	.quad	_cbaLu
	.quad	2
	.quad	4294967326
	.quad	Sb7vQ_srt+232


==================== Asm code ====================
2018-03-16 16:06:03.803079831 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.hGetLine5_bytes
.type GHC.IO.Handle.Text.hGetLine5_bytes, @object
GHC.IO.Handle.Text.hGetLine5_bytes:
	.asciz "hGetLine"


==================== Asm code ====================
2018-03-16 16:06:03.805559557 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetLine4_closure
.type GHC.IO.Handle.Text.hGetLine4_closure, @object
GHC.IO.Handle.Text.hGetLine4_closure:
	.quad	GHC.IO.Handle.Text.hGetLine4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.806375803 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetLine4_entry
.type GHC.IO.Handle.Text.hGetLine4_entry, @object
GHC.IO.Handle.Text.hGetLine4_entry:
_cbaLW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaLX
_cbaLY:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbaLV
_cbaLU:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Text.hGetLine5_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbaLX:
	jmp *-16(%r13)
_cbaLV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.hGetLine4_entry, .-GHC.IO.Handle.Text.hGetLine4_entry


==================== Asm code ====================
2018-03-16 16:06:03.807075562 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetLine4_info
.type GHC.IO.Handle.Text.hGetLine4_info, @object
GHC.IO.Handle.Text.hGetLine4_info:
	.quad	GHC.IO.Handle.Text.hGetLine4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:03.810999416 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetLine2_closure
.type GHC.IO.Handle.Text.hGetLine2_closure, @object
GHC.IO.Handle.Text.hGetLine2_closure:
	.quad	GHC.IO.Handle.Text.hGetLine2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.811729233 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetLine2_entry
.type GHC.IO.Handle.Text.hGetLine2_entry, @object
GHC.IO.Handle.Text.hGetLine2_entry:
_cbaMd:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaMh
_cbaMi:
	movq $block_cbaMa_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbaMa
_cbaMb:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaMh:
	movl $GHC.IO.Handle.Text.hGetLine2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetLine2_entry, .-GHC.IO.Handle.Text.hGetLine2_entry


==================== Asm code ====================
2018-03-16 16:06:03.812382171 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetLine2_info
.type GHC.IO.Handle.Text.hGetLine2_info, @object
GHC.IO.Handle.Text.hGetLine2_info:
	.quad	GHC.IO.Handle.Text.hGetLine2_entry
	.quad	0
	.quad	21474836494
	.quad	8589934597
	.quad	Sb7vQ_srt+232


==================== Asm code ====================
2018-03-16 16:06:03.813130823 UTC

.section .text
.align 8
_cbaMa:
_cbaMa:
	movq 71(%rbx),%rax
	movq 8(%rax),%rax
	movq $block_cbaMg_info,-8(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbaMg
_cbaMk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbaMa, .-_cbaMa


==================== Asm code ====================
2018-03-16 16:06:03.81378572 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaMa_info:
	.quad	_cbaMa
	.quad	0
	.quad	4294967326
	.quad	Sb7vQ_srt+232


==================== Asm code ====================
2018-03-16 16:06:03.814454368 UTC

.section .text
.align 8
_cbaMg:
_cbaMg:
	movq 31(%rbx),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 39(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,(%rbp)
	movq $GHC.Types.[]_closure+1,8(%rbp)
	addq $-8,%rbp
	jmp GHC.IO.Handle.Text.$whGetLineBufferedLoop_entry
	.size _cbaMg, .-_cbaMg


==================== Asm code ====================
2018-03-16 16:06:03.815074401 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaMg_info:
	.quad	_cbaMg
	.quad	1
	.quad	4294967326
	.quad	Sb7vQ_srt+232


==================== Asm code ====================
2018-03-16 16:06:03.817317961 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetLine1_closure
.type GHC.IO.Handle.Text.hGetLine1_closure, @object
GHC.IO.Handle.Text.hGetLine1_closure:
	.quad	GHC.IO.Handle.Text.hGetLine1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.817952701 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetLine1_entry
.type GHC.IO.Handle.Text.hGetLine1_entry, @object
GHC.IO.Handle.Text.hGetLine1_entry:
_cbaML:
	movl $GHC.IO.Handle.Text.hGetLine2_closure+2,%edi
	movq %r14,%rsi
	movl $GHC.IO.Handle.Text.hGetLine4_closure,%r14d
	jmp GHC.IO.Handle.Internals.wantReadableHandle_1_entry
	.size GHC.IO.Handle.Text.hGetLine1_entry, .-GHC.IO.Handle.Text.hGetLine1_entry


==================== Asm code ====================
2018-03-16 16:06:03.818585974 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetLine1_info
.type GHC.IO.Handle.Text.hGetLine1_info, @object
GHC.IO.Handle.Text.hGetLine1_info:
	.quad	GHC.IO.Handle.Text.hGetLine1_entry
	.quad	0
	.quad	6755403736023054
	.quad	8589934597
	.quad	Sb7vQ_srt+96


==================== Asm code ====================
2018-03-16 16:06:03.820631631 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetLine_closure
.type GHC.IO.Handle.Text.hGetLine_closure, @object
GHC.IO.Handle.Text.hGetLine_closure:
	.quad	GHC.IO.Handle.Text.hGetLine_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.821277432 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetLine_entry
.type GHC.IO.Handle.Text.hGetLine_entry, @object
GHC.IO.Handle.Text.hGetLine_entry:
_cbaMW:
	jmp GHC.IO.Handle.Text.hGetLine1_entry
	.size GHC.IO.Handle.Text.hGetLine_entry, .-GHC.IO.Handle.Text.hGetLine_entry


==================== Asm code ====================
2018-03-16 16:06:03.821856545 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetLine_info
.type GHC.IO.Handle.Text.hGetLine_info, @object
GHC.IO.Handle.Text.hGetLine_info:
	.quad	GHC.IO.Handle.Text.hGetLine_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	Sb7vQ_srt+264


==================== Asm code ====================
2018-03-16 16:06:03.825911146 UTC

.section .data
.align 8
.align 1
lvl11_rb6WR_closure:
	.quad	lvl11_rb6WR_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.826801677 UTC

.section .text
.align 8
lvl11_rb6WR_entry:
_cbaNe:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaNf
_cbaNg:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbaN8
_cbaN7:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_cbaN9_info,-24(%rbp)
	xorl %r9d,%r9d
	movl $GHC.IO.FD.$tcFD1_closure,%r8d
	movl $GHC.IO.FD.$trModule_closure,%edi
	movq $-2900453971751795240,%rsi
	movq $-7607928521190512554,%r14
	movq $GHC.Types.krep$*_closure,-40(%rbp)
	movq $GHC.Types.[]_closure+1,-32(%rbp)
	addq $-40,%rbp
	jmp Data.Typeable.Internal.$wmkTrCon_entry
_cbaNf:
	jmp *-16(%r13)
_cbaN8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl11_rb6WR_entry, .-lvl11_rb6WR_entry


==================== Asm code ====================
2018-03-16 16:06:03.827578699 UTC

.section .data.rel.ro
.align 8
.align 1
lvl11_rb6WR_info:
	.quad	lvl11_rb6WR_entry
	.quad	0
	.quad	4294967317
	.quad	Sb7vQ_srt+272


==================== Asm code ====================
2018-03-16 16:06:03.828231694 UTC

.section .text
.align 8
_cbaN9:
_cbaN9:
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-40,%rbp
	jmp _cbaNa
	.size _cbaN9, .-_cbaN9


==================== Asm code ====================
2018-03-16 16:06:03.828866118 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaN9_info:
	.quad	_cbaN9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.829636732 UTC

.section .text
.align 8
_cbaNa:
_cbaNa:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbaNj
_cbaNi:
	movq $Data.Typeable.Internal.TrTyCon_con_info,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -38(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaNj:
	movq $48,904(%r13)
	movq $block_cbaNa_info,(%rbp)
	jmp stg_gc_noregs
	.size _cbaNa, .-_cbaNa


==================== Asm code ====================
2018-03-16 16:06:03.830297699 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaNa_info:
	.quad	_cbaNa
	.quad	1093
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.85243143 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufNonBlocking2_closure
.type GHC.IO.Handle.Text.hGetBufNonBlocking2_closure, @object
GHC.IO.Handle.Text.hGetBufNonBlocking2_closure:
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.853562089 UTC

.section .text
.align 8
sat_sb7ch_entry:
_cbaOy:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaOF
_cbaOG:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbaOv_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbaOv
_cbaOw:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaOF:
	jmp *-16(%r13)
	.size sat_sb7ch_entry, .-sat_sb7ch_entry


==================== Asm code ====================
2018-03-16 16:06:03.854201673 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb7ch_info:
	.quad	sat_sb7ch_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:03.854925005 UTC

.section .text
.align 8
_cbaOv:
_cbaOv:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbaOJ
_cbaOI:
	movq 7(%rbx),%rax
	addq 8(%rbp),%rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaOJ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbaOv, .-_cbaOv


==================== Asm code ====================
2018-03-16 16:06:03.856374044 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaOv_info:
	.quad	_cbaOv
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.857194882 UTC

.section .text
.align 8
sat_sb7cl_entry:
_cbaOT:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaP0
_cbaP1:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbaOQ_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbaOQ
_cbaOR:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaP0:
	jmp *-16(%r13)
	.size sat_sb7cl_entry, .-sat_sb7cl_entry


==================== Asm code ====================
2018-03-16 16:06:03.857880368 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb7cl_info:
	.quad	sat_sb7cl_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:03.858589821 UTC

.section .text
.align 8
_cbaOQ:
_cbaOQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbaP4
_cbaP3:
	movq 7(%rbx),%rax
	addq 8(%rbp),%rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaP4:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbaOQ, .-_cbaOQ


==================== Asm code ====================
2018-03-16 16:06:03.859222268 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaOQ_info:
	.quad	_cbaOQ
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.859936837 UTC

.section .text
.align 8
sat_sb7cB_entry:
_cbaPB:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaPI
_cbaPJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbaPy_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbaPy
_cbaPz:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaPI:
	jmp *-16(%r13)
	.size sat_sb7cB_entry, .-sat_sb7cB_entry


==================== Asm code ====================
2018-03-16 16:06:03.860584162 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb7cB_info:
	.quad	sat_sb7cB_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:03.861307382 UTC

.section .text
.align 8
_cbaPy:
_cbaPy:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbaPM
_cbaPL:
	movq 7(%rbx),%rax
	addq 8(%rbp),%rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaPM:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbaPy, .-_cbaPy


==================== Asm code ====================
2018-03-16 16:06:03.861958431 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaPy_info:
	.quad	_cbaPy
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.862681428 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBufNonBlocking2_entry
.type GHC.IO.Handle.Text.hGetBufNonBlocking2_entry, @object
GHC.IO.Handle.Text.hGetBufNonBlocking2_entry:
_cbaPO:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaPP
_cbaPQ:
	movq $block_cbaNJ_info,-40(%rbp)
	movq %r14,%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbaNJ
_cbaNK:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaPP:
	movl $GHC.IO.Handle.Text.hGetBufNonBlocking2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetBufNonBlocking2_entry, .-GHC.IO.Handle.Text.hGetBufNonBlocking2_entry


==================== Asm code ====================
2018-03-16 16:06:03.863382036 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufNonBlocking2_info
.type GHC.IO.Handle.Text.hGetBufNonBlocking2_info, @object
GHC.IO.Handle.Text.hGetBufNonBlocking2_info:
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking2_entry
	.quad	0
	.quad	12884901902
	.quad	25769803801
	.quad	Sb7vQ_srt+280


==================== Asm code ====================
2018-03-16 16:06:03.864081883 UTC

.section .text
.align 8
_cbaNJ:
_cbaNJ:
	movq $block_cbaNO_info,-8(%rbp)
	movq %rbx,%rax
	movq 47(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbaNO
_cbaNP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbaNJ, .-_cbaNJ


==================== Asm code ====================
2018-03-16 16:06:03.864746603 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaNJ_info:
	.quad	_cbaNJ
	.quad	4
	.quad	4294967326
	.quad	Sb7vQ_srt+280


==================== Asm code ====================
2018-03-16 16:06:03.865596097 UTC

.section .text
.align 8
_cbaNO:
_cbaNO:
	movq $block_cbaNT_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 40(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,40(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbaNT
_cbaNU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbaNO, .-_cbaNO


==================== Asm code ====================
2018-03-16 16:06:03.866268516 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaNO_info:
	.quad	_cbaNO
	.quad	5
	.quad	4294967326
	.quad	Sb7vQ_srt+280


==================== Asm code ====================
2018-03-16 16:06:03.867052159 UTC

.section .text
.align 8
_cbaNT:
_cbaNT:
	movq 64(%rbp),%rax
	movq 7(%rbx),%rbx
	movq 32(%rbp),%rcx
	subq 24(%rbp),%rcx
	cmpq %rcx,%rbx
	jge _cbaPV
_cbaQ6:
	movq $block_cbaP7_info,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,64(%rbp)
	testb $7,%bl
	jne _cbaP7
_cbaP8:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaPV:
	movq $block_cbaO4_info,(%rbp)
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rcx,32(%rbp)
	movq %rdx,64(%rbp)
	testb $7,%bl
	jne _cbaO4
_cbaO5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbaNT, .-_cbaNT


==================== Asm code ====================
2018-03-16 16:06:03.867731199 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaNT_info:
	.quad	_cbaNT
	.quad	33674
	.quad	4294967326
	.quad	Sb7vQ_srt+280


==================== Asm code ====================
2018-03-16 16:06:03.868929365 UTC

.section .text
.align 8
_cbaO4:
_cbaO4:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cbaPY
_cbaPX:
	movq 72(%rbp),%rax
	movq 56(%rbp),%rcx
	movq 48(%rbp),%rdx
	movq 80(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq 8(%rbp),%r8
	movq 16(%rbp),%r9
	movq 64(%rbp),%r10
	movq 32(%rbp),%r11
	movq 7(%rbx),%rbx
	subq $8,%rsp
	movq %rbx,%r14
	movq %r14,72(%rsp)
	movq %rsi,%r14
	addq 24(%rbp),%r14
	movq %rdx,80(%rsp)
	movq %r11,%rdx
	movq %rdi,96(%rsp)
	movq %r14,88(%rsp)
	movq 72(%rsp),%r14
	movq %r14,%rdi
	movq %rsi,104(%rsp)
	movq 88(%rsp),%r14
	movq %r14,%rsi
	movq %rax,%r14
	xorl %eax,%eax
	movq %rcx,112(%rsp)
	movq %r8,120(%rsp)
	movq %r9,128(%rsp)
	movq %r10,136(%rsp)
	movq %r11,144(%rsp)
	call memcpy
	addq $8,%rsp
	movq $GHC.IO.Buffer.Buffer_con_info,-96(%r12)
	movq 88(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 112(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq 96(%rsp),%rcx
	movq %rcx,-72(%r12)
	movq 120(%rsp),%rcx
	movq %rcx,-64(%r12)
	movq $0,-56(%r12)
	movq $0,-48(%r12)
	leaq -95(%r12),%rdx
	movq 72(%rsp),%rsi
	movq %rdx,8(%rsi)
	subq $8,%rsp
	movq %r13,%rdx
	movq %rdx,%rdi
	movq %rax,%rdx
	xorl %eax,%eax
	movq %rdx,152(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq 128(%rsp),%rax
	movq 136(%rsp),%rcx
	subq %rcx,%rax
	testq %rax,%rax
	jne _cbaQ4
_cbaQ5:
	movq $sat_sb7cl_info,-40(%r12)
	movq %r14,-24(%r12)
	movq %rcx,-16(%r12)
	leaq -40(%r12),%rax
	addq $-16,%r12
	movq %rax,%rbx
	addq $88,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaQ4:
	movq $sat_sb7ch_info,-40(%r12)
	movq %r14,-24(%r12)
	movq %rcx,-16(%r12)
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	addq %rcx,%rbx
	movq %rbx,(%r12)
	movq %rax,%r9
	leaq -40(%r12),%r8
	leaq -7(%r12),%rdi
	movq 120(%rsp),%rax
	movq %rax,%rsi
	movq 104(%rsp),%rax
	movq %rax,%r14
	addq $88,%rbp
	jmp GHC.IO.Handle.Text.$wbufReadNBEmpty_entry
_cbaPY:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbaO4, .-_cbaO4


==================== Asm code ====================
2018-03-16 16:06:03.869966744 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaO4_info:
	.quad	_cbaO4
	.quad	41866
	.quad	4294967326
	.quad	Sb7vQ_srt+280


==================== Asm code ====================
2018-03-16 16:06:03.870900502 UTC

.section .text
.align 8
_cbaP7:
_cbaP7:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cbaQ9
_cbaQ8:
	movq 72(%rbp),%rax
	movq 48(%rbp),%rcx
	movq 80(%rbp),%rdx
	movq 40(%rbp),%rsi
	movq 8(%rbp),%rdi
	movq 16(%rbp),%r8
	movq 24(%rbp),%r9
	movq 32(%rbp),%r10
	movq 64(%rbp),%r11
	subq $8,%rsp
	movq %rdx,%r14
	addq %r9,%r14
	movq %rdx,72(%rsp)
	movq %r11,%rdx
	movq %rdi,80(%rsp)
	movq 7(%rbx),%rdi
	movq %rsi,%rbx
	movq %r14,%rsi
	movq %rax,%r14
	xorl %eax,%eax
	movq %rcx,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	movq %r10,112(%rsp)
	movq %r11,120(%rsp)
	call memcpy
	addq $8,%rsp
	movq $GHC.IO.Buffer.Buffer_con_info,-80(%r12)
	movq %rbx,-72(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq 88(%rsp),%rbx
	movq %rbx,-48(%r12)
	movq 96(%rsp),%rbx
	movq 112(%rsp),%rcx
	addq %rcx,%rbx
	movq %rbx,-40(%r12)
	movq 104(%rsp),%rbx
	movq %rbx,-32(%r12)
	leaq -79(%r12),%rbx
	movq 80(%rsp),%rdx
	movq %rbx,8(%rdx)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rdx,%rsi
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $sat_sb7cB_info,-24(%r12)
	movq %r14,-8(%r12)
	movq 112(%rsp),%rax
	movq %rax,(%r12)
	movq %rbx,%rax
	leaq -24(%r12),%rbx
	addq $88,%rbp
	movq (%rbp),%rcx
	jmp *(%rcx)
_cbaQ9:
	movq $88,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbaP7, .-_cbaP7


==================== Asm code ====================
2018-03-16 16:06:03.871749709 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaP7_info:
	.quad	_cbaP7
	.quad	45962
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.872304627 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$wbufReadNBEmpty_closure
.type GHC.IO.Handle.Text.$wbufReadNBEmpty_closure, @object
GHC.IO.Handle.Text.$wbufReadNBEmpty_closure:
	.quad	GHC.IO.Handle.Text.$wbufReadNBEmpty_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.872939845 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$wbufReadNBEmpty_slow
.type GHC.IO.Handle.Text.$wbufReadNBEmpty_slow, @object
GHC.IO.Handle.Text.$wbufReadNBEmpty_slow:
_cbaQg:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Text.$wbufReadNBEmpty_entry
	.size GHC.IO.Handle.Text.$wbufReadNBEmpty_slow, .-GHC.IO.Handle.Text.$wbufReadNBEmpty_slow


==================== Asm code ====================
2018-03-16 16:06:03.873742245 UTC

.section .text
.align 8
sat_sb7dz_entry:
_cbaR2:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaR9
_cbaRa:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbaQZ_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbaQZ
_cbaR0:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaR9:
	jmp *-16(%r13)
	.size sat_sb7dz_entry, .-sat_sb7dz_entry


==================== Asm code ====================
2018-03-16 16:06:03.874358132 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb7dz_info:
	.quad	sat_sb7dz_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:03.875075999 UTC

.section .text
.align 8
_cbaQZ:
_cbaQZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbaRd
_cbaRc:
	movq 7(%rbx),%rax
	addq 8(%rbp),%rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaRd:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbaQZ, .-_cbaQZ


==================== Asm code ====================
2018-03-16 16:06:03.875720143 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaQZ_info:
	.quad	_cbaQZ
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.876280755 UTC

.section .data.rel.ro
.align 8
.align 1
ubaSA_srtd:
	.quad	Sb7vQ_srt+56
	.quad	33
	.quad	8321499137


==================== Asm code ====================
2018-03-16 16:06:03.877027753 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$wbufReadNBEmpty_entry
.type GHC.IO.Handle.Text.$wbufReadNBEmpty_entry, @object
GHC.IO.Handle.Text.$wbufReadNBEmpty_entry:
_cbaRf:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaRg
_cbaRh:
	movq $block_cbaQk_info,-40(%rbp)
	movq %r14,%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbaQk
_cbaQl:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaRg:
	movl $GHC.IO.Handle.Text.$wbufReadNBEmpty_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.$wbufReadNBEmpty_entry, .-GHC.IO.Handle.Text.$wbufReadNBEmpty_entry


==================== Asm code ====================
2018-03-16 16:06:03.878181852 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$wbufReadNBEmpty_info
.type GHC.IO.Handle.Text.$wbufReadNBEmpty_info, @object
GHC.IO.Handle.Text.$wbufReadNBEmpty_info:
	.quad	GHC.IO.Handle.Text.$wbufReadNBEmpty_entry
	.quad	0
	.quad	-4294967282
	.quad	25769803776
	.quad	ubaSA_srtd
	.quad	1157
	.quad	GHC.IO.Handle.Text.$wbufReadNBEmpty_slow


==================== Asm code ====================
2018-03-16 16:06:03.878710694 UTC

.section .data.rel.ro
.align 8
.align 1
ubaSB_srtd:
	.quad	Sb7vQ_srt+56
	.quad	33
	.quad	8053063681


==================== Asm code ====================
2018-03-16 16:06:03.879408252 UTC

.section .text
.align 8
_cbaQk:
_cbaQk:
	movq $block_cbaQp_info,-32(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 31(%rbx),%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	movq %rax,(%rbp)
	addq $-32,%rbp
	jmp stg_ap_0_fast
	.size _cbaQk, .-_cbaQk


==================== Asm code ====================
2018-03-16 16:06:03.880037439 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaQk_info:
	.quad	_cbaQk
	.quad	580
	.quad	-4294967266
	.quad	ubaSB_srtd


==================== Asm code ====================
2018-03-16 16:06:03.88057569 UTC

.section .data.rel.ro
.align 8
.align 1
ubaSC_srtd:
	.quad	Sb7vQ_srt+56
	.quad	33
	.quad	8053063681


==================== Asm code ====================
2018-03-16 16:06:03.881276031 UTC

.section .text
.align 8
_cbaQp:
_cbaQp:
	movq 64(%rbp),%rax
	cmpq 40(%rbp),%rax
	jle _ubaSq
_cbaS9:
	movq $block_cbaQz_info,-8(%rbp)
	movl $lvl11_rb6WR_closure,%esi
	movq 16(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,16(%rbp)
	movq %rbx,40(%rbp)
	addq $-8,%rbp
	jmp Data.Typeable.Internal.sameTypeRep_entry
_ubaSq:
	movq %rbx,40(%rbp)
	addq $8,%rbp
	jmp _sb7d2
	.size _cbaQp, .-_cbaQp


==================== Asm code ====================
2018-03-16 16:06:03.881937612 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaQp_info:
	.quad	_cbaQp
	.quad	9224
	.quad	-4294967266
	.quad	ubaSC_srtd


==================== Asm code ====================
2018-03-16 16:06:03.882629 UTC

.section .text
.align 8
_cbaQz:
_cbaQz:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ubaSr
_cbaSf:
	movq $block_cbaQE_info,(%rbp)
	movq 56(%rbp),%rbx
	testb $7,%bl
	jne _cbaQE
_cbaQF:
	movq (%rbx),%rax
	jmp *(%rax)
_ubaSr:
	addq $16,%rbp
	jmp _sb7d2
	.size _cbaQz, .-_cbaQz


==================== Asm code ====================
2018-03-16 16:06:03.883195436 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaQz_info:
	.quad	_cbaQz
	.quad	16713
	.quad	30064771102
	.quad	Sb7vQ_srt+288


==================== Asm code ====================
2018-03-16 16:06:03.883919071 UTC

.section .text
.align 8
_sb7d2:
_sb7d2:
	movq 16(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbaRn_info,8(%rbp)
	movq (%rbp),%r14
	movq $stg_ap_ppv_info,-16(%rbp)
	movq 32(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.BufferedIO.fillReadBuffer0_entry
	.size _sb7d2, .-_sb7d2


==================== Asm code ====================
2018-03-16 16:06:03.884628306 UTC

.section .text
.align 8
_cbaRn:
_cbaRn:
	movq $block_cbaRp_info,(%rbp)
	testb $7,%bl
	jne _cbaRp
_cbaRs:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbaRn, .-_cbaRn


==================== Asm code ====================
2018-03-16 16:06:03.885182261 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaRn_info:
	.quad	_cbaRn
	.quad	2310
	.quad	4294967326
	.quad	Sb7vQ_srt+288


==================== Asm code ====================
2018-03-16 16:06:03.885867657 UTC

.section .text
.align 8
_cbaRp:
_cbaRp:
	movq $block_cbaRw_info,(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _cbaRw
_cbaRy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbaRp, .-_cbaRp


==================== Asm code ====================
2018-03-16 16:06:03.886467833 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaRp_info:
	.quad	_cbaRp
	.quad	2310
	.quad	4294967326
	.quad	Sb7vQ_srt+288


==================== Asm code ====================
2018-03-16 16:06:03.887790988 UTC

.section .text
.align 8
_cbaRw:
_cbaRw:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbaRE
_cbaRJ:
	movq $block_cbaRH_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbaRH
_cbaRK:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaRE:
	movq 40(%rbp),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbaRw, .-_cbaRw


==================== Asm code ====================
2018-03-16 16:06:03.888490435 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaRw_info:
	.quad	_cbaRw
	.quad	2054
	.quad	4294967326
	.quad	Sb7vQ_srt+288


==================== Asm code ====================
2018-03-16 16:06:03.889948132 UTC

.section .text
.align 8
_cbaRH:
_cbaRH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbaRQ
_cbaRP:
	movq 40(%rbp),%rax
	movq 7(%rbx),%rcx
	testq %rcx,%rcx
	je _cbaS6
_cbaS5:
	movq 32(%rbp),%rdx
	movq 48(%rbp),%rsi
	movq 16(%rbp),%rdi
	movq 8(%rbp),%r8
	movq 24(%rbp),%r9
	movq %r9,8(%r8)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %r8,%rsi
	movq %rdi,%r8
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %rdx,%r14
	movq %r10,72(%rsp)
	movq %r11,80(%rsp)
	movq %r8,88(%rsp)
	movq %r9,96(%rsp)
	movq %rcx,104(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq 72(%rsp),%rcx
	movq 96(%rsp),%rax
	cmpq %rax,%rcx
	jg _cbaRZ
_cbaS3:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rcx,(%r12)
	leaq -7(%r12),%r9
	movq 64(%rsp),%rax
	movq %rax,%r8
	movq %r14,%rdi
	movq 88(%rsp),%rax
	movq %rax,%rsi
	movq 80(%rsp),%rax
	movq %rax,%r14
	addq $56,%rbp
	jmp GHC.IO.Handle.Text.hGetBufNonBlocking2_entry
_cbaS6:
	addq $-16,%r12
	movq %rax,%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaRZ:
	addq $-16,%r12
	movq %rbx,%r9
	movq 64(%rsp),%rax
	movq %rax,%r8
	movq %r14,%rdi
	movq 88(%rsp),%rax
	movq %rax,%rsi
	movq 80(%rsp),%rax
	movq %rax,%r14
	addq $56,%rbp
	jmp GHC.IO.Handle.Text.hGetBufNonBlocking2_entry
_cbaRQ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbaRH, .-_cbaRH


==================== Asm code ====================
2018-03-16 16:06:03.890806204 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaRH_info:
	.quad	_cbaRH
	.quad	2054
	.quad	4294967326
	.quad	Sb7vQ_srt+288


==================== Asm code ====================
2018-03-16 16:06:03.891442929 UTC

.section .text
.align 8
_cbaQE:
_cbaQE:
	movq $block_cbaQM_info,56(%rbp)
	xorl %r9d,%r9d
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movl $GHC.IO.FD.$fBufferedIOFD8_closure,%r14d
	movq 72(%rbp),%rax
	movq %rax,48(%rbp)
	addq $48,%rbp
	jmp GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry
	.size _cbaQE, .-_cbaQE


==================== Asm code ====================
2018-03-16 16:06:03.892102039 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaQE_info:
	.quad	_cbaQE
	.quad	24521
	.quad	12884901918
	.quad	Sb7vQ_srt+296


==================== Asm code ====================
2018-03-16 16:06:03.892748008 UTC

.section .text
.align 8
_cbaQM:
_cbaQM:
	movq $block_cbaQO_info,(%rbp)
	testb $7,%bl
	jne _cbaQO
_cbaQP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbaQM, .-_cbaQM


==================== Asm code ====================
2018-03-16 16:06:03.893344685 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaQM_info:
	.quad	_cbaQM
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.894087852 UTC

.section .text
.align 8
_cbaQO:
_cbaQO:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbaSk
_cbaSj:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _cbaSm
_cbaSn:
	addq $-32,%r12
	movq %rax,%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaSm:
	movq $sat_sb7dz_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaSk:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbaQO, .-_cbaQO


==================== Asm code ====================
2018-03-16 16:06:03.894771337 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaQO_info:
	.quad	_cbaQO
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.89645264 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.hGetBufNonBlocking4_bytes
.type GHC.IO.Handle.Text.hGetBufNonBlocking4_bytes, @object
GHC.IO.Handle.Text.hGetBufNonBlocking4_bytes:
	.asciz "hGetBufNonBlocking"


==================== Asm code ====================
2018-03-16 16:06:03.899130328 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufNonBlocking3_closure
.type GHC.IO.Handle.Text.hGetBufNonBlocking3_closure, @object
GHC.IO.Handle.Text.hGetBufNonBlocking3_closure:
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.8999357 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBufNonBlocking3_entry
.type GHC.IO.Handle.Text.hGetBufNonBlocking3_entry, @object
GHC.IO.Handle.Text.hGetBufNonBlocking3_entry:
_cbaV5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaV6
_cbaV7:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbaV4
_cbaV3:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Text.hGetBufNonBlocking4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbaV6:
	jmp *-16(%r13)
_cbaV4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.hGetBufNonBlocking3_entry, .-GHC.IO.Handle.Text.hGetBufNonBlocking3_entry


==================== Asm code ====================
2018-03-16 16:06:03.900638317 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufNonBlocking3_info
.type GHC.IO.Handle.Text.hGetBufNonBlocking3_info, @object
GHC.IO.Handle.Text.hGetBufNonBlocking3_info:
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:03.916716984 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whGetBufNonBlocking_closure
.type GHC.IO.Handle.Text.$whGetBufNonBlocking_closure, @object
GHC.IO.Handle.Text.$whGetBufNonBlocking_closure:
	.quad	GHC.IO.Handle.Text.$whGetBufNonBlocking_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.917571492 UTC

.section .text
.align 8
sat_sb7eF_entry:
_cbaW0:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaW4
_cbaW5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbaVX_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbaVX
_cbaVY:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaW4:
	jmp *-16(%r13)
	.size sat_sb7eF_entry, .-sat_sb7eF_entry


==================== Asm code ====================
2018-03-16 16:06:03.918249818 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb7eF_info:
	.quad	sat_sb7eF_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:03.918999294 UTC

.section .text
.align 8
_cbaVX:
_cbaVX:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbaW8
_cbaW7:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaW8:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbaVX, .-_cbaVX


==================== Asm code ====================
2018-03-16 16:06:03.919684229 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaVX_info:
	.quad	_cbaVX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.920422262 UTC

.section .text
.align 8
sat_sb7eY_entry:
_cbaWw:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaWD
_cbaWE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbaWt_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbaWt
_cbaWu:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaWD:
	jmp *-16(%r13)
	.size sat_sb7eY_entry, .-sat_sb7eY_entry


==================== Asm code ====================
2018-03-16 16:06:03.921093828 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb7eY_info:
	.quad	sat_sb7eY_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:03.921858186 UTC

.section .text
.align 8
_cbaWt:
_cbaWt:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbaWH
_cbaWG:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 39(%rbx),%rbx
	addq 8(%rbp),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbaWH:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbaWt, .-_cbaWt


==================== Asm code ====================
2018-03-16 16:06:03.922549956 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaWt_info:
	.quad	_cbaWt
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.923354026 UTC

.section .text
.align 8
sat_sb7fj_entry:
_cbaWJ:
	leaq -104(%rbp),%rax
	cmpq %r15,%rax
	jb _cbaWK
_cbaWL:
	movq $block_cbaVu_info,-32(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbaVu
_cbaVv:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaWK:
	jmp *-8(%r13)
	.size sat_sb7fj_entry, .-sat_sb7fj_entry


==================== Asm code ====================
2018-03-16 16:06:03.924004597 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb7fj_info:
	.quad	sat_sb7fj_entry
	.quad	4294967298
	.quad	12884901896
	.quad	8589934597
	.quad	Sb7vQ_srt+280


==================== Asm code ====================
2018-03-16 16:06:03.924723036 UTC

.section .text
.align 8
_cbaVu:
_cbaVu:
	movq $block_cbaVz_info,-40(%rbp)
	movq %rbx,%rax
	movq 47(%rbx),%rcx
	movq 63(%rbx),%rdx
	movq 71(%rbx),%rsi
	movq 95(%rbx),%rbx
	movq %rbx,%rdi
	movq 8(%rsi),%rbx
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	movq %rax,(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbaVz
_cbaVA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbaVu, .-_cbaVu


==================== Asm code ====================
2018-03-16 16:06:03.925395143 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaVu_info:
	.quad	_cbaVu
	.quad	131
	.quad	12884901918
	.quad	Sb7vQ_srt+280


==================== Asm code ====================
2018-03-16 16:06:03.926071793 UTC

.section .text
.align 8
_cbaVz:
_cbaVz:
	movq $block_cbaVG_info,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbaVG
_cbaVH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbaVz, .-_cbaVz


==================== Asm code ====================
2018-03-16 16:06:03.926711217 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaVz_info:
	.quad	_cbaVz
	.quad	4104
	.quad	12884901918
	.quad	Sb7vQ_srt+280


==================== Asm code ====================
2018-03-16 16:06:03.927493148 UTC

.section .text
.align 8
_cbaVG:
_cbaVG:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbaXJ
_ubaY0:
	addq $24,%rbp
	jmp _sb7ea
_ubaY1:
	addq $24,%rbp
	jmp _sb7ea
_cbaXJ:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _ubaY1
_cbaX5:
	movq 32(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbaVO_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbaVO
_cbaVP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbaVG, .-_cbaVG


==================== Asm code ====================
2018-03-16 16:06:03.928184343 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaVG_info:
	.quad	_cbaVG
	.quad	16586
	.quad	12884901918
	.quad	Sb7vQ_srt+280


==================== Asm code ====================
2018-03-16 16:06:03.929076263 UTC

.section .text
.align 8
_cbaVO:
_cbaVO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbaX8
_cbaX7:
	movq 24(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq 8(%rax),%rdx
	movq $sat_sb7eF_info,-16(%r12)
	movq %rdx,(%r12)
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cbaWd_info,(%rbp)
	movq %rbx,%rcx
	movq 64(%rsp),%rax
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	movq %r14,24(%rbp)
	testb $7,%bl
	jne _cbaWd
_cbaWe:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaX8:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbaVO, .-_cbaVO


==================== Asm code ====================
2018-03-16 16:06:03.929868225 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaVO_info:
	.quad	_cbaVO
	.quad	4232
	.quad	12884901918
	.quad	Sb7vQ_srt+280


==================== Asm code ====================
2018-03-16 16:06:03.930707328 UTC

.section .text
.align 8
_cbaWd:
_cbaWd:
	movq 39(%rbx),%rax
	testq %rax,%rax
	jne _cbaXb
_cbaXG:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $8,%rbp
	jmp _sb7ea
_cbaXb:
	movq $block_cbaWk_info,-24(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq 32(%rbp),%rbx
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rsi,32(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbaWk
_cbaWl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbaWd, .-_cbaWd


==================== Asm code ====================
2018-03-16 16:06:03.931401246 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaWd_info:
	.quad	_cbaWd
	.quad	4104
	.quad	12884901918
	.quad	Sb7vQ_srt+280


==================== Asm code ====================
2018-03-16 16:06:03.932308783 UTC

.section .text
.align 8
_cbaWk:
_cbaWk:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbaXd
_cbaXv:
	movq $block_cbaXj_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbaXj
_cbaXk:
	movq (%rbx),%rax
	jmp *(%rax)
_cbaXg:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_cbaXd:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbaXg
_cbaXf:
	movq $sat_sb7eY_info,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 32(%rbp),%rax
	leaq -24(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $32,%rbp
	jmp _sb7ea
	.size _cbaWk, .-_cbaWk


==================== Asm code ====================
2018-03-16 16:06:03.933038627 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaWk_info:
	.quad	_cbaWk
	.quad	37003
	.quad	12884901918
	.quad	Sb7vQ_srt+280


==================== Asm code ====================
2018-03-16 16:06:03.93437061 UTC

.section .text
.align 8
_cbaXj:
_cbaXj:
	movq $block_cbaXo_info,-8(%rbp)
	movq 48(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,48(%rbp)
	addq $-8,%rbp
	jmp stg_ap_pv_fast
	.size _cbaXj, .-_cbaXj


==================== Asm code ====================
2018-03-16 16:06:03.935017841 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaXj_info:
	.quad	_cbaXj
	.quad	37003
	.quad	12884901918
	.quad	Sb7vQ_srt+280


==================== Asm code ====================
2018-03-16 16:06:03.935750543 UTC

.section .text
.align 8
_cbaXo:
_cbaXo:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbaXz
_cbaXy:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 64(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq $block_cbaXr_info,32(%rbp)
	leaq -47(%r12),%r8
	movq 48(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 56(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_cbaXz:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbaXo, .-_cbaXo


==================== Asm code ====================
2018-03-16 16:06:03.936429144 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaXo_info:
	.quad	_cbaXo
	.quad	73996
	.quad	12884901918
	.quad	Sb7vQ_srt+280


==================== Asm code ====================
2018-03-16 16:06:03.937064589 UTC

.section .text
.align 8
_cbaXr:
_cbaXr:
	movq $block_cbaXt_info,(%rbp)
	testb $7,%bl
	jne _cbaXt
_cbaXB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbaXr, .-_cbaXr


==================== Asm code ====================
2018-03-16 16:06:03.937688001 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaXr_info:
	.quad	_cbaXr
	.quad	5000
	.quad	12884901918
	.quad	Sb7vQ_srt+280


==================== Asm code ====================
2018-03-16 16:06:03.938369739 UTC

.section .text
.align 8
_cbaXt:
_cbaXt:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $8,%rbp
	jmp _sb7ea
	.size _cbaXt, .-_cbaXt


==================== Asm code ====================
2018-03-16 16:06:03.938983817 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaXt_info:
	.quad	_cbaXt
	.quad	5000
	.quad	12884901918
	.quad	Sb7vQ_srt+280


==================== Asm code ====================
2018-03-16 16:06:03.939679717 UTC

.section .text
.align 8
_sb7ea:
_sb7ea:
	movq (%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbaWR_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _cbaWR
_cbaWT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sb7ea, .-_sb7ea


==================== Asm code ====================
2018-03-16 16:06:03.940472436 UTC

.section .text
.align 8
_cbaWR:
_cbaWR:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 39(%rbx),%rdx
	cmpq 47(%rbx),%rdx
	je _cbaX2
_cbaX1:
	movq 32(%rbp),%r9
	movl $GHC.IO.Handle.Text.hGetBuf3_closure+1,%r8d
	movq %rax,%rdi
	movq %rbx,%rsi
	movq %rcx,%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Text.hGetBufNonBlocking2_entry
_cbaX2:
	movq 24(%rbp),%r9
	movl $GHC.IO.Handle.Text.hGetBuf3_closure+1,%r8d
	movq %rax,%rdi
	movq 31(%rbx),%rsi
	movq %rcx,%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Text.$wbufReadNBEmpty_entry
	.size _cbaWR, .-_cbaWR


==================== Asm code ====================
2018-03-16 16:06:03.941112123 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbaWR_info:
	.quad	_cbaWR
	.quad	260
	.quad	12884901918
	.quad	Sb7vQ_srt+280


==================== Asm code ====================
2018-03-16 16:06:03.941684505 UTC

.section .data.rel.ro
.align 8
.align 1
ubaYu_srtd:
	.quad	Sb7vQ_srt+8
	.quad	41
	.quad	1700807051265


==================== Asm code ====================
2018-03-16 16:06:03.942474122 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$whGetBufNonBlocking_entry
.type GHC.IO.Handle.Text.$whGetBufNonBlocking_entry, @object
GHC.IO.Handle.Text.$whGetBufNonBlocking_entry:
_cbaYm:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbaYq
_cbaYp:
	testq %rdi,%rdi
	je _cbaYl
_cbaYk:
	testq %rdi,%rdi
	jge _cbaYs
_cbaYt:
	addq $-48,%r12
	movl $GHC.IO.Handle.Text.hGetBufNonBlocking3_closure,%esi
	jmp GHC.IO.Handle.Text.$willegalBufferSize_entry
_cbaYs:
	movq $GHC.Types.I#_con_info,-40(%r12)
	movq %rdi,-32(%r12)
	movq $sat_sb7fj_info,-24(%r12)
	movq %rsi,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	movq %rdi,(%r12)
	leaq -22(%r12),%rdi
	movq %r14,%rsi
	movl $GHC.IO.Handle.Text.hGetBufNonBlocking3_closure,%r14d
	jmp GHC.IO.Handle.Internals.wantReadableHandle_1_entry
_cbaYq:
	movq $48,904(%r13)
	movl $GHC.IO.Handle.Text.$whGetBufNonBlocking_closure,%ebx
	jmp *-8(%r13)
_cbaYl:
	addq $-48,%r12
	movl $GHC.IO.Handle.Text.hGetBuf3_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.$whGetBufNonBlocking_entry, .-GHC.IO.Handle.Text.$whGetBufNonBlocking_entry


==================== Asm code ====================
2018-03-16 16:06:03.943268021 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whGetBufNonBlocking_info
.type GHC.IO.Handle.Text.$whGetBufNonBlocking_info, @object
GHC.IO.Handle.Text.$whGetBufNonBlocking_info:
	.quad	GHC.IO.Handle.Text.$whGetBufNonBlocking_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869206
	.quad	ubaYu_srtd


==================== Asm code ====================
2018-03-16 16:06:03.94638983 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufNonBlocking1_closure
.type GHC.IO.Handle.Text.hGetBufNonBlocking1_closure, @object
GHC.IO.Handle.Text.hGetBufNonBlocking1_closure:
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.947137669 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBufNonBlocking1_entry
.type GHC.IO.Handle.Text.hGetBufNonBlocking1_entry, @object
GHC.IO.Handle.Text.hGetBufNonBlocking1_entry:
_cbb08:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbb09
_cbb0a:
	movq $block_cbb05_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbb05
_cbb06:
	movq (%rbx),%rax
	jmp *(%rax)
_cbb09:
	movl $GHC.IO.Handle.Text.hGetBufNonBlocking1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetBufNonBlocking1_entry, .-GHC.IO.Handle.Text.hGetBufNonBlocking1_entry


==================== Asm code ====================
2018-03-16 16:06:03.947778161 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufNonBlocking1_info
.type GHC.IO.Handle.Text.hGetBufNonBlocking1_info, @object
GHC.IO.Handle.Text.hGetBufNonBlocking1_info:
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking1_entry
	.quad	0
	.quad	21474836494
	.quad	17179869207
	.quad	Sb7vQ_srt+320


==================== Asm code ====================
2018-03-16 16:06:03.948438291 UTC

.section .text
.align 8
_cbb05:
_cbb05:
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Text.$whGetBufNonBlocking_entry
	.size _cbb05, .-_cbb05


==================== Asm code ====================
2018-03-16 16:06:03.949029411 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb05_info:
	.quad	_cbb05
	.quad	2
	.quad	4294967326
	.quad	Sb7vQ_srt+320


==================== Asm code ====================
2018-03-16 16:06:03.951163853 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufNonBlocking_closure
.type GHC.IO.Handle.Text.hGetBufNonBlocking_closure, @object
GHC.IO.Handle.Text.hGetBufNonBlocking_closure:
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.951781662 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBufNonBlocking_entry
.type GHC.IO.Handle.Text.hGetBufNonBlocking_entry, @object
GHC.IO.Handle.Text.hGetBufNonBlocking_entry:
_cbb0s:
	jmp GHC.IO.Handle.Text.hGetBufNonBlocking1_entry
	.size GHC.IO.Handle.Text.hGetBufNonBlocking_entry, .-GHC.IO.Handle.Text.hGetBufNonBlocking_entry


==================== Asm code ====================
2018-03-16 16:06:03.952346917 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufNonBlocking_info
.type GHC.IO.Handle.Text.hGetBufNonBlocking_info, @object
GHC.IO.Handle.Text.hGetBufNonBlocking_info:
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	Sb7vQ_srt+336


==================== Asm code ====================
2018-03-16 16:06:03.953993558 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl12_rb6WS_bytes:
	.asciz "hGetBufSome"


==================== Asm code ====================
2018-03-16 16:06:03.956436314 UTC

.section .data
.align 8
.align 1
lvl13_rb6WT_closure:
	.quad	lvl13_rb6WT_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.957212828 UTC

.section .text
.align 8
lvl13_rb6WT_entry:
_cbb0G:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbb0H
_cbb0I:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbb0F
_cbb0E:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl12_rb6WS_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbb0H:
	jmp *-16(%r13)
_cbb0F:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl13_rb6WT_entry, .-lvl13_rb6WT_entry


==================== Asm code ====================
2018-03-16 16:06:03.957876821 UTC

.section .data.rel.ro
.align 8
.align 1
lvl13_rb6WT_info:
	.quad	lvl13_rb6WT_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:03.980660273 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whGetBufSome_closure
.type GHC.IO.Handle.Text.$whGetBufSome_closure, @object
GHC.IO.Handle.Text.$whGetBufSome_closure:
	.quad	GHC.IO.Handle.Text.$whGetBufSome_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:03.981603646 UTC

.section .text
.align 8
sat_sb7gT_entry:
_cbb1F:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbb1J
_cbb1K:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbb1C_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbb1C
_cbb1D:
	movq (%rbx),%rax
	jmp *(%rax)
_cbb1J:
	jmp *-16(%r13)
	.size sat_sb7gT_entry, .-sat_sb7gT_entry


==================== Asm code ====================
2018-03-16 16:06:03.982230787 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb7gT_info:
	.quad	sat_sb7gT_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:03.982967945 UTC

.section .text
.align 8
_cbb1C:
_cbb1C:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbb1N
_cbb1M:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbb1N:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbb1C, .-_cbb1C


==================== Asm code ====================
2018-03-16 16:06:03.983637753 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb1C_info:
	.quad	_cbb1C
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.984324584 UTC

.section .text
.align 8
sat_sb7hc_entry:
_cbb2b:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbb2i
_cbb2j:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbb28_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbb28
_cbb29:
	movq (%rbx),%rax
	jmp *(%rax)
_cbb2i:
	jmp *-16(%r13)
	.size sat_sb7hc_entry, .-sat_sb7hc_entry


==================== Asm code ====================
2018-03-16 16:06:03.98581178 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb7hc_info:
	.quad	sat_sb7hc_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:03.986609938 UTC

.section .text
.align 8
_cbb28:
_cbb28:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbb2m
_cbb2l:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 39(%rbx),%rbx
	addq 8(%rbp),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbb2m:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbb28, .-_cbb28


==================== Asm code ====================
2018-03-16 16:06:03.987274638 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb28_info:
	.quad	_cbb28
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:03.987784894 UTC

.section .data.rel.ro
.align 8
.align 1
ubb5t_srtd:
	.quad	Sb7vQ_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:03.988502521 UTC

.section .text
.align 8
sat_sb7hx_entry:
_cbb2o:
	leaq -144(%rbp),%rax
	cmpq %r15,%rax
	jb _cbb2p
_cbb2q:
	movq $block_cbb15_info,-32(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbb15
_cbb16:
	movq (%rbx),%rax
	jmp *(%rax)
_cbb2p:
	jmp *-8(%r13)
	.size sat_sb7hx_entry, .-sat_sb7hx_entry


==================== Asm code ====================
2018-03-16 16:06:03.98913839 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb7hx_info:
	.quad	sat_sb7hx_entry
	.quad	4294967298
	.quad	-4294967288
	.quad	8589934597
	.quad	ubb5t_srtd


==================== Asm code ====================
2018-03-16 16:06:03.989701875 UTC

.section .data.rel.ro
.align 8
.align 1
ubb5u_srtd:
	.quad	Sb7vQ_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:03.990329424 UTC

.section .text
.align 8
_cbb15:
_cbb15:
	movq $block_cbb1a_info,-56(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 63(%rbx),%rdi
	movq 71(%rbx),%r8
	movq 95(%rbx),%r9
	movq 31(%rbx),%rbx
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rax,(%rbp)
	addq $-56,%rbp
	jmp stg_ap_0_fast
	.size _cbb15, .-_cbb15


==================== Asm code ====================
2018-03-16 16:06:03.990951722 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb15_info:
	.quad	_cbb15
	.quad	131
	.quad	-4294967266
	.quad	ubb5u_srtd


==================== Asm code ====================
2018-03-16 16:06:03.991501729 UTC

.section .data.rel.ro
.align 8
.align 1
ubb5v_srtd:
	.quad	Sb7vQ_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:03.992207921 UTC

.section .text
.align 8
_cbb1a:
_cbb1a:
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbb1e_info,-24(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rbx
	movq %rbx,%rsi
	movq %rax,%rbx
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	movq %rcx,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbb1e
_cbb1f:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbb1a, .-_cbb1a


==================== Asm code ====================
2018-03-16 16:06:03.99283098 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb1a_info:
	.quad	_cbb1a
	.quad	16394
	.quad	-4294967266
	.quad	ubb5v_srtd


==================== Asm code ====================
2018-03-16 16:06:03.993360586 UTC

.section .data.rel.ro
.align 8
.align 1
ubb5w_srtd:
	.quad	Sb7vQ_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:03.994022898 UTC

.section .text
.align 8
_cbb1e:
_cbb1e:
	movq $block_cbb1l_info,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbb1l
_cbb1m:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbb1e, .-_cbb1e


==================== Asm code ====================
2018-03-16 16:06:03.994626287 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb1e_info:
	.quad	_cbb1e
	.quad	131277
	.quad	-4294967266
	.quad	ubb5w_srtd


==================== Asm code ====================
2018-03-16 16:06:03.995165863 UTC

.section .data.rel.ro
.align 8
.align 1
ubb5x_srtd:
	.quad	Sb7vQ_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:03.995911603 UTC

.section .text
.align 8
_cbb1l:
_cbb1l:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbb4z
_ubb4S:
	addq $24,%rbp
	jmp _sb7g3
_ubb4T:
	addq $24,%rbp
	jmp _sb7g3
_cbb4z:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _ubb4T
_cbb3V:
	movq 72(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbb1t_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbb1t
_cbb1u:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbb1l, .-_cbb1l


==================== Asm code ====================
2018-03-16 16:06:03.996536253 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb1l_info:
	.quad	_cbb1l
	.quad	525263
	.quad	-4294967266
	.quad	ubb5x_srtd


==================== Asm code ====================
2018-03-16 16:06:03.997080805 UTC

.section .data.rel.ro
.align 8
.align 1
ubb5y_srtd:
	.quad	Sb7vQ_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:03.998086198 UTC

.section .text
.align 8
_cbb1t:
_cbb1t:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbb3Y
_cbb3X:
	movq 64(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq 8(%rax),%rdx
	movq $sat_sb7gT_info,-16(%r12)
	movq %rdx,(%r12)
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cbb1S_info,(%rbp)
	movq %rbx,%rcx
	movq 64(%rsp),%rax
	movq %rax,%rbx
	movq %rcx,56(%rbp)
	movq %r14,64(%rbp)
	testb $7,%bl
	jne _cbb1S
_cbb1T:
	movq (%rbx),%rax
	jmp *(%rax)
_cbb3Y:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbb1t, .-_cbb1t


==================== Asm code ====================
2018-03-16 16:06:03.99878249 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb1t_info:
	.quad	_cbb1t
	.quad	135373
	.quad	-4294967266
	.quad	ubb5y_srtd


==================== Asm code ====================
2018-03-16 16:06:03.999311842 UTC

.section .data.rel.ro
.align 8
.align 1
ubb5z_srtd:
	.quad	Sb7vQ_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:04.000067366 UTC

.section .text
.align 8
_cbb1S:
_cbb1S:
	movq 39(%rbx),%rax
	testq %rax,%rax
	jne _cbb41
_cbb4w:
	movq 48(%rbp),%rax
	movq 56(%rbp),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $8,%rbp
	jmp _sb7g3
_cbb41:
	movq $block_cbb1Z_info,-24(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq 72(%rbp),%rbx
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rsi,72(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbb1Z
_cbb20:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbb1S, .-_cbb1S


==================== Asm code ====================
2018-03-16 16:06:04.000729788 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb1S_info:
	.quad	_cbb1S
	.quad	131277
	.quad	-4294967266
	.quad	ubb5z_srtd


==================== Asm code ====================
2018-03-16 16:06:04.001261461 UTC

.section .data.rel.ro
.align 8
.align 1
ubb5A_srtd:
	.quad	Sb7vQ_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:04.002058736 UTC

.section .text
.align 8
_cbb1Z:
_cbb1Z:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbb43
_cbb4l:
	movq $block_cbb49_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbb49
_cbb4a:
	movq (%rbx),%rax
	jmp *(%rax)
_cbb46:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_cbb43:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbb46
_cbb45:
	movq $sat_sb7hc_info,-24(%r12)
	movq 80(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 72(%rbp),%rax
	leaq -24(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $32,%rbp
	jmp _sb7g3
	.size _cbb1Z, .-_cbb1Z


==================== Asm code ====================
2018-03-16 16:06:04.002757574 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb1Z_info:
	.quad	_cbb1Z
	.quad	1181328
	.quad	-4294967266
	.quad	ubb5A_srtd


==================== Asm code ====================
2018-03-16 16:06:04.003289649 UTC

.section .data.rel.ro
.align 8
.align 1
ubb5B_srtd:
	.quad	Sb7vQ_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:04.003906447 UTC

.section .text
.align 8
_cbb49:
_cbb49:
	movq $block_cbb4e_info,-8(%rbp)
	movq 88(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,88(%rbp)
	addq $-8,%rbp
	jmp stg_ap_pv_fast
	.size _cbb49, .-_cbb49


==================== Asm code ====================
2018-03-16 16:06:04.004481473 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb49_info:
	.quad	_cbb49
	.quad	1181328
	.quad	-4294967266
	.quad	ubb5B_srtd


==================== Asm code ====================
2018-03-16 16:06:04.005030291 UTC

.section .data.rel.ro
.align 8
.align 1
ubb5C_srtd:
	.quad	Sb7vQ_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:04.005796895 UTC

.section .text
.align 8
_cbb4e:
_cbb4e:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbb4p
_cbb4o:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 104(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq $block_cbb4h_info,32(%rbp)
	leaq -47(%r12),%r8
	movq 88(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 96(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_cbb4p:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbb4e, .-_cbb4e


==================== Asm code ====================
2018-03-16 16:06:04.006444304 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb4e_info:
	.quad	_cbb4e
	.quad	2362641
	.quad	-4294967266
	.quad	ubb5C_srtd


==================== Asm code ====================
2018-03-16 16:06:04.00696779 UTC

.section .data.rel.ro
.align 8
.align 1
ubb5D_srtd:
	.quad	Sb7vQ_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:04.00758208 UTC

.section .text
.align 8
_cbb4h:
_cbb4h:
	movq $block_cbb4j_info,(%rbp)
	testb $7,%bl
	jne _cbb4j
_cbb4r:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbb4h, .-_cbb4h


==================== Asm code ====================
2018-03-16 16:06:04.008078862 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb4h_info:
	.quad	_cbb4h
	.quad	159949
	.quad	-4294967266
	.quad	ubb5D_srtd


==================== Asm code ====================
2018-03-16 16:06:04.008620286 UTC

.section .data.rel.ro
.align 8
.align 1
ubb5E_srtd:
	.quad	Sb7vQ_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:04.009223014 UTC

.section .text
.align 8
_cbb4j:
_cbb4j:
	movq 48(%rbp),%rax
	movq 7(%rbx),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $8,%rbp
	jmp _sb7g3
	.size _cbb4j, .-_cbb4j


==================== Asm code ====================
2018-03-16 16:06:04.010229644 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb4j_info:
	.quad	_cbb4j
	.quad	159949
	.quad	-4294967266
	.quad	ubb5E_srtd


==================== Asm code ====================
2018-03-16 16:06:04.010875882 UTC

.section .text
.align 8
_sb7g3:
_sb7g3:
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbb2x_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbb2x
_cbb2z:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sb7g3, .-_sb7g3


==================== Asm code ====================
2018-03-16 16:06:04.011447362 UTC

.section .data.rel.ro
.align 8
.align 1
ubb5F_srtd:
	.quad	Sb7vQ_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:04.012378648 UTC

.section .text
.align 8
_cbb2x:
_cbb2x:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbb2F
_cbb2E:
	movq 96(%rbp),%rax
	movq 39(%rbx),%rcx
	movq 47(%rbx),%rdx
	cmpq %rdx,%rcx
	je _cbb3S
_cbb2U:
	movq 88(%rbp),%rsi
	movq 80(%rbp),%rdi
	subq %rcx,%rdx
	cmpq %rdx,%rax
	jg _cbb2R
_cbb2S:
	addq $-16,%r12
	movq 104(%rbp),%r9
	movl $GHC.IO.Handle.Text.hGetBuf3_closure+1,%r8d
	movq %rdi,%rax
	movq %rsi,%rdi
	movq %rbx,%rsi
	movq %rax,%r14
	addq $112,%rbp
	jmp GHC.IO.Handle.Text.hGetBufNonBlocking2_entry
_cbb3S:
	cmpq 31(%rbx),%rax
	jle _cbb3x
_cbb3B:
	addq $-16,%r12
	movq $block_cbb3A_info,(%rbp)
	movl $lvl11_rb6WR_closure,%esi
	movq 40(%rbp),%r14
	movq %rbx,72(%rbp)
	jmp Data.Typeable.Internal.sameTypeRep_entry
_cbb3x:
	addq $-16,%r12
	movq %rbx,72(%rbp)
	addq $24,%rbp
	jmp _sb7gj
_cbb2R:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rdx,(%r12)
	leaq -7(%r12),%r9
	movl $GHC.IO.Handle.Text.hGetBuf3_closure+1,%r8d
	movq %rdi,%rax
	movq %rsi,%rdi
	movq %rbx,%rsi
	movq %rax,%r14
	addq $112,%rbp
	jmp GHC.IO.Handle.Text.hGetBufNonBlocking2_entry
_cbb2F:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbb2x, .-_cbb2x


==================== Asm code ====================
2018-03-16 16:06:04.01320111 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb2x_info:
	.quad	_cbb2x
	.quad	159949
	.quad	-4294967266
	.quad	ubb5F_srtd


==================== Asm code ====================
2018-03-16 16:06:04.0144989 UTC

.section .text
.align 8
_cbb3A:
_cbb3A:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ubb4Y
_cbb3M:
	movq $block_cbb3K_info,(%rbp)
	movq 88(%rbp),%rbx
	testb $7,%bl
	jne _cbb3K
_cbb3N:
	movq (%rbx),%rax
	jmp *(%rax)
_ubb4Y:
	addq $24,%rbp
	jmp _sb7gj
	.size _cbb3A, .-_cbb3A


==================== Asm code ====================
2018-03-16 16:06:04.015125953 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb3A_info:
	.quad	_cbb3A
	.quad	144589
	.quad	1653562408990
	.quad	Sb7vQ_srt+288


==================== Asm code ====================
2018-03-16 16:06:04.015789584 UTC

.section .text
.align 8
_sb7gj:
_sb7gj:
	movq $block_cbb31_info,16(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_ppv_info,-8(%rbp)
	movq 48(%rbp),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp GHC.IO.BufferedIO.fillReadBuffer_entry
	.size _sb7gj, .-_sb7gj


==================== Asm code ====================
2018-03-16 16:06:04.016439238 UTC

.section .text
.align 8
_cbb31:
_cbb31:
	movq $block_cbb33_info,(%rbp)
	testb $7,%bl
	jne _cbb33
_cbb34:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbb31, .-_cbb31


==================== Asm code ====================
2018-03-16 16:06:04.017024753 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb31_info:
	.quad	_cbb31
	.quad	5000
	.quad	4294967326
	.quad	Sb7vQ_srt+288


==================== Asm code ====================
2018-03-16 16:06:04.017761559 UTC

.section .text
.align 8
_cbb33:
_cbb33:
	movq $block_cbb38_info,(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _cbb38
_cbb3c:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbb33, .-_cbb33


==================== Asm code ====================
2018-03-16 16:06:04.018341326 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb33_info:
	.quad	_cbb33
	.quad	5000
	.quad	4294967326
	.quad	Sb7vQ_srt+288


==================== Asm code ====================
2018-03-16 16:06:04.019263697 UTC

.section .text
.align 8
_cbb38:
_cbb38:
	movq 7(%rbx),%rax
	testq %rax,%rax
	je _cbb3t
_cbb3s:
	movq 48(%rbp),%rcx
	movq 56(%rbp),%rdx
	movq 64(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq 8(%rbp),%r8
	movq 32(%rbp),%r9
	movq %r9,8(%r8)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %r8,%rsi
	movq %rdi,%r8
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r11,80(%rsp)
	movq %r8,88(%rsp)
	movq %r9,96(%rsp)
	movq %r10,104(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq 96(%rsp),%rcx
	movq 64(%rsp),%rax
	cmpq %rax,%rcx
	jg _cbb3p
_cbb3q:
	movq %rbx,%r9
	movl $GHC.IO.Handle.Text.hGetBuf3_closure+1,%r8d
	movq %r14,%rdi
	movq 88(%rsp),%rax
	movq %rax,%rsi
	movq 80(%rsp),%rax
	movq %rax,%r14
	addq $72,%rbp
	jmp GHC.IO.Handle.Text.hGetBufNonBlocking2_entry
_cbb3t:
	movl $GHC.IO.Handle.Text.hGetBuf3_closure+1,%ebx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbb3p:
	movq 72(%rsp),%rax
	movq %rax,%r9
	movl $GHC.IO.Handle.Text.hGetBuf3_closure+1,%r8d
	movq %r14,%rdi
	movq 88(%rsp),%rax
	movq %rax,%rsi
	movq 80(%rsp),%rax
	movq %rax,%r14
	addq $72,%rbp
	jmp GHC.IO.Handle.Text.hGetBufNonBlocking2_entry
	.size _cbb38, .-_cbb38


==================== Asm code ====================
2018-03-16 16:06:04.020070171 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb38_info:
	.quad	_cbb38
	.quad	4488
	.quad	4294967326
	.quad	Sb7vQ_srt+288


==================== Asm code ====================
2018-03-16 16:06:04.020796872 UTC

.section .text
.align 8
_cbb3K:
_cbb3K:
	xorl %r9d,%r9d
	movq 7(%rbx),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movl $GHC.IO.FD.$fBufferedIOFD12_closure,%r14d
	movq 96(%rbp),%rax
	movq %rax,104(%rbp)
	addq $104,%rbp
	jmp GHC.IO.FD.$wreadRawBufferPtr_entry
	.size _cbb3K, .-_cbb3K


==================== Asm code ====================
2018-03-16 16:06:04.021787324 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb3K_info:
	.quad	_cbb3K
	.quad	524237
	.quad	12884901918
	.quad	Sb7vQ_srt+344


==================== Asm code ====================
2018-03-16 16:06:04.022304878 UTC

.section .data.rel.ro
.align 8
.align 1
ubb5G_srtd:
	.quad	Sb7vQ_srt+8
	.quad	46
	.quad	66279935313985


==================== Asm code ====================
2018-03-16 16:06:04.023091531 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$whGetBufSome_entry
.type GHC.IO.Handle.Text.$whGetBufSome_entry, @object
GHC.IO.Handle.Text.$whGetBufSome_entry:
_cbb5l:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbb5p
_cbb5o:
	testq %rdi,%rdi
	je _cbb5k
_cbb5j:
	testq %rdi,%rdi
	jge _cbb5r
_cbb5s:
	addq $-48,%r12
	movl $lvl13_rb6WT_closure,%esi
	jmp GHC.IO.Handle.Text.$willegalBufferSize_entry
_cbb5r:
	movq $GHC.Types.I#_con_info,-40(%r12)
	movq %rdi,-32(%r12)
	movq $sat_sb7hx_info,-24(%r12)
	movq %rsi,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	movq %rdi,(%r12)
	leaq -22(%r12),%rdi
	movq %r14,%rsi
	movl $lvl13_rb6WT_closure,%r14d
	jmp GHC.IO.Handle.Internals.wantReadableHandle_1_entry
_cbb5p:
	movq $48,904(%r13)
	movl $GHC.IO.Handle.Text.$whGetBufSome_closure,%ebx
	jmp *-8(%r13)
_cbb5k:
	addq $-48,%r12
	movl $GHC.IO.Handle.Text.hGetBuf3_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.$whGetBufSome_entry, .-GHC.IO.Handle.Text.$whGetBufSome_entry


==================== Asm code ====================
2018-03-16 16:06:04.023859483 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whGetBufSome_info
.type GHC.IO.Handle.Text.$whGetBufSome_info, @object
GHC.IO.Handle.Text.$whGetBufSome_info:
	.quad	GHC.IO.Handle.Text.$whGetBufSome_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869206
	.quad	ubb5G_srtd


==================== Asm code ====================
2018-03-16 16:06:04.026949106 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufSome1_closure
.type GHC.IO.Handle.Text.hGetBufSome1_closure, @object
GHC.IO.Handle.Text.hGetBufSome1_closure:
	.quad	GHC.IO.Handle.Text.hGetBufSome1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.027702561 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBufSome1_entry
.type GHC.IO.Handle.Text.hGetBufSome1_entry, @object
GHC.IO.Handle.Text.hGetBufSome1_entry:
_cbb81:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbb82
_cbb83:
	movq $block_cbb7Y_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbb7Y
_cbb7Z:
	movq (%rbx),%rax
	jmp *(%rax)
_cbb82:
	movl $GHC.IO.Handle.Text.hGetBufSome1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetBufSome1_entry, .-GHC.IO.Handle.Text.hGetBufSome1_entry


==================== Asm code ====================
2018-03-16 16:06:04.028352724 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufSome1_info
.type GHC.IO.Handle.Text.hGetBufSome1_info, @object
GHC.IO.Handle.Text.hGetBufSome1_info:
	.quad	GHC.IO.Handle.Text.hGetBufSome1_entry
	.quad	0
	.quad	21474836494
	.quad	17179869207
	.quad	Sb7vQ_srt+360


==================== Asm code ====================
2018-03-16 16:06:04.02900984 UTC

.section .text
.align 8
_cbb7Y:
_cbb7Y:
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Text.$whGetBufSome_entry
	.size _cbb7Y, .-_cbb7Y


==================== Asm code ====================
2018-03-16 16:06:04.029557268 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb7Y_info:
	.quad	_cbb7Y
	.quad	2
	.quad	4294967326
	.quad	Sb7vQ_srt+360


==================== Asm code ====================
2018-03-16 16:06:04.031630756 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufSome_closure
.type GHC.IO.Handle.Text.hGetBufSome_closure, @object
GHC.IO.Handle.Text.hGetBufSome_closure:
	.quad	GHC.IO.Handle.Text.hGetBufSome_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.032257873 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBufSome_entry
.type GHC.IO.Handle.Text.hGetBufSome_entry, @object
GHC.IO.Handle.Text.hGetBufSome_entry:
_cbb8l:
	jmp GHC.IO.Handle.Text.hGetBufSome1_entry
	.size GHC.IO.Handle.Text.hGetBufSome_entry, .-GHC.IO.Handle.Text.hGetBufSome_entry


==================== Asm code ====================
2018-03-16 16:06:04.032789307 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufSome_info
.type GHC.IO.Handle.Text.hGetBufSome_info, @object
GHC.IO.Handle.Text.hGetBufSome_info:
	.quad	GHC.IO.Handle.Text.hGetBufSome_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	Sb7vQ_srt+376


==================== Asm code ====================
2018-03-16 16:06:04.054779388 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf4_closure
.type GHC.IO.Handle.Text.hGetBuf4_closure, @object
GHC.IO.Handle.Text.hGetBuf4_closure:
	.quad	GHC.IO.Handle.Text.hGetBuf4_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.055694953 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBuf4_entry
.type GHC.IO.Handle.Text.hGetBuf4_entry, @object
GHC.IO.Handle.Text.hGetBuf4_entry:
_cbb8z:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _cbb8N
_cbb8O:
	movq $block_cbb8w_info,-40(%rbp)
	movq %r14,%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbb8w
_cbb8x:
	movq (%rbx),%rax
	jmp *(%rax)
_cbb8N:
	movl $GHC.IO.Handle.Text.hGetBuf4_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetBuf4_entry, .-GHC.IO.Handle.Text.hGetBuf4_entry


==================== Asm code ====================
2018-03-16 16:06:04.056375597 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf4_info
.type GHC.IO.Handle.Text.hGetBuf4_info, @object
GHC.IO.Handle.Text.hGetBuf4_info:
	.quad	GHC.IO.Handle.Text.hGetBuf4_entry
	.quad	0
	.quad	12884901902
	.quad	25769803801
	.quad	Sb7vQ_srt+384


==================== Asm code ====================
2018-03-16 16:06:04.057128504 UTC

.section .text
.align 8
_cbb8w:
_cbb8w:
	movq $block_cbb8C_info,-8(%rbp)
	movq %rbx,%rax
	movq 47(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbb8C
_cbb8D:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbb8w, .-_cbb8w


==================== Asm code ====================
2018-03-16 16:06:04.057794631 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb8w_info:
	.quad	_cbb8w
	.quad	4
	.quad	4294967326
	.quad	Sb7vQ_srt+384


==================== Asm code ====================
2018-03-16 16:06:04.058573926 UTC

.section .text
.align 8
_cbb8C:
_cbb8C:
	movq $block_cbb8H_info,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 32(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,32(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbb8H
_cbb8I:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbb8C, .-_cbb8C


==================== Asm code ====================
2018-03-16 16:06:04.059226804 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb8C_info:
	.quad	_cbb8C
	.quad	5
	.quad	4294967326
	.quad	Sb7vQ_srt+384


==================== Asm code ====================
2018-03-16 16:06:04.059916914 UTC

.section .text
.align 8
_cbb8H:
_cbb8H:
	movq $block_cbb8M_info,(%rbp)
	movq 7(%rbx),%rax
	movq 80(%rbp),%rbx
	movq %rax,80(%rbp)
	testb $7,%bl
	jne _cbb8M
_cbb8S:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbb8H, .-_cbb8H


==================== Asm code ====================
2018-03-16 16:06:04.060511222 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb8H_info:
	.quad	_cbb8H
	.quad	17290
	.quad	4294967326
	.quad	Sb7vQ_srt+384


==================== Asm code ====================
2018-03-16 16:06:04.061319925 UTC

.section .text
.align 8
_cbb8M:
_cbb8M:
	movq 64(%rbp),%rax
	movq 7(%rbx),%rbx
	movq 32(%rbp),%rcx
	subq 24(%rbp),%rcx
	cmpq %rcx,%rbx
	jge _cbb95
_cbbae:
	movq $block_cbb9N_info,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,64(%rbp)
	testb $7,%bl
	jne _cbb9N
_cbb9O:
	movq (%rbx),%rax
	jmp *(%rax)
_cbb95:
	movq $block_cbb93_info,(%rbp)
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rcx,32(%rbp)
	movq %rdx,64(%rbp)
	testb $7,%bl
	jne _cbb93
_cbb96:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbb8M, .-_cbb8M


==================== Asm code ====================
2018-03-16 16:06:04.062006131 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb8M_info:
	.quad	_cbb8M
	.quad	50058
	.quad	4294967326
	.quad	Sb7vQ_srt+384


==================== Asm code ====================
2018-03-16 16:06:04.063227906 UTC

.section .text
.align 8
_cbb93:
_cbb93:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cbb9c
_cbb9b:
	movq 56(%rbp),%rax
	movq 48(%rbp),%rcx
	movq 72(%rbp),%rdx
	movq 40(%rbp),%rsi
	movq 8(%rbp),%rdi
	movq 16(%rbp),%r8
	movq 80(%rbp),%r9
	movq 64(%rbp),%r10
	movq 32(%rbp),%r11
	movq 7(%rbx),%rbx
	subq $8,%rsp
	movq %rbx,%r14
	movq %r14,72(%rsp)
	movq %rdx,%r14
	addq 24(%rbp),%r14
	movq %rdx,80(%rsp)
	movq %r11,%rdx
	movq %rdi,96(%rsp)
	movq %r14,88(%rsp)
	movq 72(%rsp),%r14
	movq %r14,%rdi
	movq %rsi,104(%rsp)
	movq 88(%rsp),%r14
	movq %r14,%rsi
	movq %rax,%r14
	xorl %eax,%eax
	movq %rcx,112(%rsp)
	movq %r8,120(%rsp)
	movq %r9,128(%rsp)
	movq %r10,136(%rsp)
	movq %r11,144(%rsp)
	call memcpy
	addq $8,%rsp
	movq $GHC.IO.Buffer.Buffer_con_info,-96(%r12)
	movq 96(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 88(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-72(%r12)
	movq 112(%rsp),%rcx
	movq %rcx,-64(%r12)
	movq $0,-56(%r12)
	movq $0,-48(%r12)
	leaq -95(%r12),%rcx
	movq 104(%rsp),%rdx
	movq %rcx,8(%rdx)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rdx,%rsi
	movq %rax,%rdx
	xorl %eax,%eax
	movq %rcx,152(%rsp)
	movq %rdx,160(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq 128(%rsp),%rax
	movq 136(%rsp),%rcx
	subq %rcx,%rax
	testq %rax,%rax
	jne _cbb9F
_cbb9L:
	movq $GHC.Types.I#_con_info,-40(%r12)
	movq 120(%rsp),%rax
	addq %rcx,%rax
	movq %rax,-32(%r12)
	leaq -39(%r12),%rax
	addq $-32,%r12
	movq %rax,%rbx
	addq $88,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbb9F:
	movq $GHC.Types.I#_con_info,-40(%r12)
	movq %rax,-32(%r12)
	movq $GHC.Types.I#_con_info,-24(%r12)
	movq 120(%rsp),%rax
	addq %rcx,%rax
	movq %rax,-16(%r12)
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	addq %rcx,%rbx
	movq %rbx,(%r12)
	leaq -39(%r12),%r9
	leaq -23(%r12),%r8
	leaq -7(%r12),%rdi
	movq 144(%rsp),%rax
	movq %rax,%rsi
	addq $88,%rbp
	jmp GHC.IO.Handle.Text.hGetBuf2_entry
_cbb9c:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbb93, .-_cbb93


==================== Asm code ====================
2018-03-16 16:06:04.064270935 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb93_info:
	.quad	_cbb93
	.quad	58250
	.quad	4294967326
	.quad	Sb7vQ_srt+384


==================== Asm code ====================
2018-03-16 16:06:04.06529238 UTC

.section .text
.align 8
_cbb9N:
_cbb9N:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbbah
_cbbag:
	movq 48(%rbp),%rax
	movq 72(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 8(%rbp),%rsi
	movq 16(%rbp),%rdi
	movq 24(%rbp),%r8
	movq 32(%rbp),%r9
	movq 80(%rbp),%r10
	movq 64(%rbp),%r11
	subq $8,%rsp
	movq %rcx,%r14
	addq %r8,%r14
	movq %rdx,72(%rsp)
	movq %r11,%rdx
	movq %rdi,80(%rsp)
	movq 7(%rbx),%rdi
	movq %rsi,%rbx
	movq %r14,%rsi
	movq %rax,%r14
	xorl %eax,%eax
	movq %rcx,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	movq %r10,112(%rsp)
	movq %r11,120(%rsp)
	call memcpy
	addq $8,%rsp
	movq $GHC.IO.Buffer.Buffer_con_info,-64(%r12)
	movq 64(%rsp),%rcx
	movq %rcx,-56(%r12)
	movq %rbx,-48(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-40(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-32(%r12)
	movq 88(%rsp),%rbx
	movq 112(%rsp),%rcx
	addq %rcx,%rbx
	movq %rbx,-24(%r12)
	movq 96(%rsp),%rbx
	movq %rbx,-16(%r12)
	leaq -63(%r12),%rbx
	movq %rbx,8(%r14)
	subq $8,%rsp
	movq %r13,%rbx
	movq %r14,%rsi
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq 104(%rsp),%rax
	movq 112(%rsp),%rcx
	addq %rcx,%rax
	movq %rax,(%r12)
	movq %rbx,%rax
	leaq -7(%r12),%rbx
	addq $88,%rbp
	movq (%rbp),%rcx
	jmp *(%rcx)
_cbbah:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbb9N, .-_cbb9N


==================== Asm code ====================
2018-03-16 16:06:04.066184662 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbb9N_info:
	.quad	_cbb9N
	.quad	62346
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.067537179 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf2_closure
.type GHC.IO.Handle.Text.hGetBuf2_closure, @object
GHC.IO.Handle.Text.hGetBuf2_closure:
	.quad	GHC.IO.Handle.Text.hGetBuf2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.068312639 UTC

.section .text
.align 8
sat_sb7jB_entry:
_cbbbP:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbbW
_cbbbX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbbbM_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbbbM
_cbbbN:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbbW:
	jmp *-16(%r13)
	.size sat_sb7jB_entry, .-sat_sb7jB_entry


==================== Asm code ====================
2018-03-16 16:06:04.068958765 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb7jB_info:
	.quad	sat_sb7jB_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:04.069657721 UTC

.section .text
.align 8
_cbbbM:
_cbbbM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbbc0
_cbbbZ:
	movq 7(%rbx),%rax
	addq 8(%rbp),%rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbbc0:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbbbM, .-_cbbbM


==================== Asm code ====================
2018-03-16 16:06:04.070299231 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbbM_info:
	.quad	_cbbbM
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.070991337 UTC

.section .text
.align 8
sat_sb7jF_entry:
_cbbc9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbca
_cbbcb:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Num.$fNumInt_$c+_entry
_cbbca:
	jmp *-16(%r13)
	.size sat_sb7jF_entry, .-sat_sb7jF_entry


==================== Asm code ====================
2018-03-16 16:06:04.071615974 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb7jF_info:
	.quad	sat_sb7jF_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:06:04.072182308 UTC

.section .data.rel.ro
.align 8
.align 1
ubbdC_srtd:
	.quad	Sb7vQ_srt+56
	.quad	43
	.quad	6807523164161


==================== Asm code ====================
2018-03-16 16:06:04.07290762 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBuf2_entry
.type GHC.IO.Handle.Text.hGetBuf2_entry, @object
GHC.IO.Handle.Text.hGetBuf2_entry:
_cbbcc:
	leaq -96(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbcd
_cbbce:
	movq $block_cbbas_info,-40(%rbp)
	movq %r14,%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbbas
_cbbat:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbcd:
	movl $GHC.IO.Handle.Text.hGetBuf2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetBuf2_entry, .-GHC.IO.Handle.Text.hGetBuf2_entry


==================== Asm code ====================
2018-03-16 16:06:04.073727711 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf2_info
.type GHC.IO.Handle.Text.hGetBuf2_info, @object
GHC.IO.Handle.Text.hGetBuf2_info:
	.quad	GHC.IO.Handle.Text.hGetBuf2_entry
	.quad	0
	.quad	-4294967282
	.quad	25769803801
	.quad	ubbdC_srtd


==================== Asm code ====================
2018-03-16 16:06:04.074305662 UTC

.section .data.rel.ro
.align 8
.align 1
ubbdD_srtd:
	.quad	Sb7vQ_srt+56
	.quad	43
	.quad	4608499908609


==================== Asm code ====================
2018-03-16 16:06:04.075017859 UTC

.section .text
.align 8
_cbbas:
_cbbas:
	movq $block_cbbax_info,-32(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rbx
	movq %rbx,%rdi
	movq 8(%rbp),%rbx
	movq %rdx,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbbax
_cbbay:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbas, .-_cbbas


==================== Asm code ====================
2018-03-16 16:06:04.075660753 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbas_info:
	.quad	_cbbas
	.quad	4
	.quad	-4294967266
	.quad	ubbdD_srtd


==================== Asm code ====================
2018-03-16 16:06:04.076261768 UTC

.section .data.rel.ro
.align 8
.align 1
ubbdE_srtd:
	.quad	Sb7vQ_srt+56
	.quad	43
	.quad	4608499908609


==================== Asm code ====================
2018-03-16 16:06:04.076956325 UTC

.section .text
.align 8
_cbbax:
_cbbax:
	movq $block_cbbaC_info,-8(%rbp)
	movq %rbx,%rax
	movq 31(%rbx),%rbx
	movq %rbx,%rcx
	movq 64(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,64(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbbaC
_cbbaD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbax, .-_cbbax


==================== Asm code ====================
2018-03-16 16:06:04.077527139 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbax_info:
	.quad	_cbbax
	.quad	8
	.quad	-4294967266
	.quad	ubbdE_srtd


==================== Asm code ====================
2018-03-16 16:06:04.078081074 UTC

.section .data.rel.ro
.align 8
.align 1
ubbdF_srtd:
	.quad	Sb7vQ_srt+56
	.quad	43
	.quad	4608499908609


==================== Asm code ====================
2018-03-16 16:06:04.078749654 UTC

.section .text
.align 8
_cbbaC:
_cbbaC:
	movq 7(%rbx),%rax
	cmpq 8(%rbp),%rax
	jle _ubbdd
_cbbcH:
	movq $block_cbbaN_info,(%rbp)
	movl $lvl11_rb6WR_closure,%esi
	movq 16(%rbp),%r14
	movq %rax,8(%rbp)
	movq %rbx,16(%rbp)
	jmp Data.Typeable.Internal.sameTypeRep_entry
_ubbdd:
	movq %rbx,16(%rbp)
	addq $16,%rbp
	jmp _sb7jh
	.size _cbbaC, .-_cbbaC


==================== Asm code ====================
2018-03-16 16:06:04.079338347 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbaC_info:
	.quad	_cbbaC
	.quad	73
	.quad	-4294967266
	.quad	ubbdF_srtd


==================== Asm code ====================
2018-03-16 16:06:04.080073516 UTC

.section .text
.align 8
_cbbaN:
_cbbaN:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ubbde
_cbbd7:
	movq 8(%rbp),%rax
	movq %rax,40(%rbp)
	movq $GHC.IO.Handle.Text.hGetBuf3_closure+1,48(%rbp)
	movq 24(%rbp),%rax
	movq %rax,72(%rbp)
	addq $40,%rbp
	jmp _cbbaY
_ubbde:
	addq $16,%rbp
	jmp _sb7jh
	.size _cbbaN, .-_cbbaN


==================== Asm code ====================
2018-03-16 16:06:04.080693042 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbaN_info:
	.quad	_cbbaN
	.quad	73
	.quad	287762808862
	.quad	Sb7vQ_srt+344


==================== Asm code ====================
2018-03-16 16:06:04.081366282 UTC

.section .text
.align 8
_sb7jh:
_sb7jh:
	movq $block_cbbcl_info,-8(%rbp)
	movq 24(%rbp),%r14
	movq $stg_ap_ppv_info,-32(%rbp)
	movq 8(%rbp),%rax
	movq %rax,-24(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-16(%rbp)
	addq $-32,%rbp
	jmp GHC.IO.BufferedIO.fillReadBuffer_entry
	.size _sb7jh, .-_sb7jh


==================== Asm code ====================
2018-03-16 16:06:04.082086718 UTC

.section .text
.align 8
_cbbcl:
_cbbcl:
	movq $block_cbbcn_info,(%rbp)
	testb $7,%bl
	jne _cbbcn
_cbbco:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbcl, .-_cbbcl


==================== Asm code ====================
2018-03-16 16:06:04.082660545 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbcl_info:
	.quad	_cbbcl
	.quad	8840
	.quad	4294967326
	.quad	Sb7vQ_srt+392


==================== Asm code ====================
2018-03-16 16:06:04.083312424 UTC

.section .text
.align 8
_cbbcn:
_cbbcn:
	movq $block_cbbcs_info,(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,64(%rbp)
	testb $7,%bl
	jne _cbbcs
_cbbcw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbcn, .-_cbbcn


==================== Asm code ====================
2018-03-16 16:06:04.083884957 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbcn_info:
	.quad	_cbbcn
	.quad	8840
	.quad	4294967326
	.quad	Sb7vQ_srt+392


==================== Asm code ====================
2018-03-16 16:06:04.084716112 UTC

.section .text
.align 8
_cbbcs:
_cbbcs:
	movq 56(%rbp),%rax
	cmpq $0,7(%rbx)
	je _cbbcE
_cbbcD:
	movq 48(%rbp),%rbx
	movq 40(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 8(%rbp),%rsi
	movq 64(%rbp),%rdi
	movq %rdi,8(%rdx)
	subq $8,%rsp
	movq %r13,%r8
	movq %rsi,%r9
	movq %rdx,%rsi
	movq %rdi,%rdx
	movq %r8,%rdi
	movq %rax,%r8
	xorl %eax,%eax
	movq %r8,%r14
	movq %rcx,72(%rsp)
	movq %r9,80(%rsp)
	movq %rdx,88(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq 72(%rsp),%rax
	movq %rax,%r9
	movq %r14,%r8
	movq %rbx,%rdi
	movq 80(%rsp),%rax
	movq %rax,%rsi
	movq 64(%rsp),%rax
	movq %rax,%r14
	addq $72,%rbp
	jmp GHC.IO.Handle.Text.hGetBuf4_entry
_cbbcE:
	movq %rax,%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbbcs, .-_cbbcs


==================== Asm code ====================
2018-03-16 16:06:04.0858389 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbcs_info:
	.quad	_cbbcs
	.quad	648
	.quad	4294967326
	.quad	Sb7vQ_srt+392


==================== Asm code ====================
2018-03-16 16:06:04.086544434 UTC

.section .text
.align 8
_cbbaY:
_cbbaY:
	cmpq $0,(%rbp)
	jg _cbbcV
_cbbd6:
	movq 8(%rbp),%rax
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp _cbbc3
_cbbcV:
	movq $block_cbbb4_info,-8(%rbp)
	movq 16(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbbb4
_cbbb5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbaY, .-_cbbaY


==================== Asm code ====================
2018-03-16 16:06:04.087281504 UTC

.section .text
.align 8
_cbbb4:
_cbbb4:
	movq $block_cbbb9_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cbbb9
_cbbba:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbb4, .-_cbbb4


==================== Asm code ====================
2018-03-16 16:06:04.087850303 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbb4_info:
	.quad	_cbbb4
	.quad	69
	.quad	12884901918
	.quad	Sb7vQ_srt+344


==================== Asm code ====================
2018-03-16 16:06:04.088546768 UTC

.section .text
.align 8
_cbbb9:
_cbbb9:
	movq $block_cbbbe_info,(%rbp)
	movq 7(%rbx),%rax
	movq 40(%rbp),%rbx
	movq %rax,40(%rbp)
	testb $7,%bl
	jne _cbbbe
_cbbbf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbb9, .-_cbbb9


==================== Asm code ====================
2018-03-16 16:06:04.089144494 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbb9_info:
	.quad	_cbbb9
	.quad	197
	.quad	12884901918
	.quad	Sb7vQ_srt+344


==================== Asm code ====================
2018-03-16 16:06:04.089823092 UTC

.section .text
.align 8
_cbbbe:
_cbbbe:
	movq 16(%rbp),%rax
	addq 40(%rbp),%rax
	movq $block_cbbbp_info,(%rbp)
	xorl %r9d,%r9d
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movl $GHC.IO.FD.$fBufferedIOFD12_closure,%r14d
	movq 8(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,16(%rbp)
	addq $-8,%rbp
	jmp GHC.IO.FD.$wreadRawBufferPtr_entry
	.size _cbbbe, .-_cbbbe


==================== Asm code ====================
2018-03-16 16:06:04.090394861 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbbe_info:
	.quad	_cbbbe
	.quad	1221
	.quad	12884901918
	.quad	Sb7vQ_srt+344


==================== Asm code ====================
2018-03-16 16:06:04.091064679 UTC

.section .text
.align 8
_cbbbp:
_cbbbp:
	movq $block_cbbbr_info,(%rbp)
	testb $7,%bl
	jne _cbbbr
_cbbbs:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbbp, .-_cbbbp


==================== Asm code ====================
2018-03-16 16:06:04.091683608 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbbp_info:
	.quad	_cbbbp
	.quad	1093
	.quad	12884901918
	.quad	Sb7vQ_srt+344


==================== Asm code ====================
2018-03-16 16:06:04.092457525 UTC

.section .text
.align 8
_cbbbr:
_cbbbr:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbbd2
_cbbd1:
	movq 40(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jne _cbbd4
_cbbd5:
	addq $-16,%r12
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp _cbbbG
_cbbd4:
	movq $GHC.Types.I#_con_info,-8(%r12)
	addq %rbx,%rax
	movq %rax,(%r12)
	movq 16(%rbp),%rax
	movq %rax,40(%rbp)
	leaq -7(%r12),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rax
	subq %rbx,%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _cbbaY
_cbbd2:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbbbr, .-_cbbbr


==================== Asm code ====================
2018-03-16 16:06:04.093140088 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbbr_info:
	.quad	_cbbbr
	.quad	1093
	.quad	12884901918
	.quad	Sb7vQ_srt+344


==================== Asm code ====================
2018-03-16 16:06:04.093870682 UTC

.section .text
.align 8
_cbbbG:
_cbbbG:
	addq $32,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cbbcP
_cbbcO:
	movq $sat_sb7jB_info,-24(%r12)
	movq (%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -24(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbbcP:
	movq $32,904(%r13)
	movq $block_cbbbF_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _cbbbG, .-_cbbbG


==================== Asm code ====================
2018-03-16 16:06:04.094596569 UTC

.section .text
.align 8
_cbbbF:
_cbbbF:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _cbbbG
	.size _cbbbF, .-_cbbbF


==================== Asm code ====================
2018-03-16 16:06:04.095167768 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbbF_info:
	.quad	_cbbbF
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.09639944 UTC

.section .text
.align 8
_cbbc3:
_cbbc3:
	addq $32,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cbbcS
_cbbcR:
	movq $sat_sb7jF_info,-24(%r12)
	movq (%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -24(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbbcS:
	movq $32,904(%r13)
	movq $block_cbbc2_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unpt_r1
	.size _cbbc3, .-_cbbc3


==================== Asm code ====================
2018-03-16 16:06:04.097115639 UTC

.section .text
.align 8
_cbbc2:
_cbbc2:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _cbbc3
	.size _cbbc2, .-_cbbc2


==================== Asm code ====================
2018-03-16 16:06:04.098040443 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbc2_info:
	.quad	_cbbc2
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.099657949 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.hGetBuf6_bytes
.type GHC.IO.Handle.Text.hGetBuf6_bytes, @object
GHC.IO.Handle.Text.hGetBuf6_bytes:
	.asciz "hGetBuf"


==================== Asm code ====================
2018-03-16 16:06:04.102259637 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf5_closure
.type GHC.IO.Handle.Text.hGetBuf5_closure, @object
GHC.IO.Handle.Text.hGetBuf5_closure:
	.quad	GHC.IO.Handle.Text.hGetBuf5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.103053044 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBuf5_entry
.type GHC.IO.Handle.Text.hGetBuf5_entry, @object
GHC.IO.Handle.Text.hGetBuf5_entry:
_cbbgh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbgi
_cbbgj:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbbgg
_cbbgf:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Text.hGetBuf6_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbbgi:
	jmp *-16(%r13)
_cbbgg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.hGetBuf5_entry, .-GHC.IO.Handle.Text.hGetBuf5_entry


==================== Asm code ====================
2018-03-16 16:06:04.10376444 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf5_info
.type GHC.IO.Handle.Text.hGetBuf5_info, @object
GHC.IO.Handle.Text.hGetBuf5_info:
	.quad	GHC.IO.Handle.Text.hGetBuf5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:04.119129196 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whGetBuf_closure
.type GHC.IO.Handle.Text.$whGetBuf_closure, @object
GHC.IO.Handle.Text.$whGetBuf_closure:
	.quad	GHC.IO.Handle.Text.$whGetBuf_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.120004048 UTC

.section .text
.align 8
sat_sb7l9_entry:
_cbbhc:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbhg
_cbbhh:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbbh9_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbbh9
_cbbha:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbhg:
	jmp *-16(%r13)
	.size sat_sb7l9_entry, .-sat_sb7l9_entry


==================== Asm code ====================
2018-03-16 16:06:04.120616052 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb7l9_info:
	.quad	sat_sb7l9_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:04.121432403 UTC

.section .text
.align 8
_cbbh9:
_cbbh9:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbbhk
_cbbhj:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbbhk:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbbh9, .-_cbbh9


==================== Asm code ====================
2018-03-16 16:06:04.122123241 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbh9_info:
	.quad	_cbbh9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.122856632 UTC

.section .text
.align 8
sat_sb7ls_entry:
_cbbhI:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbhP
_cbbhQ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbbhF_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbbhF
_cbbhG:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbhP:
	jmp *-16(%r13)
	.size sat_sb7ls_entry, .-sat_sb7ls_entry


==================== Asm code ====================
2018-03-16 16:06:04.123481658 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb7ls_info:
	.quad	sat_sb7ls_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:04.124243908 UTC

.section .text
.align 8
_cbbhF:
_cbbhF:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbbhT
_cbbhS:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 39(%rbx),%rbx
	addq 8(%rbp),%rbx
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbbhT:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbbhF, .-_cbbhF


==================== Asm code ====================
2018-03-16 16:06:04.124947658 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbhF_info:
	.quad	_cbbhF
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.125927309 UTC

.section .text
.align 8
sat_sb7lN_entry:
_cbbhV:
	leaq -96(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbhW
_cbbhX:
	movq $block_cbbgG_info,-24(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbbgG
_cbbgH:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbhW:
	jmp *-8(%r13)
	.size sat_sb7lN_entry, .-sat_sb7lN_entry


==================== Asm code ====================
2018-03-16 16:06:04.12658251 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb7lN_info:
	.quad	sat_sb7lN_entry
	.quad	2
	.quad	12884901899
	.quad	8589934597
	.quad	Sb7vQ_srt+384


==================== Asm code ====================
2018-03-16 16:06:04.127295519 UTC

.section .text
.align 8
_cbbgG:
_cbbgG:
	movq $block_cbbgL_info,-40(%rbp)
	movq %rbx,%rax
	movq 47(%rbx),%rcx
	movq 63(%rbx),%rdx
	movq 71(%rbx),%rsi
	movq 95(%rbx),%rbx
	movq %rbx,%rdi
	movq 8(%rsi),%rbx
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	movq %rax,(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbbgL
_cbbgM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbgG, .-_cbbgG


==================== Asm code ====================
2018-03-16 16:06:04.127945791 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbgG_info:
	.quad	_cbbgG
	.quad	2
	.quad	12884901918
	.quad	Sb7vQ_srt+384


==================== Asm code ====================
2018-03-16 16:06:04.128644953 UTC

.section .text
.align 8
_cbbgL:
_cbbgL:
	movq $block_cbbgS_info,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbbgS
_cbbgT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbgL, .-_cbbgL


==================== Asm code ====================
2018-03-16 16:06:04.12928492 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbgL_info:
	.quad	_cbbgL
	.quad	7
	.quad	12884901918
	.quad	Sb7vQ_srt+384


==================== Asm code ====================
2018-03-16 16:06:04.130062271 UTC

.section .text
.align 8
_cbbgS:
_cbbgS:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbbiV
_ubbjc:
	addq $24,%rbp
	jmp _sb7kE
_ubbjd:
	addq $24,%rbp
	jmp _sb7kE
_cbbiV:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _ubbjd
_cbbih:
	movq 32(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbbh0_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbbh0
_cbbh1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbgS, .-_cbbgS


==================== Asm code ====================
2018-03-16 16:06:04.130717761 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbgS_info:
	.quad	_cbbgS
	.quad	201
	.quad	12884901918
	.quad	Sb7vQ_srt+384


==================== Asm code ====================
2018-03-16 16:06:04.131608204 UTC

.section .text
.align 8
_cbbh0:
_cbbh0:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbbik
_cbbij:
	movq 24(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq 8(%rax),%rdx
	movq $sat_sb7l9_info,-16(%r12)
	movq %rdx,(%r12)
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cbbhp_info,(%rbp)
	movq %rbx,%rcx
	movq 64(%rsp),%rax
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	movq %r14,24(%rbp)
	testb $7,%bl
	jne _cbbhp
_cbbhq:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbik:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbbh0, .-_cbbh0


==================== Asm code ====================
2018-03-16 16:06:04.132359229 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbh0_info:
	.quad	_cbbh0
	.quad	135
	.quad	12884901918
	.quad	Sb7vQ_srt+384


==================== Asm code ====================
2018-03-16 16:06:04.133177413 UTC

.section .text
.align 8
_cbbhp:
_cbbhp:
	movq 39(%rbx),%rax
	testq %rax,%rax
	jne _cbbin
_cbbiS:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $8,%rbp
	jmp _sb7kE
_cbbin:
	movq $block_cbbhw_info,-24(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq 32(%rbp),%rbx
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rsi,32(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbbhw
_cbbhx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbhp, .-_cbbhp


==================== Asm code ====================
2018-03-16 16:06:04.133936786 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbhp_info:
	.quad	_cbbhp
	.quad	7
	.quad	12884901918
	.quad	Sb7vQ_srt+384


==================== Asm code ====================
2018-03-16 16:06:04.134808684 UTC

.section .text
.align 8
_cbbhw:
_cbbhw:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbbip
_cbbiH:
	movq $block_cbbiv_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbbiv
_cbbiw:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbis:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_cbbip:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbbis
_cbbir:
	movq $sat_sb7ls_info,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 32(%rbp),%rax
	leaq -24(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $32,%rbp
	jmp _sb7kE
	.size _cbbhw, .-_cbbhw


==================== Asm code ====================
2018-03-16 16:06:04.135544662 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbhw_info:
	.quad	_cbbhw
	.quad	4234
	.quad	12884901918
	.quad	Sb7vQ_srt+384


==================== Asm code ====================
2018-03-16 16:06:04.136220752 UTC

.section .text
.align 8
_cbbiv:
_cbbiv:
	movq $block_cbbiA_info,-8(%rbp)
	movq 48(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,48(%rbp)
	addq $-8,%rbp
	jmp stg_ap_pv_fast
	.size _cbbiv, .-_cbbiv


==================== Asm code ====================
2018-03-16 16:06:04.136807601 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbiv_info:
	.quad	_cbbiv
	.quad	4234
	.quad	12884901918
	.quad	Sb7vQ_srt+384


==================== Asm code ====================
2018-03-16 16:06:04.13778404 UTC

.section .text
.align 8
_cbbiA:
_cbbiA:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbbiL
_cbbiK:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 64(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	movq $block_cbbiD_info,32(%rbp)
	leaq -47(%r12),%r8
	movq 48(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 56(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_cbbiL:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbbiA, .-_cbbiA


==================== Asm code ====================
2018-03-16 16:06:04.138446225 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbiA_info:
	.quad	_cbbiA
	.quad	8459
	.quad	12884901918
	.quad	Sb7vQ_srt+384


==================== Asm code ====================
2018-03-16 16:06:04.13902599 UTC

.section .text
.align 8
_cbbiD:
_cbbiD:
	movq $block_cbbiF_info,(%rbp)
	testb $7,%bl
	jne _cbbiF
_cbbiN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbiD, .-_cbbiD


==================== Asm code ====================
2018-03-16 16:06:04.139589625 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbiD_info:
	.quad	_cbbiD
	.quad	903
	.quad	12884901918
	.quad	Sb7vQ_srt+384


==================== Asm code ====================
2018-03-16 16:06:04.14025198 UTC

.section .text
.align 8
_cbbiF:
_cbbiF:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $8,%rbp
	jmp _sb7kE
	.size _cbbiF, .-_cbbiF


==================== Asm code ====================
2018-03-16 16:06:04.141419382 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbiF_info:
	.quad	_cbbiF
	.quad	903
	.quad	12884901918
	.quad	Sb7vQ_srt+384


==================== Asm code ====================
2018-03-16 16:06:04.142139729 UTC

.section .text
.align 8
_sb7kE:
_sb7kE:
	movq (%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbbi3_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _cbbi3
_cbbi5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sb7kE, .-_sb7kE


==================== Asm code ====================
2018-03-16 16:06:04.142908618 UTC

.section .text
.align 8
_cbbi3:
_cbbi3:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq 39(%rbx),%rsi
	cmpq 47(%rbx),%rsi
	je _cbbie
_cbbid:
	movq %rcx,%r9
	movl $GHC.IO.Handle.Text.hGetBuf3_closure+1,%r8d
	movq %rax,%rdi
	movq %rbx,%rsi
	movq %rdx,%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Text.hGetBuf4_entry
_cbbie:
	movq %rcx,%r9
	movl $GHC.IO.Handle.Text.hGetBuf3_closure+1,%r8d
	movq %rax,%rdi
	movq %rbx,%rsi
	movq %rdx,%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Text.hGetBuf2_entry
	.size _cbbi3, .-_cbbi3


==================== Asm code ====================
2018-03-16 16:06:04.143586327 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbi3_info:
	.quad	_cbbi3
	.quad	3
	.quad	12884901918
	.quad	Sb7vQ_srt+384


==================== Asm code ====================
2018-03-16 16:06:04.144121866 UTC

.section .data.rel.ro
.align 8
.align 1
ubbjG_srtd:
	.quad	Sb7vQ_srt+8
	.quad	51
	.quad	2111062325331969


==================== Asm code ====================
2018-03-16 16:06:04.144955795 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$whGetBuf_entry
.type GHC.IO.Handle.Text.$whGetBuf_entry, @object
GHC.IO.Handle.Text.$whGetBuf_entry:
_cbbjy:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbbjC
_cbbjB:
	testq %rdi,%rdi
	je _cbbjx
_cbbjw:
	testq %rdi,%rdi
	jge _cbbjE
_cbbjF:
	addq $-40,%r12
	movl $GHC.IO.Handle.Text.hGetBuf5_closure,%esi
	jmp GHC.IO.Handle.Text.$willegalBufferSize_entry
_cbbjE:
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq %rdi,-24(%r12)
	movq $sat_sb7lN_info,-16(%r12)
	movq %rsi,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rdi
	movq %r14,%rsi
	movl $GHC.IO.Handle.Text.hGetBuf5_closure,%r14d
	jmp GHC.IO.Handle.Internals.wantReadableHandle_1_entry
_cbbjC:
	movq $40,904(%r13)
	movl $GHC.IO.Handle.Text.$whGetBuf_closure,%ebx
	jmp *-8(%r13)
_cbbjx:
	addq $-40,%r12
	movl $GHC.IO.Handle.Text.hGetBuf3_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.$whGetBuf_entry, .-GHC.IO.Handle.Text.$whGetBuf_entry


==================== Asm code ====================
2018-03-16 16:06:04.145696538 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whGetBuf_info
.type GHC.IO.Handle.Text.$whGetBuf_info, @object
GHC.IO.Handle.Text.$whGetBuf_info:
	.quad	GHC.IO.Handle.Text.$whGetBuf_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869206
	.quad	ubbjG_srtd


==================== Asm code ====================
2018-03-16 16:06:04.148772717 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf1_closure
.type GHC.IO.Handle.Text.hGetBuf1_closure, @object
GHC.IO.Handle.Text.hGetBuf1_closure:
	.quad	GHC.IO.Handle.Text.hGetBuf1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.149875837 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBuf1_entry
.type GHC.IO.Handle.Text.hGetBuf1_entry, @object
GHC.IO.Handle.Text.hGetBuf1_entry:
_cbblk:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbll
_cbblm:
	movq $block_cbblh_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbblh
_cbbli:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbll:
	movl $GHC.IO.Handle.Text.hGetBuf1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetBuf1_entry, .-GHC.IO.Handle.Text.hGetBuf1_entry


==================== Asm code ====================
2018-03-16 16:06:04.150513939 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf1_info
.type GHC.IO.Handle.Text.hGetBuf1_info, @object
GHC.IO.Handle.Text.hGetBuf1_info:
	.quad	GHC.IO.Handle.Text.hGetBuf1_entry
	.quad	0
	.quad	21474836494
	.quad	17179869207
	.quad	Sb7vQ_srt+400


==================== Asm code ====================
2018-03-16 16:06:04.151132201 UTC

.section .text
.align 8
_cbblh:
_cbblh:
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Text.$whGetBuf_entry
	.size _cbblh, .-_cbblh


==================== Asm code ====================
2018-03-16 16:06:04.151755781 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbblh_info:
	.quad	_cbblh
	.quad	2
	.quad	4294967326
	.quad	Sb7vQ_srt+400


==================== Asm code ====================
2018-03-16 16:06:04.153947867 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf_closure
.type GHC.IO.Handle.Text.hGetBuf_closure, @object
GHC.IO.Handle.Text.hGetBuf_closure:
	.quad	GHC.IO.Handle.Text.hGetBuf_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.154529454 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBuf_entry
.type GHC.IO.Handle.Text.hGetBuf_entry, @object
GHC.IO.Handle.Text.hGetBuf_entry:
_cbblE:
	jmp GHC.IO.Handle.Text.hGetBuf1_entry
	.size GHC.IO.Handle.Text.hGetBuf_entry, .-GHC.IO.Handle.Text.hGetBuf_entry


==================== Asm code ====================
2018-03-16 16:06:04.155069329 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf_info
.type GHC.IO.Handle.Text.hGetBuf_info, @object
GHC.IO.Handle.Text.hGetBuf_info:
	.quad	GHC.IO.Handle.Text.hGetBuf_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	Sb7vQ_srt+416


==================== Asm code ====================
2018-03-16 16:06:04.156698341 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl14_rb6WU_bytes:
	.asciz "error"


==================== Asm code ====================
2018-03-16 16:06:04.159141454 UTC

.section .data
.align 8
.align 1
lvl15_rb6WV_closure:
	.quad	lvl15_rb6WV_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.159968062 UTC

.section .text
.align 8
lvl15_rb6WV_entry:
_cbblS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbblT
_cbblU:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbblR
_cbblQ:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl14_rb6WU_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbblT:
	jmp *-16(%r13)
_cbblR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl15_rb6WV_entry, .-lvl15_rb6WV_entry


==================== Asm code ====================
2018-03-16 16:06:04.160608015 UTC

.section .data.rel.ro
.align 8
.align 1
lvl15_rb6WV_info:
	.quad	lvl15_rb6WV_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:04.163350413 UTC

.section .data
.align 8
.align 1
lvl16_rb6WW_closure:
	.quad	lvl16_rb6WW_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.164151621 UTC

.section .text
.align 8
lvl16_rb6WW_entry:
_cbbm8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbm9
_cbbma:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbbm7
_cbbm6:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Text.$trModule4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbbm9:
	jmp *-16(%r13)
_cbbm7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl16_rb6WW_entry, .-lvl16_rb6WW_entry


==================== Asm code ====================
2018-03-16 16:06:04.164822835 UTC

.section .data.rel.ro
.align 8
.align 1
lvl16_rb6WW_info:
	.quad	lvl16_rb6WW_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:04.167246442 UTC

.section .data
.align 8
.align 1
lvl17_rb6WX_closure:
	.quad	lvl17_rb6WX_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.168032139 UTC

.section .text
.align 8
lvl17_rb6WX_entry:
_cbbmo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbmp
_cbbmq:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbbmn
_cbbmm:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Text.$trModule2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbbmp:
	jmp *-16(%r13)
_cbbmn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl17_rb6WX_entry, .-lvl17_rb6WX_entry


==================== Asm code ====================
2018-03-16 16:06:04.168708592 UTC

.section .data.rel.ro
.align 8
.align 1
lvl17_rb6WX_info:
	.quad	lvl17_rb6WX_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:04.170314347 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl18_rb6WY_bytes:
	.asciz "./GHC/IO/Handle/Text.hs"


==================== Asm code ====================
2018-03-16 16:06:04.172739583 UTC

.section .data
.align 8
.align 1
lvl19_rb6WZ_closure:
	.quad	lvl19_rb6WZ_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.174452455 UTC

.section .text
.align 8
lvl19_rb6WZ_entry:
_cbbmF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbmG
_cbbmH:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbbmE
_cbbmD:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl18_rb6WY_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbbmG:
	jmp *-16(%r13)
_cbbmE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl19_rb6WZ_entry, .-lvl19_rb6WZ_entry


==================== Asm code ====================
2018-03-16 16:06:04.175170681 UTC

.section .data.rel.ro
.align 8
.align 1
lvl19_rb6WZ_info:
	.quad	lvl19_rb6WZ_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:04.17684595 UTC

.section .data
.align 8
.align 1
lvl20_rb6X0_closure:
	.quad	GHC.Types.I#_con_info
	.quad	785


==================== Asm code ====================
2018-03-16 16:06:04.178531023 UTC

.section .data
.align 8
.align 1
lvl21_rb6X1_closure:
	.quad	GHC.Types.I#_con_info
	.quad	17


==================== Asm code ====================
2018-03-16 16:06:04.180208633 UTC

.section .data
.align 8
.align 1
lvl22_rb6X2_closure:
	.quad	GHC.Types.I#_con_info
	.quad	38


==================== Asm code ====================
2018-03-16 16:06:04.182197182 UTC

.section .data
.align 8
.align 1
lvl23_rb6X3_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl16_rb6WW_closure
	.quad	lvl17_rb6WX_closure
	.quad	lvl19_rb6WZ_closure
	.quad	lvl20_rb6X0_closure+1
	.quad	lvl21_rb6X1_closure+1
	.quad	lvl20_rb6X0_closure+1
	.quad	lvl22_rb6X2_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.183907246 UTC

.section .data
.align 8
.align 1
lvl24_rb6X4_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl15_rb6WV_closure
	.quad	lvl23_rb6X3_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.185563568 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl25_rb6X5_bytes:
	.asciz "Todo: hPutBuf"


==================== Asm code ====================
2018-03-16 16:06:04.188458724 UTC

.section .data
.align 8
.align 1
lvl26_rb6X6_closure:
	.quad	lvl26_rb6X6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.189361353 UTC

.section .text
.align 8
lvl26_rb6X6_entry:
_cbbn3:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbn4
_cbbn5:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbbn0
_cbbmZ:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_cbbn1_info,-24(%rbp)
	movl $lvl25_rb6X5_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbbn4:
	jmp *-16(%r13)
_cbbn0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl26_rb6X6_entry, .-lvl26_rb6X6_entry


==================== Asm code ====================
2018-03-16 16:06:04.190062276 UTC

.section .data.rel.ro
.align 8
.align 1
lvl26_rb6X6_info:
	.quad	lvl26_rb6X6_entry
	.quad	0
	.quad	12884901909
	.quad	Sb7vQ_srt+424


==================== Asm code ====================
2018-03-16 16:06:04.190682716 UTC

.section .text
.align 8
_cbbn1:
_cbbn1:
	movq %rbx,%rsi
	movl $lvl24_rb6X4_closure+2,%r14d
	addq $8,%rbp
	jmp GHC.Err.error_entry
	.size _cbbn1, .-_cbbn1


==================== Asm code ====================
2018-03-16 16:06:04.191270674 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbn1_info:
	.quad	_cbbn1
	.quad	0
	.quad	12884901918
	.quad	Sb7vQ_srt+424


==================== Asm code ====================
2018-03-16 16:06:04.192896498 UTC

.section .data
.align 8
.align 1
lvl27_rb6X7_closure:
	.quad	GHC.Types.I#_con_info
	.quad	790


==================== Asm code ====================
2018-03-16 16:06:04.194628528 UTC

.section .data
.align 8
.align 1
lvl28_rb6X8_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl16_rb6WW_closure
	.quad	lvl17_rb6WX_closure
	.quad	lvl19_rb6WZ_closure
	.quad	lvl27_rb6X7_closure+1
	.quad	lvl21_rb6X1_closure+1
	.quad	lvl27_rb6X7_closure+1
	.quad	lvl22_rb6X2_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.196316648 UTC

.section .data
.align 8
.align 1
lvl29_rb6X9_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl15_rb6WV_closure
	.quad	lvl28_rb6X8_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.203439251 UTC

.section .data
.align 8
.align 1
lvl30_rb6Xa_closure:
	.quad	lvl30_rb6Xa_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.204456142 UTC

.section .text
.align 8
lvl30_rb6Xa_entry:
_cbbnu:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbnv
_cbbnw:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbbnr
_cbbnq:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_cbbns_info,-24(%rbp)
	movl $lvl25_rb6X5_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbbnv:
	jmp *-16(%r13)
_cbbnr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl30_rb6Xa_entry, .-lvl30_rb6Xa_entry


==================== Asm code ====================
2018-03-16 16:06:04.205303719 UTC

.section .data.rel.ro
.align 8
.align 1
lvl30_rb6Xa_info:
	.quad	lvl30_rb6Xa_entry
	.quad	0
	.quad	21474836501
	.quad	Sb7vQ_srt+424


==================== Asm code ====================
2018-03-16 16:06:04.206097232 UTC

.section .text
.align 8
_cbbns:
_cbbns:
	movq %rbx,%rsi
	movl $lvl29_rb6X9_closure+2,%r14d
	addq $8,%rbp
	jmp GHC.Err.error_entry
	.size _cbbns, .-_cbbns


==================== Asm code ====================
2018-03-16 16:06:04.207345532 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbns_info:
	.quad	_cbbns
	.quad	0
	.quad	21474836510
	.quad	Sb7vQ_srt+424


==================== Asm code ====================
2018-03-16 16:06:04.222317839 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$wbufWrite_closure
.type GHC.IO.Handle.Text.$wbufWrite_closure, @object
GHC.IO.Handle.Text.$wbufWrite_closure:
	.quad	GHC.IO.Handle.Text.$wbufWrite_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.223137386 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$wbufWrite_slow
.type GHC.IO.Handle.Text.$wbufWrite_slow, @object
GHC.IO.Handle.Text.$wbufWrite_slow:
_cbbnL:
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Text.$wbufWrite_entry
	.size GHC.IO.Handle.Text.$wbufWrite_slow, .-GHC.IO.Handle.Text.$wbufWrite_slow


==================== Asm code ====================
2018-03-16 16:06:04.223801666 UTC

.section .data.rel.ro
.align 8
.align 1
ubbqM_srtd:
	.quad	Sb7vQ_srt+56
	.quad	54
	.quad	17451452851027969


==================== Asm code ====================
2018-03-16 16:06:04.224591403 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$wbufWrite_entry
.type GHC.IO.Handle.Text.$wbufWrite_entry, @object
GHC.IO.Handle.Text.$wbufWrite_entry:
_cbbnS:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbo0
_ubbqy:
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp _cbbnM
_cbbo0:
	movl $GHC.IO.Handle.Text.$wbufWrite_closure,%ebx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.$wbufWrite_entry, .-GHC.IO.Handle.Text.$wbufWrite_entry


==================== Asm code ====================
2018-03-16 16:06:04.225471827 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$wbufWrite_info
.type GHC.IO.Handle.Text.$wbufWrite_info, @object
GHC.IO.Handle.Text.$wbufWrite_info:
	.quad	GHC.IO.Handle.Text.$wbufWrite_entry
	.quad	0
	.quad	-4294967282
	.quad	21474836480
	.quad	ubbqM_srtd
	.quad	260
	.quad	GHC.IO.Handle.Text.$wbufWrite_slow


==================== Asm code ====================
2018-03-16 16:06:04.226224498 UTC

.section .text
.align 8
_cbbnM:
_cbbnM:
	movq (%rbp),%rax
	movq $block_cbbnP_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbbnP
_cbbnQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbnM, .-_cbbnM


==================== Asm code ====================
2018-03-16 16:06:04.226963498 UTC

.section .data.rel.ro
.align 8
.align 1
ubbqN_srtd:
	.quad	Sb7vQ_srt+56
	.quad	54
	.quad	15199653037342721


==================== Asm code ====================
2018-03-16 16:06:04.22774185 UTC

.section .text
.align 8
_cbbnP:
_cbbnP:
	movq $block_cbbnV_info,-32(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 31(%rbx),%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	movq %rax,(%rbp)
	addq $-32,%rbp
	jmp stg_ap_0_fast
	.size _cbbnP, .-_cbbnP


==================== Asm code ====================
2018-03-16 16:06:04.228421982 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbnP_info:
	.quad	_cbbnP
	.quad	131
	.quad	-4294967266
	.quad	ubbqN_srtd


==================== Asm code ====================
2018-03-16 16:06:04.228995886 UTC

.section .data.rel.ro
.align 8
.align 1
ubbqO_srtd:
	.quad	Sb7vQ_srt+56
	.quad	54
	.quad	15199653037342721


==================== Asm code ====================
2018-03-16 16:06:04.22985522 UTC

.section .text
.align 8
_cbbnV:
_cbbnV:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbbnZ_info,-24(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rbx
	movq %rbx,%rsi
	movq %rax,%rbx
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	movq %rcx,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbbnZ
_cbbo4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbnV, .-_cbbnV


==================== Asm code ====================
2018-03-16 16:06:04.230616836 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbnV_info:
	.quad	_cbbnV
	.quad	2055
	.quad	-4294967266
	.quad	ubbqO_srtd


==================== Asm code ====================
2018-03-16 16:06:04.231265553 UTC

.section .data.rel.ro
.align 8
.align 1
ubbqP_srtd:
	.quad	Sb7vQ_srt+56
	.quad	54
	.quad	15199653037342721


==================== Asm code ====================
2018-03-16 16:06:04.232451829 UTC

.section .text
.align 8
_cbbnZ:
_cbbnZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbboa
_cbbo9:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq 72(%rbp),%r9
	movq %r9,(%r12)
	movq 32(%rbp),%r10
	movq 24(%rbp),%r11
	leaq -7(%r12),%r14
	cmpq %rsi,%r9
	jge _sb7mw
_cbbqh:
	movq %r14,64(%rsp)
	movq %rsi,%r14
	subq %r8,%r14
	cmpq %r14,%r9
	jg _nbbrj
_cbbpH:
	movq $block_cbbpG_info,-8(%rbp)
	movq 64(%rbp),%rbx
	movq %r8,(%rbp)
	movq %rdi,8(%rbp)
	movq %rsi,16(%rbp)
	movq %rcx,40(%rbp)
	movq %rax,56(%rbp)
	movq %rdx,64(%rbp)
	movq 64(%rsp),%rax
	movq %rax,80(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbbpG
_cbbpI:
	movq (%rbx),%rax
	jmp *(%rax)
_ubbqz:
	movq %rsi,32(%rbp)
	movq %r14,48(%rbp)
	addq $8,%rbp
	jmp _sb7mx
_nbbrj:
	movq 64(%rsp),%r14
_sb7mw:
	testq %r8,%r8
	jle _ubbqz
_cbbpo:
	movq $block_cbbpn_info,(%rbp)
	movq %r14,%rax
	movq %r10,%r14
	movq $stg_ap_ppv_info,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rsi,24(%rbp)
	movq %rax,32(%rbp)
	addq $-24,%rbp
	jmp GHC.IO.BufferedIO.flushWriteBuffer_entry
_cbboa:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbbnZ, .-_cbbnZ


==================== Asm code ====================
2018-03-16 16:06:04.233533306 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbnZ_info:
	.quad	_cbbnZ
	.quad	16586
	.quad	-4294967266
	.quad	ubbqP_srtd


==================== Asm code ====================
2018-03-16 16:06:04.234183509 UTC

.section .data.rel.ro
.align 8
.align 1
ubbqQ_srtd:
	.quad	Sb7vQ_srt+56
	.quad	54
	.quad	15199653037342721


==================== Asm code ====================
2018-03-16 16:06:04.234976978 UTC

.section .text
.align 8
_cbbpn:
_cbbpn:
	movq 32(%rbp),%rax
	movq 48(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq %rbx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rcx,%rsi
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rdx,%r14
	call dirty_MUT_VAR
	addq $8,%rsp
	movq %rbx,48(%rbp)
	movq %r14,32(%rbp)
	addq $8,%rbp
	jmp _sb7mx
	.size _cbbpn, .-_cbbpn


==================== Asm code ====================
2018-03-16 16:06:04.235596577 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbpn_info:
	.quad	_cbbpn
	.quad	16842
	.quad	-4294967266
	.quad	ubbqQ_srtd


==================== Asm code ====================
2018-03-16 16:06:04.236343017 UTC

.section .text
.align 8
_sb7mx:
_sb7mx:
	movq 64(%rbp),%rax
	movq 72(%rbp),%rbx
	cmpq 24(%rbp),%rax
	jge _cbbot
_cbbpg:
	movq 48(%rbp),%rcx
	movq %rcx,48(%rbp)
	movq 56(%rbp),%rcx
	movq %rcx,56(%rbp)
	movq %rax,64(%rbp)
	movq %rbx,72(%rbp)
	addq $48,%rbp
	jmp _cbbnM
_cbbot:
	movq $block_cbbor_info,-8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbbor
_cbbou:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sb7mx, .-_sb7mx


==================== Asm code ====================
2018-03-16 16:06:04.237002003 UTC

.section .data.rel.ro
.align 8
.align 1
ubbqR_srtd:
	.quad	Sb7vQ_srt+56
	.quad	54
	.quad	15199653037342721


==================== Asm code ====================
2018-03-16 16:06:04.237846085 UTC

.section .text
.align 8
_cbbor:
_cbbor:
	movq 40(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbboB
_cbboW:
	movq $block_cbboU_info,(%rbp)
	movl $lvl11_rb6WR_closure,%esi
	movq %rax,%r14
	jmp Data.Typeable.Internal.sameTypeRep_entry
_cbboB:
	movq $block_cbboy_info,(%rbp)
	movl $lvl11_rb6WR_closure,%esi
	movq %rax,%r14
	jmp Data.Typeable.Internal.sameTypeRep_entry
	.size _cbbor, .-_cbbor


==================== Asm code ====================
2018-03-16 16:06:04.238449728 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbor_info:
	.quad	_cbbor
	.quad	54218
	.quad	-4294967266
	.quad	ubbqR_srtd


==================== Asm code ====================
2018-03-16 16:06:04.239119937 UTC

.section .text
.align 8
_cbboy:
_cbboy:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbboH
_cbboM:
	movq $block_cbboK_info,(%rbp)
	movq 64(%rbp),%rbx
	testb $7,%bl
	jne _cbboK
_cbboN:
	movq (%rbx),%rax
	jmp *(%rax)
_cbboH:
	movl $lvl30_rb6Xa_closure,%ebx
	addq $88,%rbp
	jmp stg_ap_0_fast
	.size _cbboy, .-_cbboy


==================== Asm code ====================
2018-03-16 16:06:04.239793655 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbboy_info:
	.quad	_cbboy
	.quad	57290
	.quad	73014444062
	.quad	Sb7vQ_srt+448


==================== Asm code ====================
2018-03-16 16:06:04.240511441 UTC

.section .text
.align 8
_cbboK:
_cbboK:
	movq 72(%rbp),%r8
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $88,%rbp
	jmp GHC.IO.FD.$w$cwriteNonBlocking_entry
	.size _cbboK, .-_cbboK


==================== Asm code ====================
2018-03-16 16:06:04.241268644 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbboK_info:
	.quad	_cbboK
	.quad	65482
	.quad	4294967326
	.quad	Sb7vQ_srt+448


==================== Asm code ====================
2018-03-16 16:06:04.242190128 UTC

.section .text
.align 8
_cbboU:
_cbboU:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbbp2
_cbbpc:
	movq $block_cbbp5_info,(%rbp)
	movq 64(%rbp),%rbx
	testb $7,%bl
	jne _cbbp5
_cbbp6:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbp2:
	movl $lvl26_rb6X6_closure,%ebx
	addq $88,%rbp
	jmp stg_ap_0_fast
	.size _cbboU, .-_cbboU


==================== Asm code ====================
2018-03-16 16:06:04.242867399 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbboU_info:
	.quad	_cbboU
	.quad	55242
	.quad	21474836510
	.quad	Sb7vQ_srt+456


==================== Asm code ====================
2018-03-16 16:06:04.243629548 UTC

.section .text
.align 8
_cbbp5:
_cbbp5:
	movq $block_cbbpa_info,40(%rbp)
	movq 72(%rbp),%r8
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.FD.$wfdWrite_entry
	.size _cbbp5, .-_cbbp5


==================== Asm code ====================
2018-03-16 16:06:04.244289466 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbp5_info:
	.quad	_cbbp5
	.quad	63434
	.quad	4294967326
	.quad	Sb7vQ_srt+456


==================== Asm code ====================
2018-03-16 16:06:04.245054473 UTC

.section .text
.align 8
_cbbpa:
_cbbpa:
	movq 8(%rbp),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbbpa, .-_cbbpa


==================== Asm code ====================
2018-03-16 16:06:04.245759588 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbpa_info:
	.quad	_cbbpa
	.quad	1925
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.247039776 UTC

.section .text
.align 8
_cbbpG:
_cbbpG:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbbpO
_cbbpN:
	movq 88(%rbp),%rax
	movq 80(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 56(%rbp),%rsi
	movq 72(%rbp),%rdi
	movq 64(%rbp),%r8
	movq 48(%rbp),%r9
	movq 24(%rbp),%r10
	movq 16(%rbp),%r11
	movq 8(%rbp),%r14
	subq $8,%rsp
	movq %rax,72(%rsp)
	movq %rdi,%rax
	addq %r14,%rax
	movq %rdx,80(%rsp)
	movq %rcx,%rdx
	movq %rdi,88(%rsp)
	movq %rax,%rdi
	movq %rsi,%rax
	movq 7(%rbx),%rsi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,96(%rsp)
	movq %r8,104(%rsp)
	movq %r9,112(%rsp)
	movq %r10,120(%rsp)
	movq %r11,128(%rsp)
	call memcpy
	addq $8,%rsp
	movq 112(%rsp),%rcx
	movq %rcx,%rdx
	subq %r14,%rdx
	movq 88(%rsp),%rsi
	cmpq %rdx,%rsi
	je _cbbqe
_cbbq6:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 96(%rsp),%rax
	movq %rax,-40(%r12)
	movq 104(%rsp),%rax
	movq %rax,-32(%r12)
	movq 80(%rsp),%rax
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq 120(%rsp),%rax
	movq %rax,-8(%r12)
	addq %rsi,%r14
	movq %r14,(%r12)
	leaq -47(%r12),%rax
	movq %rax,8(%rbx)
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movq 64(%rsp),%rax
	movq %rax,%rbx
	addq $96,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbbqe:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 96(%rsp),%rax
	movq %rax,-40(%r12)
	movq 104(%rsp),%rax
	movq %rax,-32(%r12)
	movq 80(%rsp),%rax
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq 120(%rsp),%rax
	movq %rax,-8(%r12)
	addq %rsi,%r14
	movq %r14,(%r12)
	movq $block_cbbqd_info,48(%rbp)
	movq 72(%rsp),%rax
	movq %rax,%r14
	movq $stg_ap_ppv_info,24(%rbp)
	leaq -47(%r12),%rax
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp GHC.IO.BufferedIO.flushWriteBuffer_entry
_cbbpO:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbbpG, .-_cbbpG


==================== Asm code ====================
2018-03-16 16:06:04.248226033 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbpG_info:
	.quad	_cbbpG
	.quad	49611
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.248992718 UTC

.section .text
.align 8
_cbbqd:
_cbbqd:
	movq 40(%rbp),%rax
	movq 8(%rbp),%rcx
	movq %rbx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rcx,%rsi
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbbqd, .-_cbbqd


==================== Asm code ====================
2018-03-16 16:06:04.250002327 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbqd_info:
	.quad	_cbbqd
	.quad	901
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.251929068 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.hPutBuf4_bytes
.type GHC.IO.Handle.Text.hPutBuf4_bytes, @object
GHC.IO.Handle.Text.hPutBuf4_bytes:
	.asciz "hPutBuf"


==================== Asm code ====================
2018-03-16 16:06:04.255343157 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBuf3_closure
.type GHC.IO.Handle.Text.hPutBuf3_closure, @object
GHC.IO.Handle.Text.hPutBuf3_closure:
	.quad	GHC.IO.Handle.Text.hPutBuf3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.256123667 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutBuf3_entry
.type GHC.IO.Handle.Text.hPutBuf3_entry, @object
GHC.IO.Handle.Text.hPutBuf3_entry:
_cbbso:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbsp
_cbbsq:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbbsn
_cbbsm:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Text.hPutBuf4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbbsp:
	jmp *-16(%r13)
_cbbsn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.hPutBuf3_entry, .-GHC.IO.Handle.Text.hPutBuf3_entry


==================== Asm code ====================
2018-03-16 16:06:04.256820315 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBuf3_info
.type GHC.IO.Handle.Text.hPutBuf3_info, @object
GHC.IO.Handle.Text.hPutBuf3_info:
	.quad	GHC.IO.Handle.Text.hPutBuf3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:04.266290349 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whPutBuf'_closure
.type GHC.IO.Handle.Text.$whPutBuf'_closure, @object
GHC.IO.Handle.Text.$whPutBuf'_closure:
	.quad	GHC.IO.Handle.Text.$whPutBuf'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.266980431 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$whPutBuf'_slow
.type GHC.IO.Handle.Text.$whPutBuf'_slow, @object
GHC.IO.Handle.Text.$whPutBuf'_slow:
_cbbsz:
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Text.$whPutBuf'_entry
	.size GHC.IO.Handle.Text.$whPutBuf'_slow, .-GHC.IO.Handle.Text.$whPutBuf'_slow


==================== Asm code ====================
2018-03-16 16:06:04.267790013 UTC

.section .text
.align 8
act_sb7nl_entry:
_cbbsQ:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbsR
_cbbsS:
	movq $block_cbbsN_info,-32(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rax,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbbsN
_cbbsO:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbsR:
	jmp *-8(%r13)
	.size act_sb7nl_entry, .-act_sb7nl_entry


==================== Asm code ====================
2018-03-16 16:06:04.268445475 UTC

.section .data.rel.ro
.align 8
.align 1
act_sb7nl_info:
	.quad	act_sb7nl_entry
	.quad	4294967298
	.quad	4294967304
	.quad	8589934597
	.quad	Sb7vQ_srt+464


==================== Asm code ====================
2018-03-16 16:06:04.269114059 UTC

.section .text
.align 8
_cbbsN:
_cbbsN:
	movq $block_cbbsV_info,-8(%rbp)
	movq 16(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	movq 55(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,8(%rbp)
	movq 31(%rbx),%rax
	movq %rax,16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	addq $-8,%rbp
	jmp GHC.IO.Handle.Text.$wbufWrite_entry
	.size _cbbsN, .-_cbbsN


==================== Asm code ====================
2018-03-16 16:06:04.269824412 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbsN_info:
	.quad	_cbbsN
	.quad	259
	.quad	4294967326
	.quad	Sb7vQ_srt+464


==================== Asm code ====================
2018-03-16 16:06:04.270496152 UTC

.section .text
.align 8
_cbbsV:
_cbbsV:
	movq $block_cbbsX_info,(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cbbsX
_cbbt0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbsV, .-_cbbsV


==================== Asm code ====================
2018-03-16 16:06:04.271053875 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbsV_info:
	.quad	_cbbsV
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.271727418 UTC

.section .text
.align 8
_cbbsX:
_cbbsX:
	andl $7,%ebx
	cmpq $3,%rbx
	je _ubbtN
_cbbt7:
	movq 16(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbbt4_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbbt4
_cbbt8:
	movq (%rbx),%rax
	jmp *(%rax)
_ubbtN:
	addq $8,%rbp
	jmp _cbbtH
	.size _cbbsX, .-_cbbsX


==================== Asm code ====================
2018-03-16 16:06:04.272359382 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbsX_info:
	.quad	_cbbsX
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.273031604 UTC

.section .text
.align 8
_cbbt4:
_cbbt4:
	movq $block_cbbtc_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _cbbtc
_cbbte:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbt4, .-_cbbt4


==================== Asm code ====================
2018-03-16 16:06:04.273838672 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbt4_info:
	.quad	_cbbt4
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.274522927 UTC

.section .text
.align 8
_cbbtc:
_cbbtc:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ubbtO
_cbbtp:
	movq 16(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbbtn_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbbtn
_cbbtq:
	movq (%rbx),%rax
	jmp *(%rax)
_ubbtO:
	addq $8,%rbp
	jmp _cbbtH
	.size _cbbtc, .-_cbbtc


==================== Asm code ====================
2018-03-16 16:06:04.275139156 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbtc_info:
	.quad	_cbbtc
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.275817027 UTC

.section .text
.align 8
_cbbtn:
_cbbtn:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _ubbtP
_cbbtA:
	movq $block_cbbty_info,(%rbp)
	movq 32(%rbp),%r14
	movq $stg_ap_ppv_info,-24(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.IO.BufferedIO.flushWriteBuffer_entry
_ubbtP:
	addq $8,%rbp
	jmp _cbbtH
	.size _cbbtn, .-_cbbtn


==================== Asm code ====================
2018-03-16 16:06:04.276444563 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbtn_info:
	.quad	_cbbtn
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.27710368 UTC

.section .text
.align 8
_cbbtH:
_cbbtH:
	movq (%rbp),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbbtH, .-_cbbtH


==================== Asm code ====================
2018-03-16 16:06:04.277796716 UTC

.section .text
.align 8
_cbbty:
_cbbty:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	movq %rcx,%rbx
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbbty, .-_cbbty


==================== Asm code ====================
2018-03-16 16:06:04.278403807 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbty_info:
	.quad	_cbbty
	.quad	772
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.278939496 UTC

.section .data.rel.ro
.align 8
.align 1
ubbun_srtd:
	.quad	Sb7vQ_srt+8
	.quad	62
	.quad	3602879701896396803


==================== Asm code ====================
2018-03-16 16:06:04.279891033 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$whPutBuf'_entry
.type GHC.IO.Handle.Text.$whPutBuf'_entry, @object
GHC.IO.Handle.Text.$whPutBuf'_entry:
_cbbu1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbu2
_cbbu3:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbbu5
_cbbu4:
	testq %rdi,%rdi
	je _cbbu0
_cbbtZ:
	testq %rdi,%rdi
	jge _cbbu8
_cbbuk:
	addq $-32,%r12
	movl $GHC.IO.Handle.Text.hPutBuf3_closure,%esi
	jmp GHC.IO.Handle.Text.$willegalBufferSize_entry
_cbbu8:
	movq $act_sb7nl_info,-24(%r12)
	movq %rsi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rdi,(%r12)
	movq $block_cbbu6_info,-16(%rbp)
	movq %r14,%rbx
	leaq -22(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbbu6
_cbbu9:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbu5:
	movq $32,904(%r13)
_cbbu2:
	movl $GHC.IO.Handle.Text.$whPutBuf'_closure,%ebx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
_cbbu0:
	addq $-32,%r12
	movl $GHC.IO.Handle.Text.hGetBuf3_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.$whPutBuf'_entry, .-GHC.IO.Handle.Text.$whPutBuf'_entry


==================== Asm code ====================
2018-03-16 16:06:04.280698654 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whPutBuf'_info
.type GHC.IO.Handle.Text.$whPutBuf'_info, @object
GHC.IO.Handle.Text.$whPutBuf'_info:
	.quad	GHC.IO.Handle.Text.$whPutBuf'_entry
	.quad	0
	.quad	-4294967282
	.quad	21474836480
	.quad	ubbun_srtd
	.quad	260
	.quad	GHC.IO.Handle.Text.$whPutBuf'_slow


==================== Asm code ====================
2018-03-16 16:06:04.281279575 UTC

.section .data.rel.ro
.align 8
.align 1
ubbuo_srtd:
	.quad	Sb7vQ_srt+16
	.quad	61
	.quad	1152921504606846977


==================== Asm code ====================
2018-03-16 16:06:04.281980895 UTC

.section .text
.align 8
_cbbu6:
_cbbu6:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbbuf
_cbbuj:
	movq %rax,%r8
	movq 22(%rbx),%rdi
	movq %rbx,%rsi
	movl $GHC.IO.Handle.Text.hPutBuf3_closure,%r14d
	addq $16,%rbp
	jmp GHC.IO.Handle.Internals.$wwantWritableHandle'_entry
_cbbuf:
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq %rbx,%rsi
	movl $GHC.IO.Handle.Text.hPutBuf3_closure,%r14d
	addq $16,%rbp
	jmp GHC.IO.Handle.Internals.$wwantWritableHandle'_entry
	.size _cbbu6, .-_cbbu6


==================== Asm code ====================
2018-03-16 16:06:04.282630309 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbu6_info:
	.quad	_cbbu6
	.quad	1
	.quad	-4294967266
	.quad	ubbuo_srtd


==================== Asm code ====================
2018-03-16 16:06:04.285797399 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBuf2_closure
.type GHC.IO.Handle.Text.hPutBuf2_closure, @object
GHC.IO.Handle.Text.hPutBuf2_closure:
	.quad	GHC.IO.Handle.Text.hPutBuf2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.286522827 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutBuf2_entry
.type GHC.IO.Handle.Text.hPutBuf2_entry, @object
GHC.IO.Handle.Text.hPutBuf2_entry:
_cbbvy:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbvz
_cbbvA:
	movq $block_cbbvv_info,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbbvv
_cbbvw:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbvz:
	movl $GHC.IO.Handle.Text.hPutBuf2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hPutBuf2_entry, .-GHC.IO.Handle.Text.hPutBuf2_entry


==================== Asm code ====================
2018-03-16 16:06:04.287211469 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBuf2_info
.type GHC.IO.Handle.Text.hPutBuf2_info, @object
GHC.IO.Handle.Text.hPutBuf2_info:
	.quad	GHC.IO.Handle.Text.hPutBuf2_entry
	.quad	0
	.quad	21474836494
	.quad	21474836504
	.quad	Sb7vQ_srt+488


==================== Asm code ====================
2018-03-16 16:06:04.287869946 UTC

.section .text
.align 8
_cbbvv:
_cbbvv:
	movq 24(%rbp),%r8
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Text.$whPutBuf'_entry
	.size _cbbvv, .-_cbbvv


==================== Asm code ====================
2018-03-16 16:06:04.288425538 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbvv_info:
	.quad	_cbbvv
	.quad	3
	.quad	4294967326
	.quad	Sb7vQ_srt+488


==================== Asm code ====================
2018-03-16 16:06:04.291542514 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBufNonBlocking1_closure
.type GHC.IO.Handle.Text.hPutBufNonBlocking1_closure, @object
GHC.IO.Handle.Text.hPutBufNonBlocking1_closure:
	.quad	GHC.IO.Handle.Text.hPutBufNonBlocking1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.292307065 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutBufNonBlocking1_entry
.type GHC.IO.Handle.Text.hPutBufNonBlocking1_entry, @object
GHC.IO.Handle.Text.hPutBufNonBlocking1_entry:
_cbbvV:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbvW
_cbbvX:
	movq $block_cbbvS_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbbvS
_cbbvT:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbvW:
	movl $GHC.IO.Handle.Text.hPutBufNonBlocking1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hPutBufNonBlocking1_entry, .-GHC.IO.Handle.Text.hPutBufNonBlocking1_entry


==================== Asm code ====================
2018-03-16 16:06:04.29293013 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBufNonBlocking1_info
.type GHC.IO.Handle.Text.hPutBufNonBlocking1_info, @object
GHC.IO.Handle.Text.hPutBufNonBlocking1_info:
	.quad	GHC.IO.Handle.Text.hPutBufNonBlocking1_entry
	.quad	0
	.quad	38654705678
	.quad	17179869207
	.quad	Sb7vQ_srt+488


==================== Asm code ====================
2018-03-16 16:06:04.294136528 UTC

.section .text
.align 8
_cbbvS:
_cbbvS:
	movl $GHC.Types.False_closure+1,%r8d
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Text.$whPutBuf'_entry
	.size _cbbvS, .-_cbbvS


==================== Asm code ====================
2018-03-16 16:06:04.29478299 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbvS_info:
	.quad	_cbbvS
	.quad	2
	.quad	4294967326
	.quad	Sb7vQ_srt+488


==================== Asm code ====================
2018-03-16 16:06:04.296916908 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBufNonBlocking_closure
.type GHC.IO.Handle.Text.hPutBufNonBlocking_closure, @object
GHC.IO.Handle.Text.hPutBufNonBlocking_closure:
	.quad	GHC.IO.Handle.Text.hPutBufNonBlocking_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.29757891 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutBufNonBlocking_entry
.type GHC.IO.Handle.Text.hPutBufNonBlocking_entry, @object
GHC.IO.Handle.Text.hPutBufNonBlocking_entry:
_cbbwf:
	jmp GHC.IO.Handle.Text.hPutBufNonBlocking1_entry
	.size GHC.IO.Handle.Text.hPutBufNonBlocking_entry, .-GHC.IO.Handle.Text.hPutBufNonBlocking_entry


==================== Asm code ====================
2018-03-16 16:06:04.298144844 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBufNonBlocking_info
.type GHC.IO.Handle.Text.hPutBufNonBlocking_info, @object
GHC.IO.Handle.Text.hPutBufNonBlocking_info:
	.quad	GHC.IO.Handle.Text.hPutBufNonBlocking_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	Sb7vQ_srt+512


==================== Asm code ====================
2018-03-16 16:06:04.301229357 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBuf1_closure
.type GHC.IO.Handle.Text.hPutBuf1_closure, @object
GHC.IO.Handle.Text.hPutBuf1_closure:
	.quad	GHC.IO.Handle.Text.hPutBuf1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.302465497 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutBuf1_entry
.type GHC.IO.Handle.Text.hPutBuf1_entry, @object
GHC.IO.Handle.Text.hPutBuf1_entry:
_cbbwt:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbwx
_cbbwy:
	movq $block_cbbwq_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbbwq
_cbbwr:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbwx:
	movl $GHC.IO.Handle.Text.hPutBuf1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hPutBuf1_entry, .-GHC.IO.Handle.Text.hPutBuf1_entry


==================== Asm code ====================
2018-03-16 16:06:04.303117016 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBuf1_info
.type GHC.IO.Handle.Text.hPutBuf1_info, @object
GHC.IO.Handle.Text.hPutBuf1_info:
	.quad	GHC.IO.Handle.Text.hPutBuf1_entry
	.quad	0
	.quad	73014444046
	.quad	17179869207
	.quad	Sb7vQ_srt+488


==================== Asm code ====================
2018-03-16 16:06:04.303798453 UTC

.section .text
.align 8
_cbbwq:
_cbbwq:
	movq 16(%rbp),%rax
	movq $block_cbbww_info,16(%rbp)
	movl $GHC.Types.True_closure+2,%r8d
	movq 7(%rbx),%rdi
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.Text.$whPutBuf'_entry
	.size _cbbwq, .-_cbbwq


==================== Asm code ====================
2018-03-16 16:06:04.304384182 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbwq_info:
	.quad	_cbbwq
	.quad	2
	.quad	4294967326
	.quad	Sb7vQ_srt+488


==================== Asm code ====================
2018-03-16 16:06:04.304990086 UTC

.section .text
.align 8
_cbbww:
_cbbww:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbbww, .-_cbbww


==================== Asm code ====================
2018-03-16 16:06:04.305597676 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbww_info:
	.quad	_cbbww
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.307670097 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBuf_closure
.type GHC.IO.Handle.Text.hPutBuf_closure, @object
GHC.IO.Handle.Text.hPutBuf_closure:
	.quad	GHC.IO.Handle.Text.hPutBuf_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.308267255 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutBuf_entry
.type GHC.IO.Handle.Text.hPutBuf_entry, @object
GHC.IO.Handle.Text.hPutBuf_entry:
_cbbwU:
	jmp GHC.IO.Handle.Text.hPutBuf1_entry
	.size GHC.IO.Handle.Text.hPutBuf_entry, .-GHC.IO.Handle.Text.hPutBuf_entry


==================== Asm code ====================
2018-03-16 16:06:04.308844669 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBuf_info
.type GHC.IO.Handle.Text.hPutBuf_info, @object
GHC.IO.Handle.Text.hPutBuf_info:
	.quad	GHC.IO.Handle.Text.hPutBuf_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	Sb7vQ_srt+520


==================== Asm code ====================
2018-03-16 16:06:04.310536991 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl31_rb6Xb_bytes:
	.asciz "\n"


==================== Asm code ====================
2018-03-16 16:06:04.312940431 UTC

.section .data
.align 8
.align 1
lvl32_rb6Xc_closure:
	.quad	lvl32_rb6Xc_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.31405923 UTC

.section .text
.align 8
lvl32_rb6Xc_entry:
_cbbx8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbx9
_cbbxa:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbbx7
_cbbx6:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl31_rb6Xb_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbbx9:
	jmp *-16(%r13)
_cbbx7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl32_rb6Xc_entry, .-lvl32_rb6Xc_entry


==================== Asm code ====================
2018-03-16 16:06:04.314714646 UTC

.section .data.rel.ro
.align 8
.align 1
lvl32_rb6Xc_info:
	.quad	lvl32_rb6Xc_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:04.334618546 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$wwriteBlocks_closure
.type GHC.IO.Handle.Text.$wwriteBlocks_closure, @object
GHC.IO.Handle.Text.$wwriteBlocks_closure:
	.quad	GHC.IO.Handle.Text.$wwriteBlocks_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.335369331 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$wwriteBlocks_slow
.type GHC.IO.Handle.Text.$wwriteBlocks_slow, @object
GHC.IO.Handle.Text.$wwriteBlocks_slow:
_cbbxj:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Text.$wwriteBlocks_entry
	.size GHC.IO.Handle.Text.$wwriteBlocks_slow, .-GHC.IO.Handle.Text.$wwriteBlocks_slow


==================== Asm code ====================
2018-03-16 16:06:04.336320098 UTC

.section .text
.align 8
sat_sb7r5_entry:
_cbbxy:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbxz
_cbbxA:
	movq $block_cbbxr_info,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbbxr
_cbbxs:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbxz:
	jmp *-16(%r13)
	.size sat_sb7r5_entry, .-sat_sb7r5_entry


==================== Asm code ====================
2018-03-16 16:06:04.337029985 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb7r5_info:
	.quad	sat_sb7r5_entry
	.quad	1
	.quad	4294967312
	.quad	Sb7vQ_srt+528


==================== Asm code ====================
2018-03-16 16:06:04.337926167 UTC

.section .text
.align 8
_cbbxr:
_cbbxr:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbbxv
_cbbxw:
	movl $lvl32_rb6Xc_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cbbxv:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbbxr, .-_cbbxr


==================== Asm code ====================
2018-03-16 16:06:04.338666135 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbxr_info:
	.quad	_cbbxr
	.quad	0
	.quad	4294967326
	.quad	Sb7vQ_srt+528


==================== Asm code ====================
2018-03-16 16:06:04.339632386 UTC

.section .text
.align 8
sat_sb7pr_entry:
_cbbxW:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cbby2
_cbby3:
	movq $block_cbbxT_info,-48(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rdx
	movq 30(%rbx),%rsi
	movq 38(%rbx),%rbx
	movq %rbx,%rdi
	movq %r14,%rbx
	movq %rdx,-40(%rbp)
	movq %rax,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _cbbxT
_cbbxU:
	movq (%rbx),%rax
	jmp *(%rax)
_cbby2:
	jmp *-8(%r13)
	.size sat_sb7pr_entry, .-sat_sb7pr_entry


==================== Asm code ====================
2018-03-16 16:06:04.340451987 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb7pr_info:
	.quad	sat_sb7pr_entry
	.quad	12884901890
	.quad	8
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:06:04.341428359 UTC

.section .text
.align 8
_cbbxT:
_cbbxT:
	movq 8(%rbp),%rax
	movq $block_cbbxZ_info,8(%rbp)
	movq 24(%rbp),%r9
	movl $GHC.IO.Buffer.WriteBuffer_closure+2,%r8d
	movq 16(%rbp),%rdi
	movq %rax,%rsi
	movq %rbx,%r14
	movq $0,-8(%rbp)
	movq 32(%rbp),%rax
	movq %rax,(%rbp)
	movq 79(%rbx),%rax
	movq %rax,16(%rbp)
	movq 71(%rbx),%rax
	movq %rax,32(%rbp)
	addq $-8,%rbp
	jmp GHC.IO.Handle.Internals.$wwriteCharBuffer_entry
	.size _cbbxT, .-_cbbxT


==================== Asm code ====================
2018-03-16 16:06:04.342266897 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbxT_info:
	.quad	_cbbxT
	.quad	837
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.343078754 UTC

.section .text
.align 8
_cbbxZ:
_cbbxZ:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbby1_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbby1
_cbby6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbxZ, .-_cbbxZ


==================== Asm code ====================
2018-03-16 16:06:04.344601669 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbxZ_info:
	.quad	_cbbxZ
	.quad	132
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.345536145 UTC

.section .text
.align 8
_cbby1:
_cbby1:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbbyc
_cbbyb:
	movq 16(%rbp),%rax
	cmpq 31(%rbx),%rax
	je _cbbyh
_cbbyg:
	addq $-24,%r12
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbbyh:
	movq 8(%rbp),%rax
	movq 8(%rax),%rbx
	movq $GHC.IO.Handle.Types.BufferListCons_con_info,-16(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbbyc:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbby1, .-_cbby1


==================== Asm code ====================
2018-03-16 16:06:04.346281879 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbby1_info:
	.quad	_cbby1
	.quad	388
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.347027829 UTC

.section .text
.align 8
sat_sb7qq_entry:
_cbbz8:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbze
_cbbzf:
	movq $block_cbbz5_info,-40(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rdx
	movq 30(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rcx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbbz5
_cbbz6:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbze:
	jmp *-8(%r13)
	.size sat_sb7qq_entry, .-sat_sb7qq_entry


==================== Asm code ====================
2018-03-16 16:06:04.347725337 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb7qq_info:
	.quad	sat_sb7qq_entry
	.quad	12884901889
	.quad	8
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:06:04.348451177 UTC

.section .text
.align 8
_cbbz5:
_cbbz5:
	movq 8(%rbp),%rax
	movq $block_cbbzb_info,8(%rbp)
	movq 24(%rbp),%r9
	movl $GHC.IO.Buffer.WriteBuffer_closure+2,%r8d
	movq 16(%rbp),%rdi
	movq %rax,%rsi
	movq %rbx,%r14
	movq $0,-8(%rbp)
	movq 32(%rbp),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,24(%rbp)
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $-8,%rbp
	jmp GHC.IO.Handle.Internals.$wwriteCharBuffer_entry
	.size _cbbz5, .-_cbbz5


==================== Asm code ====================
2018-03-16 16:06:04.349113605 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbz5_info:
	.quad	_cbbz5
	.quad	836
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.349771906 UTC

.section .text
.align 8
_cbbzb:
_cbbzb:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbbzd_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbbzd
_cbbzi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbzb, .-_cbbzb


==================== Asm code ====================
2018-03-16 16:06:04.350360006 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbzb_info:
	.quad	_cbbzb
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.351036747 UTC

.section .text
.align 8
_cbbzd:
_cbbzd:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cbbzv
_cbbzs:
	movq $block_cbbzq_info,(%rbp)
	movq 24(%rbp),%r14
	movq $stg_ap_ppv_info,-24(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.IO.BufferedIO.flushWriteBuffer_entry
_cbbzv:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbbzd, .-_cbbzd


==================== Asm code ====================
2018-03-16 16:06:04.351722396 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbzd_info:
	.quad	_cbbzd
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.352451985 UTC

.section .text
.align 8
_cbbzq:
_cbbzq:
	movq 8(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbbzq, .-_cbbzq


==================== Asm code ====================
2018-03-16 16:06:04.353063174 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbzq_info:
	.quad	_cbbzq
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.354041493 UTC

.section .text
.align 8
sat_sb7r0_entry:
_cbbzK:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbzO
_cbbzP:
	movq $block_cbbzH_info,-40(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rdx
	movq 30(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rcx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbbzH
_cbbzI:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbzO:
	jmp *-8(%r13)
	.size sat_sb7r0_entry, .-sat_sb7r0_entry


==================== Asm code ====================
2018-03-16 16:06:04.354727918 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb7r0_info:
	.quad	sat_sb7r0_entry
	.quad	12884901889
	.quad	8
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:06:04.35538931 UTC

.section .text
.align 8
_cbbzH:
_cbbzH:
	movq 32(%rbp),%rax
	movq $block_cbbzN_info,32(%rbp)
	movq 24(%rbp),%r9
	movl $GHC.IO.Buffer.WriteBuffer_closure+2,%r8d
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	movq $0,16(%rbp)
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp GHC.IO.Handle.Internals.$wwriteCharBuffer_entry
	.size _cbbzH, .-_cbbzH


==================== Asm code ====================
2018-03-16 16:06:04.35602435 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbzH_info:
	.quad	_cbbzH
	.quad	836
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.356625529 UTC

.section .text
.align 8
_cbbzN:
_cbbzN:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbbzN, .-_cbbzN


==================== Asm code ====================
2018-03-16 16:06:04.357236997 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbzN_info:
	.quad	_cbbzN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.358100206 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$wwriteBlocks_entry
.type GHC.IO.Handle.Text.$wwriteBlocks_entry, @object
GHC.IO.Handle.Text.$wwriteBlocks_entry:
_cbbzU:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbzV
_cbbzW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbbzY
_cbbzX:
	movq $sat_sb7r5_info,-16(%r12)
	movq %rdi,(%r12)
	movq %rsi,-48(%rbp)
	movq %r8,-40(%rbp)
	movq %r9,-32(%rbp)
	movq $0,-24(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	movq %r14,16(%rbp)
	addq $-48,%rbp
	jmp _cbbys
_cbbzY:
	movq $24,904(%r13)
_cbbzV:
	movl $GHC.IO.Handle.Text.$wwriteBlocks_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.$wwriteBlocks_entry, .-GHC.IO.Handle.Text.$wwriteBlocks_entry


==================== Asm code ====================
2018-03-16 16:06:04.358856499 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$wwriteBlocks_info
.type GHC.IO.Handle.Text.$wwriteBlocks_info, @object
GHC.IO.Handle.Text.$wwriteBlocks_info:
	.quad	GHC.IO.Handle.Text.$wwriteBlocks_entry
	.quad	0
	.quad	64424509454
	.quad	38654705664
	.quad	Sb7vQ_srt+528
	.quad	5128
	.quad	GHC.IO.Handle.Text.$wwriteBlocks_slow


==================== Asm code ====================
2018-03-16 16:06:04.35958067 UTC

.section .text
.align 8
_cbbys:
_cbbys:
	movq $block_cbbyv_info,-8(%rbp)
	movq 32(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbbyv
_cbbyw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbys, .-_cbbys


==================== Asm code ====================
2018-03-16 16:06:04.360561264 UTC

.section .text
.align 8
_cbbyv:
_cbbyv:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbbA7
_cbbAj:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbbAm
_cbbAl:
	movq 64(%rbp),%rax
	movq 32(%rbp),%rcx
	leaq 1(%rcx),%rdx
	cmpq %rax,%rdx
	jl _cbbAo
_cbbAS:
	movq $sat_sb7r0_info,-32(%r12)
	movq 56(%rbp),%rdx
	movq %rdx,-24(%r12)
	movq 24(%rbp),%rdx
	movq %rdx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	movq $block_cbbAR_info,(%rbp)
	leaq -30(%r12),%rdi
	movq 72(%rbp),%rsi
	movl $lvl2_rb6WE_closure,%r14d
	movq %rbx,40(%rbp)
	jmp GHC.IO.Handle.Internals.wantWritableHandle1_entry
_cbbAm:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
_cbbA7:
	movq $block_cbbA4_info,(%rbp)
	movq 48(%rbp),%rbx
	testb $7,%bl
	jne _cbbA4
_cbbA8:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbAo:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	addq $-40,%r12
	movq $block_cbbyH_info,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,40(%rbp)
	testb $7,%bl
	jne _cbbyH
_cbbyI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbyv, .-_cbbyv


==================== Asm code ====================
2018-03-16 16:06:04.361379884 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbyv_info:
	.quad	_cbbyv
	.quad	9993
	.quad	21474836510
	.quad	Sb7vQ_srt+536


==================== Asm code ====================
2018-03-16 16:06:04.362094854 UTC

.section .text
.align 8
_cbbA4:
_cbbA4:
	movq 32(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbbAe
_cbbAi:
	movq %rax,32(%rbp)
	movq %rbx,40(%rbp)
	movq $GHC.Types.[]_closure+1,48(%rbp)
	addq $8,%rbp
	jmp _cbbys
_cbbAe:
	movq %rax,48(%rbp)
	addq $24,%rbp
	jmp _cbbxL
	.size _cbbA4, .-_cbbA4


==================== Asm code ====================
2018-03-16 16:06:04.362744735 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbA4_info:
	.quad	_cbbA4
	.quad	12041
	.quad	21474836510
	.quad	Sb7vQ_srt+536


==================== Asm code ====================
2018-03-16 16:06:04.363491673 UTC

.section .text
.align 8
_cbbxL:
_cbbxL:
	addq $72,%r12
	movq 24(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cbbA1
_cbbA0:
	movq $GHC.ForeignPtr.ForeignPtr_con_info,-64(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq (%rbp),%rcx
	movq %rcx,-48(%r12)
	movq $sat_sb7pr_info,-40(%r12)
	movq %rbx,-32(%r12)
	leaq -63(%r12),%rbx
	movq %rbx,-24(%r12)
	movq %rcx,-16(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -38(%r12),%rdi
	movq 48(%rbp),%rsi
	movl $lvl2_rb6WE_closure,%r14d
	addq $56,%rbp
	jmp GHC.IO.Handle.Internals.wantWritableHandle1_entry
_cbbA1:
	movq $72,904(%r13)
	movq $block_cbbxK_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _cbbxL, .-_cbbxL


==================== Asm code ====================
2018-03-16 16:06:04.364283724 UTC

.section .text
.align 8
_cbbxK:
_cbbxK:
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp _cbbxL
	.size _cbbxK, .-_cbbxK


==================== Asm code ====================
2018-03-16 16:06:04.364826635 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbxK_info:
	.quad	_cbbxK
	.quad	3015
	.quad	21474836510
	.quad	Sb7vQ_srt+536


==================== Asm code ====================
2018-03-16 16:06:04.365951369 UTC

.section .text
.align 8
_cbbyH:
_cbbyH:
	movq 7(%rbx),%rax
	cmpq $10,%rax
	jne _cbbAr
_cbbAF:
	movq $block_cbbAs_info,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _cbbAs
_cbbAG:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbAr:
	movq 56(%rbp),%rbx
	movq 32(%rbp),%rbx
	movq 48(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 24(%rbp),%rsi
	movl %eax,(%rsi,%rbx,4)
	leaq 1(%rbx),%rax
	movq %rax,32(%rbp)
	movq %rdx,40(%rbp)
	movq %rcx,48(%rbp)
	addq $8,%rbp
	jmp _cbbys
	.size _cbbyH, .-_cbbyH


==================== Asm code ====================
2018-03-16 16:06:04.366636527 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbyH_info:
	.quad	_cbbyH
	.quad	8969
	.quad	21474836510
	.quad	Sb7vQ_srt+536


==================== Asm code ====================
2018-03-16 16:06:04.367441718 UTC

.section .text
.align 8
_cbbAs:
_cbbAs:
	movq 8(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 56(%rbp),%rdx
	movq 32(%rbp),%rdx
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbbAM
_cbbAQ:
	movl $13,(%rcx,%rdx,4)
	leaq 1(%rdx),%rbx
	movl $10,(%rcx,%rbx,4)
	incq %rbx
_sb7pL:
	movq $block_cbbyU_info,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,32(%rbp)
	testb $7,%bl
	jne _cbbyU
_cbbyV:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbAM:
	movl $10,(%rcx,%rdx,4)
	leaq 1(%rdx),%rbx
	jmp _sb7pL
	.size _cbbAs, .-_cbbAs


==================== Asm code ====================
2018-03-16 16:06:04.368141592 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbAs_info:
	.quad	_cbbAs
	.quad	8969
	.quad	21474836510
	.quad	Sb7vQ_srt+536


==================== Asm code ====================
2018-03-16 16:06:04.368919034 UTC

.section .text
.align 8
_cbbyU:
_cbbyU:
	movq 32(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbbAx
_cbbAz:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbbAC
_cbbAB:
	movq $sat_sb7qq_info,-32(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	movq $block_cbbAy_info,(%rbp)
	leaq -30(%r12),%rdi
	movq 72(%rbp),%rsi
	movl $lvl2_rb6WE_closure,%r14d
	jmp GHC.IO.Handle.Internals.wantWritableHandle1_entry
_cbbAC:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
_cbbAx:
	movq %rax,32(%rbp)
	movq 40(%rbp),%rax
	movq %rax,40(%rbp)
	movq 48(%rbp),%rax
	movq %rax,48(%rbp)
	addq $8,%rbp
	jmp _cbbys
	.size _cbbyU, .-_cbbyU


==================== Asm code ====================
2018-03-16 16:06:04.369667599 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbyU_info:
	.quad	_cbbyU
	.quad	8969
	.quad	21474836510
	.quad	Sb7vQ_srt+536


==================== Asm code ====================
2018-03-16 16:06:04.370303762 UTC

.section .text
.align 8
_cbbAy:
_cbbAy:
	movq $0,32(%rbp)
	movq 40(%rbp),%rax
	movq %rax,40(%rbp)
	movq 48(%rbp),%rax
	movq %rax,48(%rbp)
	addq $8,%rbp
	jmp _cbbys
	.size _cbbAy, .-_cbbAy


==================== Asm code ====================
2018-03-16 16:06:04.370910694 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbAy_info:
	.quad	_cbbAy
	.quad	8969
	.quad	21474836510
	.quad	Sb7vQ_srt+536


==================== Asm code ====================
2018-03-16 16:06:04.371524648 UTC

.section .text
.align 8
_cbbAR:
_cbbAR:
	movq $0,32(%rbp)
	movq 40(%rbp),%rax
	movq %rax,40(%rbp)
	movq 48(%rbp),%rax
	movq %rax,48(%rbp)
	addq $8,%rbp
	jmp _cbbys
	.size _cbbAR, .-_cbbAR


==================== Asm code ====================
2018-03-16 16:06:04.372139713 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbAR_info:
	.quad	_cbbAR
	.quad	8969
	.quad	21474836510
	.quad	Sb7vQ_srt+536


==================== Asm code ====================
2018-03-16 16:06:04.373879774 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl33_rb6Xd_bytes:
	.asciz "no buffer!"


==================== Asm code ====================
2018-03-16 16:06:04.37747234 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr4_closure
.type GHC.IO.Handle.Text.hPutStr4_closure, @object
GHC.IO.Handle.Text.hPutStr4_closure:
	.quad	GHC.IO.Handle.Text.hPutStr4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.378339079 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutStr4_entry
.type GHC.IO.Handle.Text.hPutStr4_entry, @object
GHC.IO.Handle.Text.hPutStr4_entry:
_cbbDW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbDX
_cbbDY:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbbDT
_cbbDS:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_cbbDU_info,-24(%rbp)
	movl $lvl33_rb6Xd_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbbDX:
	jmp *-16(%r13)
_cbbDT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.hPutStr4_entry, .-GHC.IO.Handle.Text.hPutStr4_entry


==================== Asm code ====================
2018-03-16 16:06:04.379074401 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr4_info
.type GHC.IO.Handle.Text.hPutStr4_info, @object
GHC.IO.Handle.Text.hPutStr4_info:
	.quad	GHC.IO.Handle.Text.hPutStr4_entry
	.quad	0
	.quad	4294967317
	.quad	Sb7vQ_srt+560


==================== Asm code ====================
2018-03-16 16:06:04.379718589 UTC

.section .text
.align 8
_cbbDU:
_cbbDU:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size _cbbDU, .-_cbbDU


==================== Asm code ====================
2018-03-16 16:06:04.380297181 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbDU_info:
	.quad	_cbbDU
	.quad	0
	.quad	4294967326
	.quad	Sb7vQ_srt+560


==================== Asm code ====================
2018-03-16 16:06:04.382107734 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr3_closure
.type GHC.IO.Handle.Text.hPutStr3_closure, @object
GHC.IO.Handle.Text.hPutStr3_closure:
	.quad	(,)_con_info
	.quad	GHC.IO.Handle.Types.NoBuffering_closure+1
	.quad	GHC.IO.Handle.Text.hPutStr4_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.3915876 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr2_closure
.type GHC.IO.Handle.Text.hPutStr2_closure, @object
GHC.IO.Handle.Text.hPutStr2_closure:
	.quad	GHC.IO.Handle.Text.hPutStr2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.39234048 UTC

.section .text
.align 8
sat_sb7s6_entry:
_cbbEH:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbEQ
_cbbER:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbbEE_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbbEE
_cbbEF:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbEQ:
	jmp *-16(%r13)
	.size sat_sb7s6_entry, .-sat_sb7s6_entry


==================== Asm code ====================
2018-03-16 16:06:04.392956401 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb7s6_info:
	.quad	sat_sb7s6_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:06:04.393670848 UTC

.section .text
.align 8
_cbbEE:
_cbbEE:
	movq $block_cbbEK_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rax,(%rbp)
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbbEK
_cbbEL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbEE, .-_cbbEE


==================== Asm code ====================
2018-03-16 16:06:04.394283715 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbEE_info:
	.quad	_cbbEE
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.395056223 UTC

.section .text
.align 8
_cbbEK:
_cbbEK:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbbEV
_cbbEU:
	movq 31(%rbx),%rax
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq $GHC.IO.Buffer.WriteBuffer_closure+2,-32(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbbEV:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbbEK, .-_cbbEK


==================== Asm code ====================
2018-03-16 16:06:04.395736007 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbEK_info:
	.quad	_cbbEK
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.396512629 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutStr2_entry
.type GHC.IO.Handle.Text.hPutStr2_entry, @object
GHC.IO.Handle.Text.hPutStr2_entry:
_cbbEY:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbEZ
_cbbF0:
	movq $block_cbbEh_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbbEh
_cbbEi:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbEZ:
	movl $GHC.IO.Handle.Text.hPutStr2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hPutStr2_entry, .-GHC.IO.Handle.Text.hPutStr2_entry


==================== Asm code ====================
2018-03-16 16:06:04.397214657 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr2_info
.type GHC.IO.Handle.Text.hPutStr2_info, @object
GHC.IO.Handle.Text.hPutStr2_info:
	.quad	GHC.IO.Handle.Text.hPutStr2_entry
	.quad	0
	.quad	30064771086
	.quad	8589934597
	.quad	Sb7vQ_srt+568


==================== Asm code ====================
2018-03-16 16:06:04.398455533 UTC

.section .text
.align 8
_cbbEh:
_cbbEh:
	movq $block_cbbEm_info,-24(%rbp)
	movq 71(%rbx),%rax
	movq 79(%rbx),%rcx
	movq 119(%rbx),%rdx
	movq 55(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbbEm
_cbbEn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbEh, .-_cbbEh


==================== Asm code ====================
2018-03-16 16:06:04.399106598 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbEh_info:
	.quad	_cbbEh
	.quad	0
	.quad	21474836510
	.quad	Sb7vQ_srt+568


==================== Asm code ====================
2018-03-16 16:06:04.399953422 UTC

.section .text
.align 8
_cbbEm:
_cbbEm:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbbFM
_cbbF4:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	movq 24(%rbp),%rcx
	movq 8(%rcx),%rcx
	movq $block_cbbEr_info,-8(%rbp)
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rcx,(%rbp)
	movq %rdx,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbbEr
_cbbEs:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbFP:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_cbbFM:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbbFP
_cbbFO:
	movq $(,)_con_info,-16(%r12)
	movq $GHC.IO.Handle.Text.hPutStr3_closure+1,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbbEm, .-_cbbEm


==================== Asm code ====================
2018-03-16 16:06:04.400669683 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbEm_info:
	.quad	_cbbEm
	.quad	3
	.quad	21474836510
	.quad	Sb7vQ_srt+568


==================== Asm code ====================
2018-03-16 16:06:04.401665901 UTC

.section .text
.align 8
_cbbEr:
_cbbEr:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbbF9
_cbbFF:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cbbFI
_cbbFH:
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 6(%rbx),%rdi
	movq 14(%rbx),%rbx
	movq %rbx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rsi,%r8
	movq %rcx,%rsi
	movq %rdi,%rcx
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rdx,%r14
	movq %r8,72(%rsp)
	movq %rcx,80(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $sat_sb7s6_info,-72(%r12)
	movq %rbx,-56(%r12)
	movq 72(%rsp),%rax
	movq %rax,-48(%r12)
	movq $(,)_con_info,-40(%r12)
	movq 64(%rsp),%rax
	movq %rax,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbbFI:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
_cbbF9:
	movq $block_cbbF6_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbbF6
_cbbFa:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbEr, .-_cbbEr


==================== Asm code ====================
2018-03-16 16:06:04.402505188 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbEr_info:
	.quad	_cbbEr
	.quad	4
	.quad	4294967326
	.quad	Sb7vQ_srt+568


==================== Asm code ====================
2018-03-16 16:06:04.403251429 UTC

.section .text
.align 8
_cbbF6:
_cbbF6:
	movq 31(%rbx),%rax
	movq %rax,%rbx
	shlq $2,%rbx
	testq %rbx,%rbx
	jge _cbbFx
_cbbFC:
	movl $GHC.ForeignPtr.mallocForeignPtrBytes2_closure,%ebx
	addq $24,%rbp
	jmp stg_ap_0_fast
_cbbFx:
	movq $block_cbbFl_info,-16(%rbp)
	movq %rbx,%rcx
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp stg_newMutVar#
	.size _cbbF6, .-_cbbF6


==================== Asm code ====================
2018-03-16 16:06:04.403882915 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbF6_info:
	.quad	_cbbF6
	.quad	2
	.quad	4294967326
	.quad	Sb7vQ_srt+568


==================== Asm code ====================
2018-03-16 16:06:04.404489082 UTC

.section .text
.align 8
_cbbFl:
_cbbFl:
	movq $block_cbbFn_info,(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_newPinnedByteArray#
	.size _cbbFl, .-_cbbFl


==================== Asm code ====================
2018-03-16 16:06:04.405112246 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbFl_info:
	.quad	_cbbFl
	.quad	196
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.405978315 UTC

.section .text
.align 8
_cbbFn:
_cbbFn:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _cbbFB
_cbbFA:
	movq $GHC.ForeignPtr.MallocPtr_con_info,-120(%r12)
	movq %rbx,-112(%r12)
	movq 8(%rbp),%rax
	movq %rax,-104(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-96(%r12)
	leaq -118(%r12),%rax
	movq %rax,-88(%r12)
	movq $GHC.IO.Buffer.WriteBuffer_closure+2,-80(%r12)
	leaq 16(%rbx),%rax
	movq %rax,-72(%r12)
	movq 16(%rbp),%rax
	movq %rax,-64(%r12)
	movq $0,-56(%r12)
	movq $0,-48(%r12)
	movq $(,)_con_info,-40(%r12)
	movq 32(%rbp),%rax
	movq %rax,-32(%r12)
	leaq -95(%r12),%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbbFB:
	movq $128,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbbFn, .-_cbbFn


==================== Asm code ====================
2018-03-16 16:06:04.406757757 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbFn_info:
	.quad	_cbbFn
	.quad	132
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.408485455 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.hPutStr6_bytes
.type GHC.IO.Handle.Text.hPutStr6_bytes, @object
GHC.IO.Handle.Text.hPutStr6_bytes:
	.asciz "hPutStr"


==================== Asm code ====================
2018-03-16 16:06:04.411364222 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr5_closure
.type GHC.IO.Handle.Text.hPutStr5_closure, @object
GHC.IO.Handle.Text.hPutStr5_closure:
	.quad	GHC.IO.Handle.Text.hPutStr5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.41216158 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutStr5_entry
.type GHC.IO.Handle.Text.hPutStr5_entry, @object
GHC.IO.Handle.Text.hPutStr5_entry:
_cbbH4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbH5
_cbbH6:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbbH3
_cbbH2:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Text.hPutStr6_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbbH5:
	jmp *-16(%r13)
_cbbH3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.hPutStr5_entry, .-GHC.IO.Handle.Text.hPutStr5_entry


==================== Asm code ====================
2018-03-16 16:06:04.412820562 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr5_info
.type GHC.IO.Handle.Text.hPutStr5_info, @object
GHC.IO.Handle.Text.hPutStr5_info:
	.quad	GHC.IO.Handle.Text.hPutStr5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:04.422939531 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr1_closure
.type GHC.IO.Handle.Text.hPutStr1_closure, @object
GHC.IO.Handle.Text.hPutStr1_closure:
	.quad	GHC.IO.Handle.Text.hPutStr1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.424183991 UTC

.section .data.rel.ro
.align 8
.align 1
ubbJ5_srtd:
	.quad	Sb7vQ_srt+16
	.quad	74
	.quad	19
	.quad	836


==================== Asm code ====================
2018-03-16 16:06:04.425047042 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutStr1_entry
.type GHC.IO.Handle.Text.hPutStr1_entry, @object
GHC.IO.Handle.Text.hPutStr1_entry:
_cbbHr:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbHs
_cbbHt:
	movq $block_cbbHk_info,-32(%rbp)
	movq %r14,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbbHk
_cbbHl:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbHs:
	movl $GHC.IO.Handle.Text.hPutStr1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hPutStr1_entry, .-GHC.IO.Handle.Text.hPutStr1_entry


==================== Asm code ====================
2018-03-16 16:06:04.425729938 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr1_info
.type GHC.IO.Handle.Text.hPutStr1_info, @object
GHC.IO.Handle.Text.hPutStr1_info:
	.quad	GHC.IO.Handle.Text.hPutStr1_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869207
	.quad	ubbJ5_srtd


==================== Asm code ====================
2018-03-16 16:06:04.426280901 UTC

.section .data.rel.ro
.align 8
.align 1
ubbJ6_srtd:
	.quad	Sb7vQ_srt+16
	.quad	74
	.quad	19
	.quad	580


==================== Asm code ====================
2018-03-16 16:06:04.426982875 UTC

.section .text
.align 8
_cbbHk:
_cbbHk:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbbHo
_cbbHp:
	movq $block_cbbIz_info,(%rbp)
	movl $GHC.IO.Handle.Text.hPutStr2_closure+2,%r8d
	movq 22(%rbx),%rdi
	movq %rbx,%rsi
	movl $GHC.IO.Handle.Text.hPutStr5_closure,%r14d
	jmp GHC.IO.Handle.Internals.$wwantWritableHandle'_entry
_cbbHo:
	movq $block_cbbIh_info,(%rbp)
	movl $GHC.IO.Handle.Text.hPutStr2_closure+2,%r8d
	movq 15(%rbx),%rdi
	movq %rbx,%rsi
	movl $GHC.IO.Handle.Text.hPutStr5_closure,%r14d
	jmp GHC.IO.Handle.Internals.$wwantWritableHandle'_entry
	.size _cbbHk, .-_cbbHk


==================== Asm code ====================
2018-03-16 16:06:04.427627547 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbHk_info:
	.quad	_cbbHk
	.quad	3
	.quad	-4294967266
	.quad	ubbJ6_srtd


==================== Asm code ====================
2018-03-16 16:06:04.428198012 UTC

.section .data.rel.ro
.align 8
.align 1
ubbJ7_srtd:
	.quad	Sb7vQ_srt+24
	.quad	66
	.quad	9
	.quad	2


==================== Asm code ====================
2018-03-16 16:06:04.428818906 UTC

.section .text
.align 8
_cbbIh:
_cbbIh:
	movq $block_cbbIj_info,(%rbp)
	testb $7,%bl
	jne _cbbIj
_cbbIk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbIh, .-_cbbIh


==================== Asm code ====================
2018-03-16 16:06:04.42939975 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbIh_info:
	.quad	_cbbIh
	.quad	3
	.quad	-4294967266
	.quad	ubbJ7_srtd


==================== Asm code ====================
2018-03-16 16:06:04.429922852 UTC

.section .data.rel.ro
.align 8
.align 1
ubbJ8_srtd:
	.quad	Sb7vQ_srt+24
	.quad	66
	.quad	9
	.quad	2


==================== Asm code ====================
2018-03-16 16:06:04.430625841 UTC

.section .text
.align 8
_cbbIj:
_cbbIj:
	movq $block_cbbIo_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbbIo
_cbbIs:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbIj, .-_cbbIj


==================== Asm code ====================
2018-03-16 16:06:04.431230298 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbIj_info:
	.quad	_cbbIj
	.quad	3
	.quad	-4294967266
	.quad	ubbJ8_srtd


==================== Asm code ====================
2018-03-16 16:06:04.431757166 UTC

.section .data.rel.ro
.align 8
.align 1
ubbJ9_srtd:
	.quad	Sb7vQ_srt+24
	.quad	66
	.quad	9
	.quad	2


==================== Asm code ====================
2018-03-16 16:06:04.43240146 UTC

.section .text
.align 8
_cbbIo:
_cbbIo:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	movq %rcx,8(%rbp)
	movq 15(%rbx),%rbx
	movq %rbx,(%rbp)
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp _sb7se
	.size _cbbIo, .-_cbbIo


==================== Asm code ====================
2018-03-16 16:06:04.432978499 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbIo_info:
	.quad	_cbbIo
	.quad	4
	.quad	-4294967266
	.quad	ubbJ9_srtd


==================== Asm code ====================
2018-03-16 16:06:04.433699261 UTC

.section .data.rel.ro
.align 8
.align 1
ubbJa_srtd:
	.quad	Sb7vQ_srt+24
	.quad	66
	.quad	9
	.quad	2


==================== Asm code ====================
2018-03-16 16:06:04.43436427 UTC

.section .text
.align 8
_cbbIz:
_cbbIz:
	movq $block_cbbIB_info,(%rbp)
	testb $7,%bl
	jne _cbbIB
_cbbIC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbIz, .-_cbbIz


==================== Asm code ====================
2018-03-16 16:06:04.434930842 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbIz_info:
	.quad	_cbbIz
	.quad	3
	.quad	-4294967266
	.quad	ubbJa_srtd


==================== Asm code ====================
2018-03-16 16:06:04.435469985 UTC

.section .data.rel.ro
.align 8
.align 1
ubbJb_srtd:
	.quad	Sb7vQ_srt+24
	.quad	66
	.quad	9
	.quad	2


==================== Asm code ====================
2018-03-16 16:06:04.436107025 UTC

.section .text
.align 8
_cbbIB:
_cbbIB:
	movq $block_cbbIG_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbbIG
_cbbIK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbIB, .-_cbbIB


==================== Asm code ====================
2018-03-16 16:06:04.436719655 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbIB_info:
	.quad	_cbbIB
	.quad	3
	.quad	-4294967266
	.quad	ubbJb_srtd


==================== Asm code ====================
2018-03-16 16:06:04.437301587 UTC

.section .data.rel.ro
.align 8
.align 1
ubbJc_srtd:
	.quad	Sb7vQ_srt+24
	.quad	66
	.quad	9
	.quad	2


==================== Asm code ====================
2018-03-16 16:06:04.437879903 UTC

.section .text
.align 8
_cbbIG:
_cbbIG:
	movq 8(%rbp),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp _sb7se
	.size _cbbIG, .-_cbbIG


==================== Asm code ====================
2018-03-16 16:06:04.438471115 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbIG_info:
	.quad	_cbbIG
	.quad	4
	.quad	-4294967266
	.quad	ubbJc_srtd


==================== Asm code ====================
2018-03-16 16:06:04.439159075 UTC

.section .text
.align 8
_sb7se:
_sb7se:
	movq $block_cbbHx_info,-8(%rbp)
	movq 16(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbbHx
_cbbHz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sb7se, .-_sb7se


==================== Asm code ====================
2018-03-16 16:06:04.43974409 UTC

.section .data.rel.ro
.align 8
.align 1
ubbJd_srtd:
	.quad	Sb7vQ_srt+24
	.quad	66
	.quad	9
	.quad	2


==================== Asm code ====================
2018-03-16 16:06:04.440575456 UTC

.section .text
.align 8
_cbbHx:
_cbbHx:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ubbIR
_cbbI9:
	movq $block_cbbI7_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbbI7
_cbbIa:
	movq (%rbx),%rax
	jmp *(%rax)
_ubbIR:
	cmpq $2,%rbx
	jb _cbbHI
_cbbHZ:
	movq $block_cbbHX_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbbHX
_cbbI0:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbHI:
	movq $block_cbbHD_info,24(%rbp)
	movq 40(%rbp),%rsi
	movq 32(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Text.hPutStr7_entry
	.size _cbbHx, .-_cbbHx


==================== Asm code ====================
2018-03-16 16:06:04.441293336 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbHx_info:
	.quad	_cbbHx
	.quad	262
	.quad	-4294967266
	.quad	ubbJd_srtd


==================== Asm code ====================
2018-03-16 16:06:04.441961543 UTC

.section .text
.align 8
_cbbHD:
_cbbHD:
	movq $block_cbbHF_info,(%rbp)
	movq 24(%rbp),%rbx
	testb $7,%bl
	jne _cbbHF
_cbbHK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbHD, .-_cbbHD


==================== Asm code ====================
2018-03-16 16:06:04.442560835 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbHD_info:
	.quad	_cbbHD
	.quad	131
	.quad	4294967326
	.quad	Sb7vQ_srt+608


==================== Asm code ====================
2018-03-16 16:06:04.44324443 UTC

.section .text
.align 8
_cbbHF:
_cbbHF:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbbHQ
_cbbHU:
	movl $10,%esi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Text.$whPutChar_entry
_cbbHQ:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbbHF, .-_cbbHF


==================== Asm code ====================
2018-03-16 16:06:04.44384076 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbHF_info:
	.quad	_cbbHF
	.quad	387
	.quad	4294967326
	.quad	Sb7vQ_srt+608


==================== Asm code ====================
2018-03-16 16:06:04.444499701 UTC

.section .text
.align 8
_cbbHX:
_cbbHX:
	movq 23(%rbx),%r9
	movq 8(%rbp),%r8
	movq 48(%rbp),%rdi
	movl $GHC.Types.True_closure+2,%esi
	movq 32(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 40(%rbp),%rax
	movq 31(%rbx),%rbx
	movq %rbx,40(%rbp)
	movq %rax,48(%rbp)
	addq $32,%rbp
	jmp GHC.IO.Handle.Text.$wwriteBlocks_entry
	.size _cbbHX, .-_cbbHX


==================== Asm code ====================
2018-03-16 16:06:04.445090681 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbHX_info:
	.quad	_cbbHX
	.quad	390
	.quad	4294967326
	.quad	Sb7vQ_srt+544


==================== Asm code ====================
2018-03-16 16:06:04.445779917 UTC

.section .text
.align 8
_cbbI7:
_cbbI7:
	movq 23(%rbx),%r9
	movq 8(%rbp),%r8
	movq 48(%rbp),%rdi
	movl $GHC.Types.False_closure+1,%esi
	movq 32(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 40(%rbp),%rax
	movq 31(%rbx),%rbx
	movq %rbx,40(%rbp)
	movq %rax,48(%rbp)
	addq $32,%rbp
	jmp GHC.IO.Handle.Text.$wwriteBlocks_entry
	.size _cbbI7, .-_cbbI7


==================== Asm code ====================
2018-03-16 16:06:04.446371167 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbI7_info:
	.quad	_cbbI7
	.quad	390
	.quad	4294967326
	.quad	Sb7vQ_srt+544


==================== Asm code ====================
2018-03-16 16:06:04.448672818 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr'_closure
.type GHC.IO.Handle.Text.hPutStr'_closure, @object
GHC.IO.Handle.Text.hPutStr'_closure:
	.quad	GHC.IO.Handle.Text.hPutStr'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.449645421 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutStr'_entry
.type GHC.IO.Handle.Text.hPutStr'_entry, @object
GHC.IO.Handle.Text.hPutStr'_entry:
_cbbKw:
	jmp GHC.IO.Handle.Text.hPutStr1_entry
	.size GHC.IO.Handle.Text.hPutStr'_entry, .-GHC.IO.Handle.Text.hPutStr'_entry


==================== Asm code ====================
2018-03-16 16:06:04.450212647 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr'_info
.type GHC.IO.Handle.Text.hPutStr'_info, @object
GHC.IO.Handle.Text.hPutStr'_info:
	.quad	GHC.IO.Handle.Text.hPutStr'_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	Sb7vQ_srt+592


==================== Asm code ====================
2018-03-16 16:06:04.452864939 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr_closure
.type GHC.IO.Handle.Text.hPutStr_closure, @object
GHC.IO.Handle.Text.hPutStr_closure:
	.quad	GHC.IO.Handle.Text.hPutStr_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.45351239 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutStr_entry
.type GHC.IO.Handle.Text.hPutStr_entry, @object
GHC.IO.Handle.Text.hPutStr_entry:
_cbbKH:
	movl $GHC.Types.False_closure+1,%edi
	jmp GHC.IO.Handle.Text.hPutStr'_entry
	.size GHC.IO.Handle.Text.hPutStr_entry, .-GHC.IO.Handle.Text.hPutStr_entry


==================== Asm code ====================
2018-03-16 16:06:04.454091388 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr_info
.type GHC.IO.Handle.Text.hPutStr_info, @object
GHC.IO.Handle.Text.hPutStr_info:
	.quad	GHC.IO.Handle.Text.hPutStr_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	Sb7vQ_srt+616


==================== Asm code ====================
2018-03-16 16:06:04.456150991 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStrLn_closure
.type GHC.IO.Handle.Text.hPutStrLn_closure, @object
GHC.IO.Handle.Text.hPutStrLn_closure:
	.quad	GHC.IO.Handle.Text.hPutStrLn_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.456761854 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutStrLn_entry
.type GHC.IO.Handle.Text.hPutStrLn_entry, @object
GHC.IO.Handle.Text.hPutStrLn_entry:
_cbbKS:
	movl $GHC.Types.True_closure+2,%edi
	jmp GHC.IO.Handle.Text.hPutStr'_entry
	.size GHC.IO.Handle.Text.hPutStrLn_entry, .-GHC.IO.Handle.Text.hPutStrLn_entry


==================== Asm code ====================
2018-03-16 16:06:04.457375056 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStrLn_info
.type GHC.IO.Handle.Text.hPutStrLn_info, @object
GHC.IO.Handle.Text.hPutStrLn_info:
	.quad	GHC.IO.Handle.Text.hPutStrLn_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	Sb7vQ_srt+616


==================== Asm code ====================
2018-03-16 16:06:04.459061666 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.hWaitForInput3_bytes
.type GHC.IO.Handle.Text.hWaitForInput3_bytes, @object
GHC.IO.Handle.Text.hWaitForInput3_bytes:
	.asciz "hWaitForInput"


==================== Asm code ====================
2018-03-16 16:06:04.46205941 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hWaitForInput2_closure
.type GHC.IO.Handle.Text.hWaitForInput2_closure, @object
GHC.IO.Handle.Text.hWaitForInput2_closure:
	.quad	GHC.IO.Handle.Text.hWaitForInput2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.462889687 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hWaitForInput2_entry
.type GHC.IO.Handle.Text.hWaitForInput2_entry, @object
GHC.IO.Handle.Text.hWaitForInput2_entry:
_cbbL6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbL7
_cbbL8:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbbL5
_cbbL4:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.Text.hWaitForInput3_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbbL7:
	jmp *-16(%r13)
_cbbL5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.hWaitForInput2_entry, .-GHC.IO.Handle.Text.hWaitForInput2_entry


==================== Asm code ====================
2018-03-16 16:06:04.463597842 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hWaitForInput2_info
.type GHC.IO.Handle.Text.hWaitForInput2_info, @object
GHC.IO.Handle.Text.hWaitForInput2_info:
	.quad	GHC.IO.Handle.Text.hWaitForInput2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:04.480749949 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hWaitForInput1_closure
.type GHC.IO.Handle.Text.hWaitForInput1_closure, @object
GHC.IO.Handle.Text.hWaitForInput1_closure:
	.quad	GHC.IO.Handle.Text.hWaitForInput1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.481620524 UTC

.section .text
.align 8
lvl34_sb7t8_entry:
_cbbLr:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbLs
_cbbLt:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbbLo_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbbLo
_cbbLp:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbLs:
	jmp *-16(%r13)
	.size lvl34_sb7t8_entry, .-lvl34_sb7t8_entry


==================== Asm code ====================
2018-03-16 16:06:04.482263282 UTC

.section .data.rel.ro
.align 8
.align 1
lvl34_sb7t8_info:
	.quad	lvl34_sb7t8_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:04.482934236 UTC

.section .text
.align 8
_cbbLo:
_cbbLo:
	cmpq $0,7(%rbx)
	setl %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbbLo, .-_cbbLo


==================== Asm code ====================
2018-03-16 16:06:04.483527165 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbLo_info:
	.quad	_cbbLo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.484280103 UTC

.section .text
.align 8
sat_sb7v9_entry:
_cbbLH:
	leaq -96(%rbp),%rax
	cmpq %r15,%rax
	jb _cbbLL
_cbbLM:
	movq $block_cbbLE_info,-24(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbbLE
_cbbLF:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbLL:
	jmp *-8(%r13)
	.size sat_sb7v9_entry, .-sat_sb7v9_entry


==================== Asm code ====================
2018-03-16 16:06:04.484924426 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sb7v9_info:
	.quad	sat_sb7v9_entry
	.quad	2
	.quad	12884901899
	.quad	8589934597
	.quad	Sb7vQ_srt+624


==================== Asm code ====================
2018-03-16 16:06:04.485682434 UTC

.section .text
.align 8
_cbbLE:
_cbbLE:
	movq $block_cbbLK_info,-56(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 63(%rbx),%rdi
	movq 71(%rbx),%r8
	movq 95(%rbx),%rbx
	movq %rbx,%r9
	movq 8(%r8),%rbx
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rax,(%rbp)
	addq $-56,%rbp
	testb $7,%bl
	jne _cbbLK
_cbbLO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbLE, .-_cbbLE


==================== Asm code ====================
2018-03-16 16:06:04.486334577 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbLE_info:
	.quad	_cbbLE
	.quad	2
	.quad	12884901918
	.quad	Sb7vQ_srt+624


==================== Asm code ====================
2018-03-16 16:06:04.487097615 UTC

.section .text
.align 8
_cbbLK:
_cbbLK:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cbbM0
_ubbOo:
	addq $80,%rbp
	jmp _cbbMm
_cbbM0:
	movq $block_cbbLZ_info,(%rbp)
	movq %rbx,%rax
	movq 72(%rbp),%rbx
	movq %rax,72(%rbp)
	testb $7,%bl
	jne _cbbLZ
_cbbM1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbLK, .-_cbbLK


==================== Asm code ====================
2018-03-16 16:06:04.487714943 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbLK_info:
	.quad	_cbbLK
	.quad	9
	.quad	12884901918
	.quad	Sb7vQ_srt+624


==================== Asm code ====================
2018-03-16 16:06:04.488520811 UTC

.section .text
.align 8
_cbbLZ:
_cbbLZ:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbbMW
_cbbO7:
	movq $block_cbbO5_info,32(%rbp)
	movq 72(%rbp),%rsi
	movq 56(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.hLookAhead_2_entry
_cbbMW:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbbM7_info,(%rbp)
	movq 48(%rbp),%rbx
	movq %rax,48(%rbp)
	testb $7,%bl
	jne _cbbM7
_cbbMX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbLZ, .-_cbbLZ


==================== Asm code ====================
2018-03-16 16:06:04.489210949 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbLZ_info:
	.quad	_cbbLZ
	.quad	9
	.quad	12884901918
	.quad	Sb7vQ_srt+624


==================== Asm code ====================
2018-03-16 16:06:04.490199481 UTC

.section .text
.align 8
_cbbM7:
_cbbM7:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbbNh
_cbbNR:
	movq $block_cbbNu_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbbNu
_cbbNv:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbNk:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_cbbNh:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbbNk
_cbbNj:
	movq $(,)_con_info,-16(%r12)
	movq $GHC.IO.Handle.Internals.decodeByteBuf2_closure,-8(%r12)
	movq 48(%rbp),%rax
	movq %rax,(%r12)
	movq 32(%rbp),%rbx
	movq 72(%rbp),%rcx
	leaq -15(%r12),%rdx
	movq %rdx,8(%rbx)
	subq $8,%rsp
	movq %r13,%rdx
	movq %rbx,%rsi
	movq %rdx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cbbN5_info,(%rbp)
	movq %r14,%rsi
	movq %rbx,%r14
	jmp GHC.IO.Encoding.Latin1.latin5_entry
	.size _cbbM7, .-_cbbM7


==================== Asm code ====================
2018-03-16 16:06:04.490958536 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbM7_info:
	.quad	_cbbM7
	.quad	9
	.quad	12884901918
	.quad	Sb7vQ_srt+624


==================== Asm code ====================
2018-03-16 16:06:04.491619403 UTC

.section .text
.align 8
_cbbN5:
_cbbN5:
	movq $block_cbbN7_info,(%rbp)
	testb $7,%bl
	jne _cbbN7
_cbbN8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbN5, .-_cbbN5


==================== Asm code ====================
2018-03-16 16:06:04.492195241 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbN5_info:
	.quad	_cbbN5
	.quad	18953
	.quad	4294967326
	.quad	Sb7vQ_srt+632


==================== Asm code ====================
2018-03-16 16:06:04.492973399 UTC

.section .text
.align 8
_cbbN7:
_cbbN7:
	movq 24(%rbp),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rax,%rsi
	movq %rcx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cbbNf_info,(%rbp)
	testb $7,%bl
	jne _cbbNf
_cbbNn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbN7, .-_cbbN7


==================== Asm code ====================
2018-03-16 16:06:04.493656403 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbN7_info:
	.quad	_cbbN7
	.quad	18953
	.quad	4294967326
	.quad	Sb7vQ_srt+632


==================== Asm code ====================
2018-03-16 16:06:04.494337926 UTC

.section .text
.align 8
_cbbNf:
_cbbNf:
	movq 23(%rbx),%rax
	movq %rax,72(%rbp)
	movq 7(%rbx),%rax
	movq %rax,48(%rbp)
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	movq 31(%rbx),%rax
	movq %rax,24(%rbp)
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp _cbbM9
	.size _cbbNf, .-_cbbNf


==================== Asm code ====================
2018-03-16 16:06:04.494993712 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbNf_info:
	.quad	_cbbNf
	.quad	19209
	.quad	4294967326
	.quad	Sb7vQ_srt+632


==================== Asm code ====================
2018-03-16 16:06:04.495653053 UTC

.section .text
.align 8
_cbbNu:
_cbbNu:
	movq $block_cbbNz_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp stg_ap_v_fast
	.size _cbbNu, .-_cbbNu


==================== Asm code ====================
2018-03-16 16:06:04.496218265 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbNu_info:
	.quad	_cbbNu
	.quad	9
	.quad	4294967326
	.quad	Sb7vQ_srt+632


==================== Asm code ====================
2018-03-16 16:06:04.497044926 UTC

.section .text
.align 8
_cbbNz:
_cbbNz:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbbNV
_cbbNU:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 64(%rbp),%rax
	movq %rax,(%r12)
	movq 48(%rbp),%rbx
	movq 88(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq 8(%rbp),%rsi
	leaq -15(%r12),%rdi
	movq %rdi,8(%rbx)
	subq $8,%rsp
	movq %r13,%rdi
	movq %rsi,%r8
	movq %rbx,%rsi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cbbNF_info,16(%rbp)
	movq %r14,%r8
	movq %rbx,%rdi
	movq 72(%rsp),%rax
	movq %rax,%rsi
	movq 64(%rsp),%rax
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.Internals.$wstreamEncode_entry
_cbbNV:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbbNz, .-_cbbNz


==================== Asm code ====================
2018-03-16 16:06:04.498467298 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbNz_info:
	.quad	_cbbNz
	.quad	11
	.quad	4294967326
	.quad	Sb7vQ_srt+632


==================== Asm code ====================
2018-03-16 16:06:04.499218968 UTC

.section .text
.align 8
_cbbNF:
_cbbNF:
	movq $block_cbbNH_info,(%rbp)
	testb $7,%bl
	jne _cbbNH
_cbbNI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbNF, .-_cbbNF


==================== Asm code ====================
2018-03-16 16:06:04.499786133 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbNF_info:
	.quad	_cbbNF
	.quad	18953
	.quad	4294967326
	.quad	Sb7vQ_srt+632


==================== Asm code ====================
2018-03-16 16:06:04.500486891 UTC

.section .text
.align 8
_cbbNH:
_cbbNH:
	movq 24(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rax,%rsi
	movq %rcx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_cbbNP_info,(%rbp)
	testb $7,%bl
	jne _cbbNP
_cbbNY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbNH, .-_cbbNH


==================== Asm code ====================
2018-03-16 16:06:04.50109063 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbNH_info:
	.quad	_cbbNH
	.quad	18953
	.quad	4294967326
	.quad	Sb7vQ_srt+632


==================== Asm code ====================
2018-03-16 16:06:04.5020519 UTC

.section .text
.align 8
_cbbNP:
_cbbNP:
	movq 47(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 31(%rbx),%rax
	movq %rax,24(%rbp)
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	movq 7(%rbx),%rax
	movq %rax,48(%rbp)
	movq 23(%rbx),%rax
	movq %rax,72(%rbp)
	addq $-16,%rbp
	jmp _cbbM9
	.size _cbbNP, .-_cbbNP


==================== Asm code ====================
2018-03-16 16:06:04.502625641 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbNP_info:
	.quad	_cbbNP
	.quad	19209
	.quad	4294967326
	.quad	Sb7vQ_srt+632


==================== Asm code ====================
2018-03-16 16:06:04.503553434 UTC

.section .text
.align 8
_cbbM9:
_cbbM9:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbbMe
_cbbMd:
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	movq 64(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq 88(%rbp),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	movq 80(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 56(%rbp),%rdi
	leaq -47(%r12),%r8
	movq %r8,8(%rdi)
	subq $8,%rsp
	movq %r13,%r8
	movq %rsi,%r9
	movq %rdi,%rsi
	movq %r8,%rdi
	movq %rax,%r8
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r9,80(%rsp)
	movq %r8,88(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq 80(%rsp),%rax
	cmpq %rbx,%rax
	je _cbbMs
_ubbOr:
	addq $96,%rbp
	jmp _cbbMm
_cbbMs:
	movq $block_cbbMp_info,48(%rbp)
	movq %r14,%rbx
	movq 64(%rsp),%rax
	movq %rax,%r14
	movq $stg_ap_pppv_info,16(%rbp)
	movq 72(%rsp),%rax
	movq %rax,24(%rbp)
	movq $GHC.Types.False_closure+1,32(%rbp)
	movq %rbx,40(%rbp)
	addq $16,%rbp
	jmp GHC.IO.Device.ready_entry
_cbbMe:
	movq $56,904(%r13)
	movq $block_cbbM9_info,(%rbp)
	jmp stg_gc_noregs
	.size _cbbM9, .-_cbbM9


==================== Asm code ====================
2018-03-16 16:06:04.504401686 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbM9_info:
	.quad	_cbbM9
	.quad	66763
	.quad	4294967326
	.quad	Sb7vQ_srt+632


==================== Asm code ====================
2018-03-16 16:06:04.505019398 UTC

.section .text
.align 8
_cbbMp:
_cbbMp:
	movq $block_cbbMr_info,(%rbp)
	testb $7,%bl
	jne _cbbMr
_cbbMu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbbMp, .-_cbbMp


==================== Asm code ====================
2018-03-16 16:06:04.505631988 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbMp_info:
	.quad	_cbbMp
	.quad	1669
	.quad	4294967326
	.quad	Sb7vQ_srt+632


==================== Asm code ====================
2018-03-16 16:06:04.506344097 UTC

.section .text
.align 8
_cbbMr:
_cbbMr:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbbMA
_cbbMF:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbbMD_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbbMD
_cbbMG:
	movq (%rbx),%rax
	jmp *(%rax)
_cbbMA:
	movl $GHC.Types.False_closure+1,%ebx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbbMr, .-_cbbMr


==================== Asm code ====================
2018-03-16 16:06:04.506995648 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbMr_info:
	.quad	_cbbMr
	.quad	1669
	.quad	4294967326
	.quad	Sb7vQ_srt+632


==================== Asm code ====================
2018-03-16 16:06:04.507750364 UTC

.section .text
.align 8
_cbbMD:
_cbbMD:
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 39(%rbx),%rdx
	cmpq 47(%rbx),%rdx
	je _cbbMS
_cbbMO:
	movq 8(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Types.True_closure+2,%ebx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbbMS:
	movq $block_cbbMR_info,(%rbp)
	movq %rbx,%rsi
	movq 24(%rbp),%r14
	movq %rdx,24(%rbp)
	movq %rax,32(%rbp)
	movq %rcx,40(%rbp)
	jmp GHC.IO.Handle.Internals.hLookAhead_2_entry
	.size _cbbMD, .-_cbbMD


==================== Asm code ====================
2018-03-16 16:06:04.50841597 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbMD_info:
	.quad	_cbbMD
	.quad	1669
	.quad	4294967326
	.quad	Sb7vQ_srt+632


==================== Asm code ====================
2018-03-16 16:06:04.509140855 UTC

.section .text
.align 8
_cbbMR:
_cbbMR:
	movq 8(%rbp),%rax
	movq 40(%rbp),%rcx
	movq 32(%rbp),%rcx
	movq 24(%rbp),%rcx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Types.True_closure+2,%ebx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbbMR, .-_cbbMR


==================== Asm code ====================
2018-03-16 16:06:04.509775613 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbMR_info:
	.quad	_cbbMR
	.quad	1413
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.51045534 UTC

.section .text
.align 8
_cbbO5:
_cbbO5:
	movq 8(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	movl $GHC.Types.True_closure+2,%ebx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbbO5, .-_cbbO5


==================== Asm code ====================
2018-03-16 16:06:04.511058103 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbbO5_info:
	.quad	_cbbO5
	.quad	1925
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:04.511638197 UTC

.section .text
.align 8
_cbbMm:
_cbbMm:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbbMm, .-_cbbMm


==================== Asm code ====================
2018-03-16 16:06:04.512203766 UTC

.section .data.rel.ro
.align 8
.align 1
ubbOM_srtd:
	.quad	Sb7vQ_srt+96
	.quad	70
	.quad	1
	.quad	60


==================== Asm code ====================
2018-03-16 16:06:04.51294496 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hWaitForInput1_entry
.type GHC.IO.Handle.Text.hWaitForInput1_entry, @object
GHC.IO.Handle.Text.hWaitForInput1_entry:
_cbbOH:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbbOL
_cbbOK:
	movq $lvl34_sb7t8_info,-40(%r12)
	movq %rsi,-24(%r12)
	movq $sat_sb7v9_info,-16(%r12)
	movq %rsi,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rdi
	movq %r14,%rsi
	movl $GHC.IO.Handle.Text.hWaitForInput2_closure,%r14d
	jmp GHC.IO.Handle.Internals.wantReadableHandle_1_entry
_cbbOL:
	movq $48,904(%r13)
	movl $GHC.IO.Handle.Text.hWaitForInput1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hWaitForInput1_entry, .-GHC.IO.Handle.Text.hWaitForInput1_entry


==================== Asm code ====================
2018-03-16 16:06:04.513625988 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hWaitForInput1_info
.type GHC.IO.Handle.Text.hWaitForInput1_info, @object
GHC.IO.Handle.Text.hWaitForInput1_info:
	.quad	GHC.IO.Handle.Text.hWaitForInput1_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901903
	.quad	ubbOM_srtd


==================== Asm code ====================
2018-03-16 16:06:04.515948418 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hWaitForInput_closure
.type GHC.IO.Handle.Text.hWaitForInput_closure, @object
GHC.IO.Handle.Text.hWaitForInput_closure:
	.quad	GHC.IO.Handle.Text.hWaitForInput_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:04.516558069 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hWaitForInput_entry
.type GHC.IO.Handle.Text.hWaitForInput_entry, @object
GHC.IO.Handle.Text.hWaitForInput_entry:
_cbbQW:
	jmp GHC.IO.Handle.Text.hWaitForInput1_entry
	.size GHC.IO.Handle.Text.hWaitForInput_entry, .-GHC.IO.Handle.Text.hWaitForInput_entry


==================== Asm code ====================
2018-03-16 16:06:04.517141323 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hWaitForInput_info
.type GHC.IO.Handle.Text.hWaitForInput_info, @object
GHC.IO.Handle.Text.hWaitForInput_info:
	.quad	GHC.IO.Handle.Text.hWaitForInput_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	Sb7vQ_srt+640


==================== Asm code ====================
2018-03-16 16:06:04.52027525 UTC

.section .data.rel.ro
.align 8
.align 1
Sb7vQ_srt:
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	GHC.IO.Handle.Text.$willegalBufferSize_closure
	.quad	GHC.IO.Handle.Internals.$wwantWritableHandle'_closure
	.quad	GHC.IO.Handle.Text.$whPutChar_closure
	.quad	GHC.IO.Handle.Text.hPutChar2_closure
	.quad	GHC.IO.Handle.Text.hPutChar1_closure
	.quad	GHC.IO.Handle.Text.hPutStr7_closure
	.quad	Data.Typeable.Internal.sameTypeRep_closure
	.quad	GHC.IO.Exception.$fExceptionIOException4_closure
	.quad	GHC.IO.Handle.Text.hGetChar3_closure
	.quad	GHC.IO.Handle.Internals.hLookAhead_2_closure
	.quad	GHC.IO.Handle.Text.hGetChar2_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle_1_closure
	.quad	GHC.IO.Handle.Text.hGetChar6_closure
	.quad	GHC.IO.Handle.Text.hGetChar1_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_closure
	.quad	GHC.IO.Handle.Text.hGetContents3_closure
	.quad	$wlvl_rb6WI_closure
	.quad	lvl6_rb6WK_closure
	.quad	lvl7_rb6WL_closure
	.quad	lvl9_rb6WN_closure
	.quad	lvl10_rb6WO_closure
	.quad	lvl4_rb6WH_closure
	.quad	GHC.IO.Handle.Internals.hClose_help1_closure
	.quad	GHC.IO.Handle.Text.hGetContents2_closure
	.quad	GHC.IO.Handle.Internals.$wwithHandle'_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle1_closure
	.quad	GHC.IO.Handle.Text.hGetContents1_closure
	.quad	GHC.IO.Handle.Internals.ioe_EOF1_closure
	.quad	GHC.IO.Handle.Text.$whGetLineBufferedLoop_closure
	.quad	GHC.IO.Handle.Text.hGetLine3_closure
	.quad	GHC.IO.Handle.Text.hGetLine2_closure
	.quad	GHC.IO.Handle.Text.hGetLine4_closure
	.quad	GHC.IO.Handle.Text.hGetLine1_closure
	.quad	Data.Typeable.Internal.$wmkTrCon_closure
	.quad	GHC.IO.Handle.Text.$wbufReadNBEmpty_closure
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking2_closure
	.quad	GHC.IO.FD.$fBufferedIOFD8_closure
	.quad	GHC.IO.FD.$wreadRawBufferPtrNoBlock_closure
	.quad	lvl11_rb6WR_closure
	.quad	GHC.IO.Handle.Text.$whGetBufNonBlocking_closure
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking3_closure
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking1_closure
	.quad	GHC.IO.FD.$fBufferedIOFD12_closure
	.quad	GHC.IO.FD.$wreadRawBufferPtr_closure
	.quad	GHC.IO.Handle.Text.$whGetBufSome_closure
	.quad	lvl13_rb6WT_closure
	.quad	GHC.IO.Handle.Text.hGetBufSome1_closure
	.quad	GHC.IO.Handle.Text.hGetBuf2_closure
	.quad	GHC.IO.Handle.Text.hGetBuf4_closure
	.quad	GHC.IO.Handle.Text.$whGetBuf_closure
	.quad	GHC.IO.Handle.Text.hGetBuf5_closure
	.quad	GHC.IO.Handle.Text.hGetBuf1_closure
	.quad	GHC.Err.error_closure
	.quad	lvl24_rb6X4_closure
	.quad	lvl29_rb6X9_closure
	.quad	GHC.IO.FD.$w$cwriteNonBlocking_closure
	.quad	GHC.IO.FD.$wfdWrite_closure
	.quad	GHC.IO.Handle.Text.$wbufWrite_closure
	.quad	lvl26_rb6X6_closure
	.quad	lvl30_rb6Xa_closure
	.quad	GHC.IO.Handle.Text.$whPutBuf'_closure
	.quad	GHC.IO.Handle.Text.hPutBuf3_closure
	.quad	GHC.IO.Handle.Text.hPutBuf2_closure
	.quad	GHC.IO.Handle.Text.hPutBufNonBlocking1_closure
	.quad	GHC.IO.Handle.Text.hPutBuf1_closure
	.quad	lvl32_rb6Xc_closure
	.quad	GHC.IO.Handle.Internals.wantWritableHandle1_closure
	.quad	GHC.IO.Handle.Text.$wwriteBlocks_closure
	.quad	lvl2_rb6WE_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	GHC.ForeignPtr.mallocForeignPtrBytes2_closure
	.quad	GHC.IO.Handle.Text.hPutStr2_closure
	.quad	GHC.IO.Handle.Text.hPutStr3_closure
	.quad	GHC.IO.Handle.Text.hPutStr1_closure
	.quad	GHC.IO.Handle.Text.hPutStr5_closure
	.quad	GHC.IO.Handle.Text.$whPutChar_closure
	.quad	GHC.IO.Handle.Text.hPutStr'_closure
	.quad	GHC.IO.Handle.Internals.decodeByteBuf2_closure
	.quad	GHC.IO.Handle.Internals.hLookAhead_2_closure
	.quad	GHC.IO.Handle.Text.hWaitForInput1_closure
	.quad	GHC.IO.Handle.Text.hWaitForInput2_closure


==================== Asm code ====================
2018-03-16 16:06:10.49108897 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_rb6WB_bytes:
	.asciz "illegal buffer size "


==================== Asm code ====================
2018-03-16 16:06:10.496623888 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$willegalBufferSize_closure
.type GHC.IO.Handle.Text.$willegalBufferSize_closure, @object
GHC.IO.Handle.Text.$willegalBufferSize_closure:
	.quad	GHC.IO.Handle.Text.$willegalBufferSize_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.497474243 UTC

.section .text
.align 8
sat_sbbRc_entry:
_cbcpj:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcpk
_cbcpl:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbcpg_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 16(%rbx),%rsi
	movl $9,%r14d
	addq $-24,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
_cbcpk:
	jmp *-16(%r13)
	.size sat_sbbRc_entry, .-sat_sbbRc_entry


==================== Asm code ====================
2018-03-16 16:06:10.498141623 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbbRc_info:
	.quad	sat_sbbRc_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:06:10.498863316 UTC

.section .text
.align 8
_cbcpg:
_cbcpg:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbcpo
_cbcpn:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcpo:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cbcpg, .-_cbcpg


==================== Asm code ====================
2018-03-16 16:06:10.499485809 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcpg_info:
	.quad	_cbcpg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.500292477 UTC

.section .text
.align 8
sat_sbbRd_entry:
_cbcpp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcpq
_cbcpr:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbcpt
_cbcps:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq sat_sbbRc_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	leaq lvl_rb6WB_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_cbcpt:
	movq $24,904(%r13)
_cbcpq:
	jmp *-16(%r13)
	.size sat_sbbRd_entry, .-sat_sbbRd_entry


==================== Asm code ====================
2018-03-16 16:06:10.500972024 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbbRd_info:
	.quad	sat_sbbRd_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 16:06:10.50192724 UTC

.section .text
.align 8
sat_sbbRf_entry:
_cbcpw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcpx
_cbcpy:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cbcpA
_cbcpz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_sbbRd_info(%rip),%rdx
	movq %rdx,-88(%r12)
	movq %rbx,-72(%r12)
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq GHC.IO.Exception.IOError_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -62(%r12),%rax
	movq %rax,-40(%r12)
	movq GHC.IO.Exception.InvalidArgument_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	leaq -88(%r12),%rax
	movq %rax,-16(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cbcpA:
	movq $96,904(%r13)
_cbcpx:
	jmp *-16(%r13)
	.size sat_sbbRf_entry, .-sat_sbbRf_entry


==================== Asm code ====================
2018-03-16 16:06:10.502724537 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbbRf_info:
	.quad	sat_sbbRf_entry
	.quad	4294967298
	.quad	4294967311
	.quad	SbcpG_srt


==================== Asm code ====================
2018-03-16 16:06:10.503481988 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$willegalBufferSize_entry
.type GHC.IO.Handle.Text.$willegalBufferSize_entry, @object
GHC.IO.Handle.Text.$willegalBufferSize_entry:
_cbcpB:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbcpF
_cbcpE:
	leaq sat_sbbRf_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq -32(%r12),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
_cbcpF:
	movq $40,904(%r13)
	leaq GHC.IO.Handle.Text.$willegalBufferSize_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.$willegalBufferSize_entry, .-GHC.IO.Handle.Text.$willegalBufferSize_entry


==================== Asm code ====================
2018-03-16 16:06:10.504141297 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$willegalBufferSize_info
.type GHC.IO.Handle.Text.$willegalBufferSize_info, @object
GHC.IO.Handle.Text.$willegalBufferSize_info:
	.quad	GHC.IO.Handle.Text.$willegalBufferSize_entry
	.quad	0
	.quad	12884901902
	.quad	17179869206
	.quad	SbcpG_srt


==================== Asm code ====================
2018-03-16 16:06:10.505841585 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.$trModule4_bytes
.type GHC.IO.Handle.Text.$trModule4_bytes, @object
GHC.IO.Handle.Text.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:06:10.507564858 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$trModule3_closure
.type GHC.IO.Handle.Text.$trModule3_closure, @object
GHC.IO.Handle.Text.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Text.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:06:10.509235102 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.$trModule2_bytes
.type GHC.IO.Handle.Text.$trModule2_bytes, @object
GHC.IO.Handle.Text.$trModule2_bytes:
	.asciz "GHC.IO.Handle.Text"


==================== Asm code ====================
2018-03-16 16:06:10.510897404 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$trModule1_closure
.type GHC.IO.Handle.Text.$trModule1_closure, @object
GHC.IO.Handle.Text.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.Text.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:06:10.512662416 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$trModule_closure
.type GHC.IO.Handle.Text.$trModule_closure, @object
GHC.IO.Handle.Text.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.IO.Handle.Text.$trModule3_closure+1
	.quad	GHC.IO.Handle.Text.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:10.517309392 UTC

.section .data
.align 8
.align 1
memcpy1_rb6WC_closure:
	.quad	memcpy1_rb6WC_info


==================== Asm code ====================
2018-03-16 16:06:10.518146188 UTC

.section .text
.align 8
memcpy1_rb6WC_entry:
_cbcqw:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcqO
_cbcqP:
	leaq block_cbcqt_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbcqt
_cbcqu:
	movq (%rbx),%rax
	jmp *(%rax)
_cbcqO:
	leaq memcpy1_rb6WC_closure(%rip),%rbx
	jmp *-8(%r13)
	.size memcpy1_rb6WC_entry, .-memcpy1_rb6WC_entry


==================== Asm code ====================
2018-03-16 16:06:10.518853346 UTC

.section .data.rel.ro
.align 8
.align 1
memcpy1_rb6WC_info:
	.quad	memcpy1_rb6WC_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:06:10.519579621 UTC

.section .text
.align 8
_cbcqt:
_cbcqt:
	leaq block_cbcqz_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cbcqz
_cbcqA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcqt, .-_cbcqt


==================== Asm code ====================
2018-03-16 16:06:10.520191851 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcqt_info:
	.quad	_cbcqt
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.520911625 UTC

.section .text
.align 8
_cbcqz:
_cbcqz:
	leaq block_cbcqE_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cbcqE
_cbcqF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcqz, .-_cbcqz


==================== Asm code ====================
2018-03-16 16:06:10.521539331 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcqz_info:
	.quad	_cbcqz
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.523270899 UTC

.section .text
.align 8
_cbcqE:
_cbcqE:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbcqU
_cbcqT:
	subq $8,%rsp
	movq 8(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 7(%rbx),%rdx
	xorl %eax,%eax
	call memcpy@plt
	addq $8,%rsp
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcqU:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbcqE, .-_cbcqE


==================== Asm code ====================
2018-03-16 16:06:10.523951479 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcqE_info:
	.quad	_cbcqE
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.526200752 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.memcpy_closure
.type GHC.IO.Handle.Text.memcpy_closure, @object
GHC.IO.Handle.Text.memcpy_closure:
	.quad	GHC.IO.Handle.Text.memcpy_info


==================== Asm code ====================
2018-03-16 16:06:10.526777864 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.memcpy_entry
.type GHC.IO.Handle.Text.memcpy_entry, @object
GHC.IO.Handle.Text.memcpy_entry:
_cbcro:
	jmp memcpy1_rb6WC_entry
	.size GHC.IO.Handle.Text.memcpy_entry, .-GHC.IO.Handle.Text.memcpy_entry


==================== Asm code ====================
2018-03-16 16:06:10.527289714 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.memcpy_info
.type GHC.IO.Handle.Text.memcpy_info, @object
GHC.IO.Handle.Text.memcpy_info:
	.quad	GHC.IO.Handle.Text.memcpy_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:06:10.542111402 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$wcommitBuffer'_closure
.type GHC.IO.Handle.Text.$wcommitBuffer'_closure, @object
GHC.IO.Handle.Text.$wcommitBuffer'_closure:
	.quad	GHC.IO.Handle.Text.$wcommitBuffer'_info


==================== Asm code ====================
2018-03-16 16:06:10.542908564 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$wcommitBuffer'_slow
.type GHC.IO.Handle.Text.$wcommitBuffer'_slow, @object
GHC.IO.Handle.Text.$wcommitBuffer'_slow:
_cbcrw:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Text.$wcommitBuffer'_entry
	.size GHC.IO.Handle.Text.$wcommitBuffer'_slow, .-GHC.IO.Handle.Text.$wcommitBuffer'_slow


==================== Asm code ====================
2018-03-16 16:06:10.543814092 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$wcommitBuffer'_entry
.type GHC.IO.Handle.Text.$wcommitBuffer'_entry, @object
GHC.IO.Handle.Text.$wcommitBuffer'_entry:
_cbcrD:
	leaq -96(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcrE
_cbcrF:
	leaq block_cbcrA_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 8(%rbp),%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %r14,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbcrA
_cbcrB:
	movq (%rbx),%rax
	jmp *(%rax)
_cbcrE:
	leaq GHC.IO.Handle.Text.$wcommitBuffer'_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.$wcommitBuffer'_entry, .-GHC.IO.Handle.Text.$wcommitBuffer'_entry


==================== Asm code ====================
2018-03-16 16:06:10.544551349 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$wcommitBuffer'_info
.type GHC.IO.Handle.Text.$wcommitBuffer'_info, @object
GHC.IO.Handle.Text.$wcommitBuffer'_info:
	.quad	GHC.IO.Handle.Text.$wcommitBuffer'_entry
	.quad	0
	.quad	14
	.quad	34359738368
	.quad	0
	.quad	839
	.quad	GHC.IO.Handle.Text.$wcommitBuffer'_slow


==================== Asm code ====================
2018-03-16 16:06:10.545377262 UTC

.section .text
.align 8
_cbcrA:
_cbcrA:
	leaq block_cbcrI_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbp),%r9
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r8
	movq 8(%rbp),%rdi
	movq 48(%rbp),%rsi
	movq %rbx,%r14
	movq $0,-56(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-48(%rbp)
	movq 31(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 47(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 71(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 79(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	addq $-56,%rbp
	jmp *GHC.IO.Handle.Internals.$wwriteCharBuffer_entry@gotpcrel(%rip)
	.size _cbcrA, .-_cbcrA


==================== Asm code ====================
2018-03-16 16:06:10.54605108 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcrA_info:
	.quad	_cbcrA
	.quad	2438
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.546711864 UTC

.section .text
.align 8
_cbcrI:
_cbcrI:
	leaq block_cbcrK_info(%rip),%rax
	movq %rax,(%rbp)
	movq 72(%rbp),%rbx
	testb $7,%bl
	jne _cbcrK
_cbcrN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcrI, .-_cbcrI


==================== Asm code ====================
2018-03-16 16:06:10.547322824 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcrI_info:
	.quad	_cbcrI
	.quad	77835
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.548140926 UTC

.section .text
.align 8
_cbcrK:
_cbcrK:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbcrU
_cbcsz:
	movq 16(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbcsx_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbcsx
_cbcsA:
	movq (%rbx),%rax
	jmp *(%rax)
_cbcrU:
	leaq block_cbcrR_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 80(%rbp),%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbcrR
_cbcrV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcrK, .-_cbcrK


==================== Asm code ====================
2018-03-16 16:06:10.548838288 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcrK_info:
	.quad	_cbcrK
	.quad	94219
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.550167437 UTC

.section .text
.align 8
_cbcrR:
_cbcrR:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbcs1
_cbcs9:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbcs7_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cbcs7
_cbcsa:
	movq (%rbx),%rax
	jmp *(%rax)
_cbcs4:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbcs1:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbcs4
_cbcs3:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-32(%r12)
	movq 72(%rbp),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq 48(%rbp),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbcrR, .-_cbcrR


==================== Asm code ====================
2018-03-16 16:06:10.550963802 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcrR_info:
	.quad	_cbcrR
	.quad	32009
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.552054135 UTC

.section .text
.align 8
_cbcs7:
_cbcs7:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cbcsg
_cbcsf:
	movq 64(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 40(%rbp),%rsi
	cmpq 31(%rbx),%rdx
	je _cbcsu
_cbcsm:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-96(%r12)
	movq %rcx,-88(%r12)
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rbx
	addq $2,%rbx
	movq %rbx,-80(%r12)
	movq %rax,-72(%r12)
	movq %rdx,-64(%r12)
	movq $0,-56(%r12)
	movq %rsi,-48(%r12)
	leaq -95(%r12),%rax
	addq $-48,%r12
	movq %rax,%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcsu:
	movq 8(%rbp),%rbx
	movq 8(%rbx),%rdi
	movq GHC.ForeignPtr.ForeignPtr_con_info@gotpcrel(%rip),%r8
	movq %r8,-96(%r12)
	movq %rcx,-88(%r12)
	movq %rax,-80(%r12)
	movq GHC.IO.Handle.Types.BufferListCons_con_info@gotpcrel(%rip),%r8
	movq %r8,-72(%r12)
	leaq -95(%r12),%r8
	movq %r8,-64(%r12)
	movq %rdi,-56(%r12)
	leaq -70(%r12),%rdi
	movq %rdi,8(%rbx)
	subq $8,%rsp
	movq %r13,%rdi
	movq %rsi,%r8
	movq %rbx,%rsi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 64(%rsp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq 72(%rsp),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcsg:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbcs7, .-_cbcs7


==================== Asm code ====================
2018-03-16 16:06:10.553035145 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcs7_info:
	.quad	_cbcs7
	.quad	16008
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.553868996 UTC

.section .text
.align 8
_cbcsx:
_cbcsx:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cbctt
_cbcsP:
	movq 8(%rbp),%rax
	leaq block_cbcsI_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 40(%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.BufferedIO.flushWriteBuffer_entry@gotpcrel(%rip)
_cbctt:
	leaq block_cbcts_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 80(%rbp),%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbcts
_cbctu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcsx, .-_cbcsx


==================== Asm code ====================
2018-03-16 16:06:10.554588756 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcsx_info:
	.quad	_cbcsx
	.quad	94219
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.555450255 UTC

.section .text
.align 8
_cbcts:
_cbcts:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbctA
_cbctI:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbctG_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cbctG
_cbctJ:
	movq (%rbx),%rax
	jmp *(%rax)
_cbctD:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbctA:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbctD
_cbctC:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-32(%r12)
	movq 72(%rbp),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq 48(%rbp),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbcts, .-_cbcts


==================== Asm code ====================
2018-03-16 16:06:10.556217488 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcts_info:
	.quad	_cbcts
	.quad	32009
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.55732752 UTC

.section .text
.align 8
_cbctG:
_cbctG:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cbctP
_cbctO:
	movq 64(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 40(%rbp),%rsi
	cmpq 31(%rbx),%rdx
	je _cbcu3
_cbctV:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-96(%r12)
	movq %rcx,-88(%r12)
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rbx
	addq $2,%rbx
	movq %rbx,-80(%r12)
	movq %rax,-72(%r12)
	movq %rdx,-64(%r12)
	movq $0,-56(%r12)
	movq %rsi,-48(%r12)
	leaq -95(%r12),%rax
	addq $-48,%r12
	movq %rax,%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcu3:
	movq 8(%rbp),%rbx
	movq 8(%rbx),%rdi
	movq GHC.ForeignPtr.ForeignPtr_con_info@gotpcrel(%rip),%r8
	movq %r8,-96(%r12)
	movq %rcx,-88(%r12)
	movq %rax,-80(%r12)
	movq GHC.IO.Handle.Types.BufferListCons_con_info@gotpcrel(%rip),%r8
	movq %r8,-72(%r12)
	leaq -95(%r12),%r8
	movq %r8,-64(%r12)
	movq %rdi,-56(%r12)
	leaq -70(%r12),%rdi
	movq %rdi,8(%rbx)
	subq $8,%rsp
	movq %r13,%rdi
	movq %rsi,%r8
	movq %rbx,%rsi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 64(%rsp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq 72(%rsp),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbctP:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbctG, .-_cbctG


==================== Asm code ====================
2018-03-16 16:06:10.558272209 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbctG_info:
	.quad	_cbctG
	.quad	16008
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.559035927 UTC

.section .text
.align 8
_cbcsI:
_cbcsI:
	movq 72(%rbp),%rax
	movq 8(%rbp),%rcx
	movq %rbx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rcx,%rsi
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_cbcsN_info(%rip),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _cbcsN
_cbcsR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcsI, .-_cbcsI


==================== Asm code ====================
2018-03-16 16:06:10.559679993 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcsI_info:
	.quad	_cbcsI
	.quad	47626
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.560576952 UTC

.section .text
.align 8
_cbcsN:
_cbcsN:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbcsX
_cbct5:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbct3_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cbct3
_cbct6:
	movq (%rbx),%rax
	jmp *(%rax)
_cbct0:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbcsX:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbct0
_cbcsZ:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-32(%r12)
	movq 72(%rbp),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq 48(%rbp),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbcsN, .-_cbcsN


==================== Asm code ====================
2018-03-16 16:06:10.561407583 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcsN_info:
	.quad	_cbcsN
	.quad	32009
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.562452628 UTC

.section .text
.align 8
_cbct3:
_cbct3:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cbctc
_cbctb:
	movq 64(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 40(%rbp),%rsi
	cmpq 31(%rbx),%rdx
	je _cbctq
_cbcti:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-96(%r12)
	movq %rcx,-88(%r12)
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rbx
	addq $2,%rbx
	movq %rbx,-80(%r12)
	movq %rax,-72(%r12)
	movq %rdx,-64(%r12)
	movq $0,-56(%r12)
	movq %rsi,-48(%r12)
	leaq -95(%r12),%rax
	addq $-48,%r12
	movq %rax,%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbctq:
	movq 8(%rbp),%rbx
	movq 8(%rbx),%rdi
	movq GHC.ForeignPtr.ForeignPtr_con_info@gotpcrel(%rip),%r8
	movq %r8,-96(%r12)
	movq %rcx,-88(%r12)
	movq %rax,-80(%r12)
	movq GHC.IO.Handle.Types.BufferListCons_con_info@gotpcrel(%rip),%r8
	movq %r8,-72(%r12)
	leaq -95(%r12),%r8
	movq %r8,-64(%r12)
	movq %rdi,-56(%r12)
	leaq -70(%r12),%rdi
	movq %rdi,8(%rbx)
	subq $8,%rsp
	movq %r13,%rdi
	movq %rsi,%r8
	movq %rbx,%rsi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq %r14,-40(%r12)
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq 64(%rsp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq 72(%rsp),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbctc:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbct3, .-_cbct3


==================== Asm code ====================
2018-03-16 16:06:10.563360898 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbct3_info:
	.quad	_cbct3
	.quad	16008
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.567930393 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.commitBuffer'1_closure
.type GHC.IO.Handle.Text.commitBuffer'1_closure, @object
GHC.IO.Handle.Text.commitBuffer'1_closure:
	.quad	GHC.IO.Handle.Text.commitBuffer'1_info


==================== Asm code ====================
2018-03-16 16:06:10.568733561 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.commitBuffer'1_entry
.type GHC.IO.Handle.Text.commitBuffer'1_entry, @object
GHC.IO.Handle.Text.commitBuffer'1_entry:
_cbcwJ:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcwS
_cbcwT:
	leaq block_cbcwG_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r14,%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbcwG
_cbcwH:
	movq (%rbx),%rax
	jmp *(%rax)
_cbcwS:
	leaq GHC.IO.Handle.Text.commitBuffer'1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.commitBuffer'1_entry, .-GHC.IO.Handle.Text.commitBuffer'1_entry


==================== Asm code ====================
2018-03-16 16:06:10.5694806 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.commitBuffer'1_info
.type GHC.IO.Handle.Text.commitBuffer'1_info, @object
GHC.IO.Handle.Text.commitBuffer'1_info:
	.quad	GHC.IO.Handle.Text.commitBuffer'1_entry
	.quad	0
	.quad	14
	.quad	30064771098


==================== Asm code ====================
2018-03-16 16:06:10.570143037 UTC

.section .text
.align 8
_cbcwG:
_cbcwG:
	leaq block_cbcwM_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rax,(%rbp)
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbcwM
_cbcwN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcwG, .-_cbcwG


==================== Asm code ====================
2018-03-16 16:06:10.570786991 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcwG_info:
	.quad	_cbcwG
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.57199133 UTC

.section .text
.align 8
_cbcwM:
_cbcwM:
	leaq block_cbcwR_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _cbcwR
_cbcwW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcwM, .-_cbcwM


==================== Asm code ====================
2018-03-16 16:06:10.572593516 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcwM_info:
	.quad	_cbcwM
	.quad	134
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.573224903 UTC

.section .text
.align 8
_cbcwR:
_cbcwR:
	movq 32(%rbp),%r9
	movq 7(%rbx),%r8
	movq 24(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Text.$wcommitBuffer'_entry
	.size _cbcwR, .-_cbcwR


==================== Asm code ====================
2018-03-16 16:06:10.573830223 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcwR_info:
	.quad	_cbcwR
	.quad	390
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.576071697 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.commitBuffer'_closure
.type GHC.IO.Handle.Text.commitBuffer'_closure, @object
GHC.IO.Handle.Text.commitBuffer'_closure:
	.quad	GHC.IO.Handle.Text.commitBuffer'_info


==================== Asm code ====================
2018-03-16 16:06:10.576722106 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.commitBuffer'_entry
.type GHC.IO.Handle.Text.commitBuffer'_entry, @object
GHC.IO.Handle.Text.commitBuffer'_entry:
_cbcxs:
	jmp GHC.IO.Handle.Text.commitBuffer'1_entry
	.size GHC.IO.Handle.Text.commitBuffer'_entry, .-GHC.IO.Handle.Text.commitBuffer'_entry


==================== Asm code ====================
2018-03-16 16:06:10.577304157 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.commitBuffer'_info
.type GHC.IO.Handle.Text.commitBuffer'_info, @object
GHC.IO.Handle.Text.commitBuffer'_info:
	.quad	GHC.IO.Handle.Text.commitBuffer'_entry
	.quad	0
	.quad	14
	.quad	30064771098


==================== Asm code ====================
2018-03-16 16:06:10.578980214 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl1_rb6WD_bytes:
	.asciz "commitBuffer"


==================== Asm code ====================
2018-03-16 16:06:10.581888222 UTC

.section .data
.align 8
.align 1
lvl2_rb6WE_closure:
	.quad	lvl2_rb6WE_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.582730644 UTC

.section .text
.align 8
lvl2_rb6WE_entry:
_cbcxG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcxH
_cbcxI:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbcxF
_cbcxE:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl1_rb6WD_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbcxH:
	jmp *-16(%r13)
_cbcxF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl2_rb6WE_entry, .-lvl2_rb6WE_entry


==================== Asm code ====================
2018-03-16 16:06:10.583421719 UTC

.section .data.rel.ro
.align 8
.align 1
lvl2_rb6WE_info:
	.quad	lvl2_rb6WE_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:10.585038232 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.hPutChar3_bytes
.type GHC.IO.Handle.Text.hPutChar3_bytes, @object
GHC.IO.Handle.Text.hPutChar3_bytes:
	.asciz "hPutChar"


==================== Asm code ====================
2018-03-16 16:06:10.587497845 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutChar2_closure
.type GHC.IO.Handle.Text.hPutChar2_closure, @object
GHC.IO.Handle.Text.hPutChar2_closure:
	.quad	GHC.IO.Handle.Text.hPutChar2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.588313688 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutChar2_entry
.type GHC.IO.Handle.Text.hPutChar2_entry, @object
GHC.IO.Handle.Text.hPutChar2_entry:
_cbcxY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcxZ
_cbcy0:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbcxX
_cbcxW:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Text.hPutChar3_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbcxZ:
	jmp *-16(%r13)
_cbcxX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.hPutChar2_entry, .-GHC.IO.Handle.Text.hPutChar2_entry


==================== Asm code ====================
2018-03-16 16:06:10.588990836 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutChar2_info
.type GHC.IO.Handle.Text.hPutChar2_info, @object
GHC.IO.Handle.Text.hPutChar2_info:
	.quad	GHC.IO.Handle.Text.hPutChar2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:10.600637532 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whPutChar_closure
.type GHC.IO.Handle.Text.$whPutChar_closure, @object
GHC.IO.Handle.Text.$whPutChar_closure:
	.quad	GHC.IO.Handle.Text.$whPutChar_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.601486254 UTC

.section .text
.align 8
act_sbbTv_entry:
_cbcyl:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcym
_cbcyn:
	leaq block_cbcyi_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbcyi
_cbcyj:
	movq (%rbx),%rax
	jmp *(%rax)
_cbcym:
	jmp *-8(%r13)
	.size act_sbbTv_entry, .-act_sbbTv_entry


==================== Asm code ====================
2018-03-16 16:06:10.602147635 UTC

.section .data.rel.ro
.align 8
.align 1
act_sbbTv_info:
	.quad	act_sbbTv_entry
	.quad	4294967296
	.quad	10
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:06:10.603034636 UTC

.section .text
.align 8
_cbcyi:
_cbcyi:
	movq 71(%rbx),%rax
	movq 8(%rax),%rax
	movq 8(%rbp),%rcx
	cmpq $10,%rcx
	je _cbczk
_cbcyE:
	leaq block_cbcyt_info(%rip),%rdx
	movq %rdx,-8(%rbp)
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rcx,(%rbp)
	movq %rdx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbcyt
_cbcyu:
	movq (%rbx),%rax
	jmp *(%rax)
_cbczk:
	leaq block_cbcyL_info(%rip),%rcx
	movq %rcx,-40(%rbp)
	movq %rbx,%rcx
	movq 15(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 55(%rbx),%r8
	movq 119(%rbx),%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rdx,(%rbp)
	movq %rcx,8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbcyL
_cbczl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcyi, .-_cbcyi


==================== Asm code ====================
2018-03-16 16:06:10.603830439 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcyi_info:
	.quad	_cbcyi
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.604606592 UTC

.section .text
.align 8
_cbcyL:
_cbcyL:
	movq 32(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbczs
_cbczC:
	leaq block_cbczA_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbczA
_cbczD:
	movq (%rbx),%rax
	jmp *(%rax)
_cbczs:
	leaq block_cbczp_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbczp
_cbczt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcyL, .-_cbcyL


==================== Asm code ====================
2018-03-16 16:06:10.605204501 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcyL_info:
	.quad	_cbcyL
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.605960801 UTC

.section .text
.align 8
_cbczp:
_cbczp:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movl $10,(%rdx,%rbx,4)
	movq %rdx,32(%rbp)
	movq %rax,(%rbp)
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	leaq 1(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp _sbbU6
	.size _cbczp, .-_cbczp


==================== Asm code ====================
2018-03-16 16:06:10.60659614 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbczp_info:
	.quad	_cbczp
	.quad	518
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.607303987 UTC

.section .text
.align 8
_cbczA:
_cbczA:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movl $13,(%rdx,%rbx,4)
	incq %rbx
	movl $10,(%rdx,%rbx,4)
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	incq %rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,32(%rbp)
	addq $-32,%rbp
	jmp _sbbU6
	.size _cbczA, .-_cbczA


==================== Asm code ====================
2018-03-16 16:06:10.607966299 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbczA_info:
	.quad	_cbczA
	.quad	518
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.608633271 UTC

.section .text
.align 8
_sbbU6:
_sbbU6:
	movq 32(%rbp),%rax
	leaq block_cbcyP_info(%rip),%rbx
	movq %rbx,32(%rbp)
	movq 8(%rbp),%r9
	movq (%rbp),%r8
	movq %rax,%rdi
	movq 64(%rbp),%rsi
	movq 80(%rbp),%r14
	addq $16,%rbp
	jmp *GHC.IO.Handle.Internals.$wwriteCharBuffer_entry@gotpcrel(%rip)
	.size _sbbU6, .-_sbbU6


==================== Asm code ====================
2018-03-16 16:06:10.609431136 UTC

.section .text
.align 8
_cbcyP:
_cbcyP:
	leaq block_cbcyR_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rbx
	testb $7,%bl
	jne _cbcyR
_cbcyU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcyP, .-_cbcyP


==================== Asm code ====================
2018-03-16 16:06:10.61003672 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcyP_info:
	.quad	_cbcyP
	.quad	2566
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.610743282 UTC

.section .text
.align 8
_cbcyR:
_cbcyR:
	andl $7,%ebx
	cmpq $2,%rbx
	je _cbcz5
_ubczX:
	addq $56,%rbp
	jmp _cbczj
_cbcz5:
	movq 16(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbcz3_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbcz3
_cbcz6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcyR, .-_cbcyR


==================== Asm code ====================
2018-03-16 16:06:10.611399132 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcyR_info:
	.quad	_cbcyR
	.quad	2822
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.612714118 UTC

.section .text
.align 8
_cbcz3:
_cbcz3:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _ubczY
_cbczg:
	movq 8(%rbp),%rax
	leaq block_cbcze_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 40(%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.BufferedIO.flushWriteBuffer_entry@gotpcrel(%rip)
_ubczY:
	addq $56,%rbp
	jmp _cbczj
	.size _cbcz3, .-_cbcz3


==================== Asm code ====================
2018-03-16 16:06:10.613843886 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcz3_info:
	.quad	_cbcz3
	.quad	2822
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.614595454 UTC

.section .text
.align 8
_cbcze:
_cbcze:
	movq 8(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbcze, .-_cbcze


==================== Asm code ====================
2018-03-16 16:06:10.615252335 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcze_info:
	.quad	_cbcze
	.quad	1925
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.615858307 UTC

.section .text
.align 8
_cbczj:
_cbczj:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbczj, .-_cbczj


==================== Asm code ====================
2018-03-16 16:06:10.616624891 UTC

.section .text
.align 8
_cbcyt:
_cbcyt:
	movq 16(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rsi
	movq 31(%rbx),%rdi
	movq 39(%rbx),%r8
	movq 47(%rbx),%rbx
	movq 8(%rbp),%r9
	movl %r9d,(%rsi,%rbx,4)
	leaq block_cbcyC_info(%rip),%r9
	movq %r9,16(%rbp)
	movq %rdi,%r9
	movq %r8,%rdi
	movq %rdx,%r8
	movq %rdi,%rdx
	movq %rcx,%rdi
	movq %rax,%r14
	movq %rdx,(%rbp)
	leaq 1(%rbx),%rax
	movq %rax,8(%rbp)
	jmp *GHC.IO.Handle.Internals.$wwriteCharBuffer_entry@gotpcrel(%rip)
	.size _cbcyt, .-_cbcyt


==================== Asm code ====================
2018-03-16 16:06:10.617355339 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcyt_info:
	.quad	_cbcyt
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.618026639 UTC

.section .text
.align 8
_cbcyC:
_cbcyC:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbcyC, .-_cbcyC


==================== Asm code ====================
2018-03-16 16:06:10.618634614 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcyC_info:
	.quad	_cbcyC
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.619503066 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$whPutChar_entry
.type GHC.IO.Handle.Text.$whPutChar_entry, @object
GHC.IO.Handle.Text.$whPutChar_entry:
_cbcAh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcAi
_cbcAj:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbcAl
_cbcAk:
	leaq act_sbbTv_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rsi,(%r12)
	leaq block_cbcAa_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	leaq -6(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbcAa
_cbcAb:
	movq (%rbx),%rax
	jmp *(%rax)
_cbcAl:
	movq $16,904(%r13)
_cbcAi:
	leaq GHC.IO.Handle.Text.$whPutChar_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.$whPutChar_entry, .-GHC.IO.Handle.Text.$whPutChar_entry


==================== Asm code ====================
2018-03-16 16:06:10.620247918 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whPutChar_info
.type GHC.IO.Handle.Text.$whPutChar_info, @object
GHC.IO.Handle.Text.$whPutChar_info:
	.quad	GHC.IO.Handle.Text.$whPutChar_entry
	.quad	0
	.quad	30064771086
	.quad	12884901902
	.quad	SbcpG_srt+16


==================== Asm code ====================
2018-03-16 16:06:10.621038396 UTC

.section .text
.align 8
_cbcAa:
_cbcAa:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbcAe
_cbcAf:
	movq %rax,%r8
	movq 22(%rbx),%rdi
	movq %rbx,%rsi
	leaq GHC.IO.Handle.Text.hPutChar2_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.IO.Handle.Internals.$wwantWritableHandle'_entry@gotpcrel(%rip)
_cbcAe:
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq %rbx,%rsi
	leaq GHC.IO.Handle.Text.hPutChar2_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.IO.Handle.Internals.$wwantWritableHandle'_entry@gotpcrel(%rip)
	.size _cbcAa, .-_cbcAa


==================== Asm code ====================
2018-03-16 16:06:10.621722604 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcAa_info:
	.quad	_cbcAa
	.quad	1
	.quad	21474836510
	.quad	SbcpG_srt+16


==================== Asm code ====================
2018-03-16 16:06:10.624759758 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutChar1_closure
.type GHC.IO.Handle.Text.hPutChar1_closure, @object
GHC.IO.Handle.Text.hPutChar1_closure:
	.quad	GHC.IO.Handle.Text.hPutChar1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.625938243 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutChar1_entry
.type GHC.IO.Handle.Text.hPutChar1_entry, @object
GHC.IO.Handle.Text.hPutChar1_entry:
_cbcC0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcC1
_cbcC2:
	leaq block_cbcBX_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbcBX
_cbcBY:
	movq (%rbx),%rax
	jmp *(%rax)
_cbcC1:
	leaq GHC.IO.Handle.Text.hPutChar1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hPutChar1_entry, .-GHC.IO.Handle.Text.hPutChar1_entry


==================== Asm code ====================
2018-03-16 16:06:10.626632946 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutChar1_info
.type GHC.IO.Handle.Text.hPutChar1_info, @object
GHC.IO.Handle.Text.hPutChar1_info:
	.quad	GHC.IO.Handle.Text.hPutChar1_entry
	.quad	0
	.quad	21474836494
	.quad	12884901903
	.quad	SbcpG_srt+24


==================== Asm code ====================
2018-03-16 16:06:10.627308102 UTC

.section .text
.align 8
_cbcBX:
_cbcBX:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.Text.$whPutChar_entry
	.size _cbcBX, .-_cbcBX


==================== Asm code ====================
2018-03-16 16:06:10.627868774 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcBX_info:
	.quad	_cbcBX
	.quad	1
	.quad	4294967326
	.quad	SbcpG_srt+24


==================== Asm code ====================
2018-03-16 16:06:10.630015329 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutChar_closure
.type GHC.IO.Handle.Text.hPutChar_closure, @object
GHC.IO.Handle.Text.hPutChar_closure:
	.quad	GHC.IO.Handle.Text.hPutChar_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.630669776 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutChar_entry
.type GHC.IO.Handle.Text.hPutChar_entry, @object
GHC.IO.Handle.Text.hPutChar_entry:
_cbcCl:
	jmp GHC.IO.Handle.Text.hPutChar1_entry
	.size GHC.IO.Handle.Text.hPutChar_entry, .-GHC.IO.Handle.Text.hPutChar_entry


==================== Asm code ====================
2018-03-16 16:06:10.631256789 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutChar_info
.type GHC.IO.Handle.Text.hPutChar_info, @object
GHC.IO.Handle.Text.hPutChar_info:
	.quad	GHC.IO.Handle.Text.hPutChar_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SbcpG_srt+40


==================== Asm code ====================
2018-03-16 16:06:10.63530435 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr7_closure
.type GHC.IO.Handle.Text.hPutStr7_closure, @object
GHC.IO.Handle.Text.hPutStr7_closure:
	.quad	GHC.IO.Handle.Text.hPutStr7_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.636003453 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutStr7_entry
.type GHC.IO.Handle.Text.hPutStr7_entry, @object
GHC.IO.Handle.Text.hPutStr7_entry:
_cbcCD:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcCE
_ubcCV:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _cbcCt
_cbcCE:
	leaq GHC.IO.Handle.Text.hPutStr7_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hPutStr7_entry, .-GHC.IO.Handle.Text.hPutStr7_entry


==================== Asm code ====================
2018-03-16 16:06:10.636662859 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr7_info
.type GHC.IO.Handle.Text.hPutStr7_info, @object
GHC.IO.Handle.Text.hPutStr7_info:
	.quad	GHC.IO.Handle.Text.hPutStr7_entry
	.quad	0
	.quad	38654705678
	.quad	12884901903
	.quad	SbcpG_srt+24


==================== Asm code ====================
2018-03-16 16:06:10.637376236 UTC

.section .text
.align 8
_cbcCt:
_cbcCt:
	leaq block_cbcCw_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbcCw
_cbcCx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcCt, .-_cbcCt


==================== Asm code ====================
2018-03-16 16:06:10.638145791 UTC

.section .text
.align 8
_cbcCw:
_cbcCw:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbcCA
_cbcCB:
	leaq block_cbcCL_info(%rip),%rax
	movq %rax,(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cbcCL
_cbcCN:
	movq (%rbx),%rax
	jmp *(%rax)
_cbcCA:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbcCw, .-_cbcCw


==================== Asm code ====================
2018-03-16 16:06:10.638854769 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcCw_info:
	.quad	_cbcCw
	.quad	130
	.quad	4294967326
	.quad	SbcpG_srt+24


==================== Asm code ====================
2018-03-16 16:06:10.639507076 UTC

.section .text
.align 8
_cbcCL:
_cbcCL:
	leaq block_cbcCR_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	jmp GHC.IO.Handle.Text.$whPutChar_entry
	.size _cbcCL, .-_cbcCL


==================== Asm code ====================
2018-03-16 16:06:10.64011716 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcCL_info:
	.quad	_cbcCL
	.quad	2
	.quad	4294967326
	.quad	SbcpG_srt+24


==================== Asm code ====================
2018-03-16 16:06:10.640749291 UTC

.section .text
.align 8
_cbcCR:
_cbcCR:
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _cbcCt
	.size _cbcCR, .-_cbcCR


==================== Asm code ====================
2018-03-16 16:06:10.641785714 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcCR_info:
	.quad	_cbcCR
	.quad	2
	.quad	4294967326
	.quad	SbcpG_srt+24


==================== Asm code ====================
2018-03-16 16:06:10.647155901 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar3_closure
.type GHC.IO.Handle.Text.hGetChar3_closure, @object
GHC.IO.Handle.Text.hGetChar3_closure:
	.quad	GHC.IO.Handle.Text.hGetChar3_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.647891032 UTC

.section .text
.align 8
sat_sbbVw_entry:
_cbcDX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcDY
_cbcDZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cbcDY:
	jmp *-16(%r13)
	.size sat_sbbVw_entry, .-sat_sbbVw_entry


==================== Asm code ====================
2018-03-16 16:06:10.648543419 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbbVw_info:
	.quad	sat_sbbVw_entry
	.quad	1
	.quad	4294967312
	.quad	SbcpG_srt


==================== Asm code ====================
2018-03-16 16:06:10.649326029 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetChar3_entry
.type GHC.IO.Handle.Text.hGetChar3_entry, @object
GHC.IO.Handle.Text.hGetChar3_entry:
_cbcE0:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcE1
_cbcE2:
	leaq block_cbcDw_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbcDw
_cbcDx:
	movq (%rbx),%rax
	jmp *(%rax)
_cbcE1:
	leaq GHC.IO.Handle.Text.hGetChar3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetChar3_entry, .-GHC.IO.Handle.Text.hGetChar3_entry


==================== Asm code ====================
2018-03-16 16:06:10.650552245 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar3_info
.type GHC.IO.Handle.Text.hGetChar3_info, @object
GHC.IO.Handle.Text.hGetChar3_info:
	.quad	GHC.IO.Handle.Text.hGetChar3_entry
	.quad	0
	.quad	3852585664526
	.quad	8589934597
	.quad	SbcpG_srt


==================== Asm code ====================
2018-03-16 16:06:10.651294393 UTC

.section .text
.align 8
_cbcDw:
_cbcDw:
	leaq block_cbcDB_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Exception.$p1Exception_entry@gotpcrel(%rip)
	.size _cbcDw, .-_cbcDw


==================== Asm code ====================
2018-03-16 16:06:10.651955783 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcDw_info:
	.quad	_cbcDw
	.quad	0
	.quad	1653562408990
	.quad	SbcpG_srt


==================== Asm code ====================
2018-03-16 16:06:10.652615849 UTC

.section .text
.align 8
_cbcDB:
_cbcDB:
	leaq block_cbcDF_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.IO.Exception.$fExceptionIOException4_closure@gotpcrel(%rip),%rsi
	movq %rbx,%r14
	jmp *Data.Typeable.Internal.sameTypeRep_entry@gotpcrel(%rip)
	.size _cbcDB, .-_cbcDB


==================== Asm code ====================
2018-03-16 16:06:10.653789998 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcDB_info:
	.quad	_cbcDB
	.quad	2
	.quad	1653562408990
	.quad	SbcpG_srt


==================== Asm code ====================
2018-03-16 16:06:10.654492805 UTC

.section .text
.align 8
_cbcDF:
_cbcDF:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbcE8
_cbcEa:
	leaq block_cbcDK_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_cbcE8:
	movq 16(%rbp),%rbx
	addq $24,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _cbcDF, .-_cbcDF


==================== Asm code ====================
2018-03-16 16:06:10.655097127 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcDF_info:
	.quad	_cbcDF
	.quad	2
	.quad	4294967326
	.quad	SbcpG_srt


==================== Asm code ====================
2018-03-16 16:06:10.655769037 UTC

.section .text
.align 8
_cbcDK:
_cbcDK:
	leaq block_cbcDO_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbcDO
_cbcDP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcDK, .-_cbcDK


==================== Asm code ====================
2018-03-16 16:06:10.656412775 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcDK_info:
	.quad	_cbcDK
	.quad	0
	.quad	4294967326
	.quad	SbcpG_srt


==================== Asm code ====================
2018-03-16 16:06:10.657181441 UTC

.section .text
.align 8
_cbcDO:
_cbcDO:
	movq -1(%rbx),%rax
	cmpl $4,20(%rax)
	je _cbcEk
_cbcEd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbcEg
_cbcEf:
	leaq sat_sbbVw_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -16(%r12),%rbx
	addq $16,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_cbcEk:
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcEg:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbcDO, .-_cbcDO


==================== Asm code ====================
2018-03-16 16:06:10.657895393 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcDO_info:
	.quad	_cbcDO
	.quad	1
	.quad	4294967326
	.quad	SbcpG_srt


==================== Asm code ====================
2018-03-16 16:06:10.659577675 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.hGetChar7_bytes
.type GHC.IO.Handle.Text.hGetChar7_bytes, @object
GHC.IO.Handle.Text.hGetChar7_bytes:
	.asciz "hGetChar"


==================== Asm code ====================
2018-03-16 16:06:10.662156005 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar6_closure
.type GHC.IO.Handle.Text.hGetChar6_closure, @object
GHC.IO.Handle.Text.hGetChar6_closure:
	.quad	GHC.IO.Handle.Text.hGetChar6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.662992812 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetChar6_entry
.type GHC.IO.Handle.Text.hGetChar6_entry, @object
GHC.IO.Handle.Text.hGetChar6_entry:
_cbcFa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcFb
_cbcFc:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbcF9
_cbcF8:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Text.hGetChar7_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbcFb:
	jmp *-16(%r13)
_cbcF9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.hGetChar6_entry, .-GHC.IO.Handle.Text.hGetChar6_entry


==================== Asm code ====================
2018-03-16 16:06:10.663712153 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar6_info
.type GHC.IO.Handle.Text.hGetChar6_info, @object
GHC.IO.Handle.Text.hGetChar6_info:
	.quad	GHC.IO.Handle.Text.hGetChar6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:10.665404735 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar5_closure
.type GHC.IO.Handle.Text.hGetChar5_closure, @object
GHC.IO.Handle.Text.hGetChar5_closure:
	.quad	GHC.Types.C#_con_info
	.quad	13


==================== Asm code ====================
2018-03-16 16:06:10.667043229 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar4_closure
.type GHC.IO.Handle.Text.hGetChar4_closure, @object
GHC.IO.Handle.Text.hGetChar4_closure:
	.quad	GHC.Types.C#_con_info
	.quad	10


==================== Asm code ====================
2018-03-16 16:06:10.690425161 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar2_closure
.type GHC.IO.Handle.Text.hGetChar2_closure, @object
GHC.IO.Handle.Text.hGetChar2_closure:
	.quad	GHC.IO.Handle.Text.hGetChar2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.691503024 UTC

.section .text
.align 8
sat_sbbWf_entry:
_cbcGb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcGc
_cbcGd:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbcGf
_cbcGe:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	cmpq %rdi,%rbx
	je _cbcGa
_cbcG9:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcGf:
	movq $56,904(%r13)
_cbcGc:
	jmp *-16(%r13)
_cbcGa:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_sbbWf_entry, .-sat_sbbWf_entry


==================== Asm code ====================
2018-03-16 16:06:10.69232107 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbbWf_info:
	.quad	sat_sbbWf_entry
	.quad	17179869186
	.quad	15


==================== Asm code ====================
2018-03-16 16:06:10.693223373 UTC

.section .text
.align 8
sat_sbbWk_entry:
_cbcGt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcGu
_cbcGv:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbcGx
_cbcGw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	cmpq %rdi,%rbx
	je _cbcGs
_cbcGr:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcGx:
	movq $56,904(%r13)
_cbcGu:
	jmp *-16(%r13)
_cbcGs:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_sbbWk_entry, .-sat_sbbWk_entry


==================== Asm code ====================
2018-03-16 16:06:10.694069989 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbbWk_info:
	.quad	sat_sbbWk_entry
	.quad	17179869186
	.quad	15


==================== Asm code ====================
2018-03-16 16:06:10.695022547 UTC

.section .text
.align 8
sat_sbbWE_entry:
_cbcGS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcGT
_cbcGU:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbcGW
_cbcGV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 48(%rbx),%rbx
	incq %rbx
	cmpq %rdi,%rbx
	je _cbcH6
_cbcH3:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcH6:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcGW:
	movq $56,904(%r13)
_cbcGT:
	jmp *-16(%r13)
	.size sat_sbbWE_entry, .-sat_sbbWE_entry


==================== Asm code ====================
2018-03-16 16:06:10.695888753 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbbWE_info:
	.quad	sat_sbbWE_entry
	.quad	17179869186
	.quad	15


==================== Asm code ====================
2018-03-16 16:06:10.696781101 UTC

.section .text
.align 8
sat_sbbX0_entry:
_cbcHj:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcHk
_cbcHl:
	movq 7(%rbx),%rax
	movq 31(%rbx),%rcx
	movq 55(%rbx),%rdx
	movq 63(%rbx),%rsi
	subq %rdx,%rsi
	testq %rsi,%rsi
	jne _ubcI2
_cbcHh:
	leaq block_cbcHy_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rcx,%rsi
	movq %rax,%r14
	addq $-8,%rbp
	jmp *GHC.IO.Handle.Internals.hLookAhead_2_entry@gotpcrel(%rip)
_ubcI4:
	movq %rcx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _cbcHo
_ubcI2:
	cmpq $1,%rsi
	jne _ubcI4
_ubcI3:
	movq %rax,-64(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-56(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-48(%rbp)
	movq 23(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 47(%rbx),%rax
	movq %rax,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-64,%rbp
	jmp _cbcHH
_cbcHk:
	jmp *-8(%r13)
	.size sat_sbbX0_entry, .-sat_sbbX0_entry


==================== Asm code ====================
2018-03-16 16:06:10.697624854 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbbX0_info:
	.quad	sat_sbbX0_entry
	.quad	17179869188
	.quad	4294967304
	.quad	4294967299
	.quad	SbcpG_srt+80


==================== Asm code ====================
2018-03-16 16:06:10.698357682 UTC

.section .text
.align 8
_cbcHo:
_cbcHo:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbcHt
_cbcHs:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq (%rbp),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcHt:
	movq $16,904(%r13)
	leaq block_cbcHn_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbcHo, .-_cbcHo


==================== Asm code ====================
2018-03-16 16:06:10.699113044 UTC

.section .text
.align 8
_cbcHn:
_cbcHn:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _cbcHo
	.size _cbcHn, .-_cbcHn


==================== Asm code ====================
2018-03-16 16:06:10.699685144 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcHn_info:
	.quad	_cbcHn
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.700625226 UTC

.section .text
.align 8
_cbcHH:
_cbcHH:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbcHL
_cbcHK:
	movq (%rbp),%rax
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 48(%rbp),%rdi
	movq 40(%rbp),%r8
	movl (%rbx,%r8,4),%r8d
	cmpq $13,%r8
	je _cbcHY
_cbcHR:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq %rdi,-40(%r12)
	leaq -46(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcHY:
	movl $13,(%rbx)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rdi
	movq %rdi,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rbx,-24(%r12)
	movq %rsi,-16(%r12)
	movq $0,-8(%r12)
	movq $1,(%r12)
	leaq block_cbcHV_info(%rip),%rbx
	movq %rbx,56(%rbp)
	leaq -47(%r12),%rsi
	movq %rax,%r14
	addq $56,%rbp
	jmp *GHC.IO.Handle.Internals.hLookAhead_2_entry@gotpcrel(%rip)
_cbcHL:
	movq $56,904(%r13)
	leaq block_cbcHG_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 56(%rbp),%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbcHH, .-_cbcHH


==================== Asm code ====================
2018-03-16 16:06:10.70154793 UTC

.section .text
.align 8
_cbcHG:
_cbcHG:
	movq %rbx,64(%rbp)
	addq $8,%rbp
	jmp _cbcHH
	.size _cbcHG, .-_cbcHG


==================== Asm code ====================
2018-03-16 16:06:10.702145776 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcHG_info:
	.quad	_cbcHG
	.quad	11400
	.quad	4294967326
	.quad	SbcpG_srt+80


==================== Asm code ====================
2018-03-16 16:06:10.703585696 UTC

.section .text
.align 8
_cbcHV:
_cbcHV:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbcI1
_cbcI0:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcI1:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbcHV, .-_cbcHV


==================== Asm code ====================
2018-03-16 16:06:10.704235991 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcHV_info:
	.quad	_cbcHV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.704942781 UTC

.section .text
.align 8
_cbcHy:
_cbcHy:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbcHE
_cbcHD:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcHE:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbcHy, .-_cbcHy


==================== Asm code ====================
2018-03-16 16:06:10.705630924 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcHy_info:
	.quad	_cbcHy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.706368646 UTC

.section .text
.align 8
sat_sbbXm_entry:
_cbcIu:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcIv
_cbcIw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbcIr_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbcIr
_cbcIs:
	movq (%rbx),%rax
	jmp *(%rax)
_cbcIv:
	jmp *-16(%r13)
	.size sat_sbbXm_entry, .-sat_sbbXm_entry


==================== Asm code ====================
2018-03-16 16:06:10.707013269 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbbXm_info:
	.quad	sat_sbbXm_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:10.707868541 UTC

.section .text
.align 8
_cbcIr:
_cbcIr:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbcIB
_cbcIA:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rbx
	movq 8(%rbp),%rdi
	incq %rdi
	cmpq %rbx,%rdi
	je _cbcIN
_cbcIK:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %rbx,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcIN:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcIB:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbcIr, .-_cbcIr


==================== Asm code ====================
2018-03-16 16:06:10.708674585 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcIr_info:
	.quad	_cbcIr
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.709603318 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetChar2_entry
.type GHC.IO.Handle.Text.hGetChar2_entry, @object
GHC.IO.Handle.Text.hGetChar2_entry:
_cbcIP:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcIQ
_cbcIR:
	leaq block_cbcFr_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbcFr
_cbcFs:
	movq (%rbx),%rax
	jmp *(%rax)
_cbcIQ:
	leaq GHC.IO.Handle.Text.hGetChar2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetChar2_entry, .-GHC.IO.Handle.Text.hGetChar2_entry


==================== Asm code ====================
2018-03-16 16:06:10.710302956 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar2_info
.type GHC.IO.Handle.Text.hGetChar2_info, @object
GHC.IO.Handle.Text.hGetChar2_info:
	.quad	GHC.IO.Handle.Text.hGetChar2_entry
	.quad	0
	.quad	30064771086
	.quad	8589934597
	.quad	SbcpG_srt+72


==================== Asm code ====================
2018-03-16 16:06:10.711026533 UTC

.section .text
.align 8
_cbcFr:
_cbcFr:
	leaq block_cbcFw_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,%rax
	movq 71(%rbx),%rcx
	movq 111(%rbx),%rbx
	movq %rbx,%rdx
	movq 8(%rcx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbcFw
_cbcFx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcFr, .-_cbcFr


==================== Asm code ====================
2018-03-16 16:06:10.711673235 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcFr_info:
	.quad	_cbcFr
	.quad	0
	.quad	12884901918
	.quad	SbcpG_srt+72


==================== Asm code ====================
2018-03-16 16:06:10.712422083 UTC

.section .text
.align 8
_cbcFw:
_cbcFw:
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	cmpq %rcx,%rax
	je _cbcJM
_cbcJG:
	movq 7(%rbx),%rdx
	movq %rdx,-40(%rbp)
	movq 15(%rbx),%rdx
	movq %rdx,-32(%rbp)
	movq 31(%rbx),%rdx
	movq %rdx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	addq $-40,%rbp
	jmp _sbbW0
_cbcJM:
	leaq block_cbcJJ_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq 24(%rbp),%r14
	jmp *GHC.IO.Handle.Internals.hLookAhead_2_entry@gotpcrel(%rip)
	.size _cbcFw, .-_cbcFw


==================== Asm code ====================
2018-03-16 16:06:10.713144437 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcFw_info:
	.quad	_cbcFw
	.quad	3
	.quad	12884901918
	.quad	SbcpG_srt+72


==================== Asm code ====================
2018-03-16 16:06:10.713808659 UTC

.section .text
.align 8
_cbcJJ:
_cbcJJ:
	leaq block_cbcJL_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbcJL
_cbcJO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcJJ, .-_cbcJJ


==================== Asm code ====================
2018-03-16 16:06:10.714380177 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcJJ_info:
	.quad	_cbcJJ
	.quad	3
	.quad	12884901918
	.quad	SbcpG_srt+72


==================== Asm code ====================
2018-03-16 16:06:10.715017341 UTC

.section .text
.align 8
_cbcJL:
_cbcJL:
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 31(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 47(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp _sbbW0
	.size _cbcJL, .-_cbcJL


==================== Asm code ====================
2018-03-16 16:06:10.715628164 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcJL_info:
	.quad	_cbcJL
	.quad	3
	.quad	12884901918
	.quad	SbcpG_srt+72


==================== Asm code ====================
2018-03-16 16:06:10.716384507 UTC

.section .text
.align 8
_sbbW0:
_sbbW0:
	movq 56(%rbp),%rax
	movq 24(%rbp),%rbx
	movq 40(%rbp),%rcx
	movl (%rcx,%rbx,4),%ecx
	leaq block_cbcFK_info(%rip),%rdx
	movq %rdx,-8(%rbp)
	movq %rbx,%rdx
	movq %rax,%rbx
	leaq 1(%rdx),%rax
	movq %rax,24(%rbp)
	movq %rcx,56(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbcFK
_cbcFL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbbW0, .-_sbbW0


==================== Asm code ====================
2018-03-16 16:06:10.718213712 UTC

.section .text
.align 8
_cbcFK:
_cbcFK:
	movq 56(%rbp),%rax
	movq 48(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq 16(%rbp),%rsi
	movq 24(%rbp),%rdi
	movq 40(%rbp),%r8
	movq 64(%rbp),%r9
	movq 32(%rbp),%r10
	movq %rbx,%r11
	andl $7,%r11d
	cmpq $1,%r11
	je _cbcJ0
_cbcJ4:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cbcJ7
_cbcJ6:
	cmpq $13,%r9
	je _cbcJC
_cbcJd:
	leaq sat_sbbWk_info(%rip),%rbx
	movq %rbx,-72(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r10,-16(%r12)
	leaq -72(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	movq %r9,%rbx
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcJB:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdi,-40(%r12)
	movq $0,-32(%r12)
	movq $0,-24(%r12)
	leaq -71(%r12),%rax
	addq $-24,%r12
	movq %rcx,64(%rbp)
	movq %rdx,48(%rbp)
	movq %rsi,40(%rbp)
	movq %rdi,32(%rbp)
	movq $0,24(%rbp)
	movq $0,16(%rbp)
	movq %rax,8(%rbp)
	jmp _cbcGC
_cbcJC:
	cmpq %r8,%r10
	je _cbcJB
_cbcJA:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rsi,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rdi,-40(%r12)
	movq %r10,-32(%r12)
	movq %r8,-24(%r12)
	leaq -71(%r12),%rax
	addq $-24,%r12
	movq %rax,8(%rbp)
	movq %r8,16(%rbp)
	movq %r10,24(%rbp)
	movq %rdi,32(%rbp)
	movq %rsi,40(%rbp)
	movq %rdx,48(%rbp)
	movq %rcx,64(%rbp)
	jmp _cbcGC
_cbcJ7:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbcJ0:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cbcJ7
_cbcJ2:
	leaq sat_sbbWf_info(%rip),%rbx
	movq %rbx,-72(%r12)
	movq %rdx,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdi,-32(%r12)
	movq %r8,-24(%r12)
	movq %r10,-16(%r12)
	leaq -72(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	movq %r9,%rbx
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbcFK, .-_cbcFK


==================== Asm code ====================
2018-03-16 16:06:10.719350296 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcFK_info:
	.quad	_cbcFK
	.quad	12041
	.quad	12884901918
	.quad	SbcpG_srt+72


==================== Asm code ====================
2018-03-16 16:06:10.720426196 UTC

.section .text
.align 8
_cbcGC:
_cbcGC:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbcJg
_cbcJf:
	movq 64(%rbp),%rax
	movq 48(%rbp),%rbx
	movq 40(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 24(%rbp),%rsi
	movq 16(%rbp),%rdi
	movq 8(%rbp),%r8
	cmpq %rdi,%rsi
	je _cbcJm
_cbcJl:
	movq 56(%rbp),%r9
	movl (%rax,%rsi,4),%r10d
	cmpq $10,%r10
	je _cbcJj
_cbcJi:
	movq %r8,8(%r9)
	subq $8,%rsp
	movq %r13,%rax
	movq %r9,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $-72,%r12
	leaq GHC.IO.Handle.Text.hGetChar5_closure+1(%rip),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcJm:
	leaq sat_sbbX0_info(%rip),%r9
	movq %r9,-64(%r12)
	movq 72(%rbp),%r9
	movq %r9,-56(%r12)
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq %r8,-32(%r12)
	movq %rax,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	leaq block_cbcIb_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.IO.Handle.Text.hGetChar3_closure+2(%rip),%r14
	leaq -63(%r12),%rbx
	jmp *stg_catch#@gotpcrel(%rip)
_cbcJj:
	leaq sat_sbbWE_info(%rip),%r8
	movq %r8,-64(%r12)
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rax,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,8(%r9)
	subq $8,%rsp
	movq %r13,%rax
	movq %r9,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $-8,%r12
	leaq GHC.IO.Handle.Text.hGetChar4_closure+1(%rip),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcJg:
	movq $72,904(%r13)
	leaq block_cbcGC_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cbcGC, .-_cbcGC


==================== Asm code ====================
2018-03-16 16:06:10.721407897 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcGC_info:
	.quad	_cbcGC
	.quad	9097
	.quad	12884901918
	.quad	SbcpG_srt+72


==================== Asm code ====================
2018-03-16 16:06:10.72207898 UTC

.section .text
.align 8
_cbcIb:
_cbcIb:
	leaq block_cbcId_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbcId
_cbcIe:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcIb, .-_cbcIb


==================== Asm code ====================
2018-03-16 16:06:10.722648413 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcIb_info:
	.quad	_cbcIb
	.quad	26505
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.723663556 UTC

.section .text
.align 8
_cbcId:
_cbcId:
	movq 56(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbcJr
_cbcJs:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbcJv
_cbcJu:
	movq 24(%rbp),%rcx
	movq 6(%rbx),%rbx
	movq 64(%rbp),%rdx
	movl (%rdx,%rcx,4),%edx
	cmpq $10,%rdx
	je _cbcJy
_cbcJx:
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $-32,%r12
	leaq GHC.IO.Handle.Text.hGetChar5_closure+1(%rip),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcJy:
	leaq sat_sbbXm_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rbx,-8(%r12)
	movq %rcx,(%r12)
	leaq -24(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq GHC.IO.Handle.Text.hGetChar4_closure+1(%rip),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcJv:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbcJr:
	movq 8(%rbp),%rcx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rax,%rsi
	movq %rcx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq GHC.IO.Handle.Text.hGetChar5_closure+1(%rip),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbcId, .-_cbcId


==================== Asm code ====================
2018-03-16 16:06:10.724569677 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcId_info:
	.quad	_cbcId
	.quad	26505
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.726913408 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar1_closure
.type GHC.IO.Handle.Text.hGetChar1_closure, @object
GHC.IO.Handle.Text.hGetChar1_closure:
	.quad	GHC.IO.Handle.Text.hGetChar1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.72754576 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetChar1_entry
.type GHC.IO.Handle.Text.hGetChar1_entry, @object
GHC.IO.Handle.Text.hGetChar1_entry:
_cbcNd:
	leaq GHC.IO.Handle.Text.hGetChar2_closure+2(%rip),%rdi
	movq %r14,%rsi
	leaq GHC.IO.Handle.Text.hGetChar6_closure(%rip),%r14
	jmp *GHC.IO.Handle.Internals.wantReadableHandle_1_entry@gotpcrel(%rip)
	.size GHC.IO.Handle.Text.hGetChar1_entry, .-GHC.IO.Handle.Text.hGetChar1_entry


==================== Asm code ====================
2018-03-16 16:06:10.728188591 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar1_info
.type GHC.IO.Handle.Text.hGetChar1_info, @object
GHC.IO.Handle.Text.hGetChar1_info:
	.quad	GHC.IO.Handle.Text.hGetChar1_entry
	.quad	0
	.quad	30064771086
	.quad	8589934597
	.quad	SbcpG_srt+88


==================== Asm code ====================
2018-03-16 16:06:10.730488578 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar_closure
.type GHC.IO.Handle.Text.hGetChar_closure, @object
GHC.IO.Handle.Text.hGetChar_closure:
	.quad	GHC.IO.Handle.Text.hGetChar_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.731116138 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetChar_entry
.type GHC.IO.Handle.Text.hGetChar_entry, @object
GHC.IO.Handle.Text.hGetChar_entry:
_cbcNo:
	jmp GHC.IO.Handle.Text.hGetChar1_entry
	.size GHC.IO.Handle.Text.hGetChar_entry, .-GHC.IO.Handle.Text.hGetChar_entry


==================== Asm code ====================
2018-03-16 16:06:10.731735568 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetChar_info
.type GHC.IO.Handle.Text.hGetChar_info, @object
GHC.IO.Handle.Text.hGetChar_info:
	.quad	GHC.IO.Handle.Text.hGetChar_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbcpG_srt+112


==================== Asm code ====================
2018-03-16 16:06:10.733461547 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf3_closure
.type GHC.IO.Handle.Text.hGetBuf3_closure, @object
GHC.IO.Handle.Text.hGetBuf3_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.740855409 UTC

.section .data
.align 8
.align 1
$wunpack_nl_rb6WF_closure:
	.quad	$wunpack_nl_rb6WF_info


==================== Asm code ====================
2018-03-16 16:06:10.742167415 UTC

.section .text
.align 8
$wunpack_nl_rb6WF_slow:
_cbcNx:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp $wunpack_nl_rb6WF_entry
	.size $wunpack_nl_rb6WF_slow, .-$wunpack_nl_rb6WF_slow


==================== Asm code ====================
2018-03-16 16:06:10.743479299 UTC

.section .text
.align 8
$wunpackRB_sbbXO_entry:
_cbcOm:
_cbcNJ:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbcOq
_cbcOp:
	movq 13(%rbx),%rax
	cmpq %rax,%rsi
	jge _cbcOk
_cbcOl:
	addq $-40,%r12
	movq %r14,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cbcOq:
	movq $40,904(%r13)
	jmp *-8(%r13)
_cbcOs:
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	movq %rdx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	decq %rsi
	leaq -14(%r12),%rax
_nbcPv:
	movq %rax,%r14
	jmp _cbcNJ
_cbcOu:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq GHC.IO.Handle.Text.hGetChar4_closure+1(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-16(%r12)
	leaq -30(%r12),%rax
	addq $-16,%r12
	decq %rsi
_nbcPw:
	movq %rax,%r14
	jmp _cbcNJ
_cbcOk:
	movq 5(%rbx),%rcx
	movl (%rcx,%rsi,4),%edx
	cmpq $10,%rdx
	jne _cbcOs
_cbcOz:
	cmpq %rax,%rsi
	jle _cbcOu
_cbcOy:
	leaq -1(%rsi),%rax
	cmpl $13,(%rcx,%rax,4)
	je _cbcOx
_cbcOw:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq GHC.IO.Handle.Text.hGetChar4_closure+1(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-16(%r12)
	leaq -30(%r12),%rax
	addq $-16,%r12
	decq %rsi
_nbcPx:
	movq %rax,%r14
	jmp _cbcNJ
_cbcOx:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq GHC.IO.Handle.Text.hGetChar4_closure+1(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-16(%r12)
	leaq -30(%r12),%rax
	addq $-16,%r12
	addq $-2,%rsi
_nbcPy:
	movq %rax,%r14
	jmp _cbcNJ
	.size $wunpackRB_sbbXO_entry, .-$wunpackRB_sbbXO_entry


==================== Asm code ====================
2018-03-16 16:06:10.744448269 UTC

.section .data.rel.ro
.align 8
.align 1
$wunpackRB_sbbXO_info:
	.quad	$wunpackRB_sbbXO_entry
	.quad	8589934592
	.quad	13
	.quad	12884901902


==================== Asm code ====================
2018-03-16 16:06:10.745462895 UTC

.section .text
.align 8
$wunpack_nl_rb6WF_entry:
_cbcOD:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcOE
_cbcOF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbcOH
_cbcOG:
	cmpq %r8,%rdi
	je _cbcOC
_cbcOB:
	leaq -1(%r8),%rax
	movl (%r14,%rax,4),%eax
	leaq $wunpackRB_sbbXO_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	leaq -13(%r12),%rbx
	cmpq $13,%rax
	je _cbcP9
_cbcOT:
	leaq block_cbcON_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	leaq -1(%r8),%rsi
	movq %r9,%r14
	movq %rax,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-24,%rbp
	jmp $wunpackRB_sbbXO_entry
_cbcP9:
	leaq block_cbcP1_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	leaq -2(%r8),%rsi
	movq %r9,%r14
	movq %rax,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-24,%rbp
	jmp $wunpackRB_sbbXO_entry
_cbcOH:
	movq $24,904(%r13)
_cbcOE:
	leaq $wunpack_nl_rb6WF_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
_cbcOC:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %r9,-8(%r12)
	leaq GHC.IO.Handle.Text.hGetBuf3_closure+1(%rip),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wunpack_nl_rb6WF_entry, .-$wunpack_nl_rb6WF_entry


==================== Asm code ====================
2018-03-16 16:06:10.746325465 UTC

.section .data.rel.ro
.align 8
.align 1
$wunpack_nl_rb6WF_info:
	.quad	$wunpack_nl_rb6WF_entry
	.quad	0
	.quad	14
	.quad	25769803776
	.quad	0
	.quad	837
	.quad	$wunpack_nl_rb6WF_slow


==================== Asm code ====================
2018-03-16 16:06:10.747084565 UTC

.section .text
.align 8
_cbcP1:
_cbcP1:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbcPc
_cbcPb:
	movq 16(%rbp),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	decq %rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcPc:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbcP1, .-_cbcP1


==================== Asm code ====================
2018-03-16 16:06:10.7477762 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcP1_info:
	.quad	_cbcP1
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.748508892 UTC

.section .text
.align 8
_cbcON:
_cbcON:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbcOW
_cbcOV:
	movq 16(%rbp),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcOW:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbcON, .-_cbcON


==================== Asm code ====================
2018-03-16 16:06:10.749171031 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcON_info:
	.quad	_cbcON
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.75141399 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.hGetContents4_bytes
.type GHC.IO.Handle.Text.hGetContents4_bytes, @object
GHC.IO.Handle.Text.hGetContents4_bytes:
	.asciz "hGetContents"


==================== Asm code ====================
2018-03-16 16:06:10.754034203 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetContents3_closure
.type GHC.IO.Handle.Text.hGetContents3_closure, @object
GHC.IO.Handle.Text.hGetContents3_closure:
	.quad	GHC.IO.Handle.Text.hGetContents3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.754869085 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetContents3_entry
.type GHC.IO.Handle.Text.hGetContents3_entry, @object
GHC.IO.Handle.Text.hGetContents3_entry:
_cbcQ7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcQ8
_cbcQ9:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbcQ6
_cbcQ5:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Text.hGetContents4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbcQ8:
	jmp *-16(%r13)
_cbcQ6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.hGetContents3_entry, .-GHC.IO.Handle.Text.hGetContents3_entry


==================== Asm code ====================
2018-03-16 16:06:10.755592443 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetContents3_info
.type GHC.IO.Handle.Text.hGetContents3_info, @object
GHC.IO.Handle.Text.hGetContents3_info:
	.quad	GHC.IO.Handle.Text.hGetContents3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:10.75721331 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl3_rb6WG_bytes:
	.asciz "\015"


==================== Asm code ====================
2018-03-16 16:06:10.759662424 UTC

.section .data
.align 8
.align 1
lvl4_rb6WH_closure:
	.quad	lvl4_rb6WH_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.760475195 UTC

.section .text
.align 8
lvl4_rb6WH_entry:
_cbcQp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcQq
_cbcQr:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbcQo
_cbcQn:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl3_rb6WG_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbcQq:
	jmp *-16(%r13)
_cbcQo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl4_rb6WH_entry, .-lvl4_rb6WH_entry


==================== Asm code ====================
2018-03-16 16:06:10.761181176 UTC

.section .data.rel.ro
.align 8
.align 1
lvl4_rb6WH_info:
	.quad	lvl4_rb6WH_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:10.766606072 UTC

.section .data
.align 8
.align 1
$wlvl_rb6WI_closure:
	.quad	$wlvl_rb6WI_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.767353955 UTC

.section .text
.align 8
sat_sbbYH_entry:
_cbcQP:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcQQ
_cbcQR:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbcQI_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbcQI
_cbcQJ:
	movq (%rbx),%rax
	jmp *(%rax)
_cbcQQ:
	jmp *-16(%r13)
	.size sat_sbbYH_entry, .-sat_sbbYH_entry


==================== Asm code ====================
2018-03-16 16:06:10.768023077 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbbYH_info:
	.quad	sat_sbbYH_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:06:10.768756154 UTC

.section .text
.align 8
_cbcQI:
_cbcQI:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbcQM
_cbcQN:
	andq $-8,%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cbcQM:
	movq 8(%rbp),%rax
	leaq block_cbcQU_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cbcQU
_cbcQW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcQI, .-_cbcQI


==================== Asm code ====================
2018-03-16 16:06:10.769398993 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcQI_info:
	.quad	_cbcQI
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.770270404 UTC

.section .text
.align 8
_cbcQU:
_cbcQU:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbcR2
_cbcR9:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbcRc
_cbcRb:
	movq 6(%rbx),%rax
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcRc:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbcR2:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbcRc
_cbcR4:
	movq 7(%rbx),%rax
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbcQU, .-_cbcQU


==================== Asm code ====================
2018-03-16 16:06:10.770969964 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcQU_info:
	.quad	_cbcQU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.771760194 UTC

.section .text
.align 8
$wlvl_rb6WI_entry:
_cbcRl:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cbcRp
_cbcRo:
	leaq sat_sbbYH_info(%rip),%rax
	movq %rax,-96(%r12)
	movq %r14,-80(%r12)
	movq %r9,-72(%r12)
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-56(%r12)
	movq GHC.IO.Exception.IOError_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -62(%r12),%rax
	movq %rax,-40(%r12)
	movq %rsi,-32(%r12)
	leaq GHC.IO.Handle.Text.hGetContents3_closure(%rip),%rax
	movq %rax,-24(%r12)
	movq %rdi,-16(%r12)
	movq %r8,-8(%r12)
	leaq -96(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%rsi
	movq GHC.IO.Exception.$fExceptionIOException_closure@gotpcrel(%rip),%r14
	jmp *GHC.Exception.throw_entry@gotpcrel(%rip)
_cbcRp:
	movq $104,904(%r13)
	leaq $wlvl_rb6WI_closure(%rip),%rbx
	jmp *-8(%r13)
	.size $wlvl_rb6WI_entry, .-$wlvl_rb6WI_entry


==================== Asm code ====================
2018-03-16 16:06:10.772521398 UTC

.section .data.rel.ro
.align 8
.align 1
$wlvl_rb6WI_info:
	.quad	$wlvl_rb6WI_entry
	.quad	0
	.quad	30064771086
	.quad	21474836505
	.quad	SbcpG_srt+120


==================== Asm code ====================
2018-03-16 16:06:10.77413227 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl5_rb6WJ_bytes:
	.asciz "delayed read on closed handle"


==================== Asm code ====================
2018-03-16 16:06:10.776677802 UTC

.section .data
.align 8
.align 1
lvl6_rb6WK_closure:
	.quad	lvl6_rb6WK_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.77797366 UTC

.section .text
.align 8
lvl6_rb6WK_entry:
_cbcS6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcS7
_cbcS8:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbcS5
_cbcS4:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl5_rb6WJ_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbcS7:
	jmp *-16(%r13)
_cbcS5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl6_rb6WK_entry, .-lvl6_rb6WK_entry


==================== Asm code ====================
2018-03-16 16:06:10.779140943 UTC

.section .data.rel.ro
.align 8
.align 1
lvl6_rb6WK_info:
	.quad	lvl6_rb6WK_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:10.782431038 UTC

.section .data
.align 8
.align 1
lvl7_rb6WL_closure:
	.quad	lvl7_rb6WL_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.783323091 UTC

.section .text
.align 8
sat_sbbYN_entry:
_cbcSr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcSs
_cbcSt:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbcSv
_cbcSu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq GHC.IO.Exception.IOError_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -62(%r12),%rax
	movq %rax,-40(%r12)
	movq GHC.IO.Exception.IllegalOperation_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	leaq GHC.IO.Handle.Text.hGetContents3_closure(%rip),%rax
	movq %rax,-24(%r12)
	leaq lvl6_rb6WK_closure(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cbcSv:
	movq $72,904(%r13)
_cbcSs:
	jmp *-16(%r13)
	.size sat_sbbYN_entry, .-sat_sbbYN_entry


==================== Asm code ====================
2018-03-16 16:06:10.7841253 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbbYN_info:
	.quad	sat_sbbYN_entry
	.quad	1
	.quad	1407379178520592
	.quad	SbcpG_srt


==================== Asm code ====================
2018-03-16 16:06:10.784880222 UTC

.section .text
.align 8
lvl7_rb6WL_entry:
_cbcSw:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbcSA
_cbcSz:
	leaq sat_sbbYN_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
_cbcSA:
	movq $24,904(%r13)
	leaq lvl7_rb6WL_closure(%rip),%rbx
	jmp *-8(%r13)
	.size lvl7_rb6WL_entry, .-lvl7_rb6WL_entry


==================== Asm code ====================
2018-03-16 16:06:10.78553462 UTC

.section .data.rel.ro
.align 8
.align 1
lvl7_rb6WL_info:
	.quad	lvl7_rb6WL_entry
	.quad	0
	.quad	3659178992205838
	.quad	8589934597
	.quad	SbcpG_srt


==================== Asm code ====================
2018-03-16 16:06:10.787189018 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl8_rb6WM_bytes:
	.asciz "illegal handle type"


==================== Asm code ====================
2018-03-16 16:06:10.789712647 UTC

.section .data
.align 8
.align 1
lvl9_rb6WN_closure:
	.quad	lvl9_rb6WN_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.790523429 UTC

.section .text
.align 8
lvl9_rb6WN_entry:
_cbcT3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcT4
_cbcT5:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbcT2
_cbcT1:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl8_rb6WM_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbcT4:
	jmp *-16(%r13)
_cbcT2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl9_rb6WN_entry, .-lvl9_rb6WN_entry


==================== Asm code ====================
2018-03-16 16:06:10.791234187 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_rb6WN_info:
	.quad	lvl9_rb6WN_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:10.794994266 UTC

.section .data
.align 8
.align 1
lvl10_rb6WO_closure:
	.quad	lvl10_rb6WO_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.795869072 UTC

.section .text
.align 8
sat_sbbYS_entry:
_cbcTo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcTp
_cbcTq:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbcTs
_cbcTr:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq GHC.IO.Exception.IOError_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -62(%r12),%rax
	movq %rax,-40(%r12)
	movq GHC.IO.Exception.IllegalOperation_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	leaq GHC.IO.Handle.Text.hGetContents3_closure(%rip),%rax
	movq %rax,-24(%r12)
	leaq lvl9_rb6WN_closure(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cbcTs:
	movq $72,904(%r13)
_cbcTp:
	jmp *-16(%r13)
	.size sat_sbbYS_entry, .-sat_sbbYS_entry


==================== Asm code ====================
2018-03-16 16:06:10.796683782 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbbYS_info:
	.quad	sat_sbbYS_entry
	.quad	1
	.quad	4785078899048464
	.quad	SbcpG_srt


==================== Asm code ====================
2018-03-16 16:06:10.797441276 UTC

.section .text
.align 8
lvl10_rb6WO_entry:
_cbcTt:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbcTx
_cbcTw:
	leaq sat_sbbYS_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
_cbcTx:
	movq $24,904(%r13)
	leaq lvl10_rb6WO_closure(%rip),%rbx
	jmp *-8(%r13)
	.size lvl10_rb6WO_entry, .-lvl10_rb6WO_entry


==================== Asm code ====================
2018-03-16 16:06:10.798084856 UTC

.section .data.rel.ro
.align 8
.align 1
lvl10_rb6WO_info:
	.quad	lvl10_rb6WO_entry
	.quad	0
	.quad	13792278153789454
	.quad	8589934597
	.quad	SbcpG_srt


==================== Asm code ====================
2018-03-16 16:06:10.82569756 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetContents2_closure
.type GHC.IO.Handle.Text.hGetContents2_closure, @object
GHC.IO.Handle.Text.hGetContents2_closure:
	.quad	GHC.IO.Handle.Text.hGetContents2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.826558576 UTC

.section .text
.align 8
sat_sbc1c_entry:
_cbcUR:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcUS
_cbcUT:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbcUP_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_cbcUS:
	jmp *-16(%r13)
	.size sat_sbc1c_entry, .-sat_sbc1c_entry


==================== Asm code ====================
2018-03-16 16:06:10.827216958 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbc1c_info:
	.quad	sat_sbc1c_entry
	.quad	3
	.quad	141733920783
	.quad	SbcpG_srt+136


==================== Asm code ====================
2018-03-16 16:06:10.82798415 UTC

.section .text
.align 8
_cbcUP:
_cbcUP:
	leaq block_cbcUW_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 31(%rbx),%rax
	movq 39(%rbx),%rcx
	movq 47(%rbx),%rdx
	movq 15(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbcUW
_cbcUY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcUP, .-_cbcUP


==================== Asm code ====================
2018-03-16 16:06:10.828627136 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcUP_info:
	.quad	_cbcUP
	.quad	2
	.quad	141733920798
	.quad	SbcpG_srt+136


==================== Asm code ====================
2018-03-16 16:06:10.829494944 UTC

.section .text
.align 8
_cbcUW:
_cbcUW:
	movq -1(%rbx),%rax
	cmpl $4,20(%rax)
	je _cbcV9
_cbcV4:
	movq 16(%rbp),%r9
	movq 8(%rbp),%r8
	movq 24(%rbp),%rdi
	movq %rbx,%rsi
	movq 32(%rbp),%r14
	addq $48,%rbp
	jmp $wlvl_rb6WI_entry
_cbcV9:
	movq 40(%rbp),%rax
	leaq block_cbcV7_info(%rip),%rcx
	movq %rcx,40(%rbp)
	movq %rax,%rbx
	addq $40,%rbp
	testb $7,%bl
	jne _cbcV7
_cbcVa:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcUW, .-_cbcUW


==================== Asm code ====================
2018-03-16 16:06:10.830173351 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcUW_info:
	.quad	_cbcUW
	.quad	5
	.quad	141733920798
	.quad	SbcpG_srt+136


==================== Asm code ====================
2018-03-16 16:06:10.830934613 UTC

.section .text
.align 8
_cbcV7:
_cbcV7:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cbcVj
_cbcVi:
	leaq lvl4_rb6WH_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cbcVj:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbcV7, .-_cbcV7


==================== Asm code ====================
2018-03-16 16:06:10.83157843 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcV7_info:
	.quad	_cbcV7
	.quad	0
	.quad	4294967326
	.quad	SbcpG_srt+176


==================== Asm code ====================
2018-03-16 16:06:10.832343129 UTC

.section .text
.align 8
sat_sbc1e_entry:
_cbcVn:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcVo
_cbcVp:
	leaq block_cbcUq_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rax,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbcUq
_cbcUr:
	movq (%rbx),%rax
	jmp *(%rax)
_cbcVo:
	jmp *-8(%r13)
	.size sat_sbc1e_entry, .-sat_sbc1e_entry


==================== Asm code ====================
2018-03-16 16:06:10.833070721 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbc1e_info:
	.quad	sat_sbc1e_entry
	.quad	3
	.quad	426623396478984
	.quad	8589934597
	.quad	SbcpG_srt+56


==================== Asm code ====================
2018-03-16 16:06:10.833775005 UTC

.section .text
.align 8
_cbcUq:
_cbcUq:
	leaq block_cbcUv_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Exception.$p1Exception_entry@gotpcrel(%rip)
	.size _cbcUq, .-_cbcUq


==================== Asm code ====================
2018-03-16 16:06:10.834399301 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcUq_info:
	.quad	_cbcUq
	.quad	3
	.quad	426623396479006
	.quad	SbcpG_srt+56


==================== Asm code ====================
2018-03-16 16:06:10.835061974 UTC

.section .text
.align 8
_cbcUv:
_cbcUv:
	leaq block_cbcUz_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.IO.Exception.$fExceptionIOException4_closure@gotpcrel(%rip),%rsi
	movq %rbx,%r14
	jmp *Data.Typeable.Internal.sameTypeRep_entry@gotpcrel(%rip)
	.size _cbcUv, .-_cbcUv


==================== Asm code ====================
2018-03-16 16:06:10.835670582 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcUv_info:
	.quad	_cbcUv
	.quad	5
	.quad	426623396479006
	.quad	SbcpG_srt+56


==================== Asm code ====================
2018-03-16 16:06:10.836410275 UTC

.section .text
.align 8
_cbcUz:
_cbcUz:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbcVv
_cbcVy:
	leaq block_cbcUE_info(%rip),%rax
	movq %rax,(%rbp)
	movq 32(%rbp),%r14
	jmp *GHC.IO.Handle.Internals.hClose_help1_entry@gotpcrel(%rip)
_cbcVv:
	movq 16(%rbp),%rbx
	addq $48,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _cbcUz, .-_cbcUz


==================== Asm code ====================
2018-03-16 16:06:10.837005173 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcUz_info:
	.quad	_cbcUz
	.quad	5
	.quad	416611827742
	.quad	SbcpG_srt+136


==================== Asm code ====================
2018-03-16 16:06:10.838748772 UTC

.section .text
.align 8
_cbcUE:
_cbcUE:
	leaq block_cbcUG_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbcUG
_cbcUH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcUE, .-_cbcUE


==================== Asm code ====================
2018-03-16 16:06:10.839340219 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcUE_info:
	.quad	_cbcUE
	.quad	645
	.quad	141733920798
	.quad	SbcpG_srt+136


==================== Asm code ====================
2018-03-16 16:06:10.84009243 UTC

.section .text
.align 8
_cbcUG:
_cbcUG:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _cbcVC
_cbcVB:
	movq 7(%rbx),%rax
	leaq sat_sbc1c_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcVC:
	movq $64,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbcUG, .-_cbcUG


==================== Asm code ====================
2018-03-16 16:06:10.840805577 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcUG_info:
	.quad	_cbcUG
	.quad	645
	.quad	141733920798
	.quad	SbcpG_srt+136


==================== Asm code ====================
2018-03-16 16:06:10.841609422 UTC

.section .text
.align 8
sat_sbc0b_entry:
_cbcWD:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcWE
_cbcWF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbcWA_info(%rip),%rax
	movq %rax,-64(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 32(%rbx),%rbx
	movq %rdx,-56(%rbp)
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _cbcWA
_cbcWB:
	movq (%rbx),%rax
	jmp *(%rax)
_cbcWE:
	jmp *-16(%r13)
	.size sat_sbc0b_entry, .-sat_sbc0b_entry


==================== Asm code ====================
2018-03-16 16:06:10.842297729 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbc0b_info:
	.quad	sat_sbc0b_entry
	.quad	12884901891
	.quad	15


==================== Asm code ====================
2018-03-16 16:06:10.843125291 UTC

.section .text
.align 8
_cbcWA:
_cbcWA:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbcWK
_cbcWJ:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq 7(%rbx),%rbx
	cmpq %rdi,%rbx
	je _cbcWT
_cbcWQ:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcWT:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcWK:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbcWA, .-_cbcWA


==================== Asm code ====================
2018-03-16 16:06:10.843887415 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcWA_info:
	.quad	_cbcWA
	.quad	1605
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.844640187 UTC

.section .text
.align 8
sat_sbc0I_entry:
_cbcWV:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcWW
_cbcWX:
	leaq block_cbcVL_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbcVL
_cbcVM:
	movq (%rbx),%rax
	jmp *(%rax)
_cbcWW:
	jmp *-8(%r13)
	.size sat_sbc0I_entry, .-sat_sbc0I_entry


==================== Asm code ====================
2018-03-16 16:06:10.845371145 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbc0I_info:
	.quad	sat_sbc0I_entry
	.quad	5
	.quad	70373039144968
	.quad	4294967299
	.quad	SbcpG_srt+80


==================== Asm code ====================
2018-03-16 16:06:10.846241689 UTC

.section .text
.align 8
_cbcVL:
_cbcVL:
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq %rcx,%rdx
	subq %rax,%rdx
	testq %rdx,%rdx
	je _cbcXX
_ubcYJ:
	movq 7(%rbx),%rsi
	movq 15(%rbx),%rdi
	movq 23(%rbx),%r8
	movq 31(%rbx),%rbx
	cmpq $1,%rdx
	jne _ubcYK
_cbcYa:
	leaq block_cbcY9_info(%rip),%rdx
	movq %rdx,-48(%rbp)
	movq %rbx,%rdx
	movq 32(%rbp),%rbx
	movq %rsi,-40(%rbp)
	movq %rdi,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq %r8,(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _cbcY9
_cbcYc:
	movq (%rbx),%rax
	jmp *(%rax)
_ubcYK:
	movq %rsi,-40(%rbp)
	movq %rdi,-32(%rbp)
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq %r8,(%rbp)
	addq $-40,%rbp
	jmp _cbcYi
_cbcXX:
	leaq block_cbcXU_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq 16(%rbp),%r14
	jmp *GHC.IO.Handle.Internals.hLookAhead_2_entry@gotpcrel(%rip)
	.size _cbcVL, .-_cbcVL


==================== Asm code ====================
2018-03-16 16:06:10.847063431 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcVL_info:
	.quad	_cbcVL
	.quad	4
	.quad	70373039144990
	.quad	SbcpG_srt+80


==================== Asm code ====================
2018-03-16 16:06:10.84774873 UTC

.section .text
.align 8
_cbcXU:
_cbcXU:
	leaq block_cbcXW_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbcXW
_cbcY0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcXU, .-_cbcXU


==================== Asm code ====================
2018-03-16 16:06:10.848345122 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcXU_info:
	.quad	_cbcXU
	.quad	4
	.quad	4294967326
	.quad	SbcpG_srt+192


==================== Asm code ====================
2018-03-16 16:06:10.849032566 UTC

.section .text
.align 8
_cbcXW:
_cbcXW:
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 47(%rbx),%rax
	movq %rax,-40(%rbp)
	addq $-40,%rbp
	jmp _sbbZt
	.size _cbcXW, .-_cbcXW


==================== Asm code ====================
2018-03-16 16:06:10.850116224 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcXW_info:
	.quad	_cbcXW
	.quad	4
	.quad	4294967326
	.quad	SbcpG_srt+192


==================== Asm code ====================
2018-03-16 16:06:10.85104707 UTC

.section .text
.align 8
_cbcY9:
_cbcY9:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _ubcYL
_cbcYj:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbcYo
_cbcYn:
	movq 64(%rbp),%rax
	movq 48(%rbp),%rbx
	movq 8(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq 24(%rbp),%rsi
	movq 32(%rbp),%rdi
	movq 40(%rbp),%r8
	movl (%rbx,%rdi,4),%r9d
	cmpq $13,%r9
	je _cbcYA
_cbcYs:
	addq $-56,%r12
	movq %r8,8(%rbp)
	movq %rdi,16(%rbp)
	movq %rsi,24(%rbp)
	movq %rdx,32(%rbp)
	movq %rcx,40(%rbp)
	movq %rbx,48(%rbp)
	addq $8,%rbp
	jmp _sbbZt
_ubcYL:
	addq $8,%rbp
	jmp _cbcYi
_cbcYA:
	movl $13,(%rbx)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rdi
	movq %rdi,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rbx,-24(%r12)
	movq %rsi,-16(%r12)
	movq $0,-8(%r12)
	movq $1,(%r12)
	leaq block_cbcYx_info(%rip),%rbx
	movq %rbx,48(%rbp)
	leaq -47(%r12),%rsi
	movq %rax,%r14
	addq $48,%rbp
	jmp *GHC.IO.Handle.Internals.hLookAhead_2_entry@gotpcrel(%rip)
_cbcYo:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbcY9, .-_cbcY9


==================== Asm code ====================
2018-03-16 16:06:10.85187734 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcY9_info:
	.quad	_cbcY9
	.quad	3850
	.quad	70373039144990
	.quad	SbcpG_srt+80


==================== Asm code ====================
2018-03-16 16:06:10.852505497 UTC

.section .text
.align 8
_cbcYi:
_cbcYi:
	movq 40(%rbp),%rax
	movq %rax,40(%rbp)
	movq 32(%rbp),%rax
	movq (%rbp),%rbx
	movq %rbx,32(%rbp)
	movq 24(%rbp),%rbx
	movq 8(%rbp),%rcx
	movq %rcx,24(%rbp)
	movq 16(%rbp),%rcx
	movq %rcx,16(%rbp)
	movq %rbx,8(%rbp)
	movq %rax,(%rbp)
	jmp _sbbZt
	.size _cbcYi, .-_cbcYi


==================== Asm code ====================
2018-03-16 16:06:10.853299493 UTC

.section .text
.align 8
_cbcYx:
_cbcYx:
	leaq block_cbcYz_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbcYz
_cbcYC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcYx, .-_cbcYx


==================== Asm code ====================
2018-03-16 16:06:10.853873238 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcYx_info:
	.quad	_cbcYx
	.quad	4
	.quad	4294967326
	.quad	SbcpG_srt+192


==================== Asm code ====================
2018-03-16 16:06:10.85450409 UTC

.section .text
.align 8
_cbcYz:
_cbcYz:
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 47(%rbx),%rax
	movq %rax,-40(%rbp)
	addq $-40,%rbp
	jmp _sbbZt
	.size _cbcYz, .-_cbcYz


==================== Asm code ====================
2018-03-16 16:06:10.855109085 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcYz_info:
	.quad	_cbcYz
	.quad	4
	.quad	4294967326
	.quad	SbcpG_srt+192


==================== Asm code ====================
2018-03-16 16:06:10.855773831 UTC

.section .text
.align 8
_sbbZt:
_sbbZt:
	leaq block_cbcVV_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 48(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.IO.Handle.Text.hGetContents2_entry
	.size _sbbZt, .-_sbbZt


==================== Asm code ====================
2018-03-16 16:06:10.856464392 UTC

.section .text
.align 8
_cbcVV:
_cbcVV:
	leaq block_cbcVX_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 80(%rbp),%rbx
	movq %rax,80(%rbp)
	testb $7,%bl
	jne _cbcVX
_cbcVY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcVV, .-_cbcVV


==================== Asm code ====================
2018-03-16 16:06:10.85703781 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcVV_info:
	.quad	_cbcVV
	.quad	6602
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.858451509 UTC

.section .text
.align 8
_cbcVX:
_cbcVX:
	movq 48(%rbp),%rax
	movq 40(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq 8(%rbp),%rsi
	movq 80(%rbp),%rdi
	movq %rbx,%r8
	andl $7,%r8d
	cmpq $1,%r8
	je _cbcX2
_cbcXC:
	leaq block_cbcWp_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rdi,%r9
	movq %rsi,%r8
	movq %rdx,%rdi
	movq %rcx,%rsi
	movq %rax,%r14
	jmp $wunpack_nl_rb6WF_entry
_cbcXw:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-72(%r12)
	movq %rcx,-64(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq 24(%rbp),%rax
	movq %rax,-40(%r12)
	movq $0,-32(%r12)
	movq $0,-24(%r12)
	movq 64(%rbp),%rax
	movq 72(%rbp),%rbx
	leaq -71(%r12),%rcx
	movq %rcx,8(%rbx)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rbx,%rsi
	movq %rdi,%rbx
	movq %rcx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $88,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcX2:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cbcX5
_cbcX4:
	cmpq %rsi,%rdx
	je _cbcXw
_cbcXp:
	addq $-80,%r12
	leaq -1(%rsi),%rax
	movq %rax,56(%rbp)
	movq %rdi,80(%rbp)
	addq $8,%rbp
	jmp _cbcWc
_cbcX5:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbcVX, .-_cbcVX


==================== Asm code ====================
2018-03-16 16:06:10.859329319 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcVX_info:
	.quad	_cbcVX
	.quad	6602
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.860136246 UTC

.section .text
.align 8
_cbcWc:
_cbcWc:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbcXk
_cbcXj:
	movq 72(%rbp),%rax
	movq 48(%rbp),%rbx
	cmpq 8(%rbp),%rbx
	jge _cbcXm
_cbcXn:
	addq $-40,%r12
	movq %rax,72(%rbp)
	addq $16,%rbp
	jmp _cbcX7
_cbcXm:
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq 40(%rbp),%rcx
	movl (%rcx,%rbx,4),%ecx
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rax
	movq %rax,72(%rbp)
	leaq -1(%rbx),%rax
	movq %rax,48(%rbp)
	jmp _cbcWc
_cbcXk:
	movq $40,904(%r13)
	leaq block_cbcWc_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cbcWc, .-_cbcWc


==================== Asm code ====================
2018-03-16 16:06:10.860889993 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcWc_info:
	.quad	_cbcWc
	.quad	3273
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.861786397 UTC

.section .text
.align 8
_cbcX7:
_cbcX7:
	addq $80,%r12
	movq 56(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cbcXh
_cbcXg:
	movq 40(%rbp),%rbx
	movq 48(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 16(%rbp),%rsi
	movq 8(%rbp),%rdi
	movq (%rbp),%r8
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r9
	movq %r9,-72(%r12)
	movq %rsi,-64(%r12)
	movq %rdi,-56(%r12)
	movq %rdx,-48(%r12)
	movq %r8,-40(%r12)
	movq $0,-32(%r12)
	movq $0,-24(%r12)
	leaq -71(%r12),%rdx
	movq %rdx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rdx
	movq %rcx,%rsi
	movq %rdx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcXh:
	movq $80,904(%r13)
	leaq block_cbcX6_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbcX7, .-_cbcX7


==================== Asm code ====================
2018-03-16 16:06:10.862625676 UTC

.section .text
.align 8
_cbcX6:
_cbcX6:
	movq %rbx,64(%rbp)
	addq $8,%rbp
	jmp _cbcX7
	.size _cbcX6, .-_cbcX6


==================== Asm code ====================
2018-03-16 16:06:10.863205964 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcX6_info:
	.quad	_cbcX6
	.quad	9800
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.86386559 UTC

.section .text
.align 8
_cbcWp:
_cbcWp:
	leaq block_cbcWr_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbcWr
_cbcWs:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcWp, .-_cbcWp


==================== Asm code ====================
2018-03-16 16:06:10.864436447 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcWp_info:
	.quad	_cbcWp
	.quad	39370
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.865325013 UTC

.section .text
.align 8
_cbcWr:
_cbcWr:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cbcXG
_cbcXF:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sbc0b_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq 40(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-56(%r12)
	movq %rbx,-48(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 64(%rbp),%rbx
	movq 72(%rbp),%rcx
	leaq -80(%r12),%rdx
	movq %rdx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rdx
	movq %rcx,%rsi
	movq %rdx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $88,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbcXG:
	movq $88,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbcWr, .-_cbcWr


==================== Asm code ====================
2018-03-16 16:06:10.866128807 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcWr_info:
	.quad	_cbcWr
	.quad	39370
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.866820875 UTC

.section .text
.align 8
act_sbbYX_entry:
_cbcZa:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcZb
_cbcZc:
	leaq block_cbcU9_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbcU9
_cbcUa:
	movq (%rbx),%rax
	jmp *(%rax)
_cbcZb:
	jmp *-8(%r13)
	.size act_sbbYX_entry, .-act_sbbYX_entry


==================== Asm code ====================
2018-03-16 16:06:10.867427073 UTC

.section .data.rel.ro
.align 8
.align 1
act_sbbYX_info:
	.quad	act_sbbYX_entry
	.quad	1
	.quad	1077568639860745
	.quad	8589934597
	.quad	SbcpG_srt+56


==================== Asm code ====================
2018-03-16 16:06:10.868143823 UTC

.section .text
.align 8
_cbcU9:
_cbcU9:
	leaq block_cbcUe_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rbx,%rax
	movq 71(%rbx),%rcx
	movq 111(%rbx),%rdx
	movq 39(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbcUe
_cbcUf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbcU9, .-_cbcU9


==================== Asm code ====================
2018-03-16 16:06:10.868804626 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcU9_info:
	.quad	_cbcU9
	.quad	1
	.quad	1077568639860766
	.quad	SbcpG_srt+56


==================== Asm code ====================
2018-03-16 16:06:10.869946786 UTC

.section .text
.align 8
_cbcUe:
_cbcUe:
	movq 32(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbcZk
_ubcZq:
	cmpq $2,%rcx
	je _cbcZl
_cbcZh:
	movq %rax,%r14
	addq $40,%rbp
	jmp lvl10_rb6WO_entry
_cbcZo:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbcZl:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cbcZo
_cbcZn:
	movq 8(%rbp),%rbx
	movq 8(%rbx),%rcx
	leaq sat_sbc1e_info(%rip),%rdx
	movq %rdx,-72(%r12)
	movq %rax,-64(%r12)
	movq 24(%rbp),%rdx
	movq %rdx,-56(%r12)
	movq %rcx,-48(%r12)
	leaq sat_sbc0I_info(%rip),%rsi
	movq %rsi,-40(%r12)
	movq %rax,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -70(%r12),%r14
	leaq -39(%r12),%rbx
	addq $40,%rbp
	jmp *stg_catch#@gotpcrel(%rip)
_cbcZk:
	movq %rax,%r14
	addq $40,%rbp
	jmp lvl7_rb6WL_entry
	.size _cbcUe, .-_cbcUe


==================== Asm code ====================
2018-03-16 16:06:10.870783539 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcUe_info:
	.quad	_cbcUe
	.quad	4
	.quad	1077568639860766
	.quad	SbcpG_srt+56


==================== Asm code ====================
2018-03-16 16:06:10.872058315 UTC

.section .text
.align 8
sat_sbc1l_entry:
_cbcZA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbcZB
_cbcZC:
	leaq block_cbcU2_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_noDuplicate#@gotpcrel(%rip)
_cbcZB:
	jmp *-8(%r13)
	.size sat_sbc1l_entry, .-sat_sbc1l_entry


==================== Asm code ====================
2018-03-16 16:06:10.872721204 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbc1l_info:
	.quad	sat_sbc1l_entry
	.quad	1
	.quad	2205667569958921
	.quad	4294967299
	.quad	SbcpG_srt+56


==================== Asm code ====================
2018-03-16 16:06:10.873502044 UTC

.section .text
.align 8
_cbcU2:
_cbcU2:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbcZF
_cbcZE:
	leaq act_sbbYX_info(%rip),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_cbcZt_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	leaq -6(%r12),%rax
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cbcZt
_cbcZu:
	movq (%rbx),%rax
	jmp *(%rax)
_cbcZF:
	movq $16,904(%r13)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cbcU2, .-_cbcU2


==================== Asm code ====================
2018-03-16 16:06:10.874162051 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcU2_info:
	.quad	_cbcU2
	.quad	1
	.quad	2205667569958942
	.quad	SbcpG_srt+56


==================== Asm code ====================
2018-03-16 16:06:10.874927086 UTC

.section .text
.align 8
_cbcZt:
_cbcZt:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbcZx
_cbcZy:
	movq %rax,%r8
	movq 14(%rbx),%rdi
	movq %rbx,%rsi
	leaq GHC.IO.Handle.Text.hGetContents3_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.IO.Handle.Internals.$wwithHandle'_entry@gotpcrel(%rip)
_cbcZx:
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq %rbx,%rsi
	leaq GHC.IO.Handle.Text.hGetContents3_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.IO.Handle.Internals.$wwithHandle'_entry@gotpcrel(%rip)
	.size _cbcZt, .-_cbcZt


==================== Asm code ====================
2018-03-16 16:06:10.875565067 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbcZt_info:
	.quad	_cbcZt
	.quad	1
	.quad	2203318222878
	.quad	SbcpG_srt+128


==================== Asm code ====================
2018-03-16 16:06:10.876266284 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetContents2_entry
.type GHC.IO.Handle.Text.hGetContents2_entry, @object
GHC.IO.Handle.Text.hGetContents2_entry:
_cbcZN:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbcZR
_cbcZQ:
	leaq sat_sbc1l_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%r14
	jmp *GHC.IO.Unsafe.unsafeDupableInterleaveIO_entry@gotpcrel(%rip)
_cbcZR:
	movq $16,904(%r13)
	leaq GHC.IO.Handle.Text.hGetContents2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetContents2_entry, .-GHC.IO.Handle.Text.hGetContents2_entry


==================== Asm code ====================
2018-03-16 16:06:10.876920441 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetContents2_info
.type GHC.IO.Handle.Text.hGetContents2_info, @object
GHC.IO.Handle.Text.hGetContents2_info:
	.quad	GHC.IO.Handle.Text.hGetContents2_entry
	.quad	0
	.quad	2205667569958926
	.quad	8589934597
	.quad	SbcpG_srt+56


==================== Asm code ====================
2018-03-16 16:06:10.882678968 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetContents1_closure
.type GHC.IO.Handle.Text.hGetContents1_closure, @object
GHC.IO.Handle.Text.hGetContents1_closure:
	.quad	GHC.IO.Handle.Text.hGetContents1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.883431214 UTC

.section .text
.align 8
sat_sbc1K_entry:
_cbd3T:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbd3X
_cbd3Y:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbd3Q_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbd3Q
_cbd3R:
	movq (%rbx),%rax
	jmp *(%rax)
_cbd3X:
	jmp *-16(%r13)
	.size sat_sbc1K_entry, .-sat_sbc1K_entry


==================== Asm code ====================
2018-03-16 16:06:10.884112955 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbc1K_info:
	.quad	sat_sbc1K_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:10.884993917 UTC

.section .text
.align 8
_cbd3Q:
_cbd3Q:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _cbd41
_cbd40:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 55(%rbx),%r8
	movq 63(%rbx),%r9
	movq 71(%rbx),%r10
	movq 79(%rbx),%r11
	movq 87(%rbx),%r14
	movq %rax,64(%rsp)
	movq 95(%rbx),%rax
	movq %rcx,72(%rsp)
	movq 103(%rbx),%rcx
	movq %rdx,80(%rsp)
	movq 111(%rbx),%rdx
	movq %rsi,88(%rsp)
	movq 119(%rbx),%rsi
	movq 127(%rbx),%rbx
	movq %rdi,96(%rsp)
	movq GHC.IO.Handle.Types.Handle___con_info@gotpcrel(%rip),%rdi
	movq %rdi,-128(%r12)
	movq 64(%rsp),%rdi
	movq %rdi,-120(%r12)
	movq 72(%rsp),%rdi
	movq %rdi,-112(%r12)
	movq 80(%rsp),%rdi
	movq %rdi,-104(%r12)
	movq 88(%rsp),%rdi
	movq %rdi,-96(%r12)
	movq GHC.IO.Handle.Types.SemiClosedHandle_closure@gotpcrel(%rip),%rdi
	addq $2,%rdi
	movq %rdi,-88(%r12)
	movq 96(%rsp),%rdi
	movq %rdi,-80(%r12)
	movq %r8,-72(%r12)
	movq %r9,-64(%r12)
	movq %r10,-56(%r12)
	movq %r11,-48(%r12)
	movq %r14,-40(%r12)
	movq %rax,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdx,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rbx,(%r12)
	leaq -127(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbd41:
	movq $136,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbd3Q, .-_cbd3Q


==================== Asm code ====================
2018-03-16 16:06:10.885913828 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbd3Q_info:
	.quad	_cbd3Q
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.886641542 UTC

.section .text
.align 8
sat_sbc1M_entry:
_cbd44:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbd45
_cbd46:
	leaq block_cbd3K_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq 6(%rbx),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.Handle.Text.hGetContents2_entry
_cbd45:
	jmp *-8(%r13)
	.size sat_sbc1M_entry, .-sat_sbc1M_entry


==================== Asm code ====================
2018-03-16 16:06:10.887288608 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbc1M_info:
	.quad	sat_sbc1M_entry
	.quad	1
	.quad	4294967305
	.quad	8589934597
	.quad	SbcpG_srt+192


==================== Asm code ====================
2018-03-16 16:06:10.888015594 UTC

.section .text
.align 8
_cbd3K:
_cbd3K:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbd49
_cbd48:
	leaq sat_sbc1K_info(%rip),%rax
	movq %rax,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbd49:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbd3K, .-_cbd3K


==================== Asm code ====================
2018-03-16 16:06:10.888660221 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbd3K_info:
	.quad	_cbd3K
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.889390645 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetContents1_entry
.type GHC.IO.Handle.Text.hGetContents1_entry, @object
GHC.IO.Handle.Text.hGetContents1_entry:
_cbd4a:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbd4e
_cbd4d:
	leaq sat_sbc1M_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -6(%r12),%rdi
	movq %r14,%rsi
	leaq GHC.IO.Handle.Text.hGetContents3_closure(%rip),%r14
	jmp *GHC.IO.Handle.Internals.wantReadableHandle1_entry@gotpcrel(%rip)
_cbd4e:
	movq $16,904(%r13)
	leaq GHC.IO.Handle.Text.hGetContents1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetContents1_entry, .-GHC.IO.Handle.Text.hGetContents1_entry


==================== Asm code ====================
2018-03-16 16:06:10.890049932 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetContents1_info
.type GHC.IO.Handle.Text.hGetContents1_info, @object
GHC.IO.Handle.Text.hGetContents1_info:
	.quad	GHC.IO.Handle.Text.hGetContents1_entry
	.quad	0
	.quad	14297946128398
	.quad	8589934597
	.quad	SbcpG_srt+128


==================== Asm code ====================
2018-03-16 16:06:10.892242738 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetContents_closure
.type GHC.IO.Handle.Text.hGetContents_closure, @object
GHC.IO.Handle.Text.hGetContents_closure:
	.quad	GHC.IO.Handle.Text.hGetContents_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.892886777 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetContents_entry
.type GHC.IO.Handle.Text.hGetContents_entry, @object
GHC.IO.Handle.Text.hGetContents_entry:
_cbd4P:
	jmp GHC.IO.Handle.Text.hGetContents1_entry
	.size GHC.IO.Handle.Text.hGetContents_entry, .-GHC.IO.Handle.Text.hGetContents_entry


==================== Asm code ====================
2018-03-16 16:06:10.893484348 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetContents_info
.type GHC.IO.Handle.Text.hGetContents_info, @object
GHC.IO.Handle.Text.hGetContents_info:
	.quad	GHC.IO.Handle.Text.hGetContents_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbcpG_srt+216


==================== Asm code ====================
2018-03-16 16:06:10.897025433 UTC

.section .data
.align 8
.align 1
go_rb6WP_closure:
	.quad	go_rb6WP_info


==================== Asm code ====================
2018-03-16 16:06:10.898084829 UTC

.section .text
.align 8
sat_sbc1R_entry:
_cbd5a:
	movq 16(%rbx),%r14
	jmp go_rb6WP_entry
	.size sat_sbc1R_entry, .-sat_sbc1R_entry


==================== Asm code ====================
2018-03-16 16:06:10.898648962 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbc1R_info:
	.quad	sat_sbc1R_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:10.899380819 UTC

.section .text
.align 8
go_rb6WP_entry:
_cbd5h:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbd5i
_cbd5j:
	leaq block_cbd50_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbd50
_cbd51:
	movq (%rbx),%rax
	jmp *(%rax)
_cbd5i:
	leaq go_rb6WP_closure(%rip),%rbx
	jmp *-8(%r13)
	.size go_rb6WP_entry, .-go_rb6WP_entry


==================== Asm code ====================
2018-03-16 16:06:10.899990469 UTC

.section .data.rel.ro
.align 8
.align 1
go_rb6WP_info:
	.quad	go_rb6WP_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:06:10.900763921 UTC

.section .text
.align 8
_cbd50:
_cbd50:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbd5e
_cbd5f:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbd5o
_cbd5n:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	leaq sat_sbc1R_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_cbd5o:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbd5e:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbd50, .-_cbd50


==================== Asm code ====================
2018-03-16 16:06:10.901485246 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbd50_info:
	.quad	_cbd50
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.904880359 UTC

.section .data
.align 8
.align 1
go1_rb6WQ_closure:
	.quad	go1_rb6WQ_info


==================== Asm code ====================
2018-03-16 16:06:10.90551941 UTC

.section .text
.align 8
sat_sbc1W_entry:
_cbd5W:
	movq 16(%rbx),%r14
	jmp go1_rb6WQ_entry
	.size sat_sbc1W_entry, .-sat_sbc1W_entry


==================== Asm code ====================
2018-03-16 16:06:10.906090998 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbc1W_info:
	.quad	sat_sbc1W_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:10.906811641 UTC

.section .text
.align 8
go1_rb6WQ_entry:
_cbd63:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbd64
_cbd65:
	leaq block_cbd5M_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbd5M
_cbd5N:
	movq (%rbx),%rax
	jmp *(%rax)
_cbd64:
	leaq go1_rb6WQ_closure(%rip),%rbx
	jmp *-8(%r13)
	.size go1_rb6WQ_entry, .-go1_rb6WQ_entry


==================== Asm code ====================
2018-03-16 16:06:10.907470374 UTC

.section .data.rel.ro
.align 8
.align 1
go1_rb6WQ_info:
	.quad	go1_rb6WQ_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:06:10.908235652 UTC

.section .text
.align 8
_cbd5M:
_cbd5M:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbd60
_cbd61:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbd6a
_cbd69:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	leaq sat_sbc1W_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_cbd6a:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbd60:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbd5M, .-_cbd5M


==================== Asm code ====================
2018-03-16 16:06:10.91023056 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbd5M_info:
	.quad	_cbd5M
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.938887479 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whGetLineBufferedLoop_closure
.type GHC.IO.Handle.Text.$whGetLineBufferedLoop_closure, @object
GHC.IO.Handle.Text.$whGetLineBufferedLoop_closure:
	.quad	GHC.IO.Handle.Text.$whGetLineBufferedLoop_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.939653808 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$whGetLineBufferedLoop_slow
.type GHC.IO.Handle.Text.$whGetLineBufferedLoop_slow, @object
GHC.IO.Handle.Text.$whGetLineBufferedLoop_slow:
_cbd6v:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Text.$whGetLineBufferedLoop_entry
	.size GHC.IO.Handle.Text.$whGetLineBufferedLoop_slow, .-GHC.IO.Handle.Text.$whGetLineBufferedLoop_slow


==================== Asm code ====================
2018-03-16 16:06:10.940508154 UTC

.section .text
.align 8
buf1_sbc2w_entry:
_cbd7O:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cbd7P
_cbd7Q:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbd7L_info(%rip),%rax
	movq %rax,-64(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 56(%rbx),%rdi
	movq 32(%rbx),%rbx
	movq %rdx,-56(%rbp)
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _cbd7L
_cbd7M:
	movq (%rbx),%rax
	jmp *(%rax)
_cbd7P:
	jmp *-16(%r13)
	.size buf1_sbc2w_entry, .-buf1_sbc2w_entry


==================== Asm code ====================
2018-03-16 16:06:10.94121924 UTC

.section .data.rel.ro
.align 8
.align 1
buf1_sbc2w_info:
	.quad	buf1_sbc2w_entry
	.quad	12884901891
	.quad	15


==================== Asm code ====================
2018-03-16 16:06:10.942088187 UTC

.section .text
.align 8
_cbd7L:
_cbd7L:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbd7V
_cbd7U:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq 7(%rbx),%rbx
	cmpq %rdi,%rbx
	je _cbd84
_cbd81:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbd84:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbd7V:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbd7L, .-_cbd7L


==================== Asm code ====================
2018-03-16 16:06:10.942865373 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbd7L_info:
	.quad	_cbd7L
	.quad	1605
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.943588039 UTC

.section .text
.align 8
sat_sbc33_entry:
_cbd8c:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cbd8d
_cbd8e:
	leaq block_cbd89_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbd89
_cbd8a:
	movq (%rbx),%rax
	jmp *(%rax)
_cbd8d:
	jmp *-8(%r13)
	.size sat_sbc33_entry, .-sat_sbc33_entry


==================== Asm code ====================
2018-03-16 16:06:10.944245176 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbc33_info:
	.quad	sat_sbc33_entry
	.quad	3
	.quad	4294967304
	.quad	4294967299
	.quad	SbcpG_srt+80


==================== Asm code ====================
2018-03-16 16:06:10.945125506 UTC

.section .text
.align 8
_cbd89:
_cbd89:
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	subq %rax,%rcx
	testq %rcx,%rcx
	je _cbd8B
_ubd9k:
	cmpq $1,%rcx
	je _cbd8L
_ubd9l:
	movq %rcx,8(%rbp)
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _cbd8m
_cbd8L:
	leaq block_cbd8K_info(%rip),%rcx
	movq %rcx,-40(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rsi
	movq 23(%rbx),%rdi
	movq 31(%rbx),%rbx
	movq %rbx,%r8
	movq 16(%rbp),%rbx
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rdi,(%rbp)
	movq %rcx,16(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbd8K
_cbd8N:
	movq (%rbx),%rax
	jmp *(%rax)
_cbd8B:
	leaq block_cbd8y_info(%rip),%rax
	movq %rax,16(%rbp)
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp *GHC.IO.Handle.Internals.hLookAhead_2_entry@gotpcrel(%rip)
	.size _cbd89, .-_cbd89


==================== Asm code ====================
2018-03-16 16:06:10.945950809 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbd89_info:
	.quad	_cbd89
	.quad	2
	.quad	4294967326
	.quad	SbcpG_srt+80


==================== Asm code ====================
2018-03-16 16:06:10.946648852 UTC

.section .text
.align 8
_cbd8y:
_cbd8y:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbd8F
_cbd8E:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbd8F:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbd8y, .-_cbd8y


==================== Asm code ====================
2018-03-16 16:06:10.947291978 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbd8y_info:
	.quad	_cbd8y
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.94831711 UTC

.section .text
.align 8
_cbd8K:
_cbd8K:
	movq 56(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbd8T
_cbd8X:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbd92
_cbd91:
	movq 48(%rbp),%rbx
	movq 40(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq 16(%rbp),%rsi
	movq 24(%rbp),%rdi
	movq 32(%rbp),%r8
	movl (%rcx,%r8,4),%r8d
	cmpq $13,%r8
	je _cbd9f
_cbd98:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-40(%r12)
	leaq -46(%r12),%rax
	addq $-40,%r12
	movq %rax,%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbd9f:
	movl $13,(%rcx)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq %rdx,-40(%r12)
	movq %rsi,-32(%r12)
	movq %rcx,-24(%r12)
	movq %rdi,-16(%r12)
	movq $0,-8(%r12)
	movq $1,(%r12)
	leaq block_cbd9c_info(%rip),%rax
	movq %rax,56(%rbp)
	leaq -47(%r12),%rsi
	movq %rbx,%r14
	addq $56,%rbp
	jmp *GHC.IO.Handle.Internals.hLookAhead_2_entry@gotpcrel(%rip)
_cbd92:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbd8W:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbd8T:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbd8W
_cbd8V:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbd8K, .-_cbd8K


==================== Asm code ====================
2018-03-16 16:06:10.949213335 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbd8K_info:
	.quad	_cbd8K
	.quad	1799
	.quad	4294967326
	.quad	SbcpG_srt+80


==================== Asm code ====================
2018-03-16 16:06:10.949963474 UTC

.section .text
.align 8
_cbd9c:
_cbd9c:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbd9i
_cbd9h:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbd9i:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbd9c, .-_cbd9c


==================== Asm code ====================
2018-03-16 16:06:10.9505808 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbd9c_info:
	.quad	_cbd9c
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.951230948 UTC

.section .text
.align 8
_cbd8m:
_cbd8m:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbd8t
_cbd8s:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbd8t:
	movq $16,904(%r13)
	movq (%rbp),%rax
	leaq block_cbd8l_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbd8m, .-_cbd8m


==================== Asm code ====================
2018-03-16 16:06:10.951913951 UTC

.section .text
.align 8
_cbd8l:
_cbd8l:
	movq %rbx,(%rbp)
	jmp _cbd8m
	.size _cbd8l, .-_cbd8l


==================== Asm code ====================
2018-03-16 16:06:10.952419702 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbd8l_info:
	.quad	_cbd8l
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.953164813 UTC

.section .text
.align 8
sat_sbc3f_entry:
_cbd9z:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbd9D
_cbd9E:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbd9w_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbd9w
_cbd9x:
	movq (%rbx),%rax
	jmp *(%rax)
_cbd9D:
	jmp *-16(%r13)
	.size sat_sbc3f_entry, .-sat_sbc3f_entry


==================== Asm code ====================
2018-03-16 16:06:10.953847846 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbc3f_info:
	.quad	sat_sbc3f_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:10.954606343 UTC

.section .text
.align 8
_cbd9w:
_cbd9w:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbd9H
_cbd9G:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rsi
	movq %rsi,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbd9H:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbd9w, .-_cbd9w


==================== Asm code ====================
2018-03-16 16:06:10.955289966 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbd9w_info:
	.quad	_cbd9w
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.956013492 UTC

.section .text
.align 8
sat_sbc3p_entry:
_cbd9U:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbd9V
_cbd9W:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbd9R_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbd9R
_cbd9S:
	movq (%rbx),%rax
	jmp *(%rax)
_cbd9V:
	jmp *-16(%r13)
	.size sat_sbc3p_entry, .-sat_sbc3p_entry


==================== Asm code ====================
2018-03-16 16:06:10.956704294 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbc3p_info:
	.quad	sat_sbc3p_entry
	.quad	1
	.quad	4294967312
	.quad	SbcpG_srt+176


==================== Asm code ====================
2018-03-16 16:06:10.957659374 UTC

.section .text
.align 8
_cbd9R:
_cbd9R:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cbda4
_cbda3:
	leaq lvl4_rb6WH_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cbda4:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbd9R, .-_cbd9R


==================== Asm code ====================
2018-03-16 16:06:10.958313662 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbd9R_info:
	.quad	_cbd9R
	.quad	0
	.quad	4294967326
	.quad	SbcpG_srt+176


==================== Asm code ====================
2018-03-16 16:06:10.959212914 UTC

.section .text
.align 8
sat_sbc3H_entry:
_cbdae:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdaf
_cbdag:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbdai
_cbdah:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	incq %rbx
	cmpq %rdi,%rbx
	je _cbdas
_cbdap:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdas:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdai:
	movq $56,904(%r13)
_cbdaf:
	jmp *-16(%r13)
	.size sat_sbc3H_entry, .-sat_sbc3H_entry


==================== Asm code ====================
2018-03-16 16:06:10.960034013 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbc3H_info:
	.quad	sat_sbc3H_entry
	.quad	17179869186
	.quad	15


==================== Asm code ====================
2018-03-16 16:06:10.960834411 UTC

.section .text
.align 8
sat_sbc3L_entry:
_cbdaD:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdaE
_cbdaF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbdaH
_cbdaG:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq block_cbdaB_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	leaq -14(%r12),%r14
	addq $-24,%rbp
	jmp *GHC.List.reverse1_entry@gotpcrel(%rip)
_cbdaH:
	movq $24,904(%r13)
_cbdaE:
	jmp *-16(%r13)
	.size sat_sbc3L_entry, .-sat_sbc3L_entry


==================== Asm code ====================
2018-03-16 16:06:10.96160335 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbc3L_info:
	.quad	sat_sbc3L_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:06:10.96219963 UTC

.section .text
.align 8
_cbdaB:
_cbdaB:
	movq %rbx,%r14
	addq $8,%rbp
	jmp go_rb6WP_entry
	.size _cbdaB, .-_cbdaB


==================== Asm code ====================
2018-03-16 16:06:10.962755842 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdaB_info:
	.quad	_cbdaB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:10.963518939 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$whGetLineBufferedLoop_entry
.type GHC.IO.Handle.Text.$whGetLineBufferedLoop_entry, @object
GHC.IO.Handle.Text.$whGetLineBufferedLoop_entry:
_cbdaL:
	leaq -96(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdaM
_ubdcD:
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp _cbd6w
_cbdaM:
	leaq GHC.IO.Handle.Text.$whGetLineBufferedLoop_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.$whGetLineBufferedLoop_entry, .-GHC.IO.Handle.Text.$whGetLineBufferedLoop_entry


==================== Asm code ====================
2018-03-16 16:06:10.964204907 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whGetLineBufferedLoop_info
.type GHC.IO.Handle.Text.$whGetLineBufferedLoop_info, @object
GHC.IO.Handle.Text.$whGetLineBufferedLoop_info:
	.quad	GHC.IO.Handle.Text.$whGetLineBufferedLoop_entry
	.quad	0
	.quad	6790596698046478
	.quad	38654705664
	.quad	SbcpG_srt+72
	.quad	7304
	.quad	GHC.IO.Handle.Text.$whGetLineBufferedLoop_slow


==================== Asm code ====================
2018-03-16 16:06:10.964917171 UTC

.section .text
.align 8
_cbd6w:
_cbd6w:
	movq (%rbp),%rax
	leaq block_cbd6z_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbd6z
_cbd6A:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbd6w, .-_cbd6w


==================== Asm code ====================
2018-03-16 16:06:10.965744436 UTC

.section .text
.align 8
_cbd6z:
_cbd6z:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbdaQ
_cbdaP:
	movq 71(%rbx),%rax
	movq 111(%rbx),%rcx
	movq GHC.ForeignPtr.ForeignPtr_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-16(%r12)
	movq 16(%rbp),%rdx
	movq %rdx,-8(%r12)
	movq 8(%rbp),%rdx
	movq %rdx,(%r12)
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-16(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-32,%rbp
	jmp _cbdcc
_cbdaQ:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbd6z, .-_cbd6z


==================== Asm code ====================
2018-03-16 16:06:10.966445939 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbd6z_info:
	.quad	_cbd6z
	.quad	3655
	.quad	2286997070675998
	.quad	SbcpG_srt+72


==================== Asm code ====================
2018-03-16 16:06:10.967230524 UTC

.section .text
.align 8
_cbdcc:
_cbdcc:
	movq 80(%rbp),%rax
	cmpq 24(%rbp),%rax
	je _cbdcw
_cbdcl:
	leaq block_cbdcj_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbdcj
_cbdcm:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdcw:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rbx,24(%rbp)
	movq %rax,16(%rbp)
	jmp _sbc2n
	.size _cbdcc, .-_cbdcc


==================== Asm code ====================
2018-03-16 16:06:10.968781349 UTC

.section .text
.align 8
_cbdcj:
_cbdcj:
	movq 32(%rbp),%rax
	movq 15(%rbx),%rcx
	movl (%rcx,%rax,4),%ecx
	cmpq $10,%rcx
	je _cbdcv
_cbdcu:
	movq %rbx,24(%rbp)
	incq %rax
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp _cbdcc
_cbdcv:
	movq %rax,24(%rbp)
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp _sbc2n
	.size _cbdcj, .-_cbdcj


==================== Asm code ====================
2018-03-16 16:06:10.969893776 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdcj_info:
	.quad	_cbdcj
	.quad	117516
	.quad	2286997070675998
	.quad	SbcpG_srt+72


==================== Asm code ====================
2018-03-16 16:06:10.97054887 UTC

.section .text
.align 8
_sbc2n:
_sbc2n:
	leaq block_cbd6M_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbd6M
_cbd6N:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbc2n, .-_sbc2n


==================== Asm code ====================
2018-03-16 16:06:10.971433739 UTC

.section .text
.align 8
_cbd6M:
_cbd6M:
	movq 80(%rbp),%rax
	movq 24(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _cbdbv
_cbdbR:
	leaq block_cbdbN_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rbx
	leaq 1(%rbx),%r9
	movq %rcx,%r8
	movq %rax,%rdi
	movq 56(%rbp),%rsi
	movq 48(%rbp),%r14
	jmp $wunpack_nl_rb6WF_entry
_cbdbK:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,80(%rbp)
	leaq -7(%r12),%rax
	movq %rax,(%rbp)
	jmp _sbc2r
_cbdbv:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbdby
_cbdbx:
	cmpq %rcx,%rax
	je _cbdbK
_cbdbJ:
	addq $-16,%r12
	leaq -1(%rcx),%rax
	movq %rax,-8(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp _cbd7y
_cbdby:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbd6M, .-_cbd6M


==================== Asm code ====================
2018-03-16 16:06:10.972201438 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbd6M_info:
	.quad	_cbd6M
	.quad	117004
	.quad	2286997070675998
	.quad	SbcpG_srt+72


==================== Asm code ====================
2018-03-16 16:06:10.972992047 UTC

.section .text
.align 8
_cbd7y:
_cbd7y:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbdbE
_cbdbD:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rbx
	cmpq 96(%rbp),%rbx
	jge _cbdbG
_cbdbH:
	addq $-40,%r12
	movq %rax,96(%rbp)
	addq $24,%rbp
	jmp _cbd7s
_cbdbG:
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq 64(%rbp),%rcx
	movl (%rcx,%rbx,4),%ecx
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rax
	movq %rax,16(%rbp)
	leaq -1(%rbx),%rax
	movq %rax,8(%rbp)
	jmp _cbd7y
_cbdbE:
	movq $40,904(%r13)
	leaq block_cbd7y_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cbd7y, .-_cbd7y


==================== Asm code ====================
2018-03-16 16:06:10.973772128 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbd7y_info:
	.quad	_cbd7y
	.quad	468046
	.quad	2286997070675998
	.quad	SbcpG_srt+72


==================== Asm code ====================
2018-03-16 16:06:10.974498214 UTC

.section .text
.align 8
_cbd7s:
_cbd7s:
	addq $16,%r12
	movq 72(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cbdbB
_cbdbA:
	movq 16(%rbp),%rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,72(%rbp)
	leaq -7(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp _sbc2r
_cbdbB:
	movq $16,904(%r13)
	leaq block_cbd7r_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbd7s, .-_cbd7s


==================== Asm code ====================
2018-03-16 16:06:10.975230711 UTC

.section .text
.align 8
_cbd7r:
_cbd7r:
	movq %rbx,80(%rbp)
	addq $8,%rbp
	jmp _cbd7s
	.size _cbd7r, .-_cbd7r


==================== Asm code ====================
2018-03-16 16:06:10.975758449 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbd7r_info:
	.quad	_cbd7r
	.quad	117004
	.quad	2286997070675998
	.quad	SbcpG_srt+72


==================== Asm code ====================
2018-03-16 16:06:10.976433841 UTC

.section .text
.align 8
_cbdbN:
_cbdbN:
	leaq block_cbdbP_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbdbP
_cbdbT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdbN, .-_cbdbN


==================== Asm code ====================
2018-03-16 16:06:10.977011535 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdbN_info:
	.quad	_cbdbN
	.quad	117004
	.quad	2286997070675998
	.quad	SbcpG_srt+72


==================== Asm code ====================
2018-03-16 16:06:10.977591322 UTC

.section .text
.align 8
_cbdbP:
_cbdbP:
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,80(%rbp)
	jmp _sbc2r
	.size _cbdbP, .-_cbdbP


==================== Asm code ====================
2018-03-16 16:06:10.978138512 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdbP_info:
	.quad	_cbdbP
	.quad	117004
	.quad	2286997070675998
	.quad	SbcpG_srt+72


==================== Asm code ====================
2018-03-16 16:06:10.978810063 UTC

.section .text
.align 8
_sbc2r:
_sbc2r:
	leaq block_cbd6Z_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 32(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbd6Z
_cbd70:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbc2r, .-_sbc2r


==================== Asm code ====================
2018-03-16 16:06:10.979967062 UTC

.section .text
.align 8
_cbd6Z:
_cbd6Z:
	movq 56(%rbp),%rax
	movq 64(%rbp),%rcx
	movq 72(%rbp),%rdx
	movq 80(%rbp),%rsi
	movq 96(%rbp),%rdi
	movq %rbx,%r8
	andl $7,%r8d
	cmpq $1,%r8
	je _cbdaU
_cbdbq:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cbdbt
_cbdbs:
	leaq sat_sbc3H_info(%rip),%rbx
	movq %rbx,-88(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq %rax,-56(%r12)
	movq %rsi,-48(%r12)
	movq %rdi,-40(%r12)
	movq 32(%rbp),%rax
	movq %rax,-32(%r12)
	movq 104(%rbp),%rax
	movq 16(%rbp),%rbx
	movq 88(%rbp),%rcx
	leaq -88(%r12),%rdx
	movq %rdx,8(%rbx)
	subq $8,%rsp
	movq %r13,%rdx
	movq %rbx,%rsi
	movq %rdx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq sat_sbc3L_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -24(%r12),%rbx
	addq $112,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdbt:
	movq $96,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbdaU:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cbdbt
_cbdaW:
	leaq buf1_sbc2w_info(%rip),%rbx
	movq %rbx,-88(%r12)
	movq %rcx,-72(%r12)
	movq %rdx,-64(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq %rax,-48(%r12)
	movq %rsi,-40(%r12)
	movq %rdi,-32(%r12)
	leaq sat_sbc33_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 48(%rbp),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	leaq -88(%r12),%rax
	movq %rax,(%r12)
	leaq block_cbd78_info(%rip),%rbx
	movq %rbx,8(%rbp)
	leaq GHC.IO.Handle.Text.hGetChar3_closure+2(%rip),%r14
	leaq -23(%r12),%rbx
	movq %rax,96(%rbp)
	addq $8,%rbp
	jmp *stg_catch#@gotpcrel(%rip)
	.size _cbd6Z, .-_cbd6Z


==================== Asm code ====================
2018-03-16 16:06:10.980917565 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbd6Z_info:
	.quad	_cbd6Z
	.quad	169485
	.quad	2286997070675998
	.quad	SbcpG_srt+72


==================== Asm code ====================
2018-03-16 16:06:10.9819543 UTC

.section .text
.align 8
_cbd78:
_cbd78:
	leaq block_cbd7a_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbd7a
_cbd7b:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbd78, .-_cbd78


==================== Asm code ====================
2018-03-16 16:06:10.982525673 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbd78_info:
	.quad	_cbd78
	.quad	31628
	.quad	2286997070675998
	.quad	SbcpG_srt+72


==================== Asm code ====================
2018-03-16 16:06:10.983565372 UTC

.section .text
.align 8
_cbd7a:
_cbd7a:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbdb2
_cbdbm:
	leaq block_cbd7g_info(%rip),%rax
	movq %rax,32(%rbp)
	movq 6(%rbx),%rbx
	addq $32,%rbp
	testb $7,%bl
	jne _cbd7g
_cbd7h:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdb5:
	movq $96,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbdb2:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _cbdb5
_cbdb4:
	leaq sat_sbc3f_info(%rip),%rax
	movq %rax,-88(%r12)
	movq 88(%rbp),%rax
	movq %rax,-72(%r12)
	movq 96(%rbp),%rbx
	movq 8(%rbp),%rcx
	movq 80(%rbp),%rdx
	leaq -88(%r12),%rsi
	movq %rsi,8(%rcx)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rcx,%rsi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-64(%r12)
	movq 64(%rsp),%rax
	movq %rax,-56(%r12)
	movq %rbx,-48(%r12)
	leaq sat_sbc3p_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -62(%r12),%rax
	movq %rax,(%r12)
	leaq block_cbdb0_info(%rip),%rax
	movq %rax,96(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	leaq -14(%r12),%r14
	addq $96,%rbp
	jmp *GHC.List.reverse1_entry@gotpcrel(%rip)
	.size _cbd7a, .-_cbd7a


==================== Asm code ====================
2018-03-16 16:06:10.984427255 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbd7a_info:
	.quad	_cbd7a
	.quad	31628
	.quad	2286997070675998
	.quad	SbcpG_srt+72


==================== Asm code ====================
2018-03-16 16:06:10.985059939 UTC

.section .text
.align 8
_cbdb0:
_cbdb0:
	leaq block_cbdb9_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp go1_rb6WQ_entry
	.size _cbdb0, .-_cbdb0


==================== Asm code ====================
2018-03-16 16:06:10.985636366 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdb0_info:
	.quad	_cbdb0
	.quad	0
	.quad	4294967326
	.quad	SbcpG_srt+224


==================== Asm code ====================
2018-03-16 16:06:10.986322317 UTC

.section .text
.align 8
_cbdb9:
_cbdb9:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbdbg
_cbdbk:
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdbg:
	addq $8,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_EOF1_entry@gotpcrel(%rip)
	.size _cbdb9, .-_cbdb9


==================== Asm code ====================
2018-03-16 16:06:10.986906351 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdb9_info:
	.quad	_cbdb9
	.quad	0
	.quad	4294967326
	.quad	SbcpG_srt+224


==================== Asm code ====================
2018-03-16 16:06:10.987669768 UTC

.section .text
.align 8
_cbd7g:
_cbd7g:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbdbp
_cbdbo:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq :_con_info@gotpcrel(%rip),%r8
	movq %r8,-16(%r12)
	movq 48(%rbp),%r8
	movq %r8,-8(%r12)
	movq 64(%rbp),%r8
	movq %r8,(%r12)
	movq 8(%rbp),%r8
	movq %r8,8(%rbp)
	movq %rdx,16(%rbp)
	movq %rax,24(%rbp)
	movq %rcx,32(%rbp)
	movq %rsi,40(%rbp)
	movq %rdi,48(%rbp)
	movq %rbx,56(%rbp)
	leaq -14(%r12),%rax
	movq %rax,64(%rbp)
	addq $8,%rbp
	jmp _cbd6w
_cbdbp:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbd7g, .-_cbd7g


==================== Asm code ====================
2018-03-16 16:06:10.98837909 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbd7g_info:
	.quad	_cbd7g
	.quad	6024
	.quad	2286997070675998
	.quad	SbcpG_srt+72


==================== Asm code ====================
2018-03-16 16:06:10.991653453 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetLine3_closure
.type GHC.IO.Handle.Text.hGetLine3_closure, @object
GHC.IO.Handle.Text.hGetLine3_closure:
	.quad	GHC.IO.Handle.Text.hGetLine3_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.992446721 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetLine3_entry
.type GHC.IO.Handle.Text.hGetLine3_entry, @object
GHC.IO.Handle.Text.hGetLine3_entry:
_cbdhe:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdhf
_cbdhg:
	leaq block_cbdhb_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbdhb
_cbdhc:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdhf:
	leaq GHC.IO.Handle.Text.hGetLine3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetLine3_entry, .-GHC.IO.Handle.Text.hGetLine3_entry


==================== Asm code ====================
2018-03-16 16:06:10.99312482 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetLine3_info
.type GHC.IO.Handle.Text.hGetLine3_info, @object
GHC.IO.Handle.Text.hGetLine3_info:
	.quad	GHC.IO.Handle.Text.hGetLine3_entry
	.quad	0
	.quad	12884901902
	.quad	17179869207
	.quad	SbcpG_srt+232


==================== Asm code ====================
2018-03-16 16:06:10.994232461 UTC

.section .text
.align 8
_cbdhb:
_cbdhb:
	movq 31(%rbx),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,8(%rbp)
	jmp GHC.IO.Handle.Text.$whGetLineBufferedLoop_entry
	.size _cbdhb, .-_cbdhb


==================== Asm code ====================
2018-03-16 16:06:10.994847141 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdhb_info:
	.quad	_cbdhb
	.quad	2
	.quad	4294967326
	.quad	SbcpG_srt+232


==================== Asm code ====================
2018-03-16 16:06:10.996471089 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.hGetLine5_bytes
.type GHC.IO.Handle.Text.hGetLine5_bytes, @object
GHC.IO.Handle.Text.hGetLine5_bytes:
	.asciz "hGetLine"


==================== Asm code ====================
2018-03-16 16:06:10.999004218 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetLine4_closure
.type GHC.IO.Handle.Text.hGetLine4_closure, @object
GHC.IO.Handle.Text.hGetLine4_closure:
	.quad	GHC.IO.Handle.Text.hGetLine4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:10.999828001 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetLine4_entry
.type GHC.IO.Handle.Text.hGetLine4_entry, @object
GHC.IO.Handle.Text.hGetLine4_entry:
_cbdhE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdhF
_cbdhG:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbdhD
_cbdhC:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Text.hGetLine5_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbdhF:
	jmp *-16(%r13)
_cbdhD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.hGetLine4_entry, .-GHC.IO.Handle.Text.hGetLine4_entry


==================== Asm code ====================
2018-03-16 16:06:11.000524438 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetLine4_info
.type GHC.IO.Handle.Text.hGetLine4_info, @object
GHC.IO.Handle.Text.hGetLine4_info:
	.quad	GHC.IO.Handle.Text.hGetLine4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:11.004524943 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetLine2_closure
.type GHC.IO.Handle.Text.hGetLine2_closure, @object
GHC.IO.Handle.Text.hGetLine2_closure:
	.quad	GHC.IO.Handle.Text.hGetLine2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.005658251 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetLine2_entry
.type GHC.IO.Handle.Text.hGetLine2_entry, @object
GHC.IO.Handle.Text.hGetLine2_entry:
_cbdhW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdi0
_cbdi1:
	leaq block_cbdhT_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbdhT
_cbdhU:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdi0:
	leaq GHC.IO.Handle.Text.hGetLine2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetLine2_entry, .-GHC.IO.Handle.Text.hGetLine2_entry


==================== Asm code ====================
2018-03-16 16:06:11.006303458 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetLine2_info
.type GHC.IO.Handle.Text.hGetLine2_info, @object
GHC.IO.Handle.Text.hGetLine2_info:
	.quad	GHC.IO.Handle.Text.hGetLine2_entry
	.quad	0
	.quad	21474836494
	.quad	8589934597
	.quad	SbcpG_srt+232


==================== Asm code ====================
2018-03-16 16:06:11.007001568 UTC

.section .text
.align 8
_cbdhT:
_cbdhT:
	movq 71(%rbx),%rax
	movq 8(%rax),%rax
	leaq block_cbdhZ_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbdhZ
_cbdi3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdhT, .-_cbdhT


==================== Asm code ====================
2018-03-16 16:06:11.007620429 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdhT_info:
	.quad	_cbdhT
	.quad	0
	.quad	4294967326
	.quad	SbcpG_srt+232


==================== Asm code ====================
2018-03-16 16:06:11.008316749 UTC

.section .text
.align 8
_cbdhZ:
_cbdhZ:
	movq 31(%rbx),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 23(%rbx),%rsi
	movq 8(%rbp),%r14
	movq 39(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp GHC.IO.Handle.Text.$whGetLineBufferedLoop_entry
	.size _cbdhZ, .-_cbdhZ


==================== Asm code ====================
2018-03-16 16:06:11.008939577 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdhZ_info:
	.quad	_cbdhZ
	.quad	1
	.quad	4294967326
	.quad	SbcpG_srt+232


==================== Asm code ====================
2018-03-16 16:06:11.010934883 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetLine1_closure
.type GHC.IO.Handle.Text.hGetLine1_closure, @object
GHC.IO.Handle.Text.hGetLine1_closure:
	.quad	GHC.IO.Handle.Text.hGetLine1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.011583284 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetLine1_entry
.type GHC.IO.Handle.Text.hGetLine1_entry, @object
GHC.IO.Handle.Text.hGetLine1_entry:
_cbdiy:
	leaq GHC.IO.Handle.Text.hGetLine2_closure+2(%rip),%rdi
	movq %r14,%rsi
	leaq GHC.IO.Handle.Text.hGetLine4_closure(%rip),%r14
	jmp *GHC.IO.Handle.Internals.wantReadableHandle_1_entry@gotpcrel(%rip)
	.size GHC.IO.Handle.Text.hGetLine1_entry, .-GHC.IO.Handle.Text.hGetLine1_entry


==================== Asm code ====================
2018-03-16 16:06:11.012192823 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetLine1_info
.type GHC.IO.Handle.Text.hGetLine1_info, @object
GHC.IO.Handle.Text.hGetLine1_info:
	.quad	GHC.IO.Handle.Text.hGetLine1_entry
	.quad	0
	.quad	6755403736023054
	.quad	8589934597
	.quad	SbcpG_srt+96


==================== Asm code ====================
2018-03-16 16:06:11.014210307 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetLine_closure
.type GHC.IO.Handle.Text.hGetLine_closure, @object
GHC.IO.Handle.Text.hGetLine_closure:
	.quad	GHC.IO.Handle.Text.hGetLine_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.014820118 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetLine_entry
.type GHC.IO.Handle.Text.hGetLine_entry, @object
GHC.IO.Handle.Text.hGetLine_entry:
_cbdiJ:
	jmp GHC.IO.Handle.Text.hGetLine1_entry
	.size GHC.IO.Handle.Text.hGetLine_entry, .-GHC.IO.Handle.Text.hGetLine_entry


==================== Asm code ====================
2018-03-16 16:06:11.015361054 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetLine_info
.type GHC.IO.Handle.Text.hGetLine_info, @object
GHC.IO.Handle.Text.hGetLine_info:
	.quad	GHC.IO.Handle.Text.hGetLine_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbcpG_srt+264


==================== Asm code ====================
2018-03-16 16:06:11.019390308 UTC

.section .data
.align 8
.align 1
lvl11_rb6WR_closure:
	.quad	lvl11_rb6WR_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.020247709 UTC

.section .text
.align 8
lvl11_rb6WR_entry:
_cbdj1:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdj2
_cbdj3:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbdiV
_cbdiU:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_cbdiW_info(%rip),%rax
	movq %rax,-24(%rbp)
	xorl %r9d,%r9d
	movq GHC.IO.FD.$tcFD1_closure@gotpcrel(%rip),%r8
	movq GHC.IO.FD.$trModule_closure@gotpcrel(%rip),%rdi
	movq $-2900453971751795240,%rsi
	movq $-7607928521190512554,%r14
	movq GHC.Types.krep$*_closure@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%rbp)
	addq $-40,%rbp
	jmp *Data.Typeable.Internal.$wmkTrCon_entry@gotpcrel(%rip)
_cbdj2:
	jmp *-16(%r13)
_cbdiV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl11_rb6WR_entry, .-lvl11_rb6WR_entry


==================== Asm code ====================
2018-03-16 16:06:11.021022858 UTC

.section .data.rel.ro
.align 8
.align 1
lvl11_rb6WR_info:
	.quad	lvl11_rb6WR_entry
	.quad	0
	.quad	4294967317
	.quad	SbcpG_srt+272


==================== Asm code ====================
2018-03-16 16:06:11.021739606 UTC

.section .text
.align 8
_cbdiW:
_cbdiW:
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-40,%rbp
	jmp _cbdiX
	.size _cbdiW, .-_cbdiW


==================== Asm code ====================
2018-03-16 16:06:11.022306568 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdiW_info:
	.quad	_cbdiW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.023070471 UTC

.section .text
.align 8
_cbdiX:
_cbdiX:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbdj6
_cbdj5:
	movq Data.Typeable.Internal.TrTyCon_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -38(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdj6:
	movq $48,904(%r13)
	leaq block_cbdiX_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cbdiX, .-_cbdiX


==================== Asm code ====================
2018-03-16 16:06:11.023750999 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdiX_info:
	.quad	_cbdiX
	.quad	1093
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.046167566 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufNonBlocking2_closure
.type GHC.IO.Handle.Text.hGetBufNonBlocking2_closure, @object
GHC.IO.Handle.Text.hGetBufNonBlocking2_closure:
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.047108823 UTC

.section .text
.align 8
sat_sbc66_entry:
_cbdks:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdkz
_cbdkA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbdkp_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbdkp
_cbdkq:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdkz:
	jmp *-16(%r13)
	.size sat_sbc66_entry, .-sat_sbc66_entry


==================== Asm code ====================
2018-03-16 16:06:11.047762863 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbc66_info:
	.quad	sat_sbc66_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:11.048450828 UTC

.section .text
.align 8
_cbdkp:
_cbdkp:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbdkD
_cbdkC:
	movq 7(%rbx),%rax
	addq 8(%rbp),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdkD:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdkp, .-_cbdkp


==================== Asm code ====================
2018-03-16 16:06:11.049126455 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdkp_info:
	.quad	_cbdkp
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.049915455 UTC

.section .text
.align 8
sat_sbc6a_entry:
_cbdkN:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdkU
_cbdkV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbdkK_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbdkK
_cbdkL:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdkU:
	jmp *-16(%r13)
	.size sat_sbc6a_entry, .-sat_sbc6a_entry


==================== Asm code ====================
2018-03-16 16:06:11.05056787 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbc6a_info:
	.quad	sat_sbc6a_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:11.051279477 UTC

.section .text
.align 8
_cbdkK:
_cbdkK:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbdkY
_cbdkX:
	movq 7(%rbx),%rax
	addq 8(%rbp),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdkY:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdkK, .-_cbdkK


==================== Asm code ====================
2018-03-16 16:06:11.051907624 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdkK_info:
	.quad	_cbdkK
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.052635067 UTC

.section .text
.align 8
sat_sbc6q_entry:
_cbdlv:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdlC
_cbdlD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbdls_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbdls
_cbdlt:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdlC:
	jmp *-16(%r13)
	.size sat_sbc6q_entry, .-sat_sbc6q_entry


==================== Asm code ====================
2018-03-16 16:06:11.053594394 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbc6q_info:
	.quad	sat_sbc6q_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:11.05430287 UTC

.section .text
.align 8
_cbdls:
_cbdls:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbdlG
_cbdlF:
	movq 7(%rbx),%rax
	addq 8(%rbp),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdlG:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdls, .-_cbdls


==================== Asm code ====================
2018-03-16 16:06:11.054964891 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdls_info:
	.quad	_cbdls
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.055744441 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBufNonBlocking2_entry
.type GHC.IO.Handle.Text.hGetBufNonBlocking2_entry, @object
GHC.IO.Handle.Text.hGetBufNonBlocking2_entry:
_cbdlI:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdlJ
_cbdlK:
	leaq block_cbdjD_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r14,%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbdjD
_cbdjE:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdlJ:
	leaq GHC.IO.Handle.Text.hGetBufNonBlocking2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetBufNonBlocking2_entry, .-GHC.IO.Handle.Text.hGetBufNonBlocking2_entry


==================== Asm code ====================
2018-03-16 16:06:11.057405128 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufNonBlocking2_info
.type GHC.IO.Handle.Text.hGetBufNonBlocking2_info, @object
GHC.IO.Handle.Text.hGetBufNonBlocking2_info:
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking2_entry
	.quad	0
	.quad	12884901902
	.quad	25769803801
	.quad	SbcpG_srt+280


==================== Asm code ====================
2018-03-16 16:06:11.058143445 UTC

.section .text
.align 8
_cbdjD:
_cbdjD:
	leaq block_cbdjI_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 47(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbdjI
_cbdjJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdjD, .-_cbdjD


==================== Asm code ====================
2018-03-16 16:06:11.058764877 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdjD_info:
	.quad	_cbdjD
	.quad	4
	.quad	4294967326
	.quad	SbcpG_srt+280


==================== Asm code ====================
2018-03-16 16:06:11.05948252 UTC

.section .text
.align 8
_cbdjI:
_cbdjI:
	leaq block_cbdjN_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 40(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,40(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbdjN
_cbdjO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdjI, .-_cbdjI


==================== Asm code ====================
2018-03-16 16:06:11.06014125 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdjI_info:
	.quad	_cbdjI
	.quad	5
	.quad	4294967326
	.quad	SbcpG_srt+280


==================== Asm code ====================
2018-03-16 16:06:11.060941097 UTC

.section .text
.align 8
_cbdjN:
_cbdjN:
	movq 64(%rbp),%rax
	movq 7(%rbx),%rbx
	movq 32(%rbp),%rcx
	subq 24(%rbp),%rcx
	cmpq %rcx,%rbx
	jge _cbdlP
_cbdm0:
	leaq block_cbdl1_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,64(%rbp)
	testb $7,%bl
	jne _cbdl1
_cbdl2:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdlP:
	leaq block_cbdjY_info(%rip),%rdx
	movq %rdx,(%rbp)
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rcx,32(%rbp)
	movq %rdx,64(%rbp)
	testb $7,%bl
	jne _cbdjY
_cbdjZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdjN, .-_cbdjN


==================== Asm code ====================
2018-03-16 16:06:11.061720437 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdjN_info:
	.quad	_cbdjN
	.quad	33674
	.quad	4294967326
	.quad	SbcpG_srt+280


==================== Asm code ====================
2018-03-16 16:06:11.062899949 UTC

.section .text
.align 8
_cbdjY:
_cbdjY:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cbdlS
_cbdlR:
	movq 72(%rbp),%rax
	movq 56(%rbp),%rcx
	movq 48(%rbp),%rdx
	movq 80(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq 8(%rbp),%r8
	movq 16(%rbp),%r9
	movq 64(%rbp),%r10
	movq 32(%rbp),%r11
	movq 7(%rbx),%rbx
	subq $8,%rsp
	movq %rbx,%r14
	movq %r14,72(%rsp)
	movq %rsi,%r14
	addq 24(%rbp),%r14
	movq %rdx,80(%rsp)
	movq %r11,%rdx
	movq %rdi,96(%rsp)
	movq %r14,88(%rsp)
	movq 72(%rsp),%r14
	movq %r14,%rdi
	movq %rsi,104(%rsp)
	movq 88(%rsp),%r14
	movq %r14,%rsi
	movq %rax,%r14
	xorl %eax,%eax
	movq %rcx,112(%rsp)
	movq %r8,120(%rsp)
	movq %r9,128(%rsp)
	movq %r10,136(%rsp)
	movq %r11,144(%rsp)
	call memcpy@plt
	addq $8,%rsp
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 88(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 112(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq 96(%rsp),%rcx
	movq %rcx,-72(%r12)
	movq 120(%rsp),%rcx
	movq %rcx,-64(%r12)
	movq $0,-56(%r12)
	movq $0,-48(%r12)
	leaq -95(%r12),%rdx
	movq 72(%rsp),%rsi
	movq %rdx,8(%rsi)
	subq $8,%rsp
	movq %r13,%rdx
	movq %rdx,%rdi
	movq %rax,%rdx
	xorl %eax,%eax
	movq %rdx,152(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq 128(%rsp),%rax
	movq 136(%rsp),%rcx
	subq %rcx,%rax
	testq %rax,%rax
	jne _cbdlY
_cbdlZ:
	leaq sat_sbc6a_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq %rcx,-16(%r12)
	leaq -40(%r12),%rax
	addq $-16,%r12
	movq %rax,%rbx
	addq $88,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdlY:
	leaq sat_sbc66_info(%rip),%rdx
	movq %rdx,-40(%r12)
	movq %r14,-24(%r12)
	movq %rcx,-16(%r12)
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-8(%r12)
	addq %rcx,%rbx
	movq %rbx,(%r12)
	movq %rax,%r9
	leaq -40(%r12),%r8
	leaq -7(%r12),%rdi
	movq 120(%rsp),%rax
	movq %rax,%rsi
	movq 104(%rsp),%rax
	movq %rax,%r14
	addq $88,%rbp
	jmp GHC.IO.Handle.Text.$wbufReadNBEmpty_entry
_cbdlS:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdjY, .-_cbdjY


==================== Asm code ====================
2018-03-16 16:06:11.063959358 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdjY_info:
	.quad	_cbdjY
	.quad	41866
	.quad	4294967326
	.quad	SbcpG_srt+280


==================== Asm code ====================
2018-03-16 16:06:11.064952547 UTC

.section .text
.align 8
_cbdl1:
_cbdl1:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _cbdm3
_cbdm2:
	movq 72(%rbp),%rax
	movq 48(%rbp),%rcx
	movq 80(%rbp),%rdx
	movq 40(%rbp),%rsi
	movq 8(%rbp),%rdi
	movq 16(%rbp),%r8
	movq 24(%rbp),%r9
	movq 32(%rbp),%r10
	movq 64(%rbp),%r11
	subq $8,%rsp
	movq %rdx,%r14
	addq %r9,%r14
	movq %rdx,72(%rsp)
	movq %r11,%rdx
	movq %rdi,80(%rsp)
	movq 7(%rbx),%rdi
	movq %rsi,%rbx
	movq %r14,%rsi
	movq %rax,%r14
	xorl %eax,%eax
	movq %rcx,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	movq %r10,112(%rsp)
	movq %r11,120(%rsp)
	call memcpy@plt
	addq $8,%rsp
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-72(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-64(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-56(%r12)
	movq 88(%rsp),%rbx
	movq %rbx,-48(%r12)
	movq 96(%rsp),%rbx
	movq 112(%rsp),%rcx
	addq %rcx,%rbx
	movq %rbx,-40(%r12)
	movq 104(%rsp),%rbx
	movq %rbx,-32(%r12)
	leaq -79(%r12),%rbx
	movq 80(%rsp),%rdx
	movq %rbx,8(%rdx)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rdx,%rsi
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq sat_sbc6q_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq 112(%rsp),%rax
	movq %rax,(%r12)
	movq %rbx,%rax
	leaq -24(%r12),%rbx
	addq $88,%rbp
	movq (%rbp),%rcx
	jmp *(%rcx)
_cbdm3:
	movq $88,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdl1, .-_cbdl1


==================== Asm code ====================
2018-03-16 16:06:11.065911856 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdl1_info:
	.quad	_cbdl1
	.quad	45962
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.066494376 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$wbufReadNBEmpty_closure
.type GHC.IO.Handle.Text.$wbufReadNBEmpty_closure, @object
GHC.IO.Handle.Text.$wbufReadNBEmpty_closure:
	.quad	GHC.IO.Handle.Text.$wbufReadNBEmpty_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.067133481 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$wbufReadNBEmpty_slow
.type GHC.IO.Handle.Text.$wbufReadNBEmpty_slow, @object
GHC.IO.Handle.Text.$wbufReadNBEmpty_slow:
_cbdma:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Text.$wbufReadNBEmpty_entry
	.size GHC.IO.Handle.Text.$wbufReadNBEmpty_slow, .-GHC.IO.Handle.Text.$wbufReadNBEmpty_slow


==================== Asm code ====================
2018-03-16 16:06:11.067908067 UTC

.section .text
.align 8
sat_sbc7o_entry:
_cbdmW:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdn3
_cbdn4:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbdmT_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbdmT
_cbdmU:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdn3:
	jmp *-16(%r13)
	.size sat_sbc7o_entry, .-sat_sbc7o_entry


==================== Asm code ====================
2018-03-16 16:06:11.068558214 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbc7o_info:
	.quad	sat_sbc7o_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:11.069326011 UTC

.section .text
.align 8
_cbdmT:
_cbdmT:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbdn7
_cbdn6:
	movq 7(%rbx),%rax
	addq 8(%rbp),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdn7:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdmT, .-_cbdmT


==================== Asm code ====================
2018-03-16 16:06:11.070014198 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdmT_info:
	.quad	_cbdmT
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.070584103 UTC

.section .data.rel.ro
.align 8
.align 1
ubdou_srtd:
	.quad	SbcpG_srt+56
	.quad	33
	.quad	8321499137


==================== Asm code ====================
2018-03-16 16:06:11.071399688 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$wbufReadNBEmpty_entry
.type GHC.IO.Handle.Text.$wbufReadNBEmpty_entry, @object
GHC.IO.Handle.Text.$wbufReadNBEmpty_entry:
_cbdn9:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdna
_cbdnb:
	leaq block_cbdme_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r14,%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbdme
_cbdmf:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdna:
	leaq GHC.IO.Handle.Text.$wbufReadNBEmpty_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.$wbufReadNBEmpty_entry, .-GHC.IO.Handle.Text.$wbufReadNBEmpty_entry


==================== Asm code ====================
2018-03-16 16:06:11.072074146 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$wbufReadNBEmpty_info
.type GHC.IO.Handle.Text.$wbufReadNBEmpty_info, @object
GHC.IO.Handle.Text.$wbufReadNBEmpty_info:
	.quad	GHC.IO.Handle.Text.$wbufReadNBEmpty_entry
	.quad	0
	.quad	-4294967282
	.quad	25769803776
	.quad	ubdou_srtd
	.quad	1157
	.quad	GHC.IO.Handle.Text.$wbufReadNBEmpty_slow


==================== Asm code ====================
2018-03-16 16:06:11.072666867 UTC

.section .data.rel.ro
.align 8
.align 1
ubdov_srtd:
	.quad	SbcpG_srt+56
	.quad	33
	.quad	8053063681


==================== Asm code ====================
2018-03-16 16:06:11.073736214 UTC

.section .text
.align 8
_cbdme:
_cbdme:
	leaq block_cbdmj_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 31(%rbx),%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	movq %rax,(%rbp)
	addq $-32,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cbdme, .-_cbdme


==================== Asm code ====================
2018-03-16 16:06:11.074384426 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdme_info:
	.quad	_cbdme
	.quad	580
	.quad	-4294967266
	.quad	ubdov_srtd


==================== Asm code ====================
2018-03-16 16:06:11.074946943 UTC

.section .data.rel.ro
.align 8
.align 1
ubdow_srtd:
	.quad	SbcpG_srt+56
	.quad	33
	.quad	8053063681


==================== Asm code ====================
2018-03-16 16:06:11.075685292 UTC

.section .text
.align 8
_cbdmj:
_cbdmj:
	movq 64(%rbp),%rax
	cmpq 40(%rbp),%rax
	jle _ubdok
_cbdo3:
	leaq block_cbdmt_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq lvl11_rb6WR_closure(%rip),%rsi
	movq 16(%rbp),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,16(%rbp)
	movq %rbx,40(%rbp)
	addq $-8,%rbp
	jmp *Data.Typeable.Internal.sameTypeRep_entry@gotpcrel(%rip)
_ubdok:
	movq %rbx,40(%rbp)
	addq $8,%rbp
	jmp _sbc6R
	.size _cbdmj, .-_cbdmj


==================== Asm code ====================
2018-03-16 16:06:11.076327112 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdmj_info:
	.quad	_cbdmj
	.quad	9224
	.quad	-4294967266
	.quad	ubdow_srtd


==================== Asm code ====================
2018-03-16 16:06:11.077038591 UTC

.section .text
.align 8
_cbdmt:
_cbdmt:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ubdol
_cbdo9:
	leaq block_cbdmy_info(%rip),%rax
	movq %rax,(%rbp)
	movq 56(%rbp),%rbx
	testb $7,%bl
	jne _cbdmy
_cbdmz:
	movq (%rbx),%rax
	jmp *(%rax)
_ubdol:
	addq $16,%rbp
	jmp _sbc6R
	.size _cbdmt, .-_cbdmt


==================== Asm code ====================
2018-03-16 16:06:11.077673324 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdmt_info:
	.quad	_cbdmt
	.quad	16713
	.quad	30064771102
	.quad	SbcpG_srt+288


==================== Asm code ====================
2018-03-16 16:06:11.078353686 UTC

.section .text
.align 8
_sbc6R:
_sbc6R:
	movq 16(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbdnh_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq (%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq 32(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.BufferedIO.fillReadBuffer0_entry@gotpcrel(%rip)
	.size _sbc6R, .-_sbc6R


==================== Asm code ====================
2018-03-16 16:06:11.079131876 UTC

.section .text
.align 8
_cbdnh:
_cbdnh:
	leaq block_cbdnj_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbdnj
_cbdnm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdnh, .-_cbdnh


==================== Asm code ====================
2018-03-16 16:06:11.079727235 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdnh_info:
	.quad	_cbdnh
	.quad	2310
	.quad	4294967326
	.quad	SbcpG_srt+288


==================== Asm code ====================
2018-03-16 16:06:11.080399965 UTC

.section .text
.align 8
_cbdnj:
_cbdnj:
	leaq block_cbdnq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _cbdnq
_cbdns:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdnj, .-_cbdnj


==================== Asm code ====================
2018-03-16 16:06:11.081019216 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdnj_info:
	.quad	_cbdnj
	.quad	2310
	.quad	4294967326
	.quad	SbcpG_srt+288


==================== Asm code ====================
2018-03-16 16:06:11.081793781 UTC

.section .text
.align 8
_cbdnq:
_cbdnq:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbdny
_cbdnD:
	leaq block_cbdnB_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbdnB
_cbdnE:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdny:
	movq 40(%rbp),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbdnq, .-_cbdnq


==================== Asm code ====================
2018-03-16 16:06:11.082438236 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdnq_info:
	.quad	_cbdnq
	.quad	2054
	.quad	4294967326
	.quad	SbcpG_srt+288


==================== Asm code ====================
2018-03-16 16:06:11.083452419 UTC

.section .text
.align 8
_cbdnB:
_cbdnB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbdnK
_cbdnJ:
	movq 40(%rbp),%rax
	movq 7(%rbx),%rcx
	testq %rcx,%rcx
	je _cbdo0
_cbdnZ:
	movq 32(%rbp),%rdx
	movq 48(%rbp),%rsi
	movq 16(%rbp),%rdi
	movq 8(%rbp),%r8
	movq 24(%rbp),%r9
	movq %r9,8(%r8)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %r8,%rsi
	movq %rdi,%r8
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %rdx,%r14
	movq %r10,72(%rsp)
	movq %r11,80(%rsp)
	movq %r8,88(%rsp)
	movq %r9,96(%rsp)
	movq %rcx,104(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq 72(%rsp),%rcx
	movq 96(%rsp),%rax
	cmpq %rax,%rcx
	jg _cbdnT
_cbdnX:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -7(%r12),%r9
	movq 64(%rsp),%rax
	movq %rax,%r8
	movq %r14,%rdi
	movq 88(%rsp),%rax
	movq %rax,%rsi
	movq 80(%rsp),%rax
	movq %rax,%r14
	addq $56,%rbp
	jmp GHC.IO.Handle.Text.hGetBufNonBlocking2_entry
_cbdo0:
	addq $-16,%r12
	movq %rax,%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdnT:
	addq $-16,%r12
	movq %rbx,%r9
	movq 64(%rsp),%rax
	movq %rax,%r8
	movq %r14,%rdi
	movq 88(%rsp),%rax
	movq %rax,%rsi
	movq 80(%rsp),%rax
	movq %rax,%r14
	addq $56,%rbp
	jmp GHC.IO.Handle.Text.hGetBufNonBlocking2_entry
_cbdnK:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdnB, .-_cbdnB


==================== Asm code ====================
2018-03-16 16:06:11.084345603 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdnB_info:
	.quad	_cbdnB
	.quad	2054
	.quad	4294967326
	.quad	SbcpG_srt+288


==================== Asm code ====================
2018-03-16 16:06:11.085039898 UTC

.section .text
.align 8
_cbdmy:
_cbdmy:
	leaq block_cbdmG_info(%rip),%rax
	movq %rax,56(%rbp)
	xorl %r9d,%r9d
	movq 7(%rbx),%r8
	movq 8(%rbp),%rdi
	movq 24(%rbp),%rsi
	movq GHC.IO.FD.$fBufferedIOFD8_closure@gotpcrel(%rip),%r14
	movq 72(%rbp),%rax
	movq %rax,48(%rbp)
	addq $48,%rbp
	jmp *GHC.IO.FD.$wreadRawBufferPtrNoBlock_entry@gotpcrel(%rip)
	.size _cbdmy, .-_cbdmy


==================== Asm code ====================
2018-03-16 16:06:11.085691306 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdmy_info:
	.quad	_cbdmy
	.quad	24521
	.quad	12884901918
	.quad	SbcpG_srt+296


==================== Asm code ====================
2018-03-16 16:06:11.086408177 UTC

.section .text
.align 8
_cbdmG:
_cbdmG:
	leaq block_cbdmI_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbdmI
_cbdmJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdmG, .-_cbdmG


==================== Asm code ====================
2018-03-16 16:06:11.086998747 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdmG_info:
	.quad	_cbdmG
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.087744865 UTC

.section .text
.align 8
_cbdmI:
_cbdmI:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbdoe
_cbdod:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq $-1,%rbx
	jne _cbdog
_cbdoh:
	addq $-32,%r12
	movq %rax,%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdog:
	leaq sat_sbc7o_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdoe:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdmI, .-_cbdmI


==================== Asm code ====================
2018-03-16 16:06:11.088920913 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdmI_info:
	.quad	_cbdmI
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.091244589 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.hGetBufNonBlocking4_bytes
.type GHC.IO.Handle.Text.hGetBufNonBlocking4_bytes, @object
GHC.IO.Handle.Text.hGetBufNonBlocking4_bytes:
	.asciz "hGetBufNonBlocking"


==================== Asm code ====================
2018-03-16 16:06:11.093975036 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufNonBlocking3_closure
.type GHC.IO.Handle.Text.hGetBufNonBlocking3_closure, @object
GHC.IO.Handle.Text.hGetBufNonBlocking3_closure:
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.094760805 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBufNonBlocking3_entry
.type GHC.IO.Handle.Text.hGetBufNonBlocking3_entry, @object
GHC.IO.Handle.Text.hGetBufNonBlocking3_entry:
_cbdrz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdrA
_cbdrB:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbdry
_cbdrx:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Text.hGetBufNonBlocking4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbdrA:
	jmp *-16(%r13)
_cbdry:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.hGetBufNonBlocking3_entry, .-GHC.IO.Handle.Text.hGetBufNonBlocking3_entry


==================== Asm code ====================
2018-03-16 16:06:11.095450373 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufNonBlocking3_info
.type GHC.IO.Handle.Text.hGetBufNonBlocking3_info, @object
GHC.IO.Handle.Text.hGetBufNonBlocking3_info:
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:11.111415562 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whGetBufNonBlocking_closure
.type GHC.IO.Handle.Text.$whGetBufNonBlocking_closure, @object
GHC.IO.Handle.Text.$whGetBufNonBlocking_closure:
	.quad	GHC.IO.Handle.Text.$whGetBufNonBlocking_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.112265344 UTC

.section .text
.align 8
sat_sbc8u_entry:
_cbdsv:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdsz
_cbdsA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbdss_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbdss
_cbdst:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdsz:
	jmp *-16(%r13)
	.size sat_sbc8u_entry, .-sat_sbc8u_entry


==================== Asm code ====================
2018-03-16 16:06:11.112885476 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbc8u_info:
	.quad	sat_sbc8u_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:11.113684483 UTC

.section .text
.align 8
_cbdss:
_cbdss:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbdsD
_cbdsC:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rsi
	movq %rsi,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdsD:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdss, .-_cbdss


==================== Asm code ====================
2018-03-16 16:06:11.11442101 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdss_info:
	.quad	_cbdss
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.115149303 UTC

.section .text
.align 8
sat_sbc8N_entry:
_cbdt1:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdt8
_cbdt9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbdsY_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbdsY
_cbdsZ:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdt8:
	jmp *-16(%r13)
	.size sat_sbc8N_entry, .-sat_sbc8N_entry


==================== Asm code ====================
2018-03-16 16:06:11.11581635 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbc8N_info:
	.quad	sat_sbc8N_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:11.116592752 UTC

.section .text
.align 8
_cbdsY:
_cbdsY:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbdtc
_cbdtb:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 39(%rbx),%rbx
	addq 8(%rbp),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdtc:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdsY, .-_cbdsY


==================== Asm code ====================
2018-03-16 16:06:11.117291749 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdsY_info:
	.quad	_cbdsY
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.118077051 UTC

.section .text
.align 8
sat_sbc98_entry:
_cbdte:
	leaq -104(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdtf
_cbdtg:
	leaq block_cbdrZ_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbdrZ
_cbds0:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdtf:
	jmp *-8(%r13)
	.size sat_sbc98_entry, .-sat_sbc98_entry


==================== Asm code ====================
2018-03-16 16:06:11.118756792 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbc98_info:
	.quad	sat_sbc98_entry
	.quad	4294967298
	.quad	12884901896
	.quad	8589934597
	.quad	SbcpG_srt+280


==================== Asm code ====================
2018-03-16 16:06:11.119469672 UTC

.section .text
.align 8
_cbdrZ:
_cbdrZ:
	leaq block_cbds4_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rbx,%rax
	movq 47(%rbx),%rcx
	movq 63(%rbx),%rdx
	movq 71(%rbx),%rsi
	movq 95(%rbx),%rbx
	movq %rbx,%rdi
	movq 8(%rsi),%rbx
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	movq %rax,(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbds4
_cbds5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdrZ, .-_cbdrZ


==================== Asm code ====================
2018-03-16 16:06:11.12013424 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdrZ_info:
	.quad	_cbdrZ
	.quad	131
	.quad	12884901918
	.quad	SbcpG_srt+280


==================== Asm code ====================
2018-03-16 16:06:11.12080133 UTC

.section .text
.align 8
_cbds4:
_cbds4:
	leaq block_cbdsb_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbdsb
_cbdsc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbds4, .-_cbds4


==================== Asm code ====================
2018-03-16 16:06:11.121516407 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbds4_info:
	.quad	_cbds4
	.quad	4104
	.quad	12884901918
	.quad	SbcpG_srt+280


==================== Asm code ====================
2018-03-16 16:06:11.122337071 UTC

.section .text
.align 8
_cbdsb:
_cbdsb:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbdue
_ubduv:
	addq $24,%rbp
	jmp _sbc7Z
_ubduw:
	addq $24,%rbp
	jmp _sbc7Z
_cbdue:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _ubduw
_cbdtA:
	movq 32(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbdsj_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbdsj
_cbdsk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdsb, .-_cbdsb


==================== Asm code ====================
2018-03-16 16:06:11.123064484 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdsb_info:
	.quad	_cbdsb
	.quad	16586
	.quad	12884901918
	.quad	SbcpG_srt+280


==================== Asm code ====================
2018-03-16 16:06:11.123957729 UTC

.section .text
.align 8
_cbdsj:
_cbdsj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbdtD
_cbdtC:
	movq 24(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq 8(%rax),%rdx
	leaq sat_sbc8u_info(%rip),%rsi
	movq %rsi,-16(%r12)
	movq %rdx,(%r12)
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_cbdsI_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rcx
	movq 64(%rsp),%rax
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	movq %r14,24(%rbp)
	testb $7,%bl
	jne _cbdsI
_cbdsJ:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdtD:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdsj, .-_cbdsj


==================== Asm code ====================
2018-03-16 16:06:11.124722524 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdsj_info:
	.quad	_cbdsj
	.quad	4232
	.quad	12884901918
	.quad	SbcpG_srt+280


==================== Asm code ====================
2018-03-16 16:06:11.12579915 UTC

.section .text
.align 8
_cbdsI:
_cbdsI:
	movq 39(%rbx),%rax
	testq %rax,%rax
	jne _cbdtG
_cbdub:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $8,%rbp
	jmp _sbc7Z
_cbdtG:
	leaq block_cbdsP_info(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq 32(%rbp),%rbx
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rsi,32(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbdsP
_cbdsQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdsI, .-_cbdsI


==================== Asm code ====================
2018-03-16 16:06:11.126507292 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdsI_info:
	.quad	_cbdsI
	.quad	4104
	.quad	12884901918
	.quad	SbcpG_srt+280


==================== Asm code ====================
2018-03-16 16:06:11.127359945 UTC

.section .text
.align 8
_cbdsP:
_cbdsP:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbdtI
_cbdu0:
	leaq block_cbdtO_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbdtO
_cbdtP:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdtL:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbdtI:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbdtL
_cbdtK:
	leaq sat_sbc8N_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 32(%rbp),%rax
	leaq -24(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $32,%rbp
	jmp _sbc7Z
	.size _cbdsP, .-_cbdsP


==================== Asm code ====================
2018-03-16 16:06:11.128123973 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdsP_info:
	.quad	_cbdsP
	.quad	37003
	.quad	12884901918
	.quad	SbcpG_srt+280


==================== Asm code ====================
2018-03-16 16:06:11.12882324 UTC

.section .text
.align 8
_cbdtO:
_cbdtO:
	leaq block_cbdtT_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 48(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,48(%rbp)
	addq $-8,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
	.size _cbdtO, .-_cbdtO


==================== Asm code ====================
2018-03-16 16:06:11.129487783 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdtO_info:
	.quad	_cbdtO
	.quad	37003
	.quad	12884901918
	.quad	SbcpG_srt+280


==================== Asm code ====================
2018-03-16 16:06:11.130297927 UTC

.section .text
.align 8
_cbdtT:
_cbdtT:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbdu4
_cbdu3:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 64(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq block_cbdtW_info(%rip),%rax
	movq %rax,32(%rbp)
	leaq -47(%r12),%r8
	movq 48(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 56(%rbp),%r14
	addq $32,%rbp
	jmp *GHC.IO.Handle.Internals.$wstreamEncode_entry@gotpcrel(%rip)
_cbdu4:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdtT, .-_cbdtT


==================== Asm code ====================
2018-03-16 16:06:11.131048261 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdtT_info:
	.quad	_cbdtT
	.quad	73996
	.quad	12884901918
	.quad	SbcpG_srt+280


==================== Asm code ====================
2018-03-16 16:06:11.131744885 UTC

.section .text
.align 8
_cbdtW:
_cbdtW:
	leaq block_cbdtY_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbdtY
_cbdu6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdtW, .-_cbdtW


==================== Asm code ====================
2018-03-16 16:06:11.132338519 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdtW_info:
	.quad	_cbdtW
	.quad	5000
	.quad	12884901918
	.quad	SbcpG_srt+280


==================== Asm code ====================
2018-03-16 16:06:11.133064959 UTC

.section .text
.align 8
_cbdtY:
_cbdtY:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $8,%rbp
	jmp _sbc7Z
	.size _cbdtY, .-_cbdtY


==================== Asm code ====================
2018-03-16 16:06:11.133753338 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdtY_info:
	.quad	_cbdtY
	.quad	5000
	.quad	12884901918
	.quad	SbcpG_srt+280


==================== Asm code ====================
2018-03-16 16:06:11.13439717 UTC

.section .text
.align 8
_sbc7Z:
_sbc7Z:
	movq (%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbdtm_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _cbdtm
_cbdto:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbc7Z, .-_sbc7Z


==================== Asm code ====================
2018-03-16 16:06:11.135875868 UTC

.section .text
.align 8
_cbdtm:
_cbdtm:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 39(%rbx),%rdx
	cmpq 47(%rbx),%rdx
	je _cbdtx
_cbdtw:
	movq 32(%rbp),%r9
	leaq GHC.IO.Handle.Text.hGetBuf3_closure+1(%rip),%r8
	movq %rax,%rdi
	movq %rbx,%rsi
	movq %rcx,%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Text.hGetBufNonBlocking2_entry
_cbdtx:
	movq 24(%rbp),%r9
	leaq GHC.IO.Handle.Text.hGetBuf3_closure+1(%rip),%r8
	movq %rax,%rdi
	movq 31(%rbx),%rsi
	movq %rcx,%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Text.$wbufReadNBEmpty_entry
	.size _cbdtm, .-_cbdtm


==================== Asm code ====================
2018-03-16 16:06:11.136640613 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdtm_info:
	.quad	_cbdtm
	.quad	260
	.quad	12884901918
	.quad	SbcpG_srt+280


==================== Asm code ====================
2018-03-16 16:06:11.137437083 UTC

.section .data.rel.ro
.align 8
.align 1
ubduZ_srtd:
	.quad	SbcpG_srt+8
	.quad	41
	.quad	1700807051265


==================== Asm code ====================
2018-03-16 16:06:11.138308617 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$whGetBufNonBlocking_entry
.type GHC.IO.Handle.Text.$whGetBufNonBlocking_entry, @object
GHC.IO.Handle.Text.$whGetBufNonBlocking_entry:
_cbduR:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbduV
_cbduU:
	testq %rdi,%rdi
	je _cbduQ
_cbduP:
	testq %rdi,%rdi
	jge _cbduX
_cbduY:
	addq $-48,%r12
	leaq GHC.IO.Handle.Text.hGetBufNonBlocking3_closure(%rip),%rsi
	jmp GHC.IO.Handle.Text.$willegalBufferSize_entry
_cbduX:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	movq %rdi,-32(%r12)
	leaq sat_sbc98_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	movq %rdi,(%r12)
	leaq -22(%r12),%rdi
	movq %r14,%rsi
	leaq GHC.IO.Handle.Text.hGetBufNonBlocking3_closure(%rip),%r14
	jmp *GHC.IO.Handle.Internals.wantReadableHandle_1_entry@gotpcrel(%rip)
_cbduV:
	movq $48,904(%r13)
	leaq GHC.IO.Handle.Text.$whGetBufNonBlocking_closure(%rip),%rbx
	jmp *-8(%r13)
_cbduQ:
	addq $-48,%r12
	leaq GHC.IO.Handle.Text.hGetBuf3_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.$whGetBufNonBlocking_entry, .-GHC.IO.Handle.Text.$whGetBufNonBlocking_entry


==================== Asm code ====================
2018-03-16 16:06:11.139124028 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whGetBufNonBlocking_info
.type GHC.IO.Handle.Text.$whGetBufNonBlocking_info, @object
GHC.IO.Handle.Text.$whGetBufNonBlocking_info:
	.quad	GHC.IO.Handle.Text.$whGetBufNonBlocking_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869206
	.quad	ubduZ_srtd


==================== Asm code ====================
2018-03-16 16:06:11.142285136 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufNonBlocking1_closure
.type GHC.IO.Handle.Text.hGetBufNonBlocking1_closure, @object
GHC.IO.Handle.Text.hGetBufNonBlocking1_closure:
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.143043467 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBufNonBlocking1_entry
.type GHC.IO.Handle.Text.hGetBufNonBlocking1_entry, @object
GHC.IO.Handle.Text.hGetBufNonBlocking1_entry:
_cbdwZ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdx0
_cbdx1:
	leaq block_cbdwW_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbdwW
_cbdwX:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdx0:
	leaq GHC.IO.Handle.Text.hGetBufNonBlocking1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetBufNonBlocking1_entry, .-GHC.IO.Handle.Text.hGetBufNonBlocking1_entry


==================== Asm code ====================
2018-03-16 16:06:11.143742225 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufNonBlocking1_info
.type GHC.IO.Handle.Text.hGetBufNonBlocking1_info, @object
GHC.IO.Handle.Text.hGetBufNonBlocking1_info:
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking1_entry
	.quad	0
	.quad	21474836494
	.quad	17179869207
	.quad	SbcpG_srt+320


==================== Asm code ====================
2018-03-16 16:06:11.144382866 UTC

.section .text
.align 8
_cbdwW:
_cbdwW:
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Text.$whGetBufNonBlocking_entry
	.size _cbdwW, .-_cbdwW


==================== Asm code ====================
2018-03-16 16:06:11.144966366 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdwW_info:
	.quad	_cbdwW
	.quad	2
	.quad	4294967326
	.quad	SbcpG_srt+320


==================== Asm code ====================
2018-03-16 16:06:11.147236748 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufNonBlocking_closure
.type GHC.IO.Handle.Text.hGetBufNonBlocking_closure, @object
GHC.IO.Handle.Text.hGetBufNonBlocking_closure:
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.147845446 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBufNonBlocking_entry
.type GHC.IO.Handle.Text.hGetBufNonBlocking_entry, @object
GHC.IO.Handle.Text.hGetBufNonBlocking_entry:
_cbdxk:
	jmp GHC.IO.Handle.Text.hGetBufNonBlocking1_entry
	.size GHC.IO.Handle.Text.hGetBufNonBlocking_entry, .-GHC.IO.Handle.Text.hGetBufNonBlocking_entry


==================== Asm code ====================
2018-03-16 16:06:11.148431628 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufNonBlocking_info
.type GHC.IO.Handle.Text.hGetBufNonBlocking_info, @object
GHC.IO.Handle.Text.hGetBufNonBlocking_info:
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	SbcpG_srt+336


==================== Asm code ====================
2018-03-16 16:06:11.150214498 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl12_rb6WS_bytes:
	.asciz "hGetBufSome"


==================== Asm code ====================
2018-03-16 16:06:11.152659635 UTC

.section .data
.align 8
.align 1
lvl13_rb6WT_closure:
	.quad	lvl13_rb6WT_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.153579208 UTC

.section .text
.align 8
lvl13_rb6WT_entry:
_cbdxy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdxz
_cbdxA:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbdxx
_cbdxw:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl12_rb6WS_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbdxz:
	jmp *-16(%r13)
_cbdxx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl13_rb6WT_entry, .-lvl13_rb6WT_entry


==================== Asm code ====================
2018-03-16 16:06:11.15428807 UTC

.section .data.rel.ro
.align 8
.align 1
lvl13_rb6WT_info:
	.quad	lvl13_rb6WT_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:11.176684341 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whGetBufSome_closure
.type GHC.IO.Handle.Text.$whGetBufSome_closure, @object
GHC.IO.Handle.Text.$whGetBufSome_closure:
	.quad	GHC.IO.Handle.Text.$whGetBufSome_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.178192298 UTC

.section .text
.align 8
sat_sbcaI_entry:
_cbdyy:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdyC
_cbdyD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbdyv_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbdyv
_cbdyw:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdyC:
	jmp *-16(%r13)
	.size sat_sbcaI_entry, .-sat_sbcaI_entry


==================== Asm code ====================
2018-03-16 16:06:11.178896547 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbcaI_info:
	.quad	sat_sbcaI_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:11.179705543 UTC

.section .text
.align 8
_cbdyv:
_cbdyv:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbdyG
_cbdyF:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rsi
	movq %rsi,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdyG:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdyv, .-_cbdyv


==================== Asm code ====================
2018-03-16 16:06:11.180438671 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdyv_info:
	.quad	_cbdyv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.181194033 UTC

.section .text
.align 8
sat_sbcb1_entry:
_cbdz4:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdzb
_cbdzc:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbdz1_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbdz1
_cbdz2:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdzb:
	jmp *-16(%r13)
	.size sat_sbcb1_entry, .-sat_sbcb1_entry


==================== Asm code ====================
2018-03-16 16:06:11.181920209 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbcb1_info:
	.quad	sat_sbcb1_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:11.182709548 UTC

.section .text
.align 8
_cbdz1:
_cbdz1:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbdzf
_cbdze:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 39(%rbx),%rbx
	addq 8(%rbp),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdzf:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdz1, .-_cbdz1


==================== Asm code ====================
2018-03-16 16:06:11.183389959 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdz1_info:
	.quad	_cbdz1
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.183939124 UTC

.section .data.rel.ro
.align 8
.align 1
ubdCm_srtd:
	.quad	SbcpG_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:11.184731301 UTC

.section .text
.align 8
sat_sbcbm_entry:
_cbdzh:
	leaq -144(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdzi
_cbdzj:
	leaq block_cbdxY_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbdxY
_cbdxZ:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdzi:
	jmp *-8(%r13)
	.size sat_sbcbm_entry, .-sat_sbcbm_entry


==================== Asm code ====================
2018-03-16 16:06:11.185564485 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbcbm_info:
	.quad	sat_sbcbm_entry
	.quad	4294967298
	.quad	-4294967288
	.quad	8589934597
	.quad	ubdCm_srtd


==================== Asm code ====================
2018-03-16 16:06:11.186119042 UTC

.section .data.rel.ro
.align 8
.align 1
ubdCn_srtd:
	.quad	SbcpG_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:11.186824556 UTC

.section .text
.align 8
_cbdxY:
_cbdxY:
	leaq block_cbdy3_info(%rip),%rax
	movq %rax,-56(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 63(%rbx),%rdi
	movq 71(%rbx),%r8
	movq 95(%rbx),%r9
	movq 31(%rbx),%rbx
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rax,(%rbp)
	addq $-56,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cbdxY, .-_cbdxY


==================== Asm code ====================
2018-03-16 16:06:11.187462575 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdxY_info:
	.quad	_cbdxY
	.quad	131
	.quad	-4294967266
	.quad	ubdCn_srtd


==================== Asm code ====================
2018-03-16 16:06:11.188006387 UTC

.section .data.rel.ro
.align 8
.align 1
ubdCo_srtd:
	.quad	SbcpG_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:11.189612472 UTC

.section .text
.align 8
_cbdy3:
_cbdy3:
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbdy7_info(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rbx
	movq %rbx,%rsi
	movq %rax,%rbx
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	movq %rcx,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbdy7
_cbdy8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdy3, .-_cbdy3


==================== Asm code ====================
2018-03-16 16:06:11.1903006 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdy3_info:
	.quad	_cbdy3
	.quad	16394
	.quad	-4294967266
	.quad	ubdCo_srtd


==================== Asm code ====================
2018-03-16 16:06:11.190824779 UTC

.section .data.rel.ro
.align 8
.align 1
ubdCp_srtd:
	.quad	SbcpG_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:11.191502537 UTC

.section .text
.align 8
_cbdy7:
_cbdy7:
	leaq block_cbdye_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbdye
_cbdyf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdy7, .-_cbdy7


==================== Asm code ====================
2018-03-16 16:06:11.192139494 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdy7_info:
	.quad	_cbdy7
	.quad	131277
	.quad	-4294967266
	.quad	ubdCp_srtd


==================== Asm code ====================
2018-03-16 16:06:11.192704646 UTC

.section .data.rel.ro
.align 8
.align 1
ubdCq_srtd:
	.quad	SbcpG_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:11.193748606 UTC

.section .text
.align 8
_cbdye:
_cbdye:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbdBs
_ubdBL:
	addq $24,%rbp
	jmp _sbc9S
_ubdBM:
	addq $24,%rbp
	jmp _sbc9S
_cbdBs:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _ubdBM
_cbdAO:
	movq 72(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbdym_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbdym
_cbdyn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdye, .-_cbdye


==================== Asm code ====================
2018-03-16 16:06:11.194425684 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdye_info:
	.quad	_cbdye
	.quad	525263
	.quad	-4294967266
	.quad	ubdCq_srtd


==================== Asm code ====================
2018-03-16 16:06:11.194945124 UTC

.section .data.rel.ro
.align 8
.align 1
ubdCr_srtd:
	.quad	SbcpG_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:11.195809689 UTC

.section .text
.align 8
_cbdym:
_cbdym:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbdAR
_cbdAQ:
	movq 64(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq 8(%rax),%rdx
	leaq sat_sbcaI_info(%rip),%rsi
	movq %rsi,-16(%r12)
	movq %rdx,(%r12)
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_cbdyL_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rcx
	movq 64(%rsp),%rax
	movq %rax,%rbx
	movq %rcx,56(%rbp)
	movq %r14,64(%rbp)
	testb $7,%bl
	jne _cbdyL
_cbdyM:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdAR:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdym, .-_cbdym


==================== Asm code ====================
2018-03-16 16:06:11.196570195 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdym_info:
	.quad	_cbdym
	.quad	135373
	.quad	-4294967266
	.quad	ubdCr_srtd


==================== Asm code ====================
2018-03-16 16:06:11.197081981 UTC

.section .data.rel.ro
.align 8
.align 1
ubdCs_srtd:
	.quad	SbcpG_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:11.197929123 UTC

.section .text
.align 8
_cbdyL:
_cbdyL:
	movq 39(%rbx),%rax
	testq %rax,%rax
	jne _cbdAU
_cbdBp:
	movq 48(%rbp),%rax
	movq 56(%rbp),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $8,%rbp
	jmp _sbc9S
_cbdAU:
	leaq block_cbdyS_info(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq 72(%rbp),%rbx
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rsi,72(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbdyS
_cbdyT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdyL, .-_cbdyL


==================== Asm code ====================
2018-03-16 16:06:11.198656775 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdyL_info:
	.quad	_cbdyL
	.quad	131277
	.quad	-4294967266
	.quad	ubdCs_srtd


==================== Asm code ====================
2018-03-16 16:06:11.199204492 UTC

.section .data.rel.ro
.align 8
.align 1
ubdCt_srtd:
	.quad	SbcpG_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:11.200013458 UTC

.section .text
.align 8
_cbdyS:
_cbdyS:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbdAW
_cbdBe:
	leaq block_cbdB2_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbdB2
_cbdB3:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdAZ:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbdAW:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbdAZ
_cbdAY:
	leaq sat_sbcb1_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 80(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 72(%rbp),%rax
	leaq -24(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $32,%rbp
	jmp _sbc9S
	.size _cbdyS, .-_cbdyS


==================== Asm code ====================
2018-03-16 16:06:11.200726652 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdyS_info:
	.quad	_cbdyS
	.quad	1181328
	.quad	-4294967266
	.quad	ubdCt_srtd


==================== Asm code ====================
2018-03-16 16:06:11.201553231 UTC

.section .data.rel.ro
.align 8
.align 1
ubdCu_srtd:
	.quad	SbcpG_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:11.202210343 UTC

.section .text
.align 8
_cbdB2:
_cbdB2:
	leaq block_cbdB7_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 88(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,88(%rbp)
	addq $-8,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
	.size _cbdB2, .-_cbdB2


==================== Asm code ====================
2018-03-16 16:06:11.202876068 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdB2_info:
	.quad	_cbdB2
	.quad	1181328
	.quad	-4294967266
	.quad	ubdCu_srtd


==================== Asm code ====================
2018-03-16 16:06:11.203399444 UTC

.section .data.rel.ro
.align 8
.align 1
ubdCv_srtd:
	.quad	SbcpG_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:11.20417574 UTC

.section .text
.align 8
_cbdB7:
_cbdB7:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbdBi
_cbdBh:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 104(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq block_cbdBa_info(%rip),%rax
	movq %rax,32(%rbp)
	leaq -47(%r12),%r8
	movq 88(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 96(%rbp),%r14
	addq $32,%rbp
	jmp *GHC.IO.Handle.Internals.$wstreamEncode_entry@gotpcrel(%rip)
_cbdBi:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdB7, .-_cbdB7


==================== Asm code ====================
2018-03-16 16:06:11.204895929 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdB7_info:
	.quad	_cbdB7
	.quad	2362641
	.quad	-4294967266
	.quad	ubdCv_srtd


==================== Asm code ====================
2018-03-16 16:06:11.205500724 UTC

.section .data.rel.ro
.align 8
.align 1
ubdCw_srtd:
	.quad	SbcpG_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:11.206151456 UTC

.section .text
.align 8
_cbdBa:
_cbdBa:
	leaq block_cbdBc_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbdBc
_cbdBk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdBa, .-_cbdBa


==================== Asm code ====================
2018-03-16 16:06:11.206722324 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdBa_info:
	.quad	_cbdBa
	.quad	159949
	.quad	-4294967266
	.quad	ubdCw_srtd


==================== Asm code ====================
2018-03-16 16:06:11.207264095 UTC

.section .data.rel.ro
.align 8
.align 1
ubdCx_srtd:
	.quad	SbcpG_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:11.207977818 UTC

.section .text
.align 8
_cbdBc:
_cbdBc:
	movq 48(%rbp),%rax
	movq 7(%rbx),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $8,%rbp
	jmp _sbc9S
	.size _cbdBc, .-_cbdBc


==================== Asm code ====================
2018-03-16 16:06:11.208581795 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdBc_info:
	.quad	_cbdBc
	.quad	159949
	.quad	-4294967266
	.quad	ubdCx_srtd


==================== Asm code ====================
2018-03-16 16:06:11.209579586 UTC

.section .text
.align 8
_sbc9S:
_sbc9S:
	movq 40(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbdzq_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbdzq
_cbdzs:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbc9S, .-_sbc9S


==================== Asm code ====================
2018-03-16 16:06:11.210168444 UTC

.section .data.rel.ro
.align 8
.align 1
ubdCy_srtd:
	.quad	SbcpG_srt+56
	.quad	38
	.quad	210990268417


==================== Asm code ====================
2018-03-16 16:06:11.211097254 UTC

.section .text
.align 8
_cbdzq:
_cbdzq:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbdzy
_cbdzx:
	movq 96(%rbp),%rax
	movq 39(%rbx),%rcx
	movq 47(%rbx),%rdx
	cmpq %rdx,%rcx
	je _cbdAL
_cbdzN:
	movq 88(%rbp),%rsi
	movq 80(%rbp),%rdi
	subq %rcx,%rdx
	cmpq %rdx,%rax
	jg _cbdzK
_cbdzL:
	addq $-16,%r12
	movq 104(%rbp),%r9
	leaq GHC.IO.Handle.Text.hGetBuf3_closure+1(%rip),%r8
	movq %rdi,%rax
	movq %rsi,%rdi
	movq %rbx,%rsi
	movq %rax,%r14
	addq $112,%rbp
	jmp GHC.IO.Handle.Text.hGetBufNonBlocking2_entry
_cbdAL:
	cmpq 31(%rbx),%rax
	jle _cbdAq
_cbdAu:
	addq $-16,%r12
	leaq block_cbdAt_info(%rip),%rax
	movq %rax,(%rbp)
	leaq lvl11_rb6WR_closure(%rip),%rsi
	movq 40(%rbp),%r14
	movq %rbx,72(%rbp)
	jmp *Data.Typeable.Internal.sameTypeRep_entry@gotpcrel(%rip)
_cbdAq:
	addq $-16,%r12
	movq %rbx,72(%rbp)
	addq $24,%rbp
	jmp _sbca8
_cbdzK:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rdx,(%r12)
	leaq -7(%r12),%r9
	leaq GHC.IO.Handle.Text.hGetBuf3_closure+1(%rip),%r8
	movq %rdi,%rax
	movq %rsi,%rdi
	movq %rbx,%rsi
	movq %rax,%r14
	addq $112,%rbp
	jmp GHC.IO.Handle.Text.hGetBufNonBlocking2_entry
_cbdzy:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdzq, .-_cbdzq


==================== Asm code ====================
2018-03-16 16:06:11.211957068 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdzq_info:
	.quad	_cbdzq
	.quad	159949
	.quad	-4294967266
	.quad	ubdCy_srtd


==================== Asm code ====================
2018-03-16 16:06:11.212684227 UTC

.section .text
.align 8
_cbdAt:
_cbdAt:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ubdBR
_cbdAF:
	leaq block_cbdAD_info(%rip),%rax
	movq %rax,(%rbp)
	movq 88(%rbp),%rbx
	testb $7,%bl
	jne _cbdAD
_cbdAG:
	movq (%rbx),%rax
	jmp *(%rax)
_ubdBR:
	addq $24,%rbp
	jmp _sbca8
	.size _cbdAt, .-_cbdAt


==================== Asm code ====================
2018-03-16 16:06:11.213358365 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdAt_info:
	.quad	_cbdAt
	.quad	144589
	.quad	1653562408990
	.quad	SbcpG_srt+288


==================== Asm code ====================
2018-03-16 16:06:11.2140337 UTC

.section .text
.align 8
_sbca8:
_sbca8:
	leaq block_cbdzU_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	movq 48(%rbp),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp *GHC.IO.BufferedIO.fillReadBuffer_entry@gotpcrel(%rip)
	.size _sbca8, .-_sbca8


==================== Asm code ====================
2018-03-16 16:06:11.214754696 UTC

.section .text
.align 8
_cbdzU:
_cbdzU:
	leaq block_cbdzW_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbdzW
_cbdzX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdzU, .-_cbdzU


==================== Asm code ====================
2018-03-16 16:06:11.215326456 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdzU_info:
	.quad	_cbdzU
	.quad	5000
	.quad	4294967326
	.quad	SbcpG_srt+288


==================== Asm code ====================
2018-03-16 16:06:11.216020249 UTC

.section .text
.align 8
_cbdzW:
_cbdzW:
	leaq block_cbdA1_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _cbdA1
_cbdA5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdzW, .-_cbdzW


==================== Asm code ====================
2018-03-16 16:06:11.216642546 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdzW_info:
	.quad	_cbdzW
	.quad	5000
	.quad	4294967326
	.quad	SbcpG_srt+288


==================== Asm code ====================
2018-03-16 16:06:11.217917743 UTC

.section .text
.align 8
_cbdA1:
_cbdA1:
	movq 7(%rbx),%rax
	testq %rax,%rax
	je _cbdAm
_cbdAl:
	movq 48(%rbp),%rcx
	movq 56(%rbp),%rdx
	movq 64(%rbp),%rsi
	movq 40(%rbp),%rdi
	movq 8(%rbp),%r8
	movq 32(%rbp),%r9
	movq %r9,8(%r8)
	subq $8,%rsp
	movq %r13,%r10
	movq %rsi,%r11
	movq %r8,%rsi
	movq %rdi,%r8
	movq %r10,%rdi
	movq %rax,%r10
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r11,80(%rsp)
	movq %r8,88(%rsp)
	movq %r9,96(%rsp)
	movq %r10,104(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq 96(%rsp),%rcx
	movq 64(%rsp),%rax
	cmpq %rax,%rcx
	jg _cbdAi
_cbdAj:
	movq %rbx,%r9
	leaq GHC.IO.Handle.Text.hGetBuf3_closure+1(%rip),%r8
	movq %r14,%rdi
	movq 88(%rsp),%rax
	movq %rax,%rsi
	movq 80(%rsp),%rax
	movq %rax,%r14
	addq $72,%rbp
	jmp GHC.IO.Handle.Text.hGetBufNonBlocking2_entry
_cbdAm:
	leaq GHC.IO.Handle.Text.hGetBuf3_closure+1(%rip),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdAi:
	movq 72(%rsp),%rax
	movq %rax,%r9
	leaq GHC.IO.Handle.Text.hGetBuf3_closure+1(%rip),%r8
	movq %r14,%rdi
	movq 88(%rsp),%rax
	movq %rax,%rsi
	movq 80(%rsp),%rax
	movq %rax,%r14
	addq $72,%rbp
	jmp GHC.IO.Handle.Text.hGetBufNonBlocking2_entry
	.size _cbdA1, .-_cbdA1


==================== Asm code ====================
2018-03-16 16:06:11.218783317 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdA1_info:
	.quad	_cbdA1
	.quad	4488
	.quad	4294967326
	.quad	SbcpG_srt+288


==================== Asm code ====================
2018-03-16 16:06:11.219921742 UTC

.section .text
.align 8
_cbdAD:
_cbdAD:
	xorl %r9d,%r9d
	movq 7(%rbx),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq GHC.IO.FD.$fBufferedIOFD12_closure@gotpcrel(%rip),%r14
	movq 96(%rbp),%rax
	movq %rax,104(%rbp)
	addq $104,%rbp
	jmp *GHC.IO.FD.$wreadRawBufferPtr_entry@gotpcrel(%rip)
	.size _cbdAD, .-_cbdAD


==================== Asm code ====================
2018-03-16 16:06:11.220581518 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdAD_info:
	.quad	_cbdAD
	.quad	524237
	.quad	12884901918
	.quad	SbcpG_srt+344


==================== Asm code ====================
2018-03-16 16:06:11.221157208 UTC

.section .data.rel.ro
.align 8
.align 1
ubdCz_srtd:
	.quad	SbcpG_srt+8
	.quad	46
	.quad	66279935313985


==================== Asm code ====================
2018-03-16 16:06:11.222031872 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$whGetBufSome_entry
.type GHC.IO.Handle.Text.$whGetBufSome_entry, @object
GHC.IO.Handle.Text.$whGetBufSome_entry:
_cbdCe:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbdCi
_cbdCh:
	testq %rdi,%rdi
	je _cbdCd
_cbdCc:
	testq %rdi,%rdi
	jge _cbdCk
_cbdCl:
	addq $-48,%r12
	leaq lvl13_rb6WT_closure(%rip),%rsi
	jmp GHC.IO.Handle.Text.$willegalBufferSize_entry
_cbdCk:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	movq %rdi,-32(%r12)
	leaq sat_sbcbm_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	movq %rdi,(%r12)
	leaq -22(%r12),%rdi
	movq %r14,%rsi
	leaq lvl13_rb6WT_closure(%rip),%r14
	jmp *GHC.IO.Handle.Internals.wantReadableHandle_1_entry@gotpcrel(%rip)
_cbdCi:
	movq $48,904(%r13)
	leaq GHC.IO.Handle.Text.$whGetBufSome_closure(%rip),%rbx
	jmp *-8(%r13)
_cbdCd:
	addq $-48,%r12
	leaq GHC.IO.Handle.Text.hGetBuf3_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.$whGetBufSome_entry, .-GHC.IO.Handle.Text.$whGetBufSome_entry


==================== Asm code ====================
2018-03-16 16:06:11.222760504 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whGetBufSome_info
.type GHC.IO.Handle.Text.$whGetBufSome_info, @object
GHC.IO.Handle.Text.$whGetBufSome_info:
	.quad	GHC.IO.Handle.Text.$whGetBufSome_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869206
	.quad	ubdCz_srtd


==================== Asm code ====================
2018-03-16 16:06:11.226040304 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufSome1_closure
.type GHC.IO.Handle.Text.hGetBufSome1_closure, @object
GHC.IO.Handle.Text.hGetBufSome1_closure:
	.quad	GHC.IO.Handle.Text.hGetBufSome1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.226806627 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBufSome1_entry
.type GHC.IO.Handle.Text.hGetBufSome1_entry, @object
GHC.IO.Handle.Text.hGetBufSome1_entry:
_cbdFo:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdFp
_cbdFq:
	leaq block_cbdFl_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbdFl
_cbdFm:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdFp:
	leaq GHC.IO.Handle.Text.hGetBufSome1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetBufSome1_entry, .-GHC.IO.Handle.Text.hGetBufSome1_entry


==================== Asm code ====================
2018-03-16 16:06:11.227498117 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufSome1_info
.type GHC.IO.Handle.Text.hGetBufSome1_info, @object
GHC.IO.Handle.Text.hGetBufSome1_info:
	.quad	GHC.IO.Handle.Text.hGetBufSome1_entry
	.quad	0
	.quad	21474836494
	.quad	17179869207
	.quad	SbcpG_srt+360


==================== Asm code ====================
2018-03-16 16:06:11.228157716 UTC

.section .text
.align 8
_cbdFl:
_cbdFl:
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Text.$whGetBufSome_entry
	.size _cbdFl, .-_cbdFl


==================== Asm code ====================
2018-03-16 16:06:11.228738898 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdFl_info:
	.quad	_cbdFl
	.quad	2
	.quad	4294967326
	.quad	SbcpG_srt+360


==================== Asm code ====================
2018-03-16 16:06:11.230961736 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufSome_closure
.type GHC.IO.Handle.Text.hGetBufSome_closure, @object
GHC.IO.Handle.Text.hGetBufSome_closure:
	.quad	GHC.IO.Handle.Text.hGetBufSome_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.231580263 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBufSome_entry
.type GHC.IO.Handle.Text.hGetBufSome_entry, @object
GHC.IO.Handle.Text.hGetBufSome_entry:
_cbdFJ:
	jmp GHC.IO.Handle.Text.hGetBufSome1_entry
	.size GHC.IO.Handle.Text.hGetBufSome_entry, .-GHC.IO.Handle.Text.hGetBufSome_entry


==================== Asm code ====================
2018-03-16 16:06:11.232189731 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBufSome_info
.type GHC.IO.Handle.Text.hGetBufSome_info, @object
GHC.IO.Handle.Text.hGetBufSome_info:
	.quad	GHC.IO.Handle.Text.hGetBufSome_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	SbcpG_srt+376


==================== Asm code ====================
2018-03-16 16:06:11.253858437 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf4_closure
.type GHC.IO.Handle.Text.hGetBuf4_closure, @object
GHC.IO.Handle.Text.hGetBuf4_closure:
	.quad	GHC.IO.Handle.Text.hGetBuf4_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.254730231 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBuf4_entry
.type GHC.IO.Handle.Text.hGetBuf4_entry, @object
GHC.IO.Handle.Text.hGetBuf4_entry:
_cbdFX:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdGb
_cbdGc:
	leaq block_cbdFU_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r14,%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbdFU
_cbdFV:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdGb:
	leaq GHC.IO.Handle.Text.hGetBuf4_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetBuf4_entry, .-GHC.IO.Handle.Text.hGetBuf4_entry


==================== Asm code ====================
2018-03-16 16:06:11.255434751 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf4_info
.type GHC.IO.Handle.Text.hGetBuf4_info, @object
GHC.IO.Handle.Text.hGetBuf4_info:
	.quad	GHC.IO.Handle.Text.hGetBuf4_entry
	.quad	0
	.quad	12884901902
	.quad	25769803801
	.quad	SbcpG_srt+384


==================== Asm code ====================
2018-03-16 16:06:11.256166977 UTC

.section .text
.align 8
_cbdFU:
_cbdFU:
	leaq block_cbdG0_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 47(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbdG0
_cbdG1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdFU, .-_cbdFU


==================== Asm code ====================
2018-03-16 16:06:11.256793469 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdFU_info:
	.quad	_cbdFU
	.quad	4
	.quad	4294967326
	.quad	SbcpG_srt+384


==================== Asm code ====================
2018-03-16 16:06:11.257554338 UTC

.section .text
.align 8
_cbdG0:
_cbdG0:
	leaq block_cbdG5_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%rbx
	movq %rbx,%r8
	movq 32(%rbp),%rbx
	movq %rcx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	movq %rdx,32(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbdG5
_cbdG6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdG0, .-_cbdG0


==================== Asm code ====================
2018-03-16 16:06:11.258230513 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdG0_info:
	.quad	_cbdG0
	.quad	5
	.quad	4294967326
	.quad	SbcpG_srt+384


==================== Asm code ====================
2018-03-16 16:06:11.258926851 UTC

.section .text
.align 8
_cbdG5:
_cbdG5:
	leaq block_cbdGa_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 80(%rbp),%rbx
	movq %rax,80(%rbp)
	testb $7,%bl
	jne _cbdGa
_cbdGg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdG5, .-_cbdG5


==================== Asm code ====================
2018-03-16 16:06:11.259518658 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdG5_info:
	.quad	_cbdG5
	.quad	17290
	.quad	4294967326
	.quad	SbcpG_srt+384


==================== Asm code ====================
2018-03-16 16:06:11.260353896 UTC

.section .text
.align 8
_cbdGa:
_cbdGa:
	movq 64(%rbp),%rax
	movq 7(%rbx),%rbx
	movq 32(%rbp),%rcx
	subq 24(%rbp),%rcx
	cmpq %rcx,%rbx
	jge _cbdGt
_cbdHC:
	leaq block_cbdHb_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,64(%rbp)
	testb $7,%bl
	jne _cbdHb
_cbdHc:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdGt:
	leaq block_cbdGr_info(%rip),%rdx
	movq %rdx,(%rbp)
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rcx,32(%rbp)
	movq %rdx,64(%rbp)
	testb $7,%bl
	jne _cbdGr
_cbdGu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdGa, .-_cbdGa


==================== Asm code ====================
2018-03-16 16:06:11.261014118 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdGa_info:
	.quad	_cbdGa
	.quad	50058
	.quad	4294967326
	.quad	SbcpG_srt+384


==================== Asm code ====================
2018-03-16 16:06:11.262274731 UTC

.section .text
.align 8
_cbdGr:
_cbdGr:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _cbdGA
_cbdGz:
	movq 56(%rbp),%rax
	movq 48(%rbp),%rcx
	movq 72(%rbp),%rdx
	movq 40(%rbp),%rsi
	movq 8(%rbp),%rdi
	movq 16(%rbp),%r8
	movq 80(%rbp),%r9
	movq 64(%rbp),%r10
	movq 32(%rbp),%r11
	movq 7(%rbx),%rbx
	subq $8,%rsp
	movq %rbx,%r14
	movq %r14,72(%rsp)
	movq %rdx,%r14
	addq 24(%rbp),%r14
	movq %rdx,80(%rsp)
	movq %r11,%rdx
	movq %rdi,96(%rsp)
	movq %r14,88(%rsp)
	movq 72(%rsp),%r14
	movq %r14,%rdi
	movq %rsi,104(%rsp)
	movq 88(%rsp),%r14
	movq %r14,%rsi
	movq %rax,%r14
	xorl %eax,%eax
	movq %rcx,112(%rsp)
	movq %r8,120(%rsp)
	movq %r9,128(%rsp)
	movq %r10,136(%rsp)
	movq %r11,144(%rsp)
	call memcpy@plt
	addq $8,%rsp
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-96(%r12)
	movq 96(%rsp),%rcx
	movq %rcx,-88(%r12)
	movq 88(%rsp),%rcx
	movq %rcx,-80(%r12)
	movq 72(%rsp),%rcx
	movq %rcx,-72(%r12)
	movq 112(%rsp),%rcx
	movq %rcx,-64(%r12)
	movq $0,-56(%r12)
	movq $0,-48(%r12)
	leaq -95(%r12),%rcx
	movq 104(%rsp),%rdx
	movq %rcx,8(%rdx)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rdx,%rsi
	movq %rax,%rdx
	xorl %eax,%eax
	movq %rcx,152(%rsp)
	movq %rdx,160(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq 128(%rsp),%rax
	movq 136(%rsp),%rcx
	subq %rcx,%rax
	testq %rax,%rax
	jne _cbdH3
_cbdH9:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	movq 120(%rsp),%rax
	addq %rcx,%rax
	movq %rax,-32(%r12)
	leaq -39(%r12),%rax
	addq $-32,%r12
	movq %rax,%rbx
	addq $88,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdH3:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-40(%r12)
	movq %rax,-32(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	movq 120(%rsp),%rax
	addq %rcx,%rax
	movq %rax,-16(%r12)
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	addq %rcx,%rbx
	movq %rbx,(%r12)
	leaq -39(%r12),%r9
	leaq -23(%r12),%r8
	leaq -7(%r12),%rdi
	movq 144(%rsp),%rax
	movq %rax,%rsi
	addq $88,%rbp
	jmp GHC.IO.Handle.Text.hGetBuf2_entry
_cbdGA:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdGr, .-_cbdGr


==================== Asm code ====================
2018-03-16 16:06:11.263372422 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdGr_info:
	.quad	_cbdGr
	.quad	58250
	.quad	4294967326
	.quad	SbcpG_srt+384


==================== Asm code ====================
2018-03-16 16:06:11.264376928 UTC

.section .text
.align 8
_cbdHb:
_cbdHb:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbdHF
_cbdHE:
	movq 48(%rbp),%rax
	movq 72(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 8(%rbp),%rsi
	movq 16(%rbp),%rdi
	movq 24(%rbp),%r8
	movq 32(%rbp),%r9
	movq 80(%rbp),%r10
	movq 64(%rbp),%r11
	subq $8,%rsp
	movq %rcx,%r14
	addq %r8,%r14
	movq %rdx,72(%rsp)
	movq %r11,%rdx
	movq %rdi,80(%rsp)
	movq 7(%rbx),%rdi
	movq %rsi,%rbx
	movq %r14,%rsi
	movq %rax,%r14
	xorl %eax,%eax
	movq %rcx,88(%rsp)
	movq %r8,96(%rsp)
	movq %r9,104(%rsp)
	movq %r10,112(%rsp)
	movq %r11,120(%rsp)
	call memcpy@plt
	addq $8,%rsp
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-64(%r12)
	movq 64(%rsp),%rcx
	movq %rcx,-56(%r12)
	movq %rbx,-48(%r12)
	movq 80(%rsp),%rbx
	movq %rbx,-40(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,-32(%r12)
	movq 88(%rsp),%rbx
	movq 112(%rsp),%rcx
	addq %rcx,%rbx
	movq %rbx,-24(%r12)
	movq 96(%rsp),%rbx
	movq %rbx,-16(%r12)
	leaq -63(%r12),%rbx
	movq %rbx,8(%r14)
	subq $8,%rsp
	movq %r13,%rbx
	movq %r14,%rsi
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq 104(%rsp),%rax
	movq 112(%rsp),%rcx
	addq %rcx,%rax
	movq %rax,(%r12)
	movq %rbx,%rax
	leaq -7(%r12),%rbx
	addq $88,%rbp
	movq (%rbp),%rcx
	jmp *(%rcx)
_cbdHF:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdHb, .-_cbdHb


==================== Asm code ====================
2018-03-16 16:06:11.265331245 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdHb_info:
	.quad	_cbdHb
	.quad	62346
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.265896976 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf2_closure
.type GHC.IO.Handle.Text.hGetBuf2_closure, @object
GHC.IO.Handle.Text.hGetBuf2_closure:
	.quad	GHC.IO.Handle.Text.hGetBuf2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.266642767 UTC

.section .text
.align 8
sat_sbcdq_entry:
_cbdJd:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdJk
_cbdJl:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbdJa_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbdJa
_cbdJb:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdJk:
	jmp *-16(%r13)
	.size sat_sbcdq_entry, .-sat_sbcdq_entry


==================== Asm code ====================
2018-03-16 16:06:11.267309505 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbcdq_info:
	.quad	sat_sbcdq_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:11.268011588 UTC

.section .text
.align 8
_cbdJa:
_cbdJa:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbdJo
_cbdJn:
	movq 7(%rbx),%rax
	addq 8(%rbp),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdJo:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdJa, .-_cbdJa


==================== Asm code ====================
2018-03-16 16:06:11.268649732 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdJa_info:
	.quad	_cbdJa
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.269396924 UTC

.section .text
.align 8
sat_sbcdu_entry:
_cbdJx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdJy
_cbdJz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Num.$fNumInt_$c+_entry@gotpcrel(%rip)
_cbdJy:
	jmp *-16(%r13)
	.size sat_sbcdu_entry, .-sat_sbcdu_entry


==================== Asm code ====================
2018-03-16 16:06:11.270030419 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbcdu_info:
	.quad	sat_sbcdu_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:06:11.270593553 UTC

.section .data.rel.ro
.align 8
.align 1
ubdL0_srtd:
	.quad	SbcpG_srt+56
	.quad	43
	.quad	6807523164161


==================== Asm code ====================
2018-03-16 16:06:11.271381672 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBuf2_entry
.type GHC.IO.Handle.Text.hGetBuf2_entry, @object
GHC.IO.Handle.Text.hGetBuf2_entry:
_cbdJA:
	leaq -96(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdJB
_cbdJC:
	leaq block_cbdHQ_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r14,%rbx
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbdHQ
_cbdHR:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdJB:
	leaq GHC.IO.Handle.Text.hGetBuf2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetBuf2_entry, .-GHC.IO.Handle.Text.hGetBuf2_entry


==================== Asm code ====================
2018-03-16 16:06:11.272799838 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf2_info
.type GHC.IO.Handle.Text.hGetBuf2_info, @object
GHC.IO.Handle.Text.hGetBuf2_info:
	.quad	GHC.IO.Handle.Text.hGetBuf2_entry
	.quad	0
	.quad	-4294967282
	.quad	25769803801
	.quad	ubdL0_srtd


==================== Asm code ====================
2018-03-16 16:06:11.273835217 UTC

.section .data.rel.ro
.align 8
.align 1
ubdL1_srtd:
	.quad	SbcpG_srt+56
	.quad	43
	.quad	4608499908609


==================== Asm code ====================
2018-03-16 16:06:11.274585857 UTC

.section .text
.align 8
_cbdHQ:
_cbdHQ:
	leaq block_cbdHV_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rbx
	movq %rbx,%rdi
	movq 8(%rbp),%rbx
	movq %rdx,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbdHV
_cbdHW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdHQ, .-_cbdHQ


==================== Asm code ====================
2018-03-16 16:06:11.275224388 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdHQ_info:
	.quad	_cbdHQ
	.quad	4
	.quad	-4294967266
	.quad	ubdL1_srtd


==================== Asm code ====================
2018-03-16 16:06:11.27579215 UTC

.section .data.rel.ro
.align 8
.align 1
ubdL2_srtd:
	.quad	SbcpG_srt+56
	.quad	43
	.quad	4608499908609


==================== Asm code ====================
2018-03-16 16:06:11.276477921 UTC

.section .text
.align 8
_cbdHV:
_cbdHV:
	leaq block_cbdI0_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 31(%rbx),%rbx
	movq %rbx,%rcx
	movq 64(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,64(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbdI0
_cbdI1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdHV, .-_cbdHV


==================== Asm code ====================
2018-03-16 16:06:11.277105632 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdHV_info:
	.quad	_cbdHV
	.quad	8
	.quad	-4294967266
	.quad	ubdL2_srtd


==================== Asm code ====================
2018-03-16 16:06:11.277641298 UTC

.section .data.rel.ro
.align 8
.align 1
ubdL3_srtd:
	.quad	SbcpG_srt+56
	.quad	43
	.quad	4608499908609


==================== Asm code ====================
2018-03-16 16:06:11.278294236 UTC

.section .text
.align 8
_cbdI0:
_cbdI0:
	movq 7(%rbx),%rax
	cmpq 8(%rbp),%rax
	jle _ubdKB
_cbdK5:
	leaq block_cbdIb_info(%rip),%rcx
	movq %rcx,(%rbp)
	leaq lvl11_rb6WR_closure(%rip),%rsi
	movq 16(%rbp),%r14
	movq %rax,8(%rbp)
	movq %rbx,16(%rbp)
	jmp *Data.Typeable.Internal.sameTypeRep_entry@gotpcrel(%rip)
_ubdKB:
	movq %rbx,16(%rbp)
	addq $16,%rbp
	jmp _sbcd6
	.size _cbdI0, .-_cbdI0


==================== Asm code ====================
2018-03-16 16:06:11.278958873 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdI0_info:
	.quad	_cbdI0
	.quad	73
	.quad	-4294967266
	.quad	ubdL3_srtd


==================== Asm code ====================
2018-03-16 16:06:11.279688471 UTC

.section .text
.align 8
_cbdIb:
_cbdIb:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ubdKC
_cbdKv:
	movq 8(%rbp),%rax
	movq %rax,40(%rbp)
	leaq GHC.IO.Handle.Text.hGetBuf3_closure+1(%rip),%rax
	movq %rax,48(%rbp)
	movq 24(%rbp),%rax
	movq %rax,72(%rbp)
	addq $40,%rbp
	jmp _cbdIm
_ubdKC:
	addq $16,%rbp
	jmp _sbcd6
	.size _cbdIb, .-_cbdIb


==================== Asm code ====================
2018-03-16 16:06:11.280311793 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdIb_info:
	.quad	_cbdIb
	.quad	73
	.quad	287762808862
	.quad	SbcpG_srt+344


==================== Asm code ====================
2018-03-16 16:06:11.280987832 UTC

.section .text
.align 8
_sbcd6:
_sbcd6:
	leaq block_cbdJJ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 8(%rbp),%rax
	movq %rax,-24(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-16(%rbp)
	addq $-32,%rbp
	jmp *GHC.IO.BufferedIO.fillReadBuffer_entry@gotpcrel(%rip)
	.size _sbcd6, .-_sbcd6


==================== Asm code ====================
2018-03-16 16:06:11.281733901 UTC

.section .text
.align 8
_cbdJJ:
_cbdJJ:
	leaq block_cbdJL_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbdJL
_cbdJM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdJJ, .-_cbdJJ


==================== Asm code ====================
2018-03-16 16:06:11.282280406 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdJJ_info:
	.quad	_cbdJJ
	.quad	8840
	.quad	4294967326
	.quad	SbcpG_srt+392


==================== Asm code ====================
2018-03-16 16:06:11.28294576 UTC

.section .text
.align 8
_cbdJL:
_cbdJL:
	leaq block_cbdJQ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,64(%rbp)
	testb $7,%bl
	jne _cbdJQ
_cbdJU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdJL, .-_cbdJL


==================== Asm code ====================
2018-03-16 16:06:11.283482943 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdJL_info:
	.quad	_cbdJL
	.quad	8840
	.quad	4294967326
	.quad	SbcpG_srt+392


==================== Asm code ====================
2018-03-16 16:06:11.284309093 UTC

.section .text
.align 8
_cbdJQ:
_cbdJQ:
	movq 56(%rbp),%rax
	cmpq $0,7(%rbx)
	je _cbdK2
_cbdK1:
	movq 48(%rbp),%rbx
	movq 40(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 8(%rbp),%rsi
	movq 64(%rbp),%rdi
	movq %rdi,8(%rdx)
	subq $8,%rsp
	movq %r13,%r8
	movq %rsi,%r9
	movq %rdx,%rsi
	movq %rdi,%rdx
	movq %r8,%rdi
	movq %rax,%r8
	xorl %eax,%eax
	movq %r8,%r14
	movq %rcx,72(%rsp)
	movq %r9,80(%rsp)
	movq %rdx,88(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq 72(%rsp),%rax
	movq %rax,%r9
	movq %r14,%r8
	movq %rbx,%rdi
	movq 80(%rsp),%rax
	movq %rax,%rsi
	movq 64(%rsp),%rax
	movq %rax,%r14
	addq $72,%rbp
	jmp GHC.IO.Handle.Text.hGetBuf4_entry
_cbdK2:
	movq %rax,%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbdJQ, .-_cbdJQ


==================== Asm code ====================
2018-03-16 16:06:11.285035015 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdJQ_info:
	.quad	_cbdJQ
	.quad	648
	.quad	4294967326
	.quad	SbcpG_srt+392


==================== Asm code ====================
2018-03-16 16:06:11.286035765 UTC

.section .text
.align 8
_cbdIm:
_cbdIm:
	cmpq $0,(%rbp)
	jg _cbdKj
_cbdKu:
	movq 8(%rbp),%rax
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp _cbdJr
_cbdKj:
	leaq block_cbdIs_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbdIs
_cbdIt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdIm, .-_cbdIm


==================== Asm code ====================
2018-03-16 16:06:11.286747678 UTC

.section .text
.align 8
_cbdIs:
_cbdIs:
	leaq block_cbdIx_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _cbdIx
_cbdIy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdIs, .-_cbdIs


==================== Asm code ====================
2018-03-16 16:06:11.287308875 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdIs_info:
	.quad	_cbdIs
	.quad	69
	.quad	12884901918
	.quad	SbcpG_srt+344


==================== Asm code ====================
2018-03-16 16:06:11.287962216 UTC

.section .text
.align 8
_cbdIx:
_cbdIx:
	leaq block_cbdIC_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 40(%rbp),%rbx
	movq %rax,40(%rbp)
	testb $7,%bl
	jne _cbdIC
_cbdID:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdIx, .-_cbdIx


==================== Asm code ====================
2018-03-16 16:06:11.288567594 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdIx_info:
	.quad	_cbdIx
	.quad	197
	.quad	12884901918
	.quad	SbcpG_srt+344


==================== Asm code ====================
2018-03-16 16:06:11.28929888 UTC

.section .text
.align 8
_cbdIC:
_cbdIC:
	movq 16(%rbp),%rax
	addq 40(%rbp),%rax
	leaq block_cbdIN_info(%rip),%rcx
	movq %rcx,(%rbp)
	xorl %r9d,%r9d
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq GHC.IO.FD.$fBufferedIOFD12_closure@gotpcrel(%rip),%r14
	movq 8(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,16(%rbp)
	addq $-8,%rbp
	jmp *GHC.IO.FD.$wreadRawBufferPtr_entry@gotpcrel(%rip)
	.size _cbdIC, .-_cbdIC


==================== Asm code ====================
2018-03-16 16:06:11.289954495 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdIC_info:
	.quad	_cbdIC
	.quad	1221
	.quad	12884901918
	.quad	SbcpG_srt+344


==================== Asm code ====================
2018-03-16 16:06:11.290621197 UTC

.section .text
.align 8
_cbdIN:
_cbdIN:
	leaq block_cbdIP_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbdIP
_cbdIQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdIN, .-_cbdIN


==================== Asm code ====================
2018-03-16 16:06:11.291229622 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdIN_info:
	.quad	_cbdIN
	.quad	1093
	.quad	12884901918
	.quad	SbcpG_srt+344


==================== Asm code ====================
2018-03-16 16:06:11.292046828 UTC

.section .text
.align 8
_cbdIP:
_cbdIP:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbdKq
_cbdKp:
	movq 40(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jne _cbdKs
_cbdKt:
	addq $-16,%r12
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp _cbdJ4
_cbdKs:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	addq %rbx,%rax
	movq %rax,(%r12)
	movq 16(%rbp),%rax
	movq %rax,40(%rbp)
	leaq -7(%r12),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rax
	subq %rbx,%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _cbdIm
_cbdKq:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdIP, .-_cbdIP


==================== Asm code ====================
2018-03-16 16:06:11.29278218 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdIP_info:
	.quad	_cbdIP
	.quad	1093
	.quad	12884901918
	.quad	SbcpG_srt+344


==================== Asm code ====================
2018-03-16 16:06:11.293516781 UTC

.section .text
.align 8
_cbdJ4:
_cbdJ4:
	addq $32,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cbdKd
_cbdKc:
	leaq sat_sbcdq_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq (%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -24(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdKd:
	movq $32,904(%r13)
	leaq block_cbdJ3_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbdJ4, .-_cbdJ4


==================== Asm code ====================
2018-03-16 16:06:11.294235416 UTC

.section .text
.align 8
_cbdJ3:
_cbdJ3:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _cbdJ4
	.size _cbdJ3, .-_cbdJ3


==================== Asm code ====================
2018-03-16 16:06:11.294765449 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdJ3_info:
	.quad	_cbdJ3
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.295469191 UTC

.section .text
.align 8
_cbdJr:
_cbdJr:
	addq $32,%r12
	movq 8(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cbdKg
_cbdKf:
	leaq sat_sbcdu_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq (%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -24(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdKg:
	movq $32,904(%r13)
	leaq block_cbdJq_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdJr, .-_cbdJr


==================== Asm code ====================
2018-03-16 16:06:11.29619511 UTC

.section .text
.align 8
_cbdJq:
_cbdJq:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _cbdJr
	.size _cbdJq, .-_cbdJq


==================== Asm code ====================
2018-03-16 16:06:11.296769729 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdJq_info:
	.quad	_cbdJq
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.29892143 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.hGetBuf6_bytes
.type GHC.IO.Handle.Text.hGetBuf6_bytes, @object
GHC.IO.Handle.Text.hGetBuf6_bytes:
	.asciz "hGetBuf"


==================== Asm code ====================
2018-03-16 16:06:11.301523969 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf5_closure
.type GHC.IO.Handle.Text.hGetBuf5_closure, @object
GHC.IO.Handle.Text.hGetBuf5_closure:
	.quad	GHC.IO.Handle.Text.hGetBuf5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.302357365 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBuf5_entry
.type GHC.IO.Handle.Text.hGetBuf5_entry, @object
GHC.IO.Handle.Text.hGetBuf5_entry:
_cbdOf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdOg
_cbdOh:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbdOe
_cbdOd:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Text.hGetBuf6_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbdOg:
	jmp *-16(%r13)
_cbdOe:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.hGetBuf5_entry, .-GHC.IO.Handle.Text.hGetBuf5_entry


==================== Asm code ====================
2018-03-16 16:06:11.303559029 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf5_info
.type GHC.IO.Handle.Text.hGetBuf5_info, @object
GHC.IO.Handle.Text.hGetBuf5_info:
	.quad	GHC.IO.Handle.Text.hGetBuf5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:11.31928757 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whGetBuf_closure
.type GHC.IO.Handle.Text.$whGetBuf_closure, @object
GHC.IO.Handle.Text.$whGetBuf_closure:
	.quad	GHC.IO.Handle.Text.$whGetBuf_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.320158744 UTC

.section .text
.align 8
sat_sbceY_entry:
_cbdPb:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdPf
_cbdPg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbdP8_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbdP8
_cbdP9:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdPf:
	jmp *-16(%r13)
	.size sat_sbceY_entry, .-sat_sbceY_entry


==================== Asm code ====================
2018-03-16 16:06:11.320754582 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbceY_info:
	.quad	sat_sbceY_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:11.321455347 UTC

.section .text
.align 8
_cbdP8:
_cbdP8:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbdPj
_cbdPi:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rsi
	movq %rsi,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdPj:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdP8, .-_cbdP8


==================== Asm code ====================
2018-03-16 16:06:11.32215255 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdP8_info:
	.quad	_cbdP8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.322909792 UTC

.section .text
.align 8
sat_sbcfh_entry:
_cbdPH:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdPO
_cbdPP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbdPE_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbdPE
_cbdPF:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdPO:
	jmp *-16(%r13)
	.size sat_sbcfh_entry, .-sat_sbcfh_entry


==================== Asm code ====================
2018-03-16 16:06:11.323526638 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbcfh_info:
	.quad	sat_sbcfh_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:06:11.324276727 UTC

.section .text
.align 8
_cbdPE:
_cbdPE:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbdPS
_cbdPR:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 47(%rbx),%rdi
	movq 39(%rbx),%rbx
	addq 8(%rbp),%rbx
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%r8
	movq %r8,-48(%r12)
	movq %rax,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rdx,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rdi,(%r12)
	leaq -47(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdPS:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdPE, .-_cbdPE


==================== Asm code ====================
2018-03-16 16:06:11.324997477 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdPE_info:
	.quad	_cbdPE
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.325791894 UTC

.section .text
.align 8
sat_sbcfC_entry:
_cbdPU:
	leaq -96(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdPV
_cbdPW:
	leaq block_cbdOF_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbdOF
_cbdOG:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdPV:
	jmp *-8(%r13)
	.size sat_sbcfC_entry, .-sat_sbcfC_entry


==================== Asm code ====================
2018-03-16 16:06:11.32644761 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbcfC_info:
	.quad	sat_sbcfC_entry
	.quad	2
	.quad	12884901899
	.quad	8589934597
	.quad	SbcpG_srt+384


==================== Asm code ====================
2018-03-16 16:06:11.327227673 UTC

.section .text
.align 8
_cbdOF:
_cbdOF:
	leaq block_cbdOK_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rbx,%rax
	movq 47(%rbx),%rcx
	movq 63(%rbx),%rdx
	movq 71(%rbx),%rsi
	movq 95(%rbx),%rbx
	movq %rbx,%rdi
	movq 8(%rsi),%rbx
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	movq %rax,(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbdOK
_cbdOL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdOF, .-_cbdOF


==================== Asm code ====================
2018-03-16 16:06:11.327885296 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdOF_info:
	.quad	_cbdOF
	.quad	2
	.quad	12884901918
	.quad	SbcpG_srt+384


==================== Asm code ====================
2018-03-16 16:06:11.328567386 UTC

.section .text
.align 8
_cbdOK:
_cbdOK:
	leaq block_cbdOR_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 39(%rbx),%rax
	movq 47(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbdOR
_cbdOS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdOK, .-_cbdOK


==================== Asm code ====================
2018-03-16 16:06:11.329160526 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdOK_info:
	.quad	_cbdOK
	.quad	7
	.quad	12884901918
	.quad	SbcpG_srt+384


==================== Asm code ====================
2018-03-16 16:06:11.329982097 UTC

.section .text
.align 8
_cbdOR:
_cbdOR:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbdQU
_ubdRb:
	addq $24,%rbp
	jmp _sbcet
_ubdRc:
	addq $24,%rbp
	jmp _sbcet
_cbdQU:
	movq 16(%rbp),%rax
	cmpq 8(%rbp),%rax
	je _ubdRc
_cbdQg:
	movq 32(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbdOZ_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbdOZ
_cbdP0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdOR, .-_cbdOR


==================== Asm code ====================
2018-03-16 16:06:11.330719048 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdOR_info:
	.quad	_cbdOR
	.quad	201
	.quad	12884901918
	.quad	SbcpG_srt+384


==================== Asm code ====================
2018-03-16 16:06:11.331596473 UTC

.section .text
.align 8
_cbdOZ:
_cbdOZ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbdQj
_cbdQi:
	movq 24(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq 8(%rax),%rdx
	leaq sat_sbceY_info(%rip),%rsi
	movq %rsi,-16(%r12)
	movq %rdx,(%r12)
	leaq -16(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_cbdPo_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rcx
	movq 64(%rsp),%rax
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	movq %r14,24(%rbp)
	testb $7,%bl
	jne _cbdPo
_cbdPp:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdQj:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdOZ, .-_cbdOZ


==================== Asm code ====================
2018-03-16 16:06:11.332361705 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdOZ_info:
	.quad	_cbdOZ
	.quad	135
	.quad	12884901918
	.quad	SbcpG_srt+384


==================== Asm code ====================
2018-03-16 16:06:11.333193979 UTC

.section .text
.align 8
_cbdPo:
_cbdPo:
	movq 39(%rbx),%rax
	testq %rax,%rax
	jne _cbdQm
_cbdQR:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $8,%rbp
	jmp _sbcet
_cbdQm:
	leaq block_cbdPv_info(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rdx
	movq 23(%rbx),%rbx
	movq %rbx,%rsi
	movq 32(%rbp),%rbx
	movq %rdx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rcx,(%rbp)
	movq %rsi,32(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbdPv
_cbdPw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdPo, .-_cbdPo


==================== Asm code ====================
2018-03-16 16:06:11.333915693 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdPo_info:
	.quad	_cbdPo
	.quad	7
	.quad	12884901918
	.quad	SbcpG_srt+384


==================== Asm code ====================
2018-03-16 16:06:11.334789546 UTC

.section .text
.align 8
_cbdPv:
_cbdPv:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbdQo
_cbdQG:
	leaq block_cbdQu_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbdQu
_cbdQv:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdQr:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbdQo:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbdQr
_cbdQq:
	leaq sat_sbcfh_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 32(%rbp),%rax
	leaq -24(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $32,%rbp
	jmp _sbcet
	.size _cbdPv, .-_cbdPv


==================== Asm code ====================
2018-03-16 16:06:11.335539568 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdPv_info:
	.quad	_cbdPv
	.quad	4234
	.quad	12884901918
	.quad	SbcpG_srt+384


==================== Asm code ====================
2018-03-16 16:06:11.336195177 UTC

.section .text
.align 8
_cbdQu:
_cbdQu:
	leaq block_cbdQz_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 48(%rbp),%r14
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 39(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,48(%rbp)
	addq $-8,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
	.size _cbdQu, .-_cbdQu


==================== Asm code ====================
2018-03-16 16:06:11.33684084 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdQu_info:
	.quad	_cbdQu
	.quad	4234
	.quad	12884901918
	.quad	SbcpG_srt+384


==================== Asm code ====================
2018-03-16 16:06:11.337874337 UTC

.section .text
.align 8
_cbdQz:
_cbdQz:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbdQK
_cbdQJ:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 64(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq block_cbdQC_info(%rip),%rax
	movq %rax,32(%rbp)
	leaq -47(%r12),%r8
	movq 48(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 56(%rbp),%r14
	addq $32,%rbp
	jmp *GHC.IO.Handle.Internals.$wstreamEncode_entry@gotpcrel(%rip)
_cbdQK:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdQz, .-_cbdQz


==================== Asm code ====================
2018-03-16 16:06:11.338609591 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdQz_info:
	.quad	_cbdQz
	.quad	8459
	.quad	12884901918
	.quad	SbcpG_srt+384


==================== Asm code ====================
2018-03-16 16:06:11.339296133 UTC

.section .text
.align 8
_cbdQC:
_cbdQC:
	leaq block_cbdQE_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbdQE
_cbdQM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdQC, .-_cbdQC


==================== Asm code ====================
2018-03-16 16:06:11.339902552 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdQC_info:
	.quad	_cbdQC
	.quad	903
	.quad	12884901918
	.quad	SbcpG_srt+384


==================== Asm code ====================
2018-03-16 16:06:11.340584194 UTC

.section .text
.align 8
_cbdQE:
_cbdQE:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $8,%rbp
	jmp _sbcet
	.size _cbdQE, .-_cbdQE


==================== Asm code ====================
2018-03-16 16:06:11.341230577 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdQE_info:
	.quad	_cbdQE
	.quad	903
	.quad	12884901918
	.quad	SbcpG_srt+384


==================== Asm code ====================
2018-03-16 16:06:11.34192466 UTC

.section .text
.align 8
_sbcet:
_sbcet:
	movq (%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbdQ2_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _cbdQ2
_cbdQ4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbcet, .-_sbcet


==================== Asm code ====================
2018-03-16 16:06:11.342698637 UTC

.section .text
.align 8
_cbdQ2:
_cbdQ2:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 8(%rbp),%rdx
	movq 39(%rbx),%rsi
	cmpq 47(%rbx),%rsi
	je _cbdQd
_cbdQc:
	movq %rcx,%r9
	leaq GHC.IO.Handle.Text.hGetBuf3_closure+1(%rip),%r8
	movq %rax,%rdi
	movq %rbx,%rsi
	movq %rdx,%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Text.hGetBuf4_entry
_cbdQd:
	movq %rcx,%r9
	leaq GHC.IO.Handle.Text.hGetBuf3_closure+1(%rip),%r8
	movq %rax,%rdi
	movq %rbx,%rsi
	movq %rdx,%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Text.hGetBuf2_entry
	.size _cbdQ2, .-_cbdQ2


==================== Asm code ====================
2018-03-16 16:06:11.343413482 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdQ2_info:
	.quad	_cbdQ2
	.quad	3
	.quad	12884901918
	.quad	SbcpG_srt+384


==================== Asm code ====================
2018-03-16 16:06:11.343970538 UTC

.section .data.rel.ro
.align 8
.align 1
ubdRF_srtd:
	.quad	SbcpG_srt+8
	.quad	51
	.quad	2111062325331969


==================== Asm code ====================
2018-03-16 16:06:11.344797098 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$whGetBuf_entry
.type GHC.IO.Handle.Text.$whGetBuf_entry, @object
GHC.IO.Handle.Text.$whGetBuf_entry:
_cbdRx:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbdRB
_cbdRA:
	testq %rdi,%rdi
	je _cbdRw
_cbdRv:
	testq %rdi,%rdi
	jge _cbdRD
_cbdRE:
	addq $-40,%r12
	leaq GHC.IO.Handle.Text.hGetBuf5_closure(%rip),%rsi
	jmp GHC.IO.Handle.Text.$willegalBufferSize_entry
_cbdRD:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	movq %rdi,-24(%r12)
	leaq sat_sbcfC_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rsi,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rdi
	movq %r14,%rsi
	leaq GHC.IO.Handle.Text.hGetBuf5_closure(%rip),%r14
	jmp *GHC.IO.Handle.Internals.wantReadableHandle_1_entry@gotpcrel(%rip)
_cbdRB:
	movq $40,904(%r13)
	leaq GHC.IO.Handle.Text.$whGetBuf_closure(%rip),%rbx
	jmp *-8(%r13)
_cbdRw:
	addq $-40,%r12
	leaq GHC.IO.Handle.Text.hGetBuf3_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.$whGetBuf_entry, .-GHC.IO.Handle.Text.$whGetBuf_entry


==================== Asm code ====================
2018-03-16 16:06:11.345589122 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whGetBuf_info
.type GHC.IO.Handle.Text.$whGetBuf_info, @object
GHC.IO.Handle.Text.$whGetBuf_info:
	.quad	GHC.IO.Handle.Text.$whGetBuf_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869206
	.quad	ubdRF_srtd


==================== Asm code ====================
2018-03-16 16:06:11.349696589 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf1_closure
.type GHC.IO.Handle.Text.hGetBuf1_closure, @object
GHC.IO.Handle.Text.hGetBuf1_closure:
	.quad	GHC.IO.Handle.Text.hGetBuf1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.350548168 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBuf1_entry
.type GHC.IO.Handle.Text.hGetBuf1_entry, @object
GHC.IO.Handle.Text.hGetBuf1_entry:
_cbdTF:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdTG
_cbdTH:
	leaq block_cbdTC_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbdTC
_cbdTD:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdTG:
	leaq GHC.IO.Handle.Text.hGetBuf1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hGetBuf1_entry, .-GHC.IO.Handle.Text.hGetBuf1_entry


==================== Asm code ====================
2018-03-16 16:06:11.351235164 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf1_info
.type GHC.IO.Handle.Text.hGetBuf1_info, @object
GHC.IO.Handle.Text.hGetBuf1_info:
	.quad	GHC.IO.Handle.Text.hGetBuf1_entry
	.quad	0
	.quad	21474836494
	.quad	17179869207
	.quad	SbcpG_srt+400


==================== Asm code ====================
2018-03-16 16:06:11.351851929 UTC

.section .text
.align 8
_cbdTC:
_cbdTC:
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Text.$whGetBuf_entry
	.size _cbdTC, .-_cbdTC


==================== Asm code ====================
2018-03-16 16:06:11.352395224 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdTC_info:
	.quad	_cbdTC
	.quad	2
	.quad	4294967326
	.quad	SbcpG_srt+400


==================== Asm code ====================
2018-03-16 16:06:11.354540143 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf_closure
.type GHC.IO.Handle.Text.hGetBuf_closure, @object
GHC.IO.Handle.Text.hGetBuf_closure:
	.quad	GHC.IO.Handle.Text.hGetBuf_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.355165932 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hGetBuf_entry
.type GHC.IO.Handle.Text.hGetBuf_entry, @object
GHC.IO.Handle.Text.hGetBuf_entry:
_cbdU0:
	jmp GHC.IO.Handle.Text.hGetBuf1_entry
	.size GHC.IO.Handle.Text.hGetBuf_entry, .-GHC.IO.Handle.Text.hGetBuf_entry


==================== Asm code ====================
2018-03-16 16:06:11.355759793 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hGetBuf_info
.type GHC.IO.Handle.Text.hGetBuf_info, @object
GHC.IO.Handle.Text.hGetBuf_info:
	.quad	GHC.IO.Handle.Text.hGetBuf_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	SbcpG_srt+416


==================== Asm code ====================
2018-03-16 16:06:11.35779192 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl14_rb6WU_bytes:
	.asciz "error"


==================== Asm code ====================
2018-03-16 16:06:11.360212719 UTC

.section .data
.align 8
.align 1
lvl15_rb6WV_closure:
	.quad	lvl15_rb6WV_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.361029423 UTC

.section .text
.align 8
lvl15_rb6WV_entry:
_cbdUe:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdUf
_cbdUg:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbdUd
_cbdUc:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl14_rb6WU_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbdUf:
	jmp *-16(%r13)
_cbdUd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl15_rb6WV_entry, .-lvl15_rb6WV_entry


==================== Asm code ====================
2018-03-16 16:06:11.361791691 UTC

.section .data.rel.ro
.align 8
.align 1
lvl15_rb6WV_info:
	.quad	lvl15_rb6WV_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:11.364227169 UTC

.section .data
.align 8
.align 1
lvl16_rb6WW_closure:
	.quad	lvl16_rb6WW_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.365047858 UTC

.section .text
.align 8
lvl16_rb6WW_entry:
_cbdUv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdUw
_cbdUx:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbdUu
_cbdUt:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Text.$trModule4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbdUw:
	jmp *-16(%r13)
_cbdUu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl16_rb6WW_entry, .-lvl16_rb6WW_entry


==================== Asm code ====================
2018-03-16 16:06:11.365809029 UTC

.section .data.rel.ro
.align 8
.align 1
lvl16_rb6WW_info:
	.quad	lvl16_rb6WW_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:11.368194351 UTC

.section .data
.align 8
.align 1
lvl17_rb6WX_closure:
	.quad	lvl17_rb6WX_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.369002073 UTC

.section .text
.align 8
lvl17_rb6WX_entry:
_cbdUM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdUN
_cbdUO:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbdUL
_cbdUK:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Text.$trModule2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbdUN:
	jmp *-16(%r13)
_cbdUL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl17_rb6WX_entry, .-lvl17_rb6WX_entry


==================== Asm code ====================
2018-03-16 16:06:11.370049305 UTC

.section .data.rel.ro
.align 8
.align 1
lvl17_rb6WX_info:
	.quad	lvl17_rb6WX_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:11.371777186 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl18_rb6WY_bytes:
	.asciz "./GHC/IO/Handle/Text.hs"


==================== Asm code ====================
2018-03-16 16:06:11.37420728 UTC

.section .data
.align 8
.align 1
lvl19_rb6WZ_closure:
	.quad	lvl19_rb6WZ_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.374958191 UTC

.section .text
.align 8
lvl19_rb6WZ_entry:
_cbdV4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdV5
_cbdV6:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbdV3
_cbdV2:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl18_rb6WY_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbdV5:
	jmp *-16(%r13)
_cbdV3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl19_rb6WZ_entry, .-lvl19_rb6WZ_entry


==================== Asm code ====================
2018-03-16 16:06:11.375668936 UTC

.section .data.rel.ro
.align 8
.align 1
lvl19_rb6WZ_info:
	.quad	lvl19_rb6WZ_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:11.377319765 UTC

.section .data
.align 8
.align 1
lvl20_rb6X0_closure:
	.quad	GHC.Types.I#_con_info
	.quad	785


==================== Asm code ====================
2018-03-16 16:06:11.378907035 UTC

.section .data
.align 8
.align 1
lvl21_rb6X1_closure:
	.quad	GHC.Types.I#_con_info
	.quad	17


==================== Asm code ====================
2018-03-16 16:06:11.381079517 UTC

.section .data
.align 8
.align 1
lvl22_rb6X2_closure:
	.quad	GHC.Types.I#_con_info
	.quad	38


==================== Asm code ====================
2018-03-16 16:06:11.383299763 UTC

.section .data
.align 8
.align 1
lvl23_rb6X3_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl16_rb6WW_closure
	.quad	lvl17_rb6WX_closure
	.quad	lvl19_rb6WZ_closure
	.quad	lvl20_rb6X0_closure+1
	.quad	lvl21_rb6X1_closure+1
	.quad	lvl20_rb6X0_closure+1
	.quad	lvl22_rb6X2_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.38505931 UTC

.section .data
.align 8
.align 1
lvl24_rb6X4_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl15_rb6WV_closure
	.quad	lvl23_rb6X3_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.386750625 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl25_rb6X5_bytes:
	.asciz "Todo: hPutBuf"


==================== Asm code ====================
2018-03-16 16:06:11.389679603 UTC

.section .data
.align 8
.align 1
lvl26_rb6X6_closure:
	.quad	lvl26_rb6X6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.390617566 UTC

.section .text
.align 8
lvl26_rb6X6_entry:
_cbdVt:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdVu
_cbdVv:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbdVq
_cbdVp:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_cbdVr_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl25_rb6X5_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbdVu:
	jmp *-16(%r13)
_cbdVq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl26_rb6X6_entry, .-lvl26_rb6X6_entry


==================== Asm code ====================
2018-03-16 16:06:11.39134509 UTC

.section .data.rel.ro
.align 8
.align 1
lvl26_rb6X6_info:
	.quad	lvl26_rb6X6_entry
	.quad	0
	.quad	12884901909
	.quad	SbcpG_srt+424


==================== Asm code ====================
2018-03-16 16:06:11.391952852 UTC

.section .text
.align 8
_cbdVr:
_cbdVr:
	movq %rbx,%rsi
	leaq lvl24_rb6X4_closure+2(%rip),%r14
	addq $8,%rbp
	jmp *GHC.Err.error_entry@gotpcrel(%rip)
	.size _cbdVr, .-_cbdVr


==================== Asm code ====================
2018-03-16 16:06:11.392534776 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdVr_info:
	.quad	_cbdVr
	.quad	0
	.quad	12884901918
	.quad	SbcpG_srt+424


==================== Asm code ====================
2018-03-16 16:06:11.39467696 UTC

.section .data
.align 8
.align 1
lvl27_rb6X7_closure:
	.quad	GHC.Types.I#_con_info
	.quad	790


==================== Asm code ====================
2018-03-16 16:06:11.396448494 UTC

.section .data
.align 8
.align 1
lvl28_rb6X8_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl16_rb6WW_closure
	.quad	lvl17_rb6WX_closure
	.quad	lvl19_rb6WZ_closure
	.quad	lvl27_rb6X7_closure+1
	.quad	lvl21_rb6X1_closure+1
	.quad	lvl27_rb6X7_closure+1
	.quad	lvl22_rb6X2_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.398217903 UTC

.section .data
.align 8
.align 1
lvl29_rb6X9_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl15_rb6WV_closure
	.quad	lvl28_rb6X8_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.40112991 UTC

.section .data
.align 8
.align 1
lvl30_rb6Xa_closure:
	.quad	lvl30_rb6Xa_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.401998186 UTC

.section .text
.align 8
lvl30_rb6Xa_entry:
_cbdVW:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdVX
_cbdVY:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbdVT
_cbdVS:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_cbdVU_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl25_rb6X5_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbdVX:
	jmp *-16(%r13)
_cbdVT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl30_rb6Xa_entry, .-lvl30_rb6Xa_entry


==================== Asm code ====================
2018-03-16 16:06:11.402761956 UTC

.section .data.rel.ro
.align 8
.align 1
lvl30_rb6Xa_info:
	.quad	lvl30_rb6Xa_entry
	.quad	0
	.quad	21474836501
	.quad	SbcpG_srt+424


==================== Asm code ====================
2018-03-16 16:06:11.403426713 UTC

.section .text
.align 8
_cbdVU:
_cbdVU:
	movq %rbx,%rsi
	leaq lvl29_rb6X9_closure+2(%rip),%r14
	addq $8,%rbp
	jmp *GHC.Err.error_entry@gotpcrel(%rip)
	.size _cbdVU, .-_cbdVU


==================== Asm code ====================
2018-03-16 16:06:11.404084112 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdVU_info:
	.quad	_cbdVU
	.quad	0
	.quad	21474836510
	.quad	SbcpG_srt+424


==================== Asm code ====================
2018-03-16 16:06:11.418061855 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$wbufWrite_closure
.type GHC.IO.Handle.Text.$wbufWrite_closure, @object
GHC.IO.Handle.Text.$wbufWrite_closure:
	.quad	GHC.IO.Handle.Text.$wbufWrite_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.418775445 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$wbufWrite_slow
.type GHC.IO.Handle.Text.$wbufWrite_slow, @object
GHC.IO.Handle.Text.$wbufWrite_slow:
_cbdWf:
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Text.$wbufWrite_entry
	.size GHC.IO.Handle.Text.$wbufWrite_slow, .-GHC.IO.Handle.Text.$wbufWrite_slow


==================== Asm code ====================
2018-03-16 16:06:11.419368829 UTC

.section .data.rel.ro
.align 8
.align 1
ubdZg_srtd:
	.quad	SbcpG_srt+56
	.quad	54
	.quad	17451452851027969


==================== Asm code ====================
2018-03-16 16:06:11.420155672 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$wbufWrite_entry
.type GHC.IO.Handle.Text.$wbufWrite_entry, @object
GHC.IO.Handle.Text.$wbufWrite_entry:
_cbdWm:
	leaq -112(%rbp),%rax
	cmpq %r15,%rax
	jb _cbdWu
_ubdZ2:
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp _cbdWg
_cbdWu:
	leaq GHC.IO.Handle.Text.$wbufWrite_closure(%rip),%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.$wbufWrite_entry, .-GHC.IO.Handle.Text.$wbufWrite_entry


==================== Asm code ====================
2018-03-16 16:06:11.420850555 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$wbufWrite_info
.type GHC.IO.Handle.Text.$wbufWrite_info, @object
GHC.IO.Handle.Text.$wbufWrite_info:
	.quad	GHC.IO.Handle.Text.$wbufWrite_entry
	.quad	0
	.quad	-4294967282
	.quad	21474836480
	.quad	ubdZg_srtd
	.quad	260
	.quad	GHC.IO.Handle.Text.$wbufWrite_slow


==================== Asm code ====================
2018-03-16 16:06:11.421537028 UTC

.section .text
.align 8
_cbdWg:
_cbdWg:
	movq (%rbp),%rax
	leaq block_cbdWj_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbdWj
_cbdWk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdWg, .-_cbdWg


==================== Asm code ====================
2018-03-16 16:06:11.422148568 UTC

.section .data.rel.ro
.align 8
.align 1
ubdZh_srtd:
	.quad	SbcpG_srt+56
	.quad	54
	.quad	15199653037342721


==================== Asm code ====================
2018-03-16 16:06:11.423542596 UTC

.section .text
.align 8
_cbdWj:
_cbdWj:
	leaq block_cbdWp_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 31(%rbx),%rbx
	movq %rcx,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	movq %rax,(%rbp)
	addq $-32,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cbdWj, .-_cbdWj


==================== Asm code ====================
2018-03-16 16:06:11.424200833 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdWj_info:
	.quad	_cbdWj
	.quad	131
	.quad	-4294967266
	.quad	ubdZh_srtd


==================== Asm code ====================
2018-03-16 16:06:11.424801325 UTC

.section .data.rel.ro
.align 8
.align 1
ubdZi_srtd:
	.quad	SbcpG_srt+56
	.quad	54
	.quad	15199653037342721


==================== Asm code ====================
2018-03-16 16:06:11.425524287 UTC

.section .text
.align 8
_cbdWp:
_cbdWp:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbdWt_info(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq %rbx,%rcx
	movq 7(%rbx),%rdx
	movq 15(%rbx),%rbx
	movq %rbx,%rsi
	movq %rax,%rbx
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	movq %rcx,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbdWt
_cbdWy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbdWp, .-_cbdWp


==================== Asm code ====================
2018-03-16 16:06:11.426165352 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdWp_info:
	.quad	_cbdWp
	.quad	2055
	.quad	-4294967266
	.quad	ubdZi_srtd


==================== Asm code ====================
2018-03-16 16:06:11.426733985 UTC

.section .data.rel.ro
.align 8
.align 1
ubdZj_srtd:
	.quad	SbcpG_srt+56
	.quad	54
	.quad	15199653037342721


==================== Asm code ====================
2018-03-16 16:06:11.42776671 UTC

.section .text
.align 8
_cbdWt:
_cbdWt:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbdWE
_cbdWD:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rdx
	movq 31(%rbx),%rsi
	movq 39(%rbx),%rdi
	movq 47(%rbx),%r8
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%r9
	movq %r9,-8(%r12)
	movq 72(%rbp),%r9
	movq %r9,(%r12)
	movq 32(%rbp),%r10
	movq 24(%rbp),%r11
	leaq -7(%r12),%r14
	cmpq %rsi,%r9
	jge _sbcgl
_cbdYL:
	movq %r14,64(%rsp)
	movq %rsi,%r14
	subq %r8,%r14
	cmpq %r14,%r9
	jg _nbdZU
_cbdYb:
	leaq block_cbdYa_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq 64(%rbp),%rbx
	movq %r8,(%rbp)
	movq %rdi,8(%rbp)
	movq %rsi,16(%rbp)
	movq %rcx,40(%rbp)
	movq %rax,56(%rbp)
	movq %rdx,64(%rbp)
	movq 64(%rsp),%rax
	movq %rax,80(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbdYa
_cbdYc:
	movq (%rbx),%rax
	jmp *(%rax)
_ubdZ3:
	movq %rsi,32(%rbp)
	movq %r14,48(%rbp)
	addq $8,%rbp
	jmp _sbcgm
_nbdZU:
	movq 64(%rsp),%r14
_sbcgl:
	testq %r8,%r8
	jle _ubdZ3
_cbdXS:
	leaq block_cbdXR_info(%rip),%rax
	movq %rax,(%rbp)
	movq %r14,%rax
	movq %r10,%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq %r11,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq %rsi,24(%rbp)
	movq %rax,32(%rbp)
	addq $-24,%rbp
	jmp *GHC.IO.BufferedIO.flushWriteBuffer_entry@gotpcrel(%rip)
_cbdWE:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdWt, .-_cbdWt


==================== Asm code ====================
2018-03-16 16:06:11.428674808 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdWt_info:
	.quad	_cbdWt
	.quad	16586
	.quad	-4294967266
	.quad	ubdZj_srtd


==================== Asm code ====================
2018-03-16 16:06:11.429143346 UTC

.section .data.rel.ro
.align 8
.align 1
ubdZk_srtd:
	.quad	SbcpG_srt+56
	.quad	54
	.quad	15199653037342721


==================== Asm code ====================
2018-03-16 16:06:11.429935532 UTC

.section .text
.align 8
_cbdXR:
_cbdXR:
	movq 32(%rbp),%rax
	movq 48(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq %rbx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rcx,%rsi
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rdx,%r14
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq %rbx,48(%rbp)
	movq %r14,32(%rbp)
	addq $8,%rbp
	jmp _sbcgm
	.size _cbdXR, .-_cbdXR


==================== Asm code ====================
2018-03-16 16:06:11.430531145 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdXR_info:
	.quad	_cbdXR
	.quad	16842
	.quad	-4294967266
	.quad	ubdZk_srtd


==================== Asm code ====================
2018-03-16 16:06:11.431230246 UTC

.section .text
.align 8
_sbcgm:
_sbcgm:
	movq 64(%rbp),%rax
	movq 72(%rbp),%rbx
	cmpq 24(%rbp),%rax
	jge _cbdWX
_cbdXK:
	movq 48(%rbp),%rcx
	movq %rcx,48(%rbp)
	movq 56(%rbp),%rcx
	movq %rcx,56(%rbp)
	movq %rax,64(%rbp)
	movq %rbx,72(%rbp)
	addq $48,%rbp
	jmp _cbdWg
_cbdWX:
	leaq block_cbdWV_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbdWV
_cbdWY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbcgm, .-_sbcgm


==================== Asm code ====================
2018-03-16 16:06:11.431874929 UTC

.section .data.rel.ro
.align 8
.align 1
ubdZl_srtd:
	.quad	SbcpG_srt+56
	.quad	54
	.quad	15199653037342721


==================== Asm code ====================
2018-03-16 16:06:11.432607122 UTC

.section .text
.align 8
_cbdWV:
_cbdWV:
	movq 40(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbdX5
_cbdXq:
	leaq block_cbdXo_info(%rip),%rbx
	movq %rbx,(%rbp)
	leaq lvl11_rb6WR_closure(%rip),%rsi
	movq %rax,%r14
	jmp *Data.Typeable.Internal.sameTypeRep_entry@gotpcrel(%rip)
_cbdX5:
	leaq block_cbdX2_info(%rip),%rbx
	movq %rbx,(%rbp)
	leaq lvl11_rb6WR_closure(%rip),%rsi
	movq %rax,%r14
	jmp *Data.Typeable.Internal.sameTypeRep_entry@gotpcrel(%rip)
	.size _cbdWV, .-_cbdWV


==================== Asm code ====================
2018-03-16 16:06:11.433313663 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdWV_info:
	.quad	_cbdWV
	.quad	54218
	.quad	-4294967266
	.quad	ubdZl_srtd


==================== Asm code ====================
2018-03-16 16:06:11.434021777 UTC

.section .text
.align 8
_cbdX2:
_cbdX2:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbdXb
_cbdXg:
	leaq block_cbdXe_info(%rip),%rax
	movq %rax,(%rbp)
	movq 64(%rbp),%rbx
	testb $7,%bl
	jne _cbdXe
_cbdXh:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdXb:
	leaq lvl30_rb6Xa_closure(%rip),%rbx
	addq $88,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cbdX2, .-_cbdX2


==================== Asm code ====================
2018-03-16 16:06:11.434709944 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdX2_info:
	.quad	_cbdX2
	.quad	57290
	.quad	73014444062
	.quad	SbcpG_srt+448


==================== Asm code ====================
2018-03-16 16:06:11.435354449 UTC

.section .text
.align 8
_cbdXe:
_cbdXe:
	movq 72(%rbp),%r8
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $88,%rbp
	jmp *GHC.IO.FD.$w$cwriteNonBlocking_entry@gotpcrel(%rip)
	.size _cbdXe, .-_cbdXe


==================== Asm code ====================
2018-03-16 16:06:11.435965566 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdXe_info:
	.quad	_cbdXe
	.quad	65482
	.quad	4294967326
	.quad	SbcpG_srt+448


==================== Asm code ====================
2018-03-16 16:06:11.43667034 UTC

.section .text
.align 8
_cbdXo:
_cbdXo:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbdXw
_cbdXG:
	leaq block_cbdXz_info(%rip),%rax
	movq %rax,(%rbp)
	movq 64(%rbp),%rbx
	testb $7,%bl
	jne _cbdXz
_cbdXA:
	movq (%rbx),%rax
	jmp *(%rax)
_cbdXw:
	leaq lvl26_rb6X6_closure(%rip),%rbx
	addq $88,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _cbdXo, .-_cbdXo


==================== Asm code ====================
2018-03-16 16:06:11.437331185 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdXo_info:
	.quad	_cbdXo
	.quad	55242
	.quad	21474836510
	.quad	SbcpG_srt+456


==================== Asm code ====================
2018-03-16 16:06:11.437985466 UTC

.section .text
.align 8
_cbdXz:
_cbdXz:
	leaq block_cbdXE_info(%rip),%rax
	movq %rax,40(%rbp)
	movq 72(%rbp),%r8
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $40,%rbp
	jmp *GHC.IO.FD.$wfdWrite_entry@gotpcrel(%rip)
	.size _cbdXz, .-_cbdXz


==================== Asm code ====================
2018-03-16 16:06:11.438606858 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdXz_info:
	.quad	_cbdXz
	.quad	63434
	.quad	4294967326
	.quad	SbcpG_srt+456


==================== Asm code ====================
2018-03-16 16:06:11.439217652 UTC

.section .text
.align 8
_cbdXE:
_cbdXE:
	movq 8(%rbp),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbdXE, .-_cbdXE


==================== Asm code ====================
2018-03-16 16:06:11.439795135 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdXE_info:
	.quad	_cbdXE
	.quad	1925
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.440947861 UTC

.section .text
.align 8
_cbdYa:
_cbdYa:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbdYi
_cbdYh:
	movq 88(%rbp),%rax
	movq 80(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 56(%rbp),%rsi
	movq 72(%rbp),%rdi
	movq 64(%rbp),%r8
	movq 48(%rbp),%r9
	movq 24(%rbp),%r10
	movq 16(%rbp),%r11
	movq 8(%rbp),%r14
	subq $8,%rsp
	movq %rax,72(%rsp)
	movq %rdi,%rax
	addq %r14,%rax
	movq %rdx,80(%rsp)
	movq %rcx,%rdx
	movq %rdi,88(%rsp)
	movq %rax,%rdi
	movq %rsi,%rax
	movq 7(%rbx),%rsi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,96(%rsp)
	movq %r8,104(%rsp)
	movq %r9,112(%rsp)
	movq %r10,120(%rsp)
	movq %r11,128(%rsp)
	call memcpy@plt
	addq $8,%rsp
	movq 112(%rsp),%rcx
	movq %rcx,%rdx
	subq %r14,%rdx
	movq 88(%rsp),%rsi
	cmpq %rdx,%rsi
	je _cbdYI
_cbdYA:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 96(%rsp),%rax
	movq %rax,-40(%r12)
	movq 104(%rsp),%rax
	movq %rax,-32(%r12)
	movq 80(%rsp),%rax
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq 120(%rsp),%rax
	movq %rax,-8(%r12)
	addq %rsi,%r14
	movq %r14,(%r12)
	leaq -47(%r12),%rax
	movq %rax,8(%rbx)
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq 64(%rsp),%rax
	movq %rax,%rbx
	addq $96,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbdYI:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 96(%rsp),%rax
	movq %rax,-40(%r12)
	movq 104(%rsp),%rax
	movq %rax,-32(%r12)
	movq 80(%rsp),%rax
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq 120(%rsp),%rax
	movq %rax,-8(%r12)
	addq %rsi,%r14
	movq %r14,(%r12)
	leaq block_cbdYH_info(%rip),%rax
	movq %rax,48(%rbp)
	movq 72(%rsp),%rax
	movq %rax,%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rax
	movq %rax,24(%rbp)
	leaq -47(%r12),%rax
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp *GHC.IO.BufferedIO.flushWriteBuffer_entry@gotpcrel(%rip)
_cbdYi:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbdYa, .-_cbdYa


==================== Asm code ====================
2018-03-16 16:06:11.442424406 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdYa_info:
	.quad	_cbdYa
	.quad	49611
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.443111789 UTC

.section .text
.align 8
_cbdYH:
_cbdYH:
	movq 40(%rbp),%rax
	movq 8(%rbp),%rcx
	movq %rbx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rcx,%rsi
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbdYH, .-_cbdYH


==================== Asm code ====================
2018-03-16 16:06:11.443721311 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbdYH_info:
	.quad	_cbdYH
	.quad	901
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.44536361 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.hPutBuf4_bytes
.type GHC.IO.Handle.Text.hPutBuf4_bytes, @object
GHC.IO.Handle.Text.hPutBuf4_bytes:
	.asciz "hPutBuf"


==================== Asm code ====================
2018-03-16 16:06:11.447958498 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBuf3_closure
.type GHC.IO.Handle.Text.hPutBuf3_closure, @object
GHC.IO.Handle.Text.hPutBuf3_closure:
	.quad	GHC.IO.Handle.Text.hPutBuf3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.448785812 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutBuf3_entry
.type GHC.IO.Handle.Text.hPutBuf3_entry, @object
GHC.IO.Handle.Text.hPutBuf3_entry:
_cbe19:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbe1a
_cbe1b:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbe18
_cbe17:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Text.hPutBuf4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbe1a:
	jmp *-16(%r13)
_cbe18:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.hPutBuf3_entry, .-GHC.IO.Handle.Text.hPutBuf3_entry


==================== Asm code ====================
2018-03-16 16:06:11.44953787 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBuf3_info
.type GHC.IO.Handle.Text.hPutBuf3_info, @object
GHC.IO.Handle.Text.hPutBuf3_info:
	.quad	GHC.IO.Handle.Text.hPutBuf3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:11.459138313 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whPutBuf'_closure
.type GHC.IO.Handle.Text.$whPutBuf'_closure, @object
GHC.IO.Handle.Text.$whPutBuf'_closure:
	.quad	GHC.IO.Handle.Text.$whPutBuf'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.45984429 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$whPutBuf'_slow
.type GHC.IO.Handle.Text.$whPutBuf'_slow, @object
GHC.IO.Handle.Text.$whPutBuf'_slow:
_cbe1l:
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Text.$whPutBuf'_entry
	.size GHC.IO.Handle.Text.$whPutBuf'_slow, .-GHC.IO.Handle.Text.$whPutBuf'_slow


==================== Asm code ====================
2018-03-16 16:06:11.460681654 UTC

.section .text
.align 8
act_sbcha_entry:
_cbe1C:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cbe1D
_cbe1E:
	leaq block_cbe1z_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rbx
	movq %rbx,%rdx
	movq %r14,%rbx
	movq %rax,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbe1z
_cbe1A:
	movq (%rbx),%rax
	jmp *(%rax)
_cbe1D:
	jmp *-8(%r13)
	.size act_sbcha_entry, .-act_sbcha_entry


==================== Asm code ====================
2018-03-16 16:06:11.462266479 UTC

.section .data.rel.ro
.align 8
.align 1
act_sbcha_info:
	.quad	act_sbcha_entry
	.quad	4294967298
	.quad	4294967304
	.quad	8589934597
	.quad	SbcpG_srt+464


==================== Asm code ====================
2018-03-16 16:06:11.463020277 UTC

.section .text
.align 8
_cbe1z:
_cbe1z:
	leaq block_cbe1H_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbp),%r8
	movq 24(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	movq 55(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,8(%rbp)
	movq 31(%rbx),%rax
	movq %rax,16(%rbp)
	movq 15(%rbx),%rax
	movq %rax,24(%rbp)
	addq $-8,%rbp
	jmp GHC.IO.Handle.Text.$wbufWrite_entry
	.size _cbe1z, .-_cbe1z


==================== Asm code ====================
2018-03-16 16:06:11.463691133 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe1z_info:
	.quad	_cbe1z
	.quad	259
	.quad	4294967326
	.quad	SbcpG_srt+464


==================== Asm code ====================
2018-03-16 16:06:11.46438418 UTC

.section .text
.align 8
_cbe1H:
_cbe1H:
	leaq block_cbe1J_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cbe1J
_cbe1M:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbe1H, .-_cbe1H


==================== Asm code ====================
2018-03-16 16:06:11.464992962 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe1H_info:
	.quad	_cbe1H
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.465758668 UTC

.section .text
.align 8
_cbe1J:
_cbe1J:
	andl $7,%ebx
	cmpq $3,%rbx
	je _ube2z
_cbe1T:
	movq 16(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbe1Q_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbe1Q
_cbe1U:
	movq (%rbx),%rax
	jmp *(%rax)
_ube2z:
	addq $8,%rbp
	jmp _cbe2t
	.size _cbe1J, .-_cbe1J


==================== Asm code ====================
2018-03-16 16:06:11.466380985 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe1J_info:
	.quad	_cbe1J
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.467052397 UTC

.section .text
.align 8
_cbe1Q:
_cbe1Q:
	leaq block_cbe1Y_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _cbe1Y
_cbe20:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbe1Q, .-_cbe1Q


==================== Asm code ====================
2018-03-16 16:06:11.467651686 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe1Q_info:
	.quad	_cbe1Q
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.468351092 UTC

.section .text
.align 8
_cbe1Y:
_cbe1Y:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ube2A
_cbe2b:
	movq 16(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbe29_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbe29
_cbe2c:
	movq (%rbx),%rax
	jmp *(%rax)
_ube2A:
	addq $8,%rbp
	jmp _cbe2t
	.size _cbe1Y, .-_cbe1Y


==================== Asm code ====================
2018-03-16 16:06:11.46895568 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe1Y_info:
	.quad	_cbe1Y
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.469698676 UTC

.section .text
.align 8
_cbe29:
_cbe29:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _ube2B
_cbe2m:
	leaq block_cbe2k_info(%rip),%rax
	movq %rax,(%rbp)
	movq 32(%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.IO.BufferedIO.flushWriteBuffer_entry@gotpcrel(%rip)
_ube2B:
	addq $8,%rbp
	jmp _cbe2t
	.size _cbe29, .-_cbe29


==================== Asm code ====================
2018-03-16 16:06:11.470321748 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe29_info:
	.quad	_cbe29
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.470920643 UTC

.section .text
.align 8
_cbe2t:
_cbe2t:
	movq (%rbp),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbe2t, .-_cbe2t


==================== Asm code ====================
2018-03-16 16:06:11.471687557 UTC

.section .text
.align 8
_cbe2k:
_cbe2k:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	movq %rcx,%rbx
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbe2k, .-_cbe2k


==================== Asm code ====================
2018-03-16 16:06:11.472285158 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe2k_info:
	.quad	_cbe2k
	.quad	772
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.472854191 UTC

.section .data.rel.ro
.align 8
.align 1
ube39_srtd:
	.quad	SbcpG_srt+8
	.quad	62
	.quad	3602879701896396803


==================== Asm code ====================
2018-03-16 16:06:11.473965822 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$whPutBuf'_entry
.type GHC.IO.Handle.Text.$whPutBuf'_entry, @object
GHC.IO.Handle.Text.$whPutBuf'_entry:
_cbe2N:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbe2O
_cbe2P:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cbe2R
_cbe2Q:
	testq %rdi,%rdi
	je _cbe2M
_cbe2L:
	testq %rdi,%rdi
	jge _cbe2U
_cbe36:
	addq $-32,%r12
	leaq GHC.IO.Handle.Text.hPutBuf3_closure(%rip),%rsi
	jmp GHC.IO.Handle.Text.$willegalBufferSize_entry
_cbe2U:
	leaq act_sbcha_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	movq %r8,-8(%r12)
	movq %rdi,(%r12)
	leaq block_cbe2S_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	leaq -22(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbe2S
_cbe2V:
	movq (%rbx),%rax
	jmp *(%rax)
_cbe2R:
	movq $32,904(%r13)
_cbe2O:
	leaq GHC.IO.Handle.Text.$whPutBuf'_closure(%rip),%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
_cbe2M:
	addq $-32,%r12
	leaq GHC.IO.Handle.Text.hGetBuf3_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.$whPutBuf'_entry, .-GHC.IO.Handle.Text.$whPutBuf'_entry


==================== Asm code ====================
2018-03-16 16:06:11.474785352 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$whPutBuf'_info
.type GHC.IO.Handle.Text.$whPutBuf'_info, @object
GHC.IO.Handle.Text.$whPutBuf'_info:
	.quad	GHC.IO.Handle.Text.$whPutBuf'_entry
	.quad	0
	.quad	-4294967282
	.quad	21474836480
	.quad	ube39_srtd
	.quad	260
	.quad	GHC.IO.Handle.Text.$whPutBuf'_slow


==================== Asm code ====================
2018-03-16 16:06:11.47536205 UTC

.section .data.rel.ro
.align 8
.align 1
ube3a_srtd:
	.quad	SbcpG_srt+16
	.quad	61
	.quad	1152921504606846977


==================== Asm code ====================
2018-03-16 16:06:11.4760669 UTC

.section .text
.align 8
_cbe2S:
_cbe2S:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbe31
_cbe35:
	movq %rax,%r8
	movq 22(%rbx),%rdi
	movq %rbx,%rsi
	leaq GHC.IO.Handle.Text.hPutBuf3_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.IO.Handle.Internals.$wwantWritableHandle'_entry@gotpcrel(%rip)
_cbe31:
	movq %rax,%r8
	movq 15(%rbx),%rdi
	movq %rbx,%rsi
	leaq GHC.IO.Handle.Text.hPutBuf3_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.IO.Handle.Internals.$wwantWritableHandle'_entry@gotpcrel(%rip)
	.size _cbe2S, .-_cbe2S


==================== Asm code ====================
2018-03-16 16:06:11.476700978 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe2S_info:
	.quad	_cbe2S
	.quad	1
	.quad	-4294967266
	.quad	ube3a_srtd


==================== Asm code ====================
2018-03-16 16:06:11.47988924 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBuf2_closure
.type GHC.IO.Handle.Text.hPutBuf2_closure, @object
GHC.IO.Handle.Text.hPutBuf2_closure:
	.quad	GHC.IO.Handle.Text.hPutBuf2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.48065106 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutBuf2_entry
.type GHC.IO.Handle.Text.hPutBuf2_entry, @object
GHC.IO.Handle.Text.hPutBuf2_entry:
_cbe4u:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbe4v
_cbe4w:
	leaq block_cbe4r_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rdi,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbe4r
_cbe4s:
	movq (%rbx),%rax
	jmp *(%rax)
_cbe4v:
	leaq GHC.IO.Handle.Text.hPutBuf2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hPutBuf2_entry, .-GHC.IO.Handle.Text.hPutBuf2_entry


==================== Asm code ====================
2018-03-16 16:06:11.481346631 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBuf2_info
.type GHC.IO.Handle.Text.hPutBuf2_info, @object
GHC.IO.Handle.Text.hPutBuf2_info:
	.quad	GHC.IO.Handle.Text.hPutBuf2_entry
	.quad	0
	.quad	21474836494
	.quad	21474836504
	.quad	SbcpG_srt+488


==================== Asm code ====================
2018-03-16 16:06:11.481995386 UTC

.section .text
.align 8
_cbe4r:
_cbe4r:
	movq 24(%rbp),%r8
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Text.$whPutBuf'_entry
	.size _cbe4r, .-_cbe4r


==================== Asm code ====================
2018-03-16 16:06:11.482561828 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe4r_info:
	.quad	_cbe4r
	.quad	3
	.quad	4294967326
	.quad	SbcpG_srt+488


==================== Asm code ====================
2018-03-16 16:06:11.485817753 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBufNonBlocking1_closure
.type GHC.IO.Handle.Text.hPutBufNonBlocking1_closure, @object
GHC.IO.Handle.Text.hPutBufNonBlocking1_closure:
	.quad	GHC.IO.Handle.Text.hPutBufNonBlocking1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.486566789 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutBufNonBlocking1_entry
.type GHC.IO.Handle.Text.hPutBufNonBlocking1_entry, @object
GHC.IO.Handle.Text.hPutBufNonBlocking1_entry:
_cbe4S:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbe4T
_cbe4U:
	leaq block_cbe4P_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbe4P
_cbe4Q:
	movq (%rbx),%rax
	jmp *(%rax)
_cbe4T:
	leaq GHC.IO.Handle.Text.hPutBufNonBlocking1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hPutBufNonBlocking1_entry, .-GHC.IO.Handle.Text.hPutBufNonBlocking1_entry


==================== Asm code ====================
2018-03-16 16:06:11.487207994 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBufNonBlocking1_info
.type GHC.IO.Handle.Text.hPutBufNonBlocking1_info, @object
GHC.IO.Handle.Text.hPutBufNonBlocking1_info:
	.quad	GHC.IO.Handle.Text.hPutBufNonBlocking1_entry
	.quad	0
	.quad	38654705678
	.quad	17179869207
	.quad	SbcpG_srt+488


==================== Asm code ====================
2018-03-16 16:06:11.487825965 UTC

.section .text
.align 8
_cbe4P:
_cbe4P:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r8
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Text.$whPutBuf'_entry
	.size _cbe4P, .-_cbe4P


==================== Asm code ====================
2018-03-16 16:06:11.488391551 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe4P_info:
	.quad	_cbe4P
	.quad	2
	.quad	4294967326
	.quad	SbcpG_srt+488


==================== Asm code ====================
2018-03-16 16:06:11.490477005 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBufNonBlocking_closure
.type GHC.IO.Handle.Text.hPutBufNonBlocking_closure, @object
GHC.IO.Handle.Text.hPutBufNonBlocking_closure:
	.quad	GHC.IO.Handle.Text.hPutBufNonBlocking_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.491083968 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutBufNonBlocking_entry
.type GHC.IO.Handle.Text.hPutBufNonBlocking_entry, @object
GHC.IO.Handle.Text.hPutBufNonBlocking_entry:
_cbe5e:
	jmp GHC.IO.Handle.Text.hPutBufNonBlocking1_entry
	.size GHC.IO.Handle.Text.hPutBufNonBlocking_entry, .-GHC.IO.Handle.Text.hPutBufNonBlocking_entry


==================== Asm code ====================
2018-03-16 16:06:11.491644439 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBufNonBlocking_info
.type GHC.IO.Handle.Text.hPutBufNonBlocking_info, @object
GHC.IO.Handle.Text.hPutBufNonBlocking_info:
	.quad	GHC.IO.Handle.Text.hPutBufNonBlocking_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	SbcpG_srt+512


==================== Asm code ====================
2018-03-16 16:06:11.495431702 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBuf1_closure
.type GHC.IO.Handle.Text.hPutBuf1_closure, @object
GHC.IO.Handle.Text.hPutBuf1_closure:
	.quad	GHC.IO.Handle.Text.hPutBuf1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.496220455 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutBuf1_entry
.type GHC.IO.Handle.Text.hPutBuf1_entry, @object
GHC.IO.Handle.Text.hPutBuf1_entry:
_cbe5s:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbe5w
_cbe5x:
	leaq block_cbe5p_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbe5p
_cbe5q:
	movq (%rbx),%rax
	jmp *(%rax)
_cbe5w:
	leaq GHC.IO.Handle.Text.hPutBuf1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hPutBuf1_entry, .-GHC.IO.Handle.Text.hPutBuf1_entry


==================== Asm code ====================
2018-03-16 16:06:11.496888064 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBuf1_info
.type GHC.IO.Handle.Text.hPutBuf1_info, @object
GHC.IO.Handle.Text.hPutBuf1_info:
	.quad	GHC.IO.Handle.Text.hPutBuf1_entry
	.quad	0
	.quad	73014444046
	.quad	17179869207
	.quad	SbcpG_srt+488


==================== Asm code ====================
2018-03-16 16:06:11.497899622 UTC

.section .text
.align 8
_cbe5p:
_cbe5p:
	movq 16(%rbp),%rax
	leaq block_cbe5v_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq GHC.Types.True_closure@gotpcrel(%rip),%rcx
	leaq 2(%rcx),%r8
	movq 7(%rbx),%rdi
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.IO.Handle.Text.$whPutBuf'_entry
	.size _cbe5p, .-_cbe5p


==================== Asm code ====================
2018-03-16 16:06:11.498524123 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe5p_info:
	.quad	_cbe5p
	.quad	2
	.quad	4294967326
	.quad	SbcpG_srt+488


==================== Asm code ====================
2018-03-16 16:06:11.499141695 UTC

.section .text
.align 8
_cbe5v:
_cbe5v:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbe5v, .-_cbe5v


==================== Asm code ====================
2018-03-16 16:06:11.499722286 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe5v_info:
	.quad	_cbe5v
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.501807534 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBuf_closure
.type GHC.IO.Handle.Text.hPutBuf_closure, @object
GHC.IO.Handle.Text.hPutBuf_closure:
	.quad	GHC.IO.Handle.Text.hPutBuf_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.502432174 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutBuf_entry
.type GHC.IO.Handle.Text.hPutBuf_entry, @object
GHC.IO.Handle.Text.hPutBuf_entry:
_cbe5X:
	jmp GHC.IO.Handle.Text.hPutBuf1_entry
	.size GHC.IO.Handle.Text.hPutBuf_entry, .-GHC.IO.Handle.Text.hPutBuf_entry


==================== Asm code ====================
2018-03-16 16:06:11.503027157 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutBuf_info
.type GHC.IO.Handle.Text.hPutBuf_info, @object
GHC.IO.Handle.Text.hPutBuf_info:
	.quad	GHC.IO.Handle.Text.hPutBuf_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	SbcpG_srt+520


==================== Asm code ====================
2018-03-16 16:06:11.50471479 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl31_rb6Xb_bytes:
	.asciz "\n"


==================== Asm code ====================
2018-03-16 16:06:11.507531454 UTC

.section .data
.align 8
.align 1
lvl32_rb6Xc_closure:
	.quad	lvl32_rb6Xc_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.508354534 UTC

.section .text
.align 8
lvl32_rb6Xc_entry:
_cbe6b:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbe6c
_cbe6d:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbe6a
_cbe69:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl31_rb6Xb_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbe6c:
	jmp *-16(%r13)
_cbe6a:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl32_rb6Xc_entry, .-lvl32_rb6Xc_entry


==================== Asm code ====================
2018-03-16 16:06:11.509017061 UTC

.section .data.rel.ro
.align 8
.align 1
lvl32_rb6Xc_info:
	.quad	lvl32_rb6Xc_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:11.528802509 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.$wwriteBlocks_closure
.type GHC.IO.Handle.Text.$wwriteBlocks_closure, @object
GHC.IO.Handle.Text.$wwriteBlocks_closure:
	.quad	GHC.IO.Handle.Text.$wwriteBlocks_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.529620735 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$wwriteBlocks_slow
.type GHC.IO.Handle.Text.$wwriteBlocks_slow, @object
GHC.IO.Handle.Text.$wwriteBlocks_slow:
_cbe6n:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.IO.Handle.Text.$wwriteBlocks_entry
	.size GHC.IO.Handle.Text.$wwriteBlocks_slow, .-GHC.IO.Handle.Text.$wwriteBlocks_slow


==================== Asm code ====================
2018-03-16 16:06:11.53046294 UTC

.section .text
.align 8
sat_sbckU_entry:
_cbe6C:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbe6D
_cbe6E:
	leaq block_cbe6v_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbe6v
_cbe6w:
	movq (%rbx),%rax
	jmp *(%rax)
_cbe6D:
	jmp *-16(%r13)
	.size sat_sbckU_entry, .-sat_sbckU_entry


==================== Asm code ====================
2018-03-16 16:06:11.53111071 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbckU_info:
	.quad	sat_sbckU_entry
	.quad	1
	.quad	4294967312
	.quad	SbcpG_srt+528


==================== Asm code ====================
2018-03-16 16:06:11.531839987 UTC

.section .text
.align 8
_cbe6v:
_cbe6v:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbe6z
_cbe6A:
	leaq lvl32_rb6Xc_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_cbe6z:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbe6v, .-_cbe6v


==================== Asm code ====================
2018-03-16 16:06:11.532500752 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe6v_info:
	.quad	_cbe6v
	.quad	0
	.quad	4294967326
	.quad	SbcpG_srt+528


==================== Asm code ====================
2018-03-16 16:06:11.533299366 UTC

.section .text
.align 8
sat_sbcjg_entry:
_cbe70:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cbe76
_cbe77:
	leaq block_cbe6X_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rdx
	movq 30(%rbx),%rsi
	movq 38(%rbx),%rbx
	movq %rbx,%rdi
	movq %r14,%rbx
	movq %rdx,-40(%rbp)
	movq %rax,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _cbe6X
_cbe6Y:
	movq (%rbx),%rax
	jmp *(%rax)
_cbe76:
	jmp *-8(%r13)
	.size sat_sbcjg_entry, .-sat_sbcjg_entry


==================== Asm code ====================
2018-03-16 16:06:11.533990511 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbcjg_info:
	.quad	sat_sbcjg_entry
	.quad	12884901890
	.quad	8
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:06:11.534751112 UTC

.section .text
.align 8
_cbe6X:
_cbe6X:
	movq 8(%rbp),%rax
	leaq block_cbe73_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 24(%rbp),%r9
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rcx
	leaq 2(%rcx),%r8
	movq 16(%rbp),%rdi
	movq %rax,%rsi
	movq %rbx,%r14
	movq $0,-8(%rbp)
	movq 32(%rbp),%rax
	movq %rax,(%rbp)
	movq 79(%rbx),%rax
	movq %rax,16(%rbp)
	movq 71(%rbx),%rax
	movq %rax,32(%rbp)
	addq $-8,%rbp
	jmp *GHC.IO.Handle.Internals.$wwriteCharBuffer_entry@gotpcrel(%rip)
	.size _cbe6X, .-_cbe6X


==================== Asm code ====================
2018-03-16 16:06:11.535423003 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe6X_info:
	.quad	_cbe6X
	.quad	837
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.536113445 UTC

.section .text
.align 8
_cbe73:
_cbe73:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbe75_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbe75
_cbe7a:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbe73, .-_cbe73


==================== Asm code ====================
2018-03-16 16:06:11.536699814 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe73_info:
	.quad	_cbe73
	.quad	132
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.53768306 UTC

.section .text
.align 8
_cbe75:
_cbe75:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbe7g
_cbe7f:
	movq 16(%rbp),%rax
	cmpq 31(%rbx),%rax
	je _cbe7l
_cbe7k:
	addq $-24,%r12
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbe7l:
	movq 8(%rbp),%rax
	movq 8(%rax),%rbx
	movq GHC.IO.Handle.Types.BufferListCons_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq 32(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbe7g:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbe75, .-_cbe75


==================== Asm code ====================
2018-03-16 16:06:11.538437195 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe75_info:
	.quad	_cbe75
	.quad	388
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.539170717 UTC

.section .text
.align 8
sat_sbckf_entry:
_cbe8c:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cbe8i
_cbe8j:
	leaq block_cbe89_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rdx
	movq 30(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rcx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbe89
_cbe8a:
	movq (%rbx),%rax
	jmp *(%rax)
_cbe8i:
	jmp *-8(%r13)
	.size sat_sbckf_entry, .-sat_sbckf_entry


==================== Asm code ====================
2018-03-16 16:06:11.539855558 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbckf_info:
	.quad	sat_sbckf_entry
	.quad	12884901889
	.quad	8
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:06:11.540575145 UTC

.section .text
.align 8
_cbe89:
_cbe89:
	movq 8(%rbp),%rax
	leaq block_cbe8f_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 24(%rbp),%r9
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rcx
	leaq 2(%rcx),%r8
	movq 16(%rbp),%rdi
	movq %rax,%rsi
	movq %rbx,%r14
	movq $0,-8(%rbp)
	movq 32(%rbp),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,16(%rbp)
	movq 31(%rbx),%rax
	movq %rax,24(%rbp)
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	addq $-8,%rbp
	jmp *GHC.IO.Handle.Internals.$wwriteCharBuffer_entry@gotpcrel(%rip)
	.size _cbe89, .-_cbe89


==================== Asm code ====================
2018-03-16 16:06:11.54130684 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe89_info:
	.quad	_cbe89
	.quad	836
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.541959095 UTC

.section .text
.align 8
_cbe8f:
_cbe8f:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbe8h_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbe8h
_cbe8m:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbe8f, .-_cbe8f


==================== Asm code ====================
2018-03-16 16:06:11.542602063 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe8f_info:
	.quad	_cbe8f
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.543344206 UTC

.section .text
.align 8
_cbe8h:
_cbe8h:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cbe8z
_cbe8w:
	leaq block_cbe8u_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.IO.BufferedIO.flushWriteBuffer_entry@gotpcrel(%rip)
_cbe8z:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbe8h, .-_cbe8h


==================== Asm code ====================
2018-03-16 16:06:11.544844669 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe8h_info:
	.quad	_cbe8h
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.545798355 UTC

.section .text
.align 8
_cbe8u:
_cbe8u:
	movq 8(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbe8u, .-_cbe8u


==================== Asm code ====================
2018-03-16 16:06:11.546422691 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe8u_info:
	.quad	_cbe8u
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.547204358 UTC

.section .text
.align 8
sat_sbckP_entry:
_cbe8O:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cbe8S
_cbe8T:
	leaq block_cbe8L_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rcx
	movq 22(%rbx),%rdx
	movq 30(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rcx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %rdx,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbe8L
_cbe8M:
	movq (%rbx),%rax
	jmp *(%rax)
_cbe8S:
	jmp *-8(%r13)
	.size sat_sbckP_entry, .-sat_sbckP_entry


==================== Asm code ====================
2018-03-16 16:06:11.547894798 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbckP_info:
	.quad	sat_sbckP_entry
	.quad	12884901889
	.quad	8
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:06:11.548558945 UTC

.section .text
.align 8
_cbe8L:
_cbe8L:
	movq 32(%rbp),%rax
	leaq block_cbe8R_info(%rip),%rcx
	movq %rcx,32(%rbp)
	movq 24(%rbp),%r9
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rcx
	leaq 2(%rcx),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	movq $0,16(%rbp)
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp *GHC.IO.Handle.Internals.$wwriteCharBuffer_entry@gotpcrel(%rip)
	.size _cbe8L, .-_cbe8L


==================== Asm code ====================
2018-03-16 16:06:11.549223218 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe8L_info:
	.quad	_cbe8L
	.quad	836
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.549885749 UTC

.section .text
.align 8
_cbe8R:
_cbe8R:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbe8R, .-_cbe8R


==================== Asm code ====================
2018-03-16 16:06:11.550467931 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe8R_info:
	.quad	_cbe8R
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.551285879 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.$wwriteBlocks_entry
.type GHC.IO.Handle.Text.$wwriteBlocks_entry, @object
GHC.IO.Handle.Text.$wwriteBlocks_entry:
_cbe8Y:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cbe8Z
_cbe90:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbe92
_cbe91:
	leaq sat_sbckU_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rdi,(%r12)
	movq %rsi,-48(%rbp)
	movq %r8,-40(%rbp)
	movq %r9,-32(%rbp)
	movq $0,-24(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	movq %r14,16(%rbp)
	addq $-48,%rbp
	jmp _cbe7w
_cbe92:
	movq $24,904(%r13)
_cbe8Z:
	leaq GHC.IO.Handle.Text.$wwriteBlocks_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.$wwriteBlocks_entry, .-GHC.IO.Handle.Text.$wwriteBlocks_entry


==================== Asm code ====================
2018-03-16 16:06:11.552062567 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.$wwriteBlocks_info
.type GHC.IO.Handle.Text.$wwriteBlocks_info, @object
GHC.IO.Handle.Text.$wwriteBlocks_info:
	.quad	GHC.IO.Handle.Text.$wwriteBlocks_entry
	.quad	0
	.quad	64424509454
	.quad	38654705664
	.quad	SbcpG_srt+528
	.quad	5128
	.quad	GHC.IO.Handle.Text.$wwriteBlocks_slow


==================== Asm code ====================
2018-03-16 16:06:11.55275079 UTC

.section .text
.align 8
_cbe7w:
_cbe7w:
	leaq block_cbe7z_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 32(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbe7z
_cbe7A:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbe7w, .-_cbe7w


==================== Asm code ====================
2018-03-16 16:06:11.553790749 UTC

.section .text
.align 8
_cbe7z:
_cbe7z:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbe9b
_cbe9n:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbe9q
_cbe9p:
	movq 64(%rbp),%rax
	movq 32(%rbp),%rcx
	leaq 1(%rcx),%rdx
	cmpq %rax,%rdx
	jl _cbe9s
_cbe9W:
	leaq sat_sbckP_info(%rip),%rdx
	movq %rdx,-32(%r12)
	movq 56(%rbp),%rdx
	movq %rdx,-24(%r12)
	movq 24(%rbp),%rdx
	movq %rdx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq block_cbe9V_info(%rip),%rax
	movq %rax,(%rbp)
	leaq -30(%r12),%rdi
	movq 72(%rbp),%rsi
	leaq lvl2_rb6WE_closure(%rip),%r14
	movq %rbx,40(%rbp)
	jmp *GHC.IO.Handle.Internals.wantWritableHandle1_entry@gotpcrel(%rip)
_cbe9q:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbe9b:
	leaq block_cbe98_info(%rip),%rax
	movq %rax,(%rbp)
	movq 48(%rbp),%rbx
	testb $7,%bl
	jne _cbe98
_cbe9c:
	movq (%rbx),%rax
	jmp *(%rax)
_cbe9s:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	addq $-40,%r12
	leaq block_cbe7L_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,40(%rbp)
	testb $7,%bl
	jne _cbe7L
_cbe7M:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbe7z, .-_cbe7z


==================== Asm code ====================
2018-03-16 16:06:11.554671769 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe7z_info:
	.quad	_cbe7z
	.quad	9993
	.quad	21474836510
	.quad	SbcpG_srt+536


==================== Asm code ====================
2018-03-16 16:06:11.555397521 UTC

.section .text
.align 8
_cbe98:
_cbe98:
	movq 32(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbe9i
_cbe9m:
	movq %rax,32(%rbp)
	movq %rbx,40(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,48(%rbp)
	addq $8,%rbp
	jmp _cbe7w
_cbe9i:
	movq %rax,48(%rbp)
	addq $24,%rbp
	jmp _cbe6P
	.size _cbe98, .-_cbe98


==================== Asm code ====================
2018-03-16 16:06:11.556066214 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe98_info:
	.quad	_cbe98
	.quad	12041
	.quad	21474836510
	.quad	SbcpG_srt+536


==================== Asm code ====================
2018-03-16 16:06:11.556839691 UTC

.section .text
.align 8
_cbe6P:
_cbe6P:
	addq $72,%r12
	movq 24(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cbe95
_cbe94:
	movq GHC.ForeignPtr.ForeignPtr_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq (%rbp),%rcx
	movq %rcx,-48(%r12)
	leaq sat_sbcjg_info(%rip),%rdx
	movq %rdx,-40(%r12)
	movq %rbx,-32(%r12)
	leaq -63(%r12),%rbx
	movq %rbx,-24(%r12)
	movq %rcx,-16(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -38(%r12),%rdi
	movq 48(%rbp),%rsi
	leaq lvl2_rb6WE_closure(%rip),%r14
	addq $56,%rbp
	jmp *GHC.IO.Handle.Internals.wantWritableHandle1_entry@gotpcrel(%rip)
_cbe95:
	movq $72,904(%r13)
	leaq block_cbe6O_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cbe6P, .-_cbe6P


==================== Asm code ====================
2018-03-16 16:06:11.557709996 UTC

.section .text
.align 8
_cbe6O:
_cbe6O:
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp _cbe6P
	.size _cbe6O, .-_cbe6O


==================== Asm code ====================
2018-03-16 16:06:11.55826788 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe6O_info:
	.quad	_cbe6O
	.quad	3015
	.quad	21474836510
	.quad	SbcpG_srt+536


==================== Asm code ====================
2018-03-16 16:06:11.559013323 UTC

.section .text
.align 8
_cbe7L:
_cbe7L:
	movq 7(%rbx),%rax
	cmpq $10,%rax
	jne _cbe9v
_cbe9J:
	leaq block_cbe9w_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _cbe9w
_cbe9K:
	movq (%rbx),%rax
	jmp *(%rax)
_cbe9v:
	movq 56(%rbp),%rbx
	movq 32(%rbp),%rbx
	movq 48(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 24(%rbp),%rsi
	movl %eax,(%rsi,%rbx,4)
	leaq 1(%rbx),%rax
	movq %rax,32(%rbp)
	movq %rdx,40(%rbp)
	movq %rcx,48(%rbp)
	addq $8,%rbp
	jmp _cbe7w
	.size _cbe7L, .-_cbe7L


==================== Asm code ====================
2018-03-16 16:06:11.559714249 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe7L_info:
	.quad	_cbe7L
	.quad	8969
	.quad	21474836510
	.quad	SbcpG_srt+536


==================== Asm code ====================
2018-03-16 16:06:11.560524433 UTC

.section .text
.align 8
_cbe9w:
_cbe9w:
	movq 8(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 56(%rbp),%rdx
	movq 32(%rbp),%rdx
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbe9Q
_cbe9U:
	movl $13,(%rcx,%rdx,4)
	leaq 1(%rdx),%rbx
	movl $10,(%rcx,%rbx,4)
	incq %rbx
_sbcjA:
	leaq block_cbe7Y_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,32(%rbp)
	testb $7,%bl
	jne _cbe7Y
_cbe7Z:
	movq (%rbx),%rax
	jmp *(%rax)
_cbe9Q:
	movl $10,(%rcx,%rdx,4)
	leaq 1(%rdx),%rbx
	jmp _sbcjA
	.size _cbe9w, .-_cbe9w


==================== Asm code ====================
2018-03-16 16:06:11.561256637 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe9w_info:
	.quad	_cbe9w
	.quad	8969
	.quad	21474836510
	.quad	SbcpG_srt+536


==================== Asm code ====================
2018-03-16 16:06:11.562156077 UTC

.section .text
.align 8
_cbe7Y:
_cbe7Y:
	movq 32(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbe9B
_cbe9D:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbe9G
_cbe9F:
	leaq sat_sbckf_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq 56(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 64(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq block_cbe9C_info(%rip),%rax
	movq %rax,(%rbp)
	leaq -30(%r12),%rdi
	movq 72(%rbp),%rsi
	leaq lvl2_rb6WE_closure(%rip),%r14
	jmp *GHC.IO.Handle.Internals.wantWritableHandle1_entry@gotpcrel(%rip)
_cbe9G:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbe9B:
	movq %rax,32(%rbp)
	movq 40(%rbp),%rax
	movq %rax,40(%rbp)
	movq 48(%rbp),%rax
	movq %rax,48(%rbp)
	addq $8,%rbp
	jmp _cbe7w
	.size _cbe7Y, .-_cbe7Y


==================== Asm code ====================
2018-03-16 16:06:11.562907403 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe7Y_info:
	.quad	_cbe7Y
	.quad	8969
	.quad	21474836510
	.quad	SbcpG_srt+536


==================== Asm code ====================
2018-03-16 16:06:11.563563152 UTC

.section .text
.align 8
_cbe9C:
_cbe9C:
	movq $0,32(%rbp)
	movq 40(%rbp),%rax
	movq %rax,40(%rbp)
	movq 48(%rbp),%rax
	movq %rax,48(%rbp)
	addq $8,%rbp
	jmp _cbe7w
	.size _cbe9C, .-_cbe9C


==================== Asm code ====================
2018-03-16 16:06:11.564160469 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe9C_info:
	.quad	_cbe9C
	.quad	8969
	.quad	21474836510
	.quad	SbcpG_srt+536


==================== Asm code ====================
2018-03-16 16:06:11.564826934 UTC

.section .text
.align 8
_cbe9V:
_cbe9V:
	movq $0,32(%rbp)
	movq 40(%rbp),%rax
	movq %rax,40(%rbp)
	movq 48(%rbp),%rax
	movq %rax,48(%rbp)
	addq $8,%rbp
	jmp _cbe7w
	.size _cbe9V, .-_cbe9V


==================== Asm code ====================
2018-03-16 16:06:11.565863833 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbe9V_info:
	.quad	_cbe9V
	.quad	8969
	.quad	21474836510
	.quad	SbcpG_srt+536


==================== Asm code ====================
2018-03-16 16:06:11.56753269 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl33_rb6Xd_bytes:
	.asciz "no buffer!"


==================== Asm code ====================
2018-03-16 16:06:11.570554653 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr4_closure
.type GHC.IO.Handle.Text.hPutStr4_closure, @object
GHC.IO.Handle.Text.hPutStr4_closure:
	.quad	GHC.IO.Handle.Text.hPutStr4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.571424008 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutStr4_entry
.type GHC.IO.Handle.Text.hPutStr4_entry, @object
GHC.IO.Handle.Text.hPutStr4_entry:
_cbedA:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbedB
_cbedC:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbedx
_cbedw:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_cbedy_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl33_rb6Xd_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbedB:
	jmp *-16(%r13)
_cbedx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.hPutStr4_entry, .-GHC.IO.Handle.Text.hPutStr4_entry


==================== Asm code ====================
2018-03-16 16:06:11.572091413 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr4_info
.type GHC.IO.Handle.Text.hPutStr4_info, @object
GHC.IO.Handle.Text.hPutStr4_info:
	.quad	GHC.IO.Handle.Text.hPutStr4_entry
	.quad	0
	.quad	4294967317
	.quad	SbcpG_srt+560


==================== Asm code ====================
2018-03-16 16:06:11.57273548 UTC

.section .text
.align 8
_cbedy:
_cbedy:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size _cbedy, .-_cbedy


==================== Asm code ====================
2018-03-16 16:06:11.573835191 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbedy_info:
	.quad	_cbedy
	.quad	0
	.quad	4294967326
	.quad	SbcpG_srt+560


==================== Asm code ====================
2018-03-16 16:06:11.575579017 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr3_closure
.type GHC.IO.Handle.Text.hPutStr3_closure, @object
GHC.IO.Handle.Text.hPutStr3_closure:
	.quad	(,)_con_info
	.quad	GHC.IO.Handle.Types.NoBuffering_closure+1
	.quad	GHC.IO.Handle.Text.hPutStr4_closure
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.585637743 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr2_closure
.type GHC.IO.Handle.Text.hPutStr2_closure, @object
GHC.IO.Handle.Text.hPutStr2_closure:
	.quad	GHC.IO.Handle.Text.hPutStr2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.586485775 UTC

.section .text
.align 8
sat_sbclV_entry:
_cbeen:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cbeew
_cbeex:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbeek_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbeek
_cbeel:
	movq (%rbx),%rax
	jmp *(%rax)
_cbeew:
	jmp *-16(%r13)
	.size sat_sbclV_entry, .-sat_sbclV_entry


==================== Asm code ====================
2018-03-16 16:06:11.587150898 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbclV_info:
	.quad	sat_sbclV_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:06:11.587895674 UTC

.section .text
.align 8
_cbeek:
_cbeek:
	leaq block_cbeeq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rax,(%rbp)
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbeeq
_cbeer:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbeek, .-_cbeek


==================== Asm code ====================
2018-03-16 16:06:11.588516796 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbeek_info:
	.quad	_cbeek
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.589291419 UTC

.section .text
.align 8
_cbeeq:
_cbeeq:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbeeB
_cbeeA:
	movq 31(%rbx),%rax
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rbx
	addq $2,%rbx
	movq %rbx,-32(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbeeB:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbeeq, .-_cbeeq


==================== Asm code ====================
2018-03-16 16:06:11.589989011 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbeeq_info:
	.quad	_cbeeq
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.590746646 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutStr2_entry
.type GHC.IO.Handle.Text.hPutStr2_entry, @object
GHC.IO.Handle.Text.hPutStr2_entry:
_cbeeE:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cbeeF
_cbeeG:
	leaq block_cbedX_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbedX
_cbedY:
	movq (%rbx),%rax
	jmp *(%rax)
_cbeeF:
	leaq GHC.IO.Handle.Text.hPutStr2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hPutStr2_entry, .-GHC.IO.Handle.Text.hPutStr2_entry


==================== Asm code ====================
2018-03-16 16:06:11.59140123 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr2_info
.type GHC.IO.Handle.Text.hPutStr2_info, @object
GHC.IO.Handle.Text.hPutStr2_info:
	.quad	GHC.IO.Handle.Text.hPutStr2_entry
	.quad	0
	.quad	30064771086
	.quad	8589934597
	.quad	SbcpG_srt+568


==================== Asm code ====================
2018-03-16 16:06:11.592111296 UTC

.section .text
.align 8
_cbedX:
_cbedX:
	leaq block_cbee2_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 71(%rbx),%rax
	movq 79(%rbx),%rcx
	movq 119(%rbx),%rdx
	movq 55(%rbx),%rbx
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbee2
_cbee3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbedX, .-_cbedX


==================== Asm code ====================
2018-03-16 16:06:11.592707533 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbedX_info:
	.quad	_cbedX
	.quad	0
	.quad	21474836510
	.quad	SbcpG_srt+568


==================== Asm code ====================
2018-03-16 16:06:11.593627242 UTC

.section .text
.align 8
_cbee2:
_cbee2:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbefs
_cbeeK:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	movq 24(%rbp),%rcx
	movq 8(%rcx),%rcx
	leaq block_cbee7_info(%rip),%rdx
	movq %rdx,-8(%rbp)
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rcx,(%rbp)
	movq %rdx,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbee7
_cbee8:
	movq (%rbx),%rax
	jmp *(%rax)
_cbefv:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbefs:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbefv
_cbefu:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.IO.Handle.Text.hPutStr3_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbee2, .-_cbee2


==================== Asm code ====================
2018-03-16 16:06:11.594374108 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbee2_info:
	.quad	_cbee2
	.quad	3
	.quad	21474836510
	.quad	SbcpG_srt+568


==================== Asm code ====================
2018-03-16 16:06:11.595376066 UTC

.section .text
.align 8
_cbee7:
_cbee7:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _cbeeP
_cbefl:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _cbefo
_cbefn:
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 6(%rbx),%rdi
	movq 14(%rbx),%rbx
	movq %rbx,8(%rcx)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rsi,%r8
	movq %rcx,%rsi
	movq %rdi,%rcx
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rdx,%r14
	movq %r8,72(%rsp)
	movq %rcx,80(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq sat_sbclV_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %rbx,-56(%r12)
	movq 72(%rsp),%rax
	movq %rax,-48(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	movq 64(%rsp),%rax
	movq %rax,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbefo:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbeeP:
	leaq block_cbeeM_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _cbeeM
_cbeeQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbee7, .-_cbee7


==================== Asm code ====================
2018-03-16 16:06:11.596289509 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbee7_info:
	.quad	_cbee7
	.quad	4
	.quad	4294967326
	.quad	SbcpG_srt+568


==================== Asm code ====================
2018-03-16 16:06:11.597075189 UTC

.section .text
.align 8
_cbeeM:
_cbeeM:
	movq 31(%rbx),%rax
	movq %rax,%rbx
	shlq $2,%rbx
	testq %rbx,%rbx
	jge _cbefd
_cbefi:
	movq GHC.ForeignPtr.mallocForeignPtrBytes2_closure@gotpcrel(%rip),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_cbefd:
	leaq block_cbef1_info(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rcx
	movq %rbx,%rdx
	leaq 1(%rcx),%rbx
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _cbeeM, .-_cbeeM


==================== Asm code ====================
2018-03-16 16:06:11.597894883 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbeeM_info:
	.quad	_cbeeM
	.quad	2
	.quad	4294967326
	.quad	SbcpG_srt+568


==================== Asm code ====================
2018-03-16 16:06:11.598541533 UTC

.section .text
.align 8
_cbef1:
_cbef1:
	leaq block_cbef3_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_newPinnedByteArray#@gotpcrel(%rip)
	.size _cbef1, .-_cbef1


==================== Asm code ====================
2018-03-16 16:06:11.599106283 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbef1_info:
	.quad	_cbef1
	.quad	196
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.599950359 UTC

.section .text
.align 8
_cbef3:
_cbef3:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _cbefh
_cbefg:
	movq GHC.ForeignPtr.MallocPtr_con_info@gotpcrel(%rip),%rax
	movq %rax,-120(%r12)
	movq %rbx,-112(%r12)
	movq 8(%rbp),%rax
	movq %rax,-104(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-96(%r12)
	leaq -118(%r12),%rax
	movq %rax,-88(%r12)
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-80(%r12)
	leaq 16(%rbx),%rax
	movq %rax,-72(%r12)
	movq 16(%rbp),%rax
	movq %rax,-64(%r12)
	movq $0,-56(%r12)
	movq $0,-48(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	movq 32(%rbp),%rax
	movq %rax,-32(%r12)
	leaq -95(%r12),%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -39(%r12),%rax
	movq %rax,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbefh:
	movq $128,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbef3, .-_cbef3


==================== Asm code ====================
2018-03-16 16:06:11.600742894 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbef3_info:
	.quad	_cbef3
	.quad	132
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.602465445 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.hPutStr6_bytes
.type GHC.IO.Handle.Text.hPutStr6_bytes, @object
GHC.IO.Handle.Text.hPutStr6_bytes:
	.asciz "hPutStr"


==================== Asm code ====================
2018-03-16 16:06:11.605102287 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr5_closure
.type GHC.IO.Handle.Text.hPutStr5_closure, @object
GHC.IO.Handle.Text.hPutStr5_closure:
	.quad	GHC.IO.Handle.Text.hPutStr5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.605953977 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutStr5_entry
.type GHC.IO.Handle.Text.hPutStr5_entry, @object
GHC.IO.Handle.Text.hPutStr5_entry:
_cbeh8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbeh9
_cbeha:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbeh7
_cbeh6:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Text.hPutStr6_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbeh9:
	jmp *-16(%r13)
_cbeh7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.hPutStr5_entry, .-GHC.IO.Handle.Text.hPutStr5_entry


==================== Asm code ====================
2018-03-16 16:06:11.606657369 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr5_info
.type GHC.IO.Handle.Text.hPutStr5_info, @object
GHC.IO.Handle.Text.hPutStr5_info:
	.quad	GHC.IO.Handle.Text.hPutStr5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:11.616658557 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr1_closure
.type GHC.IO.Handle.Text.hPutStr1_closure, @object
GHC.IO.Handle.Text.hPutStr1_closure:
	.quad	GHC.IO.Handle.Text.hPutStr1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.617206365 UTC

.section .data.rel.ro
.align 8
.align 1
ubeja_srtd:
	.quad	SbcpG_srt+16
	.quad	74
	.quad	19
	.quad	836


==================== Asm code ====================
2018-03-16 16:06:11.618073324 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutStr1_entry
.type GHC.IO.Handle.Text.hPutStr1_entry, @object
GHC.IO.Handle.Text.hPutStr1_entry:
_cbehw:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _cbehx
_cbehy:
	leaq block_cbehp_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _cbehp
_cbehq:
	movq (%rbx),%rax
	jmp *(%rax)
_cbehx:
	leaq GHC.IO.Handle.Text.hPutStr1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hPutStr1_entry, .-GHC.IO.Handle.Text.hPutStr1_entry


==================== Asm code ====================
2018-03-16 16:06:11.618764157 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr1_info
.type GHC.IO.Handle.Text.hPutStr1_info, @object
GHC.IO.Handle.Text.hPutStr1_info:
	.quad	GHC.IO.Handle.Text.hPutStr1_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869207
	.quad	ubeja_srtd


==================== Asm code ====================
2018-03-16 16:06:11.619380612 UTC

.section .data.rel.ro
.align 8
.align 1
ubejb_srtd:
	.quad	SbcpG_srt+16
	.quad	74
	.quad	19
	.quad	580


==================== Asm code ====================
2018-03-16 16:06:11.620127151 UTC

.section .text
.align 8
_cbehp:
_cbehp:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbeht
_cbehu:
	leaq block_cbeiE_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.IO.Handle.Text.hPutStr2_closure+2(%rip),%r8
	movq 22(%rbx),%rdi
	movq %rbx,%rsi
	leaq GHC.IO.Handle.Text.hPutStr5_closure(%rip),%r14
	jmp *GHC.IO.Handle.Internals.$wwantWritableHandle'_entry@gotpcrel(%rip)
_cbeht:
	leaq block_cbeim_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.IO.Handle.Text.hPutStr2_closure+2(%rip),%r8
	movq 15(%rbx),%rdi
	movq %rbx,%rsi
	leaq GHC.IO.Handle.Text.hPutStr5_closure(%rip),%r14
	jmp *GHC.IO.Handle.Internals.$wwantWritableHandle'_entry@gotpcrel(%rip)
	.size _cbehp, .-_cbehp


==================== Asm code ====================
2018-03-16 16:06:11.620855561 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbehp_info:
	.quad	_cbehp
	.quad	3
	.quad	-4294967266
	.quad	ubejb_srtd


==================== Asm code ====================
2018-03-16 16:06:11.621459462 UTC

.section .data.rel.ro
.align 8
.align 1
ubejc_srtd:
	.quad	SbcpG_srt+24
	.quad	66
	.quad	9
	.quad	2


==================== Asm code ====================
2018-03-16 16:06:11.622182322 UTC

.section .text
.align 8
_cbeim:
_cbeim:
	leaq block_cbeio_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbeio
_cbeip:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbeim, .-_cbeim


==================== Asm code ====================
2018-03-16 16:06:11.622796422 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbeim_info:
	.quad	_cbeim
	.quad	3
	.quad	-4294967266
	.quad	ubejc_srtd


==================== Asm code ====================
2018-03-16 16:06:11.623966322 UTC

.section .data.rel.ro
.align 8
.align 1
ubejd_srtd:
	.quad	SbcpG_srt+24
	.quad	66
	.quad	9
	.quad	2


==================== Asm code ====================
2018-03-16 16:06:11.624741144 UTC

.section .text
.align 8
_cbeio:
_cbeio:
	leaq block_cbeit_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbeit
_cbeix:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbeio, .-_cbeio


==================== Asm code ====================
2018-03-16 16:06:11.625634337 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbeio_info:
	.quad	_cbeio
	.quad	3
	.quad	-4294967266
	.quad	ubejd_srtd


==================== Asm code ====================
2018-03-16 16:06:11.626206681 UTC

.section .data.rel.ro
.align 8
.align 1
ubeje_srtd:
	.quad	SbcpG_srt+24
	.quad	66
	.quad	9
	.quad	2


==================== Asm code ====================
2018-03-16 16:06:11.626838141 UTC

.section .text
.align 8
_cbeit:
_cbeit:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	movq %rcx,8(%rbp)
	movq 15(%rbx),%rbx
	movq %rbx,(%rbp)
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp _sbcm3
	.size _cbeit, .-_cbeit


==================== Asm code ====================
2018-03-16 16:06:11.627423 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbeit_info:
	.quad	_cbeit
	.quad	4
	.quad	-4294967266
	.quad	ubeje_srtd


==================== Asm code ====================
2018-03-16 16:06:11.627947103 UTC

.section .data.rel.ro
.align 8
.align 1
ubejf_srtd:
	.quad	SbcpG_srt+24
	.quad	66
	.quad	9
	.quad	2


==================== Asm code ====================
2018-03-16 16:06:11.628586527 UTC

.section .text
.align 8
_cbeiE:
_cbeiE:
	leaq block_cbeiG_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbeiG
_cbeiH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbeiE, .-_cbeiE


==================== Asm code ====================
2018-03-16 16:06:11.62921118 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbeiE_info:
	.quad	_cbeiE
	.quad	3
	.quad	-4294967266
	.quad	ubejf_srtd


==================== Asm code ====================
2018-03-16 16:06:11.62976592 UTC

.section .data.rel.ro
.align 8
.align 1
ubejg_srtd:
	.quad	SbcpG_srt+24
	.quad	66
	.quad	9
	.quad	2


==================== Asm code ====================
2018-03-16 16:06:11.630446731 UTC

.section .text
.align 8
_cbeiG:
_cbeiG:
	leaq block_cbeiL_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbeiL
_cbeiP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbeiG, .-_cbeiG


==================== Asm code ====================
2018-03-16 16:06:11.631031899 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbeiG_info:
	.quad	_cbeiG
	.quad	3
	.quad	-4294967266
	.quad	ubejg_srtd


==================== Asm code ====================
2018-03-16 16:06:11.631602364 UTC

.section .data.rel.ro
.align 8
.align 1
ubejh_srtd:
	.quad	SbcpG_srt+24
	.quad	66
	.quad	9
	.quad	2


==================== Asm code ====================
2018-03-16 16:06:11.632227552 UTC

.section .text
.align 8
_cbeiL:
_cbeiL:
	movq 8(%rbp),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp _sbcm3
	.size _cbeiL, .-_cbeiL


==================== Asm code ====================
2018-03-16 16:06:11.632795835 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbeiL_info:
	.quad	_cbeiL
	.quad	4
	.quad	-4294967266
	.quad	ubejh_srtd


==================== Asm code ====================
2018-03-16 16:06:11.633527264 UTC

.section .text
.align 8
_sbcm3:
_sbcm3:
	leaq block_cbehC_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbehC
_cbehE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbcm3, .-_sbcm3


==================== Asm code ====================
2018-03-16 16:06:11.634102984 UTC

.section .data.rel.ro
.align 8
.align 1
ubeji_srtd:
	.quad	SbcpG_srt+24
	.quad	66
	.quad	9
	.quad	2


==================== Asm code ====================
2018-03-16 16:06:11.634922795 UTC

.section .text
.align 8
_cbehC:
_cbehC:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ubeiW
_cbeie:
	leaq block_cbeic_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbeic
_cbeif:
	movq (%rbx),%rax
	jmp *(%rax)
_ubeiW:
	cmpq $2,%rbx
	jb _cbehN
_cbei4:
	leaq block_cbei2_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbei2
_cbei5:
	movq (%rbx),%rax
	jmp *(%rax)
_cbehN:
	leaq block_cbehI_info(%rip),%rax
	movq %rax,24(%rbp)
	movq 40(%rbp),%rsi
	movq 32(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.Text.hPutStr7_entry
	.size _cbehC, .-_cbehC


==================== Asm code ====================
2018-03-16 16:06:11.635659102 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbehC_info:
	.quad	_cbehC
	.quad	262
	.quad	-4294967266
	.quad	ubeji_srtd


==================== Asm code ====================
2018-03-16 16:06:11.636297762 UTC

.section .text
.align 8
_cbehI:
_cbehI:
	leaq block_cbehK_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rbx
	testb $7,%bl
	jne _cbehK
_cbehP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbehI, .-_cbehI


==================== Asm code ====================
2018-03-16 16:06:11.63690571 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbehI_info:
	.quad	_cbehI
	.quad	131
	.quad	4294967326
	.quad	SbcpG_srt+608


==================== Asm code ====================
2018-03-16 16:06:11.637888653 UTC

.section .text
.align 8
_cbehK:
_cbehK:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbehV
_cbehZ:
	movl $10,%esi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp GHC.IO.Handle.Text.$whPutChar_entry
_cbehV:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbehK, .-_cbehK


==================== Asm code ====================
2018-03-16 16:06:11.638554746 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbehK_info:
	.quad	_cbehK
	.quad	387
	.quad	4294967326
	.quad	SbcpG_srt+608


==================== Asm code ====================
2018-03-16 16:06:11.639196055 UTC

.section .text
.align 8
_cbei2:
_cbei2:
	movq 23(%rbx),%r9
	movq 8(%rbp),%r8
	movq 48(%rbp),%rdi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rsi
	movq 32(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 40(%rbp),%rax
	movq 31(%rbx),%rbx
	movq %rbx,40(%rbp)
	movq %rax,48(%rbp)
	addq $32,%rbp
	jmp GHC.IO.Handle.Text.$wwriteBlocks_entry
	.size _cbei2, .-_cbei2


==================== Asm code ====================
2018-03-16 16:06:11.639834753 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbei2_info:
	.quad	_cbei2
	.quad	390
	.quad	4294967326
	.quad	SbcpG_srt+544


==================== Asm code ====================
2018-03-16 16:06:11.640561385 UTC

.section .text
.align 8
_cbeic:
_cbeic:
	movq 23(%rbx),%r9
	movq 8(%rbp),%r8
	movq 48(%rbp),%rdi
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq 32(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	movq 40(%rbp),%rax
	movq 31(%rbx),%rbx
	movq %rbx,40(%rbp)
	movq %rax,48(%rbp)
	addq $32,%rbp
	jmp GHC.IO.Handle.Text.$wwriteBlocks_entry
	.size _cbeic, .-_cbeic


==================== Asm code ====================
2018-03-16 16:06:11.641185027 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbeic_info:
	.quad	_cbeic
	.quad	390
	.quad	4294967326
	.quad	SbcpG_srt+544


==================== Asm code ====================
2018-03-16 16:06:11.643565447 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr'_closure
.type GHC.IO.Handle.Text.hPutStr'_closure, @object
GHC.IO.Handle.Text.hPutStr'_closure:
	.quad	GHC.IO.Handle.Text.hPutStr'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.644181399 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutStr'_entry
.type GHC.IO.Handle.Text.hPutStr'_entry, @object
GHC.IO.Handle.Text.hPutStr'_entry:
_cbekQ:
	jmp GHC.IO.Handle.Text.hPutStr1_entry
	.size GHC.IO.Handle.Text.hPutStr'_entry, .-GHC.IO.Handle.Text.hPutStr'_entry


==================== Asm code ====================
2018-03-16 16:06:11.644778982 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr'_info
.type GHC.IO.Handle.Text.hPutStr'_info, @object
GHC.IO.Handle.Text.hPutStr'_info:
	.quad	GHC.IO.Handle.Text.hPutStr'_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	SbcpG_srt+592


==================== Asm code ====================
2018-03-16 16:06:11.647283012 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr_closure
.type GHC.IO.Handle.Text.hPutStr_closure, @object
GHC.IO.Handle.Text.hPutStr_closure:
	.quad	GHC.IO.Handle.Text.hPutStr_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.64796016 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutStr_entry
.type GHC.IO.Handle.Text.hPutStr_entry, @object
GHC.IO.Handle.Text.hPutStr_entry:
_cbel1:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	jmp GHC.IO.Handle.Text.hPutStr'_entry
	.size GHC.IO.Handle.Text.hPutStr_entry, .-GHC.IO.Handle.Text.hPutStr_entry


==================== Asm code ====================
2018-03-16 16:06:11.648541845 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStr_info
.type GHC.IO.Handle.Text.hPutStr_info, @object
GHC.IO.Handle.Text.hPutStr_info:
	.quad	GHC.IO.Handle.Text.hPutStr_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SbcpG_srt+616


==================== Asm code ====================
2018-03-16 16:06:11.650673198 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStrLn_closure
.type GHC.IO.Handle.Text.hPutStrLn_closure, @object
GHC.IO.Handle.Text.hPutStrLn_closure:
	.quad	GHC.IO.Handle.Text.hPutStrLn_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.65134205 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hPutStrLn_entry
.type GHC.IO.Handle.Text.hPutStrLn_entry, @object
GHC.IO.Handle.Text.hPutStrLn_entry:
_cbeld:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rdi
	jmp GHC.IO.Handle.Text.hPutStr'_entry
	.size GHC.IO.Handle.Text.hPutStrLn_entry, .-GHC.IO.Handle.Text.hPutStrLn_entry


==================== Asm code ====================
2018-03-16 16:06:11.651904649 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hPutStrLn_info
.type GHC.IO.Handle.Text.hPutStrLn_info, @object
GHC.IO.Handle.Text.hPutStrLn_info:
	.quad	GHC.IO.Handle.Text.hPutStrLn_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SbcpG_srt+616


==================== Asm code ====================
2018-03-16 16:06:11.654169361 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.Text.hWaitForInput3_bytes
.type GHC.IO.Handle.Text.hWaitForInput3_bytes, @object
GHC.IO.Handle.Text.hWaitForInput3_bytes:
	.asciz "hWaitForInput"


==================== Asm code ====================
2018-03-16 16:06:11.656665986 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hWaitForInput2_closure
.type GHC.IO.Handle.Text.hWaitForInput2_closure, @object
GHC.IO.Handle.Text.hWaitForInput2_closure:
	.quad	GHC.IO.Handle.Text.hWaitForInput2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.657882698 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hWaitForInput2_entry
.type GHC.IO.Handle.Text.hWaitForInput2_entry, @object
GHC.IO.Handle.Text.hWaitForInput2_entry:
_cbels:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbelt
_cbelu:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbelr
_cbelq:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.Text.hWaitForInput3_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbelt:
	jmp *-16(%r13)
_cbelr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.Text.hWaitForInput2_entry, .-GHC.IO.Handle.Text.hWaitForInput2_entry


==================== Asm code ====================
2018-03-16 16:06:11.65859509 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hWaitForInput2_info
.type GHC.IO.Handle.Text.hWaitForInput2_info, @object
GHC.IO.Handle.Text.hWaitForInput2_info:
	.quad	GHC.IO.Handle.Text.hWaitForInput2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:11.675552641 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hWaitForInput1_closure
.type GHC.IO.Handle.Text.hWaitForInput1_closure, @object
GHC.IO.Handle.Text.hWaitForInput1_closure:
	.quad	GHC.IO.Handle.Text.hWaitForInput1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.676425581 UTC

.section .text
.align 8
lvl34_sbcmX_entry:
_cbelO:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbelP
_cbelQ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbelL_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbelL
_cbelM:
	movq (%rbx),%rax
	jmp *(%rax)
_cbelP:
	jmp *-16(%r13)
	.size lvl34_sbcmX_entry, .-lvl34_sbcmX_entry


==================== Asm code ====================
2018-03-16 16:06:11.677099978 UTC

.section .data.rel.ro
.align 8
.align 1
lvl34_sbcmX_info:
	.quad	lvl34_sbcmX_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:11.677776278 UTC

.section .text
.align 8
_cbelL:
_cbelL:
	cmpq $0,7(%rbx)
	setl %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbelL, .-_cbelL


==================== Asm code ====================
2018-03-16 16:06:11.678354291 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbelL_info:
	.quad	_cbelL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.679125666 UTC

.section .text
.align 8
sat_sbcoY_entry:
_cbem4:
	leaq -96(%rbp),%rax
	cmpq %r15,%rax
	jb _cbem8
_cbem9:
	leaq block_cbem1_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq %r14,%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _cbem1
_cbem2:
	movq (%rbx),%rax
	jmp *(%rax)
_cbem8:
	jmp *-8(%r13)
	.size sat_sbcoY_entry, .-sat_sbcoY_entry


==================== Asm code ====================
2018-03-16 16:06:11.679802374 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbcoY_info:
	.quad	sat_sbcoY_entry
	.quad	2
	.quad	12884901899
	.quad	8589934597
	.quad	SbcpG_srt+624


==================== Asm code ====================
2018-03-16 16:06:11.680595362 UTC

.section .text
.align 8
_cbem1:
_cbem1:
	leaq block_cbem7_info(%rip),%rax
	movq %rax,-56(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 63(%rbx),%rdi
	movq 71(%rbx),%r8
	movq 95(%rbx),%rbx
	movq %rbx,%r9
	movq 8(%r8),%rbx
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	movq %rax,(%rbp)
	addq $-56,%rbp
	testb $7,%bl
	jne _cbem7
_cbemb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbem1, .-_cbem1


==================== Asm code ====================
2018-03-16 16:06:11.681421298 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbem1_info:
	.quad	_cbem1
	.quad	2
	.quad	12884901918
	.quad	SbcpG_srt+624


==================== Asm code ====================
2018-03-16 16:06:11.682145162 UTC

.section .text
.align 8
_cbem7:
_cbem7:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _cbemn
_ubeoL:
	addq $80,%rbp
	jmp _cbemJ
_cbemn:
	leaq block_cbemm_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 72(%rbp),%rbx
	movq %rax,72(%rbp)
	testb $7,%bl
	jne _cbemm
_cbemo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbem7, .-_cbem7


==================== Asm code ====================
2018-03-16 16:06:11.682793456 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbem7_info:
	.quad	_cbem7
	.quad	9
	.quad	12884901918
	.quad	SbcpG_srt+624


==================== Asm code ====================
2018-03-16 16:06:11.683563972 UTC

.section .text
.align 8
_cbemm:
_cbemm:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbenj
_cbeou:
	leaq block_cbeos_info(%rip),%rax
	movq %rax,32(%rbp)
	movq 72(%rbp),%rsi
	movq 56(%rbp),%r14
	addq $32,%rbp
	jmp *GHC.IO.Handle.Internals.hLookAhead_2_entry@gotpcrel(%rip)
_cbenj:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbemu_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq 48(%rbp),%rbx
	movq %rax,48(%rbp)
	testb $7,%bl
	jne _cbemu
_cbenk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbemm, .-_cbemm


==================== Asm code ====================
2018-03-16 16:06:11.684244327 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbemm_info:
	.quad	_cbemm
	.quad	9
	.quad	12884901918
	.quad	SbcpG_srt+624


==================== Asm code ====================
2018-03-16 16:06:11.685175143 UTC

.section .text
.align 8
_cbemu:
_cbemu:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbenE
_cbeoe:
	leaq block_cbenR_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbenR
_cbenS:
	movq (%rbx),%rax
	jmp *(%rax)
_cbenH:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbenE:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbenH
_cbenG:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.IO.Handle.Internals.decodeByteBuf2_closure@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq 48(%rbp),%rax
	movq %rax,(%r12)
	movq 32(%rbp),%rbx
	movq 72(%rbp),%rcx
	leaq -15(%r12),%rdx
	movq %rdx,8(%rbx)
	subq $8,%rsp
	movq %r13,%rdx
	movq %rbx,%rsi
	movq %rdx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_cbens_info(%rip),%rax
	movq %rax,(%rbp)
	movq %r14,%rsi
	movq %rbx,%r14
	jmp *GHC.IO.Encoding.Latin1.latin5_entry@gotpcrel(%rip)
	.size _cbemu, .-_cbemu


==================== Asm code ====================
2018-03-16 16:06:11.686039939 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbemu_info:
	.quad	_cbemu
	.quad	9
	.quad	12884901918
	.quad	SbcpG_srt+624


==================== Asm code ====================
2018-03-16 16:06:11.686722245 UTC

.section .text
.align 8
_cbens:
_cbens:
	leaq block_cbenu_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbenu
_cbenv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbens, .-_cbens


==================== Asm code ====================
2018-03-16 16:06:11.687318664 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbens_info:
	.quad	_cbens
	.quad	18953
	.quad	4294967326
	.quad	SbcpG_srt+632


==================== Asm code ====================
2018-03-16 16:06:11.688062015 UTC

.section .text
.align 8
_cbenu:
_cbenu:
	movq 24(%rbp),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rax,%rsi
	movq %rcx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_cbenC_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbenC
_cbenK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbenu, .-_cbenu


==================== Asm code ====================
2018-03-16 16:06:11.68869165 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbenu_info:
	.quad	_cbenu
	.quad	18953
	.quad	4294967326
	.quad	SbcpG_srt+632


==================== Asm code ====================
2018-03-16 16:06:11.689368136 UTC

.section .text
.align 8
_cbenC:
_cbenC:
	movq 23(%rbx),%rax
	movq %rax,72(%rbp)
	movq 7(%rbx),%rax
	movq %rax,48(%rbp)
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	movq 31(%rbx),%rax
	movq %rax,24(%rbp)
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 47(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp _cbemw
	.size _cbenC, .-_cbenC


==================== Asm code ====================
2018-03-16 16:06:11.689974308 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbenC_info:
	.quad	_cbenC
	.quad	19209
	.quad	4294967326
	.quad	SbcpG_srt+632


==================== Asm code ====================
2018-03-16 16:06:11.690688169 UTC

.section .text
.align 8
_cbenR:
_cbenR:
	leaq block_cbenW_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cbenR, .-_cbenR


==================== Asm code ====================
2018-03-16 16:06:11.691341308 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbenR_info:
	.quad	_cbenR
	.quad	9
	.quad	4294967326
	.quad	SbcpG_srt+632


==================== Asm code ====================
2018-03-16 16:06:11.69219013 UTC

.section .text
.align 8
_cbenW:
_cbenW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbeoi
_cbeoh:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 64(%rbp),%rax
	movq %rax,(%r12)
	movq 48(%rbp),%rbx
	movq 88(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq 8(%rbp),%rsi
	leaq -15(%r12),%rdi
	movq %rdi,8(%rbx)
	subq $8,%rsp
	movq %r13,%rdi
	movq %rsi,%r8
	movq %rbx,%rsi
	movq %rax,%rbx
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_cbeo2_info(%rip),%rax
	movq %rax,16(%rbp)
	movq %r14,%r8
	movq %rbx,%rdi
	movq 72(%rsp),%rax
	movq %rax,%rsi
	movq 64(%rsp),%rax
	movq %rax,%r14
	addq $16,%rbp
	jmp *GHC.IO.Handle.Internals.$wstreamEncode_entry@gotpcrel(%rip)
_cbeoi:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbenW, .-_cbenW


==================== Asm code ====================
2018-03-16 16:06:11.692911962 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbenW_info:
	.quad	_cbenW
	.quad	11
	.quad	4294967326
	.quad	SbcpG_srt+632


==================== Asm code ====================
2018-03-16 16:06:11.693611441 UTC

.section .text
.align 8
_cbeo2:
_cbeo2:
	leaq block_cbeo4_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbeo4
_cbeo5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbeo2, .-_cbeo2


==================== Asm code ====================
2018-03-16 16:06:11.694194103 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbeo2_info:
	.quad	_cbeo2
	.quad	18953
	.quad	4294967326
	.quad	SbcpG_srt+632


==================== Asm code ====================
2018-03-16 16:06:11.694960001 UTC

.section .text
.align 8
_cbeo4:
_cbeo4:
	movq 24(%rbp),%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,8(%rax)
	subq $8,%rsp
	movq %r13,%rcx
	movq %rax,%rsi
	movq %rcx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_cbeoc_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbeoc
_cbeol:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbeo4, .-_cbeo4


==================== Asm code ====================
2018-03-16 16:06:11.695603021 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbeo4_info:
	.quad	_cbeo4
	.quad	18953
	.quad	4294967326
	.quad	SbcpG_srt+632


==================== Asm code ====================
2018-03-16 16:06:11.696329875 UTC

.section .text
.align 8
_cbeoc:
_cbeoc:
	movq 47(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 39(%rbx),%rax
	movq %rax,(%rbp)
	movq 31(%rbx),%rax
	movq %rax,24(%rbp)
	movq 15(%rbx),%rax
	movq %rax,32(%rbp)
	movq 7(%rbx),%rax
	movq %rax,48(%rbp)
	movq 23(%rbx),%rax
	movq %rax,72(%rbp)
	addq $-16,%rbp
	jmp _cbemw
	.size _cbeoc, .-_cbeoc


==================== Asm code ====================
2018-03-16 16:06:11.69694257 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbeoc_info:
	.quad	_cbeoc
	.quad	19209
	.quad	4294967326
	.quad	SbcpG_srt+632


==================== Asm code ====================
2018-03-16 16:06:11.698136045 UTC

.section .text
.align 8
_cbemw:
_cbemw:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbemB
_cbemA:
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 64(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq 88(%rbp),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	movq 80(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq 56(%rbp),%rdi
	leaq -47(%r12),%r8
	movq %r8,8(%rdi)
	subq $8,%rsp
	movq %r13,%r8
	movq %rsi,%r9
	movq %rdi,%rsi
	movq %r8,%rdi
	movq %rax,%r8
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r9,80(%rsp)
	movq %r8,88(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq 80(%rsp),%rax
	cmpq %rbx,%rax
	je _cbemP
_ubeoO:
	addq $96,%rbp
	jmp _cbemJ
_cbemP:
	leaq block_cbemM_info(%rip),%rax
	movq %rax,48(%rbp)
	movq %r14,%rbx
	movq 64(%rsp),%rax
	movq %rax,%r14
	movq stg_ap_pppv_info@gotpcrel(%rip),%rax
	movq %rax,16(%rbp)
	movq 72(%rsp),%rax
	movq %rax,24(%rbp)
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,32(%rbp)
	movq %rbx,40(%rbp)
	addq $16,%rbp
	jmp *GHC.IO.Device.ready_entry@gotpcrel(%rip)
_cbemB:
	movq $56,904(%r13)
	leaq block_cbemw_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cbemw, .-_cbemw


==================== Asm code ====================
2018-03-16 16:06:11.699028047 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbemw_info:
	.quad	_cbemw
	.quad	66763
	.quad	4294967326
	.quad	SbcpG_srt+632


==================== Asm code ====================
2018-03-16 16:06:11.700299701 UTC

.section .text
.align 8
_cbemM:
_cbemM:
	leaq block_cbemO_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbemO
_cbemR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbemM, .-_cbemM


==================== Asm code ====================
2018-03-16 16:06:11.700930709 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbemM_info:
	.quad	_cbemM
	.quad	1669
	.quad	4294967326
	.quad	SbcpG_srt+632


==================== Asm code ====================
2018-03-16 16:06:11.701733069 UTC

.section .text
.align 8
_cbemO:
_cbemO:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbemX
_cben2:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cben0_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cben0
_cben3:
	movq (%rbx),%rax
	jmp *(%rax)
_cbemX:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbemO, .-_cbemO


==================== Asm code ====================
2018-03-16 16:06:11.702356593 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbemO_info:
	.quad	_cbemO
	.quad	1669
	.quad	4294967326
	.quad	SbcpG_srt+632


==================== Asm code ====================
2018-03-16 16:06:11.703195612 UTC

.section .text
.align 8
_cben0:
_cben0:
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 39(%rbx),%rdx
	cmpq 47(%rbx),%rdx
	je _cbenf
_cbenb:
	movq 8(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbenf:
	leaq block_cbene_info(%rip),%rsi
	movq %rsi,(%rbp)
	movq %rbx,%rsi
	movq 24(%rbp),%r14
	movq %rdx,24(%rbp)
	movq %rax,32(%rbp)
	movq %rcx,40(%rbp)
	jmp *GHC.IO.Handle.Internals.hLookAhead_2_entry@gotpcrel(%rip)
	.size _cben0, .-_cben0


==================== Asm code ====================
2018-03-16 16:06:11.703913304 UTC

.section .data.rel.ro
.align 8
.align 1
block_cben0_info:
	.quad	_cben0
	.quad	1669
	.quad	4294967326
	.quad	SbcpG_srt+632


==================== Asm code ====================
2018-03-16 16:06:11.704656017 UTC

.section .text
.align 8
_cbene:
_cbene:
	movq 8(%rbp),%rax
	movq 40(%rbp),%rcx
	movq 32(%rbp),%rcx
	movq 24(%rbp),%rcx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbene, .-_cbene


==================== Asm code ====================
2018-03-16 16:06:11.705374514 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbene_info:
	.quad	_cbene
	.quad	1413
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.706054109 UTC

.section .text
.align 8
_cbeos:
_cbeos:
	movq 8(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbeos, .-_cbeos


==================== Asm code ====================
2018-03-16 16:06:11.706711595 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbeos_info:
	.quad	_cbeos
	.quad	1925
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:11.707341514 UTC

.section .text
.align 8
_cbemJ:
_cbemJ:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbemJ, .-_cbemJ


==================== Asm code ====================
2018-03-16 16:06:11.707893577 UTC

.section .data.rel.ro
.align 8
.align 1
ubep9_srtd:
	.quad	SbcpG_srt+96
	.quad	70
	.quad	1
	.quad	60


==================== Asm code ====================
2018-03-16 16:06:11.708676469 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hWaitForInput1_entry
.type GHC.IO.Handle.Text.hWaitForInput1_entry, @object
GHC.IO.Handle.Text.hWaitForInput1_entry:
_cbep4:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbep8
_cbep7:
	leaq lvl34_sbcmX_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rsi,-24(%r12)
	leaq sat_sbcoY_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rsi,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rdi
	movq %r14,%rsi
	leaq GHC.IO.Handle.Text.hWaitForInput2_closure(%rip),%r14
	jmp *GHC.IO.Handle.Internals.wantReadableHandle_1_entry@gotpcrel(%rip)
_cbep8:
	movq $48,904(%r13)
	leaq GHC.IO.Handle.Text.hWaitForInput1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.Text.hWaitForInput1_entry, .-GHC.IO.Handle.Text.hWaitForInput1_entry


==================== Asm code ====================
2018-03-16 16:06:11.709422499 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hWaitForInput1_info
.type GHC.IO.Handle.Text.hWaitForInput1_info, @object
GHC.IO.Handle.Text.hWaitForInput1_info:
	.quad	GHC.IO.Handle.Text.hWaitForInput1_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901903
	.quad	ubep9_srtd


==================== Asm code ====================
2018-03-16 16:06:11.711762881 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.Text.hWaitForInput_closure
.type GHC.IO.Handle.Text.hWaitForInput_closure, @object
GHC.IO.Handle.Text.hWaitForInput_closure:
	.quad	GHC.IO.Handle.Text.hWaitForInput_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:11.712389877 UTC

.section .text
.align 8
.globl GHC.IO.Handle.Text.hWaitForInput_entry
.type GHC.IO.Handle.Text.hWaitForInput_entry, @object
GHC.IO.Handle.Text.hWaitForInput_entry:
_cberS:
	jmp GHC.IO.Handle.Text.hWaitForInput1_entry
	.size GHC.IO.Handle.Text.hWaitForInput_entry, .-GHC.IO.Handle.Text.hWaitForInput_entry


==================== Asm code ====================
2018-03-16 16:06:11.712982898 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.Text.hWaitForInput_info
.type GHC.IO.Handle.Text.hWaitForInput_info, @object
GHC.IO.Handle.Text.hWaitForInput_info:
	.quad	GHC.IO.Handle.Text.hWaitForInput_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SbcpG_srt+640


==================== Asm code ====================
2018-03-16 16:06:11.716159455 UTC

.section .data.rel.ro
.align 8
.align 1
SbcpG_srt:
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	GHC.IO.Handle.Text.$willegalBufferSize_closure
	.quad	GHC.IO.Handle.Internals.$wwantWritableHandle'_closure
	.quad	GHC.IO.Handle.Text.$whPutChar_closure
	.quad	GHC.IO.Handle.Text.hPutChar2_closure
	.quad	GHC.IO.Handle.Text.hPutChar1_closure
	.quad	GHC.IO.Handle.Text.hPutStr7_closure
	.quad	Data.Typeable.Internal.sameTypeRep_closure
	.quad	GHC.IO.Exception.$fExceptionIOException4_closure
	.quad	GHC.IO.Handle.Text.hGetChar3_closure
	.quad	GHC.IO.Handle.Internals.hLookAhead_2_closure
	.quad	GHC.IO.Handle.Text.hGetChar2_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle_1_closure
	.quad	GHC.IO.Handle.Text.hGetChar6_closure
	.quad	GHC.IO.Handle.Text.hGetChar1_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_closure
	.quad	GHC.IO.Handle.Text.hGetContents3_closure
	.quad	$wlvl_rb6WI_closure
	.quad	lvl6_rb6WK_closure
	.quad	lvl7_rb6WL_closure
	.quad	lvl9_rb6WN_closure
	.quad	lvl10_rb6WO_closure
	.quad	lvl4_rb6WH_closure
	.quad	GHC.IO.Handle.Internals.hClose_help1_closure
	.quad	GHC.IO.Handle.Text.hGetContents2_closure
	.quad	GHC.IO.Handle.Internals.$wwithHandle'_closure
	.quad	GHC.IO.Handle.Internals.wantReadableHandle1_closure
	.quad	GHC.IO.Handle.Text.hGetContents1_closure
	.quad	GHC.IO.Handle.Internals.ioe_EOF1_closure
	.quad	GHC.IO.Handle.Text.$whGetLineBufferedLoop_closure
	.quad	GHC.IO.Handle.Text.hGetLine3_closure
	.quad	GHC.IO.Handle.Text.hGetLine2_closure
	.quad	GHC.IO.Handle.Text.hGetLine4_closure
	.quad	GHC.IO.Handle.Text.hGetLine1_closure
	.quad	Data.Typeable.Internal.$wmkTrCon_closure
	.quad	GHC.IO.Handle.Text.$wbufReadNBEmpty_closure
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking2_closure
	.quad	GHC.IO.FD.$fBufferedIOFD8_closure
	.quad	GHC.IO.FD.$wreadRawBufferPtrNoBlock_closure
	.quad	lvl11_rb6WR_closure
	.quad	GHC.IO.Handle.Text.$whGetBufNonBlocking_closure
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking3_closure
	.quad	GHC.IO.Handle.Text.hGetBufNonBlocking1_closure
	.quad	GHC.IO.FD.$fBufferedIOFD12_closure
	.quad	GHC.IO.FD.$wreadRawBufferPtr_closure
	.quad	GHC.IO.Handle.Text.$whGetBufSome_closure
	.quad	lvl13_rb6WT_closure
	.quad	GHC.IO.Handle.Text.hGetBufSome1_closure
	.quad	GHC.IO.Handle.Text.hGetBuf2_closure
	.quad	GHC.IO.Handle.Text.hGetBuf4_closure
	.quad	GHC.IO.Handle.Text.$whGetBuf_closure
	.quad	GHC.IO.Handle.Text.hGetBuf5_closure
	.quad	GHC.IO.Handle.Text.hGetBuf1_closure
	.quad	GHC.Err.error_closure
	.quad	lvl24_rb6X4_closure
	.quad	lvl29_rb6X9_closure
	.quad	GHC.IO.FD.$w$cwriteNonBlocking_closure
	.quad	GHC.IO.FD.$wfdWrite_closure
	.quad	GHC.IO.Handle.Text.$wbufWrite_closure
	.quad	lvl26_rb6X6_closure
	.quad	lvl30_rb6Xa_closure
	.quad	GHC.IO.Handle.Text.$whPutBuf'_closure
	.quad	GHC.IO.Handle.Text.hPutBuf3_closure
	.quad	GHC.IO.Handle.Text.hPutBuf2_closure
	.quad	GHC.IO.Handle.Text.hPutBufNonBlocking1_closure
	.quad	GHC.IO.Handle.Text.hPutBuf1_closure
	.quad	lvl32_rb6Xc_closure
	.quad	GHC.IO.Handle.Internals.wantWritableHandle1_closure
	.quad	GHC.IO.Handle.Text.$wwriteBlocks_closure
	.quad	lvl2_rb6WE_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	GHC.ForeignPtr.mallocForeignPtrBytes2_closure
	.quad	GHC.IO.Handle.Text.hPutStr2_closure
	.quad	GHC.IO.Handle.Text.hPutStr3_closure
	.quad	GHC.IO.Handle.Text.hPutStr1_closure
	.quad	GHC.IO.Handle.Text.hPutStr5_closure
	.quad	GHC.IO.Handle.Text.$whPutChar_closure
	.quad	GHC.IO.Handle.Text.hPutStr'_closure
	.quad	GHC.IO.Handle.Internals.decodeByteBuf2_closure
	.quad	GHC.IO.Handle.Internals.hLookAhead_2_closure
	.quad	GHC.IO.Handle.Text.hWaitForInput1_closure
	.quad	GHC.IO.Handle.Text.hWaitForInput2_closure

