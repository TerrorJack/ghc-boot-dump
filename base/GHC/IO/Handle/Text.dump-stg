
==================== Pre unarise: ====================
2018-03-16 16:06:02.552985848 UTC

lvl_rb6WB :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "illegal buffer size "#;

GHC.IO.Handle.Text.$willegalBufferSize [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId, Arity=4, Str=<B,U><B,U><B,U><B,U>x, Unf=OtherCon []] =
    [] \r [w_sb6Xf w1_sb6Xg ww_sb6Xh w2_sb6Xi]
        let {
          sat_sb6Xq [Occ=Once] :: GHC.Exception.SomeException
          [LclId] =
              [w_sb6Xf w1_sb6Xg ww_sb6Xh] \u []
                  let {
                    sat_sb6Xo [Occ=Once] :: GHC.Base.String
                    [LclId] =
                        [ww_sb6Xh] \u []
                            let {
                              sat_sb6Xn [Occ=Once] :: [GHC.Types.Char]
                              [LclId] =
                                  [ww_sb6Xh] \u []
                                      case GHC.Show.$wshowSignedInt 9# ww_sb6Xh GHC.Types.[] of {
                                        (#,#) ww5_sb6Xl [Occ=Once] ww6_sb6Xm [Occ=Once] ->
                                            : [ww5_sb6Xl ww6_sb6Xm];
                                      };
                            } in  GHC.CString.unpackAppendCString# lvl_rb6WB sat_sb6Xn; } in
                  let {
                    sat_sb6Xj [Occ=Once] :: GHC.Base.Maybe GHC.IO.Handle.Types.Handle
                    [LclId] =
                        CCCS GHC.Base.Just! [w_sb6Xf]; } in
                  let {
                    sat_sb6Xp [Occ=Once] :: GHC.IO.Exception.IOException
                    [LclId] =
                        CCCS GHC.IO.Exception.IOError! [sat_sb6Xj
                                                        GHC.IO.Exception.InvalidArgument
                                                        w1_sb6Xg
                                                        sat_sb6Xo
                                                        GHC.Base.Nothing
                                                        GHC.Base.Nothing];
                  } in 
                    GHC.IO.Exception.$fExceptionIOException_$ctoException sat_sb6Xp;
        } in  raiseIO# [sat_sb6Xq w2_sb6Xi];

GHC.IO.Handle.Text.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.IO.Handle.Text.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Handle.Text.$trModule4];

GHC.IO.Handle.Text.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.Handle.Text"#;

GHC.IO.Handle.Text.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Handle.Text.$trModule2];

GHC.IO.Handle.Text.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.IO.Handle.Text.$trModule3
                                     GHC.IO.Handle.Text.$trModule1];

memcpy1_rb6WC
  :: forall a.
     GHC.Ptr.Ptr a
     -> GHC.Ptr.Ptr a
     -> GHC.Word.Word64
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [ds_sb6Xr ds1_sb6Xs ds2_sb6Xt eta_sb6Xu]
        case ds_sb6Xr of {
          GHC.Ptr.Ptr ds4_sb6Xw [Occ=Once] ->
              case ds1_sb6Xs of {
                GHC.Ptr.Ptr ds6_sb6Xy [Occ=Once] ->
                    case ds2_sb6Xt of {
                      GHC.Word.W64# ds8_sb6XA [Occ=Once] ->
                          case
                              __pkg_ccall base-4.11.0.0 [ds4_sb6Xw ds6_sb6Xy ds8_sb6XA eta_sb6Xu]
                          of
                          { (#,#) ds9_sb6XD [Occ=Once] ds10_sb6XE [Occ=Once] ->
                                let {
                                  sat_sb6XF [Occ=Once] :: GHC.Ptr.Ptr ()
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds10_sb6XE];
                                } in  (#,#) [ds9_sb6XD sat_sb6XF];
                          };
                    };
              };
        };

GHC.IO.Handle.Text.memcpy
  :: forall a.
     GHC.Ptr.Ptr a
     -> GHC.Ptr.Ptr a
     -> Foreign.C.Types.CSize
     -> GHC.Types.IO (GHC.Ptr.Ptr ())
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        memcpy1_rb6WC eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.Handle.Text.$wcommitBuffer' [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.CharBuffer #)
[GblId,
 Arity=8,
 Caf=NoCafRefs,
 Str=<S,U><L,U><S,U><S,U><L,1*U><L,1*U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sb6XG
           ww1_sb6XH
           ww2_sb6XI
           ww3_sb6XJ
           w_sb6XK
           w1_sb6XL
           w2_sb6XM
           w3_sb6XN]
        case w2_sb6XM of wild_sb6XO {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       $dBufferedIO_sb6XQ [Occ=Once]
                                       _ [Occ=Dead]
                                       ds_sb6XS [Occ=Once]
                                       _ [Occ=Dead]
                                       dt_sb6XU
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt2_sb6XX [Occ=Once*]
                                       dt3_sb6XY
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case
                  GHC.IO.Handle.Internals.$wwriteCharBuffer
                      wild_sb6XO
                      ww_sb6XG
                      ww1_sb6XH
                      GHC.IO.Buffer.WriteBuffer
                      ww2_sb6XI
                      0#
                      ww3_sb6XJ
                      w3_sb6XN
              of
              { (#,#) ipv_sb6Y6 [Occ=Once*] _ [Occ=Dead] ->
                    case w_sb6XK of {
                      GHC.Types.False ->
                          case w1_sb6XL of {
                            GHC.Types.False ->
                                let {
                                  sat_sb6Ya [Occ=Once]
                                    :: GHC.IO.Buffer.Buffer GHC.IO.Buffer.CharBufElem
                                  [LclId] =
                                      CCCS GHC.IO.Buffer.Buffer! [ww_sb6XG
                                                                  ww1_sb6XH
                                                                  GHC.IO.Buffer.WriteBuffer
                                                                  ww2_sb6XI
                                                                  0#
                                                                  ww3_sb6XJ];
                                } in  (#,#) [ipv_sb6Y6 sat_sb6Ya];
                            GHC.Types.True ->
                                case readMutVar# [dt2_sb6XX ipv_sb6Y6] of {
                                  (#,#) ipv2_sb6Yc [Occ=Once*] ipv3_sb6Yd [Occ=Once!] ->
                                      case ipv3_sb6Yd of {
                                        GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             dt6_sb6Yi [Occ=Once]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                            case ==# [ww2_sb6XI dt6_sb6Yi] of {
                                              __DEFAULT ->
                                                  let {
                                                    sat_sb6Ym [Occ=Once]
                                                      :: GHC.IO.Buffer.Buffer
                                                           GHC.IO.Buffer.CharBufElem
                                                    [LclId] =
                                                        CCCS GHC.IO.Buffer.Buffer! [ww_sb6XG
                                                                                    ww1_sb6XH
                                                                                    GHC.IO.Buffer.WriteBuffer
                                                                                    ww2_sb6XI
                                                                                    0#
                                                                                    ww3_sb6XJ];
                                                  } in  (#,#) [ipv2_sb6Yc sat_sb6Ym];
                                              1# ->
                                                  case readMutVar# [dt3_sb6XY ipv2_sb6Yc] of {
                                                    (#,#) ipv4_sb6Yo [Occ=Once]
                                                          ipv5_sb6Yp [Occ=Once] ->
                                                        let {
                                                          sat_sb6Yq [Occ=Once]
                                                            :: GHC.IO.Buffer.RawBuffer
                                                                 GHC.IO.Buffer.CharBufElem
                                                          [LclId] =
                                                              CCCS GHC.ForeignPtr.ForeignPtr! [ww_sb6XG
                                                                                               ww1_sb6XH]; } in
                                                        let {
                                                          sat_sb6Yr [Occ=Once]
                                                            :: GHC.IO.Handle.Types.BufferList
                                                                 GHC.IO.Buffer.CharBufElem
                                                          [LclId] =
                                                              CCCS GHC.IO.Handle.Types.BufferListCons! [sat_sb6Yq
                                                                                                        ipv5_sb6Yp];
                                                        } in 
                                                          case
                                                              writeMutVar# [dt3_sb6XY
                                                                            sat_sb6Yr
                                                                            ipv4_sb6Yo]
                                                          of
                                                          s2#_sb6Ys
                                                          { __DEFAULT ->
                                                                let {
                                                                  sat_sb6Yt [Occ=Once]
                                                                    :: GHC.IO.Buffer.Buffer
                                                                         GHC.IO.Buffer.CharBufElem
                                                                  [LclId] =
                                                                      CCCS GHC.IO.Buffer.Buffer! [ww_sb6XG
                                                                                                  ww1_sb6XH
                                                                                                  GHC.IO.Buffer.WriteBuffer
                                                                                                  ww2_sb6XI
                                                                                                  0#
                                                                                                  ww3_sb6XJ];
                                                                } in  (#,#) [s2#_sb6Ys sat_sb6Yt];
                                                          };
                                                  };
                                            };
                                      };
                                };
                          };
                      GHC.Types.True ->
                          case readMutVar# [dt_sb6XU ipv_sb6Y6] of {
                            (#,#) ipv2_sb6Yv [Occ=Once*] ipv3_sb6Yw [Occ=Once!] ->
                                case ipv3_sb6Yw of wild2_sb6Yx {
                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                       _ [Occ=Dead]
                                                       _ [Occ=Dead]
                                                       _ [Occ=Dead]
                                                       dt7_sb6YC [Occ=Once]
                                                       dt8_sb6YD [Occ=Once] ->
                                      case ==# [dt7_sb6YC dt8_sb6YD] of {
                                        __DEFAULT ->
                                            case
                                                GHC.IO.BufferedIO.flushWriteBuffer
                                                    $dBufferedIO_sb6XQ
                                                    ds_sb6XS
                                                    wild2_sb6Yx
                                                    ipv2_sb6Yv
                                            of
                                            { (#,#) ipv4_sb6YG [Occ=Once] ipv5_sb6YH [Occ=Once] ->
                                                  case
                                                      writeMutVar# [dt_sb6XU ipv5_sb6YH ipv4_sb6YG]
                                                  of
                                                  s2#_sb6YI
                                                  { __DEFAULT ->
                                                        case w1_sb6XL of {
                                                          GHC.Types.False ->
                                                              let {
                                                                sat_sb6YK [Occ=Once]
                                                                  :: GHC.IO.Buffer.Buffer
                                                                       GHC.IO.Buffer.CharBufElem
                                                                [LclId] =
                                                                    CCCS GHC.IO.Buffer.Buffer! [ww_sb6XG
                                                                                                ww1_sb6XH
                                                                                                GHC.IO.Buffer.WriteBuffer
                                                                                                ww2_sb6XI
                                                                                                0#
                                                                                                ww3_sb6XJ];
                                                              } in  (#,#) [s2#_sb6YI sat_sb6YK];
                                                          GHC.Types.True ->
                                                              case
                                                                  readMutVar# [dt2_sb6XX s2#_sb6YI]
                                                              of
                                                              { (#,#) ipv6_sb6YM [Occ=Once*]
                                                                      ipv7_sb6YN [Occ=Once!] ->
                                                                    case ipv7_sb6YN of {
                                                                      GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                           _ [Occ=Dead]
                                                                                           _ [Occ=Dead]
                                                                                           dt12_sb6YS [Occ=Once]
                                                                                           _ [Occ=Dead]
                                                                                           _ [Occ=Dead] ->
                                                                          case
                                                                              ==# [ww2_sb6XI
                                                                                   dt12_sb6YS]
                                                                          of
                                                                          { __DEFAULT ->
                                                                                let {
                                                                                  sat_sb6YW [Occ=Once]
                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                         GHC.IO.Buffer.CharBufElem
                                                                                  [LclId] =
                                                                                      CCCS GHC.IO.Buffer.Buffer! [ww_sb6XG
                                                                                                                  ww1_sb6XH
                                                                                                                  GHC.IO.Buffer.WriteBuffer
                                                                                                                  ww2_sb6XI
                                                                                                                  0#
                                                                                                                  ww3_sb6XJ];
                                                                                } in 
                                                                                  (#,#) [ipv6_sb6YM
                                                                                         sat_sb6YW];
                                                                            1# ->
                                                                                case
                                                                                    readMutVar# [dt3_sb6XY
                                                                                                 ipv6_sb6YM]
                                                                                of
                                                                                { (#,#) ipv8_sb6YY [Occ=Once]
                                                                                        ipv9_sb6YZ [Occ=Once] ->
                                                                                      let {
                                                                                        sat_sb6Z0 [Occ=Once]
                                                                                          :: GHC.IO.Buffer.RawBuffer
                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                        [LclId] =
                                                                                            CCCS GHC.ForeignPtr.ForeignPtr! [ww_sb6XG
                                                                                                                             ww1_sb6XH]; } in
                                                                                      let {
                                                                                        sat_sb6Z1 [Occ=Once]
                                                                                          :: GHC.IO.Handle.Types.BufferList
                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                        [LclId] =
                                                                                            CCCS GHC.IO.Handle.Types.BufferListCons! [sat_sb6Z0
                                                                                                                                      ipv9_sb6YZ];
                                                                                      } in 
                                                                                        case
                                                                                            writeMutVar# [dt3_sb6XY
                                                                                                          sat_sb6Z1
                                                                                                          ipv8_sb6YY]
                                                                                        of
                                                                                        s2#1_sb6Z2
                                                                                        { __DEFAULT ->
                                                                                              let {
                                                                                                sat_sb6Z3 [Occ=Once]
                                                                                                  :: GHC.IO.Buffer.Buffer
                                                                                                       GHC.IO.Buffer.CharBufElem
                                                                                                [LclId] =
                                                                                                    CCCS GHC.IO.Buffer.Buffer! [ww_sb6XG
                                                                                                                                ww1_sb6XH
                                                                                                                                GHC.IO.Buffer.WriteBuffer
                                                                                                                                ww2_sb6XI
                                                                                                                                0#
                                                                                                                                ww3_sb6XJ];
                                                                                              } in 
                                                                                                (#,#) [s2#1_sb6Z2
                                                                                                       sat_sb6Z3];
                                                                                        };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                        1# ->
                                            case w1_sb6XL of {
                                              GHC.Types.False ->
                                                  let {
                                                    sat_sb6Z5 [Occ=Once]
                                                      :: GHC.IO.Buffer.Buffer
                                                           GHC.IO.Buffer.CharBufElem
                                                    [LclId] =
                                                        CCCS GHC.IO.Buffer.Buffer! [ww_sb6XG
                                                                                    ww1_sb6XH
                                                                                    GHC.IO.Buffer.WriteBuffer
                                                                                    ww2_sb6XI
                                                                                    0#
                                                                                    ww3_sb6XJ];
                                                  } in  (#,#) [ipv2_sb6Yv sat_sb6Z5];
                                              GHC.Types.True ->
                                                  case readMutVar# [dt2_sb6XX ipv2_sb6Yv] of {
                                                    (#,#) ipv4_sb6Z7 [Occ=Once*]
                                                          ipv5_sb6Z8 [Occ=Once!] ->
                                                        case ipv5_sb6Z8 of {
                                                          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                               _ [Occ=Dead]
                                                                               _ [Occ=Dead]
                                                                               dt12_sb6Zd [Occ=Once]
                                                                               _ [Occ=Dead]
                                                                               _ [Occ=Dead] ->
                                                              case ==# [ww2_sb6XI dt12_sb6Zd] of {
                                                                __DEFAULT ->
                                                                    let {
                                                                      sat_sb6Zh [Occ=Once]
                                                                        :: GHC.IO.Buffer.Buffer
                                                                             GHC.IO.Buffer.CharBufElem
                                                                      [LclId] =
                                                                          CCCS GHC.IO.Buffer.Buffer! [ww_sb6XG
                                                                                                      ww1_sb6XH
                                                                                                      GHC.IO.Buffer.WriteBuffer
                                                                                                      ww2_sb6XI
                                                                                                      0#
                                                                                                      ww3_sb6XJ];
                                                                    } in 
                                                                      (#,#) [ipv4_sb6Z7 sat_sb6Zh];
                                                                1# ->
                                                                    case
                                                                        readMutVar# [dt3_sb6XY
                                                                                     ipv4_sb6Z7]
                                                                    of
                                                                    { (#,#) ipv6_sb6Zj [Occ=Once]
                                                                            ipv7_sb6Zk [Occ=Once] ->
                                                                          let {
                                                                            sat_sb6Zl [Occ=Once]
                                                                              :: GHC.IO.Buffer.RawBuffer
                                                                                   GHC.IO.Buffer.CharBufElem
                                                                            [LclId] =
                                                                                CCCS GHC.ForeignPtr.ForeignPtr! [ww_sb6XG
                                                                                                                 ww1_sb6XH]; } in
                                                                          let {
                                                                            sat_sb6Zm [Occ=Once]
                                                                              :: GHC.IO.Handle.Types.BufferList
                                                                                   GHC.IO.Buffer.CharBufElem
                                                                            [LclId] =
                                                                                CCCS GHC.IO.Handle.Types.BufferListCons! [sat_sb6Zl
                                                                                                                          ipv7_sb6Zk];
                                                                          } in 
                                                                            case
                                                                                writeMutVar# [dt3_sb6XY
                                                                                              sat_sb6Zm
                                                                                              ipv6_sb6Zj]
                                                                            of
                                                                            s2#_sb6Zn
                                                                            { __DEFAULT ->
                                                                                  let {
                                                                                    sat_sb6Zo [Occ=Once]
                                                                                      :: GHC.IO.Buffer.Buffer
                                                                                           GHC.IO.Buffer.CharBufElem
                                                                                    [LclId] =
                                                                                        CCCS GHC.IO.Buffer.Buffer! [ww_sb6XG
                                                                                                                    ww1_sb6XH
                                                                                                                    GHC.IO.Buffer.WriteBuffer
                                                                                                                    ww2_sb6XI
                                                                                                                    0#
                                                                                                                    ww3_sb6XJ];
                                                                                  } in 
                                                                                    (#,#) [s2#_sb6Zn
                                                                                           sat_sb6Zo];
                                                                            };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.Handle.Text.commitBuffer'1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.CharBuffer #)
[GblId,
 Arity=7,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><L,1*U><L,1*U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb6Zp
           w1_sb6Zq
           w2_sb6Zr
           w3_sb6Zs
           w4_sb6Zt
           w5_sb6Zu
           w6_sb6Zv]
        case w_sb6Zp of {
          GHC.ForeignPtr.ForeignPtr ww1_sb6Zx [Occ=Once]
                                    ww2_sb6Zy [Occ=Once] ->
              case w1_sb6Zq of {
                GHC.Types.I# ww4_sb6ZA [Occ=Once] ->
                    case w2_sb6Zr of {
                      GHC.Types.I# ww6_sb6ZC [Occ=Once] ->
                          GHC.IO.Handle.Text.$wcommitBuffer'
                              ww1_sb6Zx
                              ww2_sb6Zy
                              ww4_sb6ZA
                              ww6_sb6ZC
                              w3_sb6Zs
                              w4_sb6Zt
                              w5_sb6Zu
                              w6_sb6Zv;
                    };
              };
        };

GHC.IO.Handle.Text.commitBuffer'
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.IO.Handle.Types.Handle__
     -> GHC.Types.IO GHC.IO.Buffer.CharBuffer
[GblId,
 Arity=7,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><L,1*U><L,1*U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B7 eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Handle.Text.commitBuffer'1
            eta_B7 eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

lvl1_rb6WD :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "commitBuffer"#;

lvl2_rb6WE :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl1_rb6WD;

GHC.IO.Handle.Text.hPutChar3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hPutChar"#;

GHC.IO.Handle.Text.hPutChar2 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hPutChar3;

GHC.IO.Handle.Text.$whPutChar [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.Char#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<S,1*U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [w_sb6ZD ww_sb6ZE w1_sb6ZF]
        let {
          act_sb6ZG [Occ=Once*, Dmd=<L,C(C1(U(U,U)))>]
            :: GHC.IO.Handle.Types.Handle__
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
              [ww_sb6ZE] \r [handle__sb6ZH eta_sb6ZI]
                  case handle__sb6ZH of wild_sb6ZJ {
                    GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                 $dBufferedIO_sb6ZL [Occ=Once]
                                                 _ [Occ=Dead]
                                                 ds_sb6ZN [Occ=Once]
                                                 _ [Occ=Dead]
                                                 dt_sb6ZP
                                                 ds2_sb6ZQ [Occ=Once!]
                                                 _ [Occ=Dead]
                                                 dt2_sb6ZS [Occ=Once]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 ds7_sb6ZY [Occ=Once!]
                                                 _ [Occ=Dead] ->
                        case readMutVar# [dt2_sb6ZS eta_sb6ZI] of {
                          (#,#) ipv_sb701 [Occ=Once*] ipv1_sb702 [Occ=Once*!] ->
                              case ww_sb6ZE of wild1_sb703 {
                                __DEFAULT ->
                                    case ipv1_sb702 of {
                                      GHC.IO.Buffer.Buffer dt4_sb705
                                                           dt5_sb706
                                                           ds10_sb707 [Occ=Once]
                                                           dt6_sb708 [Occ=Once]
                                                           dt7_sb709 [Occ=Once]
                                                           dt8_sb70a ->
                                          case
                                              writeWideCharOffAddr# [dt4_sb705
                                                                     dt8_sb70a
                                                                     wild1_sb703
                                                                     ipv_sb701]
                                          of
                                          s2_sb70b
                                          { __DEFAULT ->
                                                case touch# [dt5_sb706 s2_sb70b] of s'_sb70c {
                                                  __DEFAULT ->
                                                      case +# [dt8_sb70a 1#] of sat_sb70d {
                                                        __DEFAULT ->
                                                            case
                                                                GHC.IO.Handle.Internals.$wwriteCharBuffer
                                                                    wild_sb6ZJ
                                                                    dt4_sb705
                                                                    dt5_sb706
                                                                    ds10_sb707
                                                                    dt6_sb708
                                                                    dt7_sb709
                                                                    sat_sb70d
                                                                    s'_sb70c
                                                            of
                                                            { (#,#) ipv2_sb70f [Occ=Once]
                                                                    _ [Occ=Dead] ->
                                                                  (#,#) [ipv2_sb70f GHC.Tuple.()];
                                                            };
                                                      };
                                                };
                                          };
                                    };
                                '\n'# ->
                                    let-no-escape {
                                      $w$j_sb70h [InlPrag=NOUSERINLINE[0],
                                                  Occ=Once*!T[7],
                                                  Dmd=<C(C(C(C(C(C(C(S))))))),1*C1(C1(C1(C1(C1(C1(C1(U(U,U))))))))>]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> GHC.Prim.Addr#
                                           -> GHC.ForeignPtr.ForeignPtrContents
                                           -> GHC.IO.Buffer.BufferState
                                           -> GHC.Prim.Int#
                                           -> GHC.Prim.Int#
                                           -> GHC.Prim.Int#
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId[JoinId(7)],
                                       Arity=7,
                                       Str=<S,U><S,U><L,U><L,U><S,U><S,U><S,U>,
                                       Unf=OtherCon []] =
                                          sat-only [wild_sb6ZJ
                                                    $dBufferedIO_sb6ZL
                                                    ds_sb6ZN
                                                    dt_sb6ZP
                                                    ds2_sb6ZQ] \r [w2_sb70i
                                                                   ww1_sb70j
                                                                   ww2_sb70k
                                                                   ww3_sb70l
                                                                   ww4_sb70m
                                                                   ww5_sb70n
                                                                   ww6_sb70o]
                                              case
                                                  GHC.IO.Handle.Internals.$wwriteCharBuffer
                                                      wild_sb6ZJ
                                                      ww1_sb70j
                                                      ww2_sb70k
                                                      ww3_sb70l
                                                      ww4_sb70m
                                                      ww5_sb70n
                                                      ww6_sb70o
                                                      w2_sb70i
                                              of
                                              { (#,#) ipv2_sb70q [Occ=Once*] _ [Occ=Dead] ->
                                                    case ds2_sb6ZQ of {
                                                      __DEFAULT -> (#,#) [ipv2_sb70q GHC.Tuple.()];
                                                      GHC.IO.Handle.Types.LineBuffering ->
                                                          case
                                                              readMutVar# [dt_sb6ZP ipv2_sb70q]
                                                          of
                                                          { (#,#) ipv4_sb70u [Occ=Once*]
                                                                  ipv5_sb70v [Occ=Once!] ->
                                                                case ipv5_sb70v of wild3_sb70w {
                                                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       dt7_sb70B [Occ=Once]
                                                                                       dt8_sb70C [Occ=Once] ->
                                                                      case
                                                                          ==# [dt7_sb70B dt8_sb70C]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            case
                                                                                GHC.IO.BufferedIO.flushWriteBuffer
                                                                                    $dBufferedIO_sb6ZL
                                                                                    ds_sb6ZN
                                                                                    wild3_sb70w
                                                                                    ipv4_sb70u
                                                                            of
                                                                            { (#,#) ipv6_sb70F [Occ=Once]
                                                                                    ipv7_sb70G [Occ=Once] ->
                                                                                  case
                                                                                      writeMutVar# [dt_sb6ZP
                                                                                                    ipv7_sb70G
                                                                                                    ipv6_sb70F]
                                                                                  of
                                                                                  s2#_sb70H
                                                                                  { __DEFAULT ->
                                                                                        (#,#) [s2#_sb70H
                                                                                               GHC.Tuple.()];
                                                                                  };
                                                                            };
                                                                        1# ->
                                                                            (#,#) [ipv4_sb70u
                                                                                   GHC.Tuple.()];
                                                                      };
                                                                };
                                                          };
                                                    };
                                              };
                                    } in 
                                      case ds7_sb6ZY of {
                                        GHC.IO.Handle.Types.LF ->
                                            case ipv1_sb702 of {
                                              GHC.IO.Buffer.Buffer dt4_sb70K
                                                                   dt5_sb70L
                                                                   ds10_sb70M [Occ=Once]
                                                                   dt6_sb70N [Occ=Once]
                                                                   dt7_sb70O [Occ=Once]
                                                                   dt8_sb70P ->
                                                  case
                                                      writeWideCharOffAddr# [dt4_sb70K
                                                                             dt8_sb70P
                                                                             '\n'#
                                                                             ipv_sb701]
                                                  of
                                                  s2_sb70Q
                                                  { __DEFAULT ->
                                                        case
                                                            touch# [dt5_sb70L s2_sb70Q]
                                                        of
                                                        s'_sb70R
                                                        { __DEFAULT ->
                                                              case +# [dt8_sb70P 1#] of sat_sb70S {
                                                                __DEFAULT ->
                                                                    $w$j_sb70h
                                                                        s'_sb70R
                                                                        dt4_sb70K
                                                                        dt5_sb70L
                                                                        ds10_sb70M
                                                                        dt6_sb70N
                                                                        dt7_sb70O
                                                                        sat_sb70S;
                                                              };
                                                        };
                                                  };
                                            };
                                        GHC.IO.Handle.Types.CRLF ->
                                            case ipv1_sb702 of {
                                              GHC.IO.Buffer.Buffer dt4_sb70U
                                                                   dt5_sb70V
                                                                   ds10_sb70W [Occ=Once]
                                                                   dt6_sb70X [Occ=Once]
                                                                   dt7_sb70Y [Occ=Once]
                                                                   dt8_sb70Z ->
                                                  case
                                                      writeWideCharOffAddr# [dt4_sb70U
                                                                             dt8_sb70Z
                                                                             '\r'#
                                                                             ipv_sb701]
                                                  of
                                                  s2_sb710
                                                  { __DEFAULT ->
                                                        case
                                                            touch# [dt5_sb70V s2_sb710]
                                                        of
                                                        s'_sb711
                                                        { __DEFAULT ->
                                                              case
                                                                  +# [dt8_sb70Z 1#]
                                                              of
                                                              ipv2_sb712 [Dmd=<S,U>]
                                                              { __DEFAULT ->
                                                                    case
                                                                        writeWideCharOffAddr# [dt4_sb70U
                                                                                               ipv2_sb712
                                                                                               '\n'#
                                                                                               s'_sb711]
                                                                    of
                                                                    s1_sb713
                                                                    { __DEFAULT ->
                                                                          case
                                                                              touch# [dt5_sb70V
                                                                                      s1_sb713]
                                                                          of
                                                                          s'1_sb714
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    +# [ipv2_sb712
                                                                                        1#]
                                                                                of
                                                                                sat_sb715
                                                                                { __DEFAULT ->
                                                                                      $w$j_sb70h
                                                                                          s'1_sb714
                                                                                          dt4_sb70U
                                                                                          dt5_sb70V
                                                                                          ds10_sb70W
                                                                                          dt6_sb70X
                                                                                          dt7_sb70Y
                                                                                          sat_sb715;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                              };
                        };
                  };
        } in 
          case w_sb6ZD of wild_sb716 {
            GHC.IO.Handle.Types.FileHandle _ [Occ=Dead] dt_sb718 [Occ=Once] ->
                GHC.IO.Handle.Internals.$wwantWritableHandle'
                    GHC.IO.Handle.Text.hPutChar2
                    wild_sb716
                    dt_sb718
                    act_sb6ZG
                    w1_sb6ZF;
            GHC.IO.Handle.Types.DuplexHandle _ [Occ=Dead]
                                             _ [Occ=Dead]
                                             dt1_sb71b [Occ=Once] ->
                GHC.IO.Handle.Internals.$wwantWritableHandle'
                    GHC.IO.Handle.Text.hPutChar2
                    wild_sb716
                    dt1_sb71b
                    act_sb6ZG
                    w1_sb6ZF;
          };

GHC.IO.Handle.Text.hPutChar1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Types.Char
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<S,1*U><S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [w_sb71c w1_sb71d w2_sb71e]
        case w1_sb71d of {
          GHC.Types.C# ww1_sb71g [Occ=Once] ->
              GHC.IO.Handle.Text.$whPutChar w_sb71c ww1_sb71g w2_sb71e;
        };

GHC.IO.Handle.Text.hPutChar
  :: GHC.IO.Handle.Types.Handle -> GHC.Types.Char -> GHC.Types.IO ()
[GblId, Arity=3, Str=<S,1*U><S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.IO.Handle.Text.hPutChar1 eta_B3 eta_B2 eta_B1;

GHC.IO.Handle.Text.hPutStr7 [Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle
     -> [GHC.Types.Char]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<L,U><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [ds_sb71h ds1_sb71i eta_sb71j]
        case ds1_sb71i of {
          [] -> (#,#) [eta_sb71j GHC.Tuple.()];
          : c_sb71l [Occ=Once!] cs_sb71m [Occ=Once] ->
              case c_sb71l of {
                GHC.Types.C# ww1_sb71o [Occ=Once] ->
                    case
                        GHC.IO.Handle.Text.$whPutChar ds_sb71h ww1_sb71o eta_sb71j
                    of
                    { (#,#) ipv_sb71q [Occ=Once] _ [Occ=Dead] ->
                          GHC.IO.Handle.Text.hPutStr7 ds_sb71h cs_sb71m ipv_sb71q;
                    };
              };
        };

GHC.IO.Handle.Text.hGetChar3
  :: GHC.Exception.SomeException
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Base.Maybe GHC.IO.Buffer.CharBuffer #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [e1_sb71s eta_sb71t]
        case e1_sb71s of wild_sb71u {
          GHC.Exception.SomeException $dException1_sb71v [Occ=Once]
                                      e3_sb71w [Occ=Once] ->
              case GHC.Exception.$p1Exception $dException1_sb71v of sat_sb71x {
                __DEFAULT ->
                    case
                        Data.Typeable.Internal.sameTypeRep
                            sat_sb71x GHC.IO.Exception.$fExceptionIOException4
                    of
                    { GHC.Types.False -> raiseIO# [wild_sb71u eta_sb71t];
                      GHC.Types.True ->
                          case e3_sb71w of wild2_sb71z {
                            GHC.IO.Exception.IOError _ [Occ=Dead]
                                                     ds2_sb71B [Occ=Once!]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead] ->
                                case ds2_sb71B of {
                                  __DEFAULT ->
                                      let {
                                        sat_sb71H [Occ=Once] :: GHC.Exception.SomeException
                                        [LclId] =
                                            [wild2_sb71z] \u []
                                                GHC.IO.Exception.$fExceptionIOException_$ctoException
                                                    wild2_sb71z;
                                      } in  raiseIO# [sat_sb71H eta_sb71t];
                                  GHC.IO.Exception.EOF -> (#,#) [eta_sb71t GHC.Base.Nothing];
                                };
                          };
                    };
              };
        };

GHC.IO.Handle.Text.hGetChar7 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetChar"#;

GHC.IO.Handle.Text.hGetChar6 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hGetChar7;

GHC.IO.Handle.Text.hGetChar5 :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! ['\r'#];

GHC.IO.Handle.Text.hGetChar4 :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! ['\n'#];

GHC.IO.Handle.Text.hGetChar2
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [handle__sb71I eta_sb71J]
        case handle__sb71I of wild_sb71K {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt2_sb71T
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       ds6_sb71Y [Occ=Once!]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case readMutVar# [dt2_sb71T eta_sb71J] of {
                (#,#) ipv_sb722 [Occ=Once*] ipv1_sb723 [Occ=Once!] ->
                    case ipv1_sb723 of wild1_sb724 {
                      GHC.IO.Buffer.Buffer dt4_sb725 [Occ=Once]
                                           dt5_sb726 [Occ=Once]
                                           ds10_sb727 [Occ=Once]
                                           dt6_sb728 [Occ=Once]
                                           dt7_sb729
                                           dt8_sb72a ->
                          let-no-escape {
                            $w$j_sb72b [InlPrag=NOUSERINLINE[0],
                                        Occ=Once*!T[7],
                                        Dmd=<L,1*C1(C1(C1(C1(C1(C1(C1(U(U,U))))))))>]
                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                 -> GHC.Prim.Addr#
                                 -> GHC.ForeignPtr.ForeignPtrContents
                                 -> GHC.IO.Buffer.BufferState
                                 -> GHC.Prim.Int#
                                 -> GHC.Prim.Int#
                                 -> GHC.Prim.Int#
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
                            [LclId[JoinId(7)],
                             Arity=7,
                             Str=<S,U><S,U><L,U><L,U><L,U><S,U><L,U>,
                             Unf=OtherCon []] =
                                sat-only [wild_sb71K dt2_sb71T ds6_sb71Y] \r [w_sb72c
                                                                              ww_sb72d
                                                                              ww1_sb72e
                                                                              ww2_sb72f
                                                                              ww3_sb72g
                                                                              ww4_sb72h
                                                                              ww5_sb72i]
                                    case readWideCharOffAddr# [ww_sb72d ww4_sb72h w_sb72c] of {
                                      (#,#) ipv2_sb72k [Occ=Once] ipv3_sb72l [Occ=Once*] ->
                                          case touch# [ww1_sb72e ipv2_sb72k] of s'_sb72m {
                                            __DEFAULT ->
                                                case +# [ww4_sb72h 1#] of ipv4_sb72n {
                                                  __DEFAULT ->
                                                      case ds6_sb71Y of {
                                                        GHC.IO.Handle.Types.LF ->
                                                            let {
                                                              sat_sb72q [Occ=Once]
                                                                :: GHC.IO.Buffer.Buffer
                                                                     GHC.IO.Buffer.CharBufElem
                                                              [LclId] =
                                                                  [ww_sb72d
                                                                   ww1_sb72e
                                                                   ww2_sb72f
                                                                   ww3_sb72g
                                                                   ww5_sb72i
                                                                   ipv4_sb72n] \u []
                                                                      case
                                                                          ==# [ipv4_sb72n ww5_sb72i]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            GHC.IO.Buffer.Buffer [ww_sb72d
                                                                                                  ww1_sb72e
                                                                                                  ww2_sb72f
                                                                                                  ww3_sb72g
                                                                                                  ipv4_sb72n
                                                                                                  ww5_sb72i];
                                                                        1# ->
                                                                            GHC.IO.Buffer.Buffer [ww_sb72d
                                                                                                  ww1_sb72e
                                                                                                  ww2_sb72f
                                                                                                  ww3_sb72g
                                                                                                  0#
                                                                                                  0#];
                                                                      };
                                                            } in 
                                                              case
                                                                  writeMutVar# [dt2_sb71T
                                                                                sat_sb72q
                                                                                s'_sb72m]
                                                              of
                                                              s2#_sb72r
                                                              { __DEFAULT ->
                                                                    let {
                                                                      sat_sb72s [Occ=Once]
                                                                        :: GHC.Types.Char
                                                                      [LclId] =
                                                                          CCCS GHC.Types.C#! [ipv3_sb72l];
                                                                    } in 
                                                                      (#,#) [s2#_sb72r sat_sb72s];
                                                              };
                                                        GHC.IO.Handle.Types.CRLF ->
                                                            case ipv3_sb72l of wild3_sb72t {
                                                              __DEFAULT ->
                                                                  let {
                                                                    sat_sb72v [Occ=Once]
                                                                      :: GHC.IO.Buffer.Buffer
                                                                           GHC.IO.Buffer.CharBufElem
                                                                    [LclId] =
                                                                        [ww_sb72d
                                                                         ww1_sb72e
                                                                         ww2_sb72f
                                                                         ww3_sb72g
                                                                         ww5_sb72i
                                                                         ipv4_sb72n] \u []
                                                                            case
                                                                                ==# [ipv4_sb72n
                                                                                     ww5_sb72i]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.IO.Buffer.Buffer [ww_sb72d
                                                                                                        ww1_sb72e
                                                                                                        ww2_sb72f
                                                                                                        ww3_sb72g
                                                                                                        ipv4_sb72n
                                                                                                        ww5_sb72i];
                                                                              1# ->
                                                                                  GHC.IO.Buffer.Buffer [ww_sb72d
                                                                                                        ww1_sb72e
                                                                                                        ww2_sb72f
                                                                                                        ww3_sb72g
                                                                                                        0#
                                                                                                        0#];
                                                                            };
                                                                  } in 
                                                                    case
                                                                        writeMutVar# [dt2_sb71T
                                                                                      sat_sb72v
                                                                                      s'_sb72m]
                                                                    of
                                                                    s2#_sb72w
                                                                    { __DEFAULT ->
                                                                          let {
                                                                            sat_sb72x [Occ=Once]
                                                                              :: GHC.Types.Char
                                                                            [LclId] =
                                                                                CCCS GHC.Types.C#! [wild3_sb72t];
                                                                          } in 
                                                                            (#,#) [s2#_sb72w
                                                                                   sat_sb72x];
                                                                    };
                                                              '\r'# ->
                                                                  let-no-escape {
                                                                    $j_sb72y [Occ=Once*!T[7],
                                                                              Dmd=<C(C(C(C(C(C(C(S))))))),1*C1(C1(C1(C1(C1(C1(C1(U(U,U))))))))>]
                                                                      :: GHC.Prim.Addr#
                                                                         -> GHC.ForeignPtr.ForeignPtrContents
                                                                         -> GHC.IO.Buffer.BufferState
                                                                         -> GHC.Prim.Int#
                                                                         -> GHC.Prim.Int#
                                                                         -> GHC.Prim.Int#
                                                                         -> GHC.IO.Buffer.Buffer
                                                                              GHC.Types.Char
                                                                         -> (# GHC.Prim.State#
                                                                                 GHC.Prim.RealWorld,
                                                                               GHC.Types.Char #)
                                                                    [LclId[JoinId(7)],
                                                                     Arity=7,
                                                                     Str=<L,U><L,U><L,U><L,U><S,U><S,U><L,U(U,U,U,U,U,U)>,
                                                                     Unf=OtherCon []] =
                                                                        sat-only [wild_sb71K
                                                                                  dt2_sb71T
                                                                                  s'_sb72m] \r [dt9_sb72z
                                                                                                dt10_sb72A
                                                                                                ds12_sb72B
                                                                                                dt11_sb72C
                                                                                                dt12_sb72D
                                                                                                dt13_sb72E
                                                                                                wild4_sb72F]
                                                                            case
                                                                                ==# [dt12_sb72D
                                                                                     dt13_sb72E]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      readWideCharOffAddr# [dt9_sb72z
                                                                                                            dt12_sb72D
                                                                                                            s'_sb72m]
                                                                                  of
                                                                                  { (#,#) ipv5_sb72I [Occ=Once]
                                                                                          ipv6_sb72J [Occ=Once!] ->
                                                                                        case
                                                                                            touch# [dt10_sb72A
                                                                                                    ipv5_sb72I]
                                                                                        of
                                                                                        s'1_sb72K
                                                                                        { __DEFAULT ->
                                                                                              case
                                                                                                  ipv6_sb72J
                                                                                              of
                                                                                              { __DEFAULT ->
                                                                                                    case
                                                                                                        writeMutVar# [dt2_sb71T
                                                                                                                      wild4_sb72F
                                                                                                                      s'1_sb72K]
                                                                                                    of
                                                                                                    s2#_sb72M
                                                                                                    { __DEFAULT ->
                                                                                                          (#,#) [s2#_sb72M
                                                                                                                 GHC.IO.Handle.Text.hGetChar5];
                                                                                                    };
                                                                                                '\n'# ->
                                                                                                    let {
                                                                                                      sat_sb72P [Occ=Once]
                                                                                                        :: GHC.IO.Buffer.Buffer
                                                                                                             GHC.IO.Buffer.CharBufElem
                                                                                                      [LclId] =
                                                                                                          [dt9_sb72z
                                                                                                           dt10_sb72A
                                                                                                           ds12_sb72B
                                                                                                           dt11_sb72C
                                                                                                           dt12_sb72D
                                                                                                           dt13_sb72E] \u []
                                                                                                              case
                                                                                                                  +# [dt12_sb72D
                                                                                                                      1#]
                                                                                                              of
                                                                                                              ipv7_sb72N [Dmd=<S,U>]
                                                                                                              { __DEFAULT ->
                                                                                                                    case
                                                                                                                        ==# [ipv7_sb72N
                                                                                                                             dt13_sb72E]
                                                                                                                    of
                                                                                                                    { __DEFAULT ->
                                                                                                                          GHC.IO.Buffer.Buffer [dt9_sb72z
                                                                                                                                                dt10_sb72A
                                                                                                                                                ds12_sb72B
                                                                                                                                                dt11_sb72C
                                                                                                                                                ipv7_sb72N
                                                                                                                                                dt13_sb72E];
                                                                                                                      1# ->
                                                                                                                          GHC.IO.Buffer.Buffer [dt9_sb72z
                                                                                                                                                dt10_sb72A
                                                                                                                                                ds12_sb72B
                                                                                                                                                dt11_sb72C
                                                                                                                                                0#
                                                                                                                                                0#];
                                                                                                                    };
                                                                                                              };
                                                                                                    } in 
                                                                                                      case
                                                                                                          writeMutVar# [dt2_sb71T
                                                                                                                        sat_sb72P
                                                                                                                        s'1_sb72K]
                                                                                                      of
                                                                                                      s2#_sb72Q
                                                                                                      { __DEFAULT ->
                                                                                                            (#,#) [s2#_sb72Q
                                                                                                                   GHC.IO.Handle.Text.hGetChar4];
                                                                                                      };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                              1# ->
                                                                                  let {
                                                                                    sat_sb73b [Occ=Once]
                                                                                      :: GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld
                                                                                         -> (# GHC.Prim.State#
                                                                                                 GHC.Prim.RealWorld,
                                                                                               GHC.Base.Maybe
                                                                                                 GHC.IO.Buffer.CharBuffer #)
                                                                                    [LclId] =
                                                                                        [wild_sb71K
                                                                                         dt9_sb72z
                                                                                         dt10_sb72A
                                                                                         ds12_sb72B
                                                                                         dt11_sb72C
                                                                                         dt12_sb72D
                                                                                         dt13_sb72E
                                                                                         wild4_sb72F] \r [s_sb72R]
                                                                                            case
                                                                                                -# [dt13_sb72E
                                                                                                    dt12_sb72D]
                                                                                            of
                                                                                            { __DEFAULT ->
                                                                                                  let {
                                                                                                    sat_sb72T [Occ=Once]
                                                                                                      :: GHC.Base.Maybe
                                                                                                           GHC.IO.Buffer.CharBuffer
                                                                                                    [LclId] =
                                                                                                        CCCS GHC.Base.Just! [wild4_sb72F];
                                                                                                  } in 
                                                                                                    (#,#) [s_sb72R
                                                                                                           sat_sb72T];
                                                                                              0# ->
                                                                                                  case
                                                                                                      GHC.IO.Handle.Internals.hLookAhead_2
                                                                                                          wild_sb71K
                                                                                                          wild4_sb72F
                                                                                                          s_sb72R
                                                                                                  of
                                                                                                  { (#,#) ipv5_sb72V [Occ=Once]
                                                                                                          ipv6_sb72W [Occ=Once] ->
                                                                                                        let {
                                                                                                          sat_sb72X [Occ=Once]
                                                                                                            :: GHC.Base.Maybe
                                                                                                                 GHC.IO.Buffer.CharBuffer
                                                                                                          [LclId] =
                                                                                                              CCCS GHC.Base.Just! [ipv6_sb72W];
                                                                                                        } in 
                                                                                                          (#,#) [ipv5_sb72V
                                                                                                                 sat_sb72X];
                                                                                                  };
                                                                                              1# ->
                                                                                                  case
                                                                                                      readWideCharOffAddr# [dt9_sb72z
                                                                                                                            dt12_sb72D
                                                                                                                            s_sb72R]
                                                                                                  of
                                                                                                  { (#,#) ipv5_sb72Z [Occ=Once]
                                                                                                          ipv6_sb730 [Occ=Once!] ->
                                                                                                        case
                                                                                                            touch# [dt10_sb72A
                                                                                                                    ipv5_sb72Z]
                                                                                                        of
                                                                                                        s'1_sb731
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  ipv6_sb730
                                                                                                              of
                                                                                                              { __DEFAULT ->
                                                                                                                    let {
                                                                                                                      sat_sb733 [Occ=Once]
                                                                                                                        :: GHC.Base.Maybe
                                                                                                                             GHC.IO.Buffer.CharBuffer
                                                                                                                      [LclId] =
                                                                                                                          CCCS GHC.Base.Just! [wild4_sb72F];
                                                                                                                    } in 
                                                                                                                      (#,#) [s'1_sb731
                                                                                                                             sat_sb733];
                                                                                                                '\r'# ->
                                                                                                                    case
                                                                                                                        writeWideCharOffAddr# [dt9_sb72z
                                                                                                                                               0#
                                                                                                                                               '\r'#
                                                                                                                                               s'1_sb731]
                                                                                                                    of
                                                                                                                    s2_sb734
                                                                                                                    { __DEFAULT ->
                                                                                                                          case
                                                                                                                              touch# [dt10_sb72A
                                                                                                                                      s2_sb734]
                                                                                                                          of
                                                                                                                          s'2_sb735
                                                                                                                          { __DEFAULT ->
                                                                                                                                let {
                                                                                                                                  sat_sb736 [Occ=Once]
                                                                                                                                    :: GHC.IO.Buffer.CharBuffer
                                                                                                                                  [LclId] =
                                                                                                                                      CCCS GHC.IO.Buffer.Buffer! [dt9_sb72z
                                                                                                                                                                  dt10_sb72A
                                                                                                                                                                  ds12_sb72B
                                                                                                                                                                  dt11_sb72C
                                                                                                                                                                  0#
                                                                                                                                                                  1#];
                                                                                                                                } in 
                                                                                                                                  case
                                                                                                                                      GHC.IO.Handle.Internals.hLookAhead_2
                                                                                                                                          wild_sb71K
                                                                                                                                          sat_sb736
                                                                                                                                          s'2_sb735
                                                                                                                                  of
                                                                                                                                  { (#,#) ipv7_sb738 [Occ=Once]
                                                                                                                                          ipv8_sb739 [Occ=Once] ->
                                                                                                                                        let {
                                                                                                                                          sat_sb73a [Occ=Once]
                                                                                                                                            :: GHC.Base.Maybe
                                                                                                                                                 GHC.IO.Buffer.CharBuffer
                                                                                                                                          [LclId] =
                                                                                                                                              CCCS GHC.Base.Just! [ipv8_sb739];
                                                                                                                                        } in 
                                                                                                                                          (#,#) [ipv7_sb738
                                                                                                                                                 sat_sb73a];
                                                                                                                                  };
                                                                                                                          };
                                                                                                                    };
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                  } in 
                                                                                    case
                                                                                        catch# [sat_sb73b
                                                                                                GHC.IO.Handle.Text.hGetChar3
                                                                                                s'_sb72m]
                                                                                    of
                                                                                    { (#,#) ipv5_sb73d [Occ=Once*]
                                                                                            ipv6_sb73e [Occ=Once!] ->
                                                                                          case
                                                                                              ipv6_sb73e
                                                                                          of
                                                                                          { GHC.Base.Nothing ->
                                                                                                case
                                                                                                    writeMutVar# [dt2_sb71T
                                                                                                                  wild4_sb72F
                                                                                                                  ipv5_sb73d]
                                                                                                of
                                                                                                s2#_sb73g
                                                                                                { __DEFAULT ->
                                                                                                      (#,#) [s2#_sb73g
                                                                                                             GHC.IO.Handle.Text.hGetChar5];
                                                                                                };
                                                                                            GHC.Base.Just buf3_sb73h [Occ=Once*] ->
                                                                                                case
                                                                                                    readWideCharOffAddr# [dt9_sb72z
                                                                                                                          dt12_sb72D
                                                                                                                          ipv5_sb73d]
                                                                                                of
                                                                                                { (#,#) ipv7_sb73j [Occ=Once]
                                                                                                        ipv8_sb73k [Occ=Once!] ->
                                                                                                      case
                                                                                                          touch# [dt10_sb72A
                                                                                                                  ipv7_sb73j]
                                                                                                      of
                                                                                                      s'1_sb73l
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                ipv8_sb73k
                                                                                                            of
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      writeMutVar# [dt2_sb71T
                                                                                                                                    buf3_sb73h
                                                                                                                                    s'1_sb73l]
                                                                                                                  of
                                                                                                                  s2#_sb73n
                                                                                                                  { __DEFAULT ->
                                                                                                                        (#,#) [s2#_sb73n
                                                                                                                               GHC.IO.Handle.Text.hGetChar5];
                                                                                                                  };
                                                                                                              '\n'# ->
                                                                                                                  let {
                                                                                                                    sat_sb73x [Occ=Once]
                                                                                                                      :: GHC.IO.Buffer.Buffer
                                                                                                                           GHC.IO.Buffer.CharBufElem
                                                                                                                    [LclId] =
                                                                                                                        [dt12_sb72D
                                                                                                                         buf3_sb73h] \u []
                                                                                                                            case
                                                                                                                                buf3_sb73h
                                                                                                                            of
                                                                                                                            { GHC.IO.Buffer.Buffer dt14_sb73p [Occ=Once*]
                                                                                                                                                   dt15_sb73q [Occ=Once*]
                                                                                                                                                   ds15_sb73r [Occ=Once*]
                                                                                                                                                   dt16_sb73s [Occ=Once*]
                                                                                                                                                   _ [Occ=Dead]
                                                                                                                                                   dt18_sb73u ->
                                                                                                                                  case
                                                                                                                                      +# [dt12_sb72D
                                                                                                                                          1#]
                                                                                                                                  of
                                                                                                                                  ipv9_sb73v [Dmd=<S,U>]
                                                                                                                                  { __DEFAULT ->
                                                                                                                                        case
                                                                                                                                            ==# [ipv9_sb73v
                                                                                                                                                 dt18_sb73u]
                                                                                                                                        of
                                                                                                                                        { __DEFAULT ->
                                                                                                                                              GHC.IO.Buffer.Buffer [dt14_sb73p
                                                                                                                                                                    dt15_sb73q
                                                                                                                                                                    ds15_sb73r
                                                                                                                                                                    dt16_sb73s
                                                                                                                                                                    ipv9_sb73v
                                                                                                                                                                    dt18_sb73u];
                                                                                                                                          1# ->
                                                                                                                                              GHC.IO.Buffer.Buffer [dt14_sb73p
                                                                                                                                                                    dt15_sb73q
                                                                                                                                                                    ds15_sb73r
                                                                                                                                                                    dt16_sb73s
                                                                                                                                                                    0#
                                                                                                                                                                    0#];
                                                                                                                                        };
                                                                                                                                  };
                                                                                                                            };
                                                                                                                  } in 
                                                                                                                    case
                                                                                                                        writeMutVar# [dt2_sb71T
                                                                                                                                      sat_sb73x
                                                                                                                                      s'1_sb73l]
                                                                                                                    of
                                                                                                                    s2#_sb73y
                                                                                                                    { __DEFAULT ->
                                                                                                                          (#,#) [s2#_sb73y
                                                                                                                                 GHC.IO.Handle.Text.hGetChar4];
                                                                                                                    };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                            };
                                                                  } in 
                                                                    case
                                                                        ==# [ipv4_sb72n ww5_sb72i]
                                                                    of
                                                                    { __DEFAULT ->
                                                                          let {
                                                                            sat_sb73A [Occ=Once]
                                                                              :: GHC.IO.Buffer.Buffer
                                                                                   GHC.Types.Char
                                                                            [LclId] =
                                                                                CCCS GHC.IO.Buffer.Buffer! [ww_sb72d
                                                                                                            ww1_sb72e
                                                                                                            ww2_sb72f
                                                                                                            ww3_sb72g
                                                                                                            ipv4_sb72n
                                                                                                            ww5_sb72i];
                                                                          } in 
                                                                            $j_sb72y
                                                                                ww_sb72d
                                                                                ww1_sb72e
                                                                                ww2_sb72f
                                                                                ww3_sb72g
                                                                                ipv4_sb72n
                                                                                ww5_sb72i
                                                                                sat_sb73A;
                                                                      1# ->
                                                                          let {
                                                                            sat_sb73B [Occ=Once]
                                                                              :: GHC.IO.Buffer.Buffer
                                                                                   GHC.Types.Char
                                                                            [LclId] =
                                                                                CCCS GHC.IO.Buffer.Buffer! [ww_sb72d
                                                                                                            ww1_sb72e
                                                                                                            ww2_sb72f
                                                                                                            ww3_sb72g
                                                                                                            0#
                                                                                                            0#];
                                                                          } in 
                                                                            $j_sb72y
                                                                                ww_sb72d
                                                                                ww1_sb72e
                                                                                ww2_sb72f
                                                                                ww3_sb72g
                                                                                0#
                                                                                0#
                                                                                sat_sb73B;
                                                                    };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                          } in 
                            case ==# [dt7_sb729 dt8_sb72a] of {
                              __DEFAULT ->
                                  $w$j_sb72b
                                      ipv_sb722
                                      dt4_sb725
                                      dt5_sb726
                                      ds10_sb727
                                      dt6_sb728
                                      dt7_sb729
                                      dt8_sb72a;
                              1# ->
                                  case
                                      GHC.IO.Handle.Internals.hLookAhead_2
                                          wild_sb71K wild1_sb724 ipv_sb722
                                  of
                                  { (#,#) ipv2_sb73E [Occ=Once] ipv3_sb73F [Occ=Once!] ->
                                        case ipv3_sb73F of {
                                          GHC.IO.Buffer.Buffer ww1_sb73H [Occ=Once]
                                                               ww2_sb73I [Occ=Once]
                                                               ww3_sb73J [Occ=Once]
                                                               ww4_sb73K [Occ=Once]
                                                               ww5_sb73L [Occ=Once]
                                                               ww6_sb73M [Occ=Once] ->
                                              $w$j_sb72b
                                                  ipv2_sb73E
                                                  ww1_sb73H
                                                  ww2_sb73I
                                                  ww3_sb73J
                                                  ww4_sb73K
                                                  ww5_sb73L
                                                  ww6_sb73M;
                                        };
                                  };
                            };
                    };
              };
        };

GHC.IO.Handle.Text.hGetChar1
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
[GblId, Arity=2, Str=<L,U>, Unf=OtherCon []] =
    [] \r [handle_sb73N eta_B1]
        GHC.IO.Handle.Internals.wantReadableHandle_1
            GHC.IO.Handle.Text.hGetChar6
            handle_sb73N
            GHC.IO.Handle.Text.hGetChar2
            eta_B1;

GHC.IO.Handle.Text.hGetChar
  :: GHC.IO.Handle.Types.Handle -> GHC.Types.IO GHC.Types.Char
[GblId, Arity=2, Str=<L,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.IO.Handle.Text.hGetChar1 eta_B2 eta_B1;

GHC.IO.Handle.Text.hGetBuf3 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

$wunpack_nl_rb6WF
  :: GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> [GHC.Types.Char]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           ([GHC.Types.Char], GHC.Types.Int) #)
[GblId,
 Arity=6,
 Caf=NoCafRefs,
 Str=<L,U><L,U><S,U><S,U><L,U><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [ww_sb73O
                    ww1_sb73P
                    ww2_sb73Q
                    ww3_sb73R
                    w_sb73S
                    w1_sb73T]
        case ==# [ww2_sb73Q ww3_sb73R] of {
          __DEFAULT ->
              case -# [ww3_sb73R 1#] of sat_sb73V {
                __DEFAULT ->
                    case readWideCharOffAddr# [ww_sb73O sat_sb73V w1_sb73T] of {
                      (#,#) ipv_sb73X [Occ=Once*] ipv1_sb73Y [Occ=Once!] ->
                          let {
                            $wunpackRB_sb73Z [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
                              :: [GHC.Types.Char]
                                 -> GHC.Prim.Int#
                                 -> GHC.Prim.State# GHC.Prim.RealWorld
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                            [LclId, Arity=3, Str=<L,U><S,U><S,U>, Unf=OtherCon []] =
                                sat-only [ww_sb73O ww2_sb73Q $wunpackRB_sb73Z] \r [w2_sb740
                                                                                   ww4_sb741
                                                                                   w3_sb742]
                                    case <# [ww4_sb741 ww2_sb73Q] of {
                                      __DEFAULT ->
                                          case
                                              readWideCharOffAddr# [ww_sb73O ww4_sb741 w3_sb742]
                                          of
                                          { (#,#) ipv2_sb745 [Occ=Once*] ipv3_sb746 [Occ=Once!] ->
                                                case ipv3_sb746 of wild_sb747 {
                                                  __DEFAULT ->
                                                      case -# [ww4_sb741 1#] of sat_sb74a {
                                                        __DEFAULT ->
                                                            let {
                                                              sat_sb748 [Occ=Once]
                                                                :: GHC.IO.Buffer.CharBufElem
                                                              [LclId] =
                                                                  CCCS GHC.Types.C#! [wild_sb747]; } in
                                                            let {
                                                              sat_sb749 [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId] =
                                                                  CCCS :! [sat_sb748 w2_sb740];
                                                            } in 
                                                              $wunpackRB_sb73Z
                                                                  sat_sb749 sat_sb74a ipv2_sb745;
                                                      };
                                                  '\n'# ->
                                                      case ># [ww4_sb741 ww2_sb73Q] of {
                                                        __DEFAULT ->
                                                            case -# [ww4_sb741 1#] of sat_sb74d {
                                                              __DEFAULT ->
                                                                  let {
                                                                    sat_sb74c [Occ=Once]
                                                                      :: [GHC.Types.Char]
                                                                    [LclId] =
                                                                        CCCS :! [GHC.IO.Handle.Text.hGetChar4
                                                                                 w2_sb740];
                                                                  } in 
                                                                    $wunpackRB_sb73Z
                                                                        sat_sb74c
                                                                        sat_sb74d
                                                                        ipv2_sb745;
                                                            };
                                                        1# ->
                                                            case -# [ww4_sb741 1#] of sat_sb74e {
                                                              __DEFAULT ->
                                                                  case
                                                                      readWideCharOffAddr# [ww_sb73O
                                                                                            sat_sb74e
                                                                                            ipv2_sb745]
                                                                  of
                                                                  { (#,#) ipv4_sb74g [Occ=Once*]
                                                                          ipv5_sb74h [Occ=Once!] ->
                                                                        case ipv5_sb74h of {
                                                                          __DEFAULT ->
                                                                              case
                                                                                  -# [ww4_sb741 1#]
                                                                              of
                                                                              sat_sb74k
                                                                              { __DEFAULT ->
                                                                                    let {
                                                                                      sat_sb74j [Occ=Once]
                                                                                        :: [GHC.Types.Char]
                                                                                      [LclId] =
                                                                                          CCCS :! [GHC.IO.Handle.Text.hGetChar4
                                                                                                   w2_sb740];
                                                                                    } in 
                                                                                      $wunpackRB_sb73Z
                                                                                          sat_sb74j
                                                                                          sat_sb74k
                                                                                          ipv4_sb74g;
                                                                              };
                                                                          '\r'# ->
                                                                              case
                                                                                  -# [ww4_sb741 2#]
                                                                              of
                                                                              sat_sb74m
                                                                              { __DEFAULT ->
                                                                                    let {
                                                                                      sat_sb74l [Occ=Once]
                                                                                        :: [GHC.Types.Char]
                                                                                      [LclId] =
                                                                                          CCCS :! [GHC.IO.Handle.Text.hGetChar4
                                                                                                   w2_sb740];
                                                                                    } in 
                                                                                      $wunpackRB_sb73Z
                                                                                          sat_sb74l
                                                                                          sat_sb74m
                                                                                          ipv4_sb74g;
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                      1# -> (#,#) [w3_sb742 w2_sb740];
                                    };
                          } in 
                            case ipv1_sb73Y of {
                              __DEFAULT ->
                                  case -# [ww3_sb73R 1#] of sat_sb74o {
                                    __DEFAULT ->
                                        case $wunpackRB_sb73Z w_sb73S sat_sb74o ipv_sb73X of {
                                          (#,#) ipv2_sb74q [Occ=Once] ipv3_sb74r [Occ=Once] ->
                                              case touch# [ww1_sb73P ipv2_sb74q] of s'_sb74s {
                                                __DEFAULT ->
                                                    let {
                                                      sat_sb74t [Occ=Once] :: GHC.Types.Int
                                                      [LclId] =
                                                          CCCS GHC.Types.I#! [ww3_sb73R]; } in
                                                    let {
                                                      sat_sb74u [Occ=Once]
                                                        :: ([GHC.Types.Char], GHC.Types.Int)
                                                      [LclId] =
                                                          CCCS (,)! [ipv3_sb74r sat_sb74t];
                                                    } in  (#,#) [s'_sb74s sat_sb74u];
                                              };
                                        };
                                  };
                              '\r'# ->
                                  case -# [ww3_sb73R 2#] of sat_sb74v {
                                    __DEFAULT ->
                                        case $wunpackRB_sb73Z w_sb73S sat_sb74v ipv_sb73X of {
                                          (#,#) ipv2_sb74x [Occ=Once] ipv3_sb74y [Occ=Once] ->
                                              case touch# [ww1_sb73P ipv2_sb74x] of s'_sb74z {
                                                __DEFAULT ->
                                                    case -# [ww3_sb73R 1#] of sat_sb74A {
                                                      __DEFAULT ->
                                                          let {
                                                            sat_sb74B [Occ=Once] :: GHC.Types.Int
                                                            [LclId] =
                                                                CCCS GHC.Types.I#! [sat_sb74A]; } in
                                                          let {
                                                            sat_sb74C [Occ=Once]
                                                              :: ([GHC.Types.Char], GHC.Types.Int)
                                                            [LclId] =
                                                                CCCS (,)! [ipv3_sb74y sat_sb74B];
                                                          } in  (#,#) [s'_sb74z sat_sb74C];
                                                    };
                                              };
                                        };
                                  };
                            };
                    };
              };
          1# ->
              let {
                sat_sb74D [Occ=Once] :: ([GHC.Types.Char], GHC.Types.Int)
                [LclId] =
                    CCCS (,)! [w_sb73S GHC.IO.Handle.Text.hGetBuf3];
              } in  (#,#) [w1_sb73T sat_sb74D];
        };

GHC.IO.Handle.Text.hGetContents4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetContents"#;

GHC.IO.Handle.Text.hGetContents3 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.IO.Handle.Text.hGetContents4;

lvl3_rb6WG :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "\r"#;

lvl4_rb6WH :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl3_rb6WG;

$wlvl_rb6WI
  :: GHC.IO.Handle.Types.Handle
     -> GHC.IO.Exception.IOErrorType
     -> GHC.Base.String
     -> GHC.Base.Maybe Foreign.C.Types.CInt
     -> GHC.Base.Maybe GHC.IO.FilePath
     -> [GHC.Types.Char]
[GblId,
 Arity=5,
 Str=<B,U><B,U><B,U><B,U><B,1*U>x,
 Unf=OtherCon []] =
    sat-only [] \r [w_sb74E ww_sb74F ww1_sb74G ww2_sb74H ww3_sb74I]
        let {
          sat_sb74S [Occ=Once] :: GHC.Base.Maybe GHC.IO.FilePath
          [LclId] =
              [w_sb74E ww3_sb74I] \u []
                  case ww3_sb74I of wild1_sb74K {
                    GHC.Base.Nothing ->
                        case w_sb74E of {
                          GHC.IO.Handle.Types.FileHandle path_sb74M [Occ=Once]
                                                         _ [Occ=Dead] ->
                              GHC.Base.Just [path_sb74M];
                          GHC.IO.Handle.Types.DuplexHandle path_sb74O [Occ=Once]
                                                           _ [Occ=Dead]
                                                           _ [Occ=Dead] ->
                              GHC.Base.Just [path_sb74O];
                        };
                    GHC.Base.Just _ [Occ=Dead] -> wild1_sb74K;
                  }; } in
        let {
          sat_sb74J [Occ=Once] :: GHC.Base.Maybe GHC.IO.Handle.Types.Handle
          [LclId] =
              CCCS GHC.Base.Just! [w_sb74E]; } in
        let {
          sat_sb74T [Occ=Once] :: GHC.IO.Exception.IOException
          [LclId] =
              CCCS GHC.IO.Exception.IOError! [sat_sb74J
                                              ww_sb74F
                                              GHC.IO.Handle.Text.hGetContents3
                                              ww1_sb74G
                                              ww2_sb74H
                                              sat_sb74S];
        } in 
          GHC.Exception.throw
              GHC.IO.Exception.$fExceptionIOException sat_sb74T;

lvl5_rb6WJ :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "delayed read on closed handle"#;

lvl6_rb6WK :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl5_rb6WJ;

lvl7_rb6WL
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.IO.Handle.Types.Handle__, [GHC.Types.Char]) #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    sat-only [] \r [handle_sb74U eta_sb74V]
        let {
          sat_sb74Y [Occ=Once] :: GHC.Exception.SomeException
          [LclId] =
              [handle_sb74U] \u []
                  let {
                    sat_sb74W [Occ=Once] :: GHC.Base.Maybe GHC.IO.Handle.Types.Handle
                    [LclId] =
                        CCCS GHC.Base.Just! [handle_sb74U]; } in
                  let {
                    sat_sb74X [Occ=Once] :: GHC.IO.Exception.IOException
                    [LclId] =
                        CCCS GHC.IO.Exception.IOError! [sat_sb74W
                                                        GHC.IO.Exception.IllegalOperation
                                                        GHC.IO.Handle.Text.hGetContents3
                                                        lvl6_rb6WK
                                                        GHC.Base.Nothing
                                                        GHC.Base.Nothing];
                  } in 
                    GHC.IO.Exception.$fExceptionIOException_$ctoException sat_sb74X;
        } in  raiseIO# [sat_sb74Y eta_sb74V];

lvl8_rb6WM :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "illegal handle type"#;

lvl9_rb6WN :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl8_rb6WM;

lvl10_rb6WO
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.IO.Handle.Types.Handle__, [GHC.Types.Char]) #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    sat-only [] \r [handle_sb74Z eta_sb750]
        let {
          sat_sb753 [Occ=Once] :: GHC.Exception.SomeException
          [LclId] =
              [handle_sb74Z] \u []
                  let {
                    sat_sb751 [Occ=Once] :: GHC.Base.Maybe GHC.IO.Handle.Types.Handle
                    [LclId] =
                        CCCS GHC.Base.Just! [handle_sb74Z]; } in
                  let {
                    sat_sb752 [Occ=Once] :: GHC.IO.Exception.IOException
                    [LclId] =
                        CCCS GHC.IO.Exception.IOError! [sat_sb751
                                                        GHC.IO.Exception.IllegalOperation
                                                        GHC.IO.Handle.Text.hGetContents3
                                                        lvl9_rb6WN
                                                        GHC.Base.Nothing
                                                        GHC.Base.Nothing];
                  } in 
                    GHC.IO.Exception.$fExceptionIOException_$ctoException sat_sb752;
        } in  raiseIO# [sat_sb753 eta_sb750];

GHC.IO.Handle.Text.hGetContents2 [Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [handle_sb754 eta_sb755]
        let {
          sat_sb77w [Occ=Once] :: GHC.Types.IO [GHC.Types.Char]
          [LclId] =
              [handle_sb754] \r [s_sb756]
                  case noDuplicate# [s_sb756] of s'_sb757 {
                    __DEFAULT ->
                        let {
                          act_sb758 [Occ=Once*, Dmd=<C(S),C(U)>]
                            :: GHC.IO.Handle.Types.Handle__
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     (GHC.IO.Handle.Types.Handle__, [GHC.Types.Char]) #)
                          [LclId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
                              [handle_sb754] \r [handle__sb759 eta1_sb75a]
                                  case handle__sb759 of wild_sb75b {
                                    GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 ds2_sb75g [Occ=Once!]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 dt2_sb75k
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 ds7_sb75p
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead] ->
                                        case ds2_sb75g of {
                                          __DEFAULT -> lvl10_rb6WO handle_sb754 eta1_sb75a;
                                          GHC.IO.Handle.Types.ClosedHandle ->
                                              lvl7_rb6WL handle_sb754 eta1_sb75a;
                                          GHC.IO.Handle.Types.SemiClosedHandle ->
                                              case readMutVar# [dt2_sb75k eta1_sb75a] of {
                                                (#,#) ipv_sb75u [Occ=Once] ipv1_sb75v ->
                                                    let {
                                                      sat_sb77p [Occ=Once]
                                                        :: GHC.Exception.SomeException
                                                           -> GHC.Prim.State# GHC.Prim.RealWorld
                                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                 (GHC.IO.Handle.Types.Handle__,
                                                                  [GHC.Types.Char]) #)
                                                      [LclId] =
                                                          [handle_sb754
                                                           wild_sb75b
                                                           ipv1_sb75v] \r [e1_sb76U eta2_sb76V]
                                                              case e1_sb76U of wild2_sb76W {
                                                                GHC.Exception.SomeException $dException1_sb76X [Occ=Once]
                                                                                            e3_sb76Y [Occ=Once] ->
                                                                    case
                                                                        GHC.Exception.$p1Exception
                                                                            $dException1_sb76X
                                                                    of
                                                                    sat_sb76Z
                                                                    { __DEFAULT ->
                                                                          case
                                                                              Data.Typeable.Internal.sameTypeRep
                                                                                  sat_sb76Z
                                                                                  GHC.IO.Exception.$fExceptionIOException4
                                                                          of
                                                                          { GHC.Types.False ->
                                                                                raiseIO# [wild2_sb76W
                                                                                          eta2_sb76V];
                                                                            GHC.Types.True ->
                                                                                case
                                                                                    GHC.IO.Handle.Internals.hClose_help1
                                                                                        wild_sb75b
                                                                                        eta2_sb76V
                                                                                of
                                                                                { (#,#) ipv2_sb772 [Occ=Once]
                                                                                        ipv3_sb773 [Occ=Once!] ->
                                                                                      case
                                                                                          ipv3_sb773
                                                                                      of
                                                                                      { (,) handle_'_sb775 [Occ=Once]
                                                                                            _ [Occ=Dead] ->
                                                                                            let {
                                                                                              sat_sb77n [Occ=Once]
                                                                                                :: [GHC.Types.Char]
                                                                                              [LclId] =
                                                                                                  [handle_sb754
                                                                                                   ipv1_sb75v
                                                                                                   e3_sb76Y] \u []
                                                                                                      case
                                                                                                          e3_sb76Y
                                                                                                      of
                                                                                                      { GHC.IO.Exception.IOError _ [Occ=Dead]
                                                                                                                                 ds14_sb779 [Occ=Once!]
                                                                                                                                 _ [Occ=Dead]
                                                                                                                                 ds16_sb77b [Occ=Once]
                                                                                                                                 ds17_sb77c [Occ=Once]
                                                                                                                                 ds18_sb77d [Occ=Once] ->
                                                                                                            case
                                                                                                                ds14_sb779
                                                                                                            of
                                                                                                            wild6_sb77e
                                                                                                            { __DEFAULT ->
                                                                                                                  $wlvl_rb6WI
                                                                                                                      handle_sb754
                                                                                                                      wild6_sb77e
                                                                                                                      ds16_sb77b
                                                                                                                      ds17_sb77c
                                                                                                                      ds18_sb77d;
                                                                                                              GHC.IO.Exception.EOF ->
                                                                                                                  case
                                                                                                                      ipv1_sb75v
                                                                                                                  of
                                                                                                                  { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                                                                         _ [Occ=Dead]
                                                                                                                                         _ [Occ=Dead]
                                                                                                                                         _ [Occ=Dead]
                                                                                                                                         dt7_sb77k [Occ=Once]
                                                                                                                                         dt8_sb77l [Occ=Once] ->
                                                                                                                        case
                                                                                                                            ==# [dt7_sb77k
                                                                                                                                 dt8_sb77l]
                                                                                                                        of
                                                                                                                        { __DEFAULT ->
                                                                                                                              lvl4_rb6WH;
                                                                                                                          1# ->
                                                                                                                              [] [];
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      }; } in
                                                                                            let {
                                                                                              sat_sb77o [Occ=Once]
                                                                                                :: (GHC.IO.Handle.Types.Handle__,
                                                                                                    [GHC.Types.Char])
                                                                                              [LclId] =
                                                                                                  CCCS (,)! [handle_'_sb775
                                                                                                             sat_sb77n];
                                                                                            } in 
                                                                                              (#,#) [ipv2_sb772
                                                                                                     sat_sb77o];
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              }; } in
                                                    let {
                                                      sat_sb76T [Occ=Once]
                                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                 (GHC.IO.Handle.Types.Handle__,
                                                                  [GHC.Types.Char]) #)
                                                      [LclId] =
                                                          [handle_sb754
                                                           wild_sb75b
                                                           dt2_sb75k
                                                           ds7_sb75p
                                                           ipv1_sb75v] \r [s1_sb75w]
                                                              case ipv1_sb75v of wild2_sb75x {
                                                                GHC.IO.Buffer.Buffer dt4_sb75y
                                                                                     dt5_sb75z
                                                                                     ds_sb75A [Occ=Once*]
                                                                                     dt6_sb75B [Occ=Once*]
                                                                                     dt7_sb75C
                                                                                     dt8_sb75D ->
                                                                    let-no-escape {
                                                                      $w$j_sb75E [InlPrag=NOUSERINLINE[0],
                                                                                  Occ=Once*!T[7],
                                                                                  Dmd=<L,1*C1(C1(C1(C1(C1(C1(C1(U)))))))>]
                                                                        :: GHC.Prim.State#
                                                                             GHC.Prim.RealWorld
                                                                           -> GHC.Prim.Addr#
                                                                           -> GHC.ForeignPtr.ForeignPtrContents
                                                                           -> GHC.IO.Buffer.BufferState
                                                                           -> GHC.Prim.Int#
                                                                           -> GHC.Prim.Int#
                                                                           -> GHC.Prim.Int#
                                                                           -> (# GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld,
                                                                                 (GHC.IO.Handle.Types.Handle__,
                                                                                  [GHC.Types.Char]) #)
                                                                      [LclId[JoinId(7)],
                                                                       Arity=7,
                                                                       Str=<S,U><L,U><L,U><L,U><L,U><L,U><L,U>,
                                                                       Unf=OtherCon []] =
                                                                          sat-only [handle_sb754
                                                                                    wild_sb75b
                                                                                    dt2_sb75k
                                                                                    ds7_sb75p] \r [w_sb75F
                                                                                                   ww_sb75G
                                                                                                   ww1_sb75H
                                                                                                   ww2_sb75I
                                                                                                   ww3_sb75J
                                                                                                   ww4_sb75K
                                                                                                   ww5_sb75L]
                                                                              case
                                                                                  GHC.IO.Handle.Text.hGetContents2
                                                                                      handle_sb754
                                                                                      w_sb75F
                                                                              of
                                                                              { (#,#) ipv2_sb75N [Occ=Once*]
                                                                                      ipv3_sb75O [Occ=Once*] ->
                                                                                    case
                                                                                        ds7_sb75p
                                                                                    of
                                                                                    { GHC.IO.Handle.Types.LF ->
                                                                                          case
                                                                                              ==# [ww4_sb75K
                                                                                                   ww5_sb75L]
                                                                                          of
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    -# [ww5_sb75L
                                                                                                        1#]
                                                                                                of
                                                                                                sat_sb769
                                                                                                { __DEFAULT ->
                                                                                                      let-no-escape {
                                                                                                        $j_sb75R [Occ=OnceL!T[2],
                                                                                                                  Dmd=<C(C(S)),C(C1(U))>]
                                                                                                          :: GHC.Prim.State#
                                                                                                               GHC.Prim.RealWorld
                                                                                                             -> [GHC.IO.Buffer.CharBufElem]
                                                                                                             -> (# GHC.Prim.State#
                                                                                                                     GHC.Prim.RealWorld,
                                                                                                                   (GHC.IO.Handle.Types.Handle__,
                                                                                                                    [GHC.Types.Char]) #)
                                                                                                        [LclId[JoinId(2)],
                                                                                                         Arity=2,
                                                                                                         Str=<S,U><L,U>,
                                                                                                         Unf=OtherCon []] =
                                                                                                            sat-only [wild_sb75b
                                                                                                                      dt2_sb75k
                                                                                                                      ww_sb75G
                                                                                                                      ww1_sb75H
                                                                                                                      ww2_sb75I
                                                                                                                      ww3_sb75J] \r [ipv4_sb75S
                                                                                                                                     ipv5_sb75T]
                                                                                                                case
                                                                                                                    touch# [ww1_sb75H
                                                                                                                            ipv4_sb75S]
                                                                                                                of
                                                                                                                s'1_sb75U
                                                                                                                { __DEFAULT ->
                                                                                                                      let {
                                                                                                                        sat_sb75V [Occ=Once]
                                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                                                        [LclId] =
                                                                                                                            CCCS GHC.IO.Buffer.Buffer! [ww_sb75G
                                                                                                                                                        ww1_sb75H
                                                                                                                                                        ww2_sb75I
                                                                                                                                                        ww3_sb75J
                                                                                                                                                        0#
                                                                                                                                                        0#];
                                                                                                                      } in 
                                                                                                                        case
                                                                                                                            writeMutVar# [dt2_sb75k
                                                                                                                                          sat_sb75V
                                                                                                                                          s'1_sb75U]
                                                                                                                        of
                                                                                                                        s2#_sb75W
                                                                                                                        { __DEFAULT ->
                                                                                                                              let {
                                                                                                                                sat_sb75X [Occ=Once]
                                                                                                                                  :: (GHC.IO.Handle.Types.Handle__,
                                                                                                                                      [GHC.Types.Char])
                                                                                                                                [LclId] =
                                                                                                                                    CCCS (,)! [wild_sb75b
                                                                                                                                               ipv5_sb75T];
                                                                                                                              } in 
                                                                                                                                (#,#) [s2#_sb75W
                                                                                                                                       sat_sb75X];
                                                                                                                        };
                                                                                                                };
                                                                                                      } in 
                                                                                                        let-no-escape {
                                                                                                          $wunpackRB_sb75Y [InlPrag=NOUSERINLINE[0],
                                                                                                                            Occ=LoopBreakerT[3]]
                                                                                                            :: [GHC.IO.Buffer.CharBufElem]
                                                                                                               -> GHC.Prim.Int#
                                                                                                               -> GHC.Prim.State#
                                                                                                                    GHC.Prim.RealWorld
                                                                                                               -> (# GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld,
                                                                                                                     (GHC.IO.Handle.Types.Handle__,
                                                                                                                      [GHC.Types.Char]) #)
                                                                                                          [LclId[JoinId(3)],
                                                                                                           Arity=3,
                                                                                                           Str=<L,U><S,U><S,U>,
                                                                                                           Unf=OtherCon []] =
                                                                                                              sat-only [ww_sb75G
                                                                                                                        ww4_sb75K
                                                                                                                        $j_sb75R
                                                                                                                        $wunpackRB_sb75Y] \r [w1_sb75Z
                                                                                                                                              ww6_sb760
                                                                                                                                              w2_sb761]
                                                                                                                  case
                                                                                                                      <# [ww6_sb760
                                                                                                                          ww4_sb75K]
                                                                                                                  of
                                                                                                                  { __DEFAULT ->
                                                                                                                        case
                                                                                                                            readWideCharOffAddr# [ww_sb75G
                                                                                                                                                  ww6_sb760
                                                                                                                                                  w2_sb761]
                                                                                                                        of
                                                                                                                        { (#,#) ipv4_sb764 [Occ=Once]
                                                                                                                                ipv5_sb765 [Occ=Once] ->
                                                                                                                              case
                                                                                                                                  -# [ww6_sb760
                                                                                                                                      1#]
                                                                                                                              of
                                                                                                                              sat_sb768
                                                                                                                              { __DEFAULT ->
                                                                                                                                    let {
                                                                                                                                      sat_sb766 [Occ=Once]
                                                                                                                                        :: GHC.IO.Buffer.CharBufElem
                                                                                                                                      [LclId] =
                                                                                                                                          CCCS GHC.Types.C#! [ipv5_sb765]; } in
                                                                                                                                    let {
                                                                                                                                      sat_sb767 [Occ=Once]
                                                                                                                                        :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                      [LclId] =
                                                                                                                                          CCCS :! [sat_sb766
                                                                                                                                                   w1_sb75Z];
                                                                                                                                    } in 
                                                                                                                                      $wunpackRB_sb75Y
                                                                                                                                          sat_sb767
                                                                                                                                          sat_sb768
                                                                                                                                          ipv4_sb764;
                                                                                                                              };
                                                                                                                        };
                                                                                                                    1# ->
                                                                                                                        $j_sb75R
                                                                                                                            w2_sb761
                                                                                                                            w1_sb75Z;
                                                                                                                  };
                                                                                                        } in 
                                                                                                          $wunpackRB_sb75Y
                                                                                                              ipv3_sb75O
                                                                                                              sat_sb769
                                                                                                              ipv2_sb75N;
                                                                                                };
                                                                                            1# ->
                                                                                                let {
                                                                                                  sat_sb76a [Occ=Once]
                                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                                         GHC.IO.Buffer.CharBufElem
                                                                                                  [LclId] =
                                                                                                      CCCS GHC.IO.Buffer.Buffer! [ww_sb75G
                                                                                                                                  ww1_sb75H
                                                                                                                                  ww2_sb75I
                                                                                                                                  ww3_sb75J
                                                                                                                                  0#
                                                                                                                                  0#];
                                                                                                } in 
                                                                                                  case
                                                                                                      writeMutVar# [dt2_sb75k
                                                                                                                    sat_sb76a
                                                                                                                    ipv2_sb75N]
                                                                                                  of
                                                                                                  s2#_sb76b
                                                                                                  { __DEFAULT ->
                                                                                                        let {
                                                                                                          sat_sb76c [Occ=Once]
                                                                                                            :: (GHC.IO.Handle.Types.Handle__,
                                                                                                                [GHC.Types.Char])
                                                                                                          [LclId] =
                                                                                                              CCCS (,)! [wild_sb75b
                                                                                                                         ipv3_sb75O];
                                                                                                        } in 
                                                                                                          (#,#) [s2#_sb76b
                                                                                                                 sat_sb76c];
                                                                                                  };
                                                                                          };
                                                                                      GHC.IO.Handle.Types.CRLF ->
                                                                                          case
                                                                                              $wunpack_nl_rb6WF
                                                                                                  ww_sb75G
                                                                                                  ww1_sb75H
                                                                                                  ww4_sb75K
                                                                                                  ww5_sb75L
                                                                                                  ipv3_sb75O
                                                                                                  ipv2_sb75N
                                                                                          of
                                                                                          { (#,#) ipv4_sb76e [Occ=Once]
                                                                                                  ipv5_sb76f [Occ=Once!] ->
                                                                                                case
                                                                                                    ipv5_sb76f
                                                                                                of
                                                                                                { (,) s2_sb76h [Occ=Once]
                                                                                                      r_sb76i [Occ=Once!] ->
                                                                                                      let {
                                                                                                        sat_sb76m [Occ=Once]
                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                                        [LclId] =
                                                                                                            [ww_sb75G
                                                                                                             ww1_sb75H
                                                                                                             ww2_sb75I
                                                                                                             ww3_sb75J
                                                                                                             ww5_sb75L
                                                                                                             r_sb76i] \u []
                                                                                                                case
                                                                                                                    r_sb76i
                                                                                                                of
                                                                                                                { GHC.Types.I# x_sb76k ->
                                                                                                                      case
                                                                                                                          ==# [x_sb76k
                                                                                                                               ww5_sb75L]
                                                                                                                      of
                                                                                                                      { __DEFAULT ->
                                                                                                                            GHC.IO.Buffer.Buffer [ww_sb75G
                                                                                                                                                  ww1_sb75H
                                                                                                                                                  ww2_sb75I
                                                                                                                                                  ww3_sb75J
                                                                                                                                                  x_sb76k
                                                                                                                                                  ww5_sb75L];
                                                                                                                        1# ->
                                                                                                                            GHC.IO.Buffer.Buffer [ww_sb75G
                                                                                                                                                  ww1_sb75H
                                                                                                                                                  ww2_sb75I
                                                                                                                                                  ww3_sb75J
                                                                                                                                                  0#
                                                                                                                                                  0#];
                                                                                                                      };
                                                                                                                };
                                                                                                      } in 
                                                                                                        case
                                                                                                            writeMutVar# [dt2_sb75k
                                                                                                                          sat_sb76m
                                                                                                                          ipv4_sb76e]
                                                                                                        of
                                                                                                        s2#_sb76n
                                                                                                        { __DEFAULT ->
                                                                                                              let {
                                                                                                                sat_sb76o [Occ=Once]
                                                                                                                  :: (GHC.IO.Handle.Types.Handle__,
                                                                                                                      [GHC.Types.Char])
                                                                                                                [LclId] =
                                                                                                                    CCCS (,)! [wild_sb75b
                                                                                                                               s2_sb76h];
                                                                                                              } in 
                                                                                                                (#,#) [s2#_sb76n
                                                                                                                       sat_sb76o];
                                                                                                        };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                    } in 
                                                                      case
                                                                          -# [dt8_sb75D dt7_sb75C]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            $w$j_sb75E
                                                                                s1_sb75w
                                                                                dt4_sb75y
                                                                                dt5_sb75z
                                                                                ds_sb75A
                                                                                dt6_sb75B
                                                                                dt7_sb75C
                                                                                dt8_sb75D;
                                                                        0# ->
                                                                            case
                                                                                GHC.IO.Handle.Internals.hLookAhead_2
                                                                                    wild_sb75b
                                                                                    wild2_sb75x
                                                                                    s1_sb75w
                                                                            of
                                                                            { (#,#) ipv2_sb76r [Occ=Once]
                                                                                    ipv3_sb76s [Occ=Once!] ->
                                                                                  case
                                                                                      ipv3_sb76s
                                                                                  of
                                                                                  { GHC.IO.Buffer.Buffer ww1_sb76u [Occ=Once]
                                                                                                         ww2_sb76v [Occ=Once]
                                                                                                         ww3_sb76w [Occ=Once]
                                                                                                         ww4_sb76x [Occ=Once]
                                                                                                         ww5_sb76y [Occ=Once]
                                                                                                         ww6_sb76z [Occ=Once] ->
                                                                                        $w$j_sb75E
                                                                                            ipv2_sb76r
                                                                                            ww1_sb76u
                                                                                            ww2_sb76v
                                                                                            ww3_sb76w
                                                                                            ww4_sb76x
                                                                                            ww5_sb76y
                                                                                            ww6_sb76z;
                                                                                  };
                                                                            };
                                                                        1# ->
                                                                            case ds7_sb75p of {
                                                                              GHC.IO.Handle.Types.LF ->
                                                                                  $w$j_sb75E
                                                                                      s1_sb75w
                                                                                      dt4_sb75y
                                                                                      dt5_sb75z
                                                                                      ds_sb75A
                                                                                      dt6_sb75B
                                                                                      dt7_sb75C
                                                                                      dt8_sb75D;
                                                                              GHC.IO.Handle.Types.CRLF ->
                                                                                  case
                                                                                      readWideCharOffAddr# [dt4_sb75y
                                                                                                            dt7_sb75C
                                                                                                            s1_sb75w]
                                                                                  of
                                                                                  { (#,#) ipv2_sb76C [Occ=Once]
                                                                                          ipv3_sb76D [Occ=Once!] ->
                                                                                        case
                                                                                            touch# [dt5_sb75z
                                                                                                    ipv2_sb76C]
                                                                                        of
                                                                                        s'1_sb76E
                                                                                        { __DEFAULT ->
                                                                                              case
                                                                                                  ipv3_sb76D
                                                                                              of
                                                                                              { __DEFAULT ->
                                                                                                    $w$j_sb75E
                                                                                                        s'1_sb76E
                                                                                                        dt4_sb75y
                                                                                                        dt5_sb75z
                                                                                                        ds_sb75A
                                                                                                        dt6_sb75B
                                                                                                        dt7_sb75C
                                                                                                        dt8_sb75D;
                                                                                                '\r'# ->
                                                                                                    case
                                                                                                        writeWideCharOffAddr# [dt4_sb75y
                                                                                                                               0#
                                                                                                                               '\r'#
                                                                                                                               s'1_sb76E]
                                                                                                    of
                                                                                                    s2_sb76G
                                                                                                    { __DEFAULT ->
                                                                                                          case
                                                                                                              touch# [dt5_sb75z
                                                                                                                      s2_sb76G]
                                                                                                          of
                                                                                                          s'2_sb76H
                                                                                                          { __DEFAULT ->
                                                                                                                let {
                                                                                                                  sat_sb76I [Occ=Once]
                                                                                                                    :: GHC.IO.Buffer.CharBuffer
                                                                                                                  [LclId] =
                                                                                                                      CCCS GHC.IO.Buffer.Buffer! [dt4_sb75y
                                                                                                                                                  dt5_sb75z
                                                                                                                                                  ds_sb75A
                                                                                                                                                  dt6_sb75B
                                                                                                                                                  0#
                                                                                                                                                  1#];
                                                                                                                } in 
                                                                                                                  case
                                                                                                                      GHC.IO.Handle.Internals.hLookAhead_2
                                                                                                                          wild_sb75b
                                                                                                                          sat_sb76I
                                                                                                                          s'2_sb76H
                                                                                                                  of
                                                                                                                  { (#,#) ipv4_sb76K [Occ=Once]
                                                                                                                          ipv5_sb76L [Occ=Once!] ->
                                                                                                                        case
                                                                                                                            ipv5_sb76L
                                                                                                                        of
                                                                                                                        { GHC.IO.Buffer.Buffer ww1_sb76N [Occ=Once]
                                                                                                                                               ww2_sb76O [Occ=Once]
                                                                                                                                               ww3_sb76P [Occ=Once]
                                                                                                                                               ww4_sb76Q [Occ=Once]
                                                                                                                                               ww5_sb76R [Occ=Once]
                                                                                                                                               ww6_sb76S [Occ=Once] ->
                                                                                                                              $w$j_sb75E
                                                                                                                                  ipv4_sb76K
                                                                                                                                  ww1_sb76N
                                                                                                                                  ww2_sb76O
                                                                                                                                  ww3_sb76P
                                                                                                                                  ww4_sb76Q
                                                                                                                                  ww5_sb76R
                                                                                                                                  ww6_sb76S;
                                                                                                                        };
                                                                                                                  };
                                                                                                          };
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                      };
                                                              };
                                                    } in  catch# [sat_sb76T sat_sb77p ipv_sb75u];
                                              };
                                        };
                                  };
                        } in 
                          case handle_sb754 of wild_sb77q {
                            GHC.IO.Handle.Types.FileHandle _ [Occ=Dead] dt_sb77s [Occ=Once] ->
                                GHC.IO.Handle.Internals.$wwithHandle'
                                    GHC.IO.Handle.Text.hGetContents3
                                    wild_sb77q
                                    dt_sb77s
                                    act_sb758
                                    s'_sb757;
                            GHC.IO.Handle.Types.DuplexHandle _ [Occ=Dead]
                                                             dt_sb77u [Occ=Once]
                                                             _ [Occ=Dead] ->
                                GHC.IO.Handle.Internals.$wwithHandle'
                                    GHC.IO.Handle.Text.hGetContents3
                                    wild_sb77q
                                    dt_sb77u
                                    act_sb758
                                    s'_sb757;
                          };
                  };
        } in  GHC.IO.Unsafe.unsafeDupableInterleaveIO sat_sb77w eta_sb755;

GHC.IO.Handle.Text.hGetContents1
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [handle_sb77x eta_sb77y]
        let {
          sat_sb77X [Occ=Once]
            :: GHC.IO.Handle.Types.Handle__
               -> GHC.Types.IO (GHC.IO.Handle.Types.Handle__, GHC.Base.String)
          [LclId] =
              [handle_sb77x] \r [handle__sb77z s_sb77A]
                  case GHC.IO.Handle.Text.hGetContents2 handle_sb77x s_sb77A of {
                    (#,#) ipv_sb77C [Occ=Once] ipv1_sb77D [Occ=Once] ->
                        let {
                          sat_sb77V [Occ=Once] :: GHC.IO.Handle.Types.Handle__
                          [LclId] =
                              [handle__sb77z] \u []
                                  case handle__sb77z of {
                                    GHC.IO.Handle.Types.Handle__ ds_sb77F [Occ=Once]
                                                                 ds2_sb77G [Occ=Once]
                                                                 ds3_sb77H [Occ=Once]
                                                                 ds4_sb77I [Occ=Once]
                                                                 _ [Occ=Dead]
                                                                 dt_sb77K [Occ=Once]
                                                                 ds6_sb77L [Occ=Once]
                                                                 dt1_sb77M [Occ=Once]
                                                                 dt2_sb77N [Occ=Once]
                                                                 dt3_sb77O [Occ=Once]
                                                                 ds7_sb77P [Occ=Once]
                                                                 ds8_sb77Q [Occ=Once]
                                                                 ds9_sb77R [Occ=Once]
                                                                 ds10_sb77S [Occ=Once]
                                                                 ds11_sb77T [Occ=Once]
                                                                 ds12_sb77U [Occ=Once] ->
                                        GHC.IO.Handle.Types.Handle__ [ds_sb77F
                                                                      ds2_sb77G
                                                                      ds3_sb77H
                                                                      ds4_sb77I
                                                                      GHC.IO.Handle.Types.SemiClosedHandle
                                                                      dt_sb77K
                                                                      ds6_sb77L
                                                                      dt1_sb77M
                                                                      dt2_sb77N
                                                                      dt3_sb77O
                                                                      ds7_sb77P
                                                                      ds8_sb77Q
                                                                      ds9_sb77R
                                                                      ds10_sb77S
                                                                      ds11_sb77T
                                                                      ds12_sb77U];
                                  }; } in
                        let {
                          sat_sb77W [Occ=Once]
                            :: (GHC.IO.Handle.Types.Handle__, GHC.Base.String)
                          [LclId] =
                              CCCS (,)! [sat_sb77V ipv1_sb77D];
                        } in  (#,#) [ipv_sb77C sat_sb77W];
                  };
        } in 
          GHC.IO.Handle.Internals.wantReadableHandle1
              GHC.IO.Handle.Text.hGetContents3 handle_sb77x sat_sb77X eta_sb77y;

GHC.IO.Handle.Text.hGetContents
  :: GHC.IO.Handle.Types.Handle -> GHC.Types.IO GHC.Base.String
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        GHC.IO.Handle.Text.hGetContents1 eta_B2 eta_B1;

go_rb6WP :: [[GHC.Types.Char]] -> [GHC.Types.Char]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    sat-only [] \r [ds_sb77Y]
        case ds_sb77Y of {
          [] -> [] [];
          : y_sb780 [Occ=Once] ys_sb781 [Occ=Once] ->
              let {
                sat_sb782 [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                [LclId] =
                    [ys_sb781] \s [] go_rb6WP ys_sb781;
              } in  GHC.Base.++ y_sb780 sat_sb782;
        };

go1_rb6WQ :: [[GHC.Types.Char]] -> [GHC.Types.Char]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    sat-only [] \r [ds_sb783]
        case ds_sb783 of {
          [] -> [] [];
          : y_sb785 [Occ=Once] ys_sb786 [Occ=Once] ->
              let {
                sat_sb787 [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                [LclId] =
                    [ys_sb786] \s [] go1_rb6WQ ys_sb786;
              } in  GHC.Base.++ y_sb785 sat_sb787;
        };

GHC.IO.Handle.Text.$whGetLineBufferedLoop [InlPrag=NOUSERINLINE[0],
                                           Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> [GHC.Base.String]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=9,
 Str=<S,1*U><L,U><L,U><L,U><L,U><S,U><S,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb788
           ww_sb789
           ww1_sb78a
           ww2_sb78b
           ww3_sb78c
           ww4_sb78d
           ww5_sb78e
           w1_sb78f
           w2_sb78g]
        case w_sb788 of wild_sb78h {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt2_sb78q [Occ=Once*]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       ds6_sb78v
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              let {
                sat_sb7aG [Occ=Once] :: GHC.IO.Buffer.RawCharBuffer
                [LclId] =
                    CCCS GHC.ForeignPtr.ForeignPtr! [ww_sb789 ww1_sb78a];
              } in 
                let-no-escape {
                  $w$j_sb78y [InlPrag=NOUSERINLINE[0],
                              Dmd=<C(C(C(S))),C(C1(C1(U(U,U))))>]
                    :: GHC.Prim.State# GHC.Prim.RealWorld
                       -> GHC.Types.Bool
                       -> GHC.Prim.Int#
                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                  [LclId[JoinId(3)], Arity=3, Str=<S,U><L,U><S,U>, Unf=OtherCon []] =
                      sat-only [ww_sb789
                                ww1_sb78a
                                ww2_sb78b
                                ww3_sb78c
                                ww4_sb78d
                                ww5_sb78e
                                w1_sb78f
                                wild_sb78h
                                dt2_sb78q
                                ds6_sb78v] \r [w3_sb78z ww6_sb78A ww7_sb78B]
                          let-no-escape {
                            $w$j1_sb78C [InlPrag=NOUSERINLINE[0],
                                         Occ=Once*!T[3],
                                         Dmd=<L,C(C1(C1(U(U,U))))>]
                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                 -> [GHC.Types.Char]
                                 -> GHC.Types.Int
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                            [LclId[JoinId(3)],
                             Arity=3,
                             Str=<S,U><L,U><L,1*U(U)>,
                             Unf=OtherCon []] =
                                sat-only [ww_sb789
                                          ww1_sb78a
                                          ww2_sb78b
                                          ww3_sb78c
                                          ww5_sb78e
                                          w1_sb78f
                                          wild_sb78h
                                          dt2_sb78q
                                          ds6_sb78v
                                          ww6_sb78A
                                          ww7_sb78B] \r [w4_sb78D ww8_sb78E ww9_sb78F]
                                    case ww6_sb78A of {
                                      GHC.Types.False ->
                                          let {
                                            buf1_sb78H [Dmd=<L,U(U,U,U,U,U,U)>]
                                              :: GHC.IO.Buffer.Buffer GHC.Types.Char
                                            [LclId] =
                                                [ww_sb789
                                                 ww1_sb78a
                                                 ww2_sb78b
                                                 ww3_sb78c
                                                 ww5_sb78e
                                                 ww9_sb78F] \u []
                                                    case ww9_sb78F of {
                                                      GHC.Types.I# x_sb78J ->
                                                          case ==# [x_sb78J ww5_sb78e] of {
                                                            __DEFAULT ->
                                                                GHC.IO.Buffer.Buffer [ww_sb789
                                                                                      ww1_sb78a
                                                                                      ww2_sb78b
                                                                                      ww3_sb78c
                                                                                      x_sb78J
                                                                                      ww5_sb78e];
                                                            1# ->
                                                                GHC.IO.Buffer.Buffer [ww_sb789
                                                                                      ww1_sb78a
                                                                                      ww2_sb78b
                                                                                      ww3_sb78c
                                                                                      0#
                                                                                      0#];
                                                          };
                                                    }; } in
                                          let {
                                            sat_sb79e [Occ=Once]
                                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Base.Maybe GHC.IO.Buffer.CharBuffer #)
                                            [LclId] =
                                                [wild_sb78h ds6_sb78v buf1_sb78H] \r [s_sb78L]
                                                    case buf1_sb78H of wild2_sb78M {
                                                      GHC.IO.Buffer.Buffer dt4_sb78N
                                                                           dt5_sb78O
                                                                           ds9_sb78P [Occ=Once]
                                                                           dt6_sb78Q [Occ=Once]
                                                                           dt7_sb78R
                                                                           dt8_sb78S [Occ=Once] ->
                                                          case -# [dt8_sb78S dt7_sb78R] of {
                                                            __DEFAULT ->
                                                                let {
                                                                  sat_sb78U [Occ=Once]
                                                                    :: GHC.Base.Maybe
                                                                         GHC.IO.Buffer.CharBuffer
                                                                  [LclId] =
                                                                      CCCS GHC.Base.Just! [wild2_sb78M];
                                                                } in  (#,#) [s_sb78L sat_sb78U];
                                                            0# ->
                                                                case
                                                                    GHC.IO.Handle.Internals.hLookAhead_2
                                                                        wild_sb78h
                                                                        wild2_sb78M
                                                                        s_sb78L
                                                                of
                                                                { (#,#) ipv_sb78W [Occ=Once]
                                                                        ipv1_sb78X [Occ=Once] ->
                                                                      let {
                                                                        sat_sb78Y [Occ=Once]
                                                                          :: GHC.Base.Maybe
                                                                               GHC.IO.Buffer.CharBuffer
                                                                        [LclId] =
                                                                            CCCS GHC.Base.Just! [ipv1_sb78X];
                                                                      } in 
                                                                        (#,#) [ipv_sb78W sat_sb78Y];
                                                                };
                                                            1# ->
                                                                case ds6_sb78v of {
                                                                  GHC.IO.Handle.Types.LF ->
                                                                      let {
                                                                        sat_sb790 [Occ=Once]
                                                                          :: GHC.Base.Maybe
                                                                               GHC.IO.Buffer.CharBuffer
                                                                        [LclId] =
                                                                            CCCS GHC.Base.Just! [wild2_sb78M];
                                                                      } in 
                                                                        (#,#) [s_sb78L sat_sb790];
                                                                  GHC.IO.Handle.Types.CRLF ->
                                                                      case
                                                                          readWideCharOffAddr# [dt4_sb78N
                                                                                                dt7_sb78R
                                                                                                s_sb78L]
                                                                      of
                                                                      { (#,#) ipv_sb792 [Occ=Once]
                                                                              ipv1_sb793 [Occ=Once!] ->
                                                                            case
                                                                                touch# [dt5_sb78O
                                                                                        ipv_sb792]
                                                                            of
                                                                            s'_sb794
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      ipv1_sb793
                                                                                  of
                                                                                  { __DEFAULT ->
                                                                                        let {
                                                                                          sat_sb796 [Occ=Once]
                                                                                            :: GHC.Base.Maybe
                                                                                                 GHC.IO.Buffer.CharBuffer
                                                                                          [LclId] =
                                                                                              CCCS GHC.Base.Just! [wild2_sb78M];
                                                                                        } in 
                                                                                          (#,#) [s'_sb794
                                                                                                 sat_sb796];
                                                                                    '\r'# ->
                                                                                        case
                                                                                            writeWideCharOffAddr# [dt4_sb78N
                                                                                                                   0#
                                                                                                                   '\r'#
                                                                                                                   s'_sb794]
                                                                                        of
                                                                                        s2_sb797
                                                                                        { __DEFAULT ->
                                                                                              case
                                                                                                  touch# [dt5_sb78O
                                                                                                          s2_sb797]
                                                                                              of
                                                                                              s'1_sb798
                                                                                              { __DEFAULT ->
                                                                                                    let {
                                                                                                      sat_sb799 [Occ=Once]
                                                                                                        :: GHC.IO.Buffer.CharBuffer
                                                                                                      [LclId] =
                                                                                                          CCCS GHC.IO.Buffer.Buffer! [dt4_sb78N
                                                                                                                                      dt5_sb78O
                                                                                                                                      ds9_sb78P
                                                                                                                                      dt6_sb78Q
                                                                                                                                      0#
                                                                                                                                      1#];
                                                                                                    } in 
                                                                                                      case
                                                                                                          GHC.IO.Handle.Internals.hLookAhead_2
                                                                                                              wild_sb78h
                                                                                                              sat_sb799
                                                                                                              s'1_sb798
                                                                                                      of
                                                                                                      { (#,#) ipv2_sb79b [Occ=Once]
                                                                                                              ipv3_sb79c [Occ=Once] ->
                                                                                                            let {
                                                                                                              sat_sb79d [Occ=Once]
                                                                                                                :: GHC.Base.Maybe
                                                                                                                     GHC.IO.Buffer.CharBuffer
                                                                                                              [LclId] =
                                                                                                                  CCCS GHC.Base.Just! [ipv3_sb79c];
                                                                                                            } in 
                                                                                                              (#,#) [ipv2_sb79b
                                                                                                                     sat_sb79d];
                                                                                                      };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                      };
                                                                };
                                                          };
                                                    };
                                          } in 
                                            case
                                                catch# [sat_sb79e
                                                        GHC.IO.Handle.Text.hGetChar3
                                                        w4_sb78D]
                                            of
                                            { (#,#) ipv_sb79g [Occ=Once*] ipv1_sb79h [Occ=Once!] ->
                                                  case ipv1_sb79h of {
                                                    GHC.Base.Nothing ->
                                                        let {
                                                          sat_sb79q [Occ=Once]
                                                            :: GHC.IO.Buffer.Buffer
                                                                 GHC.IO.Buffer.CharBufElem
                                                          [LclId] =
                                                              [buf1_sb78H] \u []
                                                                  case buf1_sb78H of {
                                                                    GHC.IO.Buffer.Buffer dt4_sb79k [Occ=Once]
                                                                                         dt5_sb79l [Occ=Once]
                                                                                         ds10_sb79m [Occ=Once]
                                                                                         dt6_sb79n [Occ=Once]
                                                                                         _ [Occ=Dead]
                                                                                         _ [Occ=Dead] ->
                                                                        GHC.IO.Buffer.Buffer [dt4_sb79k
                                                                                              dt5_sb79l
                                                                                              ds10_sb79m
                                                                                              dt6_sb79n
                                                                                              0#
                                                                                              0#];
                                                                  };
                                                        } in 
                                                          case
                                                              writeMutVar# [dt2_sb78q
                                                                            sat_sb79q
                                                                            ipv_sb79g]
                                                          of
                                                          s2#_sb79r
                                                          { __DEFAULT ->
                                                                let {
                                                                  sat_sb79B [Occ=Once]
                                                                    :: [[GHC.Types.Char]]
                                                                  [LclId] =
                                                                      CCCS :! [ww8_sb78E
                                                                               w1_sb78f]; } in
                                                                let {
                                                                  sat_sb79A [Occ=Once]
                                                                    :: [GHC.Types.Char]
                                                                  [LclId] =
                                                                      [buf1_sb78H] \u []
                                                                          case buf1_sb78H of {
                                                                            GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                                 _ [Occ=Dead]
                                                                                                 _ [Occ=Dead]
                                                                                                 _ [Occ=Dead]
                                                                                                 dt7_sb79x [Occ=Once]
                                                                                                 dt8_sb79y [Occ=Once] ->
                                                                                case
                                                                                    ==# [dt7_sb79x
                                                                                         dt8_sb79y]
                                                                                of
                                                                                { __DEFAULT ->
                                                                                      lvl4_rb6WH;
                                                                                  1# -> [] [];
                                                                                };
                                                                          }; } in
                                                                let {
                                                                  sat_sb79C [Occ=Once]
                                                                    :: [[GHC.Types.Char]]
                                                                  [LclId] =
                                                                      CCCS :! [sat_sb79A sat_sb79B];
                                                                } in 
                                                                  case
                                                                      GHC.List.reverse1
                                                                          sat_sb79C GHC.Types.[]
                                                                  of
                                                                  sat_sb79D
                                                                  { __DEFAULT ->
                                                                        case
                                                                            go1_rb6WQ sat_sb79D
                                                                        of
                                                                        wild3_sb79E
                                                                        { [] ->
                                                                              GHC.IO.Handle.Internals.ioe_EOF1
                                                                                  s2#_sb79r;
                                                                          : _ [Occ=Dead]
                                                                            _ [Occ=Dead] ->
                                                                              (#,#) [s2#_sb79r
                                                                                     wild3_sb79E];
                                                                        };
                                                                  };
                                                          };
                                                    GHC.Base.Just new_buf_sb79H [Occ=Once!] ->
                                                        case new_buf_sb79H of {
                                                          GHC.IO.Buffer.Buffer ww11_sb79J [Occ=Once]
                                                                               ww12_sb79K [Occ=Once]
                                                                               ww13_sb79L [Occ=Once]
                                                                               ww14_sb79M [Occ=Once]
                                                                               ww15_sb79N [Occ=Once]
                                                                               ww16_sb79O [Occ=Once] ->
                                                              let {
                                                                sat_sb79P [Occ=Once]
                                                                  :: [GHC.Base.String]
                                                                [LclId] =
                                                                    CCCS :! [ww8_sb78E w1_sb78f];
                                                              } in 
                                                                GHC.IO.Handle.Text.$whGetLineBufferedLoop
                                                                    wild_sb78h
                                                                    ww11_sb79J
                                                                    ww12_sb79K
                                                                    ww13_sb79L
                                                                    ww14_sb79M
                                                                    ww15_sb79N
                                                                    ww16_sb79O
                                                                    sat_sb79P
                                                                    ipv_sb79g;
                                                        };
                                                  };
                                            };
                                      GHC.Types.True ->
                                          let {
                                            sat_sb79S [Occ=Once]
                                              :: GHC.IO.Buffer.Buffer GHC.IO.Buffer.CharBufElem
                                            [LclId] =
                                                [ww_sb789
                                                 ww1_sb78a
                                                 ww2_sb78b
                                                 ww3_sb78c
                                                 ww5_sb78e
                                                 ww7_sb78B] \u []
                                                    case +# [ww7_sb78B 1#] of x_sb79Q [Dmd=<S,U>] {
                                                      __DEFAULT ->
                                                          case ==# [x_sb79Q ww5_sb78e] of {
                                                            __DEFAULT ->
                                                                GHC.IO.Buffer.Buffer [ww_sb789
                                                                                      ww1_sb78a
                                                                                      ww2_sb78b
                                                                                      ww3_sb78c
                                                                                      x_sb79Q
                                                                                      ww5_sb78e];
                                                            1# ->
                                                                GHC.IO.Buffer.Buffer [ww_sb789
                                                                                      ww1_sb78a
                                                                                      ww2_sb78b
                                                                                      ww3_sb78c
                                                                                      0#
                                                                                      0#];
                                                          };
                                                    };
                                          } in 
                                            case
                                                writeMutVar# [dt2_sb78q sat_sb79S w4_sb78D]
                                            of
                                            s2#_sb79T
                                            { __DEFAULT ->
                                                  let {
                                                    sat_sb79W [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId] =
                                                        [w1_sb78f ww8_sb78E] \u []
                                                            let {
                                                              sat_sb79U [Occ=Once]
                                                                :: [[GHC.Types.Char]]
                                                              [LclId] =
                                                                  CCCS :! [ww8_sb78E w1_sb78f];
                                                            } in 
                                                              case
                                                                  GHC.List.reverse1
                                                                      sat_sb79U GHC.Types.[]
                                                              of
                                                              sat_sb79V
                                                              { __DEFAULT -> go_rb6WP sat_sb79V;
                                                              };
                                                  } in  (#,#) [s2#_sb79T sat_sb79W];
                                            };
                                    };
                          } in 
                            case ds6_sb78v of {
                              GHC.IO.Handle.Types.LF ->
                                  case ==# [ww4_sb78d ww7_sb78B] of {
                                    __DEFAULT ->
                                        case -# [ww7_sb78B 1#] of sat_sb7af {
                                          __DEFAULT ->
                                              let-no-escape {
                                                $j_sb79Z [Occ=OnceL!T[2],
                                                          Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                                  :: GHC.Prim.State# GHC.Prim.RealWorld
                                                     -> [GHC.IO.Buffer.CharBufElem]
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                           GHC.Base.String #)
                                                [LclId[JoinId(2)],
                                                 Arity=2,
                                                 Str=<S,U><L,U>,
                                                 Unf=OtherCon []] =
                                                    sat-only [ww1_sb78a
                                                              ww7_sb78B
                                                              $w$j1_sb78C] \r [ipv_sb7a0 ipv1_sb7a1]
                                                        case
                                                            touch# [ww1_sb78a ipv_sb7a0]
                                                        of
                                                        s'_sb7a2
                                                        { __DEFAULT ->
                                                              let {
                                                                sat_sb7a3 [Occ=Once]
                                                                  :: GHC.Types.Int
                                                                [LclId] =
                                                                    CCCS GHC.Types.I#! [ww7_sb78B];
                                                              } in 
                                                                $w$j1_sb78C
                                                                    s'_sb7a2 ipv1_sb7a1 sat_sb7a3;
                                                        };
                                              } in 
                                                let-no-escape {
                                                  $wunpackRB_sb7a4 [InlPrag=NOUSERINLINE[0],
                                                                    Occ=LoopBreakerT[3]]
                                                    :: [GHC.IO.Buffer.CharBufElem]
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Base.String #)
                                                  [LclId[JoinId(3)],
                                                   Arity=3,
                                                   Str=<L,U><S,U><S,U>,
                                                   Unf=OtherCon []] =
                                                      sat-only [ww_sb789
                                                                ww4_sb78d
                                                                $j_sb79Z
                                                                $wunpackRB_sb7a4] \r [w4_sb7a5
                                                                                      ww8_sb7a6
                                                                                      w5_sb7a7]
                                                          case <# [ww8_sb7a6 ww4_sb78d] of {
                                                            __DEFAULT ->
                                                                case
                                                                    readWideCharOffAddr# [ww_sb789
                                                                                          ww8_sb7a6
                                                                                          w5_sb7a7]
                                                                of
                                                                { (#,#) ipv_sb7aa [Occ=Once]
                                                                        ipv1_sb7ab [Occ=Once] ->
                                                                      case
                                                                          -# [ww8_sb7a6 1#]
                                                                      of
                                                                      sat_sb7ae
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_sb7ac [Occ=Once]
                                                                                :: GHC.IO.Buffer.CharBufElem
                                                                              [LclId] =
                                                                                  CCCS GHC.Types.C#! [ipv1_sb7ab]; } in
                                                                            let {
                                                                              sat_sb7ad [Occ=Once]
                                                                                :: [GHC.IO.Buffer.CharBufElem]
                                                                              [LclId] =
                                                                                  CCCS :! [sat_sb7ac
                                                                                           w4_sb7a5];
                                                                            } in 
                                                                              $wunpackRB_sb7a4
                                                                                  sat_sb7ad
                                                                                  sat_sb7ae
                                                                                  ipv_sb7aa;
                                                                      };
                                                                };
                                                            1# -> $j_sb79Z w5_sb7a7 w4_sb7a5;
                                                          };
                                                } in 
                                                  $wunpackRB_sb7a4 GHC.Types.[] sat_sb7af w3_sb78z;
                                        };
                                    1# ->
                                        let {
                                          sat_sb7ag [Occ=Once] :: GHC.Types.Int
                                          [LclId] =
                                              CCCS GHC.Types.I#! [ww7_sb78B];
                                        } in  $w$j1_sb78C w3_sb78z GHC.Types.[] sat_sb7ag;
                                  };
                              GHC.IO.Handle.Types.CRLF ->
                                  case
                                      $wunpack_nl_rb6WF
                                          ww_sb789
                                          ww1_sb78a
                                          ww4_sb78d
                                          ww7_sb78B
                                          GHC.Types.[]
                                          w3_sb78z
                                  of
                                  { (#,#) ipv_sb7ai [Occ=Once] ipv1_sb7aj [Occ=Once!] ->
                                        case ipv1_sb7aj of {
                                          (,) ww9_sb7al [Occ=Once] ww10_sb7am [Occ=Once] ->
                                              $w$j1_sb78C ipv_sb7ai ww9_sb7al ww10_sb7am;
                                        };
                                  };
                            };
                } in 
                  let-no-escape {
                    exit_sb7an [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
                      :: GHC.Prim.Int#
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                    [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
                        sat-only [$w$j_sb78y] \r [ww6_sb7ao s'_sb7ap]
                            $w$j_sb78y s'_sb7ap GHC.Types.True ww6_sb7ao;
                  } in 
                    let-no-escape {
                      exit1_sb7aq [Occ=OnceL!T[1], Dmd=<L,C(U(U,U))>]
                        :: GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                      [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                          sat-only [ww5_sb78e $w$j_sb78y] \r [w3_sb7ar]
                              $w$j_sb78y w3_sb7ar GHC.Types.False ww5_sb78e;
                    } in 
                      let-no-escape {
                        $wloop_sb7as [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                          :: GHC.IO.Buffer.RawCharBuffer
                             -> GHC.Prim.Int#
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                        [LclId[JoinId(3)],
                         Arity=3,
                         Str=<L,1*U(U,U)><S,U><S,U>,
                         Unf=OtherCon []] =
                            sat-only [ww5_sb78e
                                      exit_sb7an
                                      exit1_sb7aq
                                      $wloop_sb7as] \r [w3_sb7at ww6_sb7au w4_sb7av]
                                case ==# [ww6_sb7au ww5_sb78e] of {
                                  __DEFAULT ->
                                      case w3_sb7at of wild1_sb7ax {
                                        GHC.ForeignPtr.ForeignPtr fo_sb7ay [Occ=Once]
                                                                  ds9_sb7az [Occ=Once] ->
                                            case
                                                readWideCharOffAddr# [fo_sb7ay ww6_sb7au w4_sb7av]
                                            of
                                            { (#,#) ipv_sb7aB [Occ=Once] ipv1_sb7aC [Occ=Once!] ->
                                                  case touch# [ds9_sb7az ipv_sb7aB] of s'_sb7aD {
                                                    __DEFAULT ->
                                                        case ipv1_sb7aC of {
                                                          __DEFAULT ->
                                                              case +# [ww6_sb7au 1#] of sat_sb7aF {
                                                                __DEFAULT ->
                                                                    $wloop_sb7as
                                                                        wild1_sb7ax
                                                                        sat_sb7aF
                                                                        s'_sb7aD;
                                                              };
                                                          '\n'# -> exit_sb7an ww6_sb7au s'_sb7aD;
                                                        };
                                                  };
                                            };
                                      };
                                  1# -> exit1_sb7aq w4_sb7av;
                                };
                      } in  $wloop_sb7as sat_sb7aG ww4_sb78d w2_sb78g;
        };

GHC.IO.Handle.Text.hGetLine3 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.IO.Buffer.CharBuffer
     -> [GHC.Base.String]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=4,
 Str=<S,1*U><S(SLLSSS),1*U(U,U,U,U,U,U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb7aH w1_sb7aI w2_sb7aJ w3_sb7aK]
        case w1_sb7aI of {
          GHC.IO.Buffer.Buffer ww1_sb7aM [Occ=Once]
                               ww2_sb7aN [Occ=Once]
                               ww3_sb7aO [Occ=Once]
                               ww4_sb7aP [Occ=Once]
                               ww5_sb7aQ [Occ=Once]
                               ww6_sb7aR [Occ=Once] ->
              GHC.IO.Handle.Text.$whGetLineBufferedLoop
                  w_sb7aH
                  ww1_sb7aM
                  ww2_sb7aN
                  ww3_sb7aO
                  ww4_sb7aP
                  ww5_sb7aQ
                  ww6_sb7aR
                  w2_sb7aJ
                  w3_sb7aK;
        };

GHC.IO.Handle.Text.hGetLine5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetLine"#;

GHC.IO.Handle.Text.hGetLine4 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hGetLine5;

GHC.IO.Handle.Text.hGetLine2
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [handle__sb7aS eta_sb7aT]
        case handle__sb7aS of wild_sb7aU {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt2_sb7b3 [Occ=Once]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case readMutVar# [dt2_sb7b3 eta_sb7aT] of {
                (#,#) ipv_sb7bc [Occ=Once] ipv1_sb7bd [Occ=Once!] ->
                    case ipv1_sb7bd of {
                      GHC.IO.Buffer.Buffer ww1_sb7bf [Occ=Once]
                                           ww2_sb7bg [Occ=Once]
                                           ww3_sb7bh [Occ=Once]
                                           ww4_sb7bi [Occ=Once]
                                           ww5_sb7bj [Occ=Once]
                                           ww6_sb7bk [Occ=Once] ->
                          GHC.IO.Handle.Text.$whGetLineBufferedLoop
                              wild_sb7aU
                              ww1_sb7bf
                              ww2_sb7bg
                              ww3_sb7bh
                              ww4_sb7bi
                              ww5_sb7bj
                              ww6_sb7bk
                              GHC.Types.[]
                              ipv_sb7bc;
                    };
              };
        };

GHC.IO.Handle.Text.hGetLine1
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<L,U>, Unf=OtherCon []] =
    [] \r [h_sb7bl eta_B1]
        GHC.IO.Handle.Internals.wantReadableHandle_1
            GHC.IO.Handle.Text.hGetLine4
            h_sb7bl
            GHC.IO.Handle.Text.hGetLine2
            eta_B1;

GHC.IO.Handle.Text.hGetLine
  :: GHC.IO.Handle.Types.Handle -> GHC.Types.IO GHC.Base.String
[GblId, Arity=2, Str=<L,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.IO.Handle.Text.hGetLine1 eta_B2 eta_B1;

lvl11_rb6WR :: Data.Typeable.Internal.TypeRep GHC.IO.FD.FD
[GblId] =
    [] \u []
        case
            Data.Typeable.Internal.$wmkTrCon
                10838815552519039062##
                15546290101957756376##
                GHC.IO.FD.$trModule
                GHC.IO.FD.$tcFD1
                0#
                GHC.Types.krep$*
                GHC.Types.[]
        of
        { (#,,,,#) ww8_sb7bn [Occ=Once]
                   ww9_sb7bo [Occ=Once]
                   ww10_sb7bp [Occ=Once]
                   ww11_sb7bq [Occ=Once]
                   ww12_sb7br [Occ=Once] ->
              Data.Typeable.Internal.TrTyCon [ww8_sb7bn
                                              ww9_sb7bo
                                              ww10_sb7bp
                                              ww11_sb7bq
                                              ww12_sb7br];
        };

GHC.IO.Handle.Text.hGetBufNonBlocking2
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<S,1*U><S(SLLLSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [h__sb7bs
           buf_sb7bt
           ptr_sb7bu
           so_far_sb7bv
           count_sb7bw
           eta_sb7bx]
        case h__sb7bs of wild_sb7by {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt_sb7bE [Occ=Once*]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case buf_sb7bt of {
                GHC.IO.Buffer.Buffer dt4_sb7bQ
                                     dt5_sb7bR
                                     ds9_sb7bS [Occ=Once*]
                                     dt6_sb7bT
                                     dt7_sb7bU
                                     dt8_sb7bV ->
                    case count_sb7bw of {
                      GHC.Types.I# x_sb7bX ->
                          case -# [dt8_sb7bV dt7_sb7bU] of avail_sb7bY [Dmd=<S,U>] {
                            __DEFAULT ->
                                case <# [x_sb7bX avail_sb7bY] of {
                                  __DEFAULT ->
                                      case ptr_sb7bu of {
                                        GHC.Ptr.Ptr ds11_sb7c1 ->
                                            case int2Word# [avail_sb7bY] of sat_sb7c4 {
                                              __DEFAULT ->
                                                  case
                                                      plusAddr# [dt4_sb7bQ dt7_sb7bU]
                                                  of
                                                  sat_sb7c3
                                                  { __DEFAULT ->
                                                        case
                                                            __pkg_ccall base-4.11.0.0 [ds11_sb7c1
                                                                                       sat_sb7c3
                                                                                       sat_sb7c4
                                                                                       eta_sb7bx]
                                                        of
                                                        { (#,#) ds12_sb7c6 [Occ=Once]
                                                                _ [Occ=Dead] ->
                                                              case
                                                                  touch# [dt5_sb7bR ds12_sb7c6]
                                                              of
                                                              s'_sb7c8
                                                              { __DEFAULT ->
                                                                    let {
                                                                      sat_sb7c9 [Occ=Once]
                                                                        :: GHC.IO.Buffer.Buffer
                                                                             GHC.Word.Word8
                                                                      [LclId] =
                                                                          CCCS GHC.IO.Buffer.Buffer! [dt4_sb7bQ
                                                                                                      dt5_sb7bR
                                                                                                      ds9_sb7bS
                                                                                                      dt6_sb7bT
                                                                                                      0#
                                                                                                      0#];
                                                                    } in 
                                                                      case
                                                                          writeMutVar# [dt_sb7bE
                                                                                        sat_sb7c9
                                                                                        s'_sb7c8]
                                                                      of
                                                                      s2#_sb7ca
                                                                      { __DEFAULT ->
                                                                            case
                                                                                -# [x_sb7bX
                                                                                    avail_sb7bY]
                                                                            of
                                                                            wild4_sb7cb
                                                                            { __DEFAULT ->
                                                                                  let {
                                                                                    sat_sb7ch [Occ=Once,
                                                                                               Dmd=<L,U(U)>]
                                                                                      :: GHC.Types.Int
                                                                                    [LclId] =
                                                                                        [so_far_sb7bv
                                                                                         avail_sb7bY] \u []
                                                                                            case
                                                                                                so_far_sb7bv
                                                                                            of
                                                                                            { GHC.Types.I# x1_sb7cf [Occ=Once] ->
                                                                                                  case
                                                                                                      +# [x1_sb7cf
                                                                                                          avail_sb7bY]
                                                                                                  of
                                                                                                  sat_sb7cg
                                                                                                  { __DEFAULT ->
                                                                                                        GHC.Types.I# [sat_sb7cg];
                                                                                                  };
                                                                                            };
                                                                                  } in 
                                                                                    case
                                                                                        plusAddr# [ds11_sb7c1
                                                                                                   avail_sb7bY]
                                                                                    of
                                                                                    sat_sb7cc
                                                                                    { __DEFAULT ->
                                                                                          let {
                                                                                            sat_sb7cd [Occ=Once]
                                                                                              :: GHC.Ptr.Ptr
                                                                                                   GHC.Word.Word8
                                                                                            [LclId] =
                                                                                                CCCS GHC.Ptr.Ptr! [sat_sb7cc];
                                                                                          } in 
                                                                                            GHC.IO.Handle.Text.$wbufReadNBEmpty
                                                                                                wild_sb7by
                                                                                                dt6_sb7bT
                                                                                                sat_sb7cd
                                                                                                sat_sb7ch
                                                                                                wild4_sb7cb
                                                                                                s2#_sb7ca;
                                                                                    };
                                                                              0# ->
                                                                                  let {
                                                                                    sat_sb7cl [Occ=Once]
                                                                                      :: GHC.Types.Int
                                                                                    [LclId] =
                                                                                        [so_far_sb7bv
                                                                                         avail_sb7bY] \u []
                                                                                            case
                                                                                                so_far_sb7bv
                                                                                            of
                                                                                            { GHC.Types.I# x1_sb7cj [Occ=Once] ->
                                                                                                  case
                                                                                                      +# [x1_sb7cj
                                                                                                          avail_sb7bY]
                                                                                                  of
                                                                                                  sat_sb7ck
                                                                                                  { __DEFAULT ->
                                                                                                        GHC.Types.I# [sat_sb7ck];
                                                                                                  };
                                                                                            };
                                                                                  } in 
                                                                                    (#,#) [s2#_sb7ca
                                                                                           sat_sb7cl];
                                                                            };
                                                                      };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                  1# ->
                                      case ptr_sb7bu of {
                                        GHC.Ptr.Ptr ds11_sb7cn [Occ=Once] ->
                                            case int2Word# [x_sb7bX] of sat_sb7cq {
                                              __DEFAULT ->
                                                  case
                                                      plusAddr# [dt4_sb7bQ dt7_sb7bU]
                                                  of
                                                  sat_sb7cp
                                                  { __DEFAULT ->
                                                        case
                                                            __pkg_ccall base-4.11.0.0 [ds11_sb7cn
                                                                                       sat_sb7cp
                                                                                       sat_sb7cq
                                                                                       eta_sb7bx]
                                                        of
                                                        { (#,#) ds12_sb7cs [Occ=Once]
                                                                _ [Occ=Dead] ->
                                                              case
                                                                  touch# [dt5_sb7bR ds12_sb7cs]
                                                              of
                                                              s'_sb7cu
                                                              { __DEFAULT ->
                                                                    case
                                                                        +# [dt7_sb7bU x_sb7bX]
                                                                    of
                                                                    sat_sb7cv
                                                                    { __DEFAULT ->
                                                                          let {
                                                                            sat_sb7cw [Occ=Once]
                                                                              :: GHC.IO.Buffer.Buffer
                                                                                   GHC.Word.Word8
                                                                            [LclId] =
                                                                                CCCS GHC.IO.Buffer.Buffer! [dt4_sb7bQ
                                                                                                            dt5_sb7bR
                                                                                                            ds9_sb7bS
                                                                                                            dt6_sb7bT
                                                                                                            sat_sb7cv
                                                                                                            dt8_sb7bV];
                                                                          } in 
                                                                            case
                                                                                writeMutVar# [dt_sb7bE
                                                                                              sat_sb7cw
                                                                                              s'_sb7cu]
                                                                            of
                                                                            s2#_sb7cx
                                                                            { __DEFAULT ->
                                                                                  let {
                                                                                    sat_sb7cB [Occ=Once]
                                                                                      :: GHC.Types.Int
                                                                                    [LclId] =
                                                                                        [so_far_sb7bv
                                                                                         x_sb7bX] \u []
                                                                                            case
                                                                                                so_far_sb7bv
                                                                                            of
                                                                                            { GHC.Types.I# x1_sb7cz [Occ=Once] ->
                                                                                                  case
                                                                                                      +# [x1_sb7cz
                                                                                                          x_sb7bX]
                                                                                                  of
                                                                                                  sat_sb7cA
                                                                                                  { __DEFAULT ->
                                                                                                        GHC.Types.I# [sat_sb7cA];
                                                                                                  };
                                                                                            };
                                                                                  } in 
                                                                                    (#,#) [s2#_sb7cx
                                                                                           sat_sb7cB];
                                                                            };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };
GHC.IO.Handle.Text.$wbufReadNBEmpty [InlPrag=NOUSERINLINE[0],
                                     Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.Int#
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<S,1*U><S,U><L,1*U(U)><L,U(U)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb7cC ww_sb7cD w1_sb7cE w2_sb7cF ww1_sb7cG w3_sb7cH]
        case w_sb7cC of wild_sb7cI {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       $dBufferedIO_sb7cK [Occ=Once]
                                       $dTypeable_sb7cL [Occ=Once]
                                       ds_sb7cM [Occ=Once]
                                       _ [Occ=Dead]
                                       dt_sb7cO
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case ds_sb7cM of ww2_sb7cZ {
                GHC.IO.FD.FD ww3_sb7d0 [Occ=Once] ww4_sb7d1 [Occ=Once] ->
                    let-no-escape {
                      fail_sb7d2 [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                        :: GHC.Prim.Void#
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                      [LclId[JoinId(1)], Arity=1, Str=<L,A>, Unf=OtherCon []] =
                          sat-only [w1_sb7cE
                                    w2_sb7cF
                                    ww1_sb7cG
                                    w3_sb7cH
                                    wild_sb7cI
                                    $dBufferedIO_sb7cK
                                    dt_sb7cO
                                    ww2_sb7cZ] \r [ds9_sb7d3]
                              case readMutVar# [dt_sb7cO w3_sb7cH] of {
                                (#,#) ipv_sb7d5 [Occ=Once] ipv1_sb7d6 [Occ=Once] ->
                                    case
                                        GHC.IO.BufferedIO.fillReadBuffer0
                                            $dBufferedIO_sb7cK ww2_sb7cZ ipv1_sb7d6 ipv_sb7d5
                                    of
                                    { (#,#) ipv2_sb7d8 [Occ=Once*] ipv3_sb7d9 [Occ=Once!] ->
                                          case ipv3_sb7d9 of {
                                            (,) r_sb7db [Occ=Once!] buf'_sb7dc ->
                                                case r_sb7db of {
                                                  GHC.Base.Nothing -> (#,#) [ipv2_sb7d8 w2_sb7cF];
                                                  GHC.Base.Just ds12_sb7de [Occ=Once!] ->
                                                      case ds12_sb7de of wild3_sb7df {
                                                        GHC.Types.I# ds13_sb7dg [Occ=Once!] ->
                                                            case ds13_sb7dg of ds14_sb7dh {
                                                              __DEFAULT ->
                                                                  case
                                                                      writeMutVar# [dt_sb7cO
                                                                                    buf'_sb7dc
                                                                                    ipv2_sb7d8]
                                                                  of
                                                                  s2#_sb7di
                                                                  { __DEFAULT ->
                                                                        case
                                                                            <=# [ww1_sb7cG
                                                                                 ds14_sb7dh]
                                                                        of
                                                                        { __DEFAULT ->
                                                                              GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                  wild_sb7cI
                                                                                  buf'_sb7dc
                                                                                  w1_sb7cE
                                                                                  w2_sb7cF
                                                                                  wild3_sb7df
                                                                                  s2#_sb7di;
                                                                          1# ->
                                                                              let {
                                                                                sat_sb7dk [Occ=Once]
                                                                                  :: GHC.Types.Int
                                                                                [LclId] =
                                                                                    CCCS GHC.Types.I#! [ww1_sb7cG];
                                                                              } in 
                                                                                GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                    wild_sb7cI
                                                                                    buf'_sb7dc
                                                                                    w1_sb7cE
                                                                                    w2_sb7cF
                                                                                    sat_sb7dk
                                                                                    s2#_sb7di;
                                                                        };
                                                                  };
                                                              0# -> (#,#) [ipv2_sb7d8 w2_sb7cF];
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in 
                      case ># [ww1_sb7cG ww_sb7cD] of {
                        __DEFAULT -> fail_sb7d2 GHC.Prim.void#;
                        1# ->
                            case
                                Data.Typeable.Internal.sameTypeRep $dTypeable_sb7cL lvl11_rb6WR
                            of
                            { GHC.Types.False -> fail_sb7d2 GHC.Prim.void#;
                              GHC.Types.True ->
                                  case w1_sb7cE of {
                                    GHC.Ptr.Ptr ww6_sb7do [Occ=Once] ->
                                        case int2Word# [ww1_sb7cG] of sat_sb7dp {
                                          __DEFAULT ->
                                              case
                                                  GHC.IO.FD.$wreadRawBufferPtrNoBlock
                                                      GHC.IO.FD.$fBufferedIOFD8
                                                      ww3_sb7d0
                                                      ww4_sb7d1
                                                      ww6_sb7do
                                                      0#
                                                      sat_sb7dp
                                                      w3_sb7cH
                                              of
                                              { (#,#) ipv_sb7dr [Occ=Once*]
                                                      ipv1_sb7ds [Occ=Once!] ->
                                                    case ipv1_sb7ds of {
                                                      GHC.Types.I# ds10_sb7du [Occ=Once!] ->
                                                          case ds10_sb7du of ds11_sb7dv {
                                                            __DEFAULT ->
                                                                let {
                                                                  sat_sb7dz [Occ=Once]
                                                                    :: GHC.Types.Int
                                                                  [LclId] =
                                                                      [w2_sb7cF ds11_sb7dv] \u []
                                                                          case w2_sb7cF of {
                                                                            GHC.Types.I# x_sb7dx [Occ=Once] ->
                                                                                case
                                                                                    +# [x_sb7dx
                                                                                        ds11_sb7dv]
                                                                                of
                                                                                sat_sb7dy
                                                                                { __DEFAULT ->
                                                                                      GHC.Types.I# [sat_sb7dy];
                                                                                };
                                                                          };
                                                                } in  (#,#) [ipv_sb7dr sat_sb7dz];
                                                            -1# -> (#,#) [ipv_sb7dr w2_sb7cF];
                                                          };
                                                    };
                                              };
                                        };
                                  };
                            };
                      };
              };
        };

GHC.IO.Handle.Text.hGetBufNonBlocking4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetBufNonBlocking"#;

GHC.IO.Handle.Text.hGetBufNonBlocking3 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.IO.Handle.Text.hGetBufNonBlocking4;

GHC.IO.Handle.Text.$whGetBufNonBlocking [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId, Arity=4, Str=<L,U><L,U(U)><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [w_sb7dA w1_sb7dB ww_sb7dC w2_sb7dD]
        case ww_sb7dC of wild_sb7dE {
          __DEFAULT ->
              case <# [wild_sb7dE 0#] of {
                __DEFAULT ->
                    let {
                      wild1_sb7dG [Occ=OnceL, Dmd=<L,U(U)>] :: GHC.Types.Int
                      [LclId, Unf=OtherCon []] =
                          CCCS GHC.Types.I#! [wild_sb7dE]; } in
                    let {
                      sat_sb7fj [Occ=Once]
                        :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Int
                      [LclId] =
                          [w1_sb7dB wild_sb7dE wild1_sb7dG] \r [h__sb7dH eta_sb7dI]
                              case h__sb7dH of wild2_sb7dJ {
                                GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             dt_sb7dP
                                                             _ [Occ=Dead]
                                                             dt1_sb7dR [Occ=Once]
                                                             dt2_sb7dS
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             ds4_sb7dV [Occ=Once!]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                    case readMutVar# [dt2_sb7dS eta_sb7dI] of {
                                      (#,#) ipv_sb7e1 [Occ=Once*] ipv1_sb7e2 [Occ=Once!] ->
                                          case ipv1_sb7e2 of {
                                            GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 ds11_sb7e6 [Occ=Once!]
                                                                 _ [Occ=Dead]
                                                                 dt7_sb7e8 [Occ=Once]
                                                                 dt8_sb7e9 [Occ=Once] ->
                                                let-no-escape {
                                                  $w$j_sb7ea [InlPrag=NOUSERINLINE[0],
                                                              Occ=Once*!T[1],
                                                              Dmd=<L,1*C1(U(U,U))>]
                                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Types.Int #)
                                                  [LclId[JoinId(1)],
                                                   Arity=1,
                                                   Str=<S,U>,
                                                   Unf=OtherCon []] =
                                                      sat-only [w1_sb7dB
                                                                wild_sb7dE
                                                                wild1_sb7dG
                                                                wild2_sb7dJ
                                                                dt_sb7dP] \r [w3_sb7eb]
                                                          case readMutVar# [dt_sb7dP w3_sb7eb] of {
                                                            (#,#) ipv2_sb7ed [Occ=Once*]
                                                                  ipv3_sb7ee [Occ=Once!] ->
                                                                case ipv3_sb7ee of wild4_sb7ef {
                                                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       dt12_sb7ej [Occ=Once]
                                                                                       dt13_sb7ek [Occ=Once]
                                                                                       dt14_sb7el [Occ=Once] ->
                                                                      case
                                                                          ==# [dt13_sb7ek
                                                                               dt14_sb7el]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                wild2_sb7dJ
                                                                                wild4_sb7ef
                                                                                w1_sb7dB
                                                                                GHC.IO.Handle.Text.hGetBuf3
                                                                                wild1_sb7dG
                                                                                ipv2_sb7ed;
                                                                        1# ->
                                                                            GHC.IO.Handle.Text.$wbufReadNBEmpty
                                                                                wild2_sb7dJ
                                                                                dt12_sb7ej
                                                                                w1_sb7dB
                                                                                GHC.IO.Handle.Text.hGetBuf3
                                                                                wild_sb7dE
                                                                                ipv2_sb7ed;
                                                                      };
                                                                };
                                                          };
                                                } in 
                                                  case ds11_sb7e6 of {
                                                    GHC.IO.Buffer.ReadBuffer ->
                                                        case ==# [dt7_sb7e8 dt8_sb7e9] of {
                                                          __DEFAULT ->
                                                              case
                                                                  readMutVar# [dt1_sb7dR ipv_sb7e1]
                                                              of
                                                              { (#,#) ipv2_sb7eq [Occ=Once]
                                                                      ipv3_sb7er [Occ=Once!] ->
                                                                    case ipv3_sb7er of {
                                                                      (,) codec_state_sb7et [Occ=Once]
                                                                          bbuf0_sb7eu [Occ=Once*] ->
                                                                          case
                                                                              readMutVar# [dt2_sb7dS
                                                                                           ipv2_sb7eq]
                                                                          of
                                                                          { (#,#) ipv4_sb7ew [Occ=Once]
                                                                                  ipv5_sb7ex ->
                                                                                let {
                                                                                  sat_sb7eF [Occ=Once]
                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                         GHC.IO.Buffer.CharBufElem
                                                                                  [LclId] =
                                                                                      [ipv5_sb7ex] \u []
                                                                                          case
                                                                                              ipv5_sb7ex
                                                                                          of
                                                                                          { GHC.IO.Buffer.Buffer dt9_sb7ez [Occ=Once]
                                                                                                                 dt10_sb7eA [Occ=Once]
                                                                                                                 ds14_sb7eB [Occ=Once]
                                                                                                                 dt11_sb7eC [Occ=Once]
                                                                                                                 _ [Occ=Dead]
                                                                                                                 _ [Occ=Dead] ->
                                                                                                GHC.IO.Buffer.Buffer [dt9_sb7ez
                                                                                                                      dt10_sb7eA
                                                                                                                      ds14_sb7eB
                                                                                                                      dt11_sb7eC
                                                                                                                      0#
                                                                                                                      0#];
                                                                                          };
                                                                                } in 
                                                                                  case
                                                                                      writeMutVar# [dt2_sb7dS
                                                                                                    sat_sb7eF
                                                                                                    ipv4_sb7ew]
                                                                                  of
                                                                                  s2#_sb7eG
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            ipv5_sb7ex
                                                                                        of
                                                                                        { GHC.IO.Buffer.Buffer dt9_sb7eI [Occ=Once]
                                                                                                               dt10_sb7eJ [Occ=Once]
                                                                                                               ds14_sb7eK [Occ=Once]
                                                                                                               _ [Occ=Dead]
                                                                                                               dt12_sb7eM [Occ=Once!]
                                                                                                               _ [Occ=Dead] ->
                                                                                              case
                                                                                                  dt12_sb7eM
                                                                                              of
                                                                                              wild7_sb7eO
                                                                                              { __DEFAULT ->
                                                                                                    case
                                                                                                        ds4_sb7dV
                                                                                                    of
                                                                                                    { GHC.Base.Nothing ->
                                                                                                          let {
                                                                                                            sat_sb7eY [Occ=Once]
                                                                                                              :: GHC.IO.Buffer.Buffer
                                                                                                                   GHC.Word.Word8
                                                                                                            [LclId] =
                                                                                                                [bbuf0_sb7eu
                                                                                                                 wild7_sb7eO] \u []
                                                                                                                    case
                                                                                                                        bbuf0_sb7eu
                                                                                                                    of
                                                                                                                    { GHC.IO.Buffer.Buffer dt14_sb7eR [Occ=Once]
                                                                                                                                           dt15_sb7eS [Occ=Once]
                                                                                                                                           ds15_sb7eT [Occ=Once]
                                                                                                                                           dt16_sb7eU [Occ=Once]
                                                                                                                                           dt17_sb7eV [Occ=Once]
                                                                                                                                           dt18_sb7eW [Occ=Once] ->
                                                                                                                          case
                                                                                                                              +# [dt17_sb7eV
                                                                                                                                  wild7_sb7eO]
                                                                                                                          of
                                                                                                                          sat_sb7eX
                                                                                                                          { __DEFAULT ->
                                                                                                                                GHC.IO.Buffer.Buffer [dt14_sb7eR
                                                                                                                                                      dt15_sb7eS
                                                                                                                                                      ds15_sb7eT
                                                                                                                                                      dt16_sb7eU
                                                                                                                                                      sat_sb7eX
                                                                                                                                                      dt18_sb7eW];
                                                                                                                          };
                                                                                                                    };
                                                                                                          } in 
                                                                                                            case
                                                                                                                writeMutVar# [dt_sb7dP
                                                                                                                              sat_sb7eY
                                                                                                                              s2#_sb7eG]
                                                                                                            of
                                                                                                            s2#1_sb7eZ
                                                                                                            { __DEFAULT ->
                                                                                                                  $w$j_sb7ea
                                                                                                                      s2#1_sb7eZ;
                                                                                                            };
                                                                                                      GHC.Base.Just decoder_sb7f0 [Occ=Once!] ->
                                                                                                          case
                                                                                                              decoder_sb7f0
                                                                                                          of
                                                                                                          { GHC.IO.Encoding.Types.BufferCodec ds15_sb7f2 [Occ=Once]
                                                                                                                                              ds16_sb7f3 [Occ=Once]
                                                                                                                                              _ [Occ=Dead]
                                                                                                                                              _ [Occ=Dead]
                                                                                                                                              ds19_sb7f6 [Occ=Once!] ->
                                                                                                                case
                                                                                                                    ds19_sb7f6
                                                                                                                        codec_state_sb7et
                                                                                                                        s2#_sb7eG
                                                                                                                of
                                                                                                                { (#,#) ipv6_sb7f8 [Occ=Once]
                                                                                                                        _ [Occ=Dead] ->
                                                                                                                      let {
                                                                                                                        sat_sb7fa [Occ=Once]
                                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                                                        [LclId] =
                                                                                                                            CCCS GHC.IO.Buffer.Buffer! [dt9_sb7eI
                                                                                                                                                        dt10_sb7eJ
                                                                                                                                                        ds14_sb7eK
                                                                                                                                                        wild7_sb7eO
                                                                                                                                                        0#
                                                                                                                                                        0#];
                                                                                                                      } in 
                                                                                                                        case
                                                                                                                            GHC.IO.Handle.Internals.$wstreamEncode
                                                                                                                                ds15_sb7f2
                                                                                                                                ds16_sb7f3
                                                                                                                                bbuf0_sb7eu
                                                                                                                                sat_sb7fa
                                                                                                                                ipv6_sb7f8
                                                                                                                        of
                                                                                                                        { (#,#) ipv8_sb7fc [Occ=Once]
                                                                                                                                ipv9_sb7fd [Occ=Once!] ->
                                                                                                                              case
                                                                                                                                  ipv9_sb7fd
                                                                                                                              of
                                                                                                                              { (,) bbuf1_sb7ff [Occ=Once]
                                                                                                                                    _ [Occ=Dead] ->
                                                                                                                                    case
                                                                                                                                        writeMutVar# [dt_sb7dP
                                                                                                                                                      bbuf1_sb7ff
                                                                                                                                                      ipv8_sb7fc]
                                                                                                                                    of
                                                                                                                                    s2#1_sb7fh
                                                                                                                                    { __DEFAULT ->
                                                                                                                                          $w$j_sb7ea
                                                                                                                                              s2#1_sb7fh;
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                };
                                                                                                          };
                                                                                                    };
                                                                                                0# ->
                                                                                                    case
                                                                                                        writeMutVar# [dt_sb7dP
                                                                                                                      bbuf0_sb7eu
                                                                                                                      s2#_sb7eG]
                                                                                                    of
                                                                                                    s2#1_sb7fi
                                                                                                    { __DEFAULT ->
                                                                                                          $w$j_sb7ea
                                                                                                              s2#1_sb7fi;
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                          };
                                                                    };
                                                              };
                                                          1# -> $w$j_sb7ea ipv_sb7e1;
                                                        };
                                                    GHC.IO.Buffer.WriteBuffer ->
                                                        $w$j_sb7ea ipv_sb7e1;
                                                  };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.Handle.Internals.wantReadableHandle_1
                          GHC.IO.Handle.Text.hGetBufNonBlocking3 w_sb7dA sat_sb7fj w2_sb7dD;
                1# ->
                    GHC.IO.Handle.Text.$willegalBufferSize
                        w_sb7dA GHC.IO.Handle.Text.hGetBufNonBlocking3 wild_sb7dE w2_sb7dD;
              };
          0# -> (#,#) [w2_sb7dD GHC.IO.Handle.Text.hGetBuf3];
        };

GHC.IO.Handle.Text.hGetBufNonBlocking1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb7fk w1_sb7fl w2_sb7fm w3_sb7fn]
        case w2_sb7fm of {
          GHC.Types.I# ww1_sb7fp [Occ=Once] ->
              GHC.IO.Handle.Text.$whGetBufNonBlocking
                  w_sb7fk w1_sb7fl ww1_sb7fp w3_sb7fn;
        };

GHC.IO.Handle.Text.hGetBufNonBlocking
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Handle.Text.hGetBufNonBlocking1 eta_B4 eta_B3 eta_B2 eta_B1;

lvl12_rb6WS :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetBufSome"#;

lvl13_rb6WT :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl12_rb6WS;

GHC.IO.Handle.Text.$whGetBufSome [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId, Arity=4, Str=<L,U><L,U(U)><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [w_sb7fq w1_sb7fr ww_sb7fs w2_sb7ft]
        case ww_sb7fs of wild_sb7fu {
          __DEFAULT ->
              case <# [wild_sb7fu 0#] of {
                __DEFAULT ->
                    let {
                      wild1_sb7fw [Occ=OnceL*, Dmd=<L,U(U)>] :: GHC.Types.Int
                      [LclId, Unf=OtherCon []] =
                          CCCS GHC.Types.I#! [wild_sb7fu]; } in
                    let {
                      sat_sb7hx [Occ=Once]
                        :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Int
                      [LclId] =
                          [w1_sb7fr wild_sb7fu wild1_sb7fw] \r [h__sb7fx eta_sb7fy]
                              case h__sb7fx of wild2_sb7fz {
                                GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                             $dBufferedIO_sb7fB [Occ=Once]
                                                             $dTypeable_sb7fC [Occ=Once]
                                                             ds_sb7fD [Occ=Once]
                                                             _ [Occ=Dead]
                                                             dt_sb7fF
                                                             _ [Occ=Dead]
                                                             dt1_sb7fH [Occ=Once]
                                                             dt2_sb7fI
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             ds4_sb7fL [Occ=Once!]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                    case ds_sb7fD of ww1_sb7fQ {
                                      GHC.IO.FD.FD ww2_sb7fR [Occ=Once] ww3_sb7fS [Occ=Once] ->
                                          case readMutVar# [dt2_sb7fI eta_sb7fy] of {
                                            (#,#) ipv_sb7fU [Occ=Once*] ipv1_sb7fV [Occ=Once!] ->
                                                case ipv1_sb7fV of {
                                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                       _ [Occ=Dead]
                                                                       ds11_sb7fZ [Occ=Once!]
                                                                       _ [Occ=Dead]
                                                                       dt7_sb7g1 [Occ=Once]
                                                                       dt8_sb7g2 [Occ=Once] ->
                                                      let-no-escape {
                                                        $w$j_sb7g3 [InlPrag=NOUSERINLINE[0],
                                                                    Occ=Once*!T[1],
                                                                    Dmd=<L,1*C1(U(U,U))>]
                                                          :: GHC.Prim.State# GHC.Prim.RealWorld
                                                             -> (# GHC.Prim.State#
                                                                     GHC.Prim.RealWorld,
                                                                   GHC.Types.Int #)
                                                        [LclId[JoinId(1)],
                                                         Arity=1,
                                                         Str=<S,U>,
                                                         Unf=OtherCon []] =
                                                            sat-only [w1_sb7fr
                                                                      wild_sb7fu
                                                                      wild1_sb7fw
                                                                      wild2_sb7fz
                                                                      $dBufferedIO_sb7fB
                                                                      $dTypeable_sb7fC
                                                                      dt_sb7fF
                                                                      ww1_sb7fQ
                                                                      ww2_sb7fR
                                                                      ww3_sb7fS] \r [w3_sb7g4]
                                                                case
                                                                    readMutVar# [dt_sb7fF w3_sb7g4]
                                                                of
                                                                { (#,#) ipv2_sb7g6
                                                                        ipv3_sb7g7 [Occ=Once!] ->
                                                                      case
                                                                          ipv3_sb7g7
                                                                      of
                                                                      wild4_sb7g8
                                                                      { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                             _ [Occ=Dead]
                                                                                             _ [Occ=Dead]
                                                                                             dt12_sb7gc [Occ=Once]
                                                                                             dt13_sb7gd
                                                                                             dt14_sb7ge ->
                                                                            case
                                                                                ==# [dt13_sb7gd
                                                                                     dt14_sb7ge]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      -# [dt14_sb7ge
                                                                                          dt13_sb7gd]
                                                                                  of
                                                                                  y1_sb7gg [Dmd=<S,U>]
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            <=# [wild_sb7fu
                                                                                                 y1_sb7gg]
                                                                                        of
                                                                                        { __DEFAULT ->
                                                                                              let {
                                                                                                sat_sb7gi [Occ=Once]
                                                                                                  :: GHC.Types.Int
                                                                                                [LclId] =
                                                                                                    CCCS GHC.Types.I#! [y1_sb7gg];
                                                                                              } in 
                                                                                                GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                                    wild2_sb7fz
                                                                                                    wild4_sb7g8
                                                                                                    w1_sb7fr
                                                                                                    GHC.IO.Handle.Text.hGetBuf3
                                                                                                    sat_sb7gi
                                                                                                    ipv2_sb7g6;
                                                                                          1# ->
                                                                                              GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                                  wild2_sb7fz
                                                                                                  wild4_sb7g8
                                                                                                  w1_sb7fr
                                                                                                  GHC.IO.Handle.Text.hGetBuf3
                                                                                                  wild1_sb7fw
                                                                                                  ipv2_sb7g6;
                                                                                        };
                                                                                  };
                                                                              1# ->
                                                                                  let-no-escape {
                                                                                    fail_sb7gj [Occ=Once*!T[1],
                                                                                                Dmd=<L,1*C1(U(U,U))>]
                                                                                      :: GHC.Prim.Void#
                                                                                         -> (# GHC.Prim.State#
                                                                                                 GHC.Prim.RealWorld,
                                                                                               GHC.Types.Int #)
                                                                                    [LclId[JoinId(1)],
                                                                                     Arity=1,
                                                                                     Str=<L,A>,
                                                                                     Unf=OtherCon []] =
                                                                                        sat-only [w1_sb7fr
                                                                                                  wild_sb7fu
                                                                                                  wild1_sb7fw
                                                                                                  wild2_sb7fz
                                                                                                  $dBufferedIO_sb7fB
                                                                                                  dt_sb7fF
                                                                                                  ww1_sb7fQ
                                                                                                  ipv2_sb7g6
                                                                                                  wild4_sb7g8] \r [ds14_sb7gk]
                                                                                            case
                                                                                                GHC.IO.BufferedIO.fillReadBuffer
                                                                                                    $dBufferedIO_sb7fB
                                                                                                    ww1_sb7fQ
                                                                                                    wild4_sb7g8
                                                                                                    ipv2_sb7g6
                                                                                            of
                                                                                            { (#,#) ipv4_sb7gm [Occ=Once*]
                                                                                                    ipv5_sb7gn [Occ=Once!] ->
                                                                                                  case
                                                                                                      ipv5_sb7gn
                                                                                                  of
                                                                                                  { (,) r_sb7gp [Occ=Once!]
                                                                                                        buf'_sb7gq ->
                                                                                                        case
                                                                                                            r_sb7gp
                                                                                                        of
                                                                                                        wild6_sb7gr
                                                                                                        { GHC.Types.I# x_sb7gs [Occ=Once!] ->
                                                                                                              case
                                                                                                                  x_sb7gs
                                                                                                              of
                                                                                                              wild7_sb7gt
                                                                                                              { __DEFAULT ->
                                                                                                                    case
                                                                                                                        writeMutVar# [dt_sb7fF
                                                                                                                                      buf'_sb7gq
                                                                                                                                      ipv4_sb7gm]
                                                                                                                    of
                                                                                                                    s2#_sb7gu
                                                                                                                    { __DEFAULT ->
                                                                                                                          case
                                                                                                                              <=# [wild7_sb7gt
                                                                                                                                   wild_sb7fu]
                                                                                                                          of
                                                                                                                          { __DEFAULT ->
                                                                                                                                GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                                                                    wild2_sb7fz
                                                                                                                                    buf'_sb7gq
                                                                                                                                    w1_sb7fr
                                                                                                                                    GHC.IO.Handle.Text.hGetBuf3
                                                                                                                                    wild1_sb7fw
                                                                                                                                    s2#_sb7gu;
                                                                                                                            1# ->
                                                                                                                                GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                                                                    wild2_sb7fz
                                                                                                                                    buf'_sb7gq
                                                                                                                                    w1_sb7fr
                                                                                                                                    GHC.IO.Handle.Text.hGetBuf3
                                                                                                                                    wild6_sb7gr
                                                                                                                                    s2#_sb7gu;
                                                                                                                          };
                                                                                                                    };
                                                                                                                0# ->
                                                                                                                    (#,#) [ipv4_sb7gm
                                                                                                                           GHC.IO.Handle.Text.hGetBuf3];
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                  } in 
                                                                                    case
                                                                                        ># [wild_sb7fu
                                                                                            dt12_sb7gc]
                                                                                    of
                                                                                    { __DEFAULT ->
                                                                                          fail_sb7gj
                                                                                              GHC.Prim.void#;
                                                                                      1# ->
                                                                                          case
                                                                                              Data.Typeable.Internal.sameTypeRep
                                                                                                  $dTypeable_sb7fC
                                                                                                  lvl11_rb6WR
                                                                                          of
                                                                                          { GHC.Types.False ->
                                                                                                fail_sb7gj
                                                                                                    GHC.Prim.void#;
                                                                                            GHC.Types.True ->
                                                                                                case
                                                                                                    w1_sb7fr
                                                                                                of
                                                                                                { GHC.Ptr.Ptr ww5_sb7gz [Occ=Once] ->
                                                                                                      case
                                                                                                          int2Word# [wild_sb7fu]
                                                                                                      of
                                                                                                      sat_sb7gA
                                                                                                      { __DEFAULT ->
                                                                                                            GHC.IO.FD.$wreadRawBufferPtr
                                                                                                                GHC.IO.FD.$fBufferedIOFD12
                                                                                                                ww2_sb7fR
                                                                                                                ww3_sb7fS
                                                                                                                ww5_sb7gz
                                                                                                                0#
                                                                                                                sat_sb7gA
                                                                                                                ipv2_sb7g6;
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                            };
                                                                      };
                                                                };
                                                      } in 
                                                        case ds11_sb7fZ of {
                                                          GHC.IO.Buffer.ReadBuffer ->
                                                              case ==# [dt7_sb7g1 dt8_sb7g2] of {
                                                                __DEFAULT ->
                                                                    case
                                                                        readMutVar# [dt1_sb7fH
                                                                                     ipv_sb7fU]
                                                                    of
                                                                    { (#,#) ipv2_sb7gE [Occ=Once]
                                                                            ipv3_sb7gF [Occ=Once!] ->
                                                                          case ipv3_sb7gF of {
                                                                            (,) codec_state_sb7gH [Occ=Once]
                                                                                bbuf0_sb7gI [Occ=Once*] ->
                                                                                case
                                                                                    readMutVar# [dt2_sb7fI
                                                                                                 ipv2_sb7gE]
                                                                                of
                                                                                { (#,#) ipv4_sb7gK [Occ=Once]
                                                                                        ipv5_sb7gL ->
                                                                                      let {
                                                                                        sat_sb7gT [Occ=Once]
                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                        [LclId] =
                                                                                            [ipv5_sb7gL] \u []
                                                                                                case
                                                                                                    ipv5_sb7gL
                                                                                                of
                                                                                                { GHC.IO.Buffer.Buffer dt9_sb7gN [Occ=Once]
                                                                                                                       dt10_sb7gO [Occ=Once]
                                                                                                                       ds14_sb7gP [Occ=Once]
                                                                                                                       dt11_sb7gQ [Occ=Once]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       _ [Occ=Dead] ->
                                                                                                      GHC.IO.Buffer.Buffer [dt9_sb7gN
                                                                                                                            dt10_sb7gO
                                                                                                                            ds14_sb7gP
                                                                                                                            dt11_sb7gQ
                                                                                                                            0#
                                                                                                                            0#];
                                                                                                };
                                                                                      } in 
                                                                                        case
                                                                                            writeMutVar# [dt2_sb7fI
                                                                                                          sat_sb7gT
                                                                                                          ipv4_sb7gK]
                                                                                        of
                                                                                        s2#_sb7gU
                                                                                        { __DEFAULT ->
                                                                                              case
                                                                                                  ipv5_sb7gL
                                                                                              of
                                                                                              { GHC.IO.Buffer.Buffer dt9_sb7gW [Occ=Once]
                                                                                                                     dt10_sb7gX [Occ=Once]
                                                                                                                     ds14_sb7gY [Occ=Once]
                                                                                                                     _ [Occ=Dead]
                                                                                                                     dt12_sb7h0 [Occ=Once!]
                                                                                                                     _ [Occ=Dead] ->
                                                                                                    case
                                                                                                        dt12_sb7h0
                                                                                                    of
                                                                                                    wild7_sb7h2
                                                                                                    { __DEFAULT ->
                                                                                                          case
                                                                                                              ds4_sb7fL
                                                                                                          of
                                                                                                          { GHC.Base.Nothing ->
                                                                                                                let {
                                                                                                                  sat_sb7hc [Occ=Once]
                                                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                                                         GHC.Word.Word8
                                                                                                                  [LclId] =
                                                                                                                      [bbuf0_sb7gI
                                                                                                                       wild7_sb7h2] \u []
                                                                                                                          case
                                                                                                                              bbuf0_sb7gI
                                                                                                                          of
                                                                                                                          { GHC.IO.Buffer.Buffer dt14_sb7h5 [Occ=Once]
                                                                                                                                                 dt15_sb7h6 [Occ=Once]
                                                                                                                                                 ds15_sb7h7 [Occ=Once]
                                                                                                                                                 dt16_sb7h8 [Occ=Once]
                                                                                                                                                 dt17_sb7h9 [Occ=Once]
                                                                                                                                                 dt18_sb7ha [Occ=Once] ->
                                                                                                                                case
                                                                                                                                    +# [dt17_sb7h9
                                                                                                                                        wild7_sb7h2]
                                                                                                                                of
                                                                                                                                sat_sb7hb
                                                                                                                                { __DEFAULT ->
                                                                                                                                      GHC.IO.Buffer.Buffer [dt14_sb7h5
                                                                                                                                                            dt15_sb7h6
                                                                                                                                                            ds15_sb7h7
                                                                                                                                                            dt16_sb7h8
                                                                                                                                                            sat_sb7hb
                                                                                                                                                            dt18_sb7ha];
                                                                                                                                };
                                                                                                                          };
                                                                                                                } in 
                                                                                                                  case
                                                                                                                      writeMutVar# [dt_sb7fF
                                                                                                                                    sat_sb7hc
                                                                                                                                    s2#_sb7gU]
                                                                                                                  of
                                                                                                                  s2#1_sb7hd
                                                                                                                  { __DEFAULT ->
                                                                                                                        $w$j_sb7g3
                                                                                                                            s2#1_sb7hd;
                                                                                                                  };
                                                                                                            GHC.Base.Just decoder_sb7he [Occ=Once!] ->
                                                                                                                case
                                                                                                                    decoder_sb7he
                                                                                                                of
                                                                                                                { GHC.IO.Encoding.Types.BufferCodec ds15_sb7hg [Occ=Once]
                                                                                                                                                    ds16_sb7hh [Occ=Once]
                                                                                                                                                    _ [Occ=Dead]
                                                                                                                                                    _ [Occ=Dead]
                                                                                                                                                    ds19_sb7hk [Occ=Once!] ->
                                                                                                                      case
                                                                                                                          ds19_sb7hk
                                                                                                                              codec_state_sb7gH
                                                                                                                              s2#_sb7gU
                                                                                                                      of
                                                                                                                      { (#,#) ipv6_sb7hm [Occ=Once]
                                                                                                                              _ [Occ=Dead] ->
                                                                                                                            let {
                                                                                                                              sat_sb7ho [Occ=Once]
                                                                                                                                :: GHC.IO.Buffer.Buffer
                                                                                                                                     GHC.IO.Buffer.CharBufElem
                                                                                                                              [LclId] =
                                                                                                                                  CCCS GHC.IO.Buffer.Buffer! [dt9_sb7gW
                                                                                                                                                              dt10_sb7gX
                                                                                                                                                              ds14_sb7gY
                                                                                                                                                              wild7_sb7h2
                                                                                                                                                              0#
                                                                                                                                                              0#];
                                                                                                                            } in 
                                                                                                                              case
                                                                                                                                  GHC.IO.Handle.Internals.$wstreamEncode
                                                                                                                                      ds15_sb7hg
                                                                                                                                      ds16_sb7hh
                                                                                                                                      bbuf0_sb7gI
                                                                                                                                      sat_sb7ho
                                                                                                                                      ipv6_sb7hm
                                                                                                                              of
                                                                                                                              { (#,#) ipv8_sb7hq [Occ=Once]
                                                                                                                                      ipv9_sb7hr [Occ=Once!] ->
                                                                                                                                    case
                                                                                                                                        ipv9_sb7hr
                                                                                                                                    of
                                                                                                                                    { (,) bbuf1_sb7ht [Occ=Once]
                                                                                                                                          _ [Occ=Dead] ->
                                                                                                                                          case
                                                                                                                                              writeMutVar# [dt_sb7fF
                                                                                                                                                            bbuf1_sb7ht
                                                                                                                                                            ipv8_sb7hq]
                                                                                                                                          of
                                                                                                                                          s2#1_sb7hv
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                $w$j_sb7g3
                                                                                                                                                    s2#1_sb7hv;
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              };
                                                                                                                      };
                                                                                                                };
                                                                                                          };
                                                                                                      0# ->
                                                                                                          case
                                                                                                              writeMutVar# [dt_sb7fF
                                                                                                                            bbuf0_sb7gI
                                                                                                                            s2#_sb7gU]
                                                                                                          of
                                                                                                          s2#1_sb7hw
                                                                                                          { __DEFAULT ->
                                                                                                                $w$j_sb7g3
                                                                                                                    s2#1_sb7hw;
                                                                                                          };
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                };
                                                                          };
                                                                    };
                                                                1# -> $w$j_sb7g3 ipv_sb7fU;
                                                              };
                                                          GHC.IO.Buffer.WriteBuffer ->
                                                              $w$j_sb7g3 ipv_sb7fU;
                                                        };
                                                };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.Handle.Internals.wantReadableHandle_1
                          lvl13_rb6WT w_sb7fq sat_sb7hx w2_sb7ft;
                1# ->
                    GHC.IO.Handle.Text.$willegalBufferSize
                        w_sb7fq lvl13_rb6WT wild_sb7fu w2_sb7ft;
              };
          0# -> (#,#) [w2_sb7ft GHC.IO.Handle.Text.hGetBuf3];
        };

GHC.IO.Handle.Text.hGetBufSome1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb7hy w1_sb7hz w2_sb7hA w3_sb7hB]
        case w2_sb7hA of {
          GHC.Types.I# ww1_sb7hD [Occ=Once] ->
              GHC.IO.Handle.Text.$whGetBufSome
                  w_sb7hy w1_sb7hz ww1_sb7hD w3_sb7hB;
        };

GHC.IO.Handle.Text.hGetBufSome
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Handle.Text.hGetBufSome1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.Handle.Text.hGetBuf4
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<S,1*U><S(SLLLSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><S,1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [h__sb7hE
           buf_sb7hF
           ptr_sb7hG
           so_far_sb7hH
           count_sb7hI
           eta_sb7hJ]
        case h__sb7hE of wild_sb7hK {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt_sb7hQ [Occ=Once*]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case buf_sb7hF of {
                GHC.IO.Buffer.Buffer dt4_sb7i2
                                     dt5_sb7i3
                                     ds9_sb7i4 [Occ=OnceL*]
                                     dt6_sb7i5 [Occ=OnceL*]
                                     dt7_sb7i6
                                     dt8_sb7i7 ->
                    case so_far_sb7hH of {
                      GHC.Types.I# ipv_sb7i9 [Occ=Once*] ->
                          case count_sb7hI of {
                            GHC.Types.I# ipv1_sb7ib ->
                                case -# [dt8_sb7i7 dt7_sb7i6] of avail_sb7ic [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      case <# [ipv1_sb7ib avail_sb7ic] of {
                                        __DEFAULT ->
                                            case ptr_sb7hG of {
                                              GHC.Ptr.Ptr ds11_sb7if ->
                                                  case int2Word# [avail_sb7ic] of sat_sb7ii {
                                                    __DEFAULT ->
                                                        case
                                                            plusAddr# [dt4_sb7i2 dt7_sb7i6]
                                                        of
                                                        sat_sb7ih
                                                        { __DEFAULT ->
                                                              case
                                                                  __pkg_ccall base-4.11.0.0 [ds11_sb7if
                                                                                             sat_sb7ih
                                                                                             sat_sb7ii
                                                                                             eta_sb7hJ]
                                                              of
                                                              { (#,#) ds12_sb7ik [Occ=Once]
                                                                      _ [Occ=Dead] ->
                                                                    case
                                                                        touch# [dt5_sb7i3
                                                                                ds12_sb7ik]
                                                                    of
                                                                    s'_sb7im
                                                                    { __DEFAULT ->
                                                                          let {
                                                                            buf'_sb7in [Dmd=<L,U(U,U,U,U,U,U)>]
                                                                              :: GHC.IO.Buffer.Buffer
                                                                                   GHC.Word.Word8
                                                                            [LclId,
                                                                             Unf=OtherCon []] =
                                                                                CCCS GHC.IO.Buffer.Buffer! [dt4_sb7i2
                                                                                                            dt5_sb7i3
                                                                                                            ds9_sb7i4
                                                                                                            dt6_sb7i5
                                                                                                            0#
                                                                                                            0#];
                                                                          } in 
                                                                            case
                                                                                writeMutVar# [dt_sb7hQ
                                                                                              buf'_sb7in
                                                                                              s'_sb7im]
                                                                            of
                                                                            s2#_sb7io
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      -# [ipv1_sb7ib
                                                                                          avail_sb7ic]
                                                                                  of
                                                                                  wild3_sb7ip
                                                                                  { __DEFAULT ->
                                                                                        let {
                                                                                          sat_sb7iu [Occ=Once]
                                                                                            :: GHC.Types.Int
                                                                                          [LclId] =
                                                                                              CCCS GHC.Types.I#! [wild3_sb7ip];
                                                                                        } in 
                                                                                          case
                                                                                              +# [ipv_sb7i9
                                                                                                  avail_sb7ic]
                                                                                          of
                                                                                          sat_sb7is
                                                                                          { __DEFAULT ->
                                                                                                let {
                                                                                                  sat_sb7it [Occ=Once]
                                                                                                    :: GHC.Types.Int
                                                                                                  [LclId] =
                                                                                                      CCCS GHC.Types.I#! [sat_sb7is];
                                                                                                } in 
                                                                                                  case
                                                                                                      plusAddr# [ds11_sb7if
                                                                                                                 avail_sb7ic]
                                                                                                  of
                                                                                                  sat_sb7iq
                                                                                                  { __DEFAULT ->
                                                                                                        let {
                                                                                                          sat_sb7ir [Occ=Once]
                                                                                                            :: GHC.Ptr.Ptr
                                                                                                                 GHC.Word.Word8
                                                                                                          [LclId] =
                                                                                                              CCCS GHC.Ptr.Ptr! [sat_sb7iq];
                                                                                                        } in 
                                                                                                          GHC.IO.Handle.Text.hGetBuf2
                                                                                                              wild_sb7hK
                                                                                                              buf'_sb7in
                                                                                                              sat_sb7ir
                                                                                                              sat_sb7it
                                                                                                              sat_sb7iu
                                                                                                              s2#_sb7io;
                                                                                                  };
                                                                                          };
                                                                                    0# ->
                                                                                        case
                                                                                            +# [ipv_sb7i9
                                                                                                avail_sb7ic]
                                                                                        of
                                                                                        sat_sb7iv
                                                                                        { __DEFAULT ->
                                                                                              let {
                                                                                                sat_sb7iw [Occ=Once]
                                                                                                  :: GHC.Types.Int
                                                                                                [LclId] =
                                                                                                    CCCS GHC.Types.I#! [sat_sb7iv];
                                                                                              } in 
                                                                                                (#,#) [s2#_sb7io
                                                                                                       sat_sb7iw];
                                                                                        };
                                                                                  };
                                                                            };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                        1# ->
                                            case ptr_sb7hG of {
                                              GHC.Ptr.Ptr ds11_sb7iy [Occ=Once] ->
                                                  case int2Word# [ipv1_sb7ib] of sat_sb7iB {
                                                    __DEFAULT ->
                                                        case
                                                            plusAddr# [dt4_sb7i2 dt7_sb7i6]
                                                        of
                                                        sat_sb7iA
                                                        { __DEFAULT ->
                                                              case
                                                                  __pkg_ccall base-4.11.0.0 [ds11_sb7iy
                                                                                             sat_sb7iA
                                                                                             sat_sb7iB
                                                                                             eta_sb7hJ]
                                                              of
                                                              { (#,#) ds12_sb7iD [Occ=Once]
                                                                      _ [Occ=Dead] ->
                                                                    case
                                                                        touch# [dt5_sb7i3
                                                                                ds12_sb7iD]
                                                                    of
                                                                    s'_sb7iF
                                                                    { __DEFAULT ->
                                                                          case
                                                                              +# [dt7_sb7i6
                                                                                  ipv1_sb7ib]
                                                                          of
                                                                          sat_sb7iG
                                                                          { __DEFAULT ->
                                                                                let {
                                                                                  sat_sb7iH [Occ=Once]
                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                         GHC.Word.Word8
                                                                                  [LclId] =
                                                                                      CCCS GHC.IO.Buffer.Buffer! [dt4_sb7i2
                                                                                                                  dt5_sb7i3
                                                                                                                  ds9_sb7i4
                                                                                                                  dt6_sb7i5
                                                                                                                  sat_sb7iG
                                                                                                                  dt8_sb7i7];
                                                                                } in 
                                                                                  case
                                                                                      writeMutVar# [dt_sb7hQ
                                                                                                    sat_sb7iH
                                                                                                    s'_sb7iF]
                                                                                  of
                                                                                  s2#_sb7iI
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            +# [ipv_sb7i9
                                                                                                ipv1_sb7ib]
                                                                                        of
                                                                                        sat_sb7iJ
                                                                                        { __DEFAULT ->
                                                                                              let {
                                                                                                sat_sb7iK [Occ=Once]
                                                                                                  :: GHC.Types.Int
                                                                                                [LclId] =
                                                                                                    CCCS GHC.Types.I#! [sat_sb7iJ];
                                                                                              } in 
                                                                                                (#,#) [s2#_sb7iI
                                                                                                       sat_sb7iK];
                                                                                        };
                                                                                  };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };
GHC.IO.Handle.Text.hGetBuf2 [Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<S,1*U><S(LLLSLL),1*U(U,U,U,U,U,U)><L,U(U)><L,U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [h__sb7iL
           buf_sb7iM
           ptr_sb7iN
           so_far_sb7iO
           count_sb7iP
           eta_sb7iQ]
        case h__sb7iL of wild_sb7iR {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       $dBufferedIO_sb7iT [Occ=Once]
                                       $dTypeable_sb7iU [Occ=Once]
                                       ds_sb7iV
                                       _ [Occ=Dead]
                                       dt_sb7iX [Occ=Once]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case buf_sb7iM of wild1_sb7j8 {
                GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     dt6_sb7jc [Occ=Once]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead] ->
                    case count_sb7iP of wild2_sb7jf {
                      GHC.Types.I# x_sb7jg ->
                          let-no-escape {
                            fail_sb7jh [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                              :: GHC.Prim.Void#
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                            [LclId[JoinId(1)], Arity=1, Str=<L,A>, Unf=OtherCon []] =
                                sat-only [ptr_sb7iN
                                          so_far_sb7iO
                                          eta_sb7iQ
                                          wild_sb7iR
                                          $dBufferedIO_sb7iT
                                          ds_sb7iV
                                          dt_sb7iX
                                          wild1_sb7j8
                                          wild2_sb7jf] \r [ds10_sb7ji]
                                    case
                                        GHC.IO.BufferedIO.fillReadBuffer
                                            $dBufferedIO_sb7iT ds_sb7iV wild1_sb7j8 eta_sb7iQ
                                    of
                                    { (#,#) ipv_sb7jk [Occ=Once*] ipv1_sb7jl [Occ=Once!] ->
                                          case ipv1_sb7jl of {
                                            (,) r_sb7jn [Occ=Once!] buf'_sb7jo ->
                                                case r_sb7jn of {
                                                  GHC.Types.I# x1_sb7jq [Occ=Once!] ->
                                                      case x1_sb7jq of {
                                                        __DEFAULT ->
                                                            case
                                                                writeMutVar# [dt_sb7iX
                                                                              buf'_sb7jo
                                                                              ipv_sb7jk]
                                                            of
                                                            s2#_sb7js
                                                            { __DEFAULT ->
                                                                  GHC.IO.Handle.Text.hGetBuf4
                                                                      wild_sb7iR
                                                                      buf'_sb7jo
                                                                      ptr_sb7iN
                                                                      so_far_sb7iO
                                                                      wild2_sb7jf
                                                                      s2#_sb7js;
                                                            };
                                                        0# -> (#,#) [ipv_sb7jk so_far_sb7iO];
                                                      };
                                                };
                                          };
                                    };
                          } in 
                            case ># [x_sb7jg dt6_sb7jc] of {
                              __DEFAULT -> fail_sb7jh GHC.Prim.void#;
                              1# ->
                                  case
                                      Data.Typeable.Internal.sameTypeRep
                                          $dTypeable_sb7iU lvl11_rb6WR
                                  of
                                  { GHC.Types.False -> fail_sb7jh GHC.Prim.void#;
                                    GHC.Types.True ->
                                        let-no-escape {
                                          exit_sb7jv [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
                                            :: GHC.Prim.Int#
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                     GHC.Types.Int #)
                                          [LclId[JoinId(2)],
                                           Arity=2,
                                           Str=<L,U><S,U>,
                                           Unf=OtherCon []] =
                                              sat-only [so_far_sb7iO] \r [d_sb7jw ipv_sb7jx]
                                                  let {
                                                    sat_sb7jB [Occ=Once] :: GHC.Types.Int
                                                    [LclId] =
                                                        [so_far_sb7iO d_sb7jw] \u []
                                                            case so_far_sb7iO of {
                                                              GHC.Types.I# x1_sb7jz [Occ=Once] ->
                                                                  case
                                                                      +# [x1_sb7jz d_sb7jw]
                                                                  of
                                                                  sat_sb7jA
                                                                  { __DEFAULT ->
                                                                        GHC.Types.I# [sat_sb7jA];
                                                                  };
                                                            };
                                                  } in  (#,#) [ipv_sb7jx sat_sb7jB];
                                        } in 
                                          let-no-escape {
                                            exit1_sb7jC [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
                                              :: GHC.Types.Int
                                                 -> GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Types.Int #)
                                            [LclId[JoinId(2)],
                                             Arity=2,
                                             Str=<L,1*U(U)><S,U>,
                                             Unf=OtherCon []] =
                                                sat-only [so_far_sb7iO] \r [w_sb7jD w1_sb7jE]
                                                    let {
                                                      sat_sb7jF [Occ=Once] :: GHC.Types.Int
                                                      [LclId] =
                                                          [so_far_sb7iO w_sb7jD] \u []
                                                              GHC.Num.$fNumInt_$c+
                                                                  so_far_sb7iO w_sb7jD;
                                                    } in  (#,#) [w1_sb7jE sat_sb7jF];
                                          } in 
                                            let-no-escape {
                                              $wloop_sb7jG [InlPrag=NOUSERINLINE[0],
                                                            Occ=LoopBreakerT[4]]
                                                :: GHC.IO.FD.FD
                                                   -> GHC.Types.Int
                                                   -> GHC.Prim.Int#
                                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         GHC.Types.Int #)
                                              [LclId[JoinId(4)],
                                               Arity=4,
                                               Str=<L,1*U(U,U)><L,1*U(U)><S,U><S,U>,
                                               Unf=OtherCon []] =
                                                  sat-only [ptr_sb7iN
                                                            exit_sb7jv
                                                            exit1_sb7jC
                                                            $wloop_sb7jG] \r [w_sb7jH
                                                                              w1_sb7jI
                                                                              ww_sb7jJ
                                                                              w2_sb7jK]
                                                      case <=# [ww_sb7jJ 0#] of {
                                                        __DEFAULT ->
                                                            case ptr_sb7iN of {
                                                              GHC.Ptr.Ptr addr_sb7jN [Occ=Once] ->
                                                                  case w1_sb7jI of {
                                                                    GHC.Types.I# d_sb7jP ->
                                                                        case w_sb7jH of ww1_sb7jQ {
                                                                          GHC.IO.FD.FD ww2_sb7jR [Occ=Once]
                                                                                       ww3_sb7jS [Occ=Once] ->
                                                                              case
                                                                                  int2Word# [ww_sb7jJ]
                                                                              of
                                                                              sat_sb7jU
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        plusAddr# [addr_sb7jN
                                                                                                   d_sb7jP]
                                                                                    of
                                                                                    sat_sb7jT
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              GHC.IO.FD.$wreadRawBufferPtr
                                                                                                  GHC.IO.FD.$fBufferedIOFD12
                                                                                                  ww2_sb7jR
                                                                                                  ww3_sb7jS
                                                                                                  sat_sb7jT
                                                                                                  0#
                                                                                                  sat_sb7jU
                                                                                                  w2_sb7jK
                                                                                          of
                                                                                          { (#,#) ipv_sb7jW [Occ=Once*]
                                                                                                  ipv1_sb7jX [Occ=Once!] ->
                                                                                                case
                                                                                                    ipv1_sb7jX
                                                                                                of
                                                                                                { GHC.Types.I# x1_sb7jZ [Occ=Once!] ->
                                                                                                      case
                                                                                                          x1_sb7jZ
                                                                                                      of
                                                                                                      wild7_sb7k0
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                -# [ww_sb7jJ
                                                                                                                    wild7_sb7k0]
                                                                                                            of
                                                                                                            sat_sb7k3
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      +# [d_sb7jP
                                                                                                                          wild7_sb7k0]
                                                                                                                  of
                                                                                                                  sat_sb7k1
                                                                                                                  { __DEFAULT ->
                                                                                                                        let {
                                                                                                                          sat_sb7k2 [Occ=Once]
                                                                                                                            :: GHC.Types.Int
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Types.I#! [sat_sb7k1];
                                                                                                                        } in 
                                                                                                                          $wloop_sb7jG
                                                                                                                              ww1_sb7jQ
                                                                                                                              sat_sb7k2
                                                                                                                              sat_sb7k3
                                                                                                                              ipv_sb7jW;
                                                                                                                  };
                                                                                                            };
                                                                                                        0# ->
                                                                                                            exit_sb7jv
                                                                                                                d_sb7jP
                                                                                                                ipv_sb7jW;
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                        1# -> exit1_sb7jC w1_sb7jI w2_sb7jK;
                                                      };
                                            } in 
                                              $wloop_sb7jG
                                                  ds_sb7iV
                                                  GHC.IO.Handle.Text.hGetBuf3
                                                  x_sb7jg
                                                  eta_sb7iQ;
                                  };
                            };
                    };
              };
        };

GHC.IO.Handle.Text.hGetBuf6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetBuf"#;

GHC.IO.Handle.Text.hGetBuf5 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hGetBuf6;

GHC.IO.Handle.Text.$whGetBuf [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId, Arity=4, Str=<L,U><L,U(U)><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [w_sb7k4 w1_sb7k5 ww_sb7k6 w2_sb7k7]
        case ww_sb7k6 of wild_sb7k8 {
          __DEFAULT ->
              case <# [wild_sb7k8 0#] of {
                __DEFAULT ->
                    let {
                      wild1_sb7ka [Occ=OnceL*, Dmd=<L,U(U)>] :: GHC.Types.Int
                      [LclId, Unf=OtherCon []] =
                          CCCS GHC.Types.I#! [wild_sb7k8]; } in
                    let {
                      sat_sb7lN [Occ=Once]
                        :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Int
                      [LclId] =
                          [w1_sb7k5 wild1_sb7ka] \r [h__sb7kb eta_sb7kc]
                              case h__sb7kb of wild2_sb7kd {
                                GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             dt_sb7kj
                                                             _ [Occ=Dead]
                                                             dt1_sb7kl [Occ=Once]
                                                             dt2_sb7km
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             ds4_sb7kp [Occ=Once!]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                    case readMutVar# [dt2_sb7km eta_sb7kc] of {
                                      (#,#) ipv_sb7kv [Occ=Once*] ipv1_sb7kw [Occ=Once!] ->
                                          case ipv1_sb7kw of {
                                            GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 ds11_sb7kA [Occ=Once!]
                                                                 _ [Occ=Dead]
                                                                 dt7_sb7kC [Occ=Once]
                                                                 dt8_sb7kD [Occ=Once] ->
                                                let-no-escape {
                                                  $w$j_sb7kE [InlPrag=NOUSERINLINE[0],
                                                              Occ=Once*!T[1],
                                                              Dmd=<L,1*C1(U(U,U))>]
                                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Types.Int #)
                                                  [LclId[JoinId(1)],
                                                   Arity=1,
                                                   Str=<S,U>,
                                                   Unf=OtherCon []] =
                                                      sat-only [w1_sb7k5
                                                                wild1_sb7ka
                                                                wild2_sb7kd
                                                                dt_sb7kj] \r [w3_sb7kF]
                                                          case readMutVar# [dt_sb7kj w3_sb7kF] of {
                                                            (#,#) ipv2_sb7kH [Occ=Once*]
                                                                  ipv3_sb7kI [Occ=Once!] ->
                                                                case ipv3_sb7kI of wild4_sb7kJ {
                                                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       dt13_sb7kO [Occ=Once]
                                                                                       dt14_sb7kP [Occ=Once] ->
                                                                      case
                                                                          ==# [dt13_sb7kO
                                                                               dt14_sb7kP]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            GHC.IO.Handle.Text.hGetBuf4
                                                                                wild2_sb7kd
                                                                                wild4_sb7kJ
                                                                                w1_sb7k5
                                                                                GHC.IO.Handle.Text.hGetBuf3
                                                                                wild1_sb7ka
                                                                                ipv2_sb7kH;
                                                                        1# ->
                                                                            GHC.IO.Handle.Text.hGetBuf2
                                                                                wild2_sb7kd
                                                                                wild4_sb7kJ
                                                                                w1_sb7k5
                                                                                GHC.IO.Handle.Text.hGetBuf3
                                                                                wild1_sb7ka
                                                                                ipv2_sb7kH;
                                                                      };
                                                                };
                                                          };
                                                } in 
                                                  case ds11_sb7kA of {
                                                    GHC.IO.Buffer.ReadBuffer ->
                                                        case ==# [dt7_sb7kC dt8_sb7kD] of {
                                                          __DEFAULT ->
                                                              case
                                                                  readMutVar# [dt1_sb7kl ipv_sb7kv]
                                                              of
                                                              { (#,#) ipv2_sb7kU [Occ=Once]
                                                                      ipv3_sb7kV [Occ=Once!] ->
                                                                    case ipv3_sb7kV of {
                                                                      (,) codec_state_sb7kX [Occ=Once]
                                                                          bbuf0_sb7kY [Occ=Once*] ->
                                                                          case
                                                                              readMutVar# [dt2_sb7km
                                                                                           ipv2_sb7kU]
                                                                          of
                                                                          { (#,#) ipv4_sb7l0 [Occ=Once]
                                                                                  ipv5_sb7l1 ->
                                                                                let {
                                                                                  sat_sb7l9 [Occ=Once]
                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                         GHC.IO.Buffer.CharBufElem
                                                                                  [LclId] =
                                                                                      [ipv5_sb7l1] \u []
                                                                                          case
                                                                                              ipv5_sb7l1
                                                                                          of
                                                                                          { GHC.IO.Buffer.Buffer dt9_sb7l3 [Occ=Once]
                                                                                                                 dt10_sb7l4 [Occ=Once]
                                                                                                                 ds14_sb7l5 [Occ=Once]
                                                                                                                 dt11_sb7l6 [Occ=Once]
                                                                                                                 _ [Occ=Dead]
                                                                                                                 _ [Occ=Dead] ->
                                                                                                GHC.IO.Buffer.Buffer [dt9_sb7l3
                                                                                                                      dt10_sb7l4
                                                                                                                      ds14_sb7l5
                                                                                                                      dt11_sb7l6
                                                                                                                      0#
                                                                                                                      0#];
                                                                                          };
                                                                                } in 
                                                                                  case
                                                                                      writeMutVar# [dt2_sb7km
                                                                                                    sat_sb7l9
                                                                                                    ipv4_sb7l0]
                                                                                  of
                                                                                  s2#_sb7la
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            ipv5_sb7l1
                                                                                        of
                                                                                        { GHC.IO.Buffer.Buffer dt9_sb7lc [Occ=Once]
                                                                                                               dt10_sb7ld [Occ=Once]
                                                                                                               ds14_sb7le [Occ=Once]
                                                                                                               _ [Occ=Dead]
                                                                                                               dt12_sb7lg [Occ=Once!]
                                                                                                               _ [Occ=Dead] ->
                                                                                              case
                                                                                                  dt12_sb7lg
                                                                                              of
                                                                                              wild7_sb7li
                                                                                              { __DEFAULT ->
                                                                                                    case
                                                                                                        ds4_sb7kp
                                                                                                    of
                                                                                                    { GHC.Base.Nothing ->
                                                                                                          let {
                                                                                                            sat_sb7ls [Occ=Once]
                                                                                                              :: GHC.IO.Buffer.Buffer
                                                                                                                   GHC.Word.Word8
                                                                                                            [LclId] =
                                                                                                                [bbuf0_sb7kY
                                                                                                                 wild7_sb7li] \u []
                                                                                                                    case
                                                                                                                        bbuf0_sb7kY
                                                                                                                    of
                                                                                                                    { GHC.IO.Buffer.Buffer dt14_sb7ll [Occ=Once]
                                                                                                                                           dt15_sb7lm [Occ=Once]
                                                                                                                                           ds15_sb7ln [Occ=Once]
                                                                                                                                           dt16_sb7lo [Occ=Once]
                                                                                                                                           dt17_sb7lp [Occ=Once]
                                                                                                                                           dt18_sb7lq [Occ=Once] ->
                                                                                                                          case
                                                                                                                              +# [dt17_sb7lp
                                                                                                                                  wild7_sb7li]
                                                                                                                          of
                                                                                                                          sat_sb7lr
                                                                                                                          { __DEFAULT ->
                                                                                                                                GHC.IO.Buffer.Buffer [dt14_sb7ll
                                                                                                                                                      dt15_sb7lm
                                                                                                                                                      ds15_sb7ln
                                                                                                                                                      dt16_sb7lo
                                                                                                                                                      sat_sb7lr
                                                                                                                                                      dt18_sb7lq];
                                                                                                                          };
                                                                                                                    };
                                                                                                          } in 
                                                                                                            case
                                                                                                                writeMutVar# [dt_sb7kj
                                                                                                                              sat_sb7ls
                                                                                                                              s2#_sb7la]
                                                                                                            of
                                                                                                            s2#1_sb7lt
                                                                                                            { __DEFAULT ->
                                                                                                                  $w$j_sb7kE
                                                                                                                      s2#1_sb7lt;
                                                                                                            };
                                                                                                      GHC.Base.Just decoder_sb7lu [Occ=Once!] ->
                                                                                                          case
                                                                                                              decoder_sb7lu
                                                                                                          of
                                                                                                          { GHC.IO.Encoding.Types.BufferCodec ds15_sb7lw [Occ=Once]
                                                                                                                                              ds16_sb7lx [Occ=Once]
                                                                                                                                              _ [Occ=Dead]
                                                                                                                                              _ [Occ=Dead]
                                                                                                                                              ds19_sb7lA [Occ=Once!] ->
                                                                                                                case
                                                                                                                    ds19_sb7lA
                                                                                                                        codec_state_sb7kX
                                                                                                                        s2#_sb7la
                                                                                                                of
                                                                                                                { (#,#) ipv6_sb7lC [Occ=Once]
                                                                                                                        _ [Occ=Dead] ->
                                                                                                                      let {
                                                                                                                        sat_sb7lE [Occ=Once]
                                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                                                        [LclId] =
                                                                                                                            CCCS GHC.IO.Buffer.Buffer! [dt9_sb7lc
                                                                                                                                                        dt10_sb7ld
                                                                                                                                                        ds14_sb7le
                                                                                                                                                        wild7_sb7li
                                                                                                                                                        0#
                                                                                                                                                        0#];
                                                                                                                      } in 
                                                                                                                        case
                                                                                                                            GHC.IO.Handle.Internals.$wstreamEncode
                                                                                                                                ds15_sb7lw
                                                                                                                                ds16_sb7lx
                                                                                                                                bbuf0_sb7kY
                                                                                                                                sat_sb7lE
                                                                                                                                ipv6_sb7lC
                                                                                                                        of
                                                                                                                        { (#,#) ipv8_sb7lG [Occ=Once]
                                                                                                                                ipv9_sb7lH [Occ=Once!] ->
                                                                                                                              case
                                                                                                                                  ipv9_sb7lH
                                                                                                                              of
                                                                                                                              { (,) bbuf1_sb7lJ [Occ=Once]
                                                                                                                                    _ [Occ=Dead] ->
                                                                                                                                    case
                                                                                                                                        writeMutVar# [dt_sb7kj
                                                                                                                                                      bbuf1_sb7lJ
                                                                                                                                                      ipv8_sb7lG]
                                                                                                                                    of
                                                                                                                                    s2#1_sb7lL
                                                                                                                                    { __DEFAULT ->
                                                                                                                                          $w$j_sb7kE
                                                                                                                                              s2#1_sb7lL;
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                };
                                                                                                          };
                                                                                                    };
                                                                                                0# ->
                                                                                                    case
                                                                                                        writeMutVar# [dt_sb7kj
                                                                                                                      bbuf0_sb7kY
                                                                                                                      s2#_sb7la]
                                                                                                    of
                                                                                                    s2#1_sb7lM
                                                                                                    { __DEFAULT ->
                                                                                                          $w$j_sb7kE
                                                                                                              s2#1_sb7lM;
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                          };
                                                                    };
                                                              };
                                                          1# -> $w$j_sb7kE ipv_sb7kv;
                                                        };
                                                    GHC.IO.Buffer.WriteBuffer ->
                                                        $w$j_sb7kE ipv_sb7kv;
                                                  };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.Handle.Internals.wantReadableHandle_1
                          GHC.IO.Handle.Text.hGetBuf5 w_sb7k4 sat_sb7lN w2_sb7k7;
                1# ->
                    GHC.IO.Handle.Text.$willegalBufferSize
                        w_sb7k4 GHC.IO.Handle.Text.hGetBuf5 wild_sb7k8 w2_sb7k7;
              };
          0# -> (#,#) [w2_sb7k7 GHC.IO.Handle.Text.hGetBuf3];
        };

GHC.IO.Handle.Text.hGetBuf1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb7lO w1_sb7lP w2_sb7lQ w3_sb7lR]
        case w2_sb7lQ of {
          GHC.Types.I# ww1_sb7lT [Occ=Once] ->
              GHC.IO.Handle.Text.$whGetBuf w_sb7lO w1_sb7lP ww1_sb7lT w3_sb7lR;
        };

GHC.IO.Handle.Text.hGetBuf
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Handle.Text.hGetBuf1 eta_B4 eta_B3 eta_B2 eta_B1;

lvl14_rb6WU :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "error"#;

lvl15_rb6WV :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl14_rb6WU;

lvl16_rb6WW :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.$trModule4;

lvl17_rb6WX :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.$trModule2;

lvl18_rb6WY :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "./GHC/IO/Handle/Text.hs"#;

lvl19_rb6WZ :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl18_rb6WY;

lvl20_rb6X0 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [785#];

lvl21_rb6X1 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [17#];

lvl22_rb6X2 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [38#];

lvl23_rb6X3 :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl16_rb6WW
                                           lvl17_rb6WX
                                           lvl19_rb6WZ
                                           lvl20_rb6X0
                                           lvl21_rb6X1
                                           lvl20_rb6X0
                                           lvl22_rb6X2];

lvl24_rb6X4 :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl15_rb6WV
                                                  lvl23_rb6X3
                                                  GHC.Stack.Types.EmptyCallStack];

lvl25_rb6X5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Todo: hPutBuf"#;

lvl26_rb6X6 :: GHC.Types.IO ()
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl25_rb6X5 of sat_sb7lU {
          __DEFAULT -> GHC.Err.error lvl24_rb6X4 sat_sb7lU;
        };

lvl27_rb6X7 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [790#];

lvl28_rb6X8 :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl16_rb6WW
                                           lvl17_rb6WX
                                           lvl19_rb6WZ
                                           lvl27_rb6X7
                                           lvl21_rb6X1
                                           lvl27_rb6X7
                                           lvl22_rb6X2];

lvl29_rb6X9 :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl15_rb6WV
                                                  lvl28_rb6X8
                                                  GHC.Stack.Types.EmptyCallStack];

lvl30_rb6Xa :: GHC.Types.IO GHC.Types.Int
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl25_rb6X5 of sat_sb7lV {
          __DEFAULT -> GHC.Err.error lvl29_rb6X9 sat_sb7lV;
        };

GHC.IO.Handle.Text.$wbufWrite [InlPrag=NOUSERINLINE[0],
                               Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=5,
 Str=<S,1*U><L,1*U(U)><S,U><L,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb7lW w1_sb7lX ww_sb7lY w2_sb7lZ w3_sb7m0]
        case w_sb7lW of wild_sb7m1 {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       $dBufferedIO_sb7m3
                                       $dTypeable_sb7m4 [Occ=Once*]
                                       ds_sb7m5 [Occ=Once]
                                       _ [Occ=Dead]
                                       dt_sb7m7
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case ds_sb7m5 of ww1_sb7mi {
                GHC.IO.FD.FD ww2_sb7mj [Occ=Once*] ww3_sb7mk [Occ=Once*] ->
                    case readMutVar# [dt_sb7m7 w3_sb7m0] of {
                      (#,#) ipv_sb7mm ipv1_sb7mn [Occ=Once!] ->
                          case ipv1_sb7mn of wild1_sb7mo {
                            GHC.IO.Buffer.Buffer dt4_sb7mp
                                                 dt5_sb7mq
                                                 ds10_sb7mr [Occ=Once*]
                                                 dt6_sb7ms
                                                 dt7_sb7mt [Occ=Once*]
                                                 dt8_sb7mu ->
                                let {
                                  v_sb7mv :: GHC.Types.Int
                                  [LclId, Unf=OtherCon []] =
                                      CCCS GHC.Types.I#! [ww_sb7lY];
                                } in 
                                  let-no-escape {
                                    $j_sb7mw [Occ=Once*T[0], Dmd=<L,1*U(U,U)>]
                                      :: (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                                    [LclId[JoinId(0)], Unf=OtherCon []] =
                                        [w1_sb7lX
                                         ww_sb7lY
                                         w2_sb7lZ
                                         wild_sb7m1
                                         $dBufferedIO_sb7m3
                                         $dTypeable_sb7m4
                                         dt_sb7m7
                                         ww1_sb7mi
                                         ww2_sb7mj
                                         ww3_sb7mk
                                         ipv_sb7mm
                                         wild1_sb7mo
                                         dt6_sb7ms
                                         dt8_sb7mu
                                         v_sb7mv] \r []
                                            let-no-escape {
                                              $w$j_sb7mx [InlPrag=NOUSERINLINE[0],
                                                          Occ=Once*!T[1],
                                                          Dmd=<L,1*C1(U(U,U))>]
                                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         GHC.Types.Int #)
                                              [LclId[JoinId(1)],
                                               Arity=1,
                                               Str=<S,U>,
                                               Unf=OtherCon []] =
                                                  sat-only [w1_sb7lX
                                                            ww_sb7lY
                                                            w2_sb7lZ
                                                            wild_sb7m1
                                                            $dTypeable_sb7m4
                                                            ww2_sb7mj
                                                            ww3_sb7mk
                                                            dt6_sb7ms
                                                            v_sb7mv] \r [w4_sb7my]
                                                      case <# [ww_sb7lY dt6_sb7ms] of {
                                                        __DEFAULT ->
                                                            case w2_sb7lZ of {
                                                              GHC.Types.False ->
                                                                  case
                                                                      Data.Typeable.Internal.sameTypeRep
                                                                          $dTypeable_sb7m4
                                                                          lvl11_rb6WR
                                                                  of
                                                                  { GHC.Types.False -> lvl30_rb6Xa;
                                                                    GHC.Types.True ->
                                                                        case w1_sb7lX of {
                                                                          GHC.Ptr.Ptr ww5_sb7mE [Occ=Once] ->
                                                                              GHC.IO.FD.$w$cwriteNonBlocking
                                                                                  ww2_sb7mj
                                                                                  ww3_sb7mk
                                                                                  ww5_sb7mE
                                                                                  ww_sb7lY
                                                                                  w4_sb7my;
                                                                        };
                                                                  };
                                                              GHC.Types.True ->
                                                                  case
                                                                      Data.Typeable.Internal.sameTypeRep
                                                                          $dTypeable_sb7m4
                                                                          lvl11_rb6WR
                                                                  of
                                                                  { GHC.Types.False -> lvl26_rb6X6;
                                                                    GHC.Types.True ->
                                                                        case w1_sb7lX of {
                                                                          GHC.Ptr.Ptr ww5_sb7mI [Occ=Once] ->
                                                                              case
                                                                                  GHC.IO.FD.$wfdWrite
                                                                                      ww2_sb7mj
                                                                                      ww3_sb7mk
                                                                                      ww5_sb7mI
                                                                                      ww_sb7lY
                                                                                      w4_sb7my
                                                                              of
                                                                              { (#,#) ipv2_sb7mK [Occ=Once]
                                                                                      _ [Occ=Dead] ->
                                                                                    (#,#) [ipv2_sb7mK
                                                                                           v_sb7mv];
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                        1# ->
                                                            GHC.IO.Handle.Text.$wbufWrite
                                                                wild_sb7m1
                                                                w1_sb7lX
                                                                ww_sb7lY
                                                                w2_sb7lZ
                                                                w4_sb7my;
                                                      };
                                            } in 
                                              case ># [dt8_sb7mu 0#] of {
                                                __DEFAULT -> $w$j_sb7mx ipv_sb7mm;
                                                1# ->
                                                    case
                                                        GHC.IO.BufferedIO.flushWriteBuffer
                                                            $dBufferedIO_sb7m3
                                                            ww1_sb7mi
                                                            wild1_sb7mo
                                                            ipv_sb7mm
                                                    of
                                                    { (#,#) ipv2_sb7mO [Occ=Once]
                                                            ipv3_sb7mP [Occ=Once] ->
                                                          case
                                                              writeMutVar# [dt_sb7m7
                                                                            ipv3_sb7mP
                                                                            ipv2_sb7mO]
                                                          of
                                                          s2#_sb7mQ
                                                          { __DEFAULT -> $w$j_sb7mx s2#_sb7mQ;
                                                          };
                                                    };
                                              };
                                  } in 
                                    case <# [ww_sb7lY dt6_sb7ms] of {
                                      __DEFAULT -> $j_sb7mw;
                                      1# ->
                                          case -# [dt6_sb7ms dt8_sb7mu] of sat_sb7mS {
                                            __DEFAULT ->
                                                case <=# [ww_sb7lY sat_sb7mS] of {
                                                  __DEFAULT -> $j_sb7mw;
                                                  1# ->
                                                      case w1_sb7lX of {
                                                        GHC.Ptr.Ptr ds12_sb7mV [Occ=Once] ->
                                                            case int2Word# [ww_sb7lY] of sat_sb7mY {
                                                              __DEFAULT ->
                                                                  case
                                                                      plusAddr# [dt4_sb7mp
                                                                                 dt8_sb7mu]
                                                                  of
                                                                  sat_sb7mX
                                                                  { __DEFAULT ->
                                                                        case
                                                                            __pkg_ccall base-4.11.0.0 [sat_sb7mX
                                                                                                       ds12_sb7mV
                                                                                                       sat_sb7mY
                                                                                                       ipv_sb7mm]
                                                                        of
                                                                        { (#,#) ds13_sb7n0 [Occ=Once]
                                                                                _ [Occ=Dead] ->
                                                                              case
                                                                                  touch# [dt5_sb7mq
                                                                                          ds13_sb7n0]
                                                                              of
                                                                              s'_sb7n2
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        -# [dt6_sb7ms
                                                                                            dt8_sb7mu]
                                                                                    of
                                                                                    sat_sb7n3
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              ==# [ww_sb7lY
                                                                                                   sat_sb7n3]
                                                                                          of
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    +# [dt8_sb7mu
                                                                                                        ww_sb7lY]
                                                                                                of
                                                                                                sat_sb7n5
                                                                                                { __DEFAULT ->
                                                                                                      let {
                                                                                                        sat_sb7n6 [Occ=Once]
                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                               GHC.Word.Word8
                                                                                                        [LclId] =
                                                                                                            CCCS GHC.IO.Buffer.Buffer! [dt4_sb7mp
                                                                                                                                        dt5_sb7mq
                                                                                                                                        ds10_sb7mr
                                                                                                                                        dt6_sb7ms
                                                                                                                                        dt7_sb7mt
                                                                                                                                        sat_sb7n5];
                                                                                                      } in 
                                                                                                        case
                                                                                                            writeMutVar# [dt_sb7m7
                                                                                                                          sat_sb7n6
                                                                                                                          s'_sb7n2]
                                                                                                        of
                                                                                                        s2#_sb7n7
                                                                                                        { __DEFAULT ->
                                                                                                              (#,#) [s2#_sb7n7
                                                                                                                     v_sb7mv];
                                                                                                        };
                                                                                                };
                                                                                            1# ->
                                                                                                case
                                                                                                    +# [dt8_sb7mu
                                                                                                        ww_sb7lY]
                                                                                                of
                                                                                                sat_sb7n8
                                                                                                { __DEFAULT ->
                                                                                                      let {
                                                                                                        sat_sb7n9 [Occ=Once]
                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                               GHC.Word.Word8
                                                                                                        [LclId] =
                                                                                                            CCCS GHC.IO.Buffer.Buffer! [dt4_sb7mp
                                                                                                                                        dt5_sb7mq
                                                                                                                                        ds10_sb7mr
                                                                                                                                        dt6_sb7ms
                                                                                                                                        dt7_sb7mt
                                                                                                                                        sat_sb7n8];
                                                                                                      } in 
                                                                                                        case
                                                                                                            GHC.IO.BufferedIO.flushWriteBuffer
                                                                                                                $dBufferedIO_sb7m3
                                                                                                                ww1_sb7mi
                                                                                                                sat_sb7n9
                                                                                                                s'_sb7n2
                                                                                                        of
                                                                                                        { (#,#) ipv2_sb7nb [Occ=Once]
                                                                                                                ipv3_sb7nc [Occ=Once] ->
                                                                                                              case
                                                                                                                  writeMutVar# [dt_sb7m7
                                                                                                                                ipv3_sb7nc
                                                                                                                                ipv2_sb7nb]
                                                                                                              of
                                                                                                              s2#_sb7nd
                                                                                                              { __DEFAULT ->
                                                                                                                    (#,#) [s2#_sb7nd
                                                                                                                           v_sb7mv];
                                                                                                              };
                                                                                                        };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                          };
                    };
              };
        };

GHC.IO.Handle.Text.hPutBuf4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hPutBuf"#;

GHC.IO.Handle.Text.hPutBuf3 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hPutBuf4;

GHC.IO.Handle.Text.$whPutBuf' [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=5,
 Str=<L,U><L,U(U)><S,1*U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb7ne w1_sb7nf ww_sb7ng w2_sb7nh w3_sb7ni]
        case ww_sb7ng of wild_sb7nj {
          __DEFAULT ->
              case <# [wild_sb7nj 0#] of {
                __DEFAULT ->
                    let {
                      act_sb7nl [Occ=Once*, Dmd=<L,C(C1(U(U,U)))>]
                        :: GHC.IO.Handle.Types.Handle__
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                      [LclId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
                          [w1_sb7nf w2_sb7nh wild_sb7nj] \r [h__sb7nm eta_sb7nn]
                              case h__sb7nm of wild1_sb7no {
                                GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                             $dBufferedIO_sb7nq [Occ=Once]
                                                             _ [Occ=Dead]
                                                             ds_sb7ns [Occ=Once]
                                                             _ [Occ=Dead]
                                                             dt_sb7nu
                                                             ds2_sb7nv [Occ=Once!]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                    case
                                        GHC.IO.Handle.Text.$wbufWrite
                                            wild1_sb7no w1_sb7nf wild_sb7nj w2_sb7nh eta_sb7nn
                                    of
                                    ds9_sb7nF
                                    { (#,#) ipv_sb7nG [Occ=Once] ipv1_sb7nH [Occ=Once*] ->
                                          case ds2_sb7nv of {
                                            __DEFAULT ->
                                                case readMutVar# [dt_sb7nu ipv_sb7nG] of {
                                                  (#,#) ipv2_sb7nK [Occ=Once*]
                                                        ipv3_sb7nL [Occ=Once!] ->
                                                      case ipv3_sb7nL of {
                                                        GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                             _ [Occ=Dead]
                                                                             ds11_sb7nP [Occ=Once!]
                                                                             _ [Occ=Dead]
                                                                             _ [Occ=Dead]
                                                                             _ [Occ=Dead] ->
                                                            case ds11_sb7nP of {
                                                              GHC.IO.Buffer.ReadBuffer ->
                                                                  (#,#) [ipv2_sb7nK ipv1_sb7nH];
                                                              GHC.IO.Buffer.WriteBuffer ->
                                                                  case
                                                                      readMutVar# [dt_sb7nu
                                                                                   ipv2_sb7nK]
                                                                  of
                                                                  { (#,#) ipv4_sb7nV [Occ=Once*]
                                                                          ipv5_sb7nW [Occ=Once!] ->
                                                                        case
                                                                            ipv5_sb7nW
                                                                        of
                                                                        wild5_sb7nX
                                                                        { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                               _ [Occ=Dead]
                                                                                               _ [Occ=Dead]
                                                                                               _ [Occ=Dead]
                                                                                               dt12_sb7o2 [Occ=Once]
                                                                                               dt13_sb7o3 [Occ=Once] ->
                                                                              case
                                                                                  ==# [dt12_sb7o2
                                                                                       dt13_sb7o3]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        GHC.IO.BufferedIO.flushWriteBuffer
                                                                                            $dBufferedIO_sb7nq
                                                                                            ds_sb7ns
                                                                                            wild5_sb7nX
                                                                                            ipv4_sb7nV
                                                                                    of
                                                                                    { (#,#) ipv6_sb7o6 [Occ=Once]
                                                                                            ipv7_sb7o7 [Occ=Once] ->
                                                                                          case
                                                                                              writeMutVar# [dt_sb7nu
                                                                                                            ipv7_sb7o7
                                                                                                            ipv6_sb7o6]
                                                                                          of
                                                                                          s2#_sb7o8
                                                                                          { __DEFAULT ->
                                                                                                (#,#) [s2#_sb7o8
                                                                                                       ipv1_sb7nH];
                                                                                          };
                                                                                    };
                                                                                1# ->
                                                                                    (#,#) [ipv4_sb7nV
                                                                                           ipv1_sb7nH];
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                            GHC.IO.Handle.Types.BlockBuffering _ [Occ=Dead] ->
                                                ds9_sb7nF;
                                          };
                                    };
                              };
                    } in 
                      case w_sb7ne of wild1_sb7oa {
                        GHC.IO.Handle.Types.FileHandle _ [Occ=Dead] dt_sb7oc [Occ=Once] ->
                            GHC.IO.Handle.Internals.$wwantWritableHandle'
                                GHC.IO.Handle.Text.hPutBuf3
                                wild1_sb7oa
                                dt_sb7oc
                                act_sb7nl
                                w3_sb7ni;
                        GHC.IO.Handle.Types.DuplexHandle _ [Occ=Dead]
                                                         _ [Occ=Dead]
                                                         dt1_sb7of [Occ=Once] ->
                            GHC.IO.Handle.Internals.$wwantWritableHandle'
                                GHC.IO.Handle.Text.hPutBuf3
                                wild1_sb7oa
                                dt1_sb7of
                                act_sb7nl
                                w3_sb7ni;
                      };
                1# ->
                    GHC.IO.Handle.Text.$willegalBufferSize
                        w_sb7ne GHC.IO.Handle.Text.hPutBuf3 wild_sb7nj w3_sb7ni;
              };
          0# -> (#,#) [w3_sb7ni GHC.IO.Handle.Text.hGetBuf3];
        };

GHC.IO.Handle.Text.hPutBuf2 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=5,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb7og w1_sb7oh w2_sb7oi w3_sb7oj w4_sb7ok]
        case w2_sb7oi of {
          GHC.Types.I# ww1_sb7om [Occ=Once] ->
              GHC.IO.Handle.Text.$whPutBuf'
                  w_sb7og w1_sb7oh ww1_sb7om w3_sb7oj w4_sb7ok;
        };

GHC.IO.Handle.Text.hPutBufNonBlocking1
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [h_sb7on ptr_sb7oo count_sb7op w_sb7oq]
        case count_sb7op of {
          GHC.Types.I# ww1_sb7os [Occ=Once] ->
              GHC.IO.Handle.Text.$whPutBuf'
                  h_sb7on ptr_sb7oo ww1_sb7os GHC.Types.False w_sb7oq;
        };

GHC.IO.Handle.Text.hPutBufNonBlocking
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Handle.Text.hPutBufNonBlocking1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.Handle.Text.hPutBuf1
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [h_sb7ot ptr_sb7ou count_sb7ov s_sb7ow]
        case count_sb7ov of {
          GHC.Types.I# ww1_sb7oy [Occ=Once] ->
              case
                  GHC.IO.Handle.Text.$whPutBuf'
                      h_sb7ot ptr_sb7ou ww1_sb7oy GHC.Types.True s_sb7ow
              of
              { (#,#) ipv_sb7oA [Occ=Once] _ [Occ=Dead] ->
                    (#,#) [ipv_sb7oA GHC.Tuple.()];
              };
        };

GHC.IO.Handle.Text.hPutBuf
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Handle.Text.hPutBuf1 eta_B4 eta_B3 eta_B2 eta_B1;

lvl31_rb6Xb :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "\n"#;

lvl32_rb6Xc :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl31_rb6Xb;

GHC.IO.Handle.Text.$wwriteBlocks [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.IO.Handle.Types.Newline
     -> GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.Prim.Int#
     -> GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=9,
 Str=<S,U><L,U><L,1*U><L,U><L,U><L,U><L,U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb7oC
           w1_sb7oD
           w2_sb7oE
           w3_sb7oF
           ww_sb7oG
           ww1_sb7oH
           ww2_sb7oI
           w4_sb7oJ
           w5_sb7oK]
        let {
          sat_sb7r5 [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
          [LclId] =
              [w2_sb7oE] \s []
                  case w2_sb7oE of {
                    GHC.Types.False -> [] [];
                    GHC.Types.True -> lvl32_rb6Xc;
                  };
        } in 
          let-no-escape {
            exit_sb7oL [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
              :: GHC.Prim.Int#
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
            [LclId[JoinId(2)], Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
                sat-only [w_sb7oC ww_sb7oG ww1_sb7oH ww2_sb7oI] \r [ww3_sb7oM
                                                                    w6_sb7oN]
                    let {
                      raw_sb7oO [Occ=OnceL]
                        :: GHC.IO.Buffer.RawBuffer GHC.IO.Buffer.CharBufElem
                      [LclId, Unf=OtherCon []] =
                          CCCS GHC.ForeignPtr.ForeignPtr! [ww_sb7oG ww1_sb7oH]; } in
                    let {
                      sat_sb7pr [Occ=Once]
                        :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO ()
                      [LclId] =
                          [ww_sb7oG ww1_sb7oH ww2_sb7oI ww3_sb7oM raw_sb7oO] \r [h__sb7oP
                                                                                 eta_sb7oQ]
                              case h__sb7oP of wild_sb7oR {
                                GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             dt2_sb7p0 [Occ=Once]
                                                             dt3_sb7p1
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                    case
                                        GHC.IO.Handle.Internals.$wwriteCharBuffer
                                            wild_sb7oR
                                            ww_sb7oG
                                            ww1_sb7oH
                                            GHC.IO.Buffer.WriteBuffer
                                            ww2_sb7oI
                                            0#
                                            ww3_sb7oM
                                            eta_sb7oQ
                                    of
                                    { (#,#) ipv_sb7p9 [Occ=Once] _ [Occ=Dead] ->
                                          case readMutVar# [dt2_sb7p0 ipv_sb7p9] of {
                                            (#,#) ipv2_sb7pc [Occ=Once*] ipv3_sb7pd [Occ=Once!] ->
                                                case ipv3_sb7pd of {
                                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                       _ [Occ=Dead]
                                                                       _ [Occ=Dead]
                                                                       dt6_sb7pi [Occ=Once]
                                                                       _ [Occ=Dead]
                                                                       _ [Occ=Dead] ->
                                                      case ==# [ww2_sb7oI dt6_sb7pi] of {
                                                        __DEFAULT ->
                                                            (#,#) [ipv2_sb7pc GHC.Tuple.()];
                                                        1# ->
                                                            case
                                                                readMutVar# [dt3_sb7p1 ipv2_sb7pc]
                                                            of
                                                            { (#,#) ipv4_sb7pn [Occ=Once]
                                                                    ipv5_sb7po [Occ=Once] ->
                                                                  let {
                                                                    sat_sb7pp [Occ=Once]
                                                                      :: GHC.IO.Handle.Types.BufferList
                                                                           GHC.IO.Buffer.CharBufElem
                                                                    [LclId] =
                                                                        CCCS GHC.IO.Handle.Types.BufferListCons! [raw_sb7oO
                                                                                                                  ipv5_sb7po];
                                                                  } in 
                                                                    case
                                                                        writeMutVar# [dt3_sb7p1
                                                                                      sat_sb7pp
                                                                                      ipv4_sb7pn]
                                                                    of
                                                                    s2#_sb7pq
                                                                    { __DEFAULT ->
                                                                          (#,#) [s2#_sb7pq
                                                                                 GHC.Tuple.()];
                                                                    };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.Handle.Internals.wantWritableHandle1
                          lvl2_rb6WE w_sb7oC sat_sb7pr w6_sb7oN;
          } in 
            let-no-escape {
              $wshoveString_sb7ps [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[4]]
                :: GHC.Prim.Int#
                   -> [GHC.Types.Char]
                   -> [GHC.Types.Char]
                   -> GHC.Prim.State# GHC.Prim.RealWorld
                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
              [LclId[JoinId(4)],
               Arity=4,
               Str=<S,U><S,1*U><L,1*U><S,U>,
               Unf=OtherCon []] =
                  sat-only [w_sb7oC
                            w1_sb7oD
                            w3_sb7oF
                            ww_sb7oG
                            ww1_sb7oH
                            ww2_sb7oI
                            exit_sb7oL
                            $wshoveString_sb7ps] \r [ww3_sb7pt w6_sb7pu w7_sb7pv w8_sb7pw]
                      case w6_sb7pu of wild_sb7px {
                        [] ->
                            case w7_sb7pv of wild1_sb7py {
                              [] -> exit_sb7oL ww3_sb7pt w8_sb7pw;
                              : _ [Occ=Dead] _ [Occ=Dead] ->
                                  $wshoveString_sb7ps ww3_sb7pt wild1_sb7py GHC.Types.[] w8_sb7pw;
                            };
                        : c_sb7pB [Occ=Once!] cs_sb7pC [Occ=Once*] ->
                            case +# [ww3_sb7pt 1#] of sat_sb7pD {
                              __DEFAULT ->
                                  case >=# [sat_sb7pD ww2_sb7oI] of {
                                    __DEFAULT ->
                                        case c_sb7pB of {
                                          GHC.Types.C# x_sb7pG [Occ=Once!] ->
                                              case x_sb7pG of wild2_sb7pH {
                                                __DEFAULT ->
                                                    case
                                                        writeWideCharOffAddr# [ww_sb7oG
                                                                               ww3_sb7pt
                                                                               wild2_sb7pH
                                                                               w8_sb7pw]
                                                    of
                                                    s2_sb7pI
                                                    { __DEFAULT ->
                                                          case
                                                              touch# [ww1_sb7oH s2_sb7pI]
                                                          of
                                                          s'_sb7pJ
                                                          { __DEFAULT ->
                                                                case
                                                                    +# [ww3_sb7pt 1#]
                                                                of
                                                                sat_sb7pK
                                                                { __DEFAULT ->
                                                                      $wshoveString_sb7ps
                                                                          sat_sb7pK
                                                                          cs_sb7pC
                                                                          w7_sb7pv
                                                                          s'_sb7pJ;
                                                                };
                                                          };
                                                    };
                                                '\n'# ->
                                                    let-no-escape {
                                                      $w$j_sb7pL [InlPrag=NOUSERINLINE[0],
                                                                  Occ=Once*!T[2],
                                                                  Dmd=<C(C(S)),1*C1(C1(U(U,U)))>]
                                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                                           -> GHC.Prim.Int#
                                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                 () #)
                                                      [LclId[JoinId(2)],
                                                       Arity=2,
                                                       Str=<S,U><L,U>,
                                                       Unf=OtherCon []] =
                                                          sat-only [w_sb7oC
                                                                    w1_sb7oD
                                                                    ww_sb7oG
                                                                    ww1_sb7oH
                                                                    ww2_sb7oI
                                                                    $wshoveString_sb7ps
                                                                    w7_sb7pv
                                                                    cs_sb7pC] \r [w9_sb7pM
                                                                                  ww4_sb7pN]
                                                              case w1_sb7oD of {
                                                                GHC.Types.False ->
                                                                    $wshoveString_sb7ps
                                                                        ww4_sb7pN
                                                                        cs_sb7pC
                                                                        w7_sb7pv
                                                                        w9_sb7pM;
                                                                GHC.Types.True ->
                                                                    let {
                                                                      sat_sb7qq [Occ=Once]
                                                                        :: GHC.IO.Handle.Types.Handle__
                                                                           -> GHC.Types.IO ()
                                                                      [LclId] =
                                                                          [ww_sb7oG
                                                                           ww1_sb7oH
                                                                           ww2_sb7oI
                                                                           ww4_sb7pN] \r [h__sb7pP
                                                                                          eta_sb7pQ]
                                                                              case
                                                                                  h__sb7pP
                                                                              of
                                                                              wild4_sb7pR
                                                                              { GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                                                                             $dBufferedIO_sb7pT [Occ=Once]
                                                                                                             _ [Occ=Dead]
                                                                                                             ds_sb7pV [Occ=Once]
                                                                                                             _ [Occ=Dead]
                                                                                                             dt_sb7pX
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead] ->
                                                                                    case
                                                                                        GHC.IO.Handle.Internals.$wwriteCharBuffer
                                                                                            wild4_sb7pR
                                                                                            ww_sb7oG
                                                                                            ww1_sb7oH
                                                                                            GHC.IO.Buffer.WriteBuffer
                                                                                            ww2_sb7oI
                                                                                            0#
                                                                                            ww4_sb7pN
                                                                                            eta_sb7pQ
                                                                                    of
                                                                                    { (#,#) ipv_sb7q9 [Occ=Once]
                                                                                            _ [Occ=Dead] ->
                                                                                          case
                                                                                              readMutVar# [dt_sb7pX
                                                                                                           ipv_sb7q9]
                                                                                          of
                                                                                          { (#,#) ipv2_sb7qc [Occ=Once*]
                                                                                                  ipv3_sb7qd [Occ=Once!] ->
                                                                                                case
                                                                                                    ipv3_sb7qd
                                                                                                of
                                                                                                wild5_sb7qe
                                                                                                { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       dt7_sb7qj [Occ=Once]
                                                                                                                       dt8_sb7qk [Occ=Once] ->
                                                                                                      case
                                                                                                          ==# [dt7_sb7qj
                                                                                                               dt8_sb7qk]
                                                                                                      of
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                GHC.IO.BufferedIO.flushWriteBuffer
                                                                                                                    $dBufferedIO_sb7pT
                                                                                                                    ds_sb7pV
                                                                                                                    wild5_sb7qe
                                                                                                                    ipv2_sb7qc
                                                                                                            of
                                                                                                            { (#,#) ipv4_sb7qn [Occ=Once]
                                                                                                                    ipv5_sb7qo [Occ=Once] ->
                                                                                                                  case
                                                                                                                      writeMutVar# [dt_sb7pX
                                                                                                                                    ipv5_sb7qo
                                                                                                                                    ipv4_sb7qn]
                                                                                                                  of
                                                                                                                  s2#_sb7qp
                                                                                                                  { __DEFAULT ->
                                                                                                                        (#,#) [s2#_sb7qp
                                                                                                                               GHC.Tuple.()];
                                                                                                                  };
                                                                                                            };
                                                                                                        1# ->
                                                                                                            (#,#) [ipv2_sb7qc
                                                                                                                   GHC.Tuple.()];
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                    } in 
                                                                      case
                                                                          GHC.IO.Handle.Internals.wantWritableHandle1
                                                                              lvl2_rb6WE
                                                                              w_sb7oC
                                                                              sat_sb7qq
                                                                              w9_sb7pM
                                                                      of
                                                                      { (#,#) ipv_sb7qs [Occ=Once]
                                                                              _ [Occ=Dead] ->
                                                                            $wshoveString_sb7ps
                                                                                0#
                                                                                cs_sb7pC
                                                                                w7_sb7pv
                                                                                ipv_sb7qs;
                                                                      };
                                                              };
                                                    } in 
                                                      case w3_sb7oF of {
                                                        GHC.IO.Handle.Types.LF ->
                                                            case
                                                                writeWideCharOffAddr# [ww_sb7oG
                                                                                       ww3_sb7pt
                                                                                       '\n'#
                                                                                       w8_sb7pw]
                                                            of
                                                            s2_sb7qv
                                                            { __DEFAULT ->
                                                                  case
                                                                      touch# [ww1_sb7oH s2_sb7qv]
                                                                  of
                                                                  s'_sb7qw
                                                                  { __DEFAULT ->
                                                                        case
                                                                            +# [ww3_sb7pt 1#]
                                                                        of
                                                                        sat_sb7qx
                                                                        { __DEFAULT ->
                                                                              $w$j_sb7pL
                                                                                  s'_sb7qw
                                                                                  sat_sb7qx;
                                                                        };
                                                                  };
                                                            };
                                                        GHC.IO.Handle.Types.CRLF ->
                                                            case
                                                                writeWideCharOffAddr# [ww_sb7oG
                                                                                       ww3_sb7pt
                                                                                       '\r'#
                                                                                       w8_sb7pw]
                                                            of
                                                            s2_sb7qy
                                                            { __DEFAULT ->
                                                                  case
                                                                      touch# [ww1_sb7oH s2_sb7qy]
                                                                  of
                                                                  s'_sb7qz
                                                                  { __DEFAULT ->
                                                                        case
                                                                            +# [ww3_sb7pt 1#]
                                                                        of
                                                                        ipv1_sb7qA [Dmd=<S,U>]
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  writeWideCharOffAddr# [ww_sb7oG
                                                                                                         ipv1_sb7qA
                                                                                                         '\n'#
                                                                                                         s'_sb7qz]
                                                                              of
                                                                              s1_sb7qB
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        touch# [ww1_sb7oH
                                                                                                s1_sb7qB]
                                                                                    of
                                                                                    s'1_sb7qC
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              +# [ipv1_sb7qA
                                                                                                  1#]
                                                                                          of
                                                                                          sat_sb7qD
                                                                                          { __DEFAULT ->
                                                                                                $w$j_sb7pL
                                                                                                    s'1_sb7qC
                                                                                                    sat_sb7qD;
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                              };
                                        };
                                    1# ->
                                        let {
                                          sat_sb7r0 [Occ=Once]
                                            :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO ()
                                          [LclId] =
                                              [ww_sb7oG ww1_sb7oH ww2_sb7oI ww3_sb7pt] \r [h__sb7qE
                                                                                           eta_sb7qF]
                                                  case h__sb7qE of wild1_sb7qG {
                                                    GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead] ->
                                                        case
                                                            GHC.IO.Handle.Internals.$wwriteCharBuffer
                                                                wild1_sb7qG
                                                                ww_sb7oG
                                                                ww1_sb7oH
                                                                GHC.IO.Buffer.WriteBuffer
                                                                ww2_sb7oI
                                                                0#
                                                                ww3_sb7pt
                                                                eta_sb7qF
                                                        of
                                                        { (#,#) ipv_sb7qY [Occ=Once] _ [Occ=Dead] ->
                                                              (#,#) [ipv_sb7qY GHC.Tuple.()];
                                                        };
                                                  };
                                        } in 
                                          case
                                              GHC.IO.Handle.Internals.wantWritableHandle1
                                                  lvl2_rb6WE w_sb7oC sat_sb7r0 w8_sb7pw
                                          of
                                          { (#,#) ipv_sb7r2 [Occ=Once] _ [Occ=Dead] ->
                                                $wshoveString_sb7ps
                                                    0# wild_sb7px w7_sb7pv ipv_sb7r2;
                                          };
                                  };
                            };
                      };
            } in  $wshoveString_sb7ps 0# w4_sb7oJ sat_sb7r5 w5_sb7oK;

lvl33_rb6Xd :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "no buffer!"#;

GHC.IO.Handle.Text.hPutStr4 :: GHC.IO.Buffer.CharBuffer
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl33_rb6Xd of sat_sb7r6 {
          __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_sb7r6;
        };

GHC.IO.Handle.Text.hPutStr3
  :: (GHC.IO.Handle.Types.BufferMode, GHC.IO.Buffer.CharBuffer)
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE (,)! [GHC.IO.Handle.Types.NoBuffering
                        GHC.IO.Handle.Text.hPutStr4];

GHC.IO.Handle.Text.hPutStr2
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           ((GHC.IO.Handle.Types.BufferMode, GHC.IO.Buffer.CharBuffer),
            GHC.IO.Handle.Types.Newline) #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [h__sb7r7 s_sb7r8]
        case h__sb7r7 of {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       ds2_sb7rg [Occ=Once!]
                                       _ [Occ=Dead]
                                       dt2_sb7ri [Occ=Once]
                                       dt3_sb7rj
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       ds7_sb7ro [Occ=Once*]
                                       _ [Occ=Dead] ->
              case ds2_sb7rg of wild1_sb7rq {
                __DEFAULT ->
                    case readMutVar# [dt3_sb7rj s_sb7r8] of {
                      (#,#) ipv_sb7rs [Occ=Once] ipv1_sb7rt [Occ=Once!] ->
                          case readMutVar# [dt2_sb7ri ipv_sb7rs] of {
                            (#,#) ipv2_sb7rv [Occ=Once*] ipv3_sb7rw [Occ=Once*!] ->
                                case ipv1_sb7rt of {
                                  GHC.IO.Handle.Types.BufferListNil ->
                                      case ipv3_sb7rw of {
                                        GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             dt6_sb7rC
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                            case *# [dt6_sb7rC 4#] of x1_sb7rF [Dmd=<S,U>] {
                                              __DEFAULT ->
                                                  case <# [x1_sb7rF 0#] of {
                                                    __DEFAULT ->
                                                        case
                                                            newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                                        ipv2_sb7rv]
                                                        of
                                                        { (#,#) ipv4_sb7rI [Occ=Once]
                                                                ipv5_sb7rJ [Occ=Once] ->
                                                              case
                                                                  newPinnedByteArray# [x1_sb7rF
                                                                                       ipv4_sb7rI]
                                                              of
                                                              { (#,#) ipv6_sb7rL [Occ=Once]
                                                                      ipv7_sb7rM ->
                                                                    let {
                                                                      sat_sb7rO [Occ=Once]
                                                                        :: GHC.ForeignPtr.ForeignPtrContents
                                                                      [LclId] =
                                                                          CCCS GHC.ForeignPtr.MallocPtr! [ipv7_sb7rM
                                                                                                          ipv5_sb7rJ];
                                                                    } in 
                                                                      case
                                                                          byteArrayContents# [ipv7_sb7rM]
                                                                      of
                                                                      sat_sb7rN
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_sb7rP [Occ=Once]
                                                                                :: GHC.IO.Buffer.CharBuffer
                                                                              [LclId] =
                                                                                  CCCS GHC.IO.Buffer.Buffer! [sat_sb7rN
                                                                                                              sat_sb7rO
                                                                                                              GHC.IO.Buffer.WriteBuffer
                                                                                                              dt6_sb7rC
                                                                                                              0#
                                                                                                              0#]; } in
                                                                            let {
                                                                              sat_sb7rQ [Occ=Once]
                                                                                :: (GHC.IO.Handle.Types.BufferMode,
                                                                                    GHC.IO.Buffer.CharBuffer)
                                                                              [LclId] =
                                                                                  CCCS (,)! [wild1_sb7rq
                                                                                             sat_sb7rP]; } in
                                                                            let {
                                                                              sat_sb7rR [Occ=Once]
                                                                                :: ((GHC.IO.Handle.Types.BufferMode,
                                                                                     GHC.IO.Buffer.CharBuffer),
                                                                                    GHC.IO.Handle.Types.Newline)
                                                                              [LclId] =
                                                                                  CCCS (,)! [sat_sb7rQ
                                                                                             ds7_sb7ro];
                                                                            } in 
                                                                              (#,#) [ipv6_sb7rL
                                                                                     sat_sb7rR];
                                                                      };
                                                              };
                                                        };
                                                    1# -> GHC.ForeignPtr.mallocForeignPtrBytes2;
                                                  };
                                            };
                                      };
                                  GHC.IO.Handle.Types.BufferListCons b_sb7rT [Occ=Once!]
                                                                     rest_sb7rU [Occ=Once] ->
                                      case
                                          writeMutVar# [dt3_sb7rj rest_sb7rU ipv2_sb7rv]
                                      of
                                      s2#_sb7rV
                                      { __DEFAULT ->
                                            let {
                                              sat_sb7s6 [Occ=Once]
                                                :: GHC.IO.Buffer.Buffer GHC.IO.Buffer.CharBufElem
                                              [LclId] =
                                                  [ipv3_sb7rw b_sb7rT] \u []
                                                      case b_sb7rT of {
                                                        GHC.ForeignPtr.ForeignPtr dt5_sb7rX [Occ=Once]
                                                                                  dt6_sb7rY [Occ=Once] ->
                                                            case ipv3_sb7rw of {
                                                              GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                   _ [Occ=Dead]
                                                                                   _ [Occ=Dead]
                                                                                   dt9_sb7s3 [Occ=Once]
                                                                                   _ [Occ=Dead]
                                                                                   _ [Occ=Dead] ->
                                                                  GHC.IO.Buffer.Buffer [dt5_sb7rX
                                                                                        dt6_sb7rY
                                                                                        GHC.IO.Buffer.WriteBuffer
                                                                                        dt9_sb7s3
                                                                                        0#
                                                                                        0#];
                                                            };
                                                      }; } in
                                            let {
                                              sat_sb7s7 [Occ=Once]
                                                :: (GHC.IO.Handle.Types.BufferMode,
                                                    GHC.IO.Buffer.CharBuffer)
                                              [LclId] =
                                                  CCCS (,)! [wild1_sb7rq sat_sb7s6]; } in
                                            let {
                                              sat_sb7s8 [Occ=Once]
                                                :: ((GHC.IO.Handle.Types.BufferMode,
                                                     GHC.IO.Buffer.CharBuffer),
                                                    GHC.IO.Handle.Types.Newline)
                                              [LclId] =
                                                  CCCS (,)! [sat_sb7s7 ds7_sb7ro];
                                            } in  (#,#) [s2#_sb7rV sat_sb7s8];
                                      };
                                };
                          };
                    };
                GHC.IO.Handle.Types.NoBuffering ->
                    let {
                      sat_sb7s9 [Occ=Once]
                        :: ((GHC.IO.Handle.Types.BufferMode, GHC.IO.Buffer.CharBuffer),
                            GHC.IO.Handle.Types.Newline)
                      [LclId] =
                          CCCS (,)! [GHC.IO.Handle.Text.hPutStr3 ds7_sb7ro];
                    } in  (#,#) [s_sb7r8 sat_sb7s9];
              };
        };

GHC.IO.Handle.Text.hPutStr6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hPutStr"#;

GHC.IO.Handle.Text.hPutStr5 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hPutStr6;

GHC.IO.Handle.Text.hPutStr1
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Base.String
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=4, Str=<S,U><L,1*U><L,1*U><S,U>, Unf=OtherCon []] =
    [] \r [handle_sb7sa str_sb7sb add_nl_sb7sc s_sb7sd]
        let-no-escape {
          $w$j_sb7se [InlPrag=NOUSERINLINE[0],
                      Occ=Once*!T[4],
                      Dmd=<L,1*C1(C1(C1(C1(U(U,U)))))>]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> GHC.IO.Handle.Types.BufferMode
               -> GHC.IO.Buffer.CharBuffer
               -> GHC.IO.Handle.Types.Newline
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId[JoinId(4)],
           Arity=4,
           Str=<S,U><S,1*U><L,1*U(U,U,A,U,A,A)><L,U>,
           Unf=OtherCon []] =
              sat-only [handle_sb7sa str_sb7sb add_nl_sb7sc] \r [w_sb7sf
                                                                 ww_sb7sg
                                                                 ww1_sb7sh
                                                                 ww2_sb7si]
                  case ww_sb7sg of {
                    GHC.IO.Handle.Types.NoBuffering ->
                        case
                            GHC.IO.Handle.Text.hPutStr7 handle_sb7sa str_sb7sb w_sb7sf
                        of
                        { (#,#) ipv_sb7sl [Occ=Once*] _ [Occ=Dead] ->
                              case add_nl_sb7sc of {
                                GHC.Types.False -> (#,#) [ipv_sb7sl GHC.Tuple.()];
                                GHC.Types.True ->
                                    GHC.IO.Handle.Text.$whPutChar handle_sb7sa '\n'# ipv_sb7sl;
                              };
                        };
                    GHC.IO.Handle.Types.LineBuffering ->
                        case ww1_sb7sh of {
                          GHC.IO.Buffer.Buffer ww4_sb7sp [Occ=Once]
                                               ww5_sb7sq [Occ=Once]
                                               _ [Occ=Dead]
                                               ww7_sb7ss [Occ=Once]
                                               _ [Occ=Dead]
                                               _ [Occ=Dead] ->
                              GHC.IO.Handle.Text.$wwriteBlocks
                                  handle_sb7sa
                                  GHC.Types.True
                                  add_nl_sb7sc
                                  ww2_sb7si
                                  ww4_sb7sp
                                  ww5_sb7sq
                                  ww7_sb7ss
                                  str_sb7sb
                                  w_sb7sf;
                        };
                    GHC.IO.Handle.Types.BlockBuffering _ [Occ=Dead] ->
                        case ww1_sb7sh of {
                          GHC.IO.Buffer.Buffer ww4_sb7sx [Occ=Once]
                                               ww5_sb7sy [Occ=Once]
                                               _ [Occ=Dead]
                                               ww7_sb7sA [Occ=Once]
                                               _ [Occ=Dead]
                                               _ [Occ=Dead] ->
                              GHC.IO.Handle.Text.$wwriteBlocks
                                  handle_sb7sa
                                  GHC.Types.False
                                  add_nl_sb7sc
                                  ww2_sb7si
                                  ww4_sb7sx
                                  ww5_sb7sy
                                  ww7_sb7sA
                                  str_sb7sb
                                  w_sb7sf;
                        };
                  };
        } in 
          case handle_sb7sa of wild_sb7sD {
            GHC.IO.Handle.Types.FileHandle _ [Occ=Dead] dt_sb7sF [Occ=Once] ->
                case
                    GHC.IO.Handle.Internals.$wwantWritableHandle'
                        GHC.IO.Handle.Text.hPutStr5
                        wild_sb7sD
                        dt_sb7sF
                        GHC.IO.Handle.Text.hPutStr2
                        s_sb7sd
                of
                { (#,#) ipv_sb7sH [Occ=Once] ipv1_sb7sI [Occ=Once!] ->
                      case ipv1_sb7sI of {
                        (,) ww1_sb7sK [Occ=Once!] ww2_sb7sL [Occ=Once] ->
                            case ww1_sb7sK of {
                              (,) ww4_sb7sN [Occ=Once] ww5_sb7sO [Occ=Once] ->
                                  $w$j_sb7se ipv_sb7sH ww4_sb7sN ww5_sb7sO ww2_sb7sL;
                            };
                      };
                };
            GHC.IO.Handle.Types.DuplexHandle _ [Occ=Dead]
                                             _ [Occ=Dead]
                                             dt1_sb7sR [Occ=Once] ->
                case
                    GHC.IO.Handle.Internals.$wwantWritableHandle'
                        GHC.IO.Handle.Text.hPutStr5
                        wild_sb7sD
                        dt1_sb7sR
                        GHC.IO.Handle.Text.hPutStr2
                        s_sb7sd
                of
                { (#,#) ipv_sb7sT [Occ=Once] ipv1_sb7sU [Occ=Once!] ->
                      case ipv1_sb7sU of {
                        (,) ww1_sb7sW [Occ=Once!] ww2_sb7sX [Occ=Once] ->
                            case ww1_sb7sW of {
                              (,) ww4_sb7sZ [Occ=Once] ww5_sb7t0 [Occ=Once] ->
                                  $w$j_sb7se ipv_sb7sT ww4_sb7sZ ww5_sb7t0 ww2_sb7sX;
                            };
                      };
                };
          };

GHC.IO.Handle.Text.hPutStr' [InlPrag=NOINLINE]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Base.String -> GHC.Types.Bool -> GHC.Types.IO ()
[GblId, Arity=4, Str=<S,U><L,1*U><L,1*U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Handle.Text.hPutStr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.Handle.Text.hPutStr
  :: GHC.IO.Handle.Types.Handle -> GHC.Base.String -> GHC.Types.IO ()
[GblId, Arity=3, Str=<L,U><L,U>, Unf=OtherCon []] =
    [] \r [handle_sb7t1 str_sb7t2 eta_B1]
        GHC.IO.Handle.Text.hPutStr'
            handle_sb7t1 str_sb7t2 GHC.Types.False eta_B1;

GHC.IO.Handle.Text.hPutStrLn
  :: GHC.IO.Handle.Types.Handle -> GHC.Base.String -> GHC.Types.IO ()
[GblId, Arity=3, Str=<L,U><L,U>, Unf=OtherCon []] =
    [] \r [handle_sb7t3 str_sb7t4 eta_B1]
        GHC.IO.Handle.Text.hPutStr'
            handle_sb7t3 str_sb7t4 GHC.Types.True eta_B1;

GHC.IO.Handle.Text.hWaitForInput3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hWaitForInput"#;

GHC.IO.Handle.Text.hWaitForInput2 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.IO.Handle.Text.hWaitForInput3;

GHC.IO.Handle.Text.hWaitForInput1
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId, Arity=3, Str=<S,1*U><L,U(U)><S,U>, Unf=OtherCon []] =
    [] \r [h_sb7t5 msecs_sb7t6 eta_sb7t7]
        let {
          lvl34_sb7t8 [Occ=OnceL!] :: GHC.Types.Bool
          [LclId] =
              [msecs_sb7t6] \u []
                  case msecs_sb7t6 of {
                    GHC.Types.I# x_sb7ta [Occ=Once] ->
                        case <# [x_sb7ta 0#] of sat_sb7tb {
                          __DEFAULT -> tagToEnum# [sat_sb7tb];
                        };
                  }; } in
        let {
          sat_sb7v9 [Occ=Once]
            :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Bool
          [LclId] =
              [msecs_sb7t6 lvl34_sb7t8] \r [handle__sb7tc eta1_sb7td]
                  case handle__sb7tc of wild_sb7te {
                    GHC.IO.Handle.Types.Handle__ $dIODevice_sb7tf [Occ=Once]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 ds_sb7ti [Occ=Once]
                                                 _ [Occ=Dead]
                                                 dt_sb7tk
                                                 _ [Occ=Dead]
                                                 dt1_sb7tm [Occ=Once*]
                                                 dt2_sb7tn
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 ds4_sb7tq [Occ=Once!]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead] ->
                        case readMutVar# [dt2_sb7tn eta1_sb7td] of {
                          (#,#) ipv_sb7tw [Occ=Once*] ipv1_sb7tx [Occ=Once!] ->
                              case ipv1_sb7tx of wild1_sb7ty {
                                GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead]
                                                     dt7_sb7tD [Occ=Once]
                                                     dt8_sb7tE [Occ=Once] ->
                                    case ==# [dt7_sb7tD dt8_sb7tE] of {
                                      __DEFAULT -> (#,#) [ipv_sb7tw GHC.Types.True];
                                      1# ->
                                          case lvl34_sb7t8 of {
                                            GHC.Types.False ->
                                                case readMutVar# [dt_sb7tk ipv_sb7tw] of {
                                                  (#,#) ipv2_sb7tI [Occ=Once*] ipv3_sb7tJ ->
                                                      let-no-escape {
                                                        $w$j_sb7tK [InlPrag=NOUSERINLINE[0],
                                                                    Occ=Once*!T[7],
                                                                    Dmd=<L,1*C1(C1(C1(C1(C1(C1(C1(U(U,U))))))))>]
                                                          :: GHC.Prim.State# GHC.Prim.RealWorld
                                                             -> GHC.Prim.Addr#
                                                             -> GHC.ForeignPtr.ForeignPtrContents
                                                             -> GHC.IO.Buffer.BufferState
                                                             -> GHC.Prim.Int#
                                                             -> GHC.Prim.Int#
                                                             -> GHC.Prim.Int#
                                                             -> (# GHC.Prim.State#
                                                                     GHC.Prim.RealWorld,
                                                                   GHC.Types.Bool #)
                                                        [LclId[JoinId(7)],
                                                         Arity=7,
                                                         Str=<S,U><L,U><L,U><L,U><L,U><S,U><S,U>,
                                                         Unf=OtherCon []] =
                                                            sat-only [msecs_sb7t6
                                                                      wild_sb7te
                                                                      $dIODevice_sb7tf
                                                                      ds_sb7ti
                                                                      dt2_sb7tn] \r [w_sb7tL
                                                                                     ww_sb7tM
                                                                                     ww1_sb7tN
                                                                                     ww2_sb7tO
                                                                                     ww3_sb7tP
                                                                                     ww4_sb7tQ
                                                                                     ww5_sb7tR]
                                                                let {
                                                                  sat_sb7tS [Occ=Once]
                                                                    :: GHC.IO.Buffer.Buffer
                                                                         GHC.IO.Buffer.CharBufElem
                                                                  [LclId] =
                                                                      CCCS GHC.IO.Buffer.Buffer! [ww_sb7tM
                                                                                                  ww1_sb7tN
                                                                                                  ww2_sb7tO
                                                                                                  ww3_sb7tP
                                                                                                  ww4_sb7tQ
                                                                                                  ww5_sb7tR];
                                                                } in 
                                                                  case
                                                                      writeMutVar# [dt2_sb7tn
                                                                                    sat_sb7tS
                                                                                    w_sb7tL]
                                                                  of
                                                                  s2#_sb7tT
                                                                  { __DEFAULT ->
                                                                        case
                                                                            ==# [ww4_sb7tQ
                                                                                 ww5_sb7tR]
                                                                        of
                                                                        { __DEFAULT ->
                                                                              (#,#) [s2#_sb7tT
                                                                                     GHC.Types.True];
                                                                          1# ->
                                                                              case
                                                                                  GHC.IO.Device.ready
                                                                                      $dIODevice_sb7tf
                                                                                      ds_sb7ti
                                                                                      GHC.Types.False
                                                                                      msecs_sb7t6
                                                                                      s2#_sb7tT
                                                                              of
                                                                              { (#,#) ipv4_sb7tW [Occ=Once*]
                                                                                      ipv5_sb7tX [Occ=Once!] ->
                                                                                    case
                                                                                        ipv5_sb7tX
                                                                                    of
                                                                                    { GHC.Types.False ->
                                                                                          (#,#) [ipv4_sb7tW
                                                                                                 GHC.Types.False];
                                                                                      GHC.Types.True ->
                                                                                          case
                                                                                              readMutVar# [dt2_sb7tn
                                                                                                           ipv4_sb7tW]
                                                                                          of
                                                                                          { (#,#) ipv6_sb7u0 [Occ=Once*]
                                                                                                  ipv7_sb7u1 [Occ=Once!] ->
                                                                                                case
                                                                                                    ipv7_sb7u1
                                                                                                of
                                                                                                wild4_sb7u2
                                                                                                { GHC.IO.Buffer.Buffer dt9_sb7u3 [Occ=Once*]
                                                                                                                       dt10_sb7u4 [Occ=Once*]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       dt12_sb7u7
                                                                                                                       dt13_sb7u8 [Occ=Once] ->
                                                                                                      case
                                                                                                          ==# [dt12_sb7u7
                                                                                                               dt13_sb7u8]
                                                                                                      of
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                writeMutVar# [dt2_sb7tn
                                                                                                                              wild4_sb7u2
                                                                                                                              ipv6_sb7u0]
                                                                                                            of
                                                                                                            s2#1_sb7ua
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      readWideCharOffAddr# [dt9_sb7u3
                                                                                                                                            dt12_sb7u7
                                                                                                                                            s2#1_sb7ua]
                                                                                                                  of
                                                                                                                  { (#,#) ipv8_sb7uc [Occ=Once]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        case
                                                                                                                            touch# [dt10_sb7u4
                                                                                                                                    ipv8_sb7uc]
                                                                                                                        of
                                                                                                                        s'_sb7ue
                                                                                                                        { __DEFAULT ->
                                                                                                                              (#,#) [s'_sb7ue
                                                                                                                                     GHC.Types.True];
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                        1# ->
                                                                                                            case
                                                                                                                GHC.IO.Handle.Internals.hLookAhead_2
                                                                                                                    wild_sb7te
                                                                                                                    wild4_sb7u2
                                                                                                                    ipv6_sb7u0
                                                                                                            of
                                                                                                            { (#,#) ipv8_sb7ug [Occ=Once]
                                                                                                                    ipv9_sb7uh [Occ=Once] ->
                                                                                                                  case
                                                                                                                      writeMutVar# [dt2_sb7tn
                                                                                                                                    ipv9_sb7uh
                                                                                                                                    ipv8_sb7ug]
                                                                                                                  of
                                                                                                                  s2#1_sb7ui
                                                                                                                  { __DEFAULT ->
                                                                                                                        case
                                                                                                                            readWideCharOffAddr# [dt9_sb7u3
                                                                                                                                                  dt12_sb7u7
                                                                                                                                                  s2#1_sb7ui]
                                                                                                                        of
                                                                                                                        { (#,#) ipv10_sb7uk [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              case
                                                                                                                                  touch# [dt10_sb7u4
                                                                                                                                          ipv10_sb7uk]
                                                                                                                              of
                                                                                                                              s'_sb7um
                                                                                                                              { __DEFAULT ->
                                                                                                                                    (#,#) [s'_sb7um
                                                                                                                                           GHC.Types.True];
                                                                                                                              };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                      } in 
                                                        case ds4_sb7tq of {
                                                          GHC.Base.Nothing ->
                                                              let {
                                                                sat_sb7uo [Occ=Once]
                                                                  :: (dec_state_ab2UP,
                                                                      GHC.IO.Buffer.Buffer
                                                                        GHC.Word.Word8)
                                                                [LclId] =
                                                                    CCCS (,)! [GHC.IO.Handle.Internals.decodeByteBuf2
                                                                               ipv3_sb7tJ];
                                                              } in 
                                                                case
                                                                    writeMutVar# [dt1_sb7tm
                                                                                  sat_sb7uo
                                                                                  ipv2_sb7tI]
                                                                of
                                                                s2#_sb7up
                                                                { __DEFAULT ->
                                                                      case
                                                                          GHC.IO.Encoding.Latin1.latin5
                                                                              ipv3_sb7tJ
                                                                              wild1_sb7ty
                                                                              s2#_sb7up
                                                                      of
                                                                      { (#,#) ipv4_sb7ur [Occ=Once]
                                                                              ipv5_sb7us [Occ=Once!] ->
                                                                            case ipv5_sb7us of {
                                                                              (,,) _ [Occ=Dead]
                                                                                   input'_sb7uv [Occ=Once]
                                                                                   output'_sb7uw [Occ=Once!] ->
                                                                                  case
                                                                                      writeMutVar# [dt_sb7tk
                                                                                                    input'_sb7uv
                                                                                                    ipv4_sb7ur]
                                                                                  of
                                                                                  s2#1_sb7ux
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            output'_sb7uw
                                                                                        of
                                                                                        { GHC.IO.Buffer.Buffer ww1_sb7uz [Occ=Once]
                                                                                                               ww2_sb7uA [Occ=Once]
                                                                                                               ww3_sb7uB [Occ=Once]
                                                                                                               ww4_sb7uC [Occ=Once]
                                                                                                               ww5_sb7uD [Occ=Once]
                                                                                                               ww6_sb7uE [Occ=Once] ->
                                                                                              $w$j_sb7tK
                                                                                                  s2#1_sb7ux
                                                                                                  ww1_sb7uz
                                                                                                  ww2_sb7uA
                                                                                                  ww3_sb7uB
                                                                                                  ww4_sb7uC
                                                                                                  ww5_sb7uD
                                                                                                  ww6_sb7uE;
                                                                                        };
                                                                                  };
                                                                            };
                                                                      };
                                                                };
                                                          GHC.Base.Just decoder_sb7uF [Occ=Once!] ->
                                                              case decoder_sb7uF of {
                                                                GHC.IO.Encoding.Types.BufferCodec ds12_sb7uH [Occ=Once]
                                                                                                  ds13_sb7uI [Occ=Once]
                                                                                                  _ [Occ=Dead]
                                                                                                  ds15_sb7uK [Occ=Once]
                                                                                                  _ [Occ=Dead] ->
                                                                    case ds15_sb7uK ipv2_sb7tI of {
                                                                      (#,#) ipv4_sb7uN [Occ=Once]
                                                                            ipv5_sb7uO [Occ=Once] ->
                                                                          let {
                                                                            sat_sb7uP [Occ=Once]
                                                                              :: (dec_state_ab2UP,
                                                                                  GHC.IO.Buffer.Buffer
                                                                                    GHC.Word.Word8)
                                                                            [LclId] =
                                                                                CCCS (,)! [ipv5_sb7uO
                                                                                           ipv3_sb7tJ];
                                                                          } in 
                                                                            case
                                                                                writeMutVar# [dt1_sb7tm
                                                                                              sat_sb7uP
                                                                                              ipv4_sb7uN]
                                                                            of
                                                                            s2#_sb7uQ
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      GHC.IO.Handle.Internals.$wstreamEncode
                                                                                          ds12_sb7uH
                                                                                          ds13_sb7uI
                                                                                          ipv3_sb7tJ
                                                                                          wild1_sb7ty
                                                                                          s2#_sb7uQ
                                                                                  of
                                                                                  { (#,#) ipv6_sb7uS [Occ=Once]
                                                                                          ipv7_sb7uT [Occ=Once!] ->
                                                                                        case
                                                                                            ipv7_sb7uT
                                                                                        of
                                                                                        { (,) bbuf2_sb7uV [Occ=Once]
                                                                                              cbuf'_sb7uW [Occ=Once!] ->
                                                                                              case
                                                                                                  writeMutVar# [dt_sb7tk
                                                                                                                bbuf2_sb7uV
                                                                                                                ipv6_sb7uS]
                                                                                              of
                                                                                              s2#1_sb7uX
                                                                                              { __DEFAULT ->
                                                                                                    case
                                                                                                        cbuf'_sb7uW
                                                                                                    of
                                                                                                    { GHC.IO.Buffer.Buffer ww1_sb7uZ [Occ=Once]
                                                                                                                           ww2_sb7v0 [Occ=Once]
                                                                                                                           ww3_sb7v1 [Occ=Once]
                                                                                                                           ww4_sb7v2 [Occ=Once]
                                                                                                                           ww5_sb7v3 [Occ=Once]
                                                                                                                           ww6_sb7v4 [Occ=Once] ->
                                                                                                          $w$j_sb7tK
                                                                                                              s2#1_sb7uX
                                                                                                              ww1_sb7uZ
                                                                                                              ww2_sb7v0
                                                                                                              ww3_sb7v1
                                                                                                              ww4_sb7v2
                                                                                                              ww5_sb7v3
                                                                                                              ww6_sb7v4;
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                    };
                                                              };
                                                        };
                                                };
                                            GHC.Types.True ->
                                                case
                                                    GHC.IO.Handle.Internals.hLookAhead_2
                                                        wild_sb7te wild1_sb7ty ipv_sb7tw
                                                of
                                                { (#,#) ipv2_sb7v6 [Occ=Once]
                                                        ipv3_sb7v7 [Occ=Once] ->
                                                      case
                                                          writeMutVar# [dt2_sb7tn
                                                                        ipv3_sb7v7
                                                                        ipv2_sb7v6]
                                                      of
                                                      s2#_sb7v8
                                                      { __DEFAULT ->
                                                            (#,#) [s2#_sb7v8 GHC.Types.True];
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in 
          GHC.IO.Handle.Internals.wantReadableHandle_1
              GHC.IO.Handle.Text.hWaitForInput2 h_sb7t5 sat_sb7v9 eta_sb7t7;

GHC.IO.Handle.Text.hWaitForInput
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Bool
[GblId, Arity=3, Str=<S,1*U><L,U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.IO.Handle.Text.hWaitForInput1 eta_B3 eta_B2 eta_B1;


==================== STG syntax: ====================
2018-03-16 16:06:02.655555656 UTC

lvl_rb6WB :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "illegal buffer size "#;

GHC.IO.Handle.Text.$willegalBufferSize [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId, Arity=4, Str=<B,U><B,U><B,U><B,U>x, Unf=OtherCon []] =
    [] \r [w_sb6Xf w1_sb6Xg ww_sb6Xh void_0E]
        let {
          sat_sb6Xq [Occ=Once] :: GHC.Exception.SomeException
          [LclId] =
              [w_sb6Xf w1_sb6Xg ww_sb6Xh] \u []
                  let {
                    sat_sb6Xo [Occ=Once] :: GHC.Base.String
                    [LclId] =
                        [ww_sb6Xh] \u []
                            let {
                              sat_sb6Xn [Occ=Once] :: [GHC.Types.Char]
                              [LclId] =
                                  [ww_sb6Xh] \u []
                                      case GHC.Show.$wshowSignedInt 9# ww_sb6Xh GHC.Types.[] of {
                                        (#,#) ww5_sb6Xl [Occ=Once] ww6_sb6Xm [Occ=Once] ->
                                            : [ww5_sb6Xl ww6_sb6Xm];
                                      };
                            } in  GHC.CString.unpackAppendCString# lvl_rb6WB sat_sb6Xn; } in
                  let {
                    sat_sb6Xj [Occ=Once] :: GHC.Base.Maybe GHC.IO.Handle.Types.Handle
                    [LclId] =
                        CCCS GHC.Base.Just! [w_sb6Xf]; } in
                  let {
                    sat_sb6Xp [Occ=Once] :: GHC.IO.Exception.IOException
                    [LclId] =
                        CCCS GHC.IO.Exception.IOError! [sat_sb6Xj
                                                        GHC.IO.Exception.InvalidArgument
                                                        w1_sb6Xg
                                                        sat_sb6Xo
                                                        GHC.Base.Nothing
                                                        GHC.Base.Nothing];
                  } in 
                    GHC.IO.Exception.$fExceptionIOException_$ctoException sat_sb6Xp;
        } in  raiseIO# [sat_sb6Xq GHC.Prim.void#];

GHC.IO.Handle.Text.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.IO.Handle.Text.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Handle.Text.$trModule4];

GHC.IO.Handle.Text.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.Handle.Text"#;

GHC.IO.Handle.Text.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Handle.Text.$trModule2];

GHC.IO.Handle.Text.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.IO.Handle.Text.$trModule3
                                     GHC.IO.Handle.Text.$trModule1];

memcpy1_rb6WC
  :: forall a.
     GHC.Ptr.Ptr a
     -> GHC.Ptr.Ptr a
     -> GHC.Word.Word64
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [ds_sb6Xr ds1_sb6Xs ds2_sb6Xt void_0E]
        case ds_sb6Xr of {
          GHC.Ptr.Ptr ds4_sb6Xw [Occ=Once] ->
              case ds1_sb6Xs of {
                GHC.Ptr.Ptr ds6_sb6Xy [Occ=Once] ->
                    case ds2_sb6Xt of {
                      GHC.Word.W64# ds8_sb6XA [Occ=Once] ->
                          case
                              __pkg_ccall base-4.11.0.0 [ds4_sb6Xw
                                                         ds6_sb6Xy
                                                         ds8_sb6XA
                                                         GHC.Prim.void#]
                          of
                          { Unit# ds10_sb6XE [Occ=Once] ->
                                let {
                                  sat_sb6XF [Occ=Once] :: GHC.Ptr.Ptr ()
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds10_sb6XE];
                                } in  Unit# [sat_sb6XF];
                          };
                    };
              };
        };

GHC.IO.Handle.Text.memcpy
  :: forall a.
     GHC.Ptr.Ptr a
     -> GHC.Ptr.Ptr a
     -> Foreign.C.Types.CSize
     -> GHC.Types.IO (GHC.Ptr.Ptr ())
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        memcpy1_rb6WC eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Handle.Text.$wcommitBuffer' [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.CharBuffer #)
[GblId,
 Arity=8,
 Caf=NoCafRefs,
 Str=<S,U><L,U><S,U><S,U><L,1*U><L,1*U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sb6XG
           ww1_sb6XH
           ww2_sb6XI
           ww3_sb6XJ
           w_sb6XK
           w1_sb6XL
           w2_sb6XM
           void_0E]
        case w2_sb6XM of wild_sb6XO {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       $dBufferedIO_sb6XQ [Occ=Once]
                                       _ [Occ=Dead]
                                       ds_sb6XS [Occ=Once]
                                       _ [Occ=Dead]
                                       dt_sb6XU
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt2_sb6XX [Occ=Once*]
                                       dt3_sb6XY
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case
                  GHC.IO.Handle.Internals.$wwriteCharBuffer
                      wild_sb6XO
                      ww_sb6XG
                      ww1_sb6XH
                      GHC.IO.Buffer.WriteBuffer
                      ww2_sb6XI
                      0#
                      ww3_sb6XJ
                      GHC.Prim.void#
              of
              { Unit# _ [Occ=Dead] ->
                    case w_sb6XK of {
                      GHC.Types.False ->
                          case w1_sb6XL of {
                            GHC.Types.False ->
                                let {
                                  sat_sb6Ya [Occ=Once]
                                    :: GHC.IO.Buffer.Buffer GHC.IO.Buffer.CharBufElem
                                  [LclId] =
                                      CCCS GHC.IO.Buffer.Buffer! [ww_sb6XG
                                                                  ww1_sb6XH
                                                                  GHC.IO.Buffer.WriteBuffer
                                                                  ww2_sb6XI
                                                                  0#
                                                                  ww3_sb6XJ];
                                } in  Unit# [sat_sb6Ya];
                            GHC.Types.True ->
                                case readMutVar# [dt2_sb6XX GHC.Prim.void#] of {
                                  Unit# ipv3_sb6Yd [Occ=Once!] ->
                                      case ipv3_sb6Yd of {
                                        GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             dt6_sb6Yi [Occ=Once]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                            case ==# [ww2_sb6XI dt6_sb6Yi] of {
                                              __DEFAULT ->
                                                  let {
                                                    sat_sb6Ym [Occ=Once]
                                                      :: GHC.IO.Buffer.Buffer
                                                           GHC.IO.Buffer.CharBufElem
                                                    [LclId] =
                                                        CCCS GHC.IO.Buffer.Buffer! [ww_sb6XG
                                                                                    ww1_sb6XH
                                                                                    GHC.IO.Buffer.WriteBuffer
                                                                                    ww2_sb6XI
                                                                                    0#
                                                                                    ww3_sb6XJ];
                                                  } in  Unit# [sat_sb6Ym];
                                              1# ->
                                                  case readMutVar# [dt3_sb6XY GHC.Prim.void#] of {
                                                    Unit# ipv5_sb6Yp [Occ=Once] ->
                                                        let {
                                                          sat_sb6Yq [Occ=Once]
                                                            :: GHC.IO.Buffer.RawBuffer
                                                                 GHC.IO.Buffer.CharBufElem
                                                          [LclId] =
                                                              CCCS GHC.ForeignPtr.ForeignPtr! [ww_sb6XG
                                                                                               ww1_sb6XH]; } in
                                                        let {
                                                          sat_sb6Yr [Occ=Once]
                                                            :: GHC.IO.Handle.Types.BufferList
                                                                 GHC.IO.Buffer.CharBufElem
                                                          [LclId] =
                                                              CCCS GHC.IO.Handle.Types.BufferListCons! [sat_sb6Yq
                                                                                                        ipv5_sb6Yp];
                                                        } in 
                                                          case
                                                              writeMutVar# [dt3_sb6XY
                                                                            sat_sb6Yr
                                                                            GHC.Prim.void#]
                                                          of
                                                          s2#_sb6Ys
                                                          { (##) ->
                                                                let {
                                                                  sat_sb6Yt [Occ=Once]
                                                                    :: GHC.IO.Buffer.Buffer
                                                                         GHC.IO.Buffer.CharBufElem
                                                                  [LclId] =
                                                                      CCCS GHC.IO.Buffer.Buffer! [ww_sb6XG
                                                                                                  ww1_sb6XH
                                                                                                  GHC.IO.Buffer.WriteBuffer
                                                                                                  ww2_sb6XI
                                                                                                  0#
                                                                                                  ww3_sb6XJ];
                                                                } in  Unit# [sat_sb6Yt];
                                                          };
                                                  };
                                            };
                                      };
                                };
                          };
                      GHC.Types.True ->
                          case readMutVar# [dt_sb6XU GHC.Prim.void#] of {
                            Unit# ipv3_sb6Yw [Occ=Once!] ->
                                case ipv3_sb6Yw of wild2_sb6Yx {
                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                       _ [Occ=Dead]
                                                       _ [Occ=Dead]
                                                       _ [Occ=Dead]
                                                       dt7_sb6YC [Occ=Once]
                                                       dt8_sb6YD [Occ=Once] ->
                                      case ==# [dt7_sb6YC dt8_sb6YD] of {
                                        __DEFAULT ->
                                            case
                                                GHC.IO.BufferedIO.flushWriteBuffer
                                                    $dBufferedIO_sb6XQ
                                                    ds_sb6XS
                                                    wild2_sb6Yx
                                                    GHC.Prim.void#
                                            of
                                            { Unit# ipv5_sb6YH [Occ=Once] ->
                                                  case
                                                      writeMutVar# [dt_sb6XU
                                                                    ipv5_sb6YH
                                                                    GHC.Prim.void#]
                                                  of
                                                  s2#_sb6YI
                                                  { (##) ->
                                                        case w1_sb6XL of {
                                                          GHC.Types.False ->
                                                              let {
                                                                sat_sb6YK [Occ=Once]
                                                                  :: GHC.IO.Buffer.Buffer
                                                                       GHC.IO.Buffer.CharBufElem
                                                                [LclId] =
                                                                    CCCS GHC.IO.Buffer.Buffer! [ww_sb6XG
                                                                                                ww1_sb6XH
                                                                                                GHC.IO.Buffer.WriteBuffer
                                                                                                ww2_sb6XI
                                                                                                0#
                                                                                                ww3_sb6XJ];
                                                              } in  Unit# [sat_sb6YK];
                                                          GHC.Types.True ->
                                                              case
                                                                  readMutVar# [dt2_sb6XX
                                                                               GHC.Prim.void#]
                                                              of
                                                              { Unit# ipv7_sb6YN [Occ=Once!] ->
                                                                    case ipv7_sb6YN of {
                                                                      GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                           _ [Occ=Dead]
                                                                                           _ [Occ=Dead]
                                                                                           dt12_sb6YS [Occ=Once]
                                                                                           _ [Occ=Dead]
                                                                                           _ [Occ=Dead] ->
                                                                          case
                                                                              ==# [ww2_sb6XI
                                                                                   dt12_sb6YS]
                                                                          of
                                                                          { __DEFAULT ->
                                                                                let {
                                                                                  sat_sb6YW [Occ=Once]
                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                         GHC.IO.Buffer.CharBufElem
                                                                                  [LclId] =
                                                                                      CCCS GHC.IO.Buffer.Buffer! [ww_sb6XG
                                                                                                                  ww1_sb6XH
                                                                                                                  GHC.IO.Buffer.WriteBuffer
                                                                                                                  ww2_sb6XI
                                                                                                                  0#
                                                                                                                  ww3_sb6XJ];
                                                                                } in 
                                                                                  Unit# [sat_sb6YW];
                                                                            1# ->
                                                                                case
                                                                                    readMutVar# [dt3_sb6XY
                                                                                                 GHC.Prim.void#]
                                                                                of
                                                                                { Unit# ipv9_sb6YZ [Occ=Once] ->
                                                                                      let {
                                                                                        sat_sb6Z0 [Occ=Once]
                                                                                          :: GHC.IO.Buffer.RawBuffer
                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                        [LclId] =
                                                                                            CCCS GHC.ForeignPtr.ForeignPtr! [ww_sb6XG
                                                                                                                             ww1_sb6XH]; } in
                                                                                      let {
                                                                                        sat_sb6Z1 [Occ=Once]
                                                                                          :: GHC.IO.Handle.Types.BufferList
                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                        [LclId] =
                                                                                            CCCS GHC.IO.Handle.Types.BufferListCons! [sat_sb6Z0
                                                                                                                                      ipv9_sb6YZ];
                                                                                      } in 
                                                                                        case
                                                                                            writeMutVar# [dt3_sb6XY
                                                                                                          sat_sb6Z1
                                                                                                          GHC.Prim.void#]
                                                                                        of
                                                                                        s2#1_sb6Z2
                                                                                        { (##) ->
                                                                                              let {
                                                                                                sat_sb6Z3 [Occ=Once]
                                                                                                  :: GHC.IO.Buffer.Buffer
                                                                                                       GHC.IO.Buffer.CharBufElem
                                                                                                [LclId] =
                                                                                                    CCCS GHC.IO.Buffer.Buffer! [ww_sb6XG
                                                                                                                                ww1_sb6XH
                                                                                                                                GHC.IO.Buffer.WriteBuffer
                                                                                                                                ww2_sb6XI
                                                                                                                                0#
                                                                                                                                ww3_sb6XJ];
                                                                                              } in 
                                                                                                Unit# [sat_sb6Z3];
                                                                                        };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                        1# ->
                                            case w1_sb6XL of {
                                              GHC.Types.False ->
                                                  let {
                                                    sat_sb6Z5 [Occ=Once]
                                                      :: GHC.IO.Buffer.Buffer
                                                           GHC.IO.Buffer.CharBufElem
                                                    [LclId] =
                                                        CCCS GHC.IO.Buffer.Buffer! [ww_sb6XG
                                                                                    ww1_sb6XH
                                                                                    GHC.IO.Buffer.WriteBuffer
                                                                                    ww2_sb6XI
                                                                                    0#
                                                                                    ww3_sb6XJ];
                                                  } in  Unit# [sat_sb6Z5];
                                              GHC.Types.True ->
                                                  case readMutVar# [dt2_sb6XX GHC.Prim.void#] of {
                                                    Unit# ipv5_sb6Z8 [Occ=Once!] ->
                                                        case ipv5_sb6Z8 of {
                                                          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                               _ [Occ=Dead]
                                                                               _ [Occ=Dead]
                                                                               dt12_sb6Zd [Occ=Once]
                                                                               _ [Occ=Dead]
                                                                               _ [Occ=Dead] ->
                                                              case ==# [ww2_sb6XI dt12_sb6Zd] of {
                                                                __DEFAULT ->
                                                                    let {
                                                                      sat_sb6Zh [Occ=Once]
                                                                        :: GHC.IO.Buffer.Buffer
                                                                             GHC.IO.Buffer.CharBufElem
                                                                      [LclId] =
                                                                          CCCS GHC.IO.Buffer.Buffer! [ww_sb6XG
                                                                                                      ww1_sb6XH
                                                                                                      GHC.IO.Buffer.WriteBuffer
                                                                                                      ww2_sb6XI
                                                                                                      0#
                                                                                                      ww3_sb6XJ];
                                                                    } in  Unit# [sat_sb6Zh];
                                                                1# ->
                                                                    case
                                                                        readMutVar# [dt3_sb6XY
                                                                                     GHC.Prim.void#]
                                                                    of
                                                                    { Unit# ipv7_sb6Zk [Occ=Once] ->
                                                                          let {
                                                                            sat_sb6Zl [Occ=Once]
                                                                              :: GHC.IO.Buffer.RawBuffer
                                                                                   GHC.IO.Buffer.CharBufElem
                                                                            [LclId] =
                                                                                CCCS GHC.ForeignPtr.ForeignPtr! [ww_sb6XG
                                                                                                                 ww1_sb6XH]; } in
                                                                          let {
                                                                            sat_sb6Zm [Occ=Once]
                                                                              :: GHC.IO.Handle.Types.BufferList
                                                                                   GHC.IO.Buffer.CharBufElem
                                                                            [LclId] =
                                                                                CCCS GHC.IO.Handle.Types.BufferListCons! [sat_sb6Zl
                                                                                                                          ipv7_sb6Zk];
                                                                          } in 
                                                                            case
                                                                                writeMutVar# [dt3_sb6XY
                                                                                              sat_sb6Zm
                                                                                              GHC.Prim.void#]
                                                                            of
                                                                            s2#_sb6Zn
                                                                            { (##) ->
                                                                                  let {
                                                                                    sat_sb6Zo [Occ=Once]
                                                                                      :: GHC.IO.Buffer.Buffer
                                                                                           GHC.IO.Buffer.CharBufElem
                                                                                    [LclId] =
                                                                                        CCCS GHC.IO.Buffer.Buffer! [ww_sb6XG
                                                                                                                    ww1_sb6XH
                                                                                                                    GHC.IO.Buffer.WriteBuffer
                                                                                                                    ww2_sb6XI
                                                                                                                    0#
                                                                                                                    ww3_sb6XJ];
                                                                                  } in 
                                                                                    Unit# [sat_sb6Zo];
                                                                            };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.Handle.Text.commitBuffer'1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.CharBuffer #)
[GblId,
 Arity=7,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><L,1*U><L,1*U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb6Zp
           w1_sb6Zq
           w2_sb6Zr
           w3_sb6Zs
           w4_sb6Zt
           w5_sb6Zu
           void_0E]
        case w_sb6Zp of {
          GHC.ForeignPtr.ForeignPtr ww1_sb6Zx [Occ=Once]
                                    ww2_sb6Zy [Occ=Once] ->
              case w1_sb6Zq of {
                GHC.Types.I# ww4_sb6ZA [Occ=Once] ->
                    case w2_sb6Zr of {
                      GHC.Types.I# ww6_sb6ZC [Occ=Once] ->
                          GHC.IO.Handle.Text.$wcommitBuffer'
                              ww1_sb6Zx
                              ww2_sb6Zy
                              ww4_sb6ZA
                              ww6_sb6ZC
                              w3_sb6Zs
                              w4_sb6Zt
                              w5_sb6Zu
                              GHC.Prim.void#;
                    };
              };
        };

GHC.IO.Handle.Text.commitBuffer'
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.IO.Handle.Types.Handle__
     -> GHC.Types.IO GHC.IO.Buffer.CharBuffer
[GblId,
 Arity=7,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><L,1*U><L,1*U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B7 eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.Handle.Text.commitBuffer'1
            eta_B7 eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

lvl1_rb6WD :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "commitBuffer"#;

lvl2_rb6WE :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl1_rb6WD;

GHC.IO.Handle.Text.hPutChar3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hPutChar"#;

GHC.IO.Handle.Text.hPutChar2 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hPutChar3;

GHC.IO.Handle.Text.$whPutChar [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.Char#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<S,1*U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [w_sb6ZD ww_sb6ZE void_0E]
        let {
          act_sb6ZG [Occ=Once*, Dmd=<L,C(C1(U(U,U)))>]
            :: GHC.IO.Handle.Types.Handle__
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
              [ww_sb6ZE] \r [handle__sb6ZH void_0E]
                  case handle__sb6ZH of wild_sb6ZJ {
                    GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                 $dBufferedIO_sb6ZL [Occ=Once]
                                                 _ [Occ=Dead]
                                                 ds_sb6ZN [Occ=Once]
                                                 _ [Occ=Dead]
                                                 dt_sb6ZP
                                                 ds2_sb6ZQ [Occ=Once!]
                                                 _ [Occ=Dead]
                                                 dt2_sb6ZS [Occ=Once]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 ds7_sb6ZY [Occ=Once!]
                                                 _ [Occ=Dead] ->
                        case readMutVar# [dt2_sb6ZS GHC.Prim.void#] of {
                          Unit# ipv1_sb702 [Occ=Once*!] ->
                              case ww_sb6ZE of wild1_sb703 {
                                __DEFAULT ->
                                    case ipv1_sb702 of {
                                      GHC.IO.Buffer.Buffer dt4_sb705
                                                           dt5_sb706
                                                           ds10_sb707 [Occ=Once]
                                                           dt6_sb708 [Occ=Once]
                                                           dt7_sb709 [Occ=Once]
                                                           dt8_sb70a ->
                                          case
                                              writeWideCharOffAddr# [dt4_sb705
                                                                     dt8_sb70a
                                                                     wild1_sb703
                                                                     GHC.Prim.void#]
                                          of
                                          s2_sb70b
                                          { (##) ->
                                                case touch# [dt5_sb706 GHC.Prim.void#] of s'_sb70c {
                                                  (##) ->
                                                      case +# [dt8_sb70a 1#] of sat_sb70d {
                                                        __DEFAULT ->
                                                            case
                                                                GHC.IO.Handle.Internals.$wwriteCharBuffer
                                                                    wild_sb6ZJ
                                                                    dt4_sb705
                                                                    dt5_sb706
                                                                    ds10_sb707
                                                                    dt6_sb708
                                                                    dt7_sb709
                                                                    sat_sb70d
                                                                    GHC.Prim.void#
                                                            of
                                                            { Unit# _ [Occ=Dead] ->
                                                                  Unit# [GHC.Tuple.()];
                                                            };
                                                      };
                                                };
                                          };
                                    };
                                '\n'# ->
                                    let-no-escape {
                                      $w$j_sb70h [InlPrag=NOUSERINLINE[0],
                                                  Occ=Once*!T[7],
                                                  Dmd=<C(C(C(C(C(C(C(S))))))),1*C1(C1(C1(C1(C1(C1(C1(U(U,U))))))))>]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> GHC.Prim.Addr#
                                           -> GHC.ForeignPtr.ForeignPtrContents
                                           -> GHC.IO.Buffer.BufferState
                                           -> GHC.Prim.Int#
                                           -> GHC.Prim.Int#
                                           -> GHC.Prim.Int#
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId[JoinId(7)],
                                       Arity=7,
                                       Str=<S,U><S,U><L,U><L,U><S,U><S,U><S,U>,
                                       Unf=OtherCon []] =
                                          sat-only [wild_sb6ZJ
                                                    $dBufferedIO_sb6ZL
                                                    ds_sb6ZN
                                                    dt_sb6ZP
                                                    ds2_sb6ZQ] \r [void_0E
                                                                   ww1_sb70j
                                                                   ww2_sb70k
                                                                   ww3_sb70l
                                                                   ww4_sb70m
                                                                   ww5_sb70n
                                                                   ww6_sb70o]
                                              case
                                                  GHC.IO.Handle.Internals.$wwriteCharBuffer
                                                      wild_sb6ZJ
                                                      ww1_sb70j
                                                      ww2_sb70k
                                                      ww3_sb70l
                                                      ww4_sb70m
                                                      ww5_sb70n
                                                      ww6_sb70o
                                                      GHC.Prim.void#
                                              of
                                              { Unit# _ [Occ=Dead] ->
                                                    case ds2_sb6ZQ of {
                                                      __DEFAULT -> Unit# [GHC.Tuple.()];
                                                      GHC.IO.Handle.Types.LineBuffering ->
                                                          case
                                                              readMutVar# [dt_sb6ZP GHC.Prim.void#]
                                                          of
                                                          { Unit# ipv5_sb70v [Occ=Once!] ->
                                                                case ipv5_sb70v of wild3_sb70w {
                                                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       dt7_sb70B [Occ=Once]
                                                                                       dt8_sb70C [Occ=Once] ->
                                                                      case
                                                                          ==# [dt7_sb70B dt8_sb70C]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            case
                                                                                GHC.IO.BufferedIO.flushWriteBuffer
                                                                                    $dBufferedIO_sb6ZL
                                                                                    ds_sb6ZN
                                                                                    wild3_sb70w
                                                                                    GHC.Prim.void#
                                                                            of
                                                                            { Unit# ipv7_sb70G [Occ=Once] ->
                                                                                  case
                                                                                      writeMutVar# [dt_sb6ZP
                                                                                                    ipv7_sb70G
                                                                                                    GHC.Prim.void#]
                                                                                  of
                                                                                  s2#_sb70H
                                                                                  { (##) ->
                                                                                        Unit# [GHC.Tuple.()];
                                                                                  };
                                                                            };
                                                                        1# -> Unit# [GHC.Tuple.()];
                                                                      };
                                                                };
                                                          };
                                                    };
                                              };
                                    } in 
                                      case ds7_sb6ZY of {
                                        GHC.IO.Handle.Types.LF ->
                                            case ipv1_sb702 of {
                                              GHC.IO.Buffer.Buffer dt4_sb70K
                                                                   dt5_sb70L
                                                                   ds10_sb70M [Occ=Once]
                                                                   dt6_sb70N [Occ=Once]
                                                                   dt7_sb70O [Occ=Once]
                                                                   dt8_sb70P ->
                                                  case
                                                      writeWideCharOffAddr# [dt4_sb70K
                                                                             dt8_sb70P
                                                                             '\n'#
                                                                             GHC.Prim.void#]
                                                  of
                                                  s2_sb70Q
                                                  { (##) ->
                                                        case
                                                            touch# [dt5_sb70L GHC.Prim.void#]
                                                        of
                                                        s'_sb70R
                                                        { (##) ->
                                                              case +# [dt8_sb70P 1#] of sat_sb70S {
                                                                __DEFAULT ->
                                                                    $w$j_sb70h
                                                                        GHC.Prim.void#
                                                                        dt4_sb70K
                                                                        dt5_sb70L
                                                                        ds10_sb70M
                                                                        dt6_sb70N
                                                                        dt7_sb70O
                                                                        sat_sb70S;
                                                              };
                                                        };
                                                  };
                                            };
                                        GHC.IO.Handle.Types.CRLF ->
                                            case ipv1_sb702 of {
                                              GHC.IO.Buffer.Buffer dt4_sb70U
                                                                   dt5_sb70V
                                                                   ds10_sb70W [Occ=Once]
                                                                   dt6_sb70X [Occ=Once]
                                                                   dt7_sb70Y [Occ=Once]
                                                                   dt8_sb70Z ->
                                                  case
                                                      writeWideCharOffAddr# [dt4_sb70U
                                                                             dt8_sb70Z
                                                                             '\r'#
                                                                             GHC.Prim.void#]
                                                  of
                                                  s2_sb710
                                                  { (##) ->
                                                        case
                                                            touch# [dt5_sb70V GHC.Prim.void#]
                                                        of
                                                        s'_sb711
                                                        { (##) ->
                                                              case
                                                                  +# [dt8_sb70Z 1#]
                                                              of
                                                              ipv2_sb712 [Dmd=<S,U>]
                                                              { __DEFAULT ->
                                                                    case
                                                                        writeWideCharOffAddr# [dt4_sb70U
                                                                                               ipv2_sb712
                                                                                               '\n'#
                                                                                               GHC.Prim.void#]
                                                                    of
                                                                    s1_sb713
                                                                    { (##) ->
                                                                          case
                                                                              touch# [dt5_sb70V
                                                                                      GHC.Prim.void#]
                                                                          of
                                                                          s'1_sb714
                                                                          { (##) ->
                                                                                case
                                                                                    +# [ipv2_sb712
                                                                                        1#]
                                                                                of
                                                                                sat_sb715
                                                                                { __DEFAULT ->
                                                                                      $w$j_sb70h
                                                                                          GHC.Prim.void#
                                                                                          dt4_sb70U
                                                                                          dt5_sb70V
                                                                                          ds10_sb70W
                                                                                          dt6_sb70X
                                                                                          dt7_sb70Y
                                                                                          sat_sb715;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                              };
                        };
                  };
        } in 
          case w_sb6ZD of wild_sb716 {
            GHC.IO.Handle.Types.FileHandle _ [Occ=Dead] dt_sb718 [Occ=Once] ->
                GHC.IO.Handle.Internals.$wwantWritableHandle'
                    GHC.IO.Handle.Text.hPutChar2
                    wild_sb716
                    dt_sb718
                    act_sb6ZG
                    GHC.Prim.void#;
            GHC.IO.Handle.Types.DuplexHandle _ [Occ=Dead]
                                             _ [Occ=Dead]
                                             dt1_sb71b [Occ=Once] ->
                GHC.IO.Handle.Internals.$wwantWritableHandle'
                    GHC.IO.Handle.Text.hPutChar2
                    wild_sb716
                    dt1_sb71b
                    act_sb6ZG
                    GHC.Prim.void#;
          };

GHC.IO.Handle.Text.hPutChar1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Types.Char
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<S,1*U><S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [w_sb71c w1_sb71d void_0E]
        case w1_sb71d of {
          GHC.Types.C# ww1_sb71g [Occ=Once] ->
              GHC.IO.Handle.Text.$whPutChar w_sb71c ww1_sb71g GHC.Prim.void#;
        };

GHC.IO.Handle.Text.hPutChar
  :: GHC.IO.Handle.Types.Handle -> GHC.Types.Char -> GHC.Types.IO ()
[GblId, Arity=3, Str=<S,1*U><S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.IO.Handle.Text.hPutChar1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Handle.Text.hPutStr7 [Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle
     -> [GHC.Types.Char]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<L,U><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [ds_sb71h ds1_sb71i void_0E]
        case ds1_sb71i of {
          [] -> Unit# [GHC.Tuple.()];
          : c_sb71l [Occ=Once!] cs_sb71m [Occ=Once] ->
              case c_sb71l of {
                GHC.Types.C# ww1_sb71o [Occ=Once] ->
                    case
                        GHC.IO.Handle.Text.$whPutChar ds_sb71h ww1_sb71o GHC.Prim.void#
                    of
                    { Unit# _ [Occ=Dead] ->
                          GHC.IO.Handle.Text.hPutStr7 ds_sb71h cs_sb71m GHC.Prim.void#;
                    };
              };
        };

GHC.IO.Handle.Text.hGetChar3
  :: GHC.Exception.SomeException
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Base.Maybe GHC.IO.Buffer.CharBuffer #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [e1_sb71s void_0E]
        case e1_sb71s of wild_sb71u {
          GHC.Exception.SomeException $dException1_sb71v [Occ=Once]
                                      e3_sb71w [Occ=Once] ->
              case GHC.Exception.$p1Exception $dException1_sb71v of sat_sb71x {
                __DEFAULT ->
                    case
                        Data.Typeable.Internal.sameTypeRep
                            sat_sb71x GHC.IO.Exception.$fExceptionIOException4
                    of
                    { GHC.Types.False -> raiseIO# [wild_sb71u GHC.Prim.void#];
                      GHC.Types.True ->
                          case e3_sb71w of wild2_sb71z {
                            GHC.IO.Exception.IOError _ [Occ=Dead]
                                                     ds2_sb71B [Occ=Once!]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead] ->
                                case ds2_sb71B of {
                                  __DEFAULT ->
                                      let {
                                        sat_sb71H [Occ=Once] :: GHC.Exception.SomeException
                                        [LclId] =
                                            [wild2_sb71z] \u []
                                                GHC.IO.Exception.$fExceptionIOException_$ctoException
                                                    wild2_sb71z;
                                      } in  raiseIO# [sat_sb71H GHC.Prim.void#];
                                  GHC.IO.Exception.EOF -> Unit# [GHC.Base.Nothing];
                                };
                          };
                    };
              };
        };

GHC.IO.Handle.Text.hGetChar7 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetChar"#;

GHC.IO.Handle.Text.hGetChar6 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hGetChar7;

GHC.IO.Handle.Text.hGetChar5 :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! ['\r'#];

GHC.IO.Handle.Text.hGetChar4 :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! ['\n'#];

GHC.IO.Handle.Text.hGetChar2
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [handle__sb71I void_0E]
        case handle__sb71I of wild_sb71K {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt2_sb71T
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       ds6_sb71Y [Occ=Once!]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case readMutVar# [dt2_sb71T GHC.Prim.void#] of {
                Unit# ipv1_sb723 [Occ=Once!] ->
                    case ipv1_sb723 of wild1_sb724 {
                      GHC.IO.Buffer.Buffer dt4_sb725 [Occ=Once]
                                           dt5_sb726 [Occ=Once]
                                           ds10_sb727 [Occ=Once]
                                           dt6_sb728 [Occ=Once]
                                           dt7_sb729
                                           dt8_sb72a ->
                          let-no-escape {
                            $w$j_sb72b [InlPrag=NOUSERINLINE[0],
                                        Occ=Once*!T[7],
                                        Dmd=<L,1*C1(C1(C1(C1(C1(C1(C1(U(U,U))))))))>]
                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                 -> GHC.Prim.Addr#
                                 -> GHC.ForeignPtr.ForeignPtrContents
                                 -> GHC.IO.Buffer.BufferState
                                 -> GHC.Prim.Int#
                                 -> GHC.Prim.Int#
                                 -> GHC.Prim.Int#
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
                            [LclId[JoinId(7)],
                             Arity=7,
                             Str=<S,U><S,U><L,U><L,U><L,U><S,U><L,U>,
                             Unf=OtherCon []] =
                                sat-only [wild_sb71K dt2_sb71T ds6_sb71Y] \r [void_0E
                                                                              ww_sb72d
                                                                              ww1_sb72e
                                                                              ww2_sb72f
                                                                              ww3_sb72g
                                                                              ww4_sb72h
                                                                              ww5_sb72i]
                                    case
                                        readWideCharOffAddr# [ww_sb72d ww4_sb72h GHC.Prim.void#]
                                    of
                                    { Unit# ipv3_sb72l [Occ=Once*] ->
                                          case touch# [ww1_sb72e GHC.Prim.void#] of s'_sb72m {
                                            (##) ->
                                                case +# [ww4_sb72h 1#] of ipv4_sb72n {
                                                  __DEFAULT ->
                                                      case ds6_sb71Y of {
                                                        GHC.IO.Handle.Types.LF ->
                                                            let {
                                                              sat_sb72q [Occ=Once]
                                                                :: GHC.IO.Buffer.Buffer
                                                                     GHC.IO.Buffer.CharBufElem
                                                              [LclId] =
                                                                  [ww_sb72d
                                                                   ww1_sb72e
                                                                   ww2_sb72f
                                                                   ww3_sb72g
                                                                   ww5_sb72i
                                                                   ipv4_sb72n] \u []
                                                                      case
                                                                          ==# [ipv4_sb72n ww5_sb72i]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            GHC.IO.Buffer.Buffer [ww_sb72d
                                                                                                  ww1_sb72e
                                                                                                  ww2_sb72f
                                                                                                  ww3_sb72g
                                                                                                  ipv4_sb72n
                                                                                                  ww5_sb72i];
                                                                        1# ->
                                                                            GHC.IO.Buffer.Buffer [ww_sb72d
                                                                                                  ww1_sb72e
                                                                                                  ww2_sb72f
                                                                                                  ww3_sb72g
                                                                                                  0#
                                                                                                  0#];
                                                                      };
                                                            } in 
                                                              case
                                                                  writeMutVar# [dt2_sb71T
                                                                                sat_sb72q
                                                                                GHC.Prim.void#]
                                                              of
                                                              s2#_sb72r
                                                              { (##) ->
                                                                    let {
                                                                      sat_sb72s [Occ=Once]
                                                                        :: GHC.Types.Char
                                                                      [LclId] =
                                                                          CCCS GHC.Types.C#! [ipv3_sb72l];
                                                                    } in  Unit# [sat_sb72s];
                                                              };
                                                        GHC.IO.Handle.Types.CRLF ->
                                                            case ipv3_sb72l of wild3_sb72t {
                                                              __DEFAULT ->
                                                                  let {
                                                                    sat_sb72v [Occ=Once]
                                                                      :: GHC.IO.Buffer.Buffer
                                                                           GHC.IO.Buffer.CharBufElem
                                                                    [LclId] =
                                                                        [ww_sb72d
                                                                         ww1_sb72e
                                                                         ww2_sb72f
                                                                         ww3_sb72g
                                                                         ww5_sb72i
                                                                         ipv4_sb72n] \u []
                                                                            case
                                                                                ==# [ipv4_sb72n
                                                                                     ww5_sb72i]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.IO.Buffer.Buffer [ww_sb72d
                                                                                                        ww1_sb72e
                                                                                                        ww2_sb72f
                                                                                                        ww3_sb72g
                                                                                                        ipv4_sb72n
                                                                                                        ww5_sb72i];
                                                                              1# ->
                                                                                  GHC.IO.Buffer.Buffer [ww_sb72d
                                                                                                        ww1_sb72e
                                                                                                        ww2_sb72f
                                                                                                        ww3_sb72g
                                                                                                        0#
                                                                                                        0#];
                                                                            };
                                                                  } in 
                                                                    case
                                                                        writeMutVar# [dt2_sb71T
                                                                                      sat_sb72v
                                                                                      GHC.Prim.void#]
                                                                    of
                                                                    s2#_sb72w
                                                                    { (##) ->
                                                                          let {
                                                                            sat_sb72x [Occ=Once]
                                                                              :: GHC.Types.Char
                                                                            [LclId] =
                                                                                CCCS GHC.Types.C#! [wild3_sb72t];
                                                                          } in  Unit# [sat_sb72x];
                                                                    };
                                                              '\r'# ->
                                                                  let-no-escape {
                                                                    $j_sb72y [Occ=Once*!T[7],
                                                                              Dmd=<C(C(C(C(C(C(C(S))))))),1*C1(C1(C1(C1(C1(C1(C1(U(U,U))))))))>]
                                                                      :: GHC.Prim.Addr#
                                                                         -> GHC.ForeignPtr.ForeignPtrContents
                                                                         -> GHC.IO.Buffer.BufferState
                                                                         -> GHC.Prim.Int#
                                                                         -> GHC.Prim.Int#
                                                                         -> GHC.Prim.Int#
                                                                         -> GHC.IO.Buffer.Buffer
                                                                              GHC.Types.Char
                                                                         -> (# GHC.Prim.State#
                                                                                 GHC.Prim.RealWorld,
                                                                               GHC.Types.Char #)
                                                                    [LclId[JoinId(7)],
                                                                     Arity=7,
                                                                     Str=<L,U><L,U><L,U><L,U><S,U><S,U><L,U(U,U,U,U,U,U)>,
                                                                     Unf=OtherCon []] =
                                                                        sat-only [wild_sb71K
                                                                                  dt2_sb71T] \r [dt9_sb72z
                                                                                                 dt10_sb72A
                                                                                                 ds12_sb72B
                                                                                                 dt11_sb72C
                                                                                                 dt12_sb72D
                                                                                                 dt13_sb72E
                                                                                                 wild4_sb72F]
                                                                            case
                                                                                ==# [dt12_sb72D
                                                                                     dt13_sb72E]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      readWideCharOffAddr# [dt9_sb72z
                                                                                                            dt12_sb72D
                                                                                                            GHC.Prim.void#]
                                                                                  of
                                                                                  { Unit# ipv6_sb72J [Occ=Once!] ->
                                                                                        case
                                                                                            touch# [dt10_sb72A
                                                                                                    GHC.Prim.void#]
                                                                                        of
                                                                                        s'1_sb72K
                                                                                        { (##) ->
                                                                                              case
                                                                                                  ipv6_sb72J
                                                                                              of
                                                                                              { __DEFAULT ->
                                                                                                    case
                                                                                                        writeMutVar# [dt2_sb71T
                                                                                                                      wild4_sb72F
                                                                                                                      GHC.Prim.void#]
                                                                                                    of
                                                                                                    s2#_sb72M
                                                                                                    { (##) ->
                                                                                                          Unit# [GHC.IO.Handle.Text.hGetChar5];
                                                                                                    };
                                                                                                '\n'# ->
                                                                                                    let {
                                                                                                      sat_sb72P [Occ=Once]
                                                                                                        :: GHC.IO.Buffer.Buffer
                                                                                                             GHC.IO.Buffer.CharBufElem
                                                                                                      [LclId] =
                                                                                                          [dt9_sb72z
                                                                                                           dt10_sb72A
                                                                                                           ds12_sb72B
                                                                                                           dt11_sb72C
                                                                                                           dt12_sb72D
                                                                                                           dt13_sb72E] \u []
                                                                                                              case
                                                                                                                  +# [dt12_sb72D
                                                                                                                      1#]
                                                                                                              of
                                                                                                              ipv7_sb72N [Dmd=<S,U>]
                                                                                                              { __DEFAULT ->
                                                                                                                    case
                                                                                                                        ==# [ipv7_sb72N
                                                                                                                             dt13_sb72E]
                                                                                                                    of
                                                                                                                    { __DEFAULT ->
                                                                                                                          GHC.IO.Buffer.Buffer [dt9_sb72z
                                                                                                                                                dt10_sb72A
                                                                                                                                                ds12_sb72B
                                                                                                                                                dt11_sb72C
                                                                                                                                                ipv7_sb72N
                                                                                                                                                dt13_sb72E];
                                                                                                                      1# ->
                                                                                                                          GHC.IO.Buffer.Buffer [dt9_sb72z
                                                                                                                                                dt10_sb72A
                                                                                                                                                ds12_sb72B
                                                                                                                                                dt11_sb72C
                                                                                                                                                0#
                                                                                                                                                0#];
                                                                                                                    };
                                                                                                              };
                                                                                                    } in 
                                                                                                      case
                                                                                                          writeMutVar# [dt2_sb71T
                                                                                                                        sat_sb72P
                                                                                                                        GHC.Prim.void#]
                                                                                                      of
                                                                                                      s2#_sb72Q
                                                                                                      { (##) ->
                                                                                                            Unit# [GHC.IO.Handle.Text.hGetChar4];
                                                                                                      };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                              1# ->
                                                                                  let {
                                                                                    sat_sb73b [Occ=Once]
                                                                                      :: GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld
                                                                                         -> (# GHC.Prim.State#
                                                                                                 GHC.Prim.RealWorld,
                                                                                               GHC.Base.Maybe
                                                                                                 GHC.IO.Buffer.CharBuffer #)
                                                                                    [LclId] =
                                                                                        [wild_sb71K
                                                                                         dt9_sb72z
                                                                                         dt10_sb72A
                                                                                         ds12_sb72B
                                                                                         dt11_sb72C
                                                                                         dt12_sb72D
                                                                                         dt13_sb72E
                                                                                         wild4_sb72F] \r [void_0E]
                                                                                            case
                                                                                                -# [dt13_sb72E
                                                                                                    dt12_sb72D]
                                                                                            of
                                                                                            { __DEFAULT ->
                                                                                                  let {
                                                                                                    sat_sb72T [Occ=Once]
                                                                                                      :: GHC.Base.Maybe
                                                                                                           GHC.IO.Buffer.CharBuffer
                                                                                                    [LclId] =
                                                                                                        CCCS GHC.Base.Just! [wild4_sb72F];
                                                                                                  } in 
                                                                                                    Unit# [sat_sb72T];
                                                                                              0# ->
                                                                                                  case
                                                                                                      GHC.IO.Handle.Internals.hLookAhead_2
                                                                                                          wild_sb71K
                                                                                                          wild4_sb72F
                                                                                                          GHC.Prim.void#
                                                                                                  of
                                                                                                  { Unit# ipv6_sb72W [Occ=Once] ->
                                                                                                        let {
                                                                                                          sat_sb72X [Occ=Once]
                                                                                                            :: GHC.Base.Maybe
                                                                                                                 GHC.IO.Buffer.CharBuffer
                                                                                                          [LclId] =
                                                                                                              CCCS GHC.Base.Just! [ipv6_sb72W];
                                                                                                        } in 
                                                                                                          Unit# [sat_sb72X];
                                                                                                  };
                                                                                              1# ->
                                                                                                  case
                                                                                                      readWideCharOffAddr# [dt9_sb72z
                                                                                                                            dt12_sb72D
                                                                                                                            GHC.Prim.void#]
                                                                                                  of
                                                                                                  { Unit# ipv6_sb730 [Occ=Once!] ->
                                                                                                        case
                                                                                                            touch# [dt10_sb72A
                                                                                                                    GHC.Prim.void#]
                                                                                                        of
                                                                                                        s'1_sb731
                                                                                                        { (##) ->
                                                                                                              case
                                                                                                                  ipv6_sb730
                                                                                                              of
                                                                                                              { __DEFAULT ->
                                                                                                                    let {
                                                                                                                      sat_sb733 [Occ=Once]
                                                                                                                        :: GHC.Base.Maybe
                                                                                                                             GHC.IO.Buffer.CharBuffer
                                                                                                                      [LclId] =
                                                                                                                          CCCS GHC.Base.Just! [wild4_sb72F];
                                                                                                                    } in 
                                                                                                                      Unit# [sat_sb733];
                                                                                                                '\r'# ->
                                                                                                                    case
                                                                                                                        writeWideCharOffAddr# [dt9_sb72z
                                                                                                                                               0#
                                                                                                                                               '\r'#
                                                                                                                                               GHC.Prim.void#]
                                                                                                                    of
                                                                                                                    s2_sb734
                                                                                                                    { (##) ->
                                                                                                                          case
                                                                                                                              touch# [dt10_sb72A
                                                                                                                                      GHC.Prim.void#]
                                                                                                                          of
                                                                                                                          s'2_sb735
                                                                                                                          { (##) ->
                                                                                                                                let {
                                                                                                                                  sat_sb736 [Occ=Once]
                                                                                                                                    :: GHC.IO.Buffer.CharBuffer
                                                                                                                                  [LclId] =
                                                                                                                                      CCCS GHC.IO.Buffer.Buffer! [dt9_sb72z
                                                                                                                                                                  dt10_sb72A
                                                                                                                                                                  ds12_sb72B
                                                                                                                                                                  dt11_sb72C
                                                                                                                                                                  0#
                                                                                                                                                                  1#];
                                                                                                                                } in 
                                                                                                                                  case
                                                                                                                                      GHC.IO.Handle.Internals.hLookAhead_2
                                                                                                                                          wild_sb71K
                                                                                                                                          sat_sb736
                                                                                                                                          GHC.Prim.void#
                                                                                                                                  of
                                                                                                                                  { Unit# ipv8_sb739 [Occ=Once] ->
                                                                                                                                        let {
                                                                                                                                          sat_sb73a [Occ=Once]
                                                                                                                                            :: GHC.Base.Maybe
                                                                                                                                                 GHC.IO.Buffer.CharBuffer
                                                                                                                                          [LclId] =
                                                                                                                                              CCCS GHC.Base.Just! [ipv8_sb739];
                                                                                                                                        } in 
                                                                                                                                          Unit# [sat_sb73a];
                                                                                                                                  };
                                                                                                                          };
                                                                                                                    };
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                  } in 
                                                                                    case
                                                                                        catch# [sat_sb73b
                                                                                                GHC.IO.Handle.Text.hGetChar3
                                                                                                GHC.Prim.void#]
                                                                                    of
                                                                                    { Unit# ipv6_sb73e [Occ=Once!] ->
                                                                                          case
                                                                                              ipv6_sb73e
                                                                                          of
                                                                                          { GHC.Base.Nothing ->
                                                                                                case
                                                                                                    writeMutVar# [dt2_sb71T
                                                                                                                  wild4_sb72F
                                                                                                                  GHC.Prim.void#]
                                                                                                of
                                                                                                s2#_sb73g
                                                                                                { (##) ->
                                                                                                      Unit# [GHC.IO.Handle.Text.hGetChar5];
                                                                                                };
                                                                                            GHC.Base.Just buf3_sb73h [Occ=Once*] ->
                                                                                                case
                                                                                                    readWideCharOffAddr# [dt9_sb72z
                                                                                                                          dt12_sb72D
                                                                                                                          GHC.Prim.void#]
                                                                                                of
                                                                                                { Unit# ipv8_sb73k [Occ=Once!] ->
                                                                                                      case
                                                                                                          touch# [dt10_sb72A
                                                                                                                  GHC.Prim.void#]
                                                                                                      of
                                                                                                      s'1_sb73l
                                                                                                      { (##) ->
                                                                                                            case
                                                                                                                ipv8_sb73k
                                                                                                            of
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      writeMutVar# [dt2_sb71T
                                                                                                                                    buf3_sb73h
                                                                                                                                    GHC.Prim.void#]
                                                                                                                  of
                                                                                                                  s2#_sb73n
                                                                                                                  { (##) ->
                                                                                                                        Unit# [GHC.IO.Handle.Text.hGetChar5];
                                                                                                                  };
                                                                                                              '\n'# ->
                                                                                                                  let {
                                                                                                                    sat_sb73x [Occ=Once]
                                                                                                                      :: GHC.IO.Buffer.Buffer
                                                                                                                           GHC.IO.Buffer.CharBufElem
                                                                                                                    [LclId] =
                                                                                                                        [dt12_sb72D
                                                                                                                         buf3_sb73h] \u []
                                                                                                                            case
                                                                                                                                buf3_sb73h
                                                                                                                            of
                                                                                                                            { GHC.IO.Buffer.Buffer dt14_sb73p [Occ=Once*]
                                                                                                                                                   dt15_sb73q [Occ=Once*]
                                                                                                                                                   ds15_sb73r [Occ=Once*]
                                                                                                                                                   dt16_sb73s [Occ=Once*]
                                                                                                                                                   _ [Occ=Dead]
                                                                                                                                                   dt18_sb73u ->
                                                                                                                                  case
                                                                                                                                      +# [dt12_sb72D
                                                                                                                                          1#]
                                                                                                                                  of
                                                                                                                                  ipv9_sb73v [Dmd=<S,U>]
                                                                                                                                  { __DEFAULT ->
                                                                                                                                        case
                                                                                                                                            ==# [ipv9_sb73v
                                                                                                                                                 dt18_sb73u]
                                                                                                                                        of
                                                                                                                                        { __DEFAULT ->
                                                                                                                                              GHC.IO.Buffer.Buffer [dt14_sb73p
                                                                                                                                                                    dt15_sb73q
                                                                                                                                                                    ds15_sb73r
                                                                                                                                                                    dt16_sb73s
                                                                                                                                                                    ipv9_sb73v
                                                                                                                                                                    dt18_sb73u];
                                                                                                                                          1# ->
                                                                                                                                              GHC.IO.Buffer.Buffer [dt14_sb73p
                                                                                                                                                                    dt15_sb73q
                                                                                                                                                                    ds15_sb73r
                                                                                                                                                                    dt16_sb73s
                                                                                                                                                                    0#
                                                                                                                                                                    0#];
                                                                                                                                        };
                                                                                                                                  };
                                                                                                                            };
                                                                                                                  } in 
                                                                                                                    case
                                                                                                                        writeMutVar# [dt2_sb71T
                                                                                                                                      sat_sb73x
                                                                                                                                      GHC.Prim.void#]
                                                                                                                    of
                                                                                                                    s2#_sb73y
                                                                                                                    { (##) ->
                                                                                                                          Unit# [GHC.IO.Handle.Text.hGetChar4];
                                                                                                                    };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                            };
                                                                  } in 
                                                                    case
                                                                        ==# [ipv4_sb72n ww5_sb72i]
                                                                    of
                                                                    { __DEFAULT ->
                                                                          let {
                                                                            sat_sb73A [Occ=Once]
                                                                              :: GHC.IO.Buffer.Buffer
                                                                                   GHC.Types.Char
                                                                            [LclId] =
                                                                                CCCS GHC.IO.Buffer.Buffer! [ww_sb72d
                                                                                                            ww1_sb72e
                                                                                                            ww2_sb72f
                                                                                                            ww3_sb72g
                                                                                                            ipv4_sb72n
                                                                                                            ww5_sb72i];
                                                                          } in 
                                                                            $j_sb72y
                                                                                ww_sb72d
                                                                                ww1_sb72e
                                                                                ww2_sb72f
                                                                                ww3_sb72g
                                                                                ipv4_sb72n
                                                                                ww5_sb72i
                                                                                sat_sb73A;
                                                                      1# ->
                                                                          let {
                                                                            sat_sb73B [Occ=Once]
                                                                              :: GHC.IO.Buffer.Buffer
                                                                                   GHC.Types.Char
                                                                            [LclId] =
                                                                                CCCS GHC.IO.Buffer.Buffer! [ww_sb72d
                                                                                                            ww1_sb72e
                                                                                                            ww2_sb72f
                                                                                                            ww3_sb72g
                                                                                                            0#
                                                                                                            0#];
                                                                          } in 
                                                                            $j_sb72y
                                                                                ww_sb72d
                                                                                ww1_sb72e
                                                                                ww2_sb72f
                                                                                ww3_sb72g
                                                                                0#
                                                                                0#
                                                                                sat_sb73B;
                                                                    };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                          } in 
                            case ==# [dt7_sb729 dt8_sb72a] of {
                              __DEFAULT ->
                                  $w$j_sb72b
                                      GHC.Prim.void#
                                      dt4_sb725
                                      dt5_sb726
                                      ds10_sb727
                                      dt6_sb728
                                      dt7_sb729
                                      dt8_sb72a;
                              1# ->
                                  case
                                      GHC.IO.Handle.Internals.hLookAhead_2
                                          wild_sb71K wild1_sb724 GHC.Prim.void#
                                  of
                                  { Unit# ipv3_sb73F [Occ=Once!] ->
                                        case ipv3_sb73F of {
                                          GHC.IO.Buffer.Buffer ww1_sb73H [Occ=Once]
                                                               ww2_sb73I [Occ=Once]
                                                               ww3_sb73J [Occ=Once]
                                                               ww4_sb73K [Occ=Once]
                                                               ww5_sb73L [Occ=Once]
                                                               ww6_sb73M [Occ=Once] ->
                                              $w$j_sb72b
                                                  GHC.Prim.void#
                                                  ww1_sb73H
                                                  ww2_sb73I
                                                  ww3_sb73J
                                                  ww4_sb73K
                                                  ww5_sb73L
                                                  ww6_sb73M;
                                        };
                                  };
                            };
                    };
              };
        };

GHC.IO.Handle.Text.hGetChar1
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
[GblId, Arity=2, Str=<L,U>, Unf=OtherCon []] =
    [] \r [handle_sb73N void_0E]
        GHC.IO.Handle.Internals.wantReadableHandle_1
            GHC.IO.Handle.Text.hGetChar6
            handle_sb73N
            GHC.IO.Handle.Text.hGetChar2
            GHC.Prim.void#;

GHC.IO.Handle.Text.hGetChar
  :: GHC.IO.Handle.Types.Handle -> GHC.Types.IO GHC.Types.Char
[GblId, Arity=2, Str=<L,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.IO.Handle.Text.hGetChar1 eta_B2 GHC.Prim.void#;

GHC.IO.Handle.Text.hGetBuf3 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

$wunpack_nl_rb6WF
  :: GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> [GHC.Types.Char]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           ([GHC.Types.Char], GHC.Types.Int) #)
[GblId,
 Arity=6,
 Caf=NoCafRefs,
 Str=<L,U><L,U><S,U><S,U><L,U><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [ww_sb73O
                    ww1_sb73P
                    ww2_sb73Q
                    ww3_sb73R
                    w_sb73S
                    void_0E]
        case ==# [ww2_sb73Q ww3_sb73R] of {
          __DEFAULT ->
              case -# [ww3_sb73R 1#] of sat_sb73V {
                __DEFAULT ->
                    case readWideCharOffAddr# [ww_sb73O sat_sb73V GHC.Prim.void#] of {
                      Unit# ipv1_sb73Y [Occ=Once!] ->
                          let {
                            $wunpackRB_sb73Z [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
                              :: [GHC.Types.Char]
                                 -> GHC.Prim.Int#
                                 -> GHC.Prim.State# GHC.Prim.RealWorld
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                            [LclId, Arity=3, Str=<L,U><S,U><S,U>, Unf=OtherCon []] =
                                sat-only [ww_sb73O ww2_sb73Q $wunpackRB_sb73Z] \r [w2_sb740
                                                                                   ww4_sb741
                                                                                   void_0E]
                                    case <# [ww4_sb741 ww2_sb73Q] of {
                                      __DEFAULT ->
                                          case
                                              readWideCharOffAddr# [ww_sb73O
                                                                    ww4_sb741
                                                                    GHC.Prim.void#]
                                          of
                                          { Unit# ipv3_sb746 [Occ=Once!] ->
                                                case ipv3_sb746 of wild_sb747 {
                                                  __DEFAULT ->
                                                      case -# [ww4_sb741 1#] of sat_sb74a {
                                                        __DEFAULT ->
                                                            let {
                                                              sat_sb748 [Occ=Once]
                                                                :: GHC.IO.Buffer.CharBufElem
                                                              [LclId] =
                                                                  CCCS GHC.Types.C#! [wild_sb747]; } in
                                                            let {
                                                              sat_sb749 [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId] =
                                                                  CCCS :! [sat_sb748 w2_sb740];
                                                            } in 
                                                              $wunpackRB_sb73Z
                                                                  sat_sb749
                                                                  sat_sb74a
                                                                  GHC.Prim.void#;
                                                      };
                                                  '\n'# ->
                                                      case ># [ww4_sb741 ww2_sb73Q] of {
                                                        __DEFAULT ->
                                                            case -# [ww4_sb741 1#] of sat_sb74d {
                                                              __DEFAULT ->
                                                                  let {
                                                                    sat_sb74c [Occ=Once]
                                                                      :: [GHC.Types.Char]
                                                                    [LclId] =
                                                                        CCCS :! [GHC.IO.Handle.Text.hGetChar4
                                                                                 w2_sb740];
                                                                  } in 
                                                                    $wunpackRB_sb73Z
                                                                        sat_sb74c
                                                                        sat_sb74d
                                                                        GHC.Prim.void#;
                                                            };
                                                        1# ->
                                                            case -# [ww4_sb741 1#] of sat_sb74e {
                                                              __DEFAULT ->
                                                                  case
                                                                      readWideCharOffAddr# [ww_sb73O
                                                                                            sat_sb74e
                                                                                            GHC.Prim.void#]
                                                                  of
                                                                  { Unit# ipv5_sb74h [Occ=Once!] ->
                                                                        case ipv5_sb74h of {
                                                                          __DEFAULT ->
                                                                              case
                                                                                  -# [ww4_sb741 1#]
                                                                              of
                                                                              sat_sb74k
                                                                              { __DEFAULT ->
                                                                                    let {
                                                                                      sat_sb74j [Occ=Once]
                                                                                        :: [GHC.Types.Char]
                                                                                      [LclId] =
                                                                                          CCCS :! [GHC.IO.Handle.Text.hGetChar4
                                                                                                   w2_sb740];
                                                                                    } in 
                                                                                      $wunpackRB_sb73Z
                                                                                          sat_sb74j
                                                                                          sat_sb74k
                                                                                          GHC.Prim.void#;
                                                                              };
                                                                          '\r'# ->
                                                                              case
                                                                                  -# [ww4_sb741 2#]
                                                                              of
                                                                              sat_sb74m
                                                                              { __DEFAULT ->
                                                                                    let {
                                                                                      sat_sb74l [Occ=Once]
                                                                                        :: [GHC.Types.Char]
                                                                                      [LclId] =
                                                                                          CCCS :! [GHC.IO.Handle.Text.hGetChar4
                                                                                                   w2_sb740];
                                                                                    } in 
                                                                                      $wunpackRB_sb73Z
                                                                                          sat_sb74l
                                                                                          sat_sb74m
                                                                                          GHC.Prim.void#;
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                      1# -> Unit# [w2_sb740];
                                    };
                          } in 
                            case ipv1_sb73Y of {
                              __DEFAULT ->
                                  case -# [ww3_sb73R 1#] of sat_sb74o {
                                    __DEFAULT ->
                                        case $wunpackRB_sb73Z w_sb73S sat_sb74o GHC.Prim.void# of {
                                          Unit# ipv3_sb74r [Occ=Once] ->
                                              case touch# [ww1_sb73P GHC.Prim.void#] of s'_sb74s {
                                                (##) ->
                                                    let {
                                                      sat_sb74t [Occ=Once] :: GHC.Types.Int
                                                      [LclId] =
                                                          CCCS GHC.Types.I#! [ww3_sb73R]; } in
                                                    let {
                                                      sat_sb74u [Occ=Once]
                                                        :: ([GHC.Types.Char], GHC.Types.Int)
                                                      [LclId] =
                                                          CCCS (,)! [ipv3_sb74r sat_sb74t];
                                                    } in  Unit# [sat_sb74u];
                                              };
                                        };
                                  };
                              '\r'# ->
                                  case -# [ww3_sb73R 2#] of sat_sb74v {
                                    __DEFAULT ->
                                        case $wunpackRB_sb73Z w_sb73S sat_sb74v GHC.Prim.void# of {
                                          Unit# ipv3_sb74y [Occ=Once] ->
                                              case touch# [ww1_sb73P GHC.Prim.void#] of s'_sb74z {
                                                (##) ->
                                                    case -# [ww3_sb73R 1#] of sat_sb74A {
                                                      __DEFAULT ->
                                                          let {
                                                            sat_sb74B [Occ=Once] :: GHC.Types.Int
                                                            [LclId] =
                                                                CCCS GHC.Types.I#! [sat_sb74A]; } in
                                                          let {
                                                            sat_sb74C [Occ=Once]
                                                              :: ([GHC.Types.Char], GHC.Types.Int)
                                                            [LclId] =
                                                                CCCS (,)! [ipv3_sb74y sat_sb74B];
                                                          } in  Unit# [sat_sb74C];
                                                    };
                                              };
                                        };
                                  };
                            };
                    };
              };
          1# ->
              let {
                sat_sb74D [Occ=Once] :: ([GHC.Types.Char], GHC.Types.Int)
                [LclId] =
                    CCCS (,)! [w_sb73S GHC.IO.Handle.Text.hGetBuf3];
              } in  Unit# [sat_sb74D];
        };

GHC.IO.Handle.Text.hGetContents4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetContents"#;

GHC.IO.Handle.Text.hGetContents3 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.IO.Handle.Text.hGetContents4;

lvl3_rb6WG :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "\r"#;

lvl4_rb6WH :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl3_rb6WG;

$wlvl_rb6WI
  :: GHC.IO.Handle.Types.Handle
     -> GHC.IO.Exception.IOErrorType
     -> GHC.Base.String
     -> GHC.Base.Maybe Foreign.C.Types.CInt
     -> GHC.Base.Maybe GHC.IO.FilePath
     -> [GHC.Types.Char]
[GblId,
 Arity=5,
 Str=<B,U><B,U><B,U><B,U><B,1*U>x,
 Unf=OtherCon []] =
    sat-only [] \r [w_sb74E ww_sb74F ww1_sb74G ww2_sb74H ww3_sb74I]
        let {
          sat_sb74S [Occ=Once] :: GHC.Base.Maybe GHC.IO.FilePath
          [LclId] =
              [w_sb74E ww3_sb74I] \u []
                  case ww3_sb74I of wild1_sb74K {
                    GHC.Base.Nothing ->
                        case w_sb74E of {
                          GHC.IO.Handle.Types.FileHandle path_sb74M [Occ=Once]
                                                         _ [Occ=Dead] ->
                              GHC.Base.Just [path_sb74M];
                          GHC.IO.Handle.Types.DuplexHandle path_sb74O [Occ=Once]
                                                           _ [Occ=Dead]
                                                           _ [Occ=Dead] ->
                              GHC.Base.Just [path_sb74O];
                        };
                    GHC.Base.Just _ [Occ=Dead] -> wild1_sb74K;
                  }; } in
        let {
          sat_sb74J [Occ=Once] :: GHC.Base.Maybe GHC.IO.Handle.Types.Handle
          [LclId] =
              CCCS GHC.Base.Just! [w_sb74E]; } in
        let {
          sat_sb74T [Occ=Once] :: GHC.IO.Exception.IOException
          [LclId] =
              CCCS GHC.IO.Exception.IOError! [sat_sb74J
                                              ww_sb74F
                                              GHC.IO.Handle.Text.hGetContents3
                                              ww1_sb74G
                                              ww2_sb74H
                                              sat_sb74S];
        } in 
          GHC.Exception.throw
              GHC.IO.Exception.$fExceptionIOException sat_sb74T;

lvl5_rb6WJ :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "delayed read on closed handle"#;

lvl6_rb6WK :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl5_rb6WJ;

lvl7_rb6WL
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.IO.Handle.Types.Handle__, [GHC.Types.Char]) #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    sat-only [] \r [handle_sb74U void_0E]
        let {
          sat_sb74Y [Occ=Once] :: GHC.Exception.SomeException
          [LclId] =
              [handle_sb74U] \u []
                  let {
                    sat_sb74W [Occ=Once] :: GHC.Base.Maybe GHC.IO.Handle.Types.Handle
                    [LclId] =
                        CCCS GHC.Base.Just! [handle_sb74U]; } in
                  let {
                    sat_sb74X [Occ=Once] :: GHC.IO.Exception.IOException
                    [LclId] =
                        CCCS GHC.IO.Exception.IOError! [sat_sb74W
                                                        GHC.IO.Exception.IllegalOperation
                                                        GHC.IO.Handle.Text.hGetContents3
                                                        lvl6_rb6WK
                                                        GHC.Base.Nothing
                                                        GHC.Base.Nothing];
                  } in 
                    GHC.IO.Exception.$fExceptionIOException_$ctoException sat_sb74X;
        } in  raiseIO# [sat_sb74Y GHC.Prim.void#];

lvl8_rb6WM :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "illegal handle type"#;

lvl9_rb6WN :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl8_rb6WM;

lvl10_rb6WO
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.IO.Handle.Types.Handle__, [GHC.Types.Char]) #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    sat-only [] \r [handle_sb74Z void_0E]
        let {
          sat_sb753 [Occ=Once] :: GHC.Exception.SomeException
          [LclId] =
              [handle_sb74Z] \u []
                  let {
                    sat_sb751 [Occ=Once] :: GHC.Base.Maybe GHC.IO.Handle.Types.Handle
                    [LclId] =
                        CCCS GHC.Base.Just! [handle_sb74Z]; } in
                  let {
                    sat_sb752 [Occ=Once] :: GHC.IO.Exception.IOException
                    [LclId] =
                        CCCS GHC.IO.Exception.IOError! [sat_sb751
                                                        GHC.IO.Exception.IllegalOperation
                                                        GHC.IO.Handle.Text.hGetContents3
                                                        lvl9_rb6WN
                                                        GHC.Base.Nothing
                                                        GHC.Base.Nothing];
                  } in 
                    GHC.IO.Exception.$fExceptionIOException_$ctoException sat_sb752;
        } in  raiseIO# [sat_sb753 GHC.Prim.void#];

GHC.IO.Handle.Text.hGetContents2 [Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [handle_sb754 void_0E]
        let {
          sat_sb77w [Occ=Once] :: GHC.Types.IO [GHC.Types.Char]
          [LclId] =
              [handle_sb754] \r [void_0E]
                  case noDuplicate# [GHC.Prim.void#] of s'_sb757 {
                    (##) ->
                        let {
                          act_sb758 [Occ=Once*, Dmd=<C(S),C(U)>]
                            :: GHC.IO.Handle.Types.Handle__
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     (GHC.IO.Handle.Types.Handle__, [GHC.Types.Char]) #)
                          [LclId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
                              [handle_sb754] \r [handle__sb759 void_0E]
                                  case handle__sb759 of wild_sb75b {
                                    GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 ds2_sb75g [Occ=Once!]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 dt2_sb75k
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 ds7_sb75p
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead] ->
                                        case ds2_sb75g of {
                                          __DEFAULT -> lvl10_rb6WO handle_sb754 GHC.Prim.void#;
                                          GHC.IO.Handle.Types.ClosedHandle ->
                                              lvl7_rb6WL handle_sb754 GHC.Prim.void#;
                                          GHC.IO.Handle.Types.SemiClosedHandle ->
                                              case readMutVar# [dt2_sb75k GHC.Prim.void#] of {
                                                Unit# ipv1_sb75v ->
                                                    let {
                                                      sat_sb77p [Occ=Once]
                                                        :: GHC.Exception.SomeException
                                                           -> GHC.Prim.State# GHC.Prim.RealWorld
                                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                 (GHC.IO.Handle.Types.Handle__,
                                                                  [GHC.Types.Char]) #)
                                                      [LclId] =
                                                          [handle_sb754
                                                           wild_sb75b
                                                           ipv1_sb75v] \r [e1_sb76U void_0E]
                                                              case e1_sb76U of wild2_sb76W {
                                                                GHC.Exception.SomeException $dException1_sb76X [Occ=Once]
                                                                                            e3_sb76Y [Occ=Once] ->
                                                                    case
                                                                        GHC.Exception.$p1Exception
                                                                            $dException1_sb76X
                                                                    of
                                                                    sat_sb76Z
                                                                    { __DEFAULT ->
                                                                          case
                                                                              Data.Typeable.Internal.sameTypeRep
                                                                                  sat_sb76Z
                                                                                  GHC.IO.Exception.$fExceptionIOException4
                                                                          of
                                                                          { GHC.Types.False ->
                                                                                raiseIO# [wild2_sb76W
                                                                                          GHC.Prim.void#];
                                                                            GHC.Types.True ->
                                                                                case
                                                                                    GHC.IO.Handle.Internals.hClose_help1
                                                                                        wild_sb75b
                                                                                        GHC.Prim.void#
                                                                                of
                                                                                { Unit# ipv3_sb773 [Occ=Once!] ->
                                                                                      case
                                                                                          ipv3_sb773
                                                                                      of
                                                                                      { (,) handle_'_sb775 [Occ=Once]
                                                                                            _ [Occ=Dead] ->
                                                                                            let {
                                                                                              sat_sb77n [Occ=Once]
                                                                                                :: [GHC.Types.Char]
                                                                                              [LclId] =
                                                                                                  [handle_sb754
                                                                                                   ipv1_sb75v
                                                                                                   e3_sb76Y] \u []
                                                                                                      case
                                                                                                          e3_sb76Y
                                                                                                      of
                                                                                                      { GHC.IO.Exception.IOError _ [Occ=Dead]
                                                                                                                                 ds14_sb779 [Occ=Once!]
                                                                                                                                 _ [Occ=Dead]
                                                                                                                                 ds16_sb77b [Occ=Once]
                                                                                                                                 ds17_sb77c [Occ=Once]
                                                                                                                                 ds18_sb77d [Occ=Once] ->
                                                                                                            case
                                                                                                                ds14_sb779
                                                                                                            of
                                                                                                            wild6_sb77e
                                                                                                            { __DEFAULT ->
                                                                                                                  $wlvl_rb6WI
                                                                                                                      handle_sb754
                                                                                                                      wild6_sb77e
                                                                                                                      ds16_sb77b
                                                                                                                      ds17_sb77c
                                                                                                                      ds18_sb77d;
                                                                                                              GHC.IO.Exception.EOF ->
                                                                                                                  case
                                                                                                                      ipv1_sb75v
                                                                                                                  of
                                                                                                                  { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                                                                         _ [Occ=Dead]
                                                                                                                                         _ [Occ=Dead]
                                                                                                                                         _ [Occ=Dead]
                                                                                                                                         dt7_sb77k [Occ=Once]
                                                                                                                                         dt8_sb77l [Occ=Once] ->
                                                                                                                        case
                                                                                                                            ==# [dt7_sb77k
                                                                                                                                 dt8_sb77l]
                                                                                                                        of
                                                                                                                        { __DEFAULT ->
                                                                                                                              lvl4_rb6WH;
                                                                                                                          1# ->
                                                                                                                              [] [];
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      }; } in
                                                                                            let {
                                                                                              sat_sb77o [Occ=Once]
                                                                                                :: (GHC.IO.Handle.Types.Handle__,
                                                                                                    [GHC.Types.Char])
                                                                                              [LclId] =
                                                                                                  CCCS (,)! [handle_'_sb775
                                                                                                             sat_sb77n];
                                                                                            } in 
                                                                                              Unit# [sat_sb77o];
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              }; } in
                                                    let {
                                                      sat_sb76T [Occ=Once]
                                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                 (GHC.IO.Handle.Types.Handle__,
                                                                  [GHC.Types.Char]) #)
                                                      [LclId] =
                                                          [handle_sb754
                                                           wild_sb75b
                                                           dt2_sb75k
                                                           ds7_sb75p
                                                           ipv1_sb75v] \r [void_0E]
                                                              case ipv1_sb75v of wild2_sb75x {
                                                                GHC.IO.Buffer.Buffer dt4_sb75y
                                                                                     dt5_sb75z
                                                                                     ds_sb75A [Occ=Once*]
                                                                                     dt6_sb75B [Occ=Once*]
                                                                                     dt7_sb75C
                                                                                     dt8_sb75D ->
                                                                    let-no-escape {
                                                                      $w$j_sb75E [InlPrag=NOUSERINLINE[0],
                                                                                  Occ=Once*!T[7],
                                                                                  Dmd=<L,1*C1(C1(C1(C1(C1(C1(C1(U)))))))>]
                                                                        :: GHC.Prim.State#
                                                                             GHC.Prim.RealWorld
                                                                           -> GHC.Prim.Addr#
                                                                           -> GHC.ForeignPtr.ForeignPtrContents
                                                                           -> GHC.IO.Buffer.BufferState
                                                                           -> GHC.Prim.Int#
                                                                           -> GHC.Prim.Int#
                                                                           -> GHC.Prim.Int#
                                                                           -> (# GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld,
                                                                                 (GHC.IO.Handle.Types.Handle__,
                                                                                  [GHC.Types.Char]) #)
                                                                      [LclId[JoinId(7)],
                                                                       Arity=7,
                                                                       Str=<S,U><L,U><L,U><L,U><L,U><L,U><L,U>,
                                                                       Unf=OtherCon []] =
                                                                          sat-only [handle_sb754
                                                                                    wild_sb75b
                                                                                    dt2_sb75k
                                                                                    ds7_sb75p] \r [void_0E
                                                                                                   ww_sb75G
                                                                                                   ww1_sb75H
                                                                                                   ww2_sb75I
                                                                                                   ww3_sb75J
                                                                                                   ww4_sb75K
                                                                                                   ww5_sb75L]
                                                                              case
                                                                                  GHC.IO.Handle.Text.hGetContents2
                                                                                      handle_sb754
                                                                                      GHC.Prim.void#
                                                                              of
                                                                              { Unit# ipv3_sb75O [Occ=Once*] ->
                                                                                    case
                                                                                        ds7_sb75p
                                                                                    of
                                                                                    { GHC.IO.Handle.Types.LF ->
                                                                                          case
                                                                                              ==# [ww4_sb75K
                                                                                                   ww5_sb75L]
                                                                                          of
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    -# [ww5_sb75L
                                                                                                        1#]
                                                                                                of
                                                                                                sat_sb769
                                                                                                { __DEFAULT ->
                                                                                                      let-no-escape {
                                                                                                        $j_sb75R [Occ=OnceL!T[2],
                                                                                                                  Dmd=<C(C(S)),C(C1(U))>]
                                                                                                          :: GHC.Prim.State#
                                                                                                               GHC.Prim.RealWorld
                                                                                                             -> [GHC.IO.Buffer.CharBufElem]
                                                                                                             -> (# GHC.Prim.State#
                                                                                                                     GHC.Prim.RealWorld,
                                                                                                                   (GHC.IO.Handle.Types.Handle__,
                                                                                                                    [GHC.Types.Char]) #)
                                                                                                        [LclId[JoinId(2)],
                                                                                                         Arity=2,
                                                                                                         Str=<S,U><L,U>,
                                                                                                         Unf=OtherCon []] =
                                                                                                            sat-only [wild_sb75b
                                                                                                                      dt2_sb75k
                                                                                                                      ww_sb75G
                                                                                                                      ww1_sb75H
                                                                                                                      ww2_sb75I
                                                                                                                      ww3_sb75J] \r [void_0E
                                                                                                                                     ipv5_sb75T]
                                                                                                                case
                                                                                                                    touch# [ww1_sb75H
                                                                                                                            GHC.Prim.void#]
                                                                                                                of
                                                                                                                s'1_sb75U
                                                                                                                { (##) ->
                                                                                                                      let {
                                                                                                                        sat_sb75V [Occ=Once]
                                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                                                        [LclId] =
                                                                                                                            CCCS GHC.IO.Buffer.Buffer! [ww_sb75G
                                                                                                                                                        ww1_sb75H
                                                                                                                                                        ww2_sb75I
                                                                                                                                                        ww3_sb75J
                                                                                                                                                        0#
                                                                                                                                                        0#];
                                                                                                                      } in 
                                                                                                                        case
                                                                                                                            writeMutVar# [dt2_sb75k
                                                                                                                                          sat_sb75V
                                                                                                                                          GHC.Prim.void#]
                                                                                                                        of
                                                                                                                        s2#_sb75W
                                                                                                                        { (##) ->
                                                                                                                              let {
                                                                                                                                sat_sb75X [Occ=Once]
                                                                                                                                  :: (GHC.IO.Handle.Types.Handle__,
                                                                                                                                      [GHC.Types.Char])
                                                                                                                                [LclId] =
                                                                                                                                    CCCS (,)! [wild_sb75b
                                                                                                                                               ipv5_sb75T];
                                                                                                                              } in 
                                                                                                                                Unit# [sat_sb75X];
                                                                                                                        };
                                                                                                                };
                                                                                                      } in 
                                                                                                        let-no-escape {
                                                                                                          $wunpackRB_sb75Y [InlPrag=NOUSERINLINE[0],
                                                                                                                            Occ=LoopBreakerT[3]]
                                                                                                            :: [GHC.IO.Buffer.CharBufElem]
                                                                                                               -> GHC.Prim.Int#
                                                                                                               -> GHC.Prim.State#
                                                                                                                    GHC.Prim.RealWorld
                                                                                                               -> (# GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld,
                                                                                                                     (GHC.IO.Handle.Types.Handle__,
                                                                                                                      [GHC.Types.Char]) #)
                                                                                                          [LclId[JoinId(3)],
                                                                                                           Arity=3,
                                                                                                           Str=<L,U><S,U><S,U>,
                                                                                                           Unf=OtherCon []] =
                                                                                                              sat-only [ww_sb75G
                                                                                                                        ww4_sb75K
                                                                                                                        $j_sb75R
                                                                                                                        $wunpackRB_sb75Y] \r [w1_sb75Z
                                                                                                                                              ww6_sb760
                                                                                                                                              void_0E]
                                                                                                                  case
                                                                                                                      <# [ww6_sb760
                                                                                                                          ww4_sb75K]
                                                                                                                  of
                                                                                                                  { __DEFAULT ->
                                                                                                                        case
                                                                                                                            readWideCharOffAddr# [ww_sb75G
                                                                                                                                                  ww6_sb760
                                                                                                                                                  GHC.Prim.void#]
                                                                                                                        of
                                                                                                                        { Unit# ipv5_sb765 [Occ=Once] ->
                                                                                                                              case
                                                                                                                                  -# [ww6_sb760
                                                                                                                                      1#]
                                                                                                                              of
                                                                                                                              sat_sb768
                                                                                                                              { __DEFAULT ->
                                                                                                                                    let {
                                                                                                                                      sat_sb766 [Occ=Once]
                                                                                                                                        :: GHC.IO.Buffer.CharBufElem
                                                                                                                                      [LclId] =
                                                                                                                                          CCCS GHC.Types.C#! [ipv5_sb765]; } in
                                                                                                                                    let {
                                                                                                                                      sat_sb767 [Occ=Once]
                                                                                                                                        :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                      [LclId] =
                                                                                                                                          CCCS :! [sat_sb766
                                                                                                                                                   w1_sb75Z];
                                                                                                                                    } in 
                                                                                                                                      $wunpackRB_sb75Y
                                                                                                                                          sat_sb767
                                                                                                                                          sat_sb768
                                                                                                                                          GHC.Prim.void#;
                                                                                                                              };
                                                                                                                        };
                                                                                                                    1# ->
                                                                                                                        $j_sb75R
                                                                                                                            GHC.Prim.void#
                                                                                                                            w1_sb75Z;
                                                                                                                  };
                                                                                                        } in 
                                                                                                          $wunpackRB_sb75Y
                                                                                                              ipv3_sb75O
                                                                                                              sat_sb769
                                                                                                              GHC.Prim.void#;
                                                                                                };
                                                                                            1# ->
                                                                                                let {
                                                                                                  sat_sb76a [Occ=Once]
                                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                                         GHC.IO.Buffer.CharBufElem
                                                                                                  [LclId] =
                                                                                                      CCCS GHC.IO.Buffer.Buffer! [ww_sb75G
                                                                                                                                  ww1_sb75H
                                                                                                                                  ww2_sb75I
                                                                                                                                  ww3_sb75J
                                                                                                                                  0#
                                                                                                                                  0#];
                                                                                                } in 
                                                                                                  case
                                                                                                      writeMutVar# [dt2_sb75k
                                                                                                                    sat_sb76a
                                                                                                                    GHC.Prim.void#]
                                                                                                  of
                                                                                                  s2#_sb76b
                                                                                                  { (##) ->
                                                                                                        let {
                                                                                                          sat_sb76c [Occ=Once]
                                                                                                            :: (GHC.IO.Handle.Types.Handle__,
                                                                                                                [GHC.Types.Char])
                                                                                                          [LclId] =
                                                                                                              CCCS (,)! [wild_sb75b
                                                                                                                         ipv3_sb75O];
                                                                                                        } in 
                                                                                                          Unit# [sat_sb76c];
                                                                                                  };
                                                                                          };
                                                                                      GHC.IO.Handle.Types.CRLF ->
                                                                                          case
                                                                                              $wunpack_nl_rb6WF
                                                                                                  ww_sb75G
                                                                                                  ww1_sb75H
                                                                                                  ww4_sb75K
                                                                                                  ww5_sb75L
                                                                                                  ipv3_sb75O
                                                                                                  GHC.Prim.void#
                                                                                          of
                                                                                          { Unit# ipv5_sb76f [Occ=Once!] ->
                                                                                                case
                                                                                                    ipv5_sb76f
                                                                                                of
                                                                                                { (,) s2_sb76h [Occ=Once]
                                                                                                      r_sb76i [Occ=Once!] ->
                                                                                                      let {
                                                                                                        sat_sb76m [Occ=Once]
                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                                        [LclId] =
                                                                                                            [ww_sb75G
                                                                                                             ww1_sb75H
                                                                                                             ww2_sb75I
                                                                                                             ww3_sb75J
                                                                                                             ww5_sb75L
                                                                                                             r_sb76i] \u []
                                                                                                                case
                                                                                                                    r_sb76i
                                                                                                                of
                                                                                                                { GHC.Types.I# x_sb76k ->
                                                                                                                      case
                                                                                                                          ==# [x_sb76k
                                                                                                                               ww5_sb75L]
                                                                                                                      of
                                                                                                                      { __DEFAULT ->
                                                                                                                            GHC.IO.Buffer.Buffer [ww_sb75G
                                                                                                                                                  ww1_sb75H
                                                                                                                                                  ww2_sb75I
                                                                                                                                                  ww3_sb75J
                                                                                                                                                  x_sb76k
                                                                                                                                                  ww5_sb75L];
                                                                                                                        1# ->
                                                                                                                            GHC.IO.Buffer.Buffer [ww_sb75G
                                                                                                                                                  ww1_sb75H
                                                                                                                                                  ww2_sb75I
                                                                                                                                                  ww3_sb75J
                                                                                                                                                  0#
                                                                                                                                                  0#];
                                                                                                                      };
                                                                                                                };
                                                                                                      } in 
                                                                                                        case
                                                                                                            writeMutVar# [dt2_sb75k
                                                                                                                          sat_sb76m
                                                                                                                          GHC.Prim.void#]
                                                                                                        of
                                                                                                        s2#_sb76n
                                                                                                        { (##) ->
                                                                                                              let {
                                                                                                                sat_sb76o [Occ=Once]
                                                                                                                  :: (GHC.IO.Handle.Types.Handle__,
                                                                                                                      [GHC.Types.Char])
                                                                                                                [LclId] =
                                                                                                                    CCCS (,)! [wild_sb75b
                                                                                                                               s2_sb76h];
                                                                                                              } in 
                                                                                                                Unit# [sat_sb76o];
                                                                                                        };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                    } in 
                                                                      case
                                                                          -# [dt8_sb75D dt7_sb75C]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            $w$j_sb75E
                                                                                GHC.Prim.void#
                                                                                dt4_sb75y
                                                                                dt5_sb75z
                                                                                ds_sb75A
                                                                                dt6_sb75B
                                                                                dt7_sb75C
                                                                                dt8_sb75D;
                                                                        0# ->
                                                                            case
                                                                                GHC.IO.Handle.Internals.hLookAhead_2
                                                                                    wild_sb75b
                                                                                    wild2_sb75x
                                                                                    GHC.Prim.void#
                                                                            of
                                                                            { Unit# ipv3_sb76s [Occ=Once!] ->
                                                                                  case
                                                                                      ipv3_sb76s
                                                                                  of
                                                                                  { GHC.IO.Buffer.Buffer ww1_sb76u [Occ=Once]
                                                                                                         ww2_sb76v [Occ=Once]
                                                                                                         ww3_sb76w [Occ=Once]
                                                                                                         ww4_sb76x [Occ=Once]
                                                                                                         ww5_sb76y [Occ=Once]
                                                                                                         ww6_sb76z [Occ=Once] ->
                                                                                        $w$j_sb75E
                                                                                            GHC.Prim.void#
                                                                                            ww1_sb76u
                                                                                            ww2_sb76v
                                                                                            ww3_sb76w
                                                                                            ww4_sb76x
                                                                                            ww5_sb76y
                                                                                            ww6_sb76z;
                                                                                  };
                                                                            };
                                                                        1# ->
                                                                            case ds7_sb75p of {
                                                                              GHC.IO.Handle.Types.LF ->
                                                                                  $w$j_sb75E
                                                                                      GHC.Prim.void#
                                                                                      dt4_sb75y
                                                                                      dt5_sb75z
                                                                                      ds_sb75A
                                                                                      dt6_sb75B
                                                                                      dt7_sb75C
                                                                                      dt8_sb75D;
                                                                              GHC.IO.Handle.Types.CRLF ->
                                                                                  case
                                                                                      readWideCharOffAddr# [dt4_sb75y
                                                                                                            dt7_sb75C
                                                                                                            GHC.Prim.void#]
                                                                                  of
                                                                                  { Unit# ipv3_sb76D [Occ=Once!] ->
                                                                                        case
                                                                                            touch# [dt5_sb75z
                                                                                                    GHC.Prim.void#]
                                                                                        of
                                                                                        s'1_sb76E
                                                                                        { (##) ->
                                                                                              case
                                                                                                  ipv3_sb76D
                                                                                              of
                                                                                              { __DEFAULT ->
                                                                                                    $w$j_sb75E
                                                                                                        GHC.Prim.void#
                                                                                                        dt4_sb75y
                                                                                                        dt5_sb75z
                                                                                                        ds_sb75A
                                                                                                        dt6_sb75B
                                                                                                        dt7_sb75C
                                                                                                        dt8_sb75D;
                                                                                                '\r'# ->
                                                                                                    case
                                                                                                        writeWideCharOffAddr# [dt4_sb75y
                                                                                                                               0#
                                                                                                                               '\r'#
                                                                                                                               GHC.Prim.void#]
                                                                                                    of
                                                                                                    s2_sb76G
                                                                                                    { (##) ->
                                                                                                          case
                                                                                                              touch# [dt5_sb75z
                                                                                                                      GHC.Prim.void#]
                                                                                                          of
                                                                                                          s'2_sb76H
                                                                                                          { (##) ->
                                                                                                                let {
                                                                                                                  sat_sb76I [Occ=Once]
                                                                                                                    :: GHC.IO.Buffer.CharBuffer
                                                                                                                  [LclId] =
                                                                                                                      CCCS GHC.IO.Buffer.Buffer! [dt4_sb75y
                                                                                                                                                  dt5_sb75z
                                                                                                                                                  ds_sb75A
                                                                                                                                                  dt6_sb75B
                                                                                                                                                  0#
                                                                                                                                                  1#];
                                                                                                                } in 
                                                                                                                  case
                                                                                                                      GHC.IO.Handle.Internals.hLookAhead_2
                                                                                                                          wild_sb75b
                                                                                                                          sat_sb76I
                                                                                                                          GHC.Prim.void#
                                                                                                                  of
                                                                                                                  { Unit# ipv5_sb76L [Occ=Once!] ->
                                                                                                                        case
                                                                                                                            ipv5_sb76L
                                                                                                                        of
                                                                                                                        { GHC.IO.Buffer.Buffer ww1_sb76N [Occ=Once]
                                                                                                                                               ww2_sb76O [Occ=Once]
                                                                                                                                               ww3_sb76P [Occ=Once]
                                                                                                                                               ww4_sb76Q [Occ=Once]
                                                                                                                                               ww5_sb76R [Occ=Once]
                                                                                                                                               ww6_sb76S [Occ=Once] ->
                                                                                                                              $w$j_sb75E
                                                                                                                                  GHC.Prim.void#
                                                                                                                                  ww1_sb76N
                                                                                                                                  ww2_sb76O
                                                                                                                                  ww3_sb76P
                                                                                                                                  ww4_sb76Q
                                                                                                                                  ww5_sb76R
                                                                                                                                  ww6_sb76S;
                                                                                                                        };
                                                                                                                  };
                                                                                                          };
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                      };
                                                              };
                                                    } in 
                                                      catch# [sat_sb76T sat_sb77p GHC.Prim.void#];
                                              };
                                        };
                                  };
                        } in 
                          case handle_sb754 of wild_sb77q {
                            GHC.IO.Handle.Types.FileHandle _ [Occ=Dead] dt_sb77s [Occ=Once] ->
                                GHC.IO.Handle.Internals.$wwithHandle'
                                    GHC.IO.Handle.Text.hGetContents3
                                    wild_sb77q
                                    dt_sb77s
                                    act_sb758
                                    GHC.Prim.void#;
                            GHC.IO.Handle.Types.DuplexHandle _ [Occ=Dead]
                                                             dt_sb77u [Occ=Once]
                                                             _ [Occ=Dead] ->
                                GHC.IO.Handle.Internals.$wwithHandle'
                                    GHC.IO.Handle.Text.hGetContents3
                                    wild_sb77q
                                    dt_sb77u
                                    act_sb758
                                    GHC.Prim.void#;
                          };
                  };
        } in 
          GHC.IO.Unsafe.unsafeDupableInterleaveIO sat_sb77w GHC.Prim.void#;

GHC.IO.Handle.Text.hGetContents1
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [handle_sb77x void_0E]
        let {
          sat_sb77X [Occ=Once]
            :: GHC.IO.Handle.Types.Handle__
               -> GHC.Types.IO (GHC.IO.Handle.Types.Handle__, GHC.Base.String)
          [LclId] =
              [handle_sb77x] \r [handle__sb77z void_0E]
                  case
                      GHC.IO.Handle.Text.hGetContents2 handle_sb77x GHC.Prim.void#
                  of
                  { Unit# ipv1_sb77D [Occ=Once] ->
                        let {
                          sat_sb77V [Occ=Once] :: GHC.IO.Handle.Types.Handle__
                          [LclId] =
                              [handle__sb77z] \u []
                                  case handle__sb77z of {
                                    GHC.IO.Handle.Types.Handle__ ds_sb77F [Occ=Once]
                                                                 ds2_sb77G [Occ=Once]
                                                                 ds3_sb77H [Occ=Once]
                                                                 ds4_sb77I [Occ=Once]
                                                                 _ [Occ=Dead]
                                                                 dt_sb77K [Occ=Once]
                                                                 ds6_sb77L [Occ=Once]
                                                                 dt1_sb77M [Occ=Once]
                                                                 dt2_sb77N [Occ=Once]
                                                                 dt3_sb77O [Occ=Once]
                                                                 ds7_sb77P [Occ=Once]
                                                                 ds8_sb77Q [Occ=Once]
                                                                 ds9_sb77R [Occ=Once]
                                                                 ds10_sb77S [Occ=Once]
                                                                 ds11_sb77T [Occ=Once]
                                                                 ds12_sb77U [Occ=Once] ->
                                        GHC.IO.Handle.Types.Handle__ [ds_sb77F
                                                                      ds2_sb77G
                                                                      ds3_sb77H
                                                                      ds4_sb77I
                                                                      GHC.IO.Handle.Types.SemiClosedHandle
                                                                      dt_sb77K
                                                                      ds6_sb77L
                                                                      dt1_sb77M
                                                                      dt2_sb77N
                                                                      dt3_sb77O
                                                                      ds7_sb77P
                                                                      ds8_sb77Q
                                                                      ds9_sb77R
                                                                      ds10_sb77S
                                                                      ds11_sb77T
                                                                      ds12_sb77U];
                                  }; } in
                        let {
                          sat_sb77W [Occ=Once]
                            :: (GHC.IO.Handle.Types.Handle__, GHC.Base.String)
                          [LclId] =
                              CCCS (,)! [sat_sb77V ipv1_sb77D];
                        } in  Unit# [sat_sb77W];
                  };
        } in 
          GHC.IO.Handle.Internals.wantReadableHandle1
              GHC.IO.Handle.Text.hGetContents3
              handle_sb77x
              sat_sb77X
              GHC.Prim.void#;

GHC.IO.Handle.Text.hGetContents
  :: GHC.IO.Handle.Types.Handle -> GHC.Types.IO GHC.Base.String
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.IO.Handle.Text.hGetContents1 eta_B2 GHC.Prim.void#;

go_rb6WP :: [[GHC.Types.Char]] -> [GHC.Types.Char]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    sat-only [] \r [ds_sb77Y]
        case ds_sb77Y of {
          [] -> [] [];
          : y_sb780 [Occ=Once] ys_sb781 [Occ=Once] ->
              let {
                sat_sb782 [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                [LclId] =
                    [ys_sb781] \s [] go_rb6WP ys_sb781;
              } in  GHC.Base.++ y_sb780 sat_sb782;
        };

go1_rb6WQ :: [[GHC.Types.Char]] -> [GHC.Types.Char]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    sat-only [] \r [ds_sb783]
        case ds_sb783 of {
          [] -> [] [];
          : y_sb785 [Occ=Once] ys_sb786 [Occ=Once] ->
              let {
                sat_sb787 [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                [LclId] =
                    [ys_sb786] \s [] go1_rb6WQ ys_sb786;
              } in  GHC.Base.++ y_sb785 sat_sb787;
        };

GHC.IO.Handle.Text.$whGetLineBufferedLoop [InlPrag=NOUSERINLINE[0],
                                           Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> [GHC.Base.String]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=9,
 Str=<S,1*U><L,U><L,U><L,U><L,U><S,U><S,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb788
           ww_sb789
           ww1_sb78a
           ww2_sb78b
           ww3_sb78c
           ww4_sb78d
           ww5_sb78e
           w1_sb78f
           void_0E]
        case w_sb788 of wild_sb78h {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt2_sb78q [Occ=Once*]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       ds6_sb78v
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              let {
                sat_sb7aG [Occ=Once] :: GHC.IO.Buffer.RawCharBuffer
                [LclId] =
                    CCCS GHC.ForeignPtr.ForeignPtr! [ww_sb789 ww1_sb78a];
              } in 
                let-no-escape {
                  $w$j_sb78y [InlPrag=NOUSERINLINE[0],
                              Dmd=<C(C(C(S))),C(C1(C1(U(U,U))))>]
                    :: GHC.Prim.State# GHC.Prim.RealWorld
                       -> GHC.Types.Bool
                       -> GHC.Prim.Int#
                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                  [LclId[JoinId(3)], Arity=3, Str=<S,U><L,U><S,U>, Unf=OtherCon []] =
                      sat-only [ww_sb789
                                ww1_sb78a
                                ww2_sb78b
                                ww3_sb78c
                                ww4_sb78d
                                ww5_sb78e
                                w1_sb78f
                                wild_sb78h
                                dt2_sb78q
                                ds6_sb78v] \r [void_0E ww6_sb78A ww7_sb78B]
                          let-no-escape {
                            $w$j1_sb78C [InlPrag=NOUSERINLINE[0],
                                         Occ=Once*!T[3],
                                         Dmd=<L,C(C1(C1(U(U,U))))>]
                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                 -> [GHC.Types.Char]
                                 -> GHC.Types.Int
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                            [LclId[JoinId(3)],
                             Arity=3,
                             Str=<S,U><L,U><L,1*U(U)>,
                             Unf=OtherCon []] =
                                sat-only [ww_sb789
                                          ww1_sb78a
                                          ww2_sb78b
                                          ww3_sb78c
                                          ww5_sb78e
                                          w1_sb78f
                                          wild_sb78h
                                          dt2_sb78q
                                          ds6_sb78v
                                          ww6_sb78A
                                          ww7_sb78B] \r [void_0E ww8_sb78E ww9_sb78F]
                                    case ww6_sb78A of {
                                      GHC.Types.False ->
                                          let {
                                            buf1_sb78H [Dmd=<L,U(U,U,U,U,U,U)>]
                                              :: GHC.IO.Buffer.Buffer GHC.Types.Char
                                            [LclId] =
                                                [ww_sb789
                                                 ww1_sb78a
                                                 ww2_sb78b
                                                 ww3_sb78c
                                                 ww5_sb78e
                                                 ww9_sb78F] \u []
                                                    case ww9_sb78F of {
                                                      GHC.Types.I# x_sb78J ->
                                                          case ==# [x_sb78J ww5_sb78e] of {
                                                            __DEFAULT ->
                                                                GHC.IO.Buffer.Buffer [ww_sb789
                                                                                      ww1_sb78a
                                                                                      ww2_sb78b
                                                                                      ww3_sb78c
                                                                                      x_sb78J
                                                                                      ww5_sb78e];
                                                            1# ->
                                                                GHC.IO.Buffer.Buffer [ww_sb789
                                                                                      ww1_sb78a
                                                                                      ww2_sb78b
                                                                                      ww3_sb78c
                                                                                      0#
                                                                                      0#];
                                                          };
                                                    }; } in
                                          let {
                                            sat_sb79e [Occ=Once]
                                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Base.Maybe GHC.IO.Buffer.CharBuffer #)
                                            [LclId] =
                                                [wild_sb78h ds6_sb78v buf1_sb78H] \r [void_0E]
                                                    case buf1_sb78H of wild2_sb78M {
                                                      GHC.IO.Buffer.Buffer dt4_sb78N
                                                                           dt5_sb78O
                                                                           ds9_sb78P [Occ=Once]
                                                                           dt6_sb78Q [Occ=Once]
                                                                           dt7_sb78R
                                                                           dt8_sb78S [Occ=Once] ->
                                                          case -# [dt8_sb78S dt7_sb78R] of {
                                                            __DEFAULT ->
                                                                let {
                                                                  sat_sb78U [Occ=Once]
                                                                    :: GHC.Base.Maybe
                                                                         GHC.IO.Buffer.CharBuffer
                                                                  [LclId] =
                                                                      CCCS GHC.Base.Just! [wild2_sb78M];
                                                                } in  Unit# [sat_sb78U];
                                                            0# ->
                                                                case
                                                                    GHC.IO.Handle.Internals.hLookAhead_2
                                                                        wild_sb78h
                                                                        wild2_sb78M
                                                                        GHC.Prim.void#
                                                                of
                                                                { Unit# ipv1_sb78X [Occ=Once] ->
                                                                      let {
                                                                        sat_sb78Y [Occ=Once]
                                                                          :: GHC.Base.Maybe
                                                                               GHC.IO.Buffer.CharBuffer
                                                                        [LclId] =
                                                                            CCCS GHC.Base.Just! [ipv1_sb78X];
                                                                      } in  Unit# [sat_sb78Y];
                                                                };
                                                            1# ->
                                                                case ds6_sb78v of {
                                                                  GHC.IO.Handle.Types.LF ->
                                                                      let {
                                                                        sat_sb790 [Occ=Once]
                                                                          :: GHC.Base.Maybe
                                                                               GHC.IO.Buffer.CharBuffer
                                                                        [LclId] =
                                                                            CCCS GHC.Base.Just! [wild2_sb78M];
                                                                      } in  Unit# [sat_sb790];
                                                                  GHC.IO.Handle.Types.CRLF ->
                                                                      case
                                                                          readWideCharOffAddr# [dt4_sb78N
                                                                                                dt7_sb78R
                                                                                                GHC.Prim.void#]
                                                                      of
                                                                      { Unit# ipv1_sb793 [Occ=Once!] ->
                                                                            case
                                                                                touch# [dt5_sb78O
                                                                                        GHC.Prim.void#]
                                                                            of
                                                                            s'_sb794
                                                                            { (##) ->
                                                                                  case
                                                                                      ipv1_sb793
                                                                                  of
                                                                                  { __DEFAULT ->
                                                                                        let {
                                                                                          sat_sb796 [Occ=Once]
                                                                                            :: GHC.Base.Maybe
                                                                                                 GHC.IO.Buffer.CharBuffer
                                                                                          [LclId] =
                                                                                              CCCS GHC.Base.Just! [wild2_sb78M];
                                                                                        } in 
                                                                                          Unit# [sat_sb796];
                                                                                    '\r'# ->
                                                                                        case
                                                                                            writeWideCharOffAddr# [dt4_sb78N
                                                                                                                   0#
                                                                                                                   '\r'#
                                                                                                                   GHC.Prim.void#]
                                                                                        of
                                                                                        s2_sb797
                                                                                        { (##) ->
                                                                                              case
                                                                                                  touch# [dt5_sb78O
                                                                                                          GHC.Prim.void#]
                                                                                              of
                                                                                              s'1_sb798
                                                                                              { (##) ->
                                                                                                    let {
                                                                                                      sat_sb799 [Occ=Once]
                                                                                                        :: GHC.IO.Buffer.CharBuffer
                                                                                                      [LclId] =
                                                                                                          CCCS GHC.IO.Buffer.Buffer! [dt4_sb78N
                                                                                                                                      dt5_sb78O
                                                                                                                                      ds9_sb78P
                                                                                                                                      dt6_sb78Q
                                                                                                                                      0#
                                                                                                                                      1#];
                                                                                                    } in 
                                                                                                      case
                                                                                                          GHC.IO.Handle.Internals.hLookAhead_2
                                                                                                              wild_sb78h
                                                                                                              sat_sb799
                                                                                                              GHC.Prim.void#
                                                                                                      of
                                                                                                      { Unit# ipv3_sb79c [Occ=Once] ->
                                                                                                            let {
                                                                                                              sat_sb79d [Occ=Once]
                                                                                                                :: GHC.Base.Maybe
                                                                                                                     GHC.IO.Buffer.CharBuffer
                                                                                                              [LclId] =
                                                                                                                  CCCS GHC.Base.Just! [ipv3_sb79c];
                                                                                                            } in 
                                                                                                              Unit# [sat_sb79d];
                                                                                                      };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                      };
                                                                };
                                                          };
                                                    };
                                          } in 
                                            case
                                                catch# [sat_sb79e
                                                        GHC.IO.Handle.Text.hGetChar3
                                                        GHC.Prim.void#]
                                            of
                                            { Unit# ipv1_sb79h [Occ=Once!] ->
                                                  case ipv1_sb79h of {
                                                    GHC.Base.Nothing ->
                                                        let {
                                                          sat_sb79q [Occ=Once]
                                                            :: GHC.IO.Buffer.Buffer
                                                                 GHC.IO.Buffer.CharBufElem
                                                          [LclId] =
                                                              [buf1_sb78H] \u []
                                                                  case buf1_sb78H of {
                                                                    GHC.IO.Buffer.Buffer dt4_sb79k [Occ=Once]
                                                                                         dt5_sb79l [Occ=Once]
                                                                                         ds10_sb79m [Occ=Once]
                                                                                         dt6_sb79n [Occ=Once]
                                                                                         _ [Occ=Dead]
                                                                                         _ [Occ=Dead] ->
                                                                        GHC.IO.Buffer.Buffer [dt4_sb79k
                                                                                              dt5_sb79l
                                                                                              ds10_sb79m
                                                                                              dt6_sb79n
                                                                                              0#
                                                                                              0#];
                                                                  };
                                                        } in 
                                                          case
                                                              writeMutVar# [dt2_sb78q
                                                                            sat_sb79q
                                                                            GHC.Prim.void#]
                                                          of
                                                          s2#_sb79r
                                                          { (##) ->
                                                                let {
                                                                  sat_sb79B [Occ=Once]
                                                                    :: [[GHC.Types.Char]]
                                                                  [LclId] =
                                                                      CCCS :! [ww8_sb78E
                                                                               w1_sb78f]; } in
                                                                let {
                                                                  sat_sb79A [Occ=Once]
                                                                    :: [GHC.Types.Char]
                                                                  [LclId] =
                                                                      [buf1_sb78H] \u []
                                                                          case buf1_sb78H of {
                                                                            GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                                 _ [Occ=Dead]
                                                                                                 _ [Occ=Dead]
                                                                                                 _ [Occ=Dead]
                                                                                                 dt7_sb79x [Occ=Once]
                                                                                                 dt8_sb79y [Occ=Once] ->
                                                                                case
                                                                                    ==# [dt7_sb79x
                                                                                         dt8_sb79y]
                                                                                of
                                                                                { __DEFAULT ->
                                                                                      lvl4_rb6WH;
                                                                                  1# -> [] [];
                                                                                };
                                                                          }; } in
                                                                let {
                                                                  sat_sb79C [Occ=Once]
                                                                    :: [[GHC.Types.Char]]
                                                                  [LclId] =
                                                                      CCCS :! [sat_sb79A sat_sb79B];
                                                                } in 
                                                                  case
                                                                      GHC.List.reverse1
                                                                          sat_sb79C GHC.Types.[]
                                                                  of
                                                                  sat_sb79D
                                                                  { __DEFAULT ->
                                                                        case
                                                                            go1_rb6WQ sat_sb79D
                                                                        of
                                                                        wild3_sb79E
                                                                        { [] ->
                                                                              GHC.IO.Handle.Internals.ioe_EOF1
                                                                                  GHC.Prim.void#;
                                                                          : _ [Occ=Dead]
                                                                            _ [Occ=Dead] ->
                                                                              Unit# [wild3_sb79E];
                                                                        };
                                                                  };
                                                          };
                                                    GHC.Base.Just new_buf_sb79H [Occ=Once!] ->
                                                        case new_buf_sb79H of {
                                                          GHC.IO.Buffer.Buffer ww11_sb79J [Occ=Once]
                                                                               ww12_sb79K [Occ=Once]
                                                                               ww13_sb79L [Occ=Once]
                                                                               ww14_sb79M [Occ=Once]
                                                                               ww15_sb79N [Occ=Once]
                                                                               ww16_sb79O [Occ=Once] ->
                                                              let {
                                                                sat_sb79P [Occ=Once]
                                                                  :: [GHC.Base.String]
                                                                [LclId] =
                                                                    CCCS :! [ww8_sb78E w1_sb78f];
                                                              } in 
                                                                GHC.IO.Handle.Text.$whGetLineBufferedLoop
                                                                    wild_sb78h
                                                                    ww11_sb79J
                                                                    ww12_sb79K
                                                                    ww13_sb79L
                                                                    ww14_sb79M
                                                                    ww15_sb79N
                                                                    ww16_sb79O
                                                                    sat_sb79P
                                                                    GHC.Prim.void#;
                                                        };
                                                  };
                                            };
                                      GHC.Types.True ->
                                          let {
                                            sat_sb79S [Occ=Once]
                                              :: GHC.IO.Buffer.Buffer GHC.IO.Buffer.CharBufElem
                                            [LclId] =
                                                [ww_sb789
                                                 ww1_sb78a
                                                 ww2_sb78b
                                                 ww3_sb78c
                                                 ww5_sb78e
                                                 ww7_sb78B] \u []
                                                    case +# [ww7_sb78B 1#] of x_sb79Q [Dmd=<S,U>] {
                                                      __DEFAULT ->
                                                          case ==# [x_sb79Q ww5_sb78e] of {
                                                            __DEFAULT ->
                                                                GHC.IO.Buffer.Buffer [ww_sb789
                                                                                      ww1_sb78a
                                                                                      ww2_sb78b
                                                                                      ww3_sb78c
                                                                                      x_sb79Q
                                                                                      ww5_sb78e];
                                                            1# ->
                                                                GHC.IO.Buffer.Buffer [ww_sb789
                                                                                      ww1_sb78a
                                                                                      ww2_sb78b
                                                                                      ww3_sb78c
                                                                                      0#
                                                                                      0#];
                                                          };
                                                    };
                                          } in 
                                            case
                                                writeMutVar# [dt2_sb78q sat_sb79S GHC.Prim.void#]
                                            of
                                            s2#_sb79T
                                            { (##) ->
                                                  let {
                                                    sat_sb79W [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId] =
                                                        [w1_sb78f ww8_sb78E] \u []
                                                            let {
                                                              sat_sb79U [Occ=Once]
                                                                :: [[GHC.Types.Char]]
                                                              [LclId] =
                                                                  CCCS :! [ww8_sb78E w1_sb78f];
                                                            } in 
                                                              case
                                                                  GHC.List.reverse1
                                                                      sat_sb79U GHC.Types.[]
                                                              of
                                                              sat_sb79V
                                                              { __DEFAULT -> go_rb6WP sat_sb79V;
                                                              };
                                                  } in  Unit# [sat_sb79W];
                                            };
                                    };
                          } in 
                            case ds6_sb78v of {
                              GHC.IO.Handle.Types.LF ->
                                  case ==# [ww4_sb78d ww7_sb78B] of {
                                    __DEFAULT ->
                                        case -# [ww7_sb78B 1#] of sat_sb7af {
                                          __DEFAULT ->
                                              let-no-escape {
                                                $j_sb79Z [Occ=OnceL!T[2],
                                                          Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                                  :: GHC.Prim.State# GHC.Prim.RealWorld
                                                     -> [GHC.IO.Buffer.CharBufElem]
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                           GHC.Base.String #)
                                                [LclId[JoinId(2)],
                                                 Arity=2,
                                                 Str=<S,U><L,U>,
                                                 Unf=OtherCon []] =
                                                    sat-only [ww1_sb78a
                                                              ww7_sb78B
                                                              $w$j1_sb78C] \r [void_0E ipv1_sb7a1]
                                                        case
                                                            touch# [ww1_sb78a GHC.Prim.void#]
                                                        of
                                                        s'_sb7a2
                                                        { (##) ->
                                                              let {
                                                                sat_sb7a3 [Occ=Once]
                                                                  :: GHC.Types.Int
                                                                [LclId] =
                                                                    CCCS GHC.Types.I#! [ww7_sb78B];
                                                              } in 
                                                                $w$j1_sb78C
                                                                    GHC.Prim.void#
                                                                    ipv1_sb7a1
                                                                    sat_sb7a3;
                                                        };
                                              } in 
                                                let-no-escape {
                                                  $wunpackRB_sb7a4 [InlPrag=NOUSERINLINE[0],
                                                                    Occ=LoopBreakerT[3]]
                                                    :: [GHC.IO.Buffer.CharBufElem]
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Base.String #)
                                                  [LclId[JoinId(3)],
                                                   Arity=3,
                                                   Str=<L,U><S,U><S,U>,
                                                   Unf=OtherCon []] =
                                                      sat-only [ww_sb789
                                                                ww4_sb78d
                                                                $j_sb79Z
                                                                $wunpackRB_sb7a4] \r [w4_sb7a5
                                                                                      ww8_sb7a6
                                                                                      void_0E]
                                                          case <# [ww8_sb7a6 ww4_sb78d] of {
                                                            __DEFAULT ->
                                                                case
                                                                    readWideCharOffAddr# [ww_sb789
                                                                                          ww8_sb7a6
                                                                                          GHC.Prim.void#]
                                                                of
                                                                { Unit# ipv1_sb7ab [Occ=Once] ->
                                                                      case
                                                                          -# [ww8_sb7a6 1#]
                                                                      of
                                                                      sat_sb7ae
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_sb7ac [Occ=Once]
                                                                                :: GHC.IO.Buffer.CharBufElem
                                                                              [LclId] =
                                                                                  CCCS GHC.Types.C#! [ipv1_sb7ab]; } in
                                                                            let {
                                                                              sat_sb7ad [Occ=Once]
                                                                                :: [GHC.IO.Buffer.CharBufElem]
                                                                              [LclId] =
                                                                                  CCCS :! [sat_sb7ac
                                                                                           w4_sb7a5];
                                                                            } in 
                                                                              $wunpackRB_sb7a4
                                                                                  sat_sb7ad
                                                                                  sat_sb7ae
                                                                                  GHC.Prim.void#;
                                                                      };
                                                                };
                                                            1# -> $j_sb79Z GHC.Prim.void# w4_sb7a5;
                                                          };
                                                } in 
                                                  $wunpackRB_sb7a4
                                                      GHC.Types.[] sat_sb7af GHC.Prim.void#;
                                        };
                                    1# ->
                                        let {
                                          sat_sb7ag [Occ=Once] :: GHC.Types.Int
                                          [LclId] =
                                              CCCS GHC.Types.I#! [ww7_sb78B];
                                        } in  $w$j1_sb78C GHC.Prim.void# GHC.Types.[] sat_sb7ag;
                                  };
                              GHC.IO.Handle.Types.CRLF ->
                                  case
                                      $wunpack_nl_rb6WF
                                          ww_sb789
                                          ww1_sb78a
                                          ww4_sb78d
                                          ww7_sb78B
                                          GHC.Types.[]
                                          GHC.Prim.void#
                                  of
                                  { Unit# ipv1_sb7aj [Occ=Once!] ->
                                        case ipv1_sb7aj of {
                                          (,) ww9_sb7al [Occ=Once] ww10_sb7am [Occ=Once] ->
                                              $w$j1_sb78C GHC.Prim.void# ww9_sb7al ww10_sb7am;
                                        };
                                  };
                            };
                } in 
                  let-no-escape {
                    exit_sb7an [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
                      :: GHC.Prim.Int#
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                    [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
                        sat-only [$w$j_sb78y] \r [ww6_sb7ao void_0E]
                            $w$j_sb78y GHC.Prim.void# GHC.Types.True ww6_sb7ao;
                  } in 
                    let-no-escape {
                      exit1_sb7aq [Occ=OnceL!T[1], Dmd=<L,C(U(U,U))>]
                        :: GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                      [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                          sat-only [ww5_sb78e $w$j_sb78y] \r [void_0E]
                              $w$j_sb78y GHC.Prim.void# GHC.Types.False ww5_sb78e;
                    } in 
                      let-no-escape {
                        $wloop_sb7as [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                          :: GHC.IO.Buffer.RawCharBuffer
                             -> GHC.Prim.Int#
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                        [LclId[JoinId(3)],
                         Arity=3,
                         Str=<L,1*U(U,U)><S,U><S,U>,
                         Unf=OtherCon []] =
                            sat-only [ww5_sb78e
                                      exit_sb7an
                                      exit1_sb7aq
                                      $wloop_sb7as] \r [w3_sb7at ww6_sb7au void_0E]
                                case ==# [ww6_sb7au ww5_sb78e] of {
                                  __DEFAULT ->
                                      case w3_sb7at of wild1_sb7ax {
                                        GHC.ForeignPtr.ForeignPtr fo_sb7ay [Occ=Once]
                                                                  ds9_sb7az [Occ=Once] ->
                                            case
                                                readWideCharOffAddr# [fo_sb7ay
                                                                      ww6_sb7au
                                                                      GHC.Prim.void#]
                                            of
                                            { Unit# ipv1_sb7aC [Occ=Once!] ->
                                                  case
                                                      touch# [ds9_sb7az GHC.Prim.void#]
                                                  of
                                                  s'_sb7aD
                                                  { (##) ->
                                                        case ipv1_sb7aC of {
                                                          __DEFAULT ->
                                                              case +# [ww6_sb7au 1#] of sat_sb7aF {
                                                                __DEFAULT ->
                                                                    $wloop_sb7as
                                                                        wild1_sb7ax
                                                                        sat_sb7aF
                                                                        GHC.Prim.void#;
                                                              };
                                                          '\n'# ->
                                                              exit_sb7an ww6_sb7au GHC.Prim.void#;
                                                        };
                                                  };
                                            };
                                      };
                                  1# -> exit1_sb7aq GHC.Prim.void#;
                                };
                      } in  $wloop_sb7as sat_sb7aG ww4_sb78d GHC.Prim.void#;
        };

GHC.IO.Handle.Text.hGetLine3 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.IO.Buffer.CharBuffer
     -> [GHC.Base.String]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=4,
 Str=<S,1*U><S(SLLSSS),1*U(U,U,U,U,U,U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb7aH w1_sb7aI w2_sb7aJ void_0E]
        case w1_sb7aI of {
          GHC.IO.Buffer.Buffer ww1_sb7aM [Occ=Once]
                               ww2_sb7aN [Occ=Once]
                               ww3_sb7aO [Occ=Once]
                               ww4_sb7aP [Occ=Once]
                               ww5_sb7aQ [Occ=Once]
                               ww6_sb7aR [Occ=Once] ->
              GHC.IO.Handle.Text.$whGetLineBufferedLoop
                  w_sb7aH
                  ww1_sb7aM
                  ww2_sb7aN
                  ww3_sb7aO
                  ww4_sb7aP
                  ww5_sb7aQ
                  ww6_sb7aR
                  w2_sb7aJ
                  GHC.Prim.void#;
        };

GHC.IO.Handle.Text.hGetLine5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetLine"#;

GHC.IO.Handle.Text.hGetLine4 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hGetLine5;

GHC.IO.Handle.Text.hGetLine2
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [handle__sb7aS void_0E]
        case handle__sb7aS of wild_sb7aU {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt2_sb7b3 [Occ=Once]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case readMutVar# [dt2_sb7b3 GHC.Prim.void#] of {
                Unit# ipv1_sb7bd [Occ=Once!] ->
                    case ipv1_sb7bd of {
                      GHC.IO.Buffer.Buffer ww1_sb7bf [Occ=Once]
                                           ww2_sb7bg [Occ=Once]
                                           ww3_sb7bh [Occ=Once]
                                           ww4_sb7bi [Occ=Once]
                                           ww5_sb7bj [Occ=Once]
                                           ww6_sb7bk [Occ=Once] ->
                          GHC.IO.Handle.Text.$whGetLineBufferedLoop
                              wild_sb7aU
                              ww1_sb7bf
                              ww2_sb7bg
                              ww3_sb7bh
                              ww4_sb7bi
                              ww5_sb7bj
                              ww6_sb7bk
                              GHC.Types.[]
                              GHC.Prim.void#;
                    };
              };
        };

GHC.IO.Handle.Text.hGetLine1
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<L,U>, Unf=OtherCon []] =
    [] \r [h_sb7bl void_0E]
        GHC.IO.Handle.Internals.wantReadableHandle_1
            GHC.IO.Handle.Text.hGetLine4
            h_sb7bl
            GHC.IO.Handle.Text.hGetLine2
            GHC.Prim.void#;

GHC.IO.Handle.Text.hGetLine
  :: GHC.IO.Handle.Types.Handle -> GHC.Types.IO GHC.Base.String
[GblId, Arity=2, Str=<L,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.IO.Handle.Text.hGetLine1 eta_B2 GHC.Prim.void#;

lvl11_rb6WR :: Data.Typeable.Internal.TypeRep GHC.IO.FD.FD
[GblId] =
    [] \u []
        case
            Data.Typeable.Internal.$wmkTrCon
                10838815552519039062##
                15546290101957756376##
                GHC.IO.FD.$trModule
                GHC.IO.FD.$tcFD1
                0#
                GHC.Types.krep$*
                GHC.Types.[]
        of
        { (#,,,,#) ww8_sb7bn [Occ=Once]
                   ww9_sb7bo [Occ=Once]
                   ww10_sb7bp [Occ=Once]
                   ww11_sb7bq [Occ=Once]
                   ww12_sb7br [Occ=Once] ->
              Data.Typeable.Internal.TrTyCon [ww8_sb7bn
                                              ww9_sb7bo
                                              ww10_sb7bp
                                              ww11_sb7bq
                                              ww12_sb7br];
        };

GHC.IO.Handle.Text.hGetBufNonBlocking2
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<S,1*U><S(SLLLSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [h__sb7bs
           buf_sb7bt
           ptr_sb7bu
           so_far_sb7bv
           count_sb7bw
           void_0E]
        case h__sb7bs of wild_sb7by {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt_sb7bE [Occ=Once*]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case buf_sb7bt of {
                GHC.IO.Buffer.Buffer dt4_sb7bQ
                                     dt5_sb7bR
                                     ds9_sb7bS [Occ=Once*]
                                     dt6_sb7bT
                                     dt7_sb7bU
                                     dt8_sb7bV ->
                    case count_sb7bw of {
                      GHC.Types.I# x_sb7bX ->
                          case -# [dt8_sb7bV dt7_sb7bU] of avail_sb7bY [Dmd=<S,U>] {
                            __DEFAULT ->
                                case <# [x_sb7bX avail_sb7bY] of {
                                  __DEFAULT ->
                                      case ptr_sb7bu of {
                                        GHC.Ptr.Ptr ds11_sb7c1 ->
                                            case int2Word# [avail_sb7bY] of sat_sb7c4 {
                                              __DEFAULT ->
                                                  case
                                                      plusAddr# [dt4_sb7bQ dt7_sb7bU]
                                                  of
                                                  sat_sb7c3
                                                  { __DEFAULT ->
                                                        case
                                                            __pkg_ccall base-4.11.0.0 [ds11_sb7c1
                                                                                       sat_sb7c3
                                                                                       sat_sb7c4
                                                                                       GHC.Prim.void#]
                                                        of
                                                        { Unit# _ [Occ=Dead] ->
                                                              case
                                                                  touch# [dt5_sb7bR GHC.Prim.void#]
                                                              of
                                                              s'_sb7c8
                                                              { (##) ->
                                                                    let {
                                                                      sat_sb7c9 [Occ=Once]
                                                                        :: GHC.IO.Buffer.Buffer
                                                                             GHC.Word.Word8
                                                                      [LclId] =
                                                                          CCCS GHC.IO.Buffer.Buffer! [dt4_sb7bQ
                                                                                                      dt5_sb7bR
                                                                                                      ds9_sb7bS
                                                                                                      dt6_sb7bT
                                                                                                      0#
                                                                                                      0#];
                                                                    } in 
                                                                      case
                                                                          writeMutVar# [dt_sb7bE
                                                                                        sat_sb7c9
                                                                                        GHC.Prim.void#]
                                                                      of
                                                                      s2#_sb7ca
                                                                      { (##) ->
                                                                            case
                                                                                -# [x_sb7bX
                                                                                    avail_sb7bY]
                                                                            of
                                                                            wild4_sb7cb
                                                                            { __DEFAULT ->
                                                                                  let {
                                                                                    sat_sb7ch [Occ=Once,
                                                                                               Dmd=<L,U(U)>]
                                                                                      :: GHC.Types.Int
                                                                                    [LclId] =
                                                                                        [so_far_sb7bv
                                                                                         avail_sb7bY] \u []
                                                                                            case
                                                                                                so_far_sb7bv
                                                                                            of
                                                                                            { GHC.Types.I# x1_sb7cf [Occ=Once] ->
                                                                                                  case
                                                                                                      +# [x1_sb7cf
                                                                                                          avail_sb7bY]
                                                                                                  of
                                                                                                  sat_sb7cg
                                                                                                  { __DEFAULT ->
                                                                                                        GHC.Types.I# [sat_sb7cg];
                                                                                                  };
                                                                                            };
                                                                                  } in 
                                                                                    case
                                                                                        plusAddr# [ds11_sb7c1
                                                                                                   avail_sb7bY]
                                                                                    of
                                                                                    sat_sb7cc
                                                                                    { __DEFAULT ->
                                                                                          let {
                                                                                            sat_sb7cd [Occ=Once]
                                                                                              :: GHC.Ptr.Ptr
                                                                                                   GHC.Word.Word8
                                                                                            [LclId] =
                                                                                                CCCS GHC.Ptr.Ptr! [sat_sb7cc];
                                                                                          } in 
                                                                                            GHC.IO.Handle.Text.$wbufReadNBEmpty
                                                                                                wild_sb7by
                                                                                                dt6_sb7bT
                                                                                                sat_sb7cd
                                                                                                sat_sb7ch
                                                                                                wild4_sb7cb
                                                                                                GHC.Prim.void#;
                                                                                    };
                                                                              0# ->
                                                                                  let {
                                                                                    sat_sb7cl [Occ=Once]
                                                                                      :: GHC.Types.Int
                                                                                    [LclId] =
                                                                                        [so_far_sb7bv
                                                                                         avail_sb7bY] \u []
                                                                                            case
                                                                                                so_far_sb7bv
                                                                                            of
                                                                                            { GHC.Types.I# x1_sb7cj [Occ=Once] ->
                                                                                                  case
                                                                                                      +# [x1_sb7cj
                                                                                                          avail_sb7bY]
                                                                                                  of
                                                                                                  sat_sb7ck
                                                                                                  { __DEFAULT ->
                                                                                                        GHC.Types.I# [sat_sb7ck];
                                                                                                  };
                                                                                            };
                                                                                  } in 
                                                                                    Unit# [sat_sb7cl];
                                                                            };
                                                                      };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                  1# ->
                                      case ptr_sb7bu of {
                                        GHC.Ptr.Ptr ds11_sb7cn [Occ=Once] ->
                                            case int2Word# [x_sb7bX] of sat_sb7cq {
                                              __DEFAULT ->
                                                  case
                                                      plusAddr# [dt4_sb7bQ dt7_sb7bU]
                                                  of
                                                  sat_sb7cp
                                                  { __DEFAULT ->
                                                        case
                                                            __pkg_ccall base-4.11.0.0 [ds11_sb7cn
                                                                                       sat_sb7cp
                                                                                       sat_sb7cq
                                                                                       GHC.Prim.void#]
                                                        of
                                                        { Unit# _ [Occ=Dead] ->
                                                              case
                                                                  touch# [dt5_sb7bR GHC.Prim.void#]
                                                              of
                                                              s'_sb7cu
                                                              { (##) ->
                                                                    case
                                                                        +# [dt7_sb7bU x_sb7bX]
                                                                    of
                                                                    sat_sb7cv
                                                                    { __DEFAULT ->
                                                                          let {
                                                                            sat_sb7cw [Occ=Once]
                                                                              :: GHC.IO.Buffer.Buffer
                                                                                   GHC.Word.Word8
                                                                            [LclId] =
                                                                                CCCS GHC.IO.Buffer.Buffer! [dt4_sb7bQ
                                                                                                            dt5_sb7bR
                                                                                                            ds9_sb7bS
                                                                                                            dt6_sb7bT
                                                                                                            sat_sb7cv
                                                                                                            dt8_sb7bV];
                                                                          } in 
                                                                            case
                                                                                writeMutVar# [dt_sb7bE
                                                                                              sat_sb7cw
                                                                                              GHC.Prim.void#]
                                                                            of
                                                                            s2#_sb7cx
                                                                            { (##) ->
                                                                                  let {
                                                                                    sat_sb7cB [Occ=Once]
                                                                                      :: GHC.Types.Int
                                                                                    [LclId] =
                                                                                        [so_far_sb7bv
                                                                                         x_sb7bX] \u []
                                                                                            case
                                                                                                so_far_sb7bv
                                                                                            of
                                                                                            { GHC.Types.I# x1_sb7cz [Occ=Once] ->
                                                                                                  case
                                                                                                      +# [x1_sb7cz
                                                                                                          x_sb7bX]
                                                                                                  of
                                                                                                  sat_sb7cA
                                                                                                  { __DEFAULT ->
                                                                                                        GHC.Types.I# [sat_sb7cA];
                                                                                                  };
                                                                                            };
                                                                                  } in 
                                                                                    Unit# [sat_sb7cB];
                                                                            };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };
GHC.IO.Handle.Text.$wbufReadNBEmpty [InlPrag=NOUSERINLINE[0],
                                     Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.Int#
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<S,1*U><S,U><L,1*U(U)><L,U(U)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb7cC ww_sb7cD w1_sb7cE w2_sb7cF ww1_sb7cG void_0E]
        case w_sb7cC of wild_sb7cI {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       $dBufferedIO_sb7cK [Occ=Once]
                                       $dTypeable_sb7cL [Occ=Once]
                                       ds_sb7cM [Occ=Once]
                                       _ [Occ=Dead]
                                       dt_sb7cO
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case ds_sb7cM of ww2_sb7cZ {
                GHC.IO.FD.FD ww3_sb7d0 [Occ=Once] ww4_sb7d1 [Occ=Once] ->
                    let-no-escape {
                      fail_sb7d2 [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                        :: GHC.Prim.Void#
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                      [LclId[JoinId(1)], Arity=1, Str=<L,A>, Unf=OtherCon []] =
                          sat-only [w1_sb7cE
                                    w2_sb7cF
                                    ww1_sb7cG
                                    wild_sb7cI
                                    $dBufferedIO_sb7cK
                                    dt_sb7cO
                                    ww2_sb7cZ] \r [void_0E]
                              case readMutVar# [dt_sb7cO GHC.Prim.void#] of {
                                Unit# ipv1_sb7d6 [Occ=Once] ->
                                    case
                                        GHC.IO.BufferedIO.fillReadBuffer0
                                            $dBufferedIO_sb7cK ww2_sb7cZ ipv1_sb7d6 GHC.Prim.void#
                                    of
                                    { Unit# ipv3_sb7d9 [Occ=Once!] ->
                                          case ipv3_sb7d9 of {
                                            (,) r_sb7db [Occ=Once!] buf'_sb7dc ->
                                                case r_sb7db of {
                                                  GHC.Base.Nothing -> Unit# [w2_sb7cF];
                                                  GHC.Base.Just ds12_sb7de [Occ=Once!] ->
                                                      case ds12_sb7de of wild3_sb7df {
                                                        GHC.Types.I# ds13_sb7dg [Occ=Once!] ->
                                                            case ds13_sb7dg of ds14_sb7dh {
                                                              __DEFAULT ->
                                                                  case
                                                                      writeMutVar# [dt_sb7cO
                                                                                    buf'_sb7dc
                                                                                    GHC.Prim.void#]
                                                                  of
                                                                  s2#_sb7di
                                                                  { (##) ->
                                                                        case
                                                                            <=# [ww1_sb7cG
                                                                                 ds14_sb7dh]
                                                                        of
                                                                        { __DEFAULT ->
                                                                              GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                  wild_sb7cI
                                                                                  buf'_sb7dc
                                                                                  w1_sb7cE
                                                                                  w2_sb7cF
                                                                                  wild3_sb7df
                                                                                  GHC.Prim.void#;
                                                                          1# ->
                                                                              let {
                                                                                sat_sb7dk [Occ=Once]
                                                                                  :: GHC.Types.Int
                                                                                [LclId] =
                                                                                    CCCS GHC.Types.I#! [ww1_sb7cG];
                                                                              } in 
                                                                                GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                    wild_sb7cI
                                                                                    buf'_sb7dc
                                                                                    w1_sb7cE
                                                                                    w2_sb7cF
                                                                                    sat_sb7dk
                                                                                    GHC.Prim.void#;
                                                                        };
                                                                  };
                                                              0# -> Unit# [w2_sb7cF];
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in 
                      case ># [ww1_sb7cG ww_sb7cD] of {
                        __DEFAULT -> fail_sb7d2 GHC.Prim.void#;
                        1# ->
                            case
                                Data.Typeable.Internal.sameTypeRep $dTypeable_sb7cL lvl11_rb6WR
                            of
                            { GHC.Types.False -> fail_sb7d2 GHC.Prim.void#;
                              GHC.Types.True ->
                                  case w1_sb7cE of {
                                    GHC.Ptr.Ptr ww6_sb7do [Occ=Once] ->
                                        case int2Word# [ww1_sb7cG] of sat_sb7dp {
                                          __DEFAULT ->
                                              case
                                                  GHC.IO.FD.$wreadRawBufferPtrNoBlock
                                                      GHC.IO.FD.$fBufferedIOFD8
                                                      ww3_sb7d0
                                                      ww4_sb7d1
                                                      ww6_sb7do
                                                      0#
                                                      sat_sb7dp
                                                      GHC.Prim.void#
                                              of
                                              { Unit# ipv1_sb7ds [Occ=Once!] ->
                                                    case ipv1_sb7ds of {
                                                      GHC.Types.I# ds10_sb7du [Occ=Once!] ->
                                                          case ds10_sb7du of ds11_sb7dv {
                                                            __DEFAULT ->
                                                                let {
                                                                  sat_sb7dz [Occ=Once]
                                                                    :: GHC.Types.Int
                                                                  [LclId] =
                                                                      [w2_sb7cF ds11_sb7dv] \u []
                                                                          case w2_sb7cF of {
                                                                            GHC.Types.I# x_sb7dx [Occ=Once] ->
                                                                                case
                                                                                    +# [x_sb7dx
                                                                                        ds11_sb7dv]
                                                                                of
                                                                                sat_sb7dy
                                                                                { __DEFAULT ->
                                                                                      GHC.Types.I# [sat_sb7dy];
                                                                                };
                                                                          };
                                                                } in  Unit# [sat_sb7dz];
                                                            -1# -> Unit# [w2_sb7cF];
                                                          };
                                                    };
                                              };
                                        };
                                  };
                            };
                      };
              };
        };

GHC.IO.Handle.Text.hGetBufNonBlocking4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetBufNonBlocking"#;

GHC.IO.Handle.Text.hGetBufNonBlocking3 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.IO.Handle.Text.hGetBufNonBlocking4;

GHC.IO.Handle.Text.$whGetBufNonBlocking [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId, Arity=4, Str=<L,U><L,U(U)><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [w_sb7dA w1_sb7dB ww_sb7dC void_0E]
        case ww_sb7dC of wild_sb7dE {
          __DEFAULT ->
              case <# [wild_sb7dE 0#] of {
                __DEFAULT ->
                    let {
                      wild1_sb7dG [Occ=OnceL, Dmd=<L,U(U)>] :: GHC.Types.Int
                      [LclId, Unf=OtherCon []] =
                          CCCS GHC.Types.I#! [wild_sb7dE]; } in
                    let {
                      sat_sb7fj [Occ=Once]
                        :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Int
                      [LclId] =
                          [w1_sb7dB wild_sb7dE wild1_sb7dG] \r [h__sb7dH void_0E]
                              case h__sb7dH of wild2_sb7dJ {
                                GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             dt_sb7dP
                                                             _ [Occ=Dead]
                                                             dt1_sb7dR [Occ=Once]
                                                             dt2_sb7dS
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             ds4_sb7dV [Occ=Once!]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                    case readMutVar# [dt2_sb7dS GHC.Prim.void#] of {
                                      Unit# ipv1_sb7e2 [Occ=Once!] ->
                                          case ipv1_sb7e2 of {
                                            GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 ds11_sb7e6 [Occ=Once!]
                                                                 _ [Occ=Dead]
                                                                 dt7_sb7e8 [Occ=Once]
                                                                 dt8_sb7e9 [Occ=Once] ->
                                                let-no-escape {
                                                  $w$j_sb7ea [InlPrag=NOUSERINLINE[0],
                                                              Occ=Once*!T[1],
                                                              Dmd=<L,1*C1(U(U,U))>]
                                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Types.Int #)
                                                  [LclId[JoinId(1)],
                                                   Arity=1,
                                                   Str=<S,U>,
                                                   Unf=OtherCon []] =
                                                      sat-only [w1_sb7dB
                                                                wild_sb7dE
                                                                wild1_sb7dG
                                                                wild2_sb7dJ
                                                                dt_sb7dP] \r [void_0E]
                                                          case
                                                              readMutVar# [dt_sb7dP GHC.Prim.void#]
                                                          of
                                                          { Unit# ipv3_sb7ee [Occ=Once!] ->
                                                                case ipv3_sb7ee of wild4_sb7ef {
                                                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       dt12_sb7ej [Occ=Once]
                                                                                       dt13_sb7ek [Occ=Once]
                                                                                       dt14_sb7el [Occ=Once] ->
                                                                      case
                                                                          ==# [dt13_sb7ek
                                                                               dt14_sb7el]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                wild2_sb7dJ
                                                                                wild4_sb7ef
                                                                                w1_sb7dB
                                                                                GHC.IO.Handle.Text.hGetBuf3
                                                                                wild1_sb7dG
                                                                                GHC.Prim.void#;
                                                                        1# ->
                                                                            GHC.IO.Handle.Text.$wbufReadNBEmpty
                                                                                wild2_sb7dJ
                                                                                dt12_sb7ej
                                                                                w1_sb7dB
                                                                                GHC.IO.Handle.Text.hGetBuf3
                                                                                wild_sb7dE
                                                                                GHC.Prim.void#;
                                                                      };
                                                                };
                                                          };
                                                } in 
                                                  case ds11_sb7e6 of {
                                                    GHC.IO.Buffer.ReadBuffer ->
                                                        case ==# [dt7_sb7e8 dt8_sb7e9] of {
                                                          __DEFAULT ->
                                                              case
                                                                  readMutVar# [dt1_sb7dR
                                                                               GHC.Prim.void#]
                                                              of
                                                              { Unit# ipv3_sb7er [Occ=Once!] ->
                                                                    case ipv3_sb7er of {
                                                                      (,) codec_state_sb7et [Occ=Once]
                                                                          bbuf0_sb7eu [Occ=Once*] ->
                                                                          case
                                                                              readMutVar# [dt2_sb7dS
                                                                                           GHC.Prim.void#]
                                                                          of
                                                                          { Unit# ipv5_sb7ex ->
                                                                                let {
                                                                                  sat_sb7eF [Occ=Once]
                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                         GHC.IO.Buffer.CharBufElem
                                                                                  [LclId] =
                                                                                      [ipv5_sb7ex] \u []
                                                                                          case
                                                                                              ipv5_sb7ex
                                                                                          of
                                                                                          { GHC.IO.Buffer.Buffer dt9_sb7ez [Occ=Once]
                                                                                                                 dt10_sb7eA [Occ=Once]
                                                                                                                 ds14_sb7eB [Occ=Once]
                                                                                                                 dt11_sb7eC [Occ=Once]
                                                                                                                 _ [Occ=Dead]
                                                                                                                 _ [Occ=Dead] ->
                                                                                                GHC.IO.Buffer.Buffer [dt9_sb7ez
                                                                                                                      dt10_sb7eA
                                                                                                                      ds14_sb7eB
                                                                                                                      dt11_sb7eC
                                                                                                                      0#
                                                                                                                      0#];
                                                                                          };
                                                                                } in 
                                                                                  case
                                                                                      writeMutVar# [dt2_sb7dS
                                                                                                    sat_sb7eF
                                                                                                    GHC.Prim.void#]
                                                                                  of
                                                                                  s2#_sb7eG
                                                                                  { (##) ->
                                                                                        case
                                                                                            ipv5_sb7ex
                                                                                        of
                                                                                        { GHC.IO.Buffer.Buffer dt9_sb7eI [Occ=Once]
                                                                                                               dt10_sb7eJ [Occ=Once]
                                                                                                               ds14_sb7eK [Occ=Once]
                                                                                                               _ [Occ=Dead]
                                                                                                               dt12_sb7eM [Occ=Once!]
                                                                                                               _ [Occ=Dead] ->
                                                                                              case
                                                                                                  dt12_sb7eM
                                                                                              of
                                                                                              wild7_sb7eO
                                                                                              { __DEFAULT ->
                                                                                                    case
                                                                                                        ds4_sb7dV
                                                                                                    of
                                                                                                    { GHC.Base.Nothing ->
                                                                                                          let {
                                                                                                            sat_sb7eY [Occ=Once]
                                                                                                              :: GHC.IO.Buffer.Buffer
                                                                                                                   GHC.Word.Word8
                                                                                                            [LclId] =
                                                                                                                [bbuf0_sb7eu
                                                                                                                 wild7_sb7eO] \u []
                                                                                                                    case
                                                                                                                        bbuf0_sb7eu
                                                                                                                    of
                                                                                                                    { GHC.IO.Buffer.Buffer dt14_sb7eR [Occ=Once]
                                                                                                                                           dt15_sb7eS [Occ=Once]
                                                                                                                                           ds15_sb7eT [Occ=Once]
                                                                                                                                           dt16_sb7eU [Occ=Once]
                                                                                                                                           dt17_sb7eV [Occ=Once]
                                                                                                                                           dt18_sb7eW [Occ=Once] ->
                                                                                                                          case
                                                                                                                              +# [dt17_sb7eV
                                                                                                                                  wild7_sb7eO]
                                                                                                                          of
                                                                                                                          sat_sb7eX
                                                                                                                          { __DEFAULT ->
                                                                                                                                GHC.IO.Buffer.Buffer [dt14_sb7eR
                                                                                                                                                      dt15_sb7eS
                                                                                                                                                      ds15_sb7eT
                                                                                                                                                      dt16_sb7eU
                                                                                                                                                      sat_sb7eX
                                                                                                                                                      dt18_sb7eW];
                                                                                                                          };
                                                                                                                    };
                                                                                                          } in 
                                                                                                            case
                                                                                                                writeMutVar# [dt_sb7dP
                                                                                                                              sat_sb7eY
                                                                                                                              GHC.Prim.void#]
                                                                                                            of
                                                                                                            s2#1_sb7eZ
                                                                                                            { (##) ->
                                                                                                                  $w$j_sb7ea
                                                                                                                      GHC.Prim.void#;
                                                                                                            };
                                                                                                      GHC.Base.Just decoder_sb7f0 [Occ=Once!] ->
                                                                                                          case
                                                                                                              decoder_sb7f0
                                                                                                          of
                                                                                                          { GHC.IO.Encoding.Types.BufferCodec ds15_sb7f2 [Occ=Once]
                                                                                                                                              ds16_sb7f3 [Occ=Once]
                                                                                                                                              _ [Occ=Dead]
                                                                                                                                              _ [Occ=Dead]
                                                                                                                                              ds19_sb7f6 [Occ=Once!] ->
                                                                                                                case
                                                                                                                    ds19_sb7f6
                                                                                                                        codec_state_sb7et
                                                                                                                        GHC.Prim.void#
                                                                                                                of
                                                                                                                { Unit# _ [Occ=Dead] ->
                                                                                                                      let {
                                                                                                                        sat_sb7fa [Occ=Once]
                                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                                                        [LclId] =
                                                                                                                            CCCS GHC.IO.Buffer.Buffer! [dt9_sb7eI
                                                                                                                                                        dt10_sb7eJ
                                                                                                                                                        ds14_sb7eK
                                                                                                                                                        wild7_sb7eO
                                                                                                                                                        0#
                                                                                                                                                        0#];
                                                                                                                      } in 
                                                                                                                        case
                                                                                                                            GHC.IO.Handle.Internals.$wstreamEncode
                                                                                                                                ds15_sb7f2
                                                                                                                                ds16_sb7f3
                                                                                                                                bbuf0_sb7eu
                                                                                                                                sat_sb7fa
                                                                                                                                GHC.Prim.void#
                                                                                                                        of
                                                                                                                        { Unit# ipv9_sb7fd [Occ=Once!] ->
                                                                                                                              case
                                                                                                                                  ipv9_sb7fd
                                                                                                                              of
                                                                                                                              { (,) bbuf1_sb7ff [Occ=Once]
                                                                                                                                    _ [Occ=Dead] ->
                                                                                                                                    case
                                                                                                                                        writeMutVar# [dt_sb7dP
                                                                                                                                                      bbuf1_sb7ff
                                                                                                                                                      GHC.Prim.void#]
                                                                                                                                    of
                                                                                                                                    s2#1_sb7fh
                                                                                                                                    { (##) ->
                                                                                                                                          $w$j_sb7ea
                                                                                                                                              GHC.Prim.void#;
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                };
                                                                                                          };
                                                                                                    };
                                                                                                0# ->
                                                                                                    case
                                                                                                        writeMutVar# [dt_sb7dP
                                                                                                                      bbuf0_sb7eu
                                                                                                                      GHC.Prim.void#]
                                                                                                    of
                                                                                                    s2#1_sb7fi
                                                                                                    { (##) ->
                                                                                                          $w$j_sb7ea
                                                                                                              GHC.Prim.void#;
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                          };
                                                                    };
                                                              };
                                                          1# -> $w$j_sb7ea GHC.Prim.void#;
                                                        };
                                                    GHC.IO.Buffer.WriteBuffer ->
                                                        $w$j_sb7ea GHC.Prim.void#;
                                                  };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.Handle.Internals.wantReadableHandle_1
                          GHC.IO.Handle.Text.hGetBufNonBlocking3
                          w_sb7dA
                          sat_sb7fj
                          GHC.Prim.void#;
                1# ->
                    GHC.IO.Handle.Text.$willegalBufferSize
                        w_sb7dA
                        GHC.IO.Handle.Text.hGetBufNonBlocking3
                        wild_sb7dE
                        GHC.Prim.void#;
              };
          0# -> Unit# [GHC.IO.Handle.Text.hGetBuf3];
        };

GHC.IO.Handle.Text.hGetBufNonBlocking1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb7fk w1_sb7fl w2_sb7fm void_0E]
        case w2_sb7fm of {
          GHC.Types.I# ww1_sb7fp [Occ=Once] ->
              GHC.IO.Handle.Text.$whGetBufNonBlocking
                  w_sb7fk w1_sb7fl ww1_sb7fp GHC.Prim.void#;
        };

GHC.IO.Handle.Text.hGetBufNonBlocking
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.Handle.Text.hGetBufNonBlocking1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

lvl12_rb6WS :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetBufSome"#;

lvl13_rb6WT :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl12_rb6WS;

GHC.IO.Handle.Text.$whGetBufSome [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId, Arity=4, Str=<L,U><L,U(U)><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [w_sb7fq w1_sb7fr ww_sb7fs void_0E]
        case ww_sb7fs of wild_sb7fu {
          __DEFAULT ->
              case <# [wild_sb7fu 0#] of {
                __DEFAULT ->
                    let {
                      wild1_sb7fw [Occ=OnceL*, Dmd=<L,U(U)>] :: GHC.Types.Int
                      [LclId, Unf=OtherCon []] =
                          CCCS GHC.Types.I#! [wild_sb7fu]; } in
                    let {
                      sat_sb7hx [Occ=Once]
                        :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Int
                      [LclId] =
                          [w1_sb7fr wild_sb7fu wild1_sb7fw] \r [h__sb7fx void_0E]
                              case h__sb7fx of wild2_sb7fz {
                                GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                             $dBufferedIO_sb7fB [Occ=Once]
                                                             $dTypeable_sb7fC [Occ=Once]
                                                             ds_sb7fD [Occ=Once]
                                                             _ [Occ=Dead]
                                                             dt_sb7fF
                                                             _ [Occ=Dead]
                                                             dt1_sb7fH [Occ=Once]
                                                             dt2_sb7fI
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             ds4_sb7fL [Occ=Once!]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                    case ds_sb7fD of ww1_sb7fQ {
                                      GHC.IO.FD.FD ww2_sb7fR [Occ=Once] ww3_sb7fS [Occ=Once] ->
                                          case readMutVar# [dt2_sb7fI GHC.Prim.void#] of {
                                            Unit# ipv1_sb7fV [Occ=Once!] ->
                                                case ipv1_sb7fV of {
                                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                       _ [Occ=Dead]
                                                                       ds11_sb7fZ [Occ=Once!]
                                                                       _ [Occ=Dead]
                                                                       dt7_sb7g1 [Occ=Once]
                                                                       dt8_sb7g2 [Occ=Once] ->
                                                      let-no-escape {
                                                        $w$j_sb7g3 [InlPrag=NOUSERINLINE[0],
                                                                    Occ=Once*!T[1],
                                                                    Dmd=<L,1*C1(U(U,U))>]
                                                          :: GHC.Prim.State# GHC.Prim.RealWorld
                                                             -> (# GHC.Prim.State#
                                                                     GHC.Prim.RealWorld,
                                                                   GHC.Types.Int #)
                                                        [LclId[JoinId(1)],
                                                         Arity=1,
                                                         Str=<S,U>,
                                                         Unf=OtherCon []] =
                                                            sat-only [w1_sb7fr
                                                                      wild_sb7fu
                                                                      wild1_sb7fw
                                                                      wild2_sb7fz
                                                                      $dBufferedIO_sb7fB
                                                                      $dTypeable_sb7fC
                                                                      dt_sb7fF
                                                                      ww1_sb7fQ
                                                                      ww2_sb7fR
                                                                      ww3_sb7fS] \r [void_0E]
                                                                case
                                                                    readMutVar# [dt_sb7fF
                                                                                 GHC.Prim.void#]
                                                                of
                                                                { Unit# ipv3_sb7g7 [Occ=Once!] ->
                                                                      case
                                                                          ipv3_sb7g7
                                                                      of
                                                                      wild4_sb7g8
                                                                      { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                             _ [Occ=Dead]
                                                                                             _ [Occ=Dead]
                                                                                             dt12_sb7gc [Occ=Once]
                                                                                             dt13_sb7gd
                                                                                             dt14_sb7ge ->
                                                                            case
                                                                                ==# [dt13_sb7gd
                                                                                     dt14_sb7ge]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      -# [dt14_sb7ge
                                                                                          dt13_sb7gd]
                                                                                  of
                                                                                  y1_sb7gg [Dmd=<S,U>]
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            <=# [wild_sb7fu
                                                                                                 y1_sb7gg]
                                                                                        of
                                                                                        { __DEFAULT ->
                                                                                              let {
                                                                                                sat_sb7gi [Occ=Once]
                                                                                                  :: GHC.Types.Int
                                                                                                [LclId] =
                                                                                                    CCCS GHC.Types.I#! [y1_sb7gg];
                                                                                              } in 
                                                                                                GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                                    wild2_sb7fz
                                                                                                    wild4_sb7g8
                                                                                                    w1_sb7fr
                                                                                                    GHC.IO.Handle.Text.hGetBuf3
                                                                                                    sat_sb7gi
                                                                                                    GHC.Prim.void#;
                                                                                          1# ->
                                                                                              GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                                  wild2_sb7fz
                                                                                                  wild4_sb7g8
                                                                                                  w1_sb7fr
                                                                                                  GHC.IO.Handle.Text.hGetBuf3
                                                                                                  wild1_sb7fw
                                                                                                  GHC.Prim.void#;
                                                                                        };
                                                                                  };
                                                                              1# ->
                                                                                  let-no-escape {
                                                                                    fail_sb7gj [Occ=Once*!T[1],
                                                                                                Dmd=<L,1*C1(U(U,U))>]
                                                                                      :: GHC.Prim.Void#
                                                                                         -> (# GHC.Prim.State#
                                                                                                 GHC.Prim.RealWorld,
                                                                                               GHC.Types.Int #)
                                                                                    [LclId[JoinId(1)],
                                                                                     Arity=1,
                                                                                     Str=<L,A>,
                                                                                     Unf=OtherCon []] =
                                                                                        sat-only [w1_sb7fr
                                                                                                  wild_sb7fu
                                                                                                  wild1_sb7fw
                                                                                                  wild2_sb7fz
                                                                                                  $dBufferedIO_sb7fB
                                                                                                  dt_sb7fF
                                                                                                  ww1_sb7fQ
                                                                                                  wild4_sb7g8] \r [void_0E]
                                                                                            case
                                                                                                GHC.IO.BufferedIO.fillReadBuffer
                                                                                                    $dBufferedIO_sb7fB
                                                                                                    ww1_sb7fQ
                                                                                                    wild4_sb7g8
                                                                                                    GHC.Prim.void#
                                                                                            of
                                                                                            { Unit# ipv5_sb7gn [Occ=Once!] ->
                                                                                                  case
                                                                                                      ipv5_sb7gn
                                                                                                  of
                                                                                                  { (,) r_sb7gp [Occ=Once!]
                                                                                                        buf'_sb7gq ->
                                                                                                        case
                                                                                                            r_sb7gp
                                                                                                        of
                                                                                                        wild6_sb7gr
                                                                                                        { GHC.Types.I# x_sb7gs [Occ=Once!] ->
                                                                                                              case
                                                                                                                  x_sb7gs
                                                                                                              of
                                                                                                              wild7_sb7gt
                                                                                                              { __DEFAULT ->
                                                                                                                    case
                                                                                                                        writeMutVar# [dt_sb7fF
                                                                                                                                      buf'_sb7gq
                                                                                                                                      GHC.Prim.void#]
                                                                                                                    of
                                                                                                                    s2#_sb7gu
                                                                                                                    { (##) ->
                                                                                                                          case
                                                                                                                              <=# [wild7_sb7gt
                                                                                                                                   wild_sb7fu]
                                                                                                                          of
                                                                                                                          { __DEFAULT ->
                                                                                                                                GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                                                                    wild2_sb7fz
                                                                                                                                    buf'_sb7gq
                                                                                                                                    w1_sb7fr
                                                                                                                                    GHC.IO.Handle.Text.hGetBuf3
                                                                                                                                    wild1_sb7fw
                                                                                                                                    GHC.Prim.void#;
                                                                                                                            1# ->
                                                                                                                                GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                                                                    wild2_sb7fz
                                                                                                                                    buf'_sb7gq
                                                                                                                                    w1_sb7fr
                                                                                                                                    GHC.IO.Handle.Text.hGetBuf3
                                                                                                                                    wild6_sb7gr
                                                                                                                                    GHC.Prim.void#;
                                                                                                                          };
                                                                                                                    };
                                                                                                                0# ->
                                                                                                                    Unit# [GHC.IO.Handle.Text.hGetBuf3];
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                  } in 
                                                                                    case
                                                                                        ># [wild_sb7fu
                                                                                            dt12_sb7gc]
                                                                                    of
                                                                                    { __DEFAULT ->
                                                                                          fail_sb7gj
                                                                                              GHC.Prim.void#;
                                                                                      1# ->
                                                                                          case
                                                                                              Data.Typeable.Internal.sameTypeRep
                                                                                                  $dTypeable_sb7fC
                                                                                                  lvl11_rb6WR
                                                                                          of
                                                                                          { GHC.Types.False ->
                                                                                                fail_sb7gj
                                                                                                    GHC.Prim.void#;
                                                                                            GHC.Types.True ->
                                                                                                case
                                                                                                    w1_sb7fr
                                                                                                of
                                                                                                { GHC.Ptr.Ptr ww5_sb7gz [Occ=Once] ->
                                                                                                      case
                                                                                                          int2Word# [wild_sb7fu]
                                                                                                      of
                                                                                                      sat_sb7gA
                                                                                                      { __DEFAULT ->
                                                                                                            GHC.IO.FD.$wreadRawBufferPtr
                                                                                                                GHC.IO.FD.$fBufferedIOFD12
                                                                                                                ww2_sb7fR
                                                                                                                ww3_sb7fS
                                                                                                                ww5_sb7gz
                                                                                                                0#
                                                                                                                sat_sb7gA
                                                                                                                GHC.Prim.void#;
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                            };
                                                                      };
                                                                };
                                                      } in 
                                                        case ds11_sb7fZ of {
                                                          GHC.IO.Buffer.ReadBuffer ->
                                                              case ==# [dt7_sb7g1 dt8_sb7g2] of {
                                                                __DEFAULT ->
                                                                    case
                                                                        readMutVar# [dt1_sb7fH
                                                                                     GHC.Prim.void#]
                                                                    of
                                                                    { Unit# ipv3_sb7gF [Occ=Once!] ->
                                                                          case ipv3_sb7gF of {
                                                                            (,) codec_state_sb7gH [Occ=Once]
                                                                                bbuf0_sb7gI [Occ=Once*] ->
                                                                                case
                                                                                    readMutVar# [dt2_sb7fI
                                                                                                 GHC.Prim.void#]
                                                                                of
                                                                                { Unit# ipv5_sb7gL ->
                                                                                      let {
                                                                                        sat_sb7gT [Occ=Once]
                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                        [LclId] =
                                                                                            [ipv5_sb7gL] \u []
                                                                                                case
                                                                                                    ipv5_sb7gL
                                                                                                of
                                                                                                { GHC.IO.Buffer.Buffer dt9_sb7gN [Occ=Once]
                                                                                                                       dt10_sb7gO [Occ=Once]
                                                                                                                       ds14_sb7gP [Occ=Once]
                                                                                                                       dt11_sb7gQ [Occ=Once]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       _ [Occ=Dead] ->
                                                                                                      GHC.IO.Buffer.Buffer [dt9_sb7gN
                                                                                                                            dt10_sb7gO
                                                                                                                            ds14_sb7gP
                                                                                                                            dt11_sb7gQ
                                                                                                                            0#
                                                                                                                            0#];
                                                                                                };
                                                                                      } in 
                                                                                        case
                                                                                            writeMutVar# [dt2_sb7fI
                                                                                                          sat_sb7gT
                                                                                                          GHC.Prim.void#]
                                                                                        of
                                                                                        s2#_sb7gU
                                                                                        { (##) ->
                                                                                              case
                                                                                                  ipv5_sb7gL
                                                                                              of
                                                                                              { GHC.IO.Buffer.Buffer dt9_sb7gW [Occ=Once]
                                                                                                                     dt10_sb7gX [Occ=Once]
                                                                                                                     ds14_sb7gY [Occ=Once]
                                                                                                                     _ [Occ=Dead]
                                                                                                                     dt12_sb7h0 [Occ=Once!]
                                                                                                                     _ [Occ=Dead] ->
                                                                                                    case
                                                                                                        dt12_sb7h0
                                                                                                    of
                                                                                                    wild7_sb7h2
                                                                                                    { __DEFAULT ->
                                                                                                          case
                                                                                                              ds4_sb7fL
                                                                                                          of
                                                                                                          { GHC.Base.Nothing ->
                                                                                                                let {
                                                                                                                  sat_sb7hc [Occ=Once]
                                                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                                                         GHC.Word.Word8
                                                                                                                  [LclId] =
                                                                                                                      [bbuf0_sb7gI
                                                                                                                       wild7_sb7h2] \u []
                                                                                                                          case
                                                                                                                              bbuf0_sb7gI
                                                                                                                          of
                                                                                                                          { GHC.IO.Buffer.Buffer dt14_sb7h5 [Occ=Once]
                                                                                                                                                 dt15_sb7h6 [Occ=Once]
                                                                                                                                                 ds15_sb7h7 [Occ=Once]
                                                                                                                                                 dt16_sb7h8 [Occ=Once]
                                                                                                                                                 dt17_sb7h9 [Occ=Once]
                                                                                                                                                 dt18_sb7ha [Occ=Once] ->
                                                                                                                                case
                                                                                                                                    +# [dt17_sb7h9
                                                                                                                                        wild7_sb7h2]
                                                                                                                                of
                                                                                                                                sat_sb7hb
                                                                                                                                { __DEFAULT ->
                                                                                                                                      GHC.IO.Buffer.Buffer [dt14_sb7h5
                                                                                                                                                            dt15_sb7h6
                                                                                                                                                            ds15_sb7h7
                                                                                                                                                            dt16_sb7h8
                                                                                                                                                            sat_sb7hb
                                                                                                                                                            dt18_sb7ha];
                                                                                                                                };
                                                                                                                          };
                                                                                                                } in 
                                                                                                                  case
                                                                                                                      writeMutVar# [dt_sb7fF
                                                                                                                                    sat_sb7hc
                                                                                                                                    GHC.Prim.void#]
                                                                                                                  of
                                                                                                                  s2#1_sb7hd
                                                                                                                  { (##) ->
                                                                                                                        $w$j_sb7g3
                                                                                                                            GHC.Prim.void#;
                                                                                                                  };
                                                                                                            GHC.Base.Just decoder_sb7he [Occ=Once!] ->
                                                                                                                case
                                                                                                                    decoder_sb7he
                                                                                                                of
                                                                                                                { GHC.IO.Encoding.Types.BufferCodec ds15_sb7hg [Occ=Once]
                                                                                                                                                    ds16_sb7hh [Occ=Once]
                                                                                                                                                    _ [Occ=Dead]
                                                                                                                                                    _ [Occ=Dead]
                                                                                                                                                    ds19_sb7hk [Occ=Once!] ->
                                                                                                                      case
                                                                                                                          ds19_sb7hk
                                                                                                                              codec_state_sb7gH
                                                                                                                              GHC.Prim.void#
                                                                                                                      of
                                                                                                                      { Unit# _ [Occ=Dead] ->
                                                                                                                            let {
                                                                                                                              sat_sb7ho [Occ=Once]
                                                                                                                                :: GHC.IO.Buffer.Buffer
                                                                                                                                     GHC.IO.Buffer.CharBufElem
                                                                                                                              [LclId] =
                                                                                                                                  CCCS GHC.IO.Buffer.Buffer! [dt9_sb7gW
                                                                                                                                                              dt10_sb7gX
                                                                                                                                                              ds14_sb7gY
                                                                                                                                                              wild7_sb7h2
                                                                                                                                                              0#
                                                                                                                                                              0#];
                                                                                                                            } in 
                                                                                                                              case
                                                                                                                                  GHC.IO.Handle.Internals.$wstreamEncode
                                                                                                                                      ds15_sb7hg
                                                                                                                                      ds16_sb7hh
                                                                                                                                      bbuf0_sb7gI
                                                                                                                                      sat_sb7ho
                                                                                                                                      GHC.Prim.void#
                                                                                                                              of
                                                                                                                              { Unit# ipv9_sb7hr [Occ=Once!] ->
                                                                                                                                    case
                                                                                                                                        ipv9_sb7hr
                                                                                                                                    of
                                                                                                                                    { (,) bbuf1_sb7ht [Occ=Once]
                                                                                                                                          _ [Occ=Dead] ->
                                                                                                                                          case
                                                                                                                                              writeMutVar# [dt_sb7fF
                                                                                                                                                            bbuf1_sb7ht
                                                                                                                                                            GHC.Prim.void#]
                                                                                                                                          of
                                                                                                                                          s2#1_sb7hv
                                                                                                                                          { (##) ->
                                                                                                                                                $w$j_sb7g3
                                                                                                                                                    GHC.Prim.void#;
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              };
                                                                                                                      };
                                                                                                                };
                                                                                                          };
                                                                                                      0# ->
                                                                                                          case
                                                                                                              writeMutVar# [dt_sb7fF
                                                                                                                            bbuf0_sb7gI
                                                                                                                            GHC.Prim.void#]
                                                                                                          of
                                                                                                          s2#1_sb7hw
                                                                                                          { (##) ->
                                                                                                                $w$j_sb7g3
                                                                                                                    GHC.Prim.void#;
                                                                                                          };
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                };
                                                                          };
                                                                    };
                                                                1# -> $w$j_sb7g3 GHC.Prim.void#;
                                                              };
                                                          GHC.IO.Buffer.WriteBuffer ->
                                                              $w$j_sb7g3 GHC.Prim.void#;
                                                        };
                                                };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.Handle.Internals.wantReadableHandle_1
                          lvl13_rb6WT w_sb7fq sat_sb7hx GHC.Prim.void#;
                1# ->
                    GHC.IO.Handle.Text.$willegalBufferSize
                        w_sb7fq lvl13_rb6WT wild_sb7fu GHC.Prim.void#;
              };
          0# -> Unit# [GHC.IO.Handle.Text.hGetBuf3];
        };

GHC.IO.Handle.Text.hGetBufSome1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb7hy w1_sb7hz w2_sb7hA void_0E]
        case w2_sb7hA of {
          GHC.Types.I# ww1_sb7hD [Occ=Once] ->
              GHC.IO.Handle.Text.$whGetBufSome
                  w_sb7hy w1_sb7hz ww1_sb7hD GHC.Prim.void#;
        };

GHC.IO.Handle.Text.hGetBufSome
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.Handle.Text.hGetBufSome1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Handle.Text.hGetBuf4
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<S,1*U><S(SLLLSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><S,1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [h__sb7hE
           buf_sb7hF
           ptr_sb7hG
           so_far_sb7hH
           count_sb7hI
           void_0E]
        case h__sb7hE of wild_sb7hK {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt_sb7hQ [Occ=Once*]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case buf_sb7hF of {
                GHC.IO.Buffer.Buffer dt4_sb7i2
                                     dt5_sb7i3
                                     ds9_sb7i4 [Occ=OnceL*]
                                     dt6_sb7i5 [Occ=OnceL*]
                                     dt7_sb7i6
                                     dt8_sb7i7 ->
                    case so_far_sb7hH of {
                      GHC.Types.I# ipv_sb7i9 [Occ=Once*] ->
                          case count_sb7hI of {
                            GHC.Types.I# ipv1_sb7ib ->
                                case -# [dt8_sb7i7 dt7_sb7i6] of avail_sb7ic [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      case <# [ipv1_sb7ib avail_sb7ic] of {
                                        __DEFAULT ->
                                            case ptr_sb7hG of {
                                              GHC.Ptr.Ptr ds11_sb7if ->
                                                  case int2Word# [avail_sb7ic] of sat_sb7ii {
                                                    __DEFAULT ->
                                                        case
                                                            plusAddr# [dt4_sb7i2 dt7_sb7i6]
                                                        of
                                                        sat_sb7ih
                                                        { __DEFAULT ->
                                                              case
                                                                  __pkg_ccall base-4.11.0.0 [ds11_sb7if
                                                                                             sat_sb7ih
                                                                                             sat_sb7ii
                                                                                             GHC.Prim.void#]
                                                              of
                                                              { Unit# _ [Occ=Dead] ->
                                                                    case
                                                                        touch# [dt5_sb7i3
                                                                                GHC.Prim.void#]
                                                                    of
                                                                    s'_sb7im
                                                                    { (##) ->
                                                                          let {
                                                                            buf'_sb7in [Dmd=<L,U(U,U,U,U,U,U)>]
                                                                              :: GHC.IO.Buffer.Buffer
                                                                                   GHC.Word.Word8
                                                                            [LclId,
                                                                             Unf=OtherCon []] =
                                                                                CCCS GHC.IO.Buffer.Buffer! [dt4_sb7i2
                                                                                                            dt5_sb7i3
                                                                                                            ds9_sb7i4
                                                                                                            dt6_sb7i5
                                                                                                            0#
                                                                                                            0#];
                                                                          } in 
                                                                            case
                                                                                writeMutVar# [dt_sb7hQ
                                                                                              buf'_sb7in
                                                                                              GHC.Prim.void#]
                                                                            of
                                                                            s2#_sb7io
                                                                            { (##) ->
                                                                                  case
                                                                                      -# [ipv1_sb7ib
                                                                                          avail_sb7ic]
                                                                                  of
                                                                                  wild3_sb7ip
                                                                                  { __DEFAULT ->
                                                                                        let {
                                                                                          sat_sb7iu [Occ=Once]
                                                                                            :: GHC.Types.Int
                                                                                          [LclId] =
                                                                                              CCCS GHC.Types.I#! [wild3_sb7ip];
                                                                                        } in 
                                                                                          case
                                                                                              +# [ipv_sb7i9
                                                                                                  avail_sb7ic]
                                                                                          of
                                                                                          sat_sb7is
                                                                                          { __DEFAULT ->
                                                                                                let {
                                                                                                  sat_sb7it [Occ=Once]
                                                                                                    :: GHC.Types.Int
                                                                                                  [LclId] =
                                                                                                      CCCS GHC.Types.I#! [sat_sb7is];
                                                                                                } in 
                                                                                                  case
                                                                                                      plusAddr# [ds11_sb7if
                                                                                                                 avail_sb7ic]
                                                                                                  of
                                                                                                  sat_sb7iq
                                                                                                  { __DEFAULT ->
                                                                                                        let {
                                                                                                          sat_sb7ir [Occ=Once]
                                                                                                            :: GHC.Ptr.Ptr
                                                                                                                 GHC.Word.Word8
                                                                                                          [LclId] =
                                                                                                              CCCS GHC.Ptr.Ptr! [sat_sb7iq];
                                                                                                        } in 
                                                                                                          GHC.IO.Handle.Text.hGetBuf2
                                                                                                              wild_sb7hK
                                                                                                              buf'_sb7in
                                                                                                              sat_sb7ir
                                                                                                              sat_sb7it
                                                                                                              sat_sb7iu
                                                                                                              GHC.Prim.void#;
                                                                                                  };
                                                                                          };
                                                                                    0# ->
                                                                                        case
                                                                                            +# [ipv_sb7i9
                                                                                                avail_sb7ic]
                                                                                        of
                                                                                        sat_sb7iv
                                                                                        { __DEFAULT ->
                                                                                              let {
                                                                                                sat_sb7iw [Occ=Once]
                                                                                                  :: GHC.Types.Int
                                                                                                [LclId] =
                                                                                                    CCCS GHC.Types.I#! [sat_sb7iv];
                                                                                              } in 
                                                                                                Unit# [sat_sb7iw];
                                                                                        };
                                                                                  };
                                                                            };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                        1# ->
                                            case ptr_sb7hG of {
                                              GHC.Ptr.Ptr ds11_sb7iy [Occ=Once] ->
                                                  case int2Word# [ipv1_sb7ib] of sat_sb7iB {
                                                    __DEFAULT ->
                                                        case
                                                            plusAddr# [dt4_sb7i2 dt7_sb7i6]
                                                        of
                                                        sat_sb7iA
                                                        { __DEFAULT ->
                                                              case
                                                                  __pkg_ccall base-4.11.0.0 [ds11_sb7iy
                                                                                             sat_sb7iA
                                                                                             sat_sb7iB
                                                                                             GHC.Prim.void#]
                                                              of
                                                              { Unit# _ [Occ=Dead] ->
                                                                    case
                                                                        touch# [dt5_sb7i3
                                                                                GHC.Prim.void#]
                                                                    of
                                                                    s'_sb7iF
                                                                    { (##) ->
                                                                          case
                                                                              +# [dt7_sb7i6
                                                                                  ipv1_sb7ib]
                                                                          of
                                                                          sat_sb7iG
                                                                          { __DEFAULT ->
                                                                                let {
                                                                                  sat_sb7iH [Occ=Once]
                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                         GHC.Word.Word8
                                                                                  [LclId] =
                                                                                      CCCS GHC.IO.Buffer.Buffer! [dt4_sb7i2
                                                                                                                  dt5_sb7i3
                                                                                                                  ds9_sb7i4
                                                                                                                  dt6_sb7i5
                                                                                                                  sat_sb7iG
                                                                                                                  dt8_sb7i7];
                                                                                } in 
                                                                                  case
                                                                                      writeMutVar# [dt_sb7hQ
                                                                                                    sat_sb7iH
                                                                                                    GHC.Prim.void#]
                                                                                  of
                                                                                  s2#_sb7iI
                                                                                  { (##) ->
                                                                                        case
                                                                                            +# [ipv_sb7i9
                                                                                                ipv1_sb7ib]
                                                                                        of
                                                                                        sat_sb7iJ
                                                                                        { __DEFAULT ->
                                                                                              let {
                                                                                                sat_sb7iK [Occ=Once]
                                                                                                  :: GHC.Types.Int
                                                                                                [LclId] =
                                                                                                    CCCS GHC.Types.I#! [sat_sb7iJ];
                                                                                              } in 
                                                                                                Unit# [sat_sb7iK];
                                                                                        };
                                                                                  };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };
GHC.IO.Handle.Text.hGetBuf2 [Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<S,1*U><S(LLLSLL),1*U(U,U,U,U,U,U)><L,U(U)><L,U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [h__sb7iL
           buf_sb7iM
           ptr_sb7iN
           so_far_sb7iO
           count_sb7iP
           void_0E]
        case h__sb7iL of wild_sb7iR {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       $dBufferedIO_sb7iT [Occ=Once]
                                       $dTypeable_sb7iU [Occ=Once]
                                       ds_sb7iV
                                       _ [Occ=Dead]
                                       dt_sb7iX [Occ=Once]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case buf_sb7iM of wild1_sb7j8 {
                GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     dt6_sb7jc [Occ=Once]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead] ->
                    case count_sb7iP of wild2_sb7jf {
                      GHC.Types.I# x_sb7jg ->
                          let-no-escape {
                            fail_sb7jh [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                              :: GHC.Prim.Void#
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                            [LclId[JoinId(1)], Arity=1, Str=<L,A>, Unf=OtherCon []] =
                                sat-only [ptr_sb7iN
                                          so_far_sb7iO
                                          wild_sb7iR
                                          $dBufferedIO_sb7iT
                                          ds_sb7iV
                                          dt_sb7iX
                                          wild1_sb7j8
                                          wild2_sb7jf] \r [void_0E]
                                    case
                                        GHC.IO.BufferedIO.fillReadBuffer
                                            $dBufferedIO_sb7iT ds_sb7iV wild1_sb7j8 GHC.Prim.void#
                                    of
                                    { Unit# ipv1_sb7jl [Occ=Once!] ->
                                          case ipv1_sb7jl of {
                                            (,) r_sb7jn [Occ=Once!] buf'_sb7jo ->
                                                case r_sb7jn of {
                                                  GHC.Types.I# x1_sb7jq [Occ=Once!] ->
                                                      case x1_sb7jq of {
                                                        __DEFAULT ->
                                                            case
                                                                writeMutVar# [dt_sb7iX
                                                                              buf'_sb7jo
                                                                              GHC.Prim.void#]
                                                            of
                                                            s2#_sb7js
                                                            { (##) ->
                                                                  GHC.IO.Handle.Text.hGetBuf4
                                                                      wild_sb7iR
                                                                      buf'_sb7jo
                                                                      ptr_sb7iN
                                                                      so_far_sb7iO
                                                                      wild2_sb7jf
                                                                      GHC.Prim.void#;
                                                            };
                                                        0# -> Unit# [so_far_sb7iO];
                                                      };
                                                };
                                          };
                                    };
                          } in 
                            case ># [x_sb7jg dt6_sb7jc] of {
                              __DEFAULT -> fail_sb7jh GHC.Prim.void#;
                              1# ->
                                  case
                                      Data.Typeable.Internal.sameTypeRep
                                          $dTypeable_sb7iU lvl11_rb6WR
                                  of
                                  { GHC.Types.False -> fail_sb7jh GHC.Prim.void#;
                                    GHC.Types.True ->
                                        let-no-escape {
                                          exit_sb7jv [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
                                            :: GHC.Prim.Int#
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                     GHC.Types.Int #)
                                          [LclId[JoinId(2)],
                                           Arity=2,
                                           Str=<L,U><S,U>,
                                           Unf=OtherCon []] =
                                              sat-only [so_far_sb7iO] \r [d_sb7jw void_0E]
                                                  let {
                                                    sat_sb7jB [Occ=Once] :: GHC.Types.Int
                                                    [LclId] =
                                                        [so_far_sb7iO d_sb7jw] \u []
                                                            case so_far_sb7iO of {
                                                              GHC.Types.I# x1_sb7jz [Occ=Once] ->
                                                                  case
                                                                      +# [x1_sb7jz d_sb7jw]
                                                                  of
                                                                  sat_sb7jA
                                                                  { __DEFAULT ->
                                                                        GHC.Types.I# [sat_sb7jA];
                                                                  };
                                                            };
                                                  } in  Unit# [sat_sb7jB];
                                        } in 
                                          let-no-escape {
                                            exit1_sb7jC [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
                                              :: GHC.Types.Int
                                                 -> GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Types.Int #)
                                            [LclId[JoinId(2)],
                                             Arity=2,
                                             Str=<L,1*U(U)><S,U>,
                                             Unf=OtherCon []] =
                                                sat-only [so_far_sb7iO] \r [w_sb7jD void_0E]
                                                    let {
                                                      sat_sb7jF [Occ=Once] :: GHC.Types.Int
                                                      [LclId] =
                                                          [so_far_sb7iO w_sb7jD] \u []
                                                              GHC.Num.$fNumInt_$c+
                                                                  so_far_sb7iO w_sb7jD;
                                                    } in  Unit# [sat_sb7jF];
                                          } in 
                                            let-no-escape {
                                              $wloop_sb7jG [InlPrag=NOUSERINLINE[0],
                                                            Occ=LoopBreakerT[4]]
                                                :: GHC.IO.FD.FD
                                                   -> GHC.Types.Int
                                                   -> GHC.Prim.Int#
                                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         GHC.Types.Int #)
                                              [LclId[JoinId(4)],
                                               Arity=4,
                                               Str=<L,1*U(U,U)><L,1*U(U)><S,U><S,U>,
                                               Unf=OtherCon []] =
                                                  sat-only [ptr_sb7iN
                                                            exit_sb7jv
                                                            exit1_sb7jC
                                                            $wloop_sb7jG] \r [w_sb7jH
                                                                              w1_sb7jI
                                                                              ww_sb7jJ
                                                                              void_0E]
                                                      case <=# [ww_sb7jJ 0#] of {
                                                        __DEFAULT ->
                                                            case ptr_sb7iN of {
                                                              GHC.Ptr.Ptr addr_sb7jN [Occ=Once] ->
                                                                  case w1_sb7jI of {
                                                                    GHC.Types.I# d_sb7jP ->
                                                                        case w_sb7jH of ww1_sb7jQ {
                                                                          GHC.IO.FD.FD ww2_sb7jR [Occ=Once]
                                                                                       ww3_sb7jS [Occ=Once] ->
                                                                              case
                                                                                  int2Word# [ww_sb7jJ]
                                                                              of
                                                                              sat_sb7jU
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        plusAddr# [addr_sb7jN
                                                                                                   d_sb7jP]
                                                                                    of
                                                                                    sat_sb7jT
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              GHC.IO.FD.$wreadRawBufferPtr
                                                                                                  GHC.IO.FD.$fBufferedIOFD12
                                                                                                  ww2_sb7jR
                                                                                                  ww3_sb7jS
                                                                                                  sat_sb7jT
                                                                                                  0#
                                                                                                  sat_sb7jU
                                                                                                  GHC.Prim.void#
                                                                                          of
                                                                                          { Unit# ipv1_sb7jX [Occ=Once!] ->
                                                                                                case
                                                                                                    ipv1_sb7jX
                                                                                                of
                                                                                                { GHC.Types.I# x1_sb7jZ [Occ=Once!] ->
                                                                                                      case
                                                                                                          x1_sb7jZ
                                                                                                      of
                                                                                                      wild7_sb7k0
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                -# [ww_sb7jJ
                                                                                                                    wild7_sb7k0]
                                                                                                            of
                                                                                                            sat_sb7k3
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      +# [d_sb7jP
                                                                                                                          wild7_sb7k0]
                                                                                                                  of
                                                                                                                  sat_sb7k1
                                                                                                                  { __DEFAULT ->
                                                                                                                        let {
                                                                                                                          sat_sb7k2 [Occ=Once]
                                                                                                                            :: GHC.Types.Int
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Types.I#! [sat_sb7k1];
                                                                                                                        } in 
                                                                                                                          $wloop_sb7jG
                                                                                                                              ww1_sb7jQ
                                                                                                                              sat_sb7k2
                                                                                                                              sat_sb7k3
                                                                                                                              GHC.Prim.void#;
                                                                                                                  };
                                                                                                            };
                                                                                                        0# ->
                                                                                                            exit_sb7jv
                                                                                                                d_sb7jP
                                                                                                                GHC.Prim.void#;
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                        1# -> exit1_sb7jC w1_sb7jI GHC.Prim.void#;
                                                      };
                                            } in 
                                              $wloop_sb7jG
                                                  ds_sb7iV
                                                  GHC.IO.Handle.Text.hGetBuf3
                                                  x_sb7jg
                                                  GHC.Prim.void#;
                                  };
                            };
                    };
              };
        };

GHC.IO.Handle.Text.hGetBuf6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetBuf"#;

GHC.IO.Handle.Text.hGetBuf5 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hGetBuf6;

GHC.IO.Handle.Text.$whGetBuf [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId, Arity=4, Str=<L,U><L,U(U)><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [w_sb7k4 w1_sb7k5 ww_sb7k6 void_0E]
        case ww_sb7k6 of wild_sb7k8 {
          __DEFAULT ->
              case <# [wild_sb7k8 0#] of {
                __DEFAULT ->
                    let {
                      wild1_sb7ka [Occ=OnceL*, Dmd=<L,U(U)>] :: GHC.Types.Int
                      [LclId, Unf=OtherCon []] =
                          CCCS GHC.Types.I#! [wild_sb7k8]; } in
                    let {
                      sat_sb7lN [Occ=Once]
                        :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Int
                      [LclId] =
                          [w1_sb7k5 wild1_sb7ka] \r [h__sb7kb void_0E]
                              case h__sb7kb of wild2_sb7kd {
                                GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             dt_sb7kj
                                                             _ [Occ=Dead]
                                                             dt1_sb7kl [Occ=Once]
                                                             dt2_sb7km
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             ds4_sb7kp [Occ=Once!]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                    case readMutVar# [dt2_sb7km GHC.Prim.void#] of {
                                      Unit# ipv1_sb7kw [Occ=Once!] ->
                                          case ipv1_sb7kw of {
                                            GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 ds11_sb7kA [Occ=Once!]
                                                                 _ [Occ=Dead]
                                                                 dt7_sb7kC [Occ=Once]
                                                                 dt8_sb7kD [Occ=Once] ->
                                                let-no-escape {
                                                  $w$j_sb7kE [InlPrag=NOUSERINLINE[0],
                                                              Occ=Once*!T[1],
                                                              Dmd=<L,1*C1(U(U,U))>]
                                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Types.Int #)
                                                  [LclId[JoinId(1)],
                                                   Arity=1,
                                                   Str=<S,U>,
                                                   Unf=OtherCon []] =
                                                      sat-only [w1_sb7k5
                                                                wild1_sb7ka
                                                                wild2_sb7kd
                                                                dt_sb7kj] \r [void_0E]
                                                          case
                                                              readMutVar# [dt_sb7kj GHC.Prim.void#]
                                                          of
                                                          { Unit# ipv3_sb7kI [Occ=Once!] ->
                                                                case ipv3_sb7kI of wild4_sb7kJ {
                                                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       dt13_sb7kO [Occ=Once]
                                                                                       dt14_sb7kP [Occ=Once] ->
                                                                      case
                                                                          ==# [dt13_sb7kO
                                                                               dt14_sb7kP]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            GHC.IO.Handle.Text.hGetBuf4
                                                                                wild2_sb7kd
                                                                                wild4_sb7kJ
                                                                                w1_sb7k5
                                                                                GHC.IO.Handle.Text.hGetBuf3
                                                                                wild1_sb7ka
                                                                                GHC.Prim.void#;
                                                                        1# ->
                                                                            GHC.IO.Handle.Text.hGetBuf2
                                                                                wild2_sb7kd
                                                                                wild4_sb7kJ
                                                                                w1_sb7k5
                                                                                GHC.IO.Handle.Text.hGetBuf3
                                                                                wild1_sb7ka
                                                                                GHC.Prim.void#;
                                                                      };
                                                                };
                                                          };
                                                } in 
                                                  case ds11_sb7kA of {
                                                    GHC.IO.Buffer.ReadBuffer ->
                                                        case ==# [dt7_sb7kC dt8_sb7kD] of {
                                                          __DEFAULT ->
                                                              case
                                                                  readMutVar# [dt1_sb7kl
                                                                               GHC.Prim.void#]
                                                              of
                                                              { Unit# ipv3_sb7kV [Occ=Once!] ->
                                                                    case ipv3_sb7kV of {
                                                                      (,) codec_state_sb7kX [Occ=Once]
                                                                          bbuf0_sb7kY [Occ=Once*] ->
                                                                          case
                                                                              readMutVar# [dt2_sb7km
                                                                                           GHC.Prim.void#]
                                                                          of
                                                                          { Unit# ipv5_sb7l1 ->
                                                                                let {
                                                                                  sat_sb7l9 [Occ=Once]
                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                         GHC.IO.Buffer.CharBufElem
                                                                                  [LclId] =
                                                                                      [ipv5_sb7l1] \u []
                                                                                          case
                                                                                              ipv5_sb7l1
                                                                                          of
                                                                                          { GHC.IO.Buffer.Buffer dt9_sb7l3 [Occ=Once]
                                                                                                                 dt10_sb7l4 [Occ=Once]
                                                                                                                 ds14_sb7l5 [Occ=Once]
                                                                                                                 dt11_sb7l6 [Occ=Once]
                                                                                                                 _ [Occ=Dead]
                                                                                                                 _ [Occ=Dead] ->
                                                                                                GHC.IO.Buffer.Buffer [dt9_sb7l3
                                                                                                                      dt10_sb7l4
                                                                                                                      ds14_sb7l5
                                                                                                                      dt11_sb7l6
                                                                                                                      0#
                                                                                                                      0#];
                                                                                          };
                                                                                } in 
                                                                                  case
                                                                                      writeMutVar# [dt2_sb7km
                                                                                                    sat_sb7l9
                                                                                                    GHC.Prim.void#]
                                                                                  of
                                                                                  s2#_sb7la
                                                                                  { (##) ->
                                                                                        case
                                                                                            ipv5_sb7l1
                                                                                        of
                                                                                        { GHC.IO.Buffer.Buffer dt9_sb7lc [Occ=Once]
                                                                                                               dt10_sb7ld [Occ=Once]
                                                                                                               ds14_sb7le [Occ=Once]
                                                                                                               _ [Occ=Dead]
                                                                                                               dt12_sb7lg [Occ=Once!]
                                                                                                               _ [Occ=Dead] ->
                                                                                              case
                                                                                                  dt12_sb7lg
                                                                                              of
                                                                                              wild7_sb7li
                                                                                              { __DEFAULT ->
                                                                                                    case
                                                                                                        ds4_sb7kp
                                                                                                    of
                                                                                                    { GHC.Base.Nothing ->
                                                                                                          let {
                                                                                                            sat_sb7ls [Occ=Once]
                                                                                                              :: GHC.IO.Buffer.Buffer
                                                                                                                   GHC.Word.Word8
                                                                                                            [LclId] =
                                                                                                                [bbuf0_sb7kY
                                                                                                                 wild7_sb7li] \u []
                                                                                                                    case
                                                                                                                        bbuf0_sb7kY
                                                                                                                    of
                                                                                                                    { GHC.IO.Buffer.Buffer dt14_sb7ll [Occ=Once]
                                                                                                                                           dt15_sb7lm [Occ=Once]
                                                                                                                                           ds15_sb7ln [Occ=Once]
                                                                                                                                           dt16_sb7lo [Occ=Once]
                                                                                                                                           dt17_sb7lp [Occ=Once]
                                                                                                                                           dt18_sb7lq [Occ=Once] ->
                                                                                                                          case
                                                                                                                              +# [dt17_sb7lp
                                                                                                                                  wild7_sb7li]
                                                                                                                          of
                                                                                                                          sat_sb7lr
                                                                                                                          { __DEFAULT ->
                                                                                                                                GHC.IO.Buffer.Buffer [dt14_sb7ll
                                                                                                                                                      dt15_sb7lm
                                                                                                                                                      ds15_sb7ln
                                                                                                                                                      dt16_sb7lo
                                                                                                                                                      sat_sb7lr
                                                                                                                                                      dt18_sb7lq];
                                                                                                                          };
                                                                                                                    };
                                                                                                          } in 
                                                                                                            case
                                                                                                                writeMutVar# [dt_sb7kj
                                                                                                                              sat_sb7ls
                                                                                                                              GHC.Prim.void#]
                                                                                                            of
                                                                                                            s2#1_sb7lt
                                                                                                            { (##) ->
                                                                                                                  $w$j_sb7kE
                                                                                                                      GHC.Prim.void#;
                                                                                                            };
                                                                                                      GHC.Base.Just decoder_sb7lu [Occ=Once!] ->
                                                                                                          case
                                                                                                              decoder_sb7lu
                                                                                                          of
                                                                                                          { GHC.IO.Encoding.Types.BufferCodec ds15_sb7lw [Occ=Once]
                                                                                                                                              ds16_sb7lx [Occ=Once]
                                                                                                                                              _ [Occ=Dead]
                                                                                                                                              _ [Occ=Dead]
                                                                                                                                              ds19_sb7lA [Occ=Once!] ->
                                                                                                                case
                                                                                                                    ds19_sb7lA
                                                                                                                        codec_state_sb7kX
                                                                                                                        GHC.Prim.void#
                                                                                                                of
                                                                                                                { Unit# _ [Occ=Dead] ->
                                                                                                                      let {
                                                                                                                        sat_sb7lE [Occ=Once]
                                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                                                        [LclId] =
                                                                                                                            CCCS GHC.IO.Buffer.Buffer! [dt9_sb7lc
                                                                                                                                                        dt10_sb7ld
                                                                                                                                                        ds14_sb7le
                                                                                                                                                        wild7_sb7li
                                                                                                                                                        0#
                                                                                                                                                        0#];
                                                                                                                      } in 
                                                                                                                        case
                                                                                                                            GHC.IO.Handle.Internals.$wstreamEncode
                                                                                                                                ds15_sb7lw
                                                                                                                                ds16_sb7lx
                                                                                                                                bbuf0_sb7kY
                                                                                                                                sat_sb7lE
                                                                                                                                GHC.Prim.void#
                                                                                                                        of
                                                                                                                        { Unit# ipv9_sb7lH [Occ=Once!] ->
                                                                                                                              case
                                                                                                                                  ipv9_sb7lH
                                                                                                                              of
                                                                                                                              { (,) bbuf1_sb7lJ [Occ=Once]
                                                                                                                                    _ [Occ=Dead] ->
                                                                                                                                    case
                                                                                                                                        writeMutVar# [dt_sb7kj
                                                                                                                                                      bbuf1_sb7lJ
                                                                                                                                                      GHC.Prim.void#]
                                                                                                                                    of
                                                                                                                                    s2#1_sb7lL
                                                                                                                                    { (##) ->
                                                                                                                                          $w$j_sb7kE
                                                                                                                                              GHC.Prim.void#;
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                };
                                                                                                          };
                                                                                                    };
                                                                                                0# ->
                                                                                                    case
                                                                                                        writeMutVar# [dt_sb7kj
                                                                                                                      bbuf0_sb7kY
                                                                                                                      GHC.Prim.void#]
                                                                                                    of
                                                                                                    s2#1_sb7lM
                                                                                                    { (##) ->
                                                                                                          $w$j_sb7kE
                                                                                                              GHC.Prim.void#;
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                          };
                                                                    };
                                                              };
                                                          1# -> $w$j_sb7kE GHC.Prim.void#;
                                                        };
                                                    GHC.IO.Buffer.WriteBuffer ->
                                                        $w$j_sb7kE GHC.Prim.void#;
                                                  };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.Handle.Internals.wantReadableHandle_1
                          GHC.IO.Handle.Text.hGetBuf5 w_sb7k4 sat_sb7lN GHC.Prim.void#;
                1# ->
                    GHC.IO.Handle.Text.$willegalBufferSize
                        w_sb7k4 GHC.IO.Handle.Text.hGetBuf5 wild_sb7k8 GHC.Prim.void#;
              };
          0# -> Unit# [GHC.IO.Handle.Text.hGetBuf3];
        };

GHC.IO.Handle.Text.hGetBuf1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb7lO w1_sb7lP w2_sb7lQ void_0E]
        case w2_sb7lQ of {
          GHC.Types.I# ww1_sb7lT [Occ=Once] ->
              GHC.IO.Handle.Text.$whGetBuf
                  w_sb7lO w1_sb7lP ww1_sb7lT GHC.Prim.void#;
        };

GHC.IO.Handle.Text.hGetBuf
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.Handle.Text.hGetBuf1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

lvl14_rb6WU :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "error"#;

lvl15_rb6WV :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl14_rb6WU;

lvl16_rb6WW :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.$trModule4;

lvl17_rb6WX :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.$trModule2;

lvl18_rb6WY :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "./GHC/IO/Handle/Text.hs"#;

lvl19_rb6WZ :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl18_rb6WY;

lvl20_rb6X0 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [785#];

lvl21_rb6X1 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [17#];

lvl22_rb6X2 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [38#];

lvl23_rb6X3 :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl16_rb6WW
                                           lvl17_rb6WX
                                           lvl19_rb6WZ
                                           lvl20_rb6X0
                                           lvl21_rb6X1
                                           lvl20_rb6X0
                                           lvl22_rb6X2];

lvl24_rb6X4 :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl15_rb6WV
                                                  lvl23_rb6X3
                                                  GHC.Stack.Types.EmptyCallStack];

lvl25_rb6X5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Todo: hPutBuf"#;

lvl26_rb6X6 :: GHC.Types.IO ()
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl25_rb6X5 of sat_sb7lU {
          __DEFAULT -> GHC.Err.error lvl24_rb6X4 sat_sb7lU;
        };

lvl27_rb6X7 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [790#];

lvl28_rb6X8 :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl16_rb6WW
                                           lvl17_rb6WX
                                           lvl19_rb6WZ
                                           lvl27_rb6X7
                                           lvl21_rb6X1
                                           lvl27_rb6X7
                                           lvl22_rb6X2];

lvl29_rb6X9 :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl15_rb6WV
                                                  lvl28_rb6X8
                                                  GHC.Stack.Types.EmptyCallStack];

lvl30_rb6Xa :: GHC.Types.IO GHC.Types.Int
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl25_rb6X5 of sat_sb7lV {
          __DEFAULT -> GHC.Err.error lvl29_rb6X9 sat_sb7lV;
        };

GHC.IO.Handle.Text.$wbufWrite [InlPrag=NOUSERINLINE[0],
                               Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=5,
 Str=<S,1*U><L,1*U(U)><S,U><L,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb7lW w1_sb7lX ww_sb7lY w2_sb7lZ void_0E]
        case w_sb7lW of wild_sb7m1 {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       $dBufferedIO_sb7m3
                                       $dTypeable_sb7m4 [Occ=Once*]
                                       ds_sb7m5 [Occ=Once]
                                       _ [Occ=Dead]
                                       dt_sb7m7
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case ds_sb7m5 of ww1_sb7mi {
                GHC.IO.FD.FD ww2_sb7mj [Occ=Once*] ww3_sb7mk [Occ=Once*] ->
                    case readMutVar# [dt_sb7m7 GHC.Prim.void#] of {
                      Unit# ipv1_sb7mn [Occ=Once!] ->
                          case ipv1_sb7mn of wild1_sb7mo {
                            GHC.IO.Buffer.Buffer dt4_sb7mp
                                                 dt5_sb7mq
                                                 ds10_sb7mr [Occ=Once*]
                                                 dt6_sb7ms
                                                 dt7_sb7mt [Occ=Once*]
                                                 dt8_sb7mu ->
                                let {
                                  v_sb7mv :: GHC.Types.Int
                                  [LclId, Unf=OtherCon []] =
                                      CCCS GHC.Types.I#! [ww_sb7lY];
                                } in 
                                  let-no-escape {
                                    $j_sb7mw [Occ=Once*T[0], Dmd=<L,1*U(U,U)>]
                                      :: (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                                    [LclId[JoinId(0)], Unf=OtherCon []] =
                                        [w1_sb7lX
                                         ww_sb7lY
                                         w2_sb7lZ
                                         wild_sb7m1
                                         $dBufferedIO_sb7m3
                                         $dTypeable_sb7m4
                                         dt_sb7m7
                                         ww1_sb7mi
                                         ww2_sb7mj
                                         ww3_sb7mk
                                         wild1_sb7mo
                                         dt6_sb7ms
                                         dt8_sb7mu
                                         v_sb7mv] \r []
                                            let-no-escape {
                                              $w$j_sb7mx [InlPrag=NOUSERINLINE[0],
                                                          Occ=Once*!T[1],
                                                          Dmd=<L,1*C1(U(U,U))>]
                                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         GHC.Types.Int #)
                                              [LclId[JoinId(1)],
                                               Arity=1,
                                               Str=<S,U>,
                                               Unf=OtherCon []] =
                                                  sat-only [w1_sb7lX
                                                            ww_sb7lY
                                                            w2_sb7lZ
                                                            wild_sb7m1
                                                            $dTypeable_sb7m4
                                                            ww2_sb7mj
                                                            ww3_sb7mk
                                                            dt6_sb7ms
                                                            v_sb7mv] \r [void_0E]
                                                      case <# [ww_sb7lY dt6_sb7ms] of {
                                                        __DEFAULT ->
                                                            case w2_sb7lZ of {
                                                              GHC.Types.False ->
                                                                  case
                                                                      Data.Typeable.Internal.sameTypeRep
                                                                          $dTypeable_sb7m4
                                                                          lvl11_rb6WR
                                                                  of
                                                                  { GHC.Types.False -> lvl30_rb6Xa;
                                                                    GHC.Types.True ->
                                                                        case w1_sb7lX of {
                                                                          GHC.Ptr.Ptr ww5_sb7mE [Occ=Once] ->
                                                                              GHC.IO.FD.$w$cwriteNonBlocking
                                                                                  ww2_sb7mj
                                                                                  ww3_sb7mk
                                                                                  ww5_sb7mE
                                                                                  ww_sb7lY
                                                                                  GHC.Prim.void#;
                                                                        };
                                                                  };
                                                              GHC.Types.True ->
                                                                  case
                                                                      Data.Typeable.Internal.sameTypeRep
                                                                          $dTypeable_sb7m4
                                                                          lvl11_rb6WR
                                                                  of
                                                                  { GHC.Types.False -> lvl26_rb6X6;
                                                                    GHC.Types.True ->
                                                                        case w1_sb7lX of {
                                                                          GHC.Ptr.Ptr ww5_sb7mI [Occ=Once] ->
                                                                              case
                                                                                  GHC.IO.FD.$wfdWrite
                                                                                      ww2_sb7mj
                                                                                      ww3_sb7mk
                                                                                      ww5_sb7mI
                                                                                      ww_sb7lY
                                                                                      GHC.Prim.void#
                                                                              of
                                                                              { Unit# _ [Occ=Dead] ->
                                                                                    Unit# [v_sb7mv];
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                        1# ->
                                                            GHC.IO.Handle.Text.$wbufWrite
                                                                wild_sb7m1
                                                                w1_sb7lX
                                                                ww_sb7lY
                                                                w2_sb7lZ
                                                                GHC.Prim.void#;
                                                      };
                                            } in 
                                              case ># [dt8_sb7mu 0#] of {
                                                __DEFAULT -> $w$j_sb7mx GHC.Prim.void#;
                                                1# ->
                                                    case
                                                        GHC.IO.BufferedIO.flushWriteBuffer
                                                            $dBufferedIO_sb7m3
                                                            ww1_sb7mi
                                                            wild1_sb7mo
                                                            GHC.Prim.void#
                                                    of
                                                    { Unit# ipv3_sb7mP [Occ=Once] ->
                                                          case
                                                              writeMutVar# [dt_sb7m7
                                                                            ipv3_sb7mP
                                                                            GHC.Prim.void#]
                                                          of
                                                          s2#_sb7mQ
                                                          { (##) -> $w$j_sb7mx GHC.Prim.void#;
                                                          };
                                                    };
                                              };
                                  } in 
                                    case <# [ww_sb7lY dt6_sb7ms] of {
                                      __DEFAULT -> $j_sb7mw;
                                      1# ->
                                          case -# [dt6_sb7ms dt8_sb7mu] of sat_sb7mS {
                                            __DEFAULT ->
                                                case <=# [ww_sb7lY sat_sb7mS] of {
                                                  __DEFAULT -> $j_sb7mw;
                                                  1# ->
                                                      case w1_sb7lX of {
                                                        GHC.Ptr.Ptr ds12_sb7mV [Occ=Once] ->
                                                            case int2Word# [ww_sb7lY] of sat_sb7mY {
                                                              __DEFAULT ->
                                                                  case
                                                                      plusAddr# [dt4_sb7mp
                                                                                 dt8_sb7mu]
                                                                  of
                                                                  sat_sb7mX
                                                                  { __DEFAULT ->
                                                                        case
                                                                            __pkg_ccall base-4.11.0.0 [sat_sb7mX
                                                                                                       ds12_sb7mV
                                                                                                       sat_sb7mY
                                                                                                       GHC.Prim.void#]
                                                                        of
                                                                        { Unit# _ [Occ=Dead] ->
                                                                              case
                                                                                  touch# [dt5_sb7mq
                                                                                          GHC.Prim.void#]
                                                                              of
                                                                              s'_sb7n2
                                                                              { (##) ->
                                                                                    case
                                                                                        -# [dt6_sb7ms
                                                                                            dt8_sb7mu]
                                                                                    of
                                                                                    sat_sb7n3
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              ==# [ww_sb7lY
                                                                                                   sat_sb7n3]
                                                                                          of
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    +# [dt8_sb7mu
                                                                                                        ww_sb7lY]
                                                                                                of
                                                                                                sat_sb7n5
                                                                                                { __DEFAULT ->
                                                                                                      let {
                                                                                                        sat_sb7n6 [Occ=Once]
                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                               GHC.Word.Word8
                                                                                                        [LclId] =
                                                                                                            CCCS GHC.IO.Buffer.Buffer! [dt4_sb7mp
                                                                                                                                        dt5_sb7mq
                                                                                                                                        ds10_sb7mr
                                                                                                                                        dt6_sb7ms
                                                                                                                                        dt7_sb7mt
                                                                                                                                        sat_sb7n5];
                                                                                                      } in 
                                                                                                        case
                                                                                                            writeMutVar# [dt_sb7m7
                                                                                                                          sat_sb7n6
                                                                                                                          GHC.Prim.void#]
                                                                                                        of
                                                                                                        s2#_sb7n7
                                                                                                        { (##) ->
                                                                                                              Unit# [v_sb7mv];
                                                                                                        };
                                                                                                };
                                                                                            1# ->
                                                                                                case
                                                                                                    +# [dt8_sb7mu
                                                                                                        ww_sb7lY]
                                                                                                of
                                                                                                sat_sb7n8
                                                                                                { __DEFAULT ->
                                                                                                      let {
                                                                                                        sat_sb7n9 [Occ=Once]
                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                               GHC.Word.Word8
                                                                                                        [LclId] =
                                                                                                            CCCS GHC.IO.Buffer.Buffer! [dt4_sb7mp
                                                                                                                                        dt5_sb7mq
                                                                                                                                        ds10_sb7mr
                                                                                                                                        dt6_sb7ms
                                                                                                                                        dt7_sb7mt
                                                                                                                                        sat_sb7n8];
                                                                                                      } in 
                                                                                                        case
                                                                                                            GHC.IO.BufferedIO.flushWriteBuffer
                                                                                                                $dBufferedIO_sb7m3
                                                                                                                ww1_sb7mi
                                                                                                                sat_sb7n9
                                                                                                                GHC.Prim.void#
                                                                                                        of
                                                                                                        { Unit# ipv3_sb7nc [Occ=Once] ->
                                                                                                              case
                                                                                                                  writeMutVar# [dt_sb7m7
                                                                                                                                ipv3_sb7nc
                                                                                                                                GHC.Prim.void#]
                                                                                                              of
                                                                                                              s2#_sb7nd
                                                                                                              { (##) ->
                                                                                                                    Unit# [v_sb7mv];
                                                                                                              };
                                                                                                        };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                          };
                    };
              };
        };

GHC.IO.Handle.Text.hPutBuf4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hPutBuf"#;

GHC.IO.Handle.Text.hPutBuf3 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hPutBuf4;

GHC.IO.Handle.Text.$whPutBuf' [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=5,
 Str=<L,U><L,U(U)><S,1*U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb7ne w1_sb7nf ww_sb7ng w2_sb7nh void_0E]
        case ww_sb7ng of wild_sb7nj {
          __DEFAULT ->
              case <# [wild_sb7nj 0#] of {
                __DEFAULT ->
                    let {
                      act_sb7nl [Occ=Once*, Dmd=<L,C(C1(U(U,U)))>]
                        :: GHC.IO.Handle.Types.Handle__
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                      [LclId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
                          [w1_sb7nf w2_sb7nh wild_sb7nj] \r [h__sb7nm void_0E]
                              case h__sb7nm of wild1_sb7no {
                                GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                             $dBufferedIO_sb7nq [Occ=Once]
                                                             _ [Occ=Dead]
                                                             ds_sb7ns [Occ=Once]
                                                             _ [Occ=Dead]
                                                             dt_sb7nu
                                                             ds2_sb7nv [Occ=Once!]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                    case
                                        GHC.IO.Handle.Text.$wbufWrite
                                            wild1_sb7no w1_sb7nf wild_sb7nj w2_sb7nh GHC.Prim.void#
                                    of
                                    ds9_sb7nF
                                    { Unit# ipv1_sb7nH [Occ=Once*] ->
                                          case ds2_sb7nv of {
                                            __DEFAULT ->
                                                case readMutVar# [dt_sb7nu GHC.Prim.void#] of {
                                                  Unit# ipv3_sb7nL [Occ=Once!] ->
                                                      case ipv3_sb7nL of {
                                                        GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                             _ [Occ=Dead]
                                                                             ds11_sb7nP [Occ=Once!]
                                                                             _ [Occ=Dead]
                                                                             _ [Occ=Dead]
                                                                             _ [Occ=Dead] ->
                                                            case ds11_sb7nP of {
                                                              GHC.IO.Buffer.ReadBuffer ->
                                                                  Unit# [ipv1_sb7nH];
                                                              GHC.IO.Buffer.WriteBuffer ->
                                                                  case
                                                                      readMutVar# [dt_sb7nu
                                                                                   GHC.Prim.void#]
                                                                  of
                                                                  { Unit# ipv5_sb7nW [Occ=Once!] ->
                                                                        case
                                                                            ipv5_sb7nW
                                                                        of
                                                                        wild5_sb7nX
                                                                        { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                               _ [Occ=Dead]
                                                                                               _ [Occ=Dead]
                                                                                               _ [Occ=Dead]
                                                                                               dt12_sb7o2 [Occ=Once]
                                                                                               dt13_sb7o3 [Occ=Once] ->
                                                                              case
                                                                                  ==# [dt12_sb7o2
                                                                                       dt13_sb7o3]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        GHC.IO.BufferedIO.flushWriteBuffer
                                                                                            $dBufferedIO_sb7nq
                                                                                            ds_sb7ns
                                                                                            wild5_sb7nX
                                                                                            GHC.Prim.void#
                                                                                    of
                                                                                    { Unit# ipv7_sb7o7 [Occ=Once] ->
                                                                                          case
                                                                                              writeMutVar# [dt_sb7nu
                                                                                                            ipv7_sb7o7
                                                                                                            GHC.Prim.void#]
                                                                                          of
                                                                                          s2#_sb7o8
                                                                                          { (##) ->
                                                                                                Unit# [ipv1_sb7nH];
                                                                                          };
                                                                                    };
                                                                                1# ->
                                                                                    Unit# [ipv1_sb7nH];
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                            GHC.IO.Handle.Types.BlockBuffering _ [Occ=Dead] ->
                                                Unit# [ipv1_sb7nH];
                                          };
                                    };
                              };
                    } in 
                      case w_sb7ne of wild1_sb7oa {
                        GHC.IO.Handle.Types.FileHandle _ [Occ=Dead] dt_sb7oc [Occ=Once] ->
                            GHC.IO.Handle.Internals.$wwantWritableHandle'
                                GHC.IO.Handle.Text.hPutBuf3
                                wild1_sb7oa
                                dt_sb7oc
                                act_sb7nl
                                GHC.Prim.void#;
                        GHC.IO.Handle.Types.DuplexHandle _ [Occ=Dead]
                                                         _ [Occ=Dead]
                                                         dt1_sb7of [Occ=Once] ->
                            GHC.IO.Handle.Internals.$wwantWritableHandle'
                                GHC.IO.Handle.Text.hPutBuf3
                                wild1_sb7oa
                                dt1_sb7of
                                act_sb7nl
                                GHC.Prim.void#;
                      };
                1# ->
                    GHC.IO.Handle.Text.$willegalBufferSize
                        w_sb7ne GHC.IO.Handle.Text.hPutBuf3 wild_sb7nj GHC.Prim.void#;
              };
          0# -> Unit# [GHC.IO.Handle.Text.hGetBuf3];
        };

GHC.IO.Handle.Text.hPutBuf2 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=5,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb7og w1_sb7oh w2_sb7oi w3_sb7oj void_0E]
        case w2_sb7oi of {
          GHC.Types.I# ww1_sb7om [Occ=Once] ->
              GHC.IO.Handle.Text.$whPutBuf'
                  w_sb7og w1_sb7oh ww1_sb7om w3_sb7oj GHC.Prim.void#;
        };

GHC.IO.Handle.Text.hPutBufNonBlocking1
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [h_sb7on ptr_sb7oo count_sb7op void_0E]
        case count_sb7op of {
          GHC.Types.I# ww1_sb7os [Occ=Once] ->
              GHC.IO.Handle.Text.$whPutBuf'
                  h_sb7on ptr_sb7oo ww1_sb7os GHC.Types.False GHC.Prim.void#;
        };

GHC.IO.Handle.Text.hPutBufNonBlocking
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.Handle.Text.hPutBufNonBlocking1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Handle.Text.hPutBuf1
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [h_sb7ot ptr_sb7ou count_sb7ov void_0E]
        case count_sb7ov of {
          GHC.Types.I# ww1_sb7oy [Occ=Once] ->
              case
                  GHC.IO.Handle.Text.$whPutBuf'
                      h_sb7ot ptr_sb7ou ww1_sb7oy GHC.Types.True GHC.Prim.void#
              of
              { Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
              };
        };

GHC.IO.Handle.Text.hPutBuf
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.Handle.Text.hPutBuf1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

lvl31_rb6Xb :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "\n"#;

lvl32_rb6Xc :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl31_rb6Xb;

GHC.IO.Handle.Text.$wwriteBlocks [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.IO.Handle.Types.Newline
     -> GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.Prim.Int#
     -> GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=9,
 Str=<S,U><L,U><L,1*U><L,U><L,U><L,U><L,U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sb7oC
           w1_sb7oD
           w2_sb7oE
           w3_sb7oF
           ww_sb7oG
           ww1_sb7oH
           ww2_sb7oI
           w4_sb7oJ
           void_0E]
        let {
          sat_sb7r5 [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
          [LclId] =
              [w2_sb7oE] \s []
                  case w2_sb7oE of {
                    GHC.Types.False -> [] [];
                    GHC.Types.True -> lvl32_rb6Xc;
                  };
        } in 
          let-no-escape {
            exit_sb7oL [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
              :: GHC.Prim.Int#
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
            [LclId[JoinId(2)], Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
                sat-only [w_sb7oC ww_sb7oG ww1_sb7oH ww2_sb7oI] \r [ww3_sb7oM
                                                                    void_0E]
                    let {
                      raw_sb7oO [Occ=OnceL]
                        :: GHC.IO.Buffer.RawBuffer GHC.IO.Buffer.CharBufElem
                      [LclId, Unf=OtherCon []] =
                          CCCS GHC.ForeignPtr.ForeignPtr! [ww_sb7oG ww1_sb7oH]; } in
                    let {
                      sat_sb7pr [Occ=Once]
                        :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO ()
                      [LclId] =
                          [ww_sb7oG ww1_sb7oH ww2_sb7oI ww3_sb7oM raw_sb7oO] \r [h__sb7oP
                                                                                 void_0E]
                              case h__sb7oP of wild_sb7oR {
                                GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             dt2_sb7p0 [Occ=Once]
                                                             dt3_sb7p1
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                    case
                                        GHC.IO.Handle.Internals.$wwriteCharBuffer
                                            wild_sb7oR
                                            ww_sb7oG
                                            ww1_sb7oH
                                            GHC.IO.Buffer.WriteBuffer
                                            ww2_sb7oI
                                            0#
                                            ww3_sb7oM
                                            GHC.Prim.void#
                                    of
                                    { Unit# _ [Occ=Dead] ->
                                          case readMutVar# [dt2_sb7p0 GHC.Prim.void#] of {
                                            Unit# ipv3_sb7pd [Occ=Once!] ->
                                                case ipv3_sb7pd of {
                                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                       _ [Occ=Dead]
                                                                       _ [Occ=Dead]
                                                                       dt6_sb7pi [Occ=Once]
                                                                       _ [Occ=Dead]
                                                                       _ [Occ=Dead] ->
                                                      case ==# [ww2_sb7oI dt6_sb7pi] of {
                                                        __DEFAULT -> Unit# [GHC.Tuple.()];
                                                        1# ->
                                                            case
                                                                readMutVar# [dt3_sb7p1
                                                                             GHC.Prim.void#]
                                                            of
                                                            { Unit# ipv5_sb7po [Occ=Once] ->
                                                                  let {
                                                                    sat_sb7pp [Occ=Once]
                                                                      :: GHC.IO.Handle.Types.BufferList
                                                                           GHC.IO.Buffer.CharBufElem
                                                                    [LclId] =
                                                                        CCCS GHC.IO.Handle.Types.BufferListCons! [raw_sb7oO
                                                                                                                  ipv5_sb7po];
                                                                  } in 
                                                                    case
                                                                        writeMutVar# [dt3_sb7p1
                                                                                      sat_sb7pp
                                                                                      GHC.Prim.void#]
                                                                    of
                                                                    s2#_sb7pq
                                                                    { (##) -> Unit# [GHC.Tuple.()];
                                                                    };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.Handle.Internals.wantWritableHandle1
                          lvl2_rb6WE w_sb7oC sat_sb7pr GHC.Prim.void#;
          } in 
            let-no-escape {
              $wshoveString_sb7ps [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[4]]
                :: GHC.Prim.Int#
                   -> [GHC.Types.Char]
                   -> [GHC.Types.Char]
                   -> GHC.Prim.State# GHC.Prim.RealWorld
                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
              [LclId[JoinId(4)],
               Arity=4,
               Str=<S,U><S,1*U><L,1*U><S,U>,
               Unf=OtherCon []] =
                  sat-only [w_sb7oC
                            w1_sb7oD
                            w3_sb7oF
                            ww_sb7oG
                            ww1_sb7oH
                            ww2_sb7oI
                            exit_sb7oL
                            $wshoveString_sb7ps] \r [ww3_sb7pt w6_sb7pu w7_sb7pv void_0E]
                      case w6_sb7pu of wild_sb7px {
                        [] ->
                            case w7_sb7pv of wild1_sb7py {
                              [] -> exit_sb7oL ww3_sb7pt GHC.Prim.void#;
                              : _ [Occ=Dead] _ [Occ=Dead] ->
                                  $wshoveString_sb7ps
                                      ww3_sb7pt wild1_sb7py GHC.Types.[] GHC.Prim.void#;
                            };
                        : c_sb7pB [Occ=Once!] cs_sb7pC [Occ=Once*] ->
                            case +# [ww3_sb7pt 1#] of sat_sb7pD {
                              __DEFAULT ->
                                  case >=# [sat_sb7pD ww2_sb7oI] of {
                                    __DEFAULT ->
                                        case c_sb7pB of {
                                          GHC.Types.C# x_sb7pG [Occ=Once!] ->
                                              case x_sb7pG of wild2_sb7pH {
                                                __DEFAULT ->
                                                    case
                                                        writeWideCharOffAddr# [ww_sb7oG
                                                                               ww3_sb7pt
                                                                               wild2_sb7pH
                                                                               GHC.Prim.void#]
                                                    of
                                                    s2_sb7pI
                                                    { (##) ->
                                                          case
                                                              touch# [ww1_sb7oH GHC.Prim.void#]
                                                          of
                                                          s'_sb7pJ
                                                          { (##) ->
                                                                case
                                                                    +# [ww3_sb7pt 1#]
                                                                of
                                                                sat_sb7pK
                                                                { __DEFAULT ->
                                                                      $wshoveString_sb7ps
                                                                          sat_sb7pK
                                                                          cs_sb7pC
                                                                          w7_sb7pv
                                                                          GHC.Prim.void#;
                                                                };
                                                          };
                                                    };
                                                '\n'# ->
                                                    let-no-escape {
                                                      $w$j_sb7pL [InlPrag=NOUSERINLINE[0],
                                                                  Occ=Once*!T[2],
                                                                  Dmd=<C(C(S)),1*C1(C1(U(U,U)))>]
                                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                                           -> GHC.Prim.Int#
                                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                 () #)
                                                      [LclId[JoinId(2)],
                                                       Arity=2,
                                                       Str=<S,U><L,U>,
                                                       Unf=OtherCon []] =
                                                          sat-only [w_sb7oC
                                                                    w1_sb7oD
                                                                    ww_sb7oG
                                                                    ww1_sb7oH
                                                                    ww2_sb7oI
                                                                    $wshoveString_sb7ps
                                                                    w7_sb7pv
                                                                    cs_sb7pC] \r [void_0E ww4_sb7pN]
                                                              case w1_sb7oD of {
                                                                GHC.Types.False ->
                                                                    $wshoveString_sb7ps
                                                                        ww4_sb7pN
                                                                        cs_sb7pC
                                                                        w7_sb7pv
                                                                        GHC.Prim.void#;
                                                                GHC.Types.True ->
                                                                    let {
                                                                      sat_sb7qq [Occ=Once]
                                                                        :: GHC.IO.Handle.Types.Handle__
                                                                           -> GHC.Types.IO ()
                                                                      [LclId] =
                                                                          [ww_sb7oG
                                                                           ww1_sb7oH
                                                                           ww2_sb7oI
                                                                           ww4_sb7pN] \r [h__sb7pP
                                                                                          void_0E]
                                                                              case
                                                                                  h__sb7pP
                                                                              of
                                                                              wild4_sb7pR
                                                                              { GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                                                                             $dBufferedIO_sb7pT [Occ=Once]
                                                                                                             _ [Occ=Dead]
                                                                                                             ds_sb7pV [Occ=Once]
                                                                                                             _ [Occ=Dead]
                                                                                                             dt_sb7pX
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead] ->
                                                                                    case
                                                                                        GHC.IO.Handle.Internals.$wwriteCharBuffer
                                                                                            wild4_sb7pR
                                                                                            ww_sb7oG
                                                                                            ww1_sb7oH
                                                                                            GHC.IO.Buffer.WriteBuffer
                                                                                            ww2_sb7oI
                                                                                            0#
                                                                                            ww4_sb7pN
                                                                                            GHC.Prim.void#
                                                                                    of
                                                                                    { Unit# _ [Occ=Dead] ->
                                                                                          case
                                                                                              readMutVar# [dt_sb7pX
                                                                                                           GHC.Prim.void#]
                                                                                          of
                                                                                          { Unit# ipv3_sb7qd [Occ=Once!] ->
                                                                                                case
                                                                                                    ipv3_sb7qd
                                                                                                of
                                                                                                wild5_sb7qe
                                                                                                { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       dt7_sb7qj [Occ=Once]
                                                                                                                       dt8_sb7qk [Occ=Once] ->
                                                                                                      case
                                                                                                          ==# [dt7_sb7qj
                                                                                                               dt8_sb7qk]
                                                                                                      of
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                GHC.IO.BufferedIO.flushWriteBuffer
                                                                                                                    $dBufferedIO_sb7pT
                                                                                                                    ds_sb7pV
                                                                                                                    wild5_sb7qe
                                                                                                                    GHC.Prim.void#
                                                                                                            of
                                                                                                            { Unit# ipv5_sb7qo [Occ=Once] ->
                                                                                                                  case
                                                                                                                      writeMutVar# [dt_sb7pX
                                                                                                                                    ipv5_sb7qo
                                                                                                                                    GHC.Prim.void#]
                                                                                                                  of
                                                                                                                  s2#_sb7qp
                                                                                                                  { (##) ->
                                                                                                                        Unit# [GHC.Tuple.()];
                                                                                                                  };
                                                                                                            };
                                                                                                        1# ->
                                                                                                            Unit# [GHC.Tuple.()];
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                    } in 
                                                                      case
                                                                          GHC.IO.Handle.Internals.wantWritableHandle1
                                                                              lvl2_rb6WE
                                                                              w_sb7oC
                                                                              sat_sb7qq
                                                                              GHC.Prim.void#
                                                                      of
                                                                      { Unit# _ [Occ=Dead] ->
                                                                            $wshoveString_sb7ps
                                                                                0#
                                                                                cs_sb7pC
                                                                                w7_sb7pv
                                                                                GHC.Prim.void#;
                                                                      };
                                                              };
                                                    } in 
                                                      case w3_sb7oF of {
                                                        GHC.IO.Handle.Types.LF ->
                                                            case
                                                                writeWideCharOffAddr# [ww_sb7oG
                                                                                       ww3_sb7pt
                                                                                       '\n'#
                                                                                       GHC.Prim.void#]
                                                            of
                                                            s2_sb7qv
                                                            { (##) ->
                                                                  case
                                                                      touch# [ww1_sb7oH
                                                                              GHC.Prim.void#]
                                                                  of
                                                                  s'_sb7qw
                                                                  { (##) ->
                                                                        case
                                                                            +# [ww3_sb7pt 1#]
                                                                        of
                                                                        sat_sb7qx
                                                                        { __DEFAULT ->
                                                                              $w$j_sb7pL
                                                                                  GHC.Prim.void#
                                                                                  sat_sb7qx;
                                                                        };
                                                                  };
                                                            };
                                                        GHC.IO.Handle.Types.CRLF ->
                                                            case
                                                                writeWideCharOffAddr# [ww_sb7oG
                                                                                       ww3_sb7pt
                                                                                       '\r'#
                                                                                       GHC.Prim.void#]
                                                            of
                                                            s2_sb7qy
                                                            { (##) ->
                                                                  case
                                                                      touch# [ww1_sb7oH
                                                                              GHC.Prim.void#]
                                                                  of
                                                                  s'_sb7qz
                                                                  { (##) ->
                                                                        case
                                                                            +# [ww3_sb7pt 1#]
                                                                        of
                                                                        ipv1_sb7qA [Dmd=<S,U>]
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  writeWideCharOffAddr# [ww_sb7oG
                                                                                                         ipv1_sb7qA
                                                                                                         '\n'#
                                                                                                         GHC.Prim.void#]
                                                                              of
                                                                              s1_sb7qB
                                                                              { (##) ->
                                                                                    case
                                                                                        touch# [ww1_sb7oH
                                                                                                GHC.Prim.void#]
                                                                                    of
                                                                                    s'1_sb7qC
                                                                                    { (##) ->
                                                                                          case
                                                                                              +# [ipv1_sb7qA
                                                                                                  1#]
                                                                                          of
                                                                                          sat_sb7qD
                                                                                          { __DEFAULT ->
                                                                                                $w$j_sb7pL
                                                                                                    GHC.Prim.void#
                                                                                                    sat_sb7qD;
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                              };
                                        };
                                    1# ->
                                        let {
                                          sat_sb7r0 [Occ=Once]
                                            :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO ()
                                          [LclId] =
                                              [ww_sb7oG ww1_sb7oH ww2_sb7oI ww3_sb7pt] \r [h__sb7qE
                                                                                           void_0E]
                                                  case h__sb7qE of wild1_sb7qG {
                                                    GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead] ->
                                                        case
                                                            GHC.IO.Handle.Internals.$wwriteCharBuffer
                                                                wild1_sb7qG
                                                                ww_sb7oG
                                                                ww1_sb7oH
                                                                GHC.IO.Buffer.WriteBuffer
                                                                ww2_sb7oI
                                                                0#
                                                                ww3_sb7pt
                                                                GHC.Prim.void#
                                                        of
                                                        { Unit# _ [Occ=Dead] ->
                                                              Unit# [GHC.Tuple.()];
                                                        };
                                                  };
                                        } in 
                                          case
                                              GHC.IO.Handle.Internals.wantWritableHandle1
                                                  lvl2_rb6WE w_sb7oC sat_sb7r0 GHC.Prim.void#
                                          of
                                          { Unit# _ [Occ=Dead] ->
                                                $wshoveString_sb7ps
                                                    0# wild_sb7px w7_sb7pv GHC.Prim.void#;
                                          };
                                  };
                            };
                      };
            } in  $wshoveString_sb7ps 0# w4_sb7oJ sat_sb7r5 GHC.Prim.void#;

lvl33_rb6Xd :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "no buffer!"#;

GHC.IO.Handle.Text.hPutStr4 :: GHC.IO.Buffer.CharBuffer
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl33_rb6Xd of sat_sb7r6 {
          __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_sb7r6;
        };

GHC.IO.Handle.Text.hPutStr3
  :: (GHC.IO.Handle.Types.BufferMode, GHC.IO.Buffer.CharBuffer)
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE (,)! [GHC.IO.Handle.Types.NoBuffering
                        GHC.IO.Handle.Text.hPutStr4];

GHC.IO.Handle.Text.hPutStr2
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           ((GHC.IO.Handle.Types.BufferMode, GHC.IO.Buffer.CharBuffer),
            GHC.IO.Handle.Types.Newline) #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [h__sb7r7 void_0E]
        case h__sb7r7 of {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       ds2_sb7rg [Occ=Once!]
                                       _ [Occ=Dead]
                                       dt2_sb7ri [Occ=Once]
                                       dt3_sb7rj
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       ds7_sb7ro [Occ=Once*]
                                       _ [Occ=Dead] ->
              case ds2_sb7rg of wild1_sb7rq {
                __DEFAULT ->
                    case readMutVar# [dt3_sb7rj GHC.Prim.void#] of {
                      Unit# ipv1_sb7rt [Occ=Once!] ->
                          case readMutVar# [dt2_sb7ri GHC.Prim.void#] of {
                            Unit# ipv3_sb7rw [Occ=Once*!] ->
                                case ipv1_sb7rt of {
                                  GHC.IO.Handle.Types.BufferListNil ->
                                      case ipv3_sb7rw of {
                                        GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             dt6_sb7rC
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                            case *# [dt6_sb7rC 4#] of x1_sb7rF [Dmd=<S,U>] {
                                              __DEFAULT ->
                                                  case <# [x1_sb7rF 0#] of {
                                                    __DEFAULT ->
                                                        case
                                                            newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                                        GHC.Prim.void#]
                                                        of
                                                        { Unit# ipv5_sb7rJ [Occ=Once] ->
                                                              case
                                                                  newPinnedByteArray# [x1_sb7rF
                                                                                       GHC.Prim.void#]
                                                              of
                                                              { Unit# ipv7_sb7rM ->
                                                                    let {
                                                                      sat_sb7rO [Occ=Once]
                                                                        :: GHC.ForeignPtr.ForeignPtrContents
                                                                      [LclId] =
                                                                          CCCS GHC.ForeignPtr.MallocPtr! [ipv7_sb7rM
                                                                                                          ipv5_sb7rJ];
                                                                    } in 
                                                                      case
                                                                          byteArrayContents# [ipv7_sb7rM]
                                                                      of
                                                                      sat_sb7rN
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_sb7rP [Occ=Once]
                                                                                :: GHC.IO.Buffer.CharBuffer
                                                                              [LclId] =
                                                                                  CCCS GHC.IO.Buffer.Buffer! [sat_sb7rN
                                                                                                              sat_sb7rO
                                                                                                              GHC.IO.Buffer.WriteBuffer
                                                                                                              dt6_sb7rC
                                                                                                              0#
                                                                                                              0#]; } in
                                                                            let {
                                                                              sat_sb7rQ [Occ=Once]
                                                                                :: (GHC.IO.Handle.Types.BufferMode,
                                                                                    GHC.IO.Buffer.CharBuffer)
                                                                              [LclId] =
                                                                                  CCCS (,)! [wild1_sb7rq
                                                                                             sat_sb7rP]; } in
                                                                            let {
                                                                              sat_sb7rR [Occ=Once]
                                                                                :: ((GHC.IO.Handle.Types.BufferMode,
                                                                                     GHC.IO.Buffer.CharBuffer),
                                                                                    GHC.IO.Handle.Types.Newline)
                                                                              [LclId] =
                                                                                  CCCS (,)! [sat_sb7rQ
                                                                                             ds7_sb7ro];
                                                                            } in  Unit# [sat_sb7rR];
                                                                      };
                                                              };
                                                        };
                                                    1# -> GHC.ForeignPtr.mallocForeignPtrBytes2;
                                                  };
                                            };
                                      };
                                  GHC.IO.Handle.Types.BufferListCons b_sb7rT [Occ=Once!]
                                                                     rest_sb7rU [Occ=Once] ->
                                      case
                                          writeMutVar# [dt3_sb7rj rest_sb7rU GHC.Prim.void#]
                                      of
                                      s2#_sb7rV
                                      { (##) ->
                                            let {
                                              sat_sb7s6 [Occ=Once]
                                                :: GHC.IO.Buffer.Buffer GHC.IO.Buffer.CharBufElem
                                              [LclId] =
                                                  [ipv3_sb7rw b_sb7rT] \u []
                                                      case b_sb7rT of {
                                                        GHC.ForeignPtr.ForeignPtr dt5_sb7rX [Occ=Once]
                                                                                  dt6_sb7rY [Occ=Once] ->
                                                            case ipv3_sb7rw of {
                                                              GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                   _ [Occ=Dead]
                                                                                   _ [Occ=Dead]
                                                                                   dt9_sb7s3 [Occ=Once]
                                                                                   _ [Occ=Dead]
                                                                                   _ [Occ=Dead] ->
                                                                  GHC.IO.Buffer.Buffer [dt5_sb7rX
                                                                                        dt6_sb7rY
                                                                                        GHC.IO.Buffer.WriteBuffer
                                                                                        dt9_sb7s3
                                                                                        0#
                                                                                        0#];
                                                            };
                                                      }; } in
                                            let {
                                              sat_sb7s7 [Occ=Once]
                                                :: (GHC.IO.Handle.Types.BufferMode,
                                                    GHC.IO.Buffer.CharBuffer)
                                              [LclId] =
                                                  CCCS (,)! [wild1_sb7rq sat_sb7s6]; } in
                                            let {
                                              sat_sb7s8 [Occ=Once]
                                                :: ((GHC.IO.Handle.Types.BufferMode,
                                                     GHC.IO.Buffer.CharBuffer),
                                                    GHC.IO.Handle.Types.Newline)
                                              [LclId] =
                                                  CCCS (,)! [sat_sb7s7 ds7_sb7ro];
                                            } in  Unit# [sat_sb7s8];
                                      };
                                };
                          };
                    };
                GHC.IO.Handle.Types.NoBuffering ->
                    let {
                      sat_sb7s9 [Occ=Once]
                        :: ((GHC.IO.Handle.Types.BufferMode, GHC.IO.Buffer.CharBuffer),
                            GHC.IO.Handle.Types.Newline)
                      [LclId] =
                          CCCS (,)! [GHC.IO.Handle.Text.hPutStr3 ds7_sb7ro];
                    } in  Unit# [sat_sb7s9];
              };
        };

GHC.IO.Handle.Text.hPutStr6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hPutStr"#;

GHC.IO.Handle.Text.hPutStr5 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hPutStr6;

GHC.IO.Handle.Text.hPutStr1
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Base.String
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=4, Str=<S,U><L,1*U><L,1*U><S,U>, Unf=OtherCon []] =
    [] \r [handle_sb7sa str_sb7sb add_nl_sb7sc void_0E]
        let-no-escape {
          $w$j_sb7se [InlPrag=NOUSERINLINE[0],
                      Occ=Once*!T[4],
                      Dmd=<L,1*C1(C1(C1(C1(U(U,U)))))>]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> GHC.IO.Handle.Types.BufferMode
               -> GHC.IO.Buffer.CharBuffer
               -> GHC.IO.Handle.Types.Newline
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId[JoinId(4)],
           Arity=4,
           Str=<S,U><S,1*U><L,1*U(U,U,A,U,A,A)><L,U>,
           Unf=OtherCon []] =
              sat-only [handle_sb7sa str_sb7sb add_nl_sb7sc] \r [void_0E
                                                                 ww_sb7sg
                                                                 ww1_sb7sh
                                                                 ww2_sb7si]
                  case ww_sb7sg of {
                    GHC.IO.Handle.Types.NoBuffering ->
                        case
                            GHC.IO.Handle.Text.hPutStr7 handle_sb7sa str_sb7sb GHC.Prim.void#
                        of
                        { Unit# _ [Occ=Dead] ->
                              case add_nl_sb7sc of {
                                GHC.Types.False -> Unit# [GHC.Tuple.()];
                                GHC.Types.True ->
                                    GHC.IO.Handle.Text.$whPutChar handle_sb7sa '\n'# GHC.Prim.void#;
                              };
                        };
                    GHC.IO.Handle.Types.LineBuffering ->
                        case ww1_sb7sh of {
                          GHC.IO.Buffer.Buffer ww4_sb7sp [Occ=Once]
                                               ww5_sb7sq [Occ=Once]
                                               _ [Occ=Dead]
                                               ww7_sb7ss [Occ=Once]
                                               _ [Occ=Dead]
                                               _ [Occ=Dead] ->
                              GHC.IO.Handle.Text.$wwriteBlocks
                                  handle_sb7sa
                                  GHC.Types.True
                                  add_nl_sb7sc
                                  ww2_sb7si
                                  ww4_sb7sp
                                  ww5_sb7sq
                                  ww7_sb7ss
                                  str_sb7sb
                                  GHC.Prim.void#;
                        };
                    GHC.IO.Handle.Types.BlockBuffering _ [Occ=Dead] ->
                        case ww1_sb7sh of {
                          GHC.IO.Buffer.Buffer ww4_sb7sx [Occ=Once]
                                               ww5_sb7sy [Occ=Once]
                                               _ [Occ=Dead]
                                               ww7_sb7sA [Occ=Once]
                                               _ [Occ=Dead]
                                               _ [Occ=Dead] ->
                              GHC.IO.Handle.Text.$wwriteBlocks
                                  handle_sb7sa
                                  GHC.Types.False
                                  add_nl_sb7sc
                                  ww2_sb7si
                                  ww4_sb7sx
                                  ww5_sb7sy
                                  ww7_sb7sA
                                  str_sb7sb
                                  GHC.Prim.void#;
                        };
                  };
        } in 
          case handle_sb7sa of wild_sb7sD {
            GHC.IO.Handle.Types.FileHandle _ [Occ=Dead] dt_sb7sF [Occ=Once] ->
                case
                    GHC.IO.Handle.Internals.$wwantWritableHandle'
                        GHC.IO.Handle.Text.hPutStr5
                        wild_sb7sD
                        dt_sb7sF
                        GHC.IO.Handle.Text.hPutStr2
                        GHC.Prim.void#
                of
                { Unit# ipv1_sb7sI [Occ=Once!] ->
                      case ipv1_sb7sI of {
                        (,) ww1_sb7sK [Occ=Once!] ww2_sb7sL [Occ=Once] ->
                            case ww1_sb7sK of {
                              (,) ww4_sb7sN [Occ=Once] ww5_sb7sO [Occ=Once] ->
                                  $w$j_sb7se GHC.Prim.void# ww4_sb7sN ww5_sb7sO ww2_sb7sL;
                            };
                      };
                };
            GHC.IO.Handle.Types.DuplexHandle _ [Occ=Dead]
                                             _ [Occ=Dead]
                                             dt1_sb7sR [Occ=Once] ->
                case
                    GHC.IO.Handle.Internals.$wwantWritableHandle'
                        GHC.IO.Handle.Text.hPutStr5
                        wild_sb7sD
                        dt1_sb7sR
                        GHC.IO.Handle.Text.hPutStr2
                        GHC.Prim.void#
                of
                { Unit# ipv1_sb7sU [Occ=Once!] ->
                      case ipv1_sb7sU of {
                        (,) ww1_sb7sW [Occ=Once!] ww2_sb7sX [Occ=Once] ->
                            case ww1_sb7sW of {
                              (,) ww4_sb7sZ [Occ=Once] ww5_sb7t0 [Occ=Once] ->
                                  $w$j_sb7se GHC.Prim.void# ww4_sb7sZ ww5_sb7t0 ww2_sb7sX;
                            };
                      };
                };
          };

GHC.IO.Handle.Text.hPutStr' [InlPrag=NOINLINE]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Base.String -> GHC.Types.Bool -> GHC.Types.IO ()
[GblId, Arity=4, Str=<S,U><L,1*U><L,1*U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.Handle.Text.hPutStr1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Handle.Text.hPutStr
  :: GHC.IO.Handle.Types.Handle -> GHC.Base.String -> GHC.Types.IO ()
[GblId, Arity=3, Str=<L,U><L,U>, Unf=OtherCon []] =
    [] \r [handle_sb7t1 str_sb7t2 void_0E]
        GHC.IO.Handle.Text.hPutStr'
            handle_sb7t1 str_sb7t2 GHC.Types.False GHC.Prim.void#;

GHC.IO.Handle.Text.hPutStrLn
  :: GHC.IO.Handle.Types.Handle -> GHC.Base.String -> GHC.Types.IO ()
[GblId, Arity=3, Str=<L,U><L,U>, Unf=OtherCon []] =
    [] \r [handle_sb7t3 str_sb7t4 void_0E]
        GHC.IO.Handle.Text.hPutStr'
            handle_sb7t3 str_sb7t4 GHC.Types.True GHC.Prim.void#;

GHC.IO.Handle.Text.hWaitForInput3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hWaitForInput"#;

GHC.IO.Handle.Text.hWaitForInput2 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.IO.Handle.Text.hWaitForInput3;

GHC.IO.Handle.Text.hWaitForInput1
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId, Arity=3, Str=<S,1*U><L,U(U)><S,U>, Unf=OtherCon []] =
    [] \r [h_sb7t5 msecs_sb7t6 void_0E]
        let {
          lvl34_sb7t8 [Occ=OnceL!] :: GHC.Types.Bool
          [LclId] =
              [msecs_sb7t6] \u []
                  case msecs_sb7t6 of {
                    GHC.Types.I# x_sb7ta [Occ=Once] ->
                        case <# [x_sb7ta 0#] of sat_sb7tb {
                          __DEFAULT -> tagToEnum# [sat_sb7tb];
                        };
                  }; } in
        let {
          sat_sb7v9 [Occ=Once]
            :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Bool
          [LclId] =
              [msecs_sb7t6 lvl34_sb7t8] \r [handle__sb7tc void_0E]
                  case handle__sb7tc of wild_sb7te {
                    GHC.IO.Handle.Types.Handle__ $dIODevice_sb7tf [Occ=Once]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 ds_sb7ti [Occ=Once]
                                                 _ [Occ=Dead]
                                                 dt_sb7tk
                                                 _ [Occ=Dead]
                                                 dt1_sb7tm [Occ=Once*]
                                                 dt2_sb7tn
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 ds4_sb7tq [Occ=Once!]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead] ->
                        case readMutVar# [dt2_sb7tn GHC.Prim.void#] of {
                          Unit# ipv1_sb7tx [Occ=Once!] ->
                              case ipv1_sb7tx of wild1_sb7ty {
                                GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead]
                                                     dt7_sb7tD [Occ=Once]
                                                     dt8_sb7tE [Occ=Once] ->
                                    case ==# [dt7_sb7tD dt8_sb7tE] of {
                                      __DEFAULT -> Unit# [GHC.Types.True];
                                      1# ->
                                          case lvl34_sb7t8 of {
                                            GHC.Types.False ->
                                                case readMutVar# [dt_sb7tk GHC.Prim.void#] of {
                                                  Unit# ipv3_sb7tJ ->
                                                      let-no-escape {
                                                        $w$j_sb7tK [InlPrag=NOUSERINLINE[0],
                                                                    Occ=Once*!T[7],
                                                                    Dmd=<L,1*C1(C1(C1(C1(C1(C1(C1(U(U,U))))))))>]
                                                          :: GHC.Prim.State# GHC.Prim.RealWorld
                                                             -> GHC.Prim.Addr#
                                                             -> GHC.ForeignPtr.ForeignPtrContents
                                                             -> GHC.IO.Buffer.BufferState
                                                             -> GHC.Prim.Int#
                                                             -> GHC.Prim.Int#
                                                             -> GHC.Prim.Int#
                                                             -> (# GHC.Prim.State#
                                                                     GHC.Prim.RealWorld,
                                                                   GHC.Types.Bool #)
                                                        [LclId[JoinId(7)],
                                                         Arity=7,
                                                         Str=<S,U><L,U><L,U><L,U><L,U><S,U><S,U>,
                                                         Unf=OtherCon []] =
                                                            sat-only [msecs_sb7t6
                                                                      wild_sb7te
                                                                      $dIODevice_sb7tf
                                                                      ds_sb7ti
                                                                      dt2_sb7tn] \r [void_0E
                                                                                     ww_sb7tM
                                                                                     ww1_sb7tN
                                                                                     ww2_sb7tO
                                                                                     ww3_sb7tP
                                                                                     ww4_sb7tQ
                                                                                     ww5_sb7tR]
                                                                let {
                                                                  sat_sb7tS [Occ=Once]
                                                                    :: GHC.IO.Buffer.Buffer
                                                                         GHC.IO.Buffer.CharBufElem
                                                                  [LclId] =
                                                                      CCCS GHC.IO.Buffer.Buffer! [ww_sb7tM
                                                                                                  ww1_sb7tN
                                                                                                  ww2_sb7tO
                                                                                                  ww3_sb7tP
                                                                                                  ww4_sb7tQ
                                                                                                  ww5_sb7tR];
                                                                } in 
                                                                  case
                                                                      writeMutVar# [dt2_sb7tn
                                                                                    sat_sb7tS
                                                                                    GHC.Prim.void#]
                                                                  of
                                                                  s2#_sb7tT
                                                                  { (##) ->
                                                                        case
                                                                            ==# [ww4_sb7tQ
                                                                                 ww5_sb7tR]
                                                                        of
                                                                        { __DEFAULT ->
                                                                              Unit# [GHC.Types.True];
                                                                          1# ->
                                                                              case
                                                                                  GHC.IO.Device.ready
                                                                                      $dIODevice_sb7tf
                                                                                      ds_sb7ti
                                                                                      GHC.Types.False
                                                                                      msecs_sb7t6
                                                                                      GHC.Prim.void#
                                                                              of
                                                                              { Unit# ipv5_sb7tX [Occ=Once!] ->
                                                                                    case
                                                                                        ipv5_sb7tX
                                                                                    of
                                                                                    { GHC.Types.False ->
                                                                                          Unit# [GHC.Types.False];
                                                                                      GHC.Types.True ->
                                                                                          case
                                                                                              readMutVar# [dt2_sb7tn
                                                                                                           GHC.Prim.void#]
                                                                                          of
                                                                                          { Unit# ipv7_sb7u1 [Occ=Once!] ->
                                                                                                case
                                                                                                    ipv7_sb7u1
                                                                                                of
                                                                                                wild4_sb7u2
                                                                                                { GHC.IO.Buffer.Buffer dt9_sb7u3 [Occ=Once*]
                                                                                                                       dt10_sb7u4 [Occ=Once*]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       dt12_sb7u7
                                                                                                                       dt13_sb7u8 [Occ=Once] ->
                                                                                                      case
                                                                                                          ==# [dt12_sb7u7
                                                                                                               dt13_sb7u8]
                                                                                                      of
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                writeMutVar# [dt2_sb7tn
                                                                                                                              wild4_sb7u2
                                                                                                                              GHC.Prim.void#]
                                                                                                            of
                                                                                                            s2#1_sb7ua
                                                                                                            { (##) ->
                                                                                                                  case
                                                                                                                      readWideCharOffAddr# [dt9_sb7u3
                                                                                                                                            dt12_sb7u7
                                                                                                                                            GHC.Prim.void#]
                                                                                                                  of
                                                                                                                  { Unit# _ [Occ=Dead] ->
                                                                                                                        case
                                                                                                                            touch# [dt10_sb7u4
                                                                                                                                    GHC.Prim.void#]
                                                                                                                        of
                                                                                                                        s'_sb7ue
                                                                                                                        { (##) ->
                                                                                                                              Unit# [GHC.Types.True];
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                        1# ->
                                                                                                            case
                                                                                                                GHC.IO.Handle.Internals.hLookAhead_2
                                                                                                                    wild_sb7te
                                                                                                                    wild4_sb7u2
                                                                                                                    GHC.Prim.void#
                                                                                                            of
                                                                                                            { Unit# ipv9_sb7uh [Occ=Once] ->
                                                                                                                  case
                                                                                                                      writeMutVar# [dt2_sb7tn
                                                                                                                                    ipv9_sb7uh
                                                                                                                                    GHC.Prim.void#]
                                                                                                                  of
                                                                                                                  s2#1_sb7ui
                                                                                                                  { (##) ->
                                                                                                                        case
                                                                                                                            readWideCharOffAddr# [dt9_sb7u3
                                                                                                                                                  dt12_sb7u7
                                                                                                                                                  GHC.Prim.void#]
                                                                                                                        of
                                                                                                                        { Unit# _ [Occ=Dead] ->
                                                                                                                              case
                                                                                                                                  touch# [dt10_sb7u4
                                                                                                                                          GHC.Prim.void#]
                                                                                                                              of
                                                                                                                              s'_sb7um
                                                                                                                              { (##) ->
                                                                                                                                    Unit# [GHC.Types.True];
                                                                                                                              };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                      } in 
                                                        case ds4_sb7tq of {
                                                          GHC.Base.Nothing ->
                                                              let {
                                                                sat_sb7uo [Occ=Once]
                                                                  :: (dec_state_ab2UP,
                                                                      GHC.IO.Buffer.Buffer
                                                                        GHC.Word.Word8)
                                                                [LclId] =
                                                                    CCCS (,)! [GHC.IO.Handle.Internals.decodeByteBuf2
                                                                               ipv3_sb7tJ];
                                                              } in 
                                                                case
                                                                    writeMutVar# [dt1_sb7tm
                                                                                  sat_sb7uo
                                                                                  GHC.Prim.void#]
                                                                of
                                                                s2#_sb7up
                                                                { (##) ->
                                                                      case
                                                                          GHC.IO.Encoding.Latin1.latin5
                                                                              ipv3_sb7tJ
                                                                              wild1_sb7ty
                                                                              GHC.Prim.void#
                                                                      of
                                                                      { Unit# ipv5_sb7us [Occ=Once!] ->
                                                                            case ipv5_sb7us of {
                                                                              (,,) _ [Occ=Dead]
                                                                                   input'_sb7uv [Occ=Once]
                                                                                   output'_sb7uw [Occ=Once!] ->
                                                                                  case
                                                                                      writeMutVar# [dt_sb7tk
                                                                                                    input'_sb7uv
                                                                                                    GHC.Prim.void#]
                                                                                  of
                                                                                  s2#1_sb7ux
                                                                                  { (##) ->
                                                                                        case
                                                                                            output'_sb7uw
                                                                                        of
                                                                                        { GHC.IO.Buffer.Buffer ww1_sb7uz [Occ=Once]
                                                                                                               ww2_sb7uA [Occ=Once]
                                                                                                               ww3_sb7uB [Occ=Once]
                                                                                                               ww4_sb7uC [Occ=Once]
                                                                                                               ww5_sb7uD [Occ=Once]
                                                                                                               ww6_sb7uE [Occ=Once] ->
                                                                                              $w$j_sb7tK
                                                                                                  GHC.Prim.void#
                                                                                                  ww1_sb7uz
                                                                                                  ww2_sb7uA
                                                                                                  ww3_sb7uB
                                                                                                  ww4_sb7uC
                                                                                                  ww5_sb7uD
                                                                                                  ww6_sb7uE;
                                                                                        };
                                                                                  };
                                                                            };
                                                                      };
                                                                };
                                                          GHC.Base.Just decoder_sb7uF [Occ=Once!] ->
                                                              case decoder_sb7uF of {
                                                                GHC.IO.Encoding.Types.BufferCodec ds12_sb7uH [Occ=Once]
                                                                                                  ds13_sb7uI [Occ=Once]
                                                                                                  _ [Occ=Dead]
                                                                                                  ds15_sb7uK [Occ=Once]
                                                                                                  _ [Occ=Dead] ->
                                                                    case
                                                                        ds15_sb7uK GHC.Prim.void#
                                                                    of
                                                                    { Unit# ipv5_sb7uO [Occ=Once] ->
                                                                          let {
                                                                            sat_sb7uP [Occ=Once]
                                                                              :: (dec_state_ab2UP,
                                                                                  GHC.IO.Buffer.Buffer
                                                                                    GHC.Word.Word8)
                                                                            [LclId] =
                                                                                CCCS (,)! [ipv5_sb7uO
                                                                                           ipv3_sb7tJ];
                                                                          } in 
                                                                            case
                                                                                writeMutVar# [dt1_sb7tm
                                                                                              sat_sb7uP
                                                                                              GHC.Prim.void#]
                                                                            of
                                                                            s2#_sb7uQ
                                                                            { (##) ->
                                                                                  case
                                                                                      GHC.IO.Handle.Internals.$wstreamEncode
                                                                                          ds12_sb7uH
                                                                                          ds13_sb7uI
                                                                                          ipv3_sb7tJ
                                                                                          wild1_sb7ty
                                                                                          GHC.Prim.void#
                                                                                  of
                                                                                  { Unit# ipv7_sb7uT [Occ=Once!] ->
                                                                                        case
                                                                                            ipv7_sb7uT
                                                                                        of
                                                                                        { (,) bbuf2_sb7uV [Occ=Once]
                                                                                              cbuf'_sb7uW [Occ=Once!] ->
                                                                                              case
                                                                                                  writeMutVar# [dt_sb7tk
                                                                                                                bbuf2_sb7uV
                                                                                                                GHC.Prim.void#]
                                                                                              of
                                                                                              s2#1_sb7uX
                                                                                              { (##) ->
                                                                                                    case
                                                                                                        cbuf'_sb7uW
                                                                                                    of
                                                                                                    { GHC.IO.Buffer.Buffer ww1_sb7uZ [Occ=Once]
                                                                                                                           ww2_sb7v0 [Occ=Once]
                                                                                                                           ww3_sb7v1 [Occ=Once]
                                                                                                                           ww4_sb7v2 [Occ=Once]
                                                                                                                           ww5_sb7v3 [Occ=Once]
                                                                                                                           ww6_sb7v4 [Occ=Once] ->
                                                                                                          $w$j_sb7tK
                                                                                                              GHC.Prim.void#
                                                                                                              ww1_sb7uZ
                                                                                                              ww2_sb7v0
                                                                                                              ww3_sb7v1
                                                                                                              ww4_sb7v2
                                                                                                              ww5_sb7v3
                                                                                                              ww6_sb7v4;
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                    };
                                                              };
                                                        };
                                                };
                                            GHC.Types.True ->
                                                case
                                                    GHC.IO.Handle.Internals.hLookAhead_2
                                                        wild_sb7te wild1_sb7ty GHC.Prim.void#
                                                of
                                                { Unit# ipv3_sb7v7 [Occ=Once] ->
                                                      case
                                                          writeMutVar# [dt2_sb7tn
                                                                        ipv3_sb7v7
                                                                        GHC.Prim.void#]
                                                      of
                                                      s2#_sb7v8
                                                      { (##) -> Unit# [GHC.Types.True];
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in 
          GHC.IO.Handle.Internals.wantReadableHandle_1
              GHC.IO.Handle.Text.hWaitForInput2 h_sb7t5 sat_sb7v9 GHC.Prim.void#;

GHC.IO.Handle.Text.hWaitForInput
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Bool
[GblId, Arity=3, Str=<S,1*U><L,U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.IO.Handle.Text.hWaitForInput1 eta_B3 eta_B2 GHC.Prim.void#;


==================== Pre unarise: ====================
2018-03-16 16:06:10.219439989 UTC

lvl_rb6WB :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "illegal buffer size "#;

GHC.IO.Handle.Text.$willegalBufferSize [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId, Arity=4, Str=<B,U><B,U><B,U><B,U>x, Unf=OtherCon []] =
    [] \r [w_sbbR4 w1_sbbR5 ww_sbbR6 w2_sbbR7]
        let {
          sat_sbbRf [Occ=Once] :: GHC.Exception.SomeException
          [LclId] =
              [w_sbbR4 w1_sbbR5 ww_sbbR6] \u []
                  let {
                    sat_sbbRd [Occ=Once] :: GHC.Base.String
                    [LclId] =
                        [ww_sbbR6] \u []
                            let {
                              sat_sbbRc [Occ=Once] :: [GHC.Types.Char]
                              [LclId] =
                                  [ww_sbbR6] \u []
                                      case GHC.Show.$wshowSignedInt 9# ww_sbbR6 GHC.Types.[] of {
                                        (#,#) ww5_sbbRa [Occ=Once] ww6_sbbRb [Occ=Once] ->
                                            : [ww5_sbbRa ww6_sbbRb];
                                      };
                            } in  GHC.CString.unpackAppendCString# lvl_rb6WB sat_sbbRc; } in
                  let {
                    sat_sbbR8 [Occ=Once] :: GHC.Base.Maybe GHC.IO.Handle.Types.Handle
                    [LclId] =
                        CCCS GHC.Base.Just! [w_sbbR4]; } in
                  let {
                    sat_sbbRe [Occ=Once] :: GHC.IO.Exception.IOException
                    [LclId] =
                        CCCS GHC.IO.Exception.IOError! [sat_sbbR8
                                                        GHC.IO.Exception.InvalidArgument
                                                        w1_sbbR5
                                                        sat_sbbRd
                                                        GHC.Base.Nothing
                                                        GHC.Base.Nothing];
                  } in 
                    GHC.IO.Exception.$fExceptionIOException_$ctoException sat_sbbRe;
        } in  raiseIO# [sat_sbbRf w2_sbbR7];

GHC.IO.Handle.Text.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.IO.Handle.Text.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Handle.Text.$trModule4];

GHC.IO.Handle.Text.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.Handle.Text"#;

GHC.IO.Handle.Text.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Handle.Text.$trModule2];

GHC.IO.Handle.Text.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.IO.Handle.Text.$trModule3
                                     GHC.IO.Handle.Text.$trModule1];

memcpy1_rb6WC
  :: forall a.
     GHC.Ptr.Ptr a
     -> GHC.Ptr.Ptr a
     -> GHC.Word.Word64
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [ds_sbbRg ds1_sbbRh ds2_sbbRi eta_sbbRj]
        case ds_sbbRg of {
          GHC.Ptr.Ptr ds4_sbbRl [Occ=Once] ->
              case ds1_sbbRh of {
                GHC.Ptr.Ptr ds6_sbbRn [Occ=Once] ->
                    case ds2_sbbRi of {
                      GHC.Word.W64# ds8_sbbRp [Occ=Once] ->
                          case
                              __pkg_ccall base-4.11.0.0 [ds4_sbbRl ds6_sbbRn ds8_sbbRp eta_sbbRj]
                          of
                          { (#,#) ds9_sbbRs [Occ=Once] ds10_sbbRt [Occ=Once] ->
                                let {
                                  sat_sbbRu [Occ=Once] :: GHC.Ptr.Ptr ()
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds10_sbbRt];
                                } in  (#,#) [ds9_sbbRs sat_sbbRu];
                          };
                    };
              };
        };

GHC.IO.Handle.Text.memcpy
  :: forall a.
     GHC.Ptr.Ptr a
     -> GHC.Ptr.Ptr a
     -> Foreign.C.Types.CSize
     -> GHC.Types.IO (GHC.Ptr.Ptr ())
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        memcpy1_rb6WC eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.Handle.Text.$wcommitBuffer' [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.CharBuffer #)
[GblId,
 Arity=8,
 Caf=NoCafRefs,
 Str=<S,U><L,U><S,U><S,U><L,1*U><L,1*U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sbbRv
           ww1_sbbRw
           ww2_sbbRx
           ww3_sbbRy
           w_sbbRz
           w1_sbbRA
           w2_sbbRB
           w3_sbbRC]
        case w2_sbbRB of wild_sbbRD {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       $dBufferedIO_sbbRF [Occ=Once]
                                       _ [Occ=Dead]
                                       ds_sbbRH [Occ=Once]
                                       _ [Occ=Dead]
                                       dt_sbbRJ
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt2_sbbRM [Occ=Once*]
                                       dt3_sbbRN
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case
                  GHC.IO.Handle.Internals.$wwriteCharBuffer
                      wild_sbbRD
                      ww_sbbRv
                      ww1_sbbRw
                      GHC.IO.Buffer.WriteBuffer
                      ww2_sbbRx
                      0#
                      ww3_sbbRy
                      w3_sbbRC
              of
              { (#,#) ipv_sbbRV [Occ=Once*] _ [Occ=Dead] ->
                    case w_sbbRz of {
                      GHC.Types.False ->
                          case w1_sbbRA of {
                            GHC.Types.False ->
                                let {
                                  sat_sbbRZ [Occ=Once]
                                    :: GHC.IO.Buffer.Buffer GHC.IO.Buffer.CharBufElem
                                  [LclId] =
                                      CCCS GHC.IO.Buffer.Buffer! [ww_sbbRv
                                                                  ww1_sbbRw
                                                                  GHC.IO.Buffer.WriteBuffer
                                                                  ww2_sbbRx
                                                                  0#
                                                                  ww3_sbbRy];
                                } in  (#,#) [ipv_sbbRV sat_sbbRZ];
                            GHC.Types.True ->
                                case readMutVar# [dt2_sbbRM ipv_sbbRV] of {
                                  (#,#) ipv2_sbbS1 [Occ=Once*] ipv3_sbbS2 [Occ=Once!] ->
                                      case ipv3_sbbS2 of {
                                        GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             dt6_sbbS7 [Occ=Once]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                            case ==# [ww2_sbbRx dt6_sbbS7] of {
                                              __DEFAULT ->
                                                  let {
                                                    sat_sbbSb [Occ=Once]
                                                      :: GHC.IO.Buffer.Buffer
                                                           GHC.IO.Buffer.CharBufElem
                                                    [LclId] =
                                                        CCCS GHC.IO.Buffer.Buffer! [ww_sbbRv
                                                                                    ww1_sbbRw
                                                                                    GHC.IO.Buffer.WriteBuffer
                                                                                    ww2_sbbRx
                                                                                    0#
                                                                                    ww3_sbbRy];
                                                  } in  (#,#) [ipv2_sbbS1 sat_sbbSb];
                                              1# ->
                                                  case readMutVar# [dt3_sbbRN ipv2_sbbS1] of {
                                                    (#,#) ipv4_sbbSd [Occ=Once]
                                                          ipv5_sbbSe [Occ=Once] ->
                                                        let {
                                                          sat_sbbSf [Occ=Once]
                                                            :: GHC.IO.Buffer.RawBuffer
                                                                 GHC.IO.Buffer.CharBufElem
                                                          [LclId] =
                                                              CCCS GHC.ForeignPtr.ForeignPtr! [ww_sbbRv
                                                                                               ww1_sbbRw]; } in
                                                        let {
                                                          sat_sbbSg [Occ=Once]
                                                            :: GHC.IO.Handle.Types.BufferList
                                                                 GHC.IO.Buffer.CharBufElem
                                                          [LclId] =
                                                              CCCS GHC.IO.Handle.Types.BufferListCons! [sat_sbbSf
                                                                                                        ipv5_sbbSe];
                                                        } in 
                                                          case
                                                              writeMutVar# [dt3_sbbRN
                                                                            sat_sbbSg
                                                                            ipv4_sbbSd]
                                                          of
                                                          s2#_sbbSh
                                                          { __DEFAULT ->
                                                                let {
                                                                  sat_sbbSi [Occ=Once]
                                                                    :: GHC.IO.Buffer.Buffer
                                                                         GHC.IO.Buffer.CharBufElem
                                                                  [LclId] =
                                                                      CCCS GHC.IO.Buffer.Buffer! [ww_sbbRv
                                                                                                  ww1_sbbRw
                                                                                                  GHC.IO.Buffer.WriteBuffer
                                                                                                  ww2_sbbRx
                                                                                                  0#
                                                                                                  ww3_sbbRy];
                                                                } in  (#,#) [s2#_sbbSh sat_sbbSi];
                                                          };
                                                  };
                                            };
                                      };
                                };
                          };
                      GHC.Types.True ->
                          case readMutVar# [dt_sbbRJ ipv_sbbRV] of {
                            (#,#) ipv2_sbbSk [Occ=Once*] ipv3_sbbSl [Occ=Once!] ->
                                case ipv3_sbbSl of wild2_sbbSm {
                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                       _ [Occ=Dead]
                                                       _ [Occ=Dead]
                                                       _ [Occ=Dead]
                                                       dt7_sbbSr [Occ=Once]
                                                       dt8_sbbSs [Occ=Once] ->
                                      case ==# [dt7_sbbSr dt8_sbbSs] of {
                                        __DEFAULT ->
                                            case
                                                GHC.IO.BufferedIO.flushWriteBuffer
                                                    $dBufferedIO_sbbRF
                                                    ds_sbbRH
                                                    wild2_sbbSm
                                                    ipv2_sbbSk
                                            of
                                            { (#,#) ipv4_sbbSv [Occ=Once] ipv5_sbbSw [Occ=Once] ->
                                                  case
                                                      writeMutVar# [dt_sbbRJ ipv5_sbbSw ipv4_sbbSv]
                                                  of
                                                  s2#_sbbSx
                                                  { __DEFAULT ->
                                                        case w1_sbbRA of {
                                                          GHC.Types.False ->
                                                              let {
                                                                sat_sbbSz [Occ=Once]
                                                                  :: GHC.IO.Buffer.Buffer
                                                                       GHC.IO.Buffer.CharBufElem
                                                                [LclId] =
                                                                    CCCS GHC.IO.Buffer.Buffer! [ww_sbbRv
                                                                                                ww1_sbbRw
                                                                                                GHC.IO.Buffer.WriteBuffer
                                                                                                ww2_sbbRx
                                                                                                0#
                                                                                                ww3_sbbRy];
                                                              } in  (#,#) [s2#_sbbSx sat_sbbSz];
                                                          GHC.Types.True ->
                                                              case
                                                                  readMutVar# [dt2_sbbRM s2#_sbbSx]
                                                              of
                                                              { (#,#) ipv6_sbbSB [Occ=Once*]
                                                                      ipv7_sbbSC [Occ=Once!] ->
                                                                    case ipv7_sbbSC of {
                                                                      GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                           _ [Occ=Dead]
                                                                                           _ [Occ=Dead]
                                                                                           dt12_sbbSH [Occ=Once]
                                                                                           _ [Occ=Dead]
                                                                                           _ [Occ=Dead] ->
                                                                          case
                                                                              ==# [ww2_sbbRx
                                                                                   dt12_sbbSH]
                                                                          of
                                                                          { __DEFAULT ->
                                                                                let {
                                                                                  sat_sbbSL [Occ=Once]
                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                         GHC.IO.Buffer.CharBufElem
                                                                                  [LclId] =
                                                                                      CCCS GHC.IO.Buffer.Buffer! [ww_sbbRv
                                                                                                                  ww1_sbbRw
                                                                                                                  GHC.IO.Buffer.WriteBuffer
                                                                                                                  ww2_sbbRx
                                                                                                                  0#
                                                                                                                  ww3_sbbRy];
                                                                                } in 
                                                                                  (#,#) [ipv6_sbbSB
                                                                                         sat_sbbSL];
                                                                            1# ->
                                                                                case
                                                                                    readMutVar# [dt3_sbbRN
                                                                                                 ipv6_sbbSB]
                                                                                of
                                                                                { (#,#) ipv8_sbbSN [Occ=Once]
                                                                                        ipv9_sbbSO [Occ=Once] ->
                                                                                      let {
                                                                                        sat_sbbSP [Occ=Once]
                                                                                          :: GHC.IO.Buffer.RawBuffer
                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                        [LclId] =
                                                                                            CCCS GHC.ForeignPtr.ForeignPtr! [ww_sbbRv
                                                                                                                             ww1_sbbRw]; } in
                                                                                      let {
                                                                                        sat_sbbSQ [Occ=Once]
                                                                                          :: GHC.IO.Handle.Types.BufferList
                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                        [LclId] =
                                                                                            CCCS GHC.IO.Handle.Types.BufferListCons! [sat_sbbSP
                                                                                                                                      ipv9_sbbSO];
                                                                                      } in 
                                                                                        case
                                                                                            writeMutVar# [dt3_sbbRN
                                                                                                          sat_sbbSQ
                                                                                                          ipv8_sbbSN]
                                                                                        of
                                                                                        s2#1_sbbSR
                                                                                        { __DEFAULT ->
                                                                                              let {
                                                                                                sat_sbbSS [Occ=Once]
                                                                                                  :: GHC.IO.Buffer.Buffer
                                                                                                       GHC.IO.Buffer.CharBufElem
                                                                                                [LclId] =
                                                                                                    CCCS GHC.IO.Buffer.Buffer! [ww_sbbRv
                                                                                                                                ww1_sbbRw
                                                                                                                                GHC.IO.Buffer.WriteBuffer
                                                                                                                                ww2_sbbRx
                                                                                                                                0#
                                                                                                                                ww3_sbbRy];
                                                                                              } in 
                                                                                                (#,#) [s2#1_sbbSR
                                                                                                       sat_sbbSS];
                                                                                        };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                        1# ->
                                            case w1_sbbRA of {
                                              GHC.Types.False ->
                                                  let {
                                                    sat_sbbSU [Occ=Once]
                                                      :: GHC.IO.Buffer.Buffer
                                                           GHC.IO.Buffer.CharBufElem
                                                    [LclId] =
                                                        CCCS GHC.IO.Buffer.Buffer! [ww_sbbRv
                                                                                    ww1_sbbRw
                                                                                    GHC.IO.Buffer.WriteBuffer
                                                                                    ww2_sbbRx
                                                                                    0#
                                                                                    ww3_sbbRy];
                                                  } in  (#,#) [ipv2_sbbSk sat_sbbSU];
                                              GHC.Types.True ->
                                                  case readMutVar# [dt2_sbbRM ipv2_sbbSk] of {
                                                    (#,#) ipv4_sbbSW [Occ=Once*]
                                                          ipv5_sbbSX [Occ=Once!] ->
                                                        case ipv5_sbbSX of {
                                                          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                               _ [Occ=Dead]
                                                                               _ [Occ=Dead]
                                                                               dt12_sbbT2 [Occ=Once]
                                                                               _ [Occ=Dead]
                                                                               _ [Occ=Dead] ->
                                                              case ==# [ww2_sbbRx dt12_sbbT2] of {
                                                                __DEFAULT ->
                                                                    let {
                                                                      sat_sbbT6 [Occ=Once]
                                                                        :: GHC.IO.Buffer.Buffer
                                                                             GHC.IO.Buffer.CharBufElem
                                                                      [LclId] =
                                                                          CCCS GHC.IO.Buffer.Buffer! [ww_sbbRv
                                                                                                      ww1_sbbRw
                                                                                                      GHC.IO.Buffer.WriteBuffer
                                                                                                      ww2_sbbRx
                                                                                                      0#
                                                                                                      ww3_sbbRy];
                                                                    } in 
                                                                      (#,#) [ipv4_sbbSW sat_sbbT6];
                                                                1# ->
                                                                    case
                                                                        readMutVar# [dt3_sbbRN
                                                                                     ipv4_sbbSW]
                                                                    of
                                                                    { (#,#) ipv6_sbbT8 [Occ=Once]
                                                                            ipv7_sbbT9 [Occ=Once] ->
                                                                          let {
                                                                            sat_sbbTa [Occ=Once]
                                                                              :: GHC.IO.Buffer.RawBuffer
                                                                                   GHC.IO.Buffer.CharBufElem
                                                                            [LclId] =
                                                                                CCCS GHC.ForeignPtr.ForeignPtr! [ww_sbbRv
                                                                                                                 ww1_sbbRw]; } in
                                                                          let {
                                                                            sat_sbbTb [Occ=Once]
                                                                              :: GHC.IO.Handle.Types.BufferList
                                                                                   GHC.IO.Buffer.CharBufElem
                                                                            [LclId] =
                                                                                CCCS GHC.IO.Handle.Types.BufferListCons! [sat_sbbTa
                                                                                                                          ipv7_sbbT9];
                                                                          } in 
                                                                            case
                                                                                writeMutVar# [dt3_sbbRN
                                                                                              sat_sbbTb
                                                                                              ipv6_sbbT8]
                                                                            of
                                                                            s2#_sbbTc
                                                                            { __DEFAULT ->
                                                                                  let {
                                                                                    sat_sbbTd [Occ=Once]
                                                                                      :: GHC.IO.Buffer.Buffer
                                                                                           GHC.IO.Buffer.CharBufElem
                                                                                    [LclId] =
                                                                                        CCCS GHC.IO.Buffer.Buffer! [ww_sbbRv
                                                                                                                    ww1_sbbRw
                                                                                                                    GHC.IO.Buffer.WriteBuffer
                                                                                                                    ww2_sbbRx
                                                                                                                    0#
                                                                                                                    ww3_sbbRy];
                                                                                  } in 
                                                                                    (#,#) [s2#_sbbTc
                                                                                           sat_sbbTd];
                                                                            };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.Handle.Text.commitBuffer'1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.CharBuffer #)
[GblId,
 Arity=7,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><L,1*U><L,1*U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbbTe
           w1_sbbTf
           w2_sbbTg
           w3_sbbTh
           w4_sbbTi
           w5_sbbTj
           w6_sbbTk]
        case w_sbbTe of {
          GHC.ForeignPtr.ForeignPtr ww1_sbbTm [Occ=Once]
                                    ww2_sbbTn [Occ=Once] ->
              case w1_sbbTf of {
                GHC.Types.I# ww4_sbbTp [Occ=Once] ->
                    case w2_sbbTg of {
                      GHC.Types.I# ww6_sbbTr [Occ=Once] ->
                          GHC.IO.Handle.Text.$wcommitBuffer'
                              ww1_sbbTm
                              ww2_sbbTn
                              ww4_sbbTp
                              ww6_sbbTr
                              w3_sbbTh
                              w4_sbbTi
                              w5_sbbTj
                              w6_sbbTk;
                    };
              };
        };

GHC.IO.Handle.Text.commitBuffer'
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.IO.Handle.Types.Handle__
     -> GHC.Types.IO GHC.IO.Buffer.CharBuffer
[GblId,
 Arity=7,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><L,1*U><L,1*U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B7 eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Handle.Text.commitBuffer'1
            eta_B7 eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

lvl1_rb6WD :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "commitBuffer"#;

lvl2_rb6WE :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl1_rb6WD;

GHC.IO.Handle.Text.hPutChar3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hPutChar"#;

GHC.IO.Handle.Text.hPutChar2 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hPutChar3;

GHC.IO.Handle.Text.$whPutChar [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.Char#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<S,1*U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [w_sbbTs ww_sbbTt w1_sbbTu]
        let {
          act_sbbTv [Occ=Once*, Dmd=<L,C(C1(U(U,U)))>]
            :: GHC.IO.Handle.Types.Handle__
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
              [ww_sbbTt] \r [handle__sbbTw eta_sbbTx]
                  case handle__sbbTw of wild_sbbTy {
                    GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                 $dBufferedIO_sbbTA [Occ=Once]
                                                 _ [Occ=Dead]
                                                 ds_sbbTC [Occ=Once]
                                                 _ [Occ=Dead]
                                                 dt_sbbTE
                                                 ds2_sbbTF [Occ=Once!]
                                                 _ [Occ=Dead]
                                                 dt2_sbbTH [Occ=Once]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 ds7_sbbTN [Occ=Once!]
                                                 _ [Occ=Dead] ->
                        case readMutVar# [dt2_sbbTH eta_sbbTx] of {
                          (#,#) ipv_sbbTQ [Occ=Once*] ipv1_sbbTR [Occ=Once*!] ->
                              case ww_sbbTt of wild1_sbbTS {
                                __DEFAULT ->
                                    case ipv1_sbbTR of {
                                      GHC.IO.Buffer.Buffer dt4_sbbTU
                                                           dt5_sbbTV
                                                           ds10_sbbTW [Occ=Once]
                                                           dt6_sbbTX [Occ=Once]
                                                           dt7_sbbTY [Occ=Once]
                                                           dt8_sbbTZ ->
                                          case
                                              writeWideCharOffAddr# [dt4_sbbTU
                                                                     dt8_sbbTZ
                                                                     wild1_sbbTS
                                                                     ipv_sbbTQ]
                                          of
                                          s2_sbbU0
                                          { __DEFAULT ->
                                                case touch# [dt5_sbbTV s2_sbbU0] of s'_sbbU1 {
                                                  __DEFAULT ->
                                                      case +# [dt8_sbbTZ 1#] of sat_sbbU2 {
                                                        __DEFAULT ->
                                                            case
                                                                GHC.IO.Handle.Internals.$wwriteCharBuffer
                                                                    wild_sbbTy
                                                                    dt4_sbbTU
                                                                    dt5_sbbTV
                                                                    ds10_sbbTW
                                                                    dt6_sbbTX
                                                                    dt7_sbbTY
                                                                    sat_sbbU2
                                                                    s'_sbbU1
                                                            of
                                                            { (#,#) ipv2_sbbU4 [Occ=Once]
                                                                    _ [Occ=Dead] ->
                                                                  (#,#) [ipv2_sbbU4 GHC.Tuple.()];
                                                            };
                                                      };
                                                };
                                          };
                                    };
                                '\n'# ->
                                    let-no-escape {
                                      $w$j_sbbU6 [InlPrag=NOUSERINLINE[0],
                                                  Occ=Once*!T[7],
                                                  Dmd=<C(C(C(C(C(C(C(S))))))),1*C1(C1(C1(C1(C1(C1(C1(U(U,U))))))))>]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> GHC.Prim.Addr#
                                           -> GHC.ForeignPtr.ForeignPtrContents
                                           -> GHC.IO.Buffer.BufferState
                                           -> GHC.Prim.Int#
                                           -> GHC.Prim.Int#
                                           -> GHC.Prim.Int#
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId[JoinId(7)],
                                       Arity=7,
                                       Str=<S,U><S,U><L,U><L,U><S,U><S,U><S,U>,
                                       Unf=OtherCon []] =
                                          sat-only [wild_sbbTy
                                                    $dBufferedIO_sbbTA
                                                    ds_sbbTC
                                                    dt_sbbTE
                                                    ds2_sbbTF] \r [w2_sbbU7
                                                                   ww1_sbbU8
                                                                   ww2_sbbU9
                                                                   ww3_sbbUa
                                                                   ww4_sbbUb
                                                                   ww5_sbbUc
                                                                   ww6_sbbUd]
                                              case
                                                  GHC.IO.Handle.Internals.$wwriteCharBuffer
                                                      wild_sbbTy
                                                      ww1_sbbU8
                                                      ww2_sbbU9
                                                      ww3_sbbUa
                                                      ww4_sbbUb
                                                      ww5_sbbUc
                                                      ww6_sbbUd
                                                      w2_sbbU7
                                              of
                                              { (#,#) ipv2_sbbUf [Occ=Once*] _ [Occ=Dead] ->
                                                    case ds2_sbbTF of {
                                                      __DEFAULT -> (#,#) [ipv2_sbbUf GHC.Tuple.()];
                                                      GHC.IO.Handle.Types.LineBuffering ->
                                                          case
                                                              readMutVar# [dt_sbbTE ipv2_sbbUf]
                                                          of
                                                          { (#,#) ipv4_sbbUj [Occ=Once*]
                                                                  ipv5_sbbUk [Occ=Once!] ->
                                                                case ipv5_sbbUk of wild3_sbbUl {
                                                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       dt7_sbbUq [Occ=Once]
                                                                                       dt8_sbbUr [Occ=Once] ->
                                                                      case
                                                                          ==# [dt7_sbbUq dt8_sbbUr]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            case
                                                                                GHC.IO.BufferedIO.flushWriteBuffer
                                                                                    $dBufferedIO_sbbTA
                                                                                    ds_sbbTC
                                                                                    wild3_sbbUl
                                                                                    ipv4_sbbUj
                                                                            of
                                                                            { (#,#) ipv6_sbbUu [Occ=Once]
                                                                                    ipv7_sbbUv [Occ=Once] ->
                                                                                  case
                                                                                      writeMutVar# [dt_sbbTE
                                                                                                    ipv7_sbbUv
                                                                                                    ipv6_sbbUu]
                                                                                  of
                                                                                  s2#_sbbUw
                                                                                  { __DEFAULT ->
                                                                                        (#,#) [s2#_sbbUw
                                                                                               GHC.Tuple.()];
                                                                                  };
                                                                            };
                                                                        1# ->
                                                                            (#,#) [ipv4_sbbUj
                                                                                   GHC.Tuple.()];
                                                                      };
                                                                };
                                                          };
                                                    };
                                              };
                                    } in 
                                      case ds7_sbbTN of {
                                        GHC.IO.Handle.Types.LF ->
                                            case ipv1_sbbTR of {
                                              GHC.IO.Buffer.Buffer dt4_sbbUz
                                                                   dt5_sbbUA
                                                                   ds10_sbbUB [Occ=Once]
                                                                   dt6_sbbUC [Occ=Once]
                                                                   dt7_sbbUD [Occ=Once]
                                                                   dt8_sbbUE ->
                                                  case
                                                      writeWideCharOffAddr# [dt4_sbbUz
                                                                             dt8_sbbUE
                                                                             '\n'#
                                                                             ipv_sbbTQ]
                                                  of
                                                  s2_sbbUF
                                                  { __DEFAULT ->
                                                        case
                                                            touch# [dt5_sbbUA s2_sbbUF]
                                                        of
                                                        s'_sbbUG
                                                        { __DEFAULT ->
                                                              case +# [dt8_sbbUE 1#] of sat_sbbUH {
                                                                __DEFAULT ->
                                                                    $w$j_sbbU6
                                                                        s'_sbbUG
                                                                        dt4_sbbUz
                                                                        dt5_sbbUA
                                                                        ds10_sbbUB
                                                                        dt6_sbbUC
                                                                        dt7_sbbUD
                                                                        sat_sbbUH;
                                                              };
                                                        };
                                                  };
                                            };
                                        GHC.IO.Handle.Types.CRLF ->
                                            case ipv1_sbbTR of {
                                              GHC.IO.Buffer.Buffer dt4_sbbUJ
                                                                   dt5_sbbUK
                                                                   ds10_sbbUL [Occ=Once]
                                                                   dt6_sbbUM [Occ=Once]
                                                                   dt7_sbbUN [Occ=Once]
                                                                   dt8_sbbUO ->
                                                  case
                                                      writeWideCharOffAddr# [dt4_sbbUJ
                                                                             dt8_sbbUO
                                                                             '\r'#
                                                                             ipv_sbbTQ]
                                                  of
                                                  s2_sbbUP
                                                  { __DEFAULT ->
                                                        case
                                                            touch# [dt5_sbbUK s2_sbbUP]
                                                        of
                                                        s'_sbbUQ
                                                        { __DEFAULT ->
                                                              case
                                                                  +# [dt8_sbbUO 1#]
                                                              of
                                                              ipv2_sbbUR [Dmd=<S,U>]
                                                              { __DEFAULT ->
                                                                    case
                                                                        writeWideCharOffAddr# [dt4_sbbUJ
                                                                                               ipv2_sbbUR
                                                                                               '\n'#
                                                                                               s'_sbbUQ]
                                                                    of
                                                                    s1_sbbUS
                                                                    { __DEFAULT ->
                                                                          case
                                                                              touch# [dt5_sbbUK
                                                                                      s1_sbbUS]
                                                                          of
                                                                          s'1_sbbUT
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    +# [ipv2_sbbUR
                                                                                        1#]
                                                                                of
                                                                                sat_sbbUU
                                                                                { __DEFAULT ->
                                                                                      $w$j_sbbU6
                                                                                          s'1_sbbUT
                                                                                          dt4_sbbUJ
                                                                                          dt5_sbbUK
                                                                                          ds10_sbbUL
                                                                                          dt6_sbbUM
                                                                                          dt7_sbbUN
                                                                                          sat_sbbUU;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                              };
                        };
                  };
        } in 
          case w_sbbTs of wild_sbbUV {
            GHC.IO.Handle.Types.FileHandle _ [Occ=Dead] dt_sbbUX [Occ=Once] ->
                GHC.IO.Handle.Internals.$wwantWritableHandle'
                    GHC.IO.Handle.Text.hPutChar2
                    wild_sbbUV
                    dt_sbbUX
                    act_sbbTv
                    w1_sbbTu;
            GHC.IO.Handle.Types.DuplexHandle _ [Occ=Dead]
                                             _ [Occ=Dead]
                                             dt1_sbbV0 [Occ=Once] ->
                GHC.IO.Handle.Internals.$wwantWritableHandle'
                    GHC.IO.Handle.Text.hPutChar2
                    wild_sbbUV
                    dt1_sbbV0
                    act_sbbTv
                    w1_sbbTu;
          };

GHC.IO.Handle.Text.hPutChar1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Types.Char
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<S,1*U><S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [w_sbbV1 w1_sbbV2 w2_sbbV3]
        case w1_sbbV2 of {
          GHC.Types.C# ww1_sbbV5 [Occ=Once] ->
              GHC.IO.Handle.Text.$whPutChar w_sbbV1 ww1_sbbV5 w2_sbbV3;
        };

GHC.IO.Handle.Text.hPutChar
  :: GHC.IO.Handle.Types.Handle -> GHC.Types.Char -> GHC.Types.IO ()
[GblId, Arity=3, Str=<S,1*U><S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.IO.Handle.Text.hPutChar1 eta_B3 eta_B2 eta_B1;

GHC.IO.Handle.Text.hPutStr7 [Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle
     -> [GHC.Types.Char]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<L,U><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [ds_sbbV6 ds1_sbbV7 eta_sbbV8]
        case ds1_sbbV7 of {
          [] -> (#,#) [eta_sbbV8 GHC.Tuple.()];
          : c_sbbVa [Occ=Once!] cs_sbbVb [Occ=Once] ->
              case c_sbbVa of {
                GHC.Types.C# ww1_sbbVd [Occ=Once] ->
                    case
                        GHC.IO.Handle.Text.$whPutChar ds_sbbV6 ww1_sbbVd eta_sbbV8
                    of
                    { (#,#) ipv_sbbVf [Occ=Once] _ [Occ=Dead] ->
                          GHC.IO.Handle.Text.hPutStr7 ds_sbbV6 cs_sbbVb ipv_sbbVf;
                    };
              };
        };

GHC.IO.Handle.Text.hGetChar3
  :: GHC.Exception.SomeException
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Base.Maybe GHC.IO.Buffer.CharBuffer #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [e1_sbbVh eta_sbbVi]
        case e1_sbbVh of wild_sbbVj {
          GHC.Exception.SomeException $dException1_sbbVk [Occ=Once]
                                      e3_sbbVl [Occ=Once] ->
              case GHC.Exception.$p1Exception $dException1_sbbVk of sat_sbbVm {
                __DEFAULT ->
                    case
                        Data.Typeable.Internal.sameTypeRep
                            sat_sbbVm GHC.IO.Exception.$fExceptionIOException4
                    of
                    { GHC.Types.False -> raiseIO# [wild_sbbVj eta_sbbVi];
                      GHC.Types.True ->
                          case e3_sbbVl of wild2_sbbVo {
                            GHC.IO.Exception.IOError _ [Occ=Dead]
                                                     ds2_sbbVq [Occ=Once!]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead] ->
                                case ds2_sbbVq of {
                                  __DEFAULT ->
                                      let {
                                        sat_sbbVw [Occ=Once] :: GHC.Exception.SomeException
                                        [LclId] =
                                            [wild2_sbbVo] \u []
                                                GHC.IO.Exception.$fExceptionIOException_$ctoException
                                                    wild2_sbbVo;
                                      } in  raiseIO# [sat_sbbVw eta_sbbVi];
                                  GHC.IO.Exception.EOF -> (#,#) [eta_sbbVi GHC.Base.Nothing];
                                };
                          };
                    };
              };
        };

GHC.IO.Handle.Text.hGetChar7 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetChar"#;

GHC.IO.Handle.Text.hGetChar6 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hGetChar7;

GHC.IO.Handle.Text.hGetChar5 :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! ['\r'#];

GHC.IO.Handle.Text.hGetChar4 :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! ['\n'#];

GHC.IO.Handle.Text.hGetChar2
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [handle__sbbVx eta_sbbVy]
        case handle__sbbVx of wild_sbbVz {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt2_sbbVI
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       ds6_sbbVN [Occ=Once!]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case readMutVar# [dt2_sbbVI eta_sbbVy] of {
                (#,#) ipv_sbbVR [Occ=Once*] ipv1_sbbVS [Occ=Once!] ->
                    case ipv1_sbbVS of wild1_sbbVT {
                      GHC.IO.Buffer.Buffer dt4_sbbVU [Occ=Once]
                                           dt5_sbbVV [Occ=Once]
                                           ds10_sbbVW [Occ=Once]
                                           dt6_sbbVX [Occ=Once]
                                           dt7_sbbVY
                                           dt8_sbbVZ ->
                          let-no-escape {
                            $w$j_sbbW0 [InlPrag=NOUSERINLINE[0],
                                        Occ=Once*!T[7],
                                        Dmd=<L,1*C1(C1(C1(C1(C1(C1(C1(U(U,U))))))))>]
                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                 -> GHC.Prim.Addr#
                                 -> GHC.ForeignPtr.ForeignPtrContents
                                 -> GHC.IO.Buffer.BufferState
                                 -> GHC.Prim.Int#
                                 -> GHC.Prim.Int#
                                 -> GHC.Prim.Int#
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
                            [LclId[JoinId(7)],
                             Arity=7,
                             Str=<S,U><S,U><L,U><L,U><L,U><S,U><L,U>,
                             Unf=OtherCon []] =
                                sat-only [wild_sbbVz dt2_sbbVI ds6_sbbVN] \r [w_sbbW1
                                                                              ww_sbbW2
                                                                              ww1_sbbW3
                                                                              ww2_sbbW4
                                                                              ww3_sbbW5
                                                                              ww4_sbbW6
                                                                              ww5_sbbW7]
                                    case readWideCharOffAddr# [ww_sbbW2 ww4_sbbW6 w_sbbW1] of {
                                      (#,#) ipv2_sbbW9 [Occ=Once] ipv3_sbbWa [Occ=Once*] ->
                                          case touch# [ww1_sbbW3 ipv2_sbbW9] of s'_sbbWb {
                                            __DEFAULT ->
                                                case +# [ww4_sbbW6 1#] of ipv4_sbbWc {
                                                  __DEFAULT ->
                                                      case ds6_sbbVN of {
                                                        GHC.IO.Handle.Types.LF ->
                                                            let {
                                                              sat_sbbWf [Occ=Once]
                                                                :: GHC.IO.Buffer.Buffer
                                                                     GHC.IO.Buffer.CharBufElem
                                                              [LclId] =
                                                                  [ww_sbbW2
                                                                   ww1_sbbW3
                                                                   ww2_sbbW4
                                                                   ww3_sbbW5
                                                                   ww5_sbbW7
                                                                   ipv4_sbbWc] \u []
                                                                      case
                                                                          ==# [ipv4_sbbWc ww5_sbbW7]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            GHC.IO.Buffer.Buffer [ww_sbbW2
                                                                                                  ww1_sbbW3
                                                                                                  ww2_sbbW4
                                                                                                  ww3_sbbW5
                                                                                                  ipv4_sbbWc
                                                                                                  ww5_sbbW7];
                                                                        1# ->
                                                                            GHC.IO.Buffer.Buffer [ww_sbbW2
                                                                                                  ww1_sbbW3
                                                                                                  ww2_sbbW4
                                                                                                  ww3_sbbW5
                                                                                                  0#
                                                                                                  0#];
                                                                      };
                                                            } in 
                                                              case
                                                                  writeMutVar# [dt2_sbbVI
                                                                                sat_sbbWf
                                                                                s'_sbbWb]
                                                              of
                                                              s2#_sbbWg
                                                              { __DEFAULT ->
                                                                    let {
                                                                      sat_sbbWh [Occ=Once]
                                                                        :: GHC.Types.Char
                                                                      [LclId] =
                                                                          CCCS GHC.Types.C#! [ipv3_sbbWa];
                                                                    } in 
                                                                      (#,#) [s2#_sbbWg sat_sbbWh];
                                                              };
                                                        GHC.IO.Handle.Types.CRLF ->
                                                            case ipv3_sbbWa of wild3_sbbWi {
                                                              __DEFAULT ->
                                                                  let {
                                                                    sat_sbbWk [Occ=Once]
                                                                      :: GHC.IO.Buffer.Buffer
                                                                           GHC.IO.Buffer.CharBufElem
                                                                    [LclId] =
                                                                        [ww_sbbW2
                                                                         ww1_sbbW3
                                                                         ww2_sbbW4
                                                                         ww3_sbbW5
                                                                         ww5_sbbW7
                                                                         ipv4_sbbWc] \u []
                                                                            case
                                                                                ==# [ipv4_sbbWc
                                                                                     ww5_sbbW7]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.IO.Buffer.Buffer [ww_sbbW2
                                                                                                        ww1_sbbW3
                                                                                                        ww2_sbbW4
                                                                                                        ww3_sbbW5
                                                                                                        ipv4_sbbWc
                                                                                                        ww5_sbbW7];
                                                                              1# ->
                                                                                  GHC.IO.Buffer.Buffer [ww_sbbW2
                                                                                                        ww1_sbbW3
                                                                                                        ww2_sbbW4
                                                                                                        ww3_sbbW5
                                                                                                        0#
                                                                                                        0#];
                                                                            };
                                                                  } in 
                                                                    case
                                                                        writeMutVar# [dt2_sbbVI
                                                                                      sat_sbbWk
                                                                                      s'_sbbWb]
                                                                    of
                                                                    s2#_sbbWl
                                                                    { __DEFAULT ->
                                                                          let {
                                                                            sat_sbbWm [Occ=Once]
                                                                              :: GHC.Types.Char
                                                                            [LclId] =
                                                                                CCCS GHC.Types.C#! [wild3_sbbWi];
                                                                          } in 
                                                                            (#,#) [s2#_sbbWl
                                                                                   sat_sbbWm];
                                                                    };
                                                              '\r'# ->
                                                                  let-no-escape {
                                                                    $j_sbbWn [Occ=Once*!T[7],
                                                                              Dmd=<C(C(C(C(C(C(C(S))))))),1*C1(C1(C1(C1(C1(C1(C1(U(U,U))))))))>]
                                                                      :: GHC.Prim.Addr#
                                                                         -> GHC.ForeignPtr.ForeignPtrContents
                                                                         -> GHC.IO.Buffer.BufferState
                                                                         -> GHC.Prim.Int#
                                                                         -> GHC.Prim.Int#
                                                                         -> GHC.Prim.Int#
                                                                         -> GHC.IO.Buffer.Buffer
                                                                              GHC.Types.Char
                                                                         -> (# GHC.Prim.State#
                                                                                 GHC.Prim.RealWorld,
                                                                               GHC.Types.Char #)
                                                                    [LclId[JoinId(7)],
                                                                     Arity=7,
                                                                     Str=<L,U><L,U><L,U><L,U><S,U><S,U><L,U(U,U,U,U,U,U)>,
                                                                     Unf=OtherCon []] =
                                                                        sat-only [wild_sbbVz
                                                                                  dt2_sbbVI
                                                                                  s'_sbbWb] \r [dt9_sbbWo
                                                                                                dt10_sbbWp
                                                                                                ds12_sbbWq
                                                                                                dt11_sbbWr
                                                                                                dt12_sbbWs
                                                                                                dt13_sbbWt
                                                                                                wild4_sbbWu]
                                                                            case
                                                                                ==# [dt12_sbbWs
                                                                                     dt13_sbbWt]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      readWideCharOffAddr# [dt9_sbbWo
                                                                                                            dt12_sbbWs
                                                                                                            s'_sbbWb]
                                                                                  of
                                                                                  { (#,#) ipv5_sbbWx [Occ=Once]
                                                                                          ipv6_sbbWy [Occ=Once!] ->
                                                                                        case
                                                                                            touch# [dt10_sbbWp
                                                                                                    ipv5_sbbWx]
                                                                                        of
                                                                                        s'1_sbbWz
                                                                                        { __DEFAULT ->
                                                                                              case
                                                                                                  ipv6_sbbWy
                                                                                              of
                                                                                              { __DEFAULT ->
                                                                                                    case
                                                                                                        writeMutVar# [dt2_sbbVI
                                                                                                                      wild4_sbbWu
                                                                                                                      s'1_sbbWz]
                                                                                                    of
                                                                                                    s2#_sbbWB
                                                                                                    { __DEFAULT ->
                                                                                                          (#,#) [s2#_sbbWB
                                                                                                                 GHC.IO.Handle.Text.hGetChar5];
                                                                                                    };
                                                                                                '\n'# ->
                                                                                                    let {
                                                                                                      sat_sbbWE [Occ=Once]
                                                                                                        :: GHC.IO.Buffer.Buffer
                                                                                                             GHC.IO.Buffer.CharBufElem
                                                                                                      [LclId] =
                                                                                                          [dt9_sbbWo
                                                                                                           dt10_sbbWp
                                                                                                           ds12_sbbWq
                                                                                                           dt11_sbbWr
                                                                                                           dt12_sbbWs
                                                                                                           dt13_sbbWt] \u []
                                                                                                              case
                                                                                                                  +# [dt12_sbbWs
                                                                                                                      1#]
                                                                                                              of
                                                                                                              ipv7_sbbWC [Dmd=<S,U>]
                                                                                                              { __DEFAULT ->
                                                                                                                    case
                                                                                                                        ==# [ipv7_sbbWC
                                                                                                                             dt13_sbbWt]
                                                                                                                    of
                                                                                                                    { __DEFAULT ->
                                                                                                                          GHC.IO.Buffer.Buffer [dt9_sbbWo
                                                                                                                                                dt10_sbbWp
                                                                                                                                                ds12_sbbWq
                                                                                                                                                dt11_sbbWr
                                                                                                                                                ipv7_sbbWC
                                                                                                                                                dt13_sbbWt];
                                                                                                                      1# ->
                                                                                                                          GHC.IO.Buffer.Buffer [dt9_sbbWo
                                                                                                                                                dt10_sbbWp
                                                                                                                                                ds12_sbbWq
                                                                                                                                                dt11_sbbWr
                                                                                                                                                0#
                                                                                                                                                0#];
                                                                                                                    };
                                                                                                              };
                                                                                                    } in 
                                                                                                      case
                                                                                                          writeMutVar# [dt2_sbbVI
                                                                                                                        sat_sbbWE
                                                                                                                        s'1_sbbWz]
                                                                                                      of
                                                                                                      s2#_sbbWF
                                                                                                      { __DEFAULT ->
                                                                                                            (#,#) [s2#_sbbWF
                                                                                                                   GHC.IO.Handle.Text.hGetChar4];
                                                                                                      };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                              1# ->
                                                                                  let {
                                                                                    sat_sbbX0 [Occ=Once]
                                                                                      :: GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld
                                                                                         -> (# GHC.Prim.State#
                                                                                                 GHC.Prim.RealWorld,
                                                                                               GHC.Base.Maybe
                                                                                                 GHC.IO.Buffer.CharBuffer #)
                                                                                    [LclId] =
                                                                                        [wild_sbbVz
                                                                                         dt9_sbbWo
                                                                                         dt10_sbbWp
                                                                                         ds12_sbbWq
                                                                                         dt11_sbbWr
                                                                                         dt12_sbbWs
                                                                                         dt13_sbbWt
                                                                                         wild4_sbbWu] \r [s_sbbWG]
                                                                                            case
                                                                                                -# [dt13_sbbWt
                                                                                                    dt12_sbbWs]
                                                                                            of
                                                                                            { __DEFAULT ->
                                                                                                  let {
                                                                                                    sat_sbbWI [Occ=Once]
                                                                                                      :: GHC.Base.Maybe
                                                                                                           GHC.IO.Buffer.CharBuffer
                                                                                                    [LclId] =
                                                                                                        CCCS GHC.Base.Just! [wild4_sbbWu];
                                                                                                  } in 
                                                                                                    (#,#) [s_sbbWG
                                                                                                           sat_sbbWI];
                                                                                              0# ->
                                                                                                  case
                                                                                                      GHC.IO.Handle.Internals.hLookAhead_2
                                                                                                          wild_sbbVz
                                                                                                          wild4_sbbWu
                                                                                                          s_sbbWG
                                                                                                  of
                                                                                                  { (#,#) ipv5_sbbWK [Occ=Once]
                                                                                                          ipv6_sbbWL [Occ=Once] ->
                                                                                                        let {
                                                                                                          sat_sbbWM [Occ=Once]
                                                                                                            :: GHC.Base.Maybe
                                                                                                                 GHC.IO.Buffer.CharBuffer
                                                                                                          [LclId] =
                                                                                                              CCCS GHC.Base.Just! [ipv6_sbbWL];
                                                                                                        } in 
                                                                                                          (#,#) [ipv5_sbbWK
                                                                                                                 sat_sbbWM];
                                                                                                  };
                                                                                              1# ->
                                                                                                  case
                                                                                                      readWideCharOffAddr# [dt9_sbbWo
                                                                                                                            dt12_sbbWs
                                                                                                                            s_sbbWG]
                                                                                                  of
                                                                                                  { (#,#) ipv5_sbbWO [Occ=Once]
                                                                                                          ipv6_sbbWP [Occ=Once!] ->
                                                                                                        case
                                                                                                            touch# [dt10_sbbWp
                                                                                                                    ipv5_sbbWO]
                                                                                                        of
                                                                                                        s'1_sbbWQ
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  ipv6_sbbWP
                                                                                                              of
                                                                                                              { __DEFAULT ->
                                                                                                                    let {
                                                                                                                      sat_sbbWS [Occ=Once]
                                                                                                                        :: GHC.Base.Maybe
                                                                                                                             GHC.IO.Buffer.CharBuffer
                                                                                                                      [LclId] =
                                                                                                                          CCCS GHC.Base.Just! [wild4_sbbWu];
                                                                                                                    } in 
                                                                                                                      (#,#) [s'1_sbbWQ
                                                                                                                             sat_sbbWS];
                                                                                                                '\r'# ->
                                                                                                                    case
                                                                                                                        writeWideCharOffAddr# [dt9_sbbWo
                                                                                                                                               0#
                                                                                                                                               '\r'#
                                                                                                                                               s'1_sbbWQ]
                                                                                                                    of
                                                                                                                    s2_sbbWT
                                                                                                                    { __DEFAULT ->
                                                                                                                          case
                                                                                                                              touch# [dt10_sbbWp
                                                                                                                                      s2_sbbWT]
                                                                                                                          of
                                                                                                                          s'2_sbbWU
                                                                                                                          { __DEFAULT ->
                                                                                                                                let {
                                                                                                                                  sat_sbbWV [Occ=Once]
                                                                                                                                    :: GHC.IO.Buffer.CharBuffer
                                                                                                                                  [LclId] =
                                                                                                                                      CCCS GHC.IO.Buffer.Buffer! [dt9_sbbWo
                                                                                                                                                                  dt10_sbbWp
                                                                                                                                                                  ds12_sbbWq
                                                                                                                                                                  dt11_sbbWr
                                                                                                                                                                  0#
                                                                                                                                                                  1#];
                                                                                                                                } in 
                                                                                                                                  case
                                                                                                                                      GHC.IO.Handle.Internals.hLookAhead_2
                                                                                                                                          wild_sbbVz
                                                                                                                                          sat_sbbWV
                                                                                                                                          s'2_sbbWU
                                                                                                                                  of
                                                                                                                                  { (#,#) ipv7_sbbWX [Occ=Once]
                                                                                                                                          ipv8_sbbWY [Occ=Once] ->
                                                                                                                                        let {
                                                                                                                                          sat_sbbWZ [Occ=Once]
                                                                                                                                            :: GHC.Base.Maybe
                                                                                                                                                 GHC.IO.Buffer.CharBuffer
                                                                                                                                          [LclId] =
                                                                                                                                              CCCS GHC.Base.Just! [ipv8_sbbWY];
                                                                                                                                        } in 
                                                                                                                                          (#,#) [ipv7_sbbWX
                                                                                                                                                 sat_sbbWZ];
                                                                                                                                  };
                                                                                                                          };
                                                                                                                    };
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                  } in 
                                                                                    case
                                                                                        catch# [sat_sbbX0
                                                                                                GHC.IO.Handle.Text.hGetChar3
                                                                                                s'_sbbWb]
                                                                                    of
                                                                                    { (#,#) ipv5_sbbX2 [Occ=Once*]
                                                                                            ipv6_sbbX3 [Occ=Once!] ->
                                                                                          case
                                                                                              ipv6_sbbX3
                                                                                          of
                                                                                          { GHC.Base.Nothing ->
                                                                                                case
                                                                                                    writeMutVar# [dt2_sbbVI
                                                                                                                  wild4_sbbWu
                                                                                                                  ipv5_sbbX2]
                                                                                                of
                                                                                                s2#_sbbX5
                                                                                                { __DEFAULT ->
                                                                                                      (#,#) [s2#_sbbX5
                                                                                                             GHC.IO.Handle.Text.hGetChar5];
                                                                                                };
                                                                                            GHC.Base.Just buf3_sbbX6 [Occ=Once*] ->
                                                                                                case
                                                                                                    readWideCharOffAddr# [dt9_sbbWo
                                                                                                                          dt12_sbbWs
                                                                                                                          ipv5_sbbX2]
                                                                                                of
                                                                                                { (#,#) ipv7_sbbX8 [Occ=Once]
                                                                                                        ipv8_sbbX9 [Occ=Once!] ->
                                                                                                      case
                                                                                                          touch# [dt10_sbbWp
                                                                                                                  ipv7_sbbX8]
                                                                                                      of
                                                                                                      s'1_sbbXa
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                ipv8_sbbX9
                                                                                                            of
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      writeMutVar# [dt2_sbbVI
                                                                                                                                    buf3_sbbX6
                                                                                                                                    s'1_sbbXa]
                                                                                                                  of
                                                                                                                  s2#_sbbXc
                                                                                                                  { __DEFAULT ->
                                                                                                                        (#,#) [s2#_sbbXc
                                                                                                                               GHC.IO.Handle.Text.hGetChar5];
                                                                                                                  };
                                                                                                              '\n'# ->
                                                                                                                  let {
                                                                                                                    sat_sbbXm [Occ=Once]
                                                                                                                      :: GHC.IO.Buffer.Buffer
                                                                                                                           GHC.IO.Buffer.CharBufElem
                                                                                                                    [LclId] =
                                                                                                                        [dt12_sbbWs
                                                                                                                         buf3_sbbX6] \u []
                                                                                                                            case
                                                                                                                                buf3_sbbX6
                                                                                                                            of
                                                                                                                            { GHC.IO.Buffer.Buffer dt14_sbbXe [Occ=Once*]
                                                                                                                                                   dt15_sbbXf [Occ=Once*]
                                                                                                                                                   ds15_sbbXg [Occ=Once*]
                                                                                                                                                   dt16_sbbXh [Occ=Once*]
                                                                                                                                                   _ [Occ=Dead]
                                                                                                                                                   dt18_sbbXj ->
                                                                                                                                  case
                                                                                                                                      +# [dt12_sbbWs
                                                                                                                                          1#]
                                                                                                                                  of
                                                                                                                                  ipv9_sbbXk [Dmd=<S,U>]
                                                                                                                                  { __DEFAULT ->
                                                                                                                                        case
                                                                                                                                            ==# [ipv9_sbbXk
                                                                                                                                                 dt18_sbbXj]
                                                                                                                                        of
                                                                                                                                        { __DEFAULT ->
                                                                                                                                              GHC.IO.Buffer.Buffer [dt14_sbbXe
                                                                                                                                                                    dt15_sbbXf
                                                                                                                                                                    ds15_sbbXg
                                                                                                                                                                    dt16_sbbXh
                                                                                                                                                                    ipv9_sbbXk
                                                                                                                                                                    dt18_sbbXj];
                                                                                                                                          1# ->
                                                                                                                                              GHC.IO.Buffer.Buffer [dt14_sbbXe
                                                                                                                                                                    dt15_sbbXf
                                                                                                                                                                    ds15_sbbXg
                                                                                                                                                                    dt16_sbbXh
                                                                                                                                                                    0#
                                                                                                                                                                    0#];
                                                                                                                                        };
                                                                                                                                  };
                                                                                                                            };
                                                                                                                  } in 
                                                                                                                    case
                                                                                                                        writeMutVar# [dt2_sbbVI
                                                                                                                                      sat_sbbXm
                                                                                                                                      s'1_sbbXa]
                                                                                                                    of
                                                                                                                    s2#_sbbXn
                                                                                                                    { __DEFAULT ->
                                                                                                                          (#,#) [s2#_sbbXn
                                                                                                                                 GHC.IO.Handle.Text.hGetChar4];
                                                                                                                    };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                            };
                                                                  } in 
                                                                    case
                                                                        ==# [ipv4_sbbWc ww5_sbbW7]
                                                                    of
                                                                    { __DEFAULT ->
                                                                          let {
                                                                            sat_sbbXp [Occ=Once]
                                                                              :: GHC.IO.Buffer.Buffer
                                                                                   GHC.Types.Char
                                                                            [LclId] =
                                                                                CCCS GHC.IO.Buffer.Buffer! [ww_sbbW2
                                                                                                            ww1_sbbW3
                                                                                                            ww2_sbbW4
                                                                                                            ww3_sbbW5
                                                                                                            ipv4_sbbWc
                                                                                                            ww5_sbbW7];
                                                                          } in 
                                                                            $j_sbbWn
                                                                                ww_sbbW2
                                                                                ww1_sbbW3
                                                                                ww2_sbbW4
                                                                                ww3_sbbW5
                                                                                ipv4_sbbWc
                                                                                ww5_sbbW7
                                                                                sat_sbbXp;
                                                                      1# ->
                                                                          let {
                                                                            sat_sbbXq [Occ=Once]
                                                                              :: GHC.IO.Buffer.Buffer
                                                                                   GHC.Types.Char
                                                                            [LclId] =
                                                                                CCCS GHC.IO.Buffer.Buffer! [ww_sbbW2
                                                                                                            ww1_sbbW3
                                                                                                            ww2_sbbW4
                                                                                                            ww3_sbbW5
                                                                                                            0#
                                                                                                            0#];
                                                                          } in 
                                                                            $j_sbbWn
                                                                                ww_sbbW2
                                                                                ww1_sbbW3
                                                                                ww2_sbbW4
                                                                                ww3_sbbW5
                                                                                0#
                                                                                0#
                                                                                sat_sbbXq;
                                                                    };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                          } in 
                            case ==# [dt7_sbbVY dt8_sbbVZ] of {
                              __DEFAULT ->
                                  $w$j_sbbW0
                                      ipv_sbbVR
                                      dt4_sbbVU
                                      dt5_sbbVV
                                      ds10_sbbVW
                                      dt6_sbbVX
                                      dt7_sbbVY
                                      dt8_sbbVZ;
                              1# ->
                                  case
                                      GHC.IO.Handle.Internals.hLookAhead_2
                                          wild_sbbVz wild1_sbbVT ipv_sbbVR
                                  of
                                  { (#,#) ipv2_sbbXt [Occ=Once] ipv3_sbbXu [Occ=Once!] ->
                                        case ipv3_sbbXu of {
                                          GHC.IO.Buffer.Buffer ww1_sbbXw [Occ=Once]
                                                               ww2_sbbXx [Occ=Once]
                                                               ww3_sbbXy [Occ=Once]
                                                               ww4_sbbXz [Occ=Once]
                                                               ww5_sbbXA [Occ=Once]
                                                               ww6_sbbXB [Occ=Once] ->
                                              $w$j_sbbW0
                                                  ipv2_sbbXt
                                                  ww1_sbbXw
                                                  ww2_sbbXx
                                                  ww3_sbbXy
                                                  ww4_sbbXz
                                                  ww5_sbbXA
                                                  ww6_sbbXB;
                                        };
                                  };
                            };
                    };
              };
        };

GHC.IO.Handle.Text.hGetChar1
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
[GblId, Arity=2, Str=<L,U>, Unf=OtherCon []] =
    [] \r [handle_sbbXC eta_B1]
        GHC.IO.Handle.Internals.wantReadableHandle_1
            GHC.IO.Handle.Text.hGetChar6
            handle_sbbXC
            GHC.IO.Handle.Text.hGetChar2
            eta_B1;

GHC.IO.Handle.Text.hGetChar
  :: GHC.IO.Handle.Types.Handle -> GHC.Types.IO GHC.Types.Char
[GblId, Arity=2, Str=<L,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.IO.Handle.Text.hGetChar1 eta_B2 eta_B1;

GHC.IO.Handle.Text.hGetBuf3 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

$wunpack_nl_rb6WF
  :: GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> [GHC.Types.Char]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           ([GHC.Types.Char], GHC.Types.Int) #)
[GblId,
 Arity=6,
 Caf=NoCafRefs,
 Str=<L,U><L,U><S,U><S,U><L,U><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [ww_sbbXD
                    ww1_sbbXE
                    ww2_sbbXF
                    ww3_sbbXG
                    w_sbbXH
                    w1_sbbXI]
        case ==# [ww2_sbbXF ww3_sbbXG] of {
          __DEFAULT ->
              case -# [ww3_sbbXG 1#] of sat_sbbXK {
                __DEFAULT ->
                    case readWideCharOffAddr# [ww_sbbXD sat_sbbXK w1_sbbXI] of {
                      (#,#) ipv_sbbXM [Occ=Once*] ipv1_sbbXN [Occ=Once!] ->
                          let {
                            $wunpackRB_sbbXO [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
                              :: [GHC.Types.Char]
                                 -> GHC.Prim.Int#
                                 -> GHC.Prim.State# GHC.Prim.RealWorld
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                            [LclId, Arity=3, Str=<L,U><S,U><S,U>, Unf=OtherCon []] =
                                sat-only [ww_sbbXD ww2_sbbXF $wunpackRB_sbbXO] \r [w2_sbbXP
                                                                                   ww4_sbbXQ
                                                                                   w3_sbbXR]
                                    case <# [ww4_sbbXQ ww2_sbbXF] of {
                                      __DEFAULT ->
                                          case
                                              readWideCharOffAddr# [ww_sbbXD ww4_sbbXQ w3_sbbXR]
                                          of
                                          { (#,#) ipv2_sbbXU [Occ=Once*] ipv3_sbbXV [Occ=Once!] ->
                                                case ipv3_sbbXV of wild_sbbXW {
                                                  __DEFAULT ->
                                                      case -# [ww4_sbbXQ 1#] of sat_sbbXZ {
                                                        __DEFAULT ->
                                                            let {
                                                              sat_sbbXX [Occ=Once]
                                                                :: GHC.IO.Buffer.CharBufElem
                                                              [LclId] =
                                                                  CCCS GHC.Types.C#! [wild_sbbXW]; } in
                                                            let {
                                                              sat_sbbXY [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId] =
                                                                  CCCS :! [sat_sbbXX w2_sbbXP];
                                                            } in 
                                                              $wunpackRB_sbbXO
                                                                  sat_sbbXY sat_sbbXZ ipv2_sbbXU;
                                                      };
                                                  '\n'# ->
                                                      case ># [ww4_sbbXQ ww2_sbbXF] of {
                                                        __DEFAULT ->
                                                            case -# [ww4_sbbXQ 1#] of sat_sbbY2 {
                                                              __DEFAULT ->
                                                                  let {
                                                                    sat_sbbY1 [Occ=Once]
                                                                      :: [GHC.Types.Char]
                                                                    [LclId] =
                                                                        CCCS :! [GHC.IO.Handle.Text.hGetChar4
                                                                                 w2_sbbXP];
                                                                  } in 
                                                                    $wunpackRB_sbbXO
                                                                        sat_sbbY1
                                                                        sat_sbbY2
                                                                        ipv2_sbbXU;
                                                            };
                                                        1# ->
                                                            case -# [ww4_sbbXQ 1#] of sat_sbbY3 {
                                                              __DEFAULT ->
                                                                  case
                                                                      readWideCharOffAddr# [ww_sbbXD
                                                                                            sat_sbbY3
                                                                                            ipv2_sbbXU]
                                                                  of
                                                                  { (#,#) ipv4_sbbY5 [Occ=Once*]
                                                                          ipv5_sbbY6 [Occ=Once!] ->
                                                                        case ipv5_sbbY6 of {
                                                                          __DEFAULT ->
                                                                              case
                                                                                  -# [ww4_sbbXQ 1#]
                                                                              of
                                                                              sat_sbbY9
                                                                              { __DEFAULT ->
                                                                                    let {
                                                                                      sat_sbbY8 [Occ=Once]
                                                                                        :: [GHC.Types.Char]
                                                                                      [LclId] =
                                                                                          CCCS :! [GHC.IO.Handle.Text.hGetChar4
                                                                                                   w2_sbbXP];
                                                                                    } in 
                                                                                      $wunpackRB_sbbXO
                                                                                          sat_sbbY8
                                                                                          sat_sbbY9
                                                                                          ipv4_sbbY5;
                                                                              };
                                                                          '\r'# ->
                                                                              case
                                                                                  -# [ww4_sbbXQ 2#]
                                                                              of
                                                                              sat_sbbYb
                                                                              { __DEFAULT ->
                                                                                    let {
                                                                                      sat_sbbYa [Occ=Once]
                                                                                        :: [GHC.Types.Char]
                                                                                      [LclId] =
                                                                                          CCCS :! [GHC.IO.Handle.Text.hGetChar4
                                                                                                   w2_sbbXP];
                                                                                    } in 
                                                                                      $wunpackRB_sbbXO
                                                                                          sat_sbbYa
                                                                                          sat_sbbYb
                                                                                          ipv4_sbbY5;
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                      1# -> (#,#) [w3_sbbXR w2_sbbXP];
                                    };
                          } in 
                            case ipv1_sbbXN of {
                              __DEFAULT ->
                                  case -# [ww3_sbbXG 1#] of sat_sbbYd {
                                    __DEFAULT ->
                                        case $wunpackRB_sbbXO w_sbbXH sat_sbbYd ipv_sbbXM of {
                                          (#,#) ipv2_sbbYf [Occ=Once] ipv3_sbbYg [Occ=Once] ->
                                              case touch# [ww1_sbbXE ipv2_sbbYf] of s'_sbbYh {
                                                __DEFAULT ->
                                                    let {
                                                      sat_sbbYi [Occ=Once] :: GHC.Types.Int
                                                      [LclId] =
                                                          CCCS GHC.Types.I#! [ww3_sbbXG]; } in
                                                    let {
                                                      sat_sbbYj [Occ=Once]
                                                        :: ([GHC.Types.Char], GHC.Types.Int)
                                                      [LclId] =
                                                          CCCS (,)! [ipv3_sbbYg sat_sbbYi];
                                                    } in  (#,#) [s'_sbbYh sat_sbbYj];
                                              };
                                        };
                                  };
                              '\r'# ->
                                  case -# [ww3_sbbXG 2#] of sat_sbbYk {
                                    __DEFAULT ->
                                        case $wunpackRB_sbbXO w_sbbXH sat_sbbYk ipv_sbbXM of {
                                          (#,#) ipv2_sbbYm [Occ=Once] ipv3_sbbYn [Occ=Once] ->
                                              case touch# [ww1_sbbXE ipv2_sbbYm] of s'_sbbYo {
                                                __DEFAULT ->
                                                    case -# [ww3_sbbXG 1#] of sat_sbbYp {
                                                      __DEFAULT ->
                                                          let {
                                                            sat_sbbYq [Occ=Once] :: GHC.Types.Int
                                                            [LclId] =
                                                                CCCS GHC.Types.I#! [sat_sbbYp]; } in
                                                          let {
                                                            sat_sbbYr [Occ=Once]
                                                              :: ([GHC.Types.Char], GHC.Types.Int)
                                                            [LclId] =
                                                                CCCS (,)! [ipv3_sbbYn sat_sbbYq];
                                                          } in  (#,#) [s'_sbbYo sat_sbbYr];
                                                    };
                                              };
                                        };
                                  };
                            };
                    };
              };
          1# ->
              let {
                sat_sbbYs [Occ=Once] :: ([GHC.Types.Char], GHC.Types.Int)
                [LclId] =
                    CCCS (,)! [w_sbbXH GHC.IO.Handle.Text.hGetBuf3];
              } in  (#,#) [w1_sbbXI sat_sbbYs];
        };

GHC.IO.Handle.Text.hGetContents4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetContents"#;

GHC.IO.Handle.Text.hGetContents3 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.IO.Handle.Text.hGetContents4;

lvl3_rb6WG :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "\r"#;

lvl4_rb6WH :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl3_rb6WG;

$wlvl_rb6WI
  :: GHC.IO.Handle.Types.Handle
     -> GHC.IO.Exception.IOErrorType
     -> GHC.Base.String
     -> GHC.Base.Maybe Foreign.C.Types.CInt
     -> GHC.Base.Maybe GHC.IO.FilePath
     -> [GHC.Types.Char]
[GblId,
 Arity=5,
 Str=<B,U><B,U><B,U><B,U><B,1*U>x,
 Unf=OtherCon []] =
    sat-only [] \r [w_sbbYt ww_sbbYu ww1_sbbYv ww2_sbbYw ww3_sbbYx]
        let {
          sat_sbbYH [Occ=Once] :: GHC.Base.Maybe GHC.IO.FilePath
          [LclId] =
              [w_sbbYt ww3_sbbYx] \u []
                  case ww3_sbbYx of wild1_sbbYz {
                    GHC.Base.Nothing ->
                        case w_sbbYt of {
                          GHC.IO.Handle.Types.FileHandle path_sbbYB [Occ=Once]
                                                         _ [Occ=Dead] ->
                              GHC.Base.Just [path_sbbYB];
                          GHC.IO.Handle.Types.DuplexHandle path_sbbYD [Occ=Once]
                                                           _ [Occ=Dead]
                                                           _ [Occ=Dead] ->
                              GHC.Base.Just [path_sbbYD];
                        };
                    GHC.Base.Just _ [Occ=Dead] -> wild1_sbbYz;
                  }; } in
        let {
          sat_sbbYy [Occ=Once] :: GHC.Base.Maybe GHC.IO.Handle.Types.Handle
          [LclId] =
              CCCS GHC.Base.Just! [w_sbbYt]; } in
        let {
          sat_sbbYI [Occ=Once] :: GHC.IO.Exception.IOException
          [LclId] =
              CCCS GHC.IO.Exception.IOError! [sat_sbbYy
                                              ww_sbbYu
                                              GHC.IO.Handle.Text.hGetContents3
                                              ww1_sbbYv
                                              ww2_sbbYw
                                              sat_sbbYH];
        } in 
          GHC.Exception.throw
              GHC.IO.Exception.$fExceptionIOException sat_sbbYI;

lvl5_rb6WJ :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "delayed read on closed handle"#;

lvl6_rb6WK :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl5_rb6WJ;

lvl7_rb6WL
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.IO.Handle.Types.Handle__, [GHC.Types.Char]) #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    sat-only [] \r [handle_sbbYJ eta_sbbYK]
        let {
          sat_sbbYN [Occ=Once] :: GHC.Exception.SomeException
          [LclId] =
              [handle_sbbYJ] \u []
                  let {
                    sat_sbbYL [Occ=Once] :: GHC.Base.Maybe GHC.IO.Handle.Types.Handle
                    [LclId] =
                        CCCS GHC.Base.Just! [handle_sbbYJ]; } in
                  let {
                    sat_sbbYM [Occ=Once] :: GHC.IO.Exception.IOException
                    [LclId] =
                        CCCS GHC.IO.Exception.IOError! [sat_sbbYL
                                                        GHC.IO.Exception.IllegalOperation
                                                        GHC.IO.Handle.Text.hGetContents3
                                                        lvl6_rb6WK
                                                        GHC.Base.Nothing
                                                        GHC.Base.Nothing];
                  } in 
                    GHC.IO.Exception.$fExceptionIOException_$ctoException sat_sbbYM;
        } in  raiseIO# [sat_sbbYN eta_sbbYK];

lvl8_rb6WM :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "illegal handle type"#;

lvl9_rb6WN :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl8_rb6WM;

lvl10_rb6WO
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.IO.Handle.Types.Handle__, [GHC.Types.Char]) #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    sat-only [] \r [handle_sbbYO eta_sbbYP]
        let {
          sat_sbbYS [Occ=Once] :: GHC.Exception.SomeException
          [LclId] =
              [handle_sbbYO] \u []
                  let {
                    sat_sbbYQ [Occ=Once] :: GHC.Base.Maybe GHC.IO.Handle.Types.Handle
                    [LclId] =
                        CCCS GHC.Base.Just! [handle_sbbYO]; } in
                  let {
                    sat_sbbYR [Occ=Once] :: GHC.IO.Exception.IOException
                    [LclId] =
                        CCCS GHC.IO.Exception.IOError! [sat_sbbYQ
                                                        GHC.IO.Exception.IllegalOperation
                                                        GHC.IO.Handle.Text.hGetContents3
                                                        lvl9_rb6WN
                                                        GHC.Base.Nothing
                                                        GHC.Base.Nothing];
                  } in 
                    GHC.IO.Exception.$fExceptionIOException_$ctoException sat_sbbYR;
        } in  raiseIO# [sat_sbbYS eta_sbbYP];

GHC.IO.Handle.Text.hGetContents2 [Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [handle_sbbYT eta_sbbYU]
        let {
          sat_sbc1l [Occ=Once] :: GHC.Types.IO [GHC.Types.Char]
          [LclId] =
              [handle_sbbYT] \r [s_sbbYV]
                  case noDuplicate# [s_sbbYV] of s'_sbbYW {
                    __DEFAULT ->
                        let {
                          act_sbbYX [Occ=Once*, Dmd=<C(S),C(U)>]
                            :: GHC.IO.Handle.Types.Handle__
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     (GHC.IO.Handle.Types.Handle__, [GHC.Types.Char]) #)
                          [LclId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
                              [handle_sbbYT] \r [handle__sbbYY eta1_sbbYZ]
                                  case handle__sbbYY of wild_sbbZ0 {
                                    GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 ds2_sbbZ5 [Occ=Once!]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 dt2_sbbZ9
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 ds7_sbbZe
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead] ->
                                        case ds2_sbbZ5 of {
                                          __DEFAULT -> lvl10_rb6WO handle_sbbYT eta1_sbbYZ;
                                          GHC.IO.Handle.Types.ClosedHandle ->
                                              lvl7_rb6WL handle_sbbYT eta1_sbbYZ;
                                          GHC.IO.Handle.Types.SemiClosedHandle ->
                                              case readMutVar# [dt2_sbbZ9 eta1_sbbYZ] of {
                                                (#,#) ipv_sbbZj [Occ=Once] ipv1_sbbZk ->
                                                    let {
                                                      sat_sbc1e [Occ=Once]
                                                        :: GHC.Exception.SomeException
                                                           -> GHC.Prim.State# GHC.Prim.RealWorld
                                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                 (GHC.IO.Handle.Types.Handle__,
                                                                  [GHC.Types.Char]) #)
                                                      [LclId] =
                                                          [handle_sbbYT
                                                           wild_sbbZ0
                                                           ipv1_sbbZk] \r [e1_sbc0J eta2_sbc0K]
                                                              case e1_sbc0J of wild2_sbc0L {
                                                                GHC.Exception.SomeException $dException1_sbc0M [Occ=Once]
                                                                                            e3_sbc0N [Occ=Once] ->
                                                                    case
                                                                        GHC.Exception.$p1Exception
                                                                            $dException1_sbc0M
                                                                    of
                                                                    sat_sbc0O
                                                                    { __DEFAULT ->
                                                                          case
                                                                              Data.Typeable.Internal.sameTypeRep
                                                                                  sat_sbc0O
                                                                                  GHC.IO.Exception.$fExceptionIOException4
                                                                          of
                                                                          { GHC.Types.False ->
                                                                                raiseIO# [wild2_sbc0L
                                                                                          eta2_sbc0K];
                                                                            GHC.Types.True ->
                                                                                case
                                                                                    GHC.IO.Handle.Internals.hClose_help1
                                                                                        wild_sbbZ0
                                                                                        eta2_sbc0K
                                                                                of
                                                                                { (#,#) ipv2_sbc0R [Occ=Once]
                                                                                        ipv3_sbc0S [Occ=Once!] ->
                                                                                      case
                                                                                          ipv3_sbc0S
                                                                                      of
                                                                                      { (,) handle_'_sbc0U [Occ=Once]
                                                                                            _ [Occ=Dead] ->
                                                                                            let {
                                                                                              sat_sbc1c [Occ=Once]
                                                                                                :: [GHC.Types.Char]
                                                                                              [LclId] =
                                                                                                  [handle_sbbYT
                                                                                                   ipv1_sbbZk
                                                                                                   e3_sbc0N] \u []
                                                                                                      case
                                                                                                          e3_sbc0N
                                                                                                      of
                                                                                                      { GHC.IO.Exception.IOError _ [Occ=Dead]
                                                                                                                                 ds14_sbc0Y [Occ=Once!]
                                                                                                                                 _ [Occ=Dead]
                                                                                                                                 ds16_sbc10 [Occ=Once]
                                                                                                                                 ds17_sbc11 [Occ=Once]
                                                                                                                                 ds18_sbc12 [Occ=Once] ->
                                                                                                            case
                                                                                                                ds14_sbc0Y
                                                                                                            of
                                                                                                            wild6_sbc13
                                                                                                            { __DEFAULT ->
                                                                                                                  $wlvl_rb6WI
                                                                                                                      handle_sbbYT
                                                                                                                      wild6_sbc13
                                                                                                                      ds16_sbc10
                                                                                                                      ds17_sbc11
                                                                                                                      ds18_sbc12;
                                                                                                              GHC.IO.Exception.EOF ->
                                                                                                                  case
                                                                                                                      ipv1_sbbZk
                                                                                                                  of
                                                                                                                  { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                                                                         _ [Occ=Dead]
                                                                                                                                         _ [Occ=Dead]
                                                                                                                                         _ [Occ=Dead]
                                                                                                                                         dt7_sbc19 [Occ=Once]
                                                                                                                                         dt8_sbc1a [Occ=Once] ->
                                                                                                                        case
                                                                                                                            ==# [dt7_sbc19
                                                                                                                                 dt8_sbc1a]
                                                                                                                        of
                                                                                                                        { __DEFAULT ->
                                                                                                                              lvl4_rb6WH;
                                                                                                                          1# ->
                                                                                                                              [] [];
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      }; } in
                                                                                            let {
                                                                                              sat_sbc1d [Occ=Once]
                                                                                                :: (GHC.IO.Handle.Types.Handle__,
                                                                                                    [GHC.Types.Char])
                                                                                              [LclId] =
                                                                                                  CCCS (,)! [handle_'_sbc0U
                                                                                                             sat_sbc1c];
                                                                                            } in 
                                                                                              (#,#) [ipv2_sbc0R
                                                                                                     sat_sbc1d];
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              }; } in
                                                    let {
                                                      sat_sbc0I [Occ=Once]
                                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                 (GHC.IO.Handle.Types.Handle__,
                                                                  [GHC.Types.Char]) #)
                                                      [LclId] =
                                                          [handle_sbbYT
                                                           wild_sbbZ0
                                                           dt2_sbbZ9
                                                           ds7_sbbZe
                                                           ipv1_sbbZk] \r [s1_sbbZl]
                                                              case ipv1_sbbZk of wild2_sbbZm {
                                                                GHC.IO.Buffer.Buffer dt4_sbbZn
                                                                                     dt5_sbbZo
                                                                                     ds_sbbZp [Occ=Once*]
                                                                                     dt6_sbbZq [Occ=Once*]
                                                                                     dt7_sbbZr
                                                                                     dt8_sbbZs ->
                                                                    let-no-escape {
                                                                      $w$j_sbbZt [InlPrag=NOUSERINLINE[0],
                                                                                  Occ=Once*!T[7],
                                                                                  Dmd=<L,1*C1(C1(C1(C1(C1(C1(C1(U)))))))>]
                                                                        :: GHC.Prim.State#
                                                                             GHC.Prim.RealWorld
                                                                           -> GHC.Prim.Addr#
                                                                           -> GHC.ForeignPtr.ForeignPtrContents
                                                                           -> GHC.IO.Buffer.BufferState
                                                                           -> GHC.Prim.Int#
                                                                           -> GHC.Prim.Int#
                                                                           -> GHC.Prim.Int#
                                                                           -> (# GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld,
                                                                                 (GHC.IO.Handle.Types.Handle__,
                                                                                  [GHC.Types.Char]) #)
                                                                      [LclId[JoinId(7)],
                                                                       Arity=7,
                                                                       Str=<S,U><L,U><L,U><L,U><L,U><L,U><L,U>,
                                                                       Unf=OtherCon []] =
                                                                          sat-only [handle_sbbYT
                                                                                    wild_sbbZ0
                                                                                    dt2_sbbZ9
                                                                                    ds7_sbbZe] \r [w_sbbZu
                                                                                                   ww_sbbZv
                                                                                                   ww1_sbbZw
                                                                                                   ww2_sbbZx
                                                                                                   ww3_sbbZy
                                                                                                   ww4_sbbZz
                                                                                                   ww5_sbbZA]
                                                                              case
                                                                                  GHC.IO.Handle.Text.hGetContents2
                                                                                      handle_sbbYT
                                                                                      w_sbbZu
                                                                              of
                                                                              { (#,#) ipv2_sbbZC [Occ=Once*]
                                                                                      ipv3_sbbZD [Occ=Once*] ->
                                                                                    case
                                                                                        ds7_sbbZe
                                                                                    of
                                                                                    { GHC.IO.Handle.Types.LF ->
                                                                                          case
                                                                                              ==# [ww4_sbbZz
                                                                                                   ww5_sbbZA]
                                                                                          of
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    -# [ww5_sbbZA
                                                                                                        1#]
                                                                                                of
                                                                                                sat_sbbZY
                                                                                                { __DEFAULT ->
                                                                                                      let-no-escape {
                                                                                                        $j_sbbZG [Occ=OnceL!T[2],
                                                                                                                  Dmd=<C(C(S)),C(C1(U))>]
                                                                                                          :: GHC.Prim.State#
                                                                                                               GHC.Prim.RealWorld
                                                                                                             -> [GHC.IO.Buffer.CharBufElem]
                                                                                                             -> (# GHC.Prim.State#
                                                                                                                     GHC.Prim.RealWorld,
                                                                                                                   (GHC.IO.Handle.Types.Handle__,
                                                                                                                    [GHC.Types.Char]) #)
                                                                                                        [LclId[JoinId(2)],
                                                                                                         Arity=2,
                                                                                                         Str=<S,U><L,U>,
                                                                                                         Unf=OtherCon []] =
                                                                                                            sat-only [wild_sbbZ0
                                                                                                                      dt2_sbbZ9
                                                                                                                      ww_sbbZv
                                                                                                                      ww1_sbbZw
                                                                                                                      ww2_sbbZx
                                                                                                                      ww3_sbbZy] \r [ipv4_sbbZH
                                                                                                                                     ipv5_sbbZI]
                                                                                                                case
                                                                                                                    touch# [ww1_sbbZw
                                                                                                                            ipv4_sbbZH]
                                                                                                                of
                                                                                                                s'1_sbbZJ
                                                                                                                { __DEFAULT ->
                                                                                                                      let {
                                                                                                                        sat_sbbZK [Occ=Once]
                                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                                                        [LclId] =
                                                                                                                            CCCS GHC.IO.Buffer.Buffer! [ww_sbbZv
                                                                                                                                                        ww1_sbbZw
                                                                                                                                                        ww2_sbbZx
                                                                                                                                                        ww3_sbbZy
                                                                                                                                                        0#
                                                                                                                                                        0#];
                                                                                                                      } in 
                                                                                                                        case
                                                                                                                            writeMutVar# [dt2_sbbZ9
                                                                                                                                          sat_sbbZK
                                                                                                                                          s'1_sbbZJ]
                                                                                                                        of
                                                                                                                        s2#_sbbZL
                                                                                                                        { __DEFAULT ->
                                                                                                                              let {
                                                                                                                                sat_sbbZM [Occ=Once]
                                                                                                                                  :: (GHC.IO.Handle.Types.Handle__,
                                                                                                                                      [GHC.Types.Char])
                                                                                                                                [LclId] =
                                                                                                                                    CCCS (,)! [wild_sbbZ0
                                                                                                                                               ipv5_sbbZI];
                                                                                                                              } in 
                                                                                                                                (#,#) [s2#_sbbZL
                                                                                                                                       sat_sbbZM];
                                                                                                                        };
                                                                                                                };
                                                                                                      } in 
                                                                                                        let-no-escape {
                                                                                                          $wunpackRB_sbbZN [InlPrag=NOUSERINLINE[0],
                                                                                                                            Occ=LoopBreakerT[3]]
                                                                                                            :: [GHC.IO.Buffer.CharBufElem]
                                                                                                               -> GHC.Prim.Int#
                                                                                                               -> GHC.Prim.State#
                                                                                                                    GHC.Prim.RealWorld
                                                                                                               -> (# GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld,
                                                                                                                     (GHC.IO.Handle.Types.Handle__,
                                                                                                                      [GHC.Types.Char]) #)
                                                                                                          [LclId[JoinId(3)],
                                                                                                           Arity=3,
                                                                                                           Str=<L,U><S,U><S,U>,
                                                                                                           Unf=OtherCon []] =
                                                                                                              sat-only [ww_sbbZv
                                                                                                                        ww4_sbbZz
                                                                                                                        $j_sbbZG
                                                                                                                        $wunpackRB_sbbZN] \r [w1_sbbZO
                                                                                                                                              ww6_sbbZP
                                                                                                                                              w2_sbbZQ]
                                                                                                                  case
                                                                                                                      <# [ww6_sbbZP
                                                                                                                          ww4_sbbZz]
                                                                                                                  of
                                                                                                                  { __DEFAULT ->
                                                                                                                        case
                                                                                                                            readWideCharOffAddr# [ww_sbbZv
                                                                                                                                                  ww6_sbbZP
                                                                                                                                                  w2_sbbZQ]
                                                                                                                        of
                                                                                                                        { (#,#) ipv4_sbbZT [Occ=Once]
                                                                                                                                ipv5_sbbZU [Occ=Once] ->
                                                                                                                              case
                                                                                                                                  -# [ww6_sbbZP
                                                                                                                                      1#]
                                                                                                                              of
                                                                                                                              sat_sbbZX
                                                                                                                              { __DEFAULT ->
                                                                                                                                    let {
                                                                                                                                      sat_sbbZV [Occ=Once]
                                                                                                                                        :: GHC.IO.Buffer.CharBufElem
                                                                                                                                      [LclId] =
                                                                                                                                          CCCS GHC.Types.C#! [ipv5_sbbZU]; } in
                                                                                                                                    let {
                                                                                                                                      sat_sbbZW [Occ=Once]
                                                                                                                                        :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                      [LclId] =
                                                                                                                                          CCCS :! [sat_sbbZV
                                                                                                                                                   w1_sbbZO];
                                                                                                                                    } in 
                                                                                                                                      $wunpackRB_sbbZN
                                                                                                                                          sat_sbbZW
                                                                                                                                          sat_sbbZX
                                                                                                                                          ipv4_sbbZT;
                                                                                                                              };
                                                                                                                        };
                                                                                                                    1# ->
                                                                                                                        $j_sbbZG
                                                                                                                            w2_sbbZQ
                                                                                                                            w1_sbbZO;
                                                                                                                  };
                                                                                                        } in 
                                                                                                          $wunpackRB_sbbZN
                                                                                                              ipv3_sbbZD
                                                                                                              sat_sbbZY
                                                                                                              ipv2_sbbZC;
                                                                                                };
                                                                                            1# ->
                                                                                                let {
                                                                                                  sat_sbbZZ [Occ=Once]
                                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                                         GHC.IO.Buffer.CharBufElem
                                                                                                  [LclId] =
                                                                                                      CCCS GHC.IO.Buffer.Buffer! [ww_sbbZv
                                                                                                                                  ww1_sbbZw
                                                                                                                                  ww2_sbbZx
                                                                                                                                  ww3_sbbZy
                                                                                                                                  0#
                                                                                                                                  0#];
                                                                                                } in 
                                                                                                  case
                                                                                                      writeMutVar# [dt2_sbbZ9
                                                                                                                    sat_sbbZZ
                                                                                                                    ipv2_sbbZC]
                                                                                                  of
                                                                                                  s2#_sbc00
                                                                                                  { __DEFAULT ->
                                                                                                        let {
                                                                                                          sat_sbc01 [Occ=Once]
                                                                                                            :: (GHC.IO.Handle.Types.Handle__,
                                                                                                                [GHC.Types.Char])
                                                                                                          [LclId] =
                                                                                                              CCCS (,)! [wild_sbbZ0
                                                                                                                         ipv3_sbbZD];
                                                                                                        } in 
                                                                                                          (#,#) [s2#_sbc00
                                                                                                                 sat_sbc01];
                                                                                                  };
                                                                                          };
                                                                                      GHC.IO.Handle.Types.CRLF ->
                                                                                          case
                                                                                              $wunpack_nl_rb6WF
                                                                                                  ww_sbbZv
                                                                                                  ww1_sbbZw
                                                                                                  ww4_sbbZz
                                                                                                  ww5_sbbZA
                                                                                                  ipv3_sbbZD
                                                                                                  ipv2_sbbZC
                                                                                          of
                                                                                          { (#,#) ipv4_sbc03 [Occ=Once]
                                                                                                  ipv5_sbc04 [Occ=Once!] ->
                                                                                                case
                                                                                                    ipv5_sbc04
                                                                                                of
                                                                                                { (,) s2_sbc06 [Occ=Once]
                                                                                                      r_sbc07 [Occ=Once!] ->
                                                                                                      let {
                                                                                                        sat_sbc0b [Occ=Once]
                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                                        [LclId] =
                                                                                                            [ww_sbbZv
                                                                                                             ww1_sbbZw
                                                                                                             ww2_sbbZx
                                                                                                             ww3_sbbZy
                                                                                                             ww5_sbbZA
                                                                                                             r_sbc07] \u []
                                                                                                                case
                                                                                                                    r_sbc07
                                                                                                                of
                                                                                                                { GHC.Types.I# x_sbc09 ->
                                                                                                                      case
                                                                                                                          ==# [x_sbc09
                                                                                                                               ww5_sbbZA]
                                                                                                                      of
                                                                                                                      { __DEFAULT ->
                                                                                                                            GHC.IO.Buffer.Buffer [ww_sbbZv
                                                                                                                                                  ww1_sbbZw
                                                                                                                                                  ww2_sbbZx
                                                                                                                                                  ww3_sbbZy
                                                                                                                                                  x_sbc09
                                                                                                                                                  ww5_sbbZA];
                                                                                                                        1# ->
                                                                                                                            GHC.IO.Buffer.Buffer [ww_sbbZv
                                                                                                                                                  ww1_sbbZw
                                                                                                                                                  ww2_sbbZx
                                                                                                                                                  ww3_sbbZy
                                                                                                                                                  0#
                                                                                                                                                  0#];
                                                                                                                      };
                                                                                                                };
                                                                                                      } in 
                                                                                                        case
                                                                                                            writeMutVar# [dt2_sbbZ9
                                                                                                                          sat_sbc0b
                                                                                                                          ipv4_sbc03]
                                                                                                        of
                                                                                                        s2#_sbc0c
                                                                                                        { __DEFAULT ->
                                                                                                              let {
                                                                                                                sat_sbc0d [Occ=Once]
                                                                                                                  :: (GHC.IO.Handle.Types.Handle__,
                                                                                                                      [GHC.Types.Char])
                                                                                                                [LclId] =
                                                                                                                    CCCS (,)! [wild_sbbZ0
                                                                                                                               s2_sbc06];
                                                                                                              } in 
                                                                                                                (#,#) [s2#_sbc0c
                                                                                                                       sat_sbc0d];
                                                                                                        };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                    } in 
                                                                      case
                                                                          -# [dt8_sbbZs dt7_sbbZr]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            $w$j_sbbZt
                                                                                s1_sbbZl
                                                                                dt4_sbbZn
                                                                                dt5_sbbZo
                                                                                ds_sbbZp
                                                                                dt6_sbbZq
                                                                                dt7_sbbZr
                                                                                dt8_sbbZs;
                                                                        0# ->
                                                                            case
                                                                                GHC.IO.Handle.Internals.hLookAhead_2
                                                                                    wild_sbbZ0
                                                                                    wild2_sbbZm
                                                                                    s1_sbbZl
                                                                            of
                                                                            { (#,#) ipv2_sbc0g [Occ=Once]
                                                                                    ipv3_sbc0h [Occ=Once!] ->
                                                                                  case
                                                                                      ipv3_sbc0h
                                                                                  of
                                                                                  { GHC.IO.Buffer.Buffer ww1_sbc0j [Occ=Once]
                                                                                                         ww2_sbc0k [Occ=Once]
                                                                                                         ww3_sbc0l [Occ=Once]
                                                                                                         ww4_sbc0m [Occ=Once]
                                                                                                         ww5_sbc0n [Occ=Once]
                                                                                                         ww6_sbc0o [Occ=Once] ->
                                                                                        $w$j_sbbZt
                                                                                            ipv2_sbc0g
                                                                                            ww1_sbc0j
                                                                                            ww2_sbc0k
                                                                                            ww3_sbc0l
                                                                                            ww4_sbc0m
                                                                                            ww5_sbc0n
                                                                                            ww6_sbc0o;
                                                                                  };
                                                                            };
                                                                        1# ->
                                                                            case ds7_sbbZe of {
                                                                              GHC.IO.Handle.Types.LF ->
                                                                                  $w$j_sbbZt
                                                                                      s1_sbbZl
                                                                                      dt4_sbbZn
                                                                                      dt5_sbbZo
                                                                                      ds_sbbZp
                                                                                      dt6_sbbZq
                                                                                      dt7_sbbZr
                                                                                      dt8_sbbZs;
                                                                              GHC.IO.Handle.Types.CRLF ->
                                                                                  case
                                                                                      readWideCharOffAddr# [dt4_sbbZn
                                                                                                            dt7_sbbZr
                                                                                                            s1_sbbZl]
                                                                                  of
                                                                                  { (#,#) ipv2_sbc0r [Occ=Once]
                                                                                          ipv3_sbc0s [Occ=Once!] ->
                                                                                        case
                                                                                            touch# [dt5_sbbZo
                                                                                                    ipv2_sbc0r]
                                                                                        of
                                                                                        s'1_sbc0t
                                                                                        { __DEFAULT ->
                                                                                              case
                                                                                                  ipv3_sbc0s
                                                                                              of
                                                                                              { __DEFAULT ->
                                                                                                    $w$j_sbbZt
                                                                                                        s'1_sbc0t
                                                                                                        dt4_sbbZn
                                                                                                        dt5_sbbZo
                                                                                                        ds_sbbZp
                                                                                                        dt6_sbbZq
                                                                                                        dt7_sbbZr
                                                                                                        dt8_sbbZs;
                                                                                                '\r'# ->
                                                                                                    case
                                                                                                        writeWideCharOffAddr# [dt4_sbbZn
                                                                                                                               0#
                                                                                                                               '\r'#
                                                                                                                               s'1_sbc0t]
                                                                                                    of
                                                                                                    s2_sbc0v
                                                                                                    { __DEFAULT ->
                                                                                                          case
                                                                                                              touch# [dt5_sbbZo
                                                                                                                      s2_sbc0v]
                                                                                                          of
                                                                                                          s'2_sbc0w
                                                                                                          { __DEFAULT ->
                                                                                                                let {
                                                                                                                  sat_sbc0x [Occ=Once]
                                                                                                                    :: GHC.IO.Buffer.CharBuffer
                                                                                                                  [LclId] =
                                                                                                                      CCCS GHC.IO.Buffer.Buffer! [dt4_sbbZn
                                                                                                                                                  dt5_sbbZo
                                                                                                                                                  ds_sbbZp
                                                                                                                                                  dt6_sbbZq
                                                                                                                                                  0#
                                                                                                                                                  1#];
                                                                                                                } in 
                                                                                                                  case
                                                                                                                      GHC.IO.Handle.Internals.hLookAhead_2
                                                                                                                          wild_sbbZ0
                                                                                                                          sat_sbc0x
                                                                                                                          s'2_sbc0w
                                                                                                                  of
                                                                                                                  { (#,#) ipv4_sbc0z [Occ=Once]
                                                                                                                          ipv5_sbc0A [Occ=Once!] ->
                                                                                                                        case
                                                                                                                            ipv5_sbc0A
                                                                                                                        of
                                                                                                                        { GHC.IO.Buffer.Buffer ww1_sbc0C [Occ=Once]
                                                                                                                                               ww2_sbc0D [Occ=Once]
                                                                                                                                               ww3_sbc0E [Occ=Once]
                                                                                                                                               ww4_sbc0F [Occ=Once]
                                                                                                                                               ww5_sbc0G [Occ=Once]
                                                                                                                                               ww6_sbc0H [Occ=Once] ->
                                                                                                                              $w$j_sbbZt
                                                                                                                                  ipv4_sbc0z
                                                                                                                                  ww1_sbc0C
                                                                                                                                  ww2_sbc0D
                                                                                                                                  ww3_sbc0E
                                                                                                                                  ww4_sbc0F
                                                                                                                                  ww5_sbc0G
                                                                                                                                  ww6_sbc0H;
                                                                                                                        };
                                                                                                                  };
                                                                                                          };
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                      };
                                                              };
                                                    } in  catch# [sat_sbc0I sat_sbc1e ipv_sbbZj];
                                              };
                                        };
                                  };
                        } in 
                          case handle_sbbYT of wild_sbc1f {
                            GHC.IO.Handle.Types.FileHandle _ [Occ=Dead] dt_sbc1h [Occ=Once] ->
                                GHC.IO.Handle.Internals.$wwithHandle'
                                    GHC.IO.Handle.Text.hGetContents3
                                    wild_sbc1f
                                    dt_sbc1h
                                    act_sbbYX
                                    s'_sbbYW;
                            GHC.IO.Handle.Types.DuplexHandle _ [Occ=Dead]
                                                             dt_sbc1j [Occ=Once]
                                                             _ [Occ=Dead] ->
                                GHC.IO.Handle.Internals.$wwithHandle'
                                    GHC.IO.Handle.Text.hGetContents3
                                    wild_sbc1f
                                    dt_sbc1j
                                    act_sbbYX
                                    s'_sbbYW;
                          };
                  };
        } in  GHC.IO.Unsafe.unsafeDupableInterleaveIO sat_sbc1l eta_sbbYU;

GHC.IO.Handle.Text.hGetContents1
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [handle_sbc1m eta_sbc1n]
        let {
          sat_sbc1M [Occ=Once]
            :: GHC.IO.Handle.Types.Handle__
               -> GHC.Types.IO (GHC.IO.Handle.Types.Handle__, GHC.Base.String)
          [LclId] =
              [handle_sbc1m] \r [handle__sbc1o s_sbc1p]
                  case GHC.IO.Handle.Text.hGetContents2 handle_sbc1m s_sbc1p of {
                    (#,#) ipv_sbc1r [Occ=Once] ipv1_sbc1s [Occ=Once] ->
                        let {
                          sat_sbc1K [Occ=Once] :: GHC.IO.Handle.Types.Handle__
                          [LclId] =
                              [handle__sbc1o] \u []
                                  case handle__sbc1o of {
                                    GHC.IO.Handle.Types.Handle__ ds_sbc1u [Occ=Once]
                                                                 ds2_sbc1v [Occ=Once]
                                                                 ds3_sbc1w [Occ=Once]
                                                                 ds4_sbc1x [Occ=Once]
                                                                 _ [Occ=Dead]
                                                                 dt_sbc1z [Occ=Once]
                                                                 ds6_sbc1A [Occ=Once]
                                                                 dt1_sbc1B [Occ=Once]
                                                                 dt2_sbc1C [Occ=Once]
                                                                 dt3_sbc1D [Occ=Once]
                                                                 ds7_sbc1E [Occ=Once]
                                                                 ds8_sbc1F [Occ=Once]
                                                                 ds9_sbc1G [Occ=Once]
                                                                 ds10_sbc1H [Occ=Once]
                                                                 ds11_sbc1I [Occ=Once]
                                                                 ds12_sbc1J [Occ=Once] ->
                                        GHC.IO.Handle.Types.Handle__ [ds_sbc1u
                                                                      ds2_sbc1v
                                                                      ds3_sbc1w
                                                                      ds4_sbc1x
                                                                      GHC.IO.Handle.Types.SemiClosedHandle
                                                                      dt_sbc1z
                                                                      ds6_sbc1A
                                                                      dt1_sbc1B
                                                                      dt2_sbc1C
                                                                      dt3_sbc1D
                                                                      ds7_sbc1E
                                                                      ds8_sbc1F
                                                                      ds9_sbc1G
                                                                      ds10_sbc1H
                                                                      ds11_sbc1I
                                                                      ds12_sbc1J];
                                  }; } in
                        let {
                          sat_sbc1L [Occ=Once]
                            :: (GHC.IO.Handle.Types.Handle__, GHC.Base.String)
                          [LclId] =
                              CCCS (,)! [sat_sbc1K ipv1_sbc1s];
                        } in  (#,#) [ipv_sbc1r sat_sbc1L];
                  };
        } in 
          GHC.IO.Handle.Internals.wantReadableHandle1
              GHC.IO.Handle.Text.hGetContents3 handle_sbc1m sat_sbc1M eta_sbc1n;

GHC.IO.Handle.Text.hGetContents
  :: GHC.IO.Handle.Types.Handle -> GHC.Types.IO GHC.Base.String
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        GHC.IO.Handle.Text.hGetContents1 eta_B2 eta_B1;

go_rb6WP :: [[GHC.Types.Char]] -> [GHC.Types.Char]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    sat-only [] \r [ds_sbc1N]
        case ds_sbc1N of {
          [] -> [] [];
          : y_sbc1P [Occ=Once] ys_sbc1Q [Occ=Once] ->
              let {
                sat_sbc1R [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                [LclId] =
                    [ys_sbc1Q] \s [] go_rb6WP ys_sbc1Q;
              } in  GHC.Base.++ y_sbc1P sat_sbc1R;
        };

go1_rb6WQ :: [[GHC.Types.Char]] -> [GHC.Types.Char]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    sat-only [] \r [ds_sbc1S]
        case ds_sbc1S of {
          [] -> [] [];
          : y_sbc1U [Occ=Once] ys_sbc1V [Occ=Once] ->
              let {
                sat_sbc1W [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                [LclId] =
                    [ys_sbc1V] \s [] go1_rb6WQ ys_sbc1V;
              } in  GHC.Base.++ y_sbc1U sat_sbc1W;
        };

GHC.IO.Handle.Text.$whGetLineBufferedLoop [InlPrag=NOUSERINLINE[0],
                                           Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> [GHC.Base.String]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=9,
 Str=<S,1*U><L,U><L,U><L,U><L,U><S,U><S,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbc1X
           ww_sbc1Y
           ww1_sbc1Z
           ww2_sbc20
           ww3_sbc21
           ww4_sbc22
           ww5_sbc23
           w1_sbc24
           w2_sbc25]
        case w_sbc1X of wild_sbc26 {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt2_sbc2f [Occ=Once*]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       ds6_sbc2k
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              let {
                sat_sbc4v [Occ=Once] :: GHC.IO.Buffer.RawCharBuffer
                [LclId] =
                    CCCS GHC.ForeignPtr.ForeignPtr! [ww_sbc1Y ww1_sbc1Z];
              } in 
                let-no-escape {
                  $w$j_sbc2n [InlPrag=NOUSERINLINE[0],
                              Dmd=<C(C(C(S))),C(C1(C1(U(U,U))))>]
                    :: GHC.Prim.State# GHC.Prim.RealWorld
                       -> GHC.Types.Bool
                       -> GHC.Prim.Int#
                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                  [LclId[JoinId(3)], Arity=3, Str=<S,U><L,U><S,U>, Unf=OtherCon []] =
                      sat-only [ww_sbc1Y
                                ww1_sbc1Z
                                ww2_sbc20
                                ww3_sbc21
                                ww4_sbc22
                                ww5_sbc23
                                w1_sbc24
                                wild_sbc26
                                dt2_sbc2f
                                ds6_sbc2k] \r [w3_sbc2o ww6_sbc2p ww7_sbc2q]
                          let-no-escape {
                            $w$j1_sbc2r [InlPrag=NOUSERINLINE[0],
                                         Occ=Once*!T[3],
                                         Dmd=<L,C(C1(C1(U(U,U))))>]
                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                 -> [GHC.Types.Char]
                                 -> GHC.Types.Int
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                            [LclId[JoinId(3)],
                             Arity=3,
                             Str=<S,U><L,U><L,1*U(U)>,
                             Unf=OtherCon []] =
                                sat-only [ww_sbc1Y
                                          ww1_sbc1Z
                                          ww2_sbc20
                                          ww3_sbc21
                                          ww5_sbc23
                                          w1_sbc24
                                          wild_sbc26
                                          dt2_sbc2f
                                          ds6_sbc2k
                                          ww6_sbc2p
                                          ww7_sbc2q] \r [w4_sbc2s ww8_sbc2t ww9_sbc2u]
                                    case ww6_sbc2p of {
                                      GHC.Types.False ->
                                          let {
                                            buf1_sbc2w [Dmd=<L,U(U,U,U,U,U,U)>]
                                              :: GHC.IO.Buffer.Buffer GHC.Types.Char
                                            [LclId] =
                                                [ww_sbc1Y
                                                 ww1_sbc1Z
                                                 ww2_sbc20
                                                 ww3_sbc21
                                                 ww5_sbc23
                                                 ww9_sbc2u] \u []
                                                    case ww9_sbc2u of {
                                                      GHC.Types.I# x_sbc2y ->
                                                          case ==# [x_sbc2y ww5_sbc23] of {
                                                            __DEFAULT ->
                                                                GHC.IO.Buffer.Buffer [ww_sbc1Y
                                                                                      ww1_sbc1Z
                                                                                      ww2_sbc20
                                                                                      ww3_sbc21
                                                                                      x_sbc2y
                                                                                      ww5_sbc23];
                                                            1# ->
                                                                GHC.IO.Buffer.Buffer [ww_sbc1Y
                                                                                      ww1_sbc1Z
                                                                                      ww2_sbc20
                                                                                      ww3_sbc21
                                                                                      0#
                                                                                      0#];
                                                          };
                                                    }; } in
                                          let {
                                            sat_sbc33 [Occ=Once]
                                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Base.Maybe GHC.IO.Buffer.CharBuffer #)
                                            [LclId] =
                                                [wild_sbc26 ds6_sbc2k buf1_sbc2w] \r [s_sbc2A]
                                                    case buf1_sbc2w of wild2_sbc2B {
                                                      GHC.IO.Buffer.Buffer dt4_sbc2C
                                                                           dt5_sbc2D
                                                                           ds9_sbc2E [Occ=Once]
                                                                           dt6_sbc2F [Occ=Once]
                                                                           dt7_sbc2G
                                                                           dt8_sbc2H [Occ=Once] ->
                                                          case -# [dt8_sbc2H dt7_sbc2G] of {
                                                            __DEFAULT ->
                                                                let {
                                                                  sat_sbc2J [Occ=Once]
                                                                    :: GHC.Base.Maybe
                                                                         GHC.IO.Buffer.CharBuffer
                                                                  [LclId] =
                                                                      CCCS GHC.Base.Just! [wild2_sbc2B];
                                                                } in  (#,#) [s_sbc2A sat_sbc2J];
                                                            0# ->
                                                                case
                                                                    GHC.IO.Handle.Internals.hLookAhead_2
                                                                        wild_sbc26
                                                                        wild2_sbc2B
                                                                        s_sbc2A
                                                                of
                                                                { (#,#) ipv_sbc2L [Occ=Once]
                                                                        ipv1_sbc2M [Occ=Once] ->
                                                                      let {
                                                                        sat_sbc2N [Occ=Once]
                                                                          :: GHC.Base.Maybe
                                                                               GHC.IO.Buffer.CharBuffer
                                                                        [LclId] =
                                                                            CCCS GHC.Base.Just! [ipv1_sbc2M];
                                                                      } in 
                                                                        (#,#) [ipv_sbc2L sat_sbc2N];
                                                                };
                                                            1# ->
                                                                case ds6_sbc2k of {
                                                                  GHC.IO.Handle.Types.LF ->
                                                                      let {
                                                                        sat_sbc2P [Occ=Once]
                                                                          :: GHC.Base.Maybe
                                                                               GHC.IO.Buffer.CharBuffer
                                                                        [LclId] =
                                                                            CCCS GHC.Base.Just! [wild2_sbc2B];
                                                                      } in 
                                                                        (#,#) [s_sbc2A sat_sbc2P];
                                                                  GHC.IO.Handle.Types.CRLF ->
                                                                      case
                                                                          readWideCharOffAddr# [dt4_sbc2C
                                                                                                dt7_sbc2G
                                                                                                s_sbc2A]
                                                                      of
                                                                      { (#,#) ipv_sbc2R [Occ=Once]
                                                                              ipv1_sbc2S [Occ=Once!] ->
                                                                            case
                                                                                touch# [dt5_sbc2D
                                                                                        ipv_sbc2R]
                                                                            of
                                                                            s'_sbc2T
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      ipv1_sbc2S
                                                                                  of
                                                                                  { __DEFAULT ->
                                                                                        let {
                                                                                          sat_sbc2V [Occ=Once]
                                                                                            :: GHC.Base.Maybe
                                                                                                 GHC.IO.Buffer.CharBuffer
                                                                                          [LclId] =
                                                                                              CCCS GHC.Base.Just! [wild2_sbc2B];
                                                                                        } in 
                                                                                          (#,#) [s'_sbc2T
                                                                                                 sat_sbc2V];
                                                                                    '\r'# ->
                                                                                        case
                                                                                            writeWideCharOffAddr# [dt4_sbc2C
                                                                                                                   0#
                                                                                                                   '\r'#
                                                                                                                   s'_sbc2T]
                                                                                        of
                                                                                        s2_sbc2W
                                                                                        { __DEFAULT ->
                                                                                              case
                                                                                                  touch# [dt5_sbc2D
                                                                                                          s2_sbc2W]
                                                                                              of
                                                                                              s'1_sbc2X
                                                                                              { __DEFAULT ->
                                                                                                    let {
                                                                                                      sat_sbc2Y [Occ=Once]
                                                                                                        :: GHC.IO.Buffer.CharBuffer
                                                                                                      [LclId] =
                                                                                                          CCCS GHC.IO.Buffer.Buffer! [dt4_sbc2C
                                                                                                                                      dt5_sbc2D
                                                                                                                                      ds9_sbc2E
                                                                                                                                      dt6_sbc2F
                                                                                                                                      0#
                                                                                                                                      1#];
                                                                                                    } in 
                                                                                                      case
                                                                                                          GHC.IO.Handle.Internals.hLookAhead_2
                                                                                                              wild_sbc26
                                                                                                              sat_sbc2Y
                                                                                                              s'1_sbc2X
                                                                                                      of
                                                                                                      { (#,#) ipv2_sbc30 [Occ=Once]
                                                                                                              ipv3_sbc31 [Occ=Once] ->
                                                                                                            let {
                                                                                                              sat_sbc32 [Occ=Once]
                                                                                                                :: GHC.Base.Maybe
                                                                                                                     GHC.IO.Buffer.CharBuffer
                                                                                                              [LclId] =
                                                                                                                  CCCS GHC.Base.Just! [ipv3_sbc31];
                                                                                                            } in 
                                                                                                              (#,#) [ipv2_sbc30
                                                                                                                     sat_sbc32];
                                                                                                      };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                      };
                                                                };
                                                          };
                                                    };
                                          } in 
                                            case
                                                catch# [sat_sbc33
                                                        GHC.IO.Handle.Text.hGetChar3
                                                        w4_sbc2s]
                                            of
                                            { (#,#) ipv_sbc35 [Occ=Once*] ipv1_sbc36 [Occ=Once!] ->
                                                  case ipv1_sbc36 of {
                                                    GHC.Base.Nothing ->
                                                        let {
                                                          sat_sbc3f [Occ=Once]
                                                            :: GHC.IO.Buffer.Buffer
                                                                 GHC.IO.Buffer.CharBufElem
                                                          [LclId] =
                                                              [buf1_sbc2w] \u []
                                                                  case buf1_sbc2w of {
                                                                    GHC.IO.Buffer.Buffer dt4_sbc39 [Occ=Once]
                                                                                         dt5_sbc3a [Occ=Once]
                                                                                         ds10_sbc3b [Occ=Once]
                                                                                         dt6_sbc3c [Occ=Once]
                                                                                         _ [Occ=Dead]
                                                                                         _ [Occ=Dead] ->
                                                                        GHC.IO.Buffer.Buffer [dt4_sbc39
                                                                                              dt5_sbc3a
                                                                                              ds10_sbc3b
                                                                                              dt6_sbc3c
                                                                                              0#
                                                                                              0#];
                                                                  };
                                                        } in 
                                                          case
                                                              writeMutVar# [dt2_sbc2f
                                                                            sat_sbc3f
                                                                            ipv_sbc35]
                                                          of
                                                          s2#_sbc3g
                                                          { __DEFAULT ->
                                                                let {
                                                                  sat_sbc3q [Occ=Once]
                                                                    :: [[GHC.Types.Char]]
                                                                  [LclId] =
                                                                      CCCS :! [ww8_sbc2t
                                                                               w1_sbc24]; } in
                                                                let {
                                                                  sat_sbc3p [Occ=Once]
                                                                    :: [GHC.Types.Char]
                                                                  [LclId] =
                                                                      [buf1_sbc2w] \u []
                                                                          case buf1_sbc2w of {
                                                                            GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                                 _ [Occ=Dead]
                                                                                                 _ [Occ=Dead]
                                                                                                 _ [Occ=Dead]
                                                                                                 dt7_sbc3m [Occ=Once]
                                                                                                 dt8_sbc3n [Occ=Once] ->
                                                                                case
                                                                                    ==# [dt7_sbc3m
                                                                                         dt8_sbc3n]
                                                                                of
                                                                                { __DEFAULT ->
                                                                                      lvl4_rb6WH;
                                                                                  1# -> [] [];
                                                                                };
                                                                          }; } in
                                                                let {
                                                                  sat_sbc3r [Occ=Once]
                                                                    :: [[GHC.Types.Char]]
                                                                  [LclId] =
                                                                      CCCS :! [sat_sbc3p sat_sbc3q];
                                                                } in 
                                                                  case
                                                                      GHC.List.reverse1
                                                                          sat_sbc3r GHC.Types.[]
                                                                  of
                                                                  sat_sbc3s
                                                                  { __DEFAULT ->
                                                                        case
                                                                            go1_rb6WQ sat_sbc3s
                                                                        of
                                                                        wild3_sbc3t
                                                                        { [] ->
                                                                              GHC.IO.Handle.Internals.ioe_EOF1
                                                                                  s2#_sbc3g;
                                                                          : _ [Occ=Dead]
                                                                            _ [Occ=Dead] ->
                                                                              (#,#) [s2#_sbc3g
                                                                                     wild3_sbc3t];
                                                                        };
                                                                  };
                                                          };
                                                    GHC.Base.Just new_buf_sbc3w [Occ=Once!] ->
                                                        case new_buf_sbc3w of {
                                                          GHC.IO.Buffer.Buffer ww11_sbc3y [Occ=Once]
                                                                               ww12_sbc3z [Occ=Once]
                                                                               ww13_sbc3A [Occ=Once]
                                                                               ww14_sbc3B [Occ=Once]
                                                                               ww15_sbc3C [Occ=Once]
                                                                               ww16_sbc3D [Occ=Once] ->
                                                              let {
                                                                sat_sbc3E [Occ=Once]
                                                                  :: [GHC.Base.String]
                                                                [LclId] =
                                                                    CCCS :! [ww8_sbc2t w1_sbc24];
                                                              } in 
                                                                GHC.IO.Handle.Text.$whGetLineBufferedLoop
                                                                    wild_sbc26
                                                                    ww11_sbc3y
                                                                    ww12_sbc3z
                                                                    ww13_sbc3A
                                                                    ww14_sbc3B
                                                                    ww15_sbc3C
                                                                    ww16_sbc3D
                                                                    sat_sbc3E
                                                                    ipv_sbc35;
                                                        };
                                                  };
                                            };
                                      GHC.Types.True ->
                                          let {
                                            sat_sbc3H [Occ=Once]
                                              :: GHC.IO.Buffer.Buffer GHC.IO.Buffer.CharBufElem
                                            [LclId] =
                                                [ww_sbc1Y
                                                 ww1_sbc1Z
                                                 ww2_sbc20
                                                 ww3_sbc21
                                                 ww5_sbc23
                                                 ww7_sbc2q] \u []
                                                    case +# [ww7_sbc2q 1#] of x_sbc3F [Dmd=<S,U>] {
                                                      __DEFAULT ->
                                                          case ==# [x_sbc3F ww5_sbc23] of {
                                                            __DEFAULT ->
                                                                GHC.IO.Buffer.Buffer [ww_sbc1Y
                                                                                      ww1_sbc1Z
                                                                                      ww2_sbc20
                                                                                      ww3_sbc21
                                                                                      x_sbc3F
                                                                                      ww5_sbc23];
                                                            1# ->
                                                                GHC.IO.Buffer.Buffer [ww_sbc1Y
                                                                                      ww1_sbc1Z
                                                                                      ww2_sbc20
                                                                                      ww3_sbc21
                                                                                      0#
                                                                                      0#];
                                                          };
                                                    };
                                          } in 
                                            case
                                                writeMutVar# [dt2_sbc2f sat_sbc3H w4_sbc2s]
                                            of
                                            s2#_sbc3I
                                            { __DEFAULT ->
                                                  let {
                                                    sat_sbc3L [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId] =
                                                        [w1_sbc24 ww8_sbc2t] \u []
                                                            let {
                                                              sat_sbc3J [Occ=Once]
                                                                :: [[GHC.Types.Char]]
                                                              [LclId] =
                                                                  CCCS :! [ww8_sbc2t w1_sbc24];
                                                            } in 
                                                              case
                                                                  GHC.List.reverse1
                                                                      sat_sbc3J GHC.Types.[]
                                                              of
                                                              sat_sbc3K
                                                              { __DEFAULT -> go_rb6WP sat_sbc3K;
                                                              };
                                                  } in  (#,#) [s2#_sbc3I sat_sbc3L];
                                            };
                                    };
                          } in 
                            case ds6_sbc2k of {
                              GHC.IO.Handle.Types.LF ->
                                  case ==# [ww4_sbc22 ww7_sbc2q] of {
                                    __DEFAULT ->
                                        case -# [ww7_sbc2q 1#] of sat_sbc44 {
                                          __DEFAULT ->
                                              let-no-escape {
                                                $j_sbc3O [Occ=OnceL!T[2],
                                                          Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                                  :: GHC.Prim.State# GHC.Prim.RealWorld
                                                     -> [GHC.IO.Buffer.CharBufElem]
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                           GHC.Base.String #)
                                                [LclId[JoinId(2)],
                                                 Arity=2,
                                                 Str=<S,U><L,U>,
                                                 Unf=OtherCon []] =
                                                    sat-only [ww1_sbc1Z
                                                              ww7_sbc2q
                                                              $w$j1_sbc2r] \r [ipv_sbc3P ipv1_sbc3Q]
                                                        case
                                                            touch# [ww1_sbc1Z ipv_sbc3P]
                                                        of
                                                        s'_sbc3R
                                                        { __DEFAULT ->
                                                              let {
                                                                sat_sbc3S [Occ=Once]
                                                                  :: GHC.Types.Int
                                                                [LclId] =
                                                                    CCCS GHC.Types.I#! [ww7_sbc2q];
                                                              } in 
                                                                $w$j1_sbc2r
                                                                    s'_sbc3R ipv1_sbc3Q sat_sbc3S;
                                                        };
                                              } in 
                                                let-no-escape {
                                                  $wunpackRB_sbc3T [InlPrag=NOUSERINLINE[0],
                                                                    Occ=LoopBreakerT[3]]
                                                    :: [GHC.IO.Buffer.CharBufElem]
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Base.String #)
                                                  [LclId[JoinId(3)],
                                                   Arity=3,
                                                   Str=<L,U><S,U><S,U>,
                                                   Unf=OtherCon []] =
                                                      sat-only [ww_sbc1Y
                                                                ww4_sbc22
                                                                $j_sbc3O
                                                                $wunpackRB_sbc3T] \r [w4_sbc3U
                                                                                      ww8_sbc3V
                                                                                      w5_sbc3W]
                                                          case <# [ww8_sbc3V ww4_sbc22] of {
                                                            __DEFAULT ->
                                                                case
                                                                    readWideCharOffAddr# [ww_sbc1Y
                                                                                          ww8_sbc3V
                                                                                          w5_sbc3W]
                                                                of
                                                                { (#,#) ipv_sbc3Z [Occ=Once]
                                                                        ipv1_sbc40 [Occ=Once] ->
                                                                      case
                                                                          -# [ww8_sbc3V 1#]
                                                                      of
                                                                      sat_sbc43
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_sbc41 [Occ=Once]
                                                                                :: GHC.IO.Buffer.CharBufElem
                                                                              [LclId] =
                                                                                  CCCS GHC.Types.C#! [ipv1_sbc40]; } in
                                                                            let {
                                                                              sat_sbc42 [Occ=Once]
                                                                                :: [GHC.IO.Buffer.CharBufElem]
                                                                              [LclId] =
                                                                                  CCCS :! [sat_sbc41
                                                                                           w4_sbc3U];
                                                                            } in 
                                                                              $wunpackRB_sbc3T
                                                                                  sat_sbc42
                                                                                  sat_sbc43
                                                                                  ipv_sbc3Z;
                                                                      };
                                                                };
                                                            1# -> $j_sbc3O w5_sbc3W w4_sbc3U;
                                                          };
                                                } in 
                                                  $wunpackRB_sbc3T GHC.Types.[] sat_sbc44 w3_sbc2o;
                                        };
                                    1# ->
                                        let {
                                          sat_sbc45 [Occ=Once] :: GHC.Types.Int
                                          [LclId] =
                                              CCCS GHC.Types.I#! [ww7_sbc2q];
                                        } in  $w$j1_sbc2r w3_sbc2o GHC.Types.[] sat_sbc45;
                                  };
                              GHC.IO.Handle.Types.CRLF ->
                                  case
                                      $wunpack_nl_rb6WF
                                          ww_sbc1Y
                                          ww1_sbc1Z
                                          ww4_sbc22
                                          ww7_sbc2q
                                          GHC.Types.[]
                                          w3_sbc2o
                                  of
                                  { (#,#) ipv_sbc47 [Occ=Once] ipv1_sbc48 [Occ=Once!] ->
                                        case ipv1_sbc48 of {
                                          (,) ww9_sbc4a [Occ=Once] ww10_sbc4b [Occ=Once] ->
                                              $w$j1_sbc2r ipv_sbc47 ww9_sbc4a ww10_sbc4b;
                                        };
                                  };
                            };
                } in 
                  let-no-escape {
                    exit_sbc4c [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
                      :: GHC.Prim.Int#
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                    [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
                        sat-only [$w$j_sbc2n] \r [ww6_sbc4d s'_sbc4e]
                            $w$j_sbc2n s'_sbc4e GHC.Types.True ww6_sbc4d;
                  } in 
                    let-no-escape {
                      exit1_sbc4f [Occ=OnceL!T[1], Dmd=<L,C(U(U,U))>]
                        :: GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                      [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                          sat-only [ww5_sbc23 $w$j_sbc2n] \r [w3_sbc4g]
                              $w$j_sbc2n w3_sbc4g GHC.Types.False ww5_sbc23;
                    } in 
                      let-no-escape {
                        $wloop_sbc4h [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                          :: GHC.IO.Buffer.RawCharBuffer
                             -> GHC.Prim.Int#
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                        [LclId[JoinId(3)],
                         Arity=3,
                         Str=<L,1*U(U,U)><S,U><S,U>,
                         Unf=OtherCon []] =
                            sat-only [ww5_sbc23
                                      exit_sbc4c
                                      exit1_sbc4f
                                      $wloop_sbc4h] \r [w3_sbc4i ww6_sbc4j w4_sbc4k]
                                case ==# [ww6_sbc4j ww5_sbc23] of {
                                  __DEFAULT ->
                                      case w3_sbc4i of wild1_sbc4m {
                                        GHC.ForeignPtr.ForeignPtr fo_sbc4n [Occ=Once]
                                                                  ds9_sbc4o [Occ=Once] ->
                                            case
                                                readWideCharOffAddr# [fo_sbc4n ww6_sbc4j w4_sbc4k]
                                            of
                                            { (#,#) ipv_sbc4q [Occ=Once] ipv1_sbc4r [Occ=Once!] ->
                                                  case touch# [ds9_sbc4o ipv_sbc4q] of s'_sbc4s {
                                                    __DEFAULT ->
                                                        case ipv1_sbc4r of {
                                                          __DEFAULT ->
                                                              case +# [ww6_sbc4j 1#] of sat_sbc4u {
                                                                __DEFAULT ->
                                                                    $wloop_sbc4h
                                                                        wild1_sbc4m
                                                                        sat_sbc4u
                                                                        s'_sbc4s;
                                                              };
                                                          '\n'# -> exit_sbc4c ww6_sbc4j s'_sbc4s;
                                                        };
                                                  };
                                            };
                                      };
                                  1# -> exit1_sbc4f w4_sbc4k;
                                };
                      } in  $wloop_sbc4h sat_sbc4v ww4_sbc22 w2_sbc25;
        };

GHC.IO.Handle.Text.hGetLine3 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.IO.Buffer.CharBuffer
     -> [GHC.Base.String]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=4,
 Str=<S,1*U><S(SLLSSS),1*U(U,U,U,U,U,U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbc4w w1_sbc4x w2_sbc4y w3_sbc4z]
        case w1_sbc4x of {
          GHC.IO.Buffer.Buffer ww1_sbc4B [Occ=Once]
                               ww2_sbc4C [Occ=Once]
                               ww3_sbc4D [Occ=Once]
                               ww4_sbc4E [Occ=Once]
                               ww5_sbc4F [Occ=Once]
                               ww6_sbc4G [Occ=Once] ->
              GHC.IO.Handle.Text.$whGetLineBufferedLoop
                  w_sbc4w
                  ww1_sbc4B
                  ww2_sbc4C
                  ww3_sbc4D
                  ww4_sbc4E
                  ww5_sbc4F
                  ww6_sbc4G
                  w2_sbc4y
                  w3_sbc4z;
        };

GHC.IO.Handle.Text.hGetLine5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetLine"#;

GHC.IO.Handle.Text.hGetLine4 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hGetLine5;

GHC.IO.Handle.Text.hGetLine2
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [handle__sbc4H eta_sbc4I]
        case handle__sbc4H of wild_sbc4J {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt2_sbc4S [Occ=Once]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case readMutVar# [dt2_sbc4S eta_sbc4I] of {
                (#,#) ipv_sbc51 [Occ=Once] ipv1_sbc52 [Occ=Once!] ->
                    case ipv1_sbc52 of {
                      GHC.IO.Buffer.Buffer ww1_sbc54 [Occ=Once]
                                           ww2_sbc55 [Occ=Once]
                                           ww3_sbc56 [Occ=Once]
                                           ww4_sbc57 [Occ=Once]
                                           ww5_sbc58 [Occ=Once]
                                           ww6_sbc59 [Occ=Once] ->
                          GHC.IO.Handle.Text.$whGetLineBufferedLoop
                              wild_sbc4J
                              ww1_sbc54
                              ww2_sbc55
                              ww3_sbc56
                              ww4_sbc57
                              ww5_sbc58
                              ww6_sbc59
                              GHC.Types.[]
                              ipv_sbc51;
                    };
              };
        };

GHC.IO.Handle.Text.hGetLine1
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<L,U>, Unf=OtherCon []] =
    [] \r [h_sbc5a eta_B1]
        GHC.IO.Handle.Internals.wantReadableHandle_1
            GHC.IO.Handle.Text.hGetLine4
            h_sbc5a
            GHC.IO.Handle.Text.hGetLine2
            eta_B1;

GHC.IO.Handle.Text.hGetLine
  :: GHC.IO.Handle.Types.Handle -> GHC.Types.IO GHC.Base.String
[GblId, Arity=2, Str=<L,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.IO.Handle.Text.hGetLine1 eta_B2 eta_B1;

lvl11_rb6WR :: Data.Typeable.Internal.TypeRep GHC.IO.FD.FD
[GblId] =
    [] \u []
        case
            Data.Typeable.Internal.$wmkTrCon
                10838815552519039062##
                15546290101957756376##
                GHC.IO.FD.$trModule
                GHC.IO.FD.$tcFD1
                0#
                GHC.Types.krep$*
                GHC.Types.[]
        of
        { (#,,,,#) ww8_sbc5c [Occ=Once]
                   ww9_sbc5d [Occ=Once]
                   ww10_sbc5e [Occ=Once]
                   ww11_sbc5f [Occ=Once]
                   ww12_sbc5g [Occ=Once] ->
              Data.Typeable.Internal.TrTyCon [ww8_sbc5c
                                              ww9_sbc5d
                                              ww10_sbc5e
                                              ww11_sbc5f
                                              ww12_sbc5g];
        };

GHC.IO.Handle.Text.hGetBufNonBlocking2
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<S,1*U><S(SLLLSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [h__sbc5h
           buf_sbc5i
           ptr_sbc5j
           so_far_sbc5k
           count_sbc5l
           eta_sbc5m]
        case h__sbc5h of wild_sbc5n {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt_sbc5t [Occ=Once*]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case buf_sbc5i of {
                GHC.IO.Buffer.Buffer dt4_sbc5F
                                     dt5_sbc5G
                                     ds9_sbc5H [Occ=Once*]
                                     dt6_sbc5I
                                     dt7_sbc5J
                                     dt8_sbc5K ->
                    case count_sbc5l of {
                      GHC.Types.I# x_sbc5M ->
                          case -# [dt8_sbc5K dt7_sbc5J] of avail_sbc5N [Dmd=<S,U>] {
                            __DEFAULT ->
                                case <# [x_sbc5M avail_sbc5N] of {
                                  __DEFAULT ->
                                      case ptr_sbc5j of {
                                        GHC.Ptr.Ptr ds11_sbc5Q ->
                                            case int2Word# [avail_sbc5N] of sat_sbc5T {
                                              __DEFAULT ->
                                                  case
                                                      plusAddr# [dt4_sbc5F dt7_sbc5J]
                                                  of
                                                  sat_sbc5S
                                                  { __DEFAULT ->
                                                        case
                                                            __pkg_ccall base-4.11.0.0 [ds11_sbc5Q
                                                                                       sat_sbc5S
                                                                                       sat_sbc5T
                                                                                       eta_sbc5m]
                                                        of
                                                        { (#,#) ds12_sbc5V [Occ=Once]
                                                                _ [Occ=Dead] ->
                                                              case
                                                                  touch# [dt5_sbc5G ds12_sbc5V]
                                                              of
                                                              s'_sbc5X
                                                              { __DEFAULT ->
                                                                    let {
                                                                      sat_sbc5Y [Occ=Once]
                                                                        :: GHC.IO.Buffer.Buffer
                                                                             GHC.Word.Word8
                                                                      [LclId] =
                                                                          CCCS GHC.IO.Buffer.Buffer! [dt4_sbc5F
                                                                                                      dt5_sbc5G
                                                                                                      ds9_sbc5H
                                                                                                      dt6_sbc5I
                                                                                                      0#
                                                                                                      0#];
                                                                    } in 
                                                                      case
                                                                          writeMutVar# [dt_sbc5t
                                                                                        sat_sbc5Y
                                                                                        s'_sbc5X]
                                                                      of
                                                                      s2#_sbc5Z
                                                                      { __DEFAULT ->
                                                                            case
                                                                                -# [x_sbc5M
                                                                                    avail_sbc5N]
                                                                            of
                                                                            wild4_sbc60
                                                                            { __DEFAULT ->
                                                                                  let {
                                                                                    sat_sbc66 [Occ=Once,
                                                                                               Dmd=<L,U(U)>]
                                                                                      :: GHC.Types.Int
                                                                                    [LclId] =
                                                                                        [so_far_sbc5k
                                                                                         avail_sbc5N] \u []
                                                                                            case
                                                                                                so_far_sbc5k
                                                                                            of
                                                                                            { GHC.Types.I# x1_sbc64 [Occ=Once] ->
                                                                                                  case
                                                                                                      +# [x1_sbc64
                                                                                                          avail_sbc5N]
                                                                                                  of
                                                                                                  sat_sbc65
                                                                                                  { __DEFAULT ->
                                                                                                        GHC.Types.I# [sat_sbc65];
                                                                                                  };
                                                                                            };
                                                                                  } in 
                                                                                    case
                                                                                        plusAddr# [ds11_sbc5Q
                                                                                                   avail_sbc5N]
                                                                                    of
                                                                                    sat_sbc61
                                                                                    { __DEFAULT ->
                                                                                          let {
                                                                                            sat_sbc62 [Occ=Once]
                                                                                              :: GHC.Ptr.Ptr
                                                                                                   GHC.Word.Word8
                                                                                            [LclId] =
                                                                                                CCCS GHC.Ptr.Ptr! [sat_sbc61];
                                                                                          } in 
                                                                                            GHC.IO.Handle.Text.$wbufReadNBEmpty
                                                                                                wild_sbc5n
                                                                                                dt6_sbc5I
                                                                                                sat_sbc62
                                                                                                sat_sbc66
                                                                                                wild4_sbc60
                                                                                                s2#_sbc5Z;
                                                                                    };
                                                                              0# ->
                                                                                  let {
                                                                                    sat_sbc6a [Occ=Once]
                                                                                      :: GHC.Types.Int
                                                                                    [LclId] =
                                                                                        [so_far_sbc5k
                                                                                         avail_sbc5N] \u []
                                                                                            case
                                                                                                so_far_sbc5k
                                                                                            of
                                                                                            { GHC.Types.I# x1_sbc68 [Occ=Once] ->
                                                                                                  case
                                                                                                      +# [x1_sbc68
                                                                                                          avail_sbc5N]
                                                                                                  of
                                                                                                  sat_sbc69
                                                                                                  { __DEFAULT ->
                                                                                                        GHC.Types.I# [sat_sbc69];
                                                                                                  };
                                                                                            };
                                                                                  } in 
                                                                                    (#,#) [s2#_sbc5Z
                                                                                           sat_sbc6a];
                                                                            };
                                                                      };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                  1# ->
                                      case ptr_sbc5j of {
                                        GHC.Ptr.Ptr ds11_sbc6c [Occ=Once] ->
                                            case int2Word# [x_sbc5M] of sat_sbc6f {
                                              __DEFAULT ->
                                                  case
                                                      plusAddr# [dt4_sbc5F dt7_sbc5J]
                                                  of
                                                  sat_sbc6e
                                                  { __DEFAULT ->
                                                        case
                                                            __pkg_ccall base-4.11.0.0 [ds11_sbc6c
                                                                                       sat_sbc6e
                                                                                       sat_sbc6f
                                                                                       eta_sbc5m]
                                                        of
                                                        { (#,#) ds12_sbc6h [Occ=Once]
                                                                _ [Occ=Dead] ->
                                                              case
                                                                  touch# [dt5_sbc5G ds12_sbc6h]
                                                              of
                                                              s'_sbc6j
                                                              { __DEFAULT ->
                                                                    case
                                                                        +# [dt7_sbc5J x_sbc5M]
                                                                    of
                                                                    sat_sbc6k
                                                                    { __DEFAULT ->
                                                                          let {
                                                                            sat_sbc6l [Occ=Once]
                                                                              :: GHC.IO.Buffer.Buffer
                                                                                   GHC.Word.Word8
                                                                            [LclId] =
                                                                                CCCS GHC.IO.Buffer.Buffer! [dt4_sbc5F
                                                                                                            dt5_sbc5G
                                                                                                            ds9_sbc5H
                                                                                                            dt6_sbc5I
                                                                                                            sat_sbc6k
                                                                                                            dt8_sbc5K];
                                                                          } in 
                                                                            case
                                                                                writeMutVar# [dt_sbc5t
                                                                                              sat_sbc6l
                                                                                              s'_sbc6j]
                                                                            of
                                                                            s2#_sbc6m
                                                                            { __DEFAULT ->
                                                                                  let {
                                                                                    sat_sbc6q [Occ=Once]
                                                                                      :: GHC.Types.Int
                                                                                    [LclId] =
                                                                                        [so_far_sbc5k
                                                                                         x_sbc5M] \u []
                                                                                            case
                                                                                                so_far_sbc5k
                                                                                            of
                                                                                            { GHC.Types.I# x1_sbc6o [Occ=Once] ->
                                                                                                  case
                                                                                                      +# [x1_sbc6o
                                                                                                          x_sbc5M]
                                                                                                  of
                                                                                                  sat_sbc6p
                                                                                                  { __DEFAULT ->
                                                                                                        GHC.Types.I# [sat_sbc6p];
                                                                                                  };
                                                                                            };
                                                                                  } in 
                                                                                    (#,#) [s2#_sbc6m
                                                                                           sat_sbc6q];
                                                                            };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };
GHC.IO.Handle.Text.$wbufReadNBEmpty [InlPrag=NOUSERINLINE[0],
                                     Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.Int#
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<S,1*U><S,U><L,1*U(U)><L,U(U)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbc6r ww_sbc6s w1_sbc6t w2_sbc6u ww1_sbc6v w3_sbc6w]
        case w_sbc6r of wild_sbc6x {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       $dBufferedIO_sbc6z [Occ=Once]
                                       $dTypeable_sbc6A [Occ=Once]
                                       ds_sbc6B [Occ=Once]
                                       _ [Occ=Dead]
                                       dt_sbc6D
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case ds_sbc6B of ww2_sbc6O {
                GHC.IO.FD.FD ww3_sbc6P [Occ=Once] ww4_sbc6Q [Occ=Once] ->
                    let-no-escape {
                      fail_sbc6R [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                        :: GHC.Prim.Void#
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                      [LclId[JoinId(1)], Arity=1, Str=<L,A>, Unf=OtherCon []] =
                          sat-only [w1_sbc6t
                                    w2_sbc6u
                                    ww1_sbc6v
                                    w3_sbc6w
                                    wild_sbc6x
                                    $dBufferedIO_sbc6z
                                    dt_sbc6D
                                    ww2_sbc6O] \r [ds9_sbc6S]
                              case readMutVar# [dt_sbc6D w3_sbc6w] of {
                                (#,#) ipv_sbc6U [Occ=Once] ipv1_sbc6V [Occ=Once] ->
                                    case
                                        GHC.IO.BufferedIO.fillReadBuffer0
                                            $dBufferedIO_sbc6z ww2_sbc6O ipv1_sbc6V ipv_sbc6U
                                    of
                                    { (#,#) ipv2_sbc6X [Occ=Once*] ipv3_sbc6Y [Occ=Once!] ->
                                          case ipv3_sbc6Y of {
                                            (,) r_sbc70 [Occ=Once!] buf'_sbc71 ->
                                                case r_sbc70 of {
                                                  GHC.Base.Nothing -> (#,#) [ipv2_sbc6X w2_sbc6u];
                                                  GHC.Base.Just ds12_sbc73 [Occ=Once!] ->
                                                      case ds12_sbc73 of wild3_sbc74 {
                                                        GHC.Types.I# ds13_sbc75 [Occ=Once!] ->
                                                            case ds13_sbc75 of ds14_sbc76 {
                                                              __DEFAULT ->
                                                                  case
                                                                      writeMutVar# [dt_sbc6D
                                                                                    buf'_sbc71
                                                                                    ipv2_sbc6X]
                                                                  of
                                                                  s2#_sbc77
                                                                  { __DEFAULT ->
                                                                        case
                                                                            <=# [ww1_sbc6v
                                                                                 ds14_sbc76]
                                                                        of
                                                                        { __DEFAULT ->
                                                                              GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                  wild_sbc6x
                                                                                  buf'_sbc71
                                                                                  w1_sbc6t
                                                                                  w2_sbc6u
                                                                                  wild3_sbc74
                                                                                  s2#_sbc77;
                                                                          1# ->
                                                                              let {
                                                                                sat_sbc79 [Occ=Once]
                                                                                  :: GHC.Types.Int
                                                                                [LclId] =
                                                                                    CCCS GHC.Types.I#! [ww1_sbc6v];
                                                                              } in 
                                                                                GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                    wild_sbc6x
                                                                                    buf'_sbc71
                                                                                    w1_sbc6t
                                                                                    w2_sbc6u
                                                                                    sat_sbc79
                                                                                    s2#_sbc77;
                                                                        };
                                                                  };
                                                              0# -> (#,#) [ipv2_sbc6X w2_sbc6u];
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in 
                      case ># [ww1_sbc6v ww_sbc6s] of {
                        __DEFAULT -> fail_sbc6R GHC.Prim.void#;
                        1# ->
                            case
                                Data.Typeable.Internal.sameTypeRep $dTypeable_sbc6A lvl11_rb6WR
                            of
                            { GHC.Types.False -> fail_sbc6R GHC.Prim.void#;
                              GHC.Types.True ->
                                  case w1_sbc6t of {
                                    GHC.Ptr.Ptr ww6_sbc7d [Occ=Once] ->
                                        case int2Word# [ww1_sbc6v] of sat_sbc7e {
                                          __DEFAULT ->
                                              case
                                                  GHC.IO.FD.$wreadRawBufferPtrNoBlock
                                                      GHC.IO.FD.$fBufferedIOFD8
                                                      ww3_sbc6P
                                                      ww4_sbc6Q
                                                      ww6_sbc7d
                                                      0#
                                                      sat_sbc7e
                                                      w3_sbc6w
                                              of
                                              { (#,#) ipv_sbc7g [Occ=Once*]
                                                      ipv1_sbc7h [Occ=Once!] ->
                                                    case ipv1_sbc7h of {
                                                      GHC.Types.I# ds10_sbc7j [Occ=Once!] ->
                                                          case ds10_sbc7j of ds11_sbc7k {
                                                            __DEFAULT ->
                                                                let {
                                                                  sat_sbc7o [Occ=Once]
                                                                    :: GHC.Types.Int
                                                                  [LclId] =
                                                                      [w2_sbc6u ds11_sbc7k] \u []
                                                                          case w2_sbc6u of {
                                                                            GHC.Types.I# x_sbc7m [Occ=Once] ->
                                                                                case
                                                                                    +# [x_sbc7m
                                                                                        ds11_sbc7k]
                                                                                of
                                                                                sat_sbc7n
                                                                                { __DEFAULT ->
                                                                                      GHC.Types.I# [sat_sbc7n];
                                                                                };
                                                                          };
                                                                } in  (#,#) [ipv_sbc7g sat_sbc7o];
                                                            -1# -> (#,#) [ipv_sbc7g w2_sbc6u];
                                                          };
                                                    };
                                              };
                                        };
                                  };
                            };
                      };
              };
        };

GHC.IO.Handle.Text.hGetBufNonBlocking4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetBufNonBlocking"#;

GHC.IO.Handle.Text.hGetBufNonBlocking3 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.IO.Handle.Text.hGetBufNonBlocking4;

GHC.IO.Handle.Text.$whGetBufNonBlocking [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId, Arity=4, Str=<L,U><L,U(U)><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [w_sbc7p w1_sbc7q ww_sbc7r w2_sbc7s]
        case ww_sbc7r of wild_sbc7t {
          __DEFAULT ->
              case <# [wild_sbc7t 0#] of {
                __DEFAULT ->
                    let {
                      wild1_sbc7v [Occ=OnceL, Dmd=<L,U(U)>] :: GHC.Types.Int
                      [LclId, Unf=OtherCon []] =
                          CCCS GHC.Types.I#! [wild_sbc7t]; } in
                    let {
                      sat_sbc98 [Occ=Once]
                        :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Int
                      [LclId] =
                          [w1_sbc7q wild_sbc7t wild1_sbc7v] \r [h__sbc7w eta_sbc7x]
                              case h__sbc7w of wild2_sbc7y {
                                GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             dt_sbc7E
                                                             _ [Occ=Dead]
                                                             dt1_sbc7G [Occ=Once]
                                                             dt2_sbc7H
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             ds4_sbc7K [Occ=Once!]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                    case readMutVar# [dt2_sbc7H eta_sbc7x] of {
                                      (#,#) ipv_sbc7Q [Occ=Once*] ipv1_sbc7R [Occ=Once!] ->
                                          case ipv1_sbc7R of {
                                            GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 ds11_sbc7V [Occ=Once!]
                                                                 _ [Occ=Dead]
                                                                 dt7_sbc7X [Occ=Once]
                                                                 dt8_sbc7Y [Occ=Once] ->
                                                let-no-escape {
                                                  $w$j_sbc7Z [InlPrag=NOUSERINLINE[0],
                                                              Occ=Once*!T[1],
                                                              Dmd=<L,1*C1(U(U,U))>]
                                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Types.Int #)
                                                  [LclId[JoinId(1)],
                                                   Arity=1,
                                                   Str=<S,U>,
                                                   Unf=OtherCon []] =
                                                      sat-only [w1_sbc7q
                                                                wild_sbc7t
                                                                wild1_sbc7v
                                                                wild2_sbc7y
                                                                dt_sbc7E] \r [w3_sbc80]
                                                          case readMutVar# [dt_sbc7E w3_sbc80] of {
                                                            (#,#) ipv2_sbc82 [Occ=Once*]
                                                                  ipv3_sbc83 [Occ=Once!] ->
                                                                case ipv3_sbc83 of wild4_sbc84 {
                                                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       dt12_sbc88 [Occ=Once]
                                                                                       dt13_sbc89 [Occ=Once]
                                                                                       dt14_sbc8a [Occ=Once] ->
                                                                      case
                                                                          ==# [dt13_sbc89
                                                                               dt14_sbc8a]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                wild2_sbc7y
                                                                                wild4_sbc84
                                                                                w1_sbc7q
                                                                                GHC.IO.Handle.Text.hGetBuf3
                                                                                wild1_sbc7v
                                                                                ipv2_sbc82;
                                                                        1# ->
                                                                            GHC.IO.Handle.Text.$wbufReadNBEmpty
                                                                                wild2_sbc7y
                                                                                dt12_sbc88
                                                                                w1_sbc7q
                                                                                GHC.IO.Handle.Text.hGetBuf3
                                                                                wild_sbc7t
                                                                                ipv2_sbc82;
                                                                      };
                                                                };
                                                          };
                                                } in 
                                                  case ds11_sbc7V of {
                                                    GHC.IO.Buffer.ReadBuffer ->
                                                        case ==# [dt7_sbc7X dt8_sbc7Y] of {
                                                          __DEFAULT ->
                                                              case
                                                                  readMutVar# [dt1_sbc7G ipv_sbc7Q]
                                                              of
                                                              { (#,#) ipv2_sbc8f [Occ=Once]
                                                                      ipv3_sbc8g [Occ=Once!] ->
                                                                    case ipv3_sbc8g of {
                                                                      (,) codec_state_sbc8i [Occ=Once]
                                                                          bbuf0_sbc8j [Occ=Once*] ->
                                                                          case
                                                                              readMutVar# [dt2_sbc7H
                                                                                           ipv2_sbc8f]
                                                                          of
                                                                          { (#,#) ipv4_sbc8l [Occ=Once]
                                                                                  ipv5_sbc8m ->
                                                                                let {
                                                                                  sat_sbc8u [Occ=Once]
                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                         GHC.IO.Buffer.CharBufElem
                                                                                  [LclId] =
                                                                                      [ipv5_sbc8m] \u []
                                                                                          case
                                                                                              ipv5_sbc8m
                                                                                          of
                                                                                          { GHC.IO.Buffer.Buffer dt9_sbc8o [Occ=Once]
                                                                                                                 dt10_sbc8p [Occ=Once]
                                                                                                                 ds14_sbc8q [Occ=Once]
                                                                                                                 dt11_sbc8r [Occ=Once]
                                                                                                                 _ [Occ=Dead]
                                                                                                                 _ [Occ=Dead] ->
                                                                                                GHC.IO.Buffer.Buffer [dt9_sbc8o
                                                                                                                      dt10_sbc8p
                                                                                                                      ds14_sbc8q
                                                                                                                      dt11_sbc8r
                                                                                                                      0#
                                                                                                                      0#];
                                                                                          };
                                                                                } in 
                                                                                  case
                                                                                      writeMutVar# [dt2_sbc7H
                                                                                                    sat_sbc8u
                                                                                                    ipv4_sbc8l]
                                                                                  of
                                                                                  s2#_sbc8v
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            ipv5_sbc8m
                                                                                        of
                                                                                        { GHC.IO.Buffer.Buffer dt9_sbc8x [Occ=Once]
                                                                                                               dt10_sbc8y [Occ=Once]
                                                                                                               ds14_sbc8z [Occ=Once]
                                                                                                               _ [Occ=Dead]
                                                                                                               dt12_sbc8B [Occ=Once!]
                                                                                                               _ [Occ=Dead] ->
                                                                                              case
                                                                                                  dt12_sbc8B
                                                                                              of
                                                                                              wild7_sbc8D
                                                                                              { __DEFAULT ->
                                                                                                    case
                                                                                                        ds4_sbc7K
                                                                                                    of
                                                                                                    { GHC.Base.Nothing ->
                                                                                                          let {
                                                                                                            sat_sbc8N [Occ=Once]
                                                                                                              :: GHC.IO.Buffer.Buffer
                                                                                                                   GHC.Word.Word8
                                                                                                            [LclId] =
                                                                                                                [bbuf0_sbc8j
                                                                                                                 wild7_sbc8D] \u []
                                                                                                                    case
                                                                                                                        bbuf0_sbc8j
                                                                                                                    of
                                                                                                                    { GHC.IO.Buffer.Buffer dt14_sbc8G [Occ=Once]
                                                                                                                                           dt15_sbc8H [Occ=Once]
                                                                                                                                           ds15_sbc8I [Occ=Once]
                                                                                                                                           dt16_sbc8J [Occ=Once]
                                                                                                                                           dt17_sbc8K [Occ=Once]
                                                                                                                                           dt18_sbc8L [Occ=Once] ->
                                                                                                                          case
                                                                                                                              +# [dt17_sbc8K
                                                                                                                                  wild7_sbc8D]
                                                                                                                          of
                                                                                                                          sat_sbc8M
                                                                                                                          { __DEFAULT ->
                                                                                                                                GHC.IO.Buffer.Buffer [dt14_sbc8G
                                                                                                                                                      dt15_sbc8H
                                                                                                                                                      ds15_sbc8I
                                                                                                                                                      dt16_sbc8J
                                                                                                                                                      sat_sbc8M
                                                                                                                                                      dt18_sbc8L];
                                                                                                                          };
                                                                                                                    };
                                                                                                          } in 
                                                                                                            case
                                                                                                                writeMutVar# [dt_sbc7E
                                                                                                                              sat_sbc8N
                                                                                                                              s2#_sbc8v]
                                                                                                            of
                                                                                                            s2#1_sbc8O
                                                                                                            { __DEFAULT ->
                                                                                                                  $w$j_sbc7Z
                                                                                                                      s2#1_sbc8O;
                                                                                                            };
                                                                                                      GHC.Base.Just decoder_sbc8P [Occ=Once!] ->
                                                                                                          case
                                                                                                              decoder_sbc8P
                                                                                                          of
                                                                                                          { GHC.IO.Encoding.Types.BufferCodec ds15_sbc8R [Occ=Once]
                                                                                                                                              ds16_sbc8S [Occ=Once]
                                                                                                                                              _ [Occ=Dead]
                                                                                                                                              _ [Occ=Dead]
                                                                                                                                              ds19_sbc8V [Occ=Once!] ->
                                                                                                                case
                                                                                                                    ds19_sbc8V
                                                                                                                        codec_state_sbc8i
                                                                                                                        s2#_sbc8v
                                                                                                                of
                                                                                                                { (#,#) ipv6_sbc8X [Occ=Once]
                                                                                                                        _ [Occ=Dead] ->
                                                                                                                      let {
                                                                                                                        sat_sbc8Z [Occ=Once]
                                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                                                        [LclId] =
                                                                                                                            CCCS GHC.IO.Buffer.Buffer! [dt9_sbc8x
                                                                                                                                                        dt10_sbc8y
                                                                                                                                                        ds14_sbc8z
                                                                                                                                                        wild7_sbc8D
                                                                                                                                                        0#
                                                                                                                                                        0#];
                                                                                                                      } in 
                                                                                                                        case
                                                                                                                            GHC.IO.Handle.Internals.$wstreamEncode
                                                                                                                                ds15_sbc8R
                                                                                                                                ds16_sbc8S
                                                                                                                                bbuf0_sbc8j
                                                                                                                                sat_sbc8Z
                                                                                                                                ipv6_sbc8X
                                                                                                                        of
                                                                                                                        { (#,#) ipv8_sbc91 [Occ=Once]
                                                                                                                                ipv9_sbc92 [Occ=Once!] ->
                                                                                                                              case
                                                                                                                                  ipv9_sbc92
                                                                                                                              of
                                                                                                                              { (,) bbuf1_sbc94 [Occ=Once]
                                                                                                                                    _ [Occ=Dead] ->
                                                                                                                                    case
                                                                                                                                        writeMutVar# [dt_sbc7E
                                                                                                                                                      bbuf1_sbc94
                                                                                                                                                      ipv8_sbc91]
                                                                                                                                    of
                                                                                                                                    s2#1_sbc96
                                                                                                                                    { __DEFAULT ->
                                                                                                                                          $w$j_sbc7Z
                                                                                                                                              s2#1_sbc96;
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                };
                                                                                                          };
                                                                                                    };
                                                                                                0# ->
                                                                                                    case
                                                                                                        writeMutVar# [dt_sbc7E
                                                                                                                      bbuf0_sbc8j
                                                                                                                      s2#_sbc8v]
                                                                                                    of
                                                                                                    s2#1_sbc97
                                                                                                    { __DEFAULT ->
                                                                                                          $w$j_sbc7Z
                                                                                                              s2#1_sbc97;
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                          };
                                                                    };
                                                              };
                                                          1# -> $w$j_sbc7Z ipv_sbc7Q;
                                                        };
                                                    GHC.IO.Buffer.WriteBuffer ->
                                                        $w$j_sbc7Z ipv_sbc7Q;
                                                  };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.Handle.Internals.wantReadableHandle_1
                          GHC.IO.Handle.Text.hGetBufNonBlocking3 w_sbc7p sat_sbc98 w2_sbc7s;
                1# ->
                    GHC.IO.Handle.Text.$willegalBufferSize
                        w_sbc7p GHC.IO.Handle.Text.hGetBufNonBlocking3 wild_sbc7t w2_sbc7s;
              };
          0# -> (#,#) [w2_sbc7s GHC.IO.Handle.Text.hGetBuf3];
        };

GHC.IO.Handle.Text.hGetBufNonBlocking1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbc99 w1_sbc9a w2_sbc9b w3_sbc9c]
        case w2_sbc9b of {
          GHC.Types.I# ww1_sbc9e [Occ=Once] ->
              GHC.IO.Handle.Text.$whGetBufNonBlocking
                  w_sbc99 w1_sbc9a ww1_sbc9e w3_sbc9c;
        };

GHC.IO.Handle.Text.hGetBufNonBlocking
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Handle.Text.hGetBufNonBlocking1 eta_B4 eta_B3 eta_B2 eta_B1;

lvl12_rb6WS :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetBufSome"#;

lvl13_rb6WT :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl12_rb6WS;

GHC.IO.Handle.Text.$whGetBufSome [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId, Arity=4, Str=<L,U><L,U(U)><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [w_sbc9f w1_sbc9g ww_sbc9h w2_sbc9i]
        case ww_sbc9h of wild_sbc9j {
          __DEFAULT ->
              case <# [wild_sbc9j 0#] of {
                __DEFAULT ->
                    let {
                      wild1_sbc9l [Occ=OnceL*, Dmd=<L,U(U)>] :: GHC.Types.Int
                      [LclId, Unf=OtherCon []] =
                          CCCS GHC.Types.I#! [wild_sbc9j]; } in
                    let {
                      sat_sbcbm [Occ=Once]
                        :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Int
                      [LclId] =
                          [w1_sbc9g wild_sbc9j wild1_sbc9l] \r [h__sbc9m eta_sbc9n]
                              case h__sbc9m of wild2_sbc9o {
                                GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                             $dBufferedIO_sbc9q [Occ=Once]
                                                             $dTypeable_sbc9r [Occ=Once]
                                                             ds_sbc9s [Occ=Once]
                                                             _ [Occ=Dead]
                                                             dt_sbc9u
                                                             _ [Occ=Dead]
                                                             dt1_sbc9w [Occ=Once]
                                                             dt2_sbc9x
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             ds4_sbc9A [Occ=Once!]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                    case ds_sbc9s of ww1_sbc9F {
                                      GHC.IO.FD.FD ww2_sbc9G [Occ=Once] ww3_sbc9H [Occ=Once] ->
                                          case readMutVar# [dt2_sbc9x eta_sbc9n] of {
                                            (#,#) ipv_sbc9J [Occ=Once*] ipv1_sbc9K [Occ=Once!] ->
                                                case ipv1_sbc9K of {
                                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                       _ [Occ=Dead]
                                                                       ds11_sbc9O [Occ=Once!]
                                                                       _ [Occ=Dead]
                                                                       dt7_sbc9Q [Occ=Once]
                                                                       dt8_sbc9R [Occ=Once] ->
                                                      let-no-escape {
                                                        $w$j_sbc9S [InlPrag=NOUSERINLINE[0],
                                                                    Occ=Once*!T[1],
                                                                    Dmd=<L,1*C1(U(U,U))>]
                                                          :: GHC.Prim.State# GHC.Prim.RealWorld
                                                             -> (# GHC.Prim.State#
                                                                     GHC.Prim.RealWorld,
                                                                   GHC.Types.Int #)
                                                        [LclId[JoinId(1)],
                                                         Arity=1,
                                                         Str=<S,U>,
                                                         Unf=OtherCon []] =
                                                            sat-only [w1_sbc9g
                                                                      wild_sbc9j
                                                                      wild1_sbc9l
                                                                      wild2_sbc9o
                                                                      $dBufferedIO_sbc9q
                                                                      $dTypeable_sbc9r
                                                                      dt_sbc9u
                                                                      ww1_sbc9F
                                                                      ww2_sbc9G
                                                                      ww3_sbc9H] \r [w3_sbc9T]
                                                                case
                                                                    readMutVar# [dt_sbc9u w3_sbc9T]
                                                                of
                                                                { (#,#) ipv2_sbc9V
                                                                        ipv3_sbc9W [Occ=Once!] ->
                                                                      case
                                                                          ipv3_sbc9W
                                                                      of
                                                                      wild4_sbc9X
                                                                      { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                             _ [Occ=Dead]
                                                                                             _ [Occ=Dead]
                                                                                             dt12_sbca1 [Occ=Once]
                                                                                             dt13_sbca2
                                                                                             dt14_sbca3 ->
                                                                            case
                                                                                ==# [dt13_sbca2
                                                                                     dt14_sbca3]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      -# [dt14_sbca3
                                                                                          dt13_sbca2]
                                                                                  of
                                                                                  y1_sbca5 [Dmd=<S,U>]
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            <=# [wild_sbc9j
                                                                                                 y1_sbca5]
                                                                                        of
                                                                                        { __DEFAULT ->
                                                                                              let {
                                                                                                sat_sbca7 [Occ=Once]
                                                                                                  :: GHC.Types.Int
                                                                                                [LclId] =
                                                                                                    CCCS GHC.Types.I#! [y1_sbca5];
                                                                                              } in 
                                                                                                GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                                    wild2_sbc9o
                                                                                                    wild4_sbc9X
                                                                                                    w1_sbc9g
                                                                                                    GHC.IO.Handle.Text.hGetBuf3
                                                                                                    sat_sbca7
                                                                                                    ipv2_sbc9V;
                                                                                          1# ->
                                                                                              GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                                  wild2_sbc9o
                                                                                                  wild4_sbc9X
                                                                                                  w1_sbc9g
                                                                                                  GHC.IO.Handle.Text.hGetBuf3
                                                                                                  wild1_sbc9l
                                                                                                  ipv2_sbc9V;
                                                                                        };
                                                                                  };
                                                                              1# ->
                                                                                  let-no-escape {
                                                                                    fail_sbca8 [Occ=Once*!T[1],
                                                                                                Dmd=<L,1*C1(U(U,U))>]
                                                                                      :: GHC.Prim.Void#
                                                                                         -> (# GHC.Prim.State#
                                                                                                 GHC.Prim.RealWorld,
                                                                                               GHC.Types.Int #)
                                                                                    [LclId[JoinId(1)],
                                                                                     Arity=1,
                                                                                     Str=<L,A>,
                                                                                     Unf=OtherCon []] =
                                                                                        sat-only [w1_sbc9g
                                                                                                  wild_sbc9j
                                                                                                  wild1_sbc9l
                                                                                                  wild2_sbc9o
                                                                                                  $dBufferedIO_sbc9q
                                                                                                  dt_sbc9u
                                                                                                  ww1_sbc9F
                                                                                                  ipv2_sbc9V
                                                                                                  wild4_sbc9X] \r [ds14_sbca9]
                                                                                            case
                                                                                                GHC.IO.BufferedIO.fillReadBuffer
                                                                                                    $dBufferedIO_sbc9q
                                                                                                    ww1_sbc9F
                                                                                                    wild4_sbc9X
                                                                                                    ipv2_sbc9V
                                                                                            of
                                                                                            { (#,#) ipv4_sbcab [Occ=Once*]
                                                                                                    ipv5_sbcac [Occ=Once!] ->
                                                                                                  case
                                                                                                      ipv5_sbcac
                                                                                                  of
                                                                                                  { (,) r_sbcae [Occ=Once!]
                                                                                                        buf'_sbcaf ->
                                                                                                        case
                                                                                                            r_sbcae
                                                                                                        of
                                                                                                        wild6_sbcag
                                                                                                        { GHC.Types.I# x_sbcah [Occ=Once!] ->
                                                                                                              case
                                                                                                                  x_sbcah
                                                                                                              of
                                                                                                              wild7_sbcai
                                                                                                              { __DEFAULT ->
                                                                                                                    case
                                                                                                                        writeMutVar# [dt_sbc9u
                                                                                                                                      buf'_sbcaf
                                                                                                                                      ipv4_sbcab]
                                                                                                                    of
                                                                                                                    s2#_sbcaj
                                                                                                                    { __DEFAULT ->
                                                                                                                          case
                                                                                                                              <=# [wild7_sbcai
                                                                                                                                   wild_sbc9j]
                                                                                                                          of
                                                                                                                          { __DEFAULT ->
                                                                                                                                GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                                                                    wild2_sbc9o
                                                                                                                                    buf'_sbcaf
                                                                                                                                    w1_sbc9g
                                                                                                                                    GHC.IO.Handle.Text.hGetBuf3
                                                                                                                                    wild1_sbc9l
                                                                                                                                    s2#_sbcaj;
                                                                                                                            1# ->
                                                                                                                                GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                                                                    wild2_sbc9o
                                                                                                                                    buf'_sbcaf
                                                                                                                                    w1_sbc9g
                                                                                                                                    GHC.IO.Handle.Text.hGetBuf3
                                                                                                                                    wild6_sbcag
                                                                                                                                    s2#_sbcaj;
                                                                                                                          };
                                                                                                                    };
                                                                                                                0# ->
                                                                                                                    (#,#) [ipv4_sbcab
                                                                                                                           GHC.IO.Handle.Text.hGetBuf3];
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                  } in 
                                                                                    case
                                                                                        ># [wild_sbc9j
                                                                                            dt12_sbca1]
                                                                                    of
                                                                                    { __DEFAULT ->
                                                                                          fail_sbca8
                                                                                              GHC.Prim.void#;
                                                                                      1# ->
                                                                                          case
                                                                                              Data.Typeable.Internal.sameTypeRep
                                                                                                  $dTypeable_sbc9r
                                                                                                  lvl11_rb6WR
                                                                                          of
                                                                                          { GHC.Types.False ->
                                                                                                fail_sbca8
                                                                                                    GHC.Prim.void#;
                                                                                            GHC.Types.True ->
                                                                                                case
                                                                                                    w1_sbc9g
                                                                                                of
                                                                                                { GHC.Ptr.Ptr ww5_sbcao [Occ=Once] ->
                                                                                                      case
                                                                                                          int2Word# [wild_sbc9j]
                                                                                                      of
                                                                                                      sat_sbcap
                                                                                                      { __DEFAULT ->
                                                                                                            GHC.IO.FD.$wreadRawBufferPtr
                                                                                                                GHC.IO.FD.$fBufferedIOFD12
                                                                                                                ww2_sbc9G
                                                                                                                ww3_sbc9H
                                                                                                                ww5_sbcao
                                                                                                                0#
                                                                                                                sat_sbcap
                                                                                                                ipv2_sbc9V;
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                            };
                                                                      };
                                                                };
                                                      } in 
                                                        case ds11_sbc9O of {
                                                          GHC.IO.Buffer.ReadBuffer ->
                                                              case ==# [dt7_sbc9Q dt8_sbc9R] of {
                                                                __DEFAULT ->
                                                                    case
                                                                        readMutVar# [dt1_sbc9w
                                                                                     ipv_sbc9J]
                                                                    of
                                                                    { (#,#) ipv2_sbcat [Occ=Once]
                                                                            ipv3_sbcau [Occ=Once!] ->
                                                                          case ipv3_sbcau of {
                                                                            (,) codec_state_sbcaw [Occ=Once]
                                                                                bbuf0_sbcax [Occ=Once*] ->
                                                                                case
                                                                                    readMutVar# [dt2_sbc9x
                                                                                                 ipv2_sbcat]
                                                                                of
                                                                                { (#,#) ipv4_sbcaz [Occ=Once]
                                                                                        ipv5_sbcaA ->
                                                                                      let {
                                                                                        sat_sbcaI [Occ=Once]
                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                        [LclId] =
                                                                                            [ipv5_sbcaA] \u []
                                                                                                case
                                                                                                    ipv5_sbcaA
                                                                                                of
                                                                                                { GHC.IO.Buffer.Buffer dt9_sbcaC [Occ=Once]
                                                                                                                       dt10_sbcaD [Occ=Once]
                                                                                                                       ds14_sbcaE [Occ=Once]
                                                                                                                       dt11_sbcaF [Occ=Once]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       _ [Occ=Dead] ->
                                                                                                      GHC.IO.Buffer.Buffer [dt9_sbcaC
                                                                                                                            dt10_sbcaD
                                                                                                                            ds14_sbcaE
                                                                                                                            dt11_sbcaF
                                                                                                                            0#
                                                                                                                            0#];
                                                                                                };
                                                                                      } in 
                                                                                        case
                                                                                            writeMutVar# [dt2_sbc9x
                                                                                                          sat_sbcaI
                                                                                                          ipv4_sbcaz]
                                                                                        of
                                                                                        s2#_sbcaJ
                                                                                        { __DEFAULT ->
                                                                                              case
                                                                                                  ipv5_sbcaA
                                                                                              of
                                                                                              { GHC.IO.Buffer.Buffer dt9_sbcaL [Occ=Once]
                                                                                                                     dt10_sbcaM [Occ=Once]
                                                                                                                     ds14_sbcaN [Occ=Once]
                                                                                                                     _ [Occ=Dead]
                                                                                                                     dt12_sbcaP [Occ=Once!]
                                                                                                                     _ [Occ=Dead] ->
                                                                                                    case
                                                                                                        dt12_sbcaP
                                                                                                    of
                                                                                                    wild7_sbcaR
                                                                                                    { __DEFAULT ->
                                                                                                          case
                                                                                                              ds4_sbc9A
                                                                                                          of
                                                                                                          { GHC.Base.Nothing ->
                                                                                                                let {
                                                                                                                  sat_sbcb1 [Occ=Once]
                                                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                                                         GHC.Word.Word8
                                                                                                                  [LclId] =
                                                                                                                      [bbuf0_sbcax
                                                                                                                       wild7_sbcaR] \u []
                                                                                                                          case
                                                                                                                              bbuf0_sbcax
                                                                                                                          of
                                                                                                                          { GHC.IO.Buffer.Buffer dt14_sbcaU [Occ=Once]
                                                                                                                                                 dt15_sbcaV [Occ=Once]
                                                                                                                                                 ds15_sbcaW [Occ=Once]
                                                                                                                                                 dt16_sbcaX [Occ=Once]
                                                                                                                                                 dt17_sbcaY [Occ=Once]
                                                                                                                                                 dt18_sbcaZ [Occ=Once] ->
                                                                                                                                case
                                                                                                                                    +# [dt17_sbcaY
                                                                                                                                        wild7_sbcaR]
                                                                                                                                of
                                                                                                                                sat_sbcb0
                                                                                                                                { __DEFAULT ->
                                                                                                                                      GHC.IO.Buffer.Buffer [dt14_sbcaU
                                                                                                                                                            dt15_sbcaV
                                                                                                                                                            ds15_sbcaW
                                                                                                                                                            dt16_sbcaX
                                                                                                                                                            sat_sbcb0
                                                                                                                                                            dt18_sbcaZ];
                                                                                                                                };
                                                                                                                          };
                                                                                                                } in 
                                                                                                                  case
                                                                                                                      writeMutVar# [dt_sbc9u
                                                                                                                                    sat_sbcb1
                                                                                                                                    s2#_sbcaJ]
                                                                                                                  of
                                                                                                                  s2#1_sbcb2
                                                                                                                  { __DEFAULT ->
                                                                                                                        $w$j_sbc9S
                                                                                                                            s2#1_sbcb2;
                                                                                                                  };
                                                                                                            GHC.Base.Just decoder_sbcb3 [Occ=Once!] ->
                                                                                                                case
                                                                                                                    decoder_sbcb3
                                                                                                                of
                                                                                                                { GHC.IO.Encoding.Types.BufferCodec ds15_sbcb5 [Occ=Once]
                                                                                                                                                    ds16_sbcb6 [Occ=Once]
                                                                                                                                                    _ [Occ=Dead]
                                                                                                                                                    _ [Occ=Dead]
                                                                                                                                                    ds19_sbcb9 [Occ=Once!] ->
                                                                                                                      case
                                                                                                                          ds19_sbcb9
                                                                                                                              codec_state_sbcaw
                                                                                                                              s2#_sbcaJ
                                                                                                                      of
                                                                                                                      { (#,#) ipv6_sbcbb [Occ=Once]
                                                                                                                              _ [Occ=Dead] ->
                                                                                                                            let {
                                                                                                                              sat_sbcbd [Occ=Once]
                                                                                                                                :: GHC.IO.Buffer.Buffer
                                                                                                                                     GHC.IO.Buffer.CharBufElem
                                                                                                                              [LclId] =
                                                                                                                                  CCCS GHC.IO.Buffer.Buffer! [dt9_sbcaL
                                                                                                                                                              dt10_sbcaM
                                                                                                                                                              ds14_sbcaN
                                                                                                                                                              wild7_sbcaR
                                                                                                                                                              0#
                                                                                                                                                              0#];
                                                                                                                            } in 
                                                                                                                              case
                                                                                                                                  GHC.IO.Handle.Internals.$wstreamEncode
                                                                                                                                      ds15_sbcb5
                                                                                                                                      ds16_sbcb6
                                                                                                                                      bbuf0_sbcax
                                                                                                                                      sat_sbcbd
                                                                                                                                      ipv6_sbcbb
                                                                                                                              of
                                                                                                                              { (#,#) ipv8_sbcbf [Occ=Once]
                                                                                                                                      ipv9_sbcbg [Occ=Once!] ->
                                                                                                                                    case
                                                                                                                                        ipv9_sbcbg
                                                                                                                                    of
                                                                                                                                    { (,) bbuf1_sbcbi [Occ=Once]
                                                                                                                                          _ [Occ=Dead] ->
                                                                                                                                          case
                                                                                                                                              writeMutVar# [dt_sbc9u
                                                                                                                                                            bbuf1_sbcbi
                                                                                                                                                            ipv8_sbcbf]
                                                                                                                                          of
                                                                                                                                          s2#1_sbcbk
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                $w$j_sbc9S
                                                                                                                                                    s2#1_sbcbk;
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              };
                                                                                                                      };
                                                                                                                };
                                                                                                          };
                                                                                                      0# ->
                                                                                                          case
                                                                                                              writeMutVar# [dt_sbc9u
                                                                                                                            bbuf0_sbcax
                                                                                                                            s2#_sbcaJ]
                                                                                                          of
                                                                                                          s2#1_sbcbl
                                                                                                          { __DEFAULT ->
                                                                                                                $w$j_sbc9S
                                                                                                                    s2#1_sbcbl;
                                                                                                          };
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                };
                                                                          };
                                                                    };
                                                                1# -> $w$j_sbc9S ipv_sbc9J;
                                                              };
                                                          GHC.IO.Buffer.WriteBuffer ->
                                                              $w$j_sbc9S ipv_sbc9J;
                                                        };
                                                };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.Handle.Internals.wantReadableHandle_1
                          lvl13_rb6WT w_sbc9f sat_sbcbm w2_sbc9i;
                1# ->
                    GHC.IO.Handle.Text.$willegalBufferSize
                        w_sbc9f lvl13_rb6WT wild_sbc9j w2_sbc9i;
              };
          0# -> (#,#) [w2_sbc9i GHC.IO.Handle.Text.hGetBuf3];
        };

GHC.IO.Handle.Text.hGetBufSome1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbcbn w1_sbcbo w2_sbcbp w3_sbcbq]
        case w2_sbcbp of {
          GHC.Types.I# ww1_sbcbs [Occ=Once] ->
              GHC.IO.Handle.Text.$whGetBufSome
                  w_sbcbn w1_sbcbo ww1_sbcbs w3_sbcbq;
        };

GHC.IO.Handle.Text.hGetBufSome
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Handle.Text.hGetBufSome1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.Handle.Text.hGetBuf4
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<S,1*U><S(SLLLSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><S,1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [h__sbcbt
           buf_sbcbu
           ptr_sbcbv
           so_far_sbcbw
           count_sbcbx
           eta_sbcby]
        case h__sbcbt of wild_sbcbz {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt_sbcbF [Occ=Once*]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case buf_sbcbu of {
                GHC.IO.Buffer.Buffer dt4_sbcbR
                                     dt5_sbcbS
                                     ds9_sbcbT [Occ=OnceL*]
                                     dt6_sbcbU [Occ=OnceL*]
                                     dt7_sbcbV
                                     dt8_sbcbW ->
                    case so_far_sbcbw of {
                      GHC.Types.I# ipv_sbcbY [Occ=Once*] ->
                          case count_sbcbx of {
                            GHC.Types.I# ipv1_sbcc0 ->
                                case -# [dt8_sbcbW dt7_sbcbV] of avail_sbcc1 [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      case <# [ipv1_sbcc0 avail_sbcc1] of {
                                        __DEFAULT ->
                                            case ptr_sbcbv of {
                                              GHC.Ptr.Ptr ds11_sbcc4 ->
                                                  case int2Word# [avail_sbcc1] of sat_sbcc7 {
                                                    __DEFAULT ->
                                                        case
                                                            plusAddr# [dt4_sbcbR dt7_sbcbV]
                                                        of
                                                        sat_sbcc6
                                                        { __DEFAULT ->
                                                              case
                                                                  __pkg_ccall base-4.11.0.0 [ds11_sbcc4
                                                                                             sat_sbcc6
                                                                                             sat_sbcc7
                                                                                             eta_sbcby]
                                                              of
                                                              { (#,#) ds12_sbcc9 [Occ=Once]
                                                                      _ [Occ=Dead] ->
                                                                    case
                                                                        touch# [dt5_sbcbS
                                                                                ds12_sbcc9]
                                                                    of
                                                                    s'_sbccb
                                                                    { __DEFAULT ->
                                                                          let {
                                                                            buf'_sbccc [Dmd=<L,U(U,U,U,U,U,U)>]
                                                                              :: GHC.IO.Buffer.Buffer
                                                                                   GHC.Word.Word8
                                                                            [LclId,
                                                                             Unf=OtherCon []] =
                                                                                CCCS GHC.IO.Buffer.Buffer! [dt4_sbcbR
                                                                                                            dt5_sbcbS
                                                                                                            ds9_sbcbT
                                                                                                            dt6_sbcbU
                                                                                                            0#
                                                                                                            0#];
                                                                          } in 
                                                                            case
                                                                                writeMutVar# [dt_sbcbF
                                                                                              buf'_sbccc
                                                                                              s'_sbccb]
                                                                            of
                                                                            s2#_sbccd
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      -# [ipv1_sbcc0
                                                                                          avail_sbcc1]
                                                                                  of
                                                                                  wild3_sbcce
                                                                                  { __DEFAULT ->
                                                                                        let {
                                                                                          sat_sbccj [Occ=Once]
                                                                                            :: GHC.Types.Int
                                                                                          [LclId] =
                                                                                              CCCS GHC.Types.I#! [wild3_sbcce];
                                                                                        } in 
                                                                                          case
                                                                                              +# [ipv_sbcbY
                                                                                                  avail_sbcc1]
                                                                                          of
                                                                                          sat_sbcch
                                                                                          { __DEFAULT ->
                                                                                                let {
                                                                                                  sat_sbcci [Occ=Once]
                                                                                                    :: GHC.Types.Int
                                                                                                  [LclId] =
                                                                                                      CCCS GHC.Types.I#! [sat_sbcch];
                                                                                                } in 
                                                                                                  case
                                                                                                      plusAddr# [ds11_sbcc4
                                                                                                                 avail_sbcc1]
                                                                                                  of
                                                                                                  sat_sbccf
                                                                                                  { __DEFAULT ->
                                                                                                        let {
                                                                                                          sat_sbccg [Occ=Once]
                                                                                                            :: GHC.Ptr.Ptr
                                                                                                                 GHC.Word.Word8
                                                                                                          [LclId] =
                                                                                                              CCCS GHC.Ptr.Ptr! [sat_sbccf];
                                                                                                        } in 
                                                                                                          GHC.IO.Handle.Text.hGetBuf2
                                                                                                              wild_sbcbz
                                                                                                              buf'_sbccc
                                                                                                              sat_sbccg
                                                                                                              sat_sbcci
                                                                                                              sat_sbccj
                                                                                                              s2#_sbccd;
                                                                                                  };
                                                                                          };
                                                                                    0# ->
                                                                                        case
                                                                                            +# [ipv_sbcbY
                                                                                                avail_sbcc1]
                                                                                        of
                                                                                        sat_sbcck
                                                                                        { __DEFAULT ->
                                                                                              let {
                                                                                                sat_sbccl [Occ=Once]
                                                                                                  :: GHC.Types.Int
                                                                                                [LclId] =
                                                                                                    CCCS GHC.Types.I#! [sat_sbcck];
                                                                                              } in 
                                                                                                (#,#) [s2#_sbccd
                                                                                                       sat_sbccl];
                                                                                        };
                                                                                  };
                                                                            };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                        1# ->
                                            case ptr_sbcbv of {
                                              GHC.Ptr.Ptr ds11_sbccn [Occ=Once] ->
                                                  case int2Word# [ipv1_sbcc0] of sat_sbccq {
                                                    __DEFAULT ->
                                                        case
                                                            plusAddr# [dt4_sbcbR dt7_sbcbV]
                                                        of
                                                        sat_sbccp
                                                        { __DEFAULT ->
                                                              case
                                                                  __pkg_ccall base-4.11.0.0 [ds11_sbccn
                                                                                             sat_sbccp
                                                                                             sat_sbccq
                                                                                             eta_sbcby]
                                                              of
                                                              { (#,#) ds12_sbccs [Occ=Once]
                                                                      _ [Occ=Dead] ->
                                                                    case
                                                                        touch# [dt5_sbcbS
                                                                                ds12_sbccs]
                                                                    of
                                                                    s'_sbccu
                                                                    { __DEFAULT ->
                                                                          case
                                                                              +# [dt7_sbcbV
                                                                                  ipv1_sbcc0]
                                                                          of
                                                                          sat_sbccv
                                                                          { __DEFAULT ->
                                                                                let {
                                                                                  sat_sbccw [Occ=Once]
                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                         GHC.Word.Word8
                                                                                  [LclId] =
                                                                                      CCCS GHC.IO.Buffer.Buffer! [dt4_sbcbR
                                                                                                                  dt5_sbcbS
                                                                                                                  ds9_sbcbT
                                                                                                                  dt6_sbcbU
                                                                                                                  sat_sbccv
                                                                                                                  dt8_sbcbW];
                                                                                } in 
                                                                                  case
                                                                                      writeMutVar# [dt_sbcbF
                                                                                                    sat_sbccw
                                                                                                    s'_sbccu]
                                                                                  of
                                                                                  s2#_sbccx
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            +# [ipv_sbcbY
                                                                                                ipv1_sbcc0]
                                                                                        of
                                                                                        sat_sbccy
                                                                                        { __DEFAULT ->
                                                                                              let {
                                                                                                sat_sbccz [Occ=Once]
                                                                                                  :: GHC.Types.Int
                                                                                                [LclId] =
                                                                                                    CCCS GHC.Types.I#! [sat_sbccy];
                                                                                              } in 
                                                                                                (#,#) [s2#_sbccx
                                                                                                       sat_sbccz];
                                                                                        };
                                                                                  };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };
GHC.IO.Handle.Text.hGetBuf2 [Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<S,1*U><S(LLLSLL),1*U(U,U,U,U,U,U)><L,U(U)><L,U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [h__sbccA
           buf_sbccB
           ptr_sbccC
           so_far_sbccD
           count_sbccE
           eta_sbccF]
        case h__sbccA of wild_sbccG {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       $dBufferedIO_sbccI [Occ=Once]
                                       $dTypeable_sbccJ [Occ=Once]
                                       ds_sbccK
                                       _ [Occ=Dead]
                                       dt_sbccM [Occ=Once]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case buf_sbccB of wild1_sbccX {
                GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     dt6_sbcd1 [Occ=Once]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead] ->
                    case count_sbccE of wild2_sbcd4 {
                      GHC.Types.I# x_sbcd5 ->
                          let-no-escape {
                            fail_sbcd6 [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                              :: GHC.Prim.Void#
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                            [LclId[JoinId(1)], Arity=1, Str=<L,A>, Unf=OtherCon []] =
                                sat-only [ptr_sbccC
                                          so_far_sbccD
                                          eta_sbccF
                                          wild_sbccG
                                          $dBufferedIO_sbccI
                                          ds_sbccK
                                          dt_sbccM
                                          wild1_sbccX
                                          wild2_sbcd4] \r [ds10_sbcd7]
                                    case
                                        GHC.IO.BufferedIO.fillReadBuffer
                                            $dBufferedIO_sbccI ds_sbccK wild1_sbccX eta_sbccF
                                    of
                                    { (#,#) ipv_sbcd9 [Occ=Once*] ipv1_sbcda [Occ=Once!] ->
                                          case ipv1_sbcda of {
                                            (,) r_sbcdc [Occ=Once!] buf'_sbcdd ->
                                                case r_sbcdc of {
                                                  GHC.Types.I# x1_sbcdf [Occ=Once!] ->
                                                      case x1_sbcdf of {
                                                        __DEFAULT ->
                                                            case
                                                                writeMutVar# [dt_sbccM
                                                                              buf'_sbcdd
                                                                              ipv_sbcd9]
                                                            of
                                                            s2#_sbcdh
                                                            { __DEFAULT ->
                                                                  GHC.IO.Handle.Text.hGetBuf4
                                                                      wild_sbccG
                                                                      buf'_sbcdd
                                                                      ptr_sbccC
                                                                      so_far_sbccD
                                                                      wild2_sbcd4
                                                                      s2#_sbcdh;
                                                            };
                                                        0# -> (#,#) [ipv_sbcd9 so_far_sbccD];
                                                      };
                                                };
                                          };
                                    };
                          } in 
                            case ># [x_sbcd5 dt6_sbcd1] of {
                              __DEFAULT -> fail_sbcd6 GHC.Prim.void#;
                              1# ->
                                  case
                                      Data.Typeable.Internal.sameTypeRep
                                          $dTypeable_sbccJ lvl11_rb6WR
                                  of
                                  { GHC.Types.False -> fail_sbcd6 GHC.Prim.void#;
                                    GHC.Types.True ->
                                        let-no-escape {
                                          exit_sbcdk [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
                                            :: GHC.Prim.Int#
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                     GHC.Types.Int #)
                                          [LclId[JoinId(2)],
                                           Arity=2,
                                           Str=<L,U><S,U>,
                                           Unf=OtherCon []] =
                                              sat-only [so_far_sbccD] \r [d_sbcdl ipv_sbcdm]
                                                  let {
                                                    sat_sbcdq [Occ=Once] :: GHC.Types.Int
                                                    [LclId] =
                                                        [so_far_sbccD d_sbcdl] \u []
                                                            case so_far_sbccD of {
                                                              GHC.Types.I# x1_sbcdo [Occ=Once] ->
                                                                  case
                                                                      +# [x1_sbcdo d_sbcdl]
                                                                  of
                                                                  sat_sbcdp
                                                                  { __DEFAULT ->
                                                                        GHC.Types.I# [sat_sbcdp];
                                                                  };
                                                            };
                                                  } in  (#,#) [ipv_sbcdm sat_sbcdq];
                                        } in 
                                          let-no-escape {
                                            exit1_sbcdr [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
                                              :: GHC.Types.Int
                                                 -> GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Types.Int #)
                                            [LclId[JoinId(2)],
                                             Arity=2,
                                             Str=<L,1*U(U)><S,U>,
                                             Unf=OtherCon []] =
                                                sat-only [so_far_sbccD] \r [w_sbcds w1_sbcdt]
                                                    let {
                                                      sat_sbcdu [Occ=Once] :: GHC.Types.Int
                                                      [LclId] =
                                                          [so_far_sbccD w_sbcds] \u []
                                                              GHC.Num.$fNumInt_$c+
                                                                  so_far_sbccD w_sbcds;
                                                    } in  (#,#) [w1_sbcdt sat_sbcdu];
                                          } in 
                                            let-no-escape {
                                              $wloop_sbcdv [InlPrag=NOUSERINLINE[0],
                                                            Occ=LoopBreakerT[4]]
                                                :: GHC.IO.FD.FD
                                                   -> GHC.Types.Int
                                                   -> GHC.Prim.Int#
                                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         GHC.Types.Int #)
                                              [LclId[JoinId(4)],
                                               Arity=4,
                                               Str=<L,1*U(U,U)><L,1*U(U)><S,U><S,U>,
                                               Unf=OtherCon []] =
                                                  sat-only [ptr_sbccC
                                                            exit_sbcdk
                                                            exit1_sbcdr
                                                            $wloop_sbcdv] \r [w_sbcdw
                                                                              w1_sbcdx
                                                                              ww_sbcdy
                                                                              w2_sbcdz]
                                                      case <=# [ww_sbcdy 0#] of {
                                                        __DEFAULT ->
                                                            case ptr_sbccC of {
                                                              GHC.Ptr.Ptr addr_sbcdC [Occ=Once] ->
                                                                  case w1_sbcdx of {
                                                                    GHC.Types.I# d_sbcdE ->
                                                                        case w_sbcdw of ww1_sbcdF {
                                                                          GHC.IO.FD.FD ww2_sbcdG [Occ=Once]
                                                                                       ww3_sbcdH [Occ=Once] ->
                                                                              case
                                                                                  int2Word# [ww_sbcdy]
                                                                              of
                                                                              sat_sbcdJ
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        plusAddr# [addr_sbcdC
                                                                                                   d_sbcdE]
                                                                                    of
                                                                                    sat_sbcdI
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              GHC.IO.FD.$wreadRawBufferPtr
                                                                                                  GHC.IO.FD.$fBufferedIOFD12
                                                                                                  ww2_sbcdG
                                                                                                  ww3_sbcdH
                                                                                                  sat_sbcdI
                                                                                                  0#
                                                                                                  sat_sbcdJ
                                                                                                  w2_sbcdz
                                                                                          of
                                                                                          { (#,#) ipv_sbcdL [Occ=Once*]
                                                                                                  ipv1_sbcdM [Occ=Once!] ->
                                                                                                case
                                                                                                    ipv1_sbcdM
                                                                                                of
                                                                                                { GHC.Types.I# x1_sbcdO [Occ=Once!] ->
                                                                                                      case
                                                                                                          x1_sbcdO
                                                                                                      of
                                                                                                      wild7_sbcdP
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                -# [ww_sbcdy
                                                                                                                    wild7_sbcdP]
                                                                                                            of
                                                                                                            sat_sbcdS
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      +# [d_sbcdE
                                                                                                                          wild7_sbcdP]
                                                                                                                  of
                                                                                                                  sat_sbcdQ
                                                                                                                  { __DEFAULT ->
                                                                                                                        let {
                                                                                                                          sat_sbcdR [Occ=Once]
                                                                                                                            :: GHC.Types.Int
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Types.I#! [sat_sbcdQ];
                                                                                                                        } in 
                                                                                                                          $wloop_sbcdv
                                                                                                                              ww1_sbcdF
                                                                                                                              sat_sbcdR
                                                                                                                              sat_sbcdS
                                                                                                                              ipv_sbcdL;
                                                                                                                  };
                                                                                                            };
                                                                                                        0# ->
                                                                                                            exit_sbcdk
                                                                                                                d_sbcdE
                                                                                                                ipv_sbcdL;
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                        1# -> exit1_sbcdr w1_sbcdx w2_sbcdz;
                                                      };
                                            } in 
                                              $wloop_sbcdv
                                                  ds_sbccK
                                                  GHC.IO.Handle.Text.hGetBuf3
                                                  x_sbcd5
                                                  eta_sbccF;
                                  };
                            };
                    };
              };
        };

GHC.IO.Handle.Text.hGetBuf6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetBuf"#;

GHC.IO.Handle.Text.hGetBuf5 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hGetBuf6;

GHC.IO.Handle.Text.$whGetBuf [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId, Arity=4, Str=<L,U><L,U(U)><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [w_sbcdT w1_sbcdU ww_sbcdV w2_sbcdW]
        case ww_sbcdV of wild_sbcdX {
          __DEFAULT ->
              case <# [wild_sbcdX 0#] of {
                __DEFAULT ->
                    let {
                      wild1_sbcdZ [Occ=OnceL*, Dmd=<L,U(U)>] :: GHC.Types.Int
                      [LclId, Unf=OtherCon []] =
                          CCCS GHC.Types.I#! [wild_sbcdX]; } in
                    let {
                      sat_sbcfC [Occ=Once]
                        :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Int
                      [LclId] =
                          [w1_sbcdU wild1_sbcdZ] \r [h__sbce0 eta_sbce1]
                              case h__sbce0 of wild2_sbce2 {
                                GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             dt_sbce8
                                                             _ [Occ=Dead]
                                                             dt1_sbcea [Occ=Once]
                                                             dt2_sbceb
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             ds4_sbcee [Occ=Once!]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                    case readMutVar# [dt2_sbceb eta_sbce1] of {
                                      (#,#) ipv_sbcek [Occ=Once*] ipv1_sbcel [Occ=Once!] ->
                                          case ipv1_sbcel of {
                                            GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 ds11_sbcep [Occ=Once!]
                                                                 _ [Occ=Dead]
                                                                 dt7_sbcer [Occ=Once]
                                                                 dt8_sbces [Occ=Once] ->
                                                let-no-escape {
                                                  $w$j_sbcet [InlPrag=NOUSERINLINE[0],
                                                              Occ=Once*!T[1],
                                                              Dmd=<L,1*C1(U(U,U))>]
                                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Types.Int #)
                                                  [LclId[JoinId(1)],
                                                   Arity=1,
                                                   Str=<S,U>,
                                                   Unf=OtherCon []] =
                                                      sat-only [w1_sbcdU
                                                                wild1_sbcdZ
                                                                wild2_sbce2
                                                                dt_sbce8] \r [w3_sbceu]
                                                          case readMutVar# [dt_sbce8 w3_sbceu] of {
                                                            (#,#) ipv2_sbcew [Occ=Once*]
                                                                  ipv3_sbcex [Occ=Once!] ->
                                                                case ipv3_sbcex of wild4_sbcey {
                                                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       dt13_sbceD [Occ=Once]
                                                                                       dt14_sbceE [Occ=Once] ->
                                                                      case
                                                                          ==# [dt13_sbceD
                                                                               dt14_sbceE]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            GHC.IO.Handle.Text.hGetBuf4
                                                                                wild2_sbce2
                                                                                wild4_sbcey
                                                                                w1_sbcdU
                                                                                GHC.IO.Handle.Text.hGetBuf3
                                                                                wild1_sbcdZ
                                                                                ipv2_sbcew;
                                                                        1# ->
                                                                            GHC.IO.Handle.Text.hGetBuf2
                                                                                wild2_sbce2
                                                                                wild4_sbcey
                                                                                w1_sbcdU
                                                                                GHC.IO.Handle.Text.hGetBuf3
                                                                                wild1_sbcdZ
                                                                                ipv2_sbcew;
                                                                      };
                                                                };
                                                          };
                                                } in 
                                                  case ds11_sbcep of {
                                                    GHC.IO.Buffer.ReadBuffer ->
                                                        case ==# [dt7_sbcer dt8_sbces] of {
                                                          __DEFAULT ->
                                                              case
                                                                  readMutVar# [dt1_sbcea ipv_sbcek]
                                                              of
                                                              { (#,#) ipv2_sbceJ [Occ=Once]
                                                                      ipv3_sbceK [Occ=Once!] ->
                                                                    case ipv3_sbceK of {
                                                                      (,) codec_state_sbceM [Occ=Once]
                                                                          bbuf0_sbceN [Occ=Once*] ->
                                                                          case
                                                                              readMutVar# [dt2_sbceb
                                                                                           ipv2_sbceJ]
                                                                          of
                                                                          { (#,#) ipv4_sbceP [Occ=Once]
                                                                                  ipv5_sbceQ ->
                                                                                let {
                                                                                  sat_sbceY [Occ=Once]
                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                         GHC.IO.Buffer.CharBufElem
                                                                                  [LclId] =
                                                                                      [ipv5_sbceQ] \u []
                                                                                          case
                                                                                              ipv5_sbceQ
                                                                                          of
                                                                                          { GHC.IO.Buffer.Buffer dt9_sbceS [Occ=Once]
                                                                                                                 dt10_sbceT [Occ=Once]
                                                                                                                 ds14_sbceU [Occ=Once]
                                                                                                                 dt11_sbceV [Occ=Once]
                                                                                                                 _ [Occ=Dead]
                                                                                                                 _ [Occ=Dead] ->
                                                                                                GHC.IO.Buffer.Buffer [dt9_sbceS
                                                                                                                      dt10_sbceT
                                                                                                                      ds14_sbceU
                                                                                                                      dt11_sbceV
                                                                                                                      0#
                                                                                                                      0#];
                                                                                          };
                                                                                } in 
                                                                                  case
                                                                                      writeMutVar# [dt2_sbceb
                                                                                                    sat_sbceY
                                                                                                    ipv4_sbceP]
                                                                                  of
                                                                                  s2#_sbceZ
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            ipv5_sbceQ
                                                                                        of
                                                                                        { GHC.IO.Buffer.Buffer dt9_sbcf1 [Occ=Once]
                                                                                                               dt10_sbcf2 [Occ=Once]
                                                                                                               ds14_sbcf3 [Occ=Once]
                                                                                                               _ [Occ=Dead]
                                                                                                               dt12_sbcf5 [Occ=Once!]
                                                                                                               _ [Occ=Dead] ->
                                                                                              case
                                                                                                  dt12_sbcf5
                                                                                              of
                                                                                              wild7_sbcf7
                                                                                              { __DEFAULT ->
                                                                                                    case
                                                                                                        ds4_sbcee
                                                                                                    of
                                                                                                    { GHC.Base.Nothing ->
                                                                                                          let {
                                                                                                            sat_sbcfh [Occ=Once]
                                                                                                              :: GHC.IO.Buffer.Buffer
                                                                                                                   GHC.Word.Word8
                                                                                                            [LclId] =
                                                                                                                [bbuf0_sbceN
                                                                                                                 wild7_sbcf7] \u []
                                                                                                                    case
                                                                                                                        bbuf0_sbceN
                                                                                                                    of
                                                                                                                    { GHC.IO.Buffer.Buffer dt14_sbcfa [Occ=Once]
                                                                                                                                           dt15_sbcfb [Occ=Once]
                                                                                                                                           ds15_sbcfc [Occ=Once]
                                                                                                                                           dt16_sbcfd [Occ=Once]
                                                                                                                                           dt17_sbcfe [Occ=Once]
                                                                                                                                           dt18_sbcff [Occ=Once] ->
                                                                                                                          case
                                                                                                                              +# [dt17_sbcfe
                                                                                                                                  wild7_sbcf7]
                                                                                                                          of
                                                                                                                          sat_sbcfg
                                                                                                                          { __DEFAULT ->
                                                                                                                                GHC.IO.Buffer.Buffer [dt14_sbcfa
                                                                                                                                                      dt15_sbcfb
                                                                                                                                                      ds15_sbcfc
                                                                                                                                                      dt16_sbcfd
                                                                                                                                                      sat_sbcfg
                                                                                                                                                      dt18_sbcff];
                                                                                                                          };
                                                                                                                    };
                                                                                                          } in 
                                                                                                            case
                                                                                                                writeMutVar# [dt_sbce8
                                                                                                                              sat_sbcfh
                                                                                                                              s2#_sbceZ]
                                                                                                            of
                                                                                                            s2#1_sbcfi
                                                                                                            { __DEFAULT ->
                                                                                                                  $w$j_sbcet
                                                                                                                      s2#1_sbcfi;
                                                                                                            };
                                                                                                      GHC.Base.Just decoder_sbcfj [Occ=Once!] ->
                                                                                                          case
                                                                                                              decoder_sbcfj
                                                                                                          of
                                                                                                          { GHC.IO.Encoding.Types.BufferCodec ds15_sbcfl [Occ=Once]
                                                                                                                                              ds16_sbcfm [Occ=Once]
                                                                                                                                              _ [Occ=Dead]
                                                                                                                                              _ [Occ=Dead]
                                                                                                                                              ds19_sbcfp [Occ=Once!] ->
                                                                                                                case
                                                                                                                    ds19_sbcfp
                                                                                                                        codec_state_sbceM
                                                                                                                        s2#_sbceZ
                                                                                                                of
                                                                                                                { (#,#) ipv6_sbcfr [Occ=Once]
                                                                                                                        _ [Occ=Dead] ->
                                                                                                                      let {
                                                                                                                        sat_sbcft [Occ=Once]
                                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                                                        [LclId] =
                                                                                                                            CCCS GHC.IO.Buffer.Buffer! [dt9_sbcf1
                                                                                                                                                        dt10_sbcf2
                                                                                                                                                        ds14_sbcf3
                                                                                                                                                        wild7_sbcf7
                                                                                                                                                        0#
                                                                                                                                                        0#];
                                                                                                                      } in 
                                                                                                                        case
                                                                                                                            GHC.IO.Handle.Internals.$wstreamEncode
                                                                                                                                ds15_sbcfl
                                                                                                                                ds16_sbcfm
                                                                                                                                bbuf0_sbceN
                                                                                                                                sat_sbcft
                                                                                                                                ipv6_sbcfr
                                                                                                                        of
                                                                                                                        { (#,#) ipv8_sbcfv [Occ=Once]
                                                                                                                                ipv9_sbcfw [Occ=Once!] ->
                                                                                                                              case
                                                                                                                                  ipv9_sbcfw
                                                                                                                              of
                                                                                                                              { (,) bbuf1_sbcfy [Occ=Once]
                                                                                                                                    _ [Occ=Dead] ->
                                                                                                                                    case
                                                                                                                                        writeMutVar# [dt_sbce8
                                                                                                                                                      bbuf1_sbcfy
                                                                                                                                                      ipv8_sbcfv]
                                                                                                                                    of
                                                                                                                                    s2#1_sbcfA
                                                                                                                                    { __DEFAULT ->
                                                                                                                                          $w$j_sbcet
                                                                                                                                              s2#1_sbcfA;
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                };
                                                                                                          };
                                                                                                    };
                                                                                                0# ->
                                                                                                    case
                                                                                                        writeMutVar# [dt_sbce8
                                                                                                                      bbuf0_sbceN
                                                                                                                      s2#_sbceZ]
                                                                                                    of
                                                                                                    s2#1_sbcfB
                                                                                                    { __DEFAULT ->
                                                                                                          $w$j_sbcet
                                                                                                              s2#1_sbcfB;
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                          };
                                                                    };
                                                              };
                                                          1# -> $w$j_sbcet ipv_sbcek;
                                                        };
                                                    GHC.IO.Buffer.WriteBuffer ->
                                                        $w$j_sbcet ipv_sbcek;
                                                  };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.Handle.Internals.wantReadableHandle_1
                          GHC.IO.Handle.Text.hGetBuf5 w_sbcdT sat_sbcfC w2_sbcdW;
                1# ->
                    GHC.IO.Handle.Text.$willegalBufferSize
                        w_sbcdT GHC.IO.Handle.Text.hGetBuf5 wild_sbcdX w2_sbcdW;
              };
          0# -> (#,#) [w2_sbcdW GHC.IO.Handle.Text.hGetBuf3];
        };

GHC.IO.Handle.Text.hGetBuf1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbcfD w1_sbcfE w2_sbcfF w3_sbcfG]
        case w2_sbcfF of {
          GHC.Types.I# ww1_sbcfI [Occ=Once] ->
              GHC.IO.Handle.Text.$whGetBuf w_sbcfD w1_sbcfE ww1_sbcfI w3_sbcfG;
        };

GHC.IO.Handle.Text.hGetBuf
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Handle.Text.hGetBuf1 eta_B4 eta_B3 eta_B2 eta_B1;

lvl14_rb6WU :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "error"#;

lvl15_rb6WV :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl14_rb6WU;

lvl16_rb6WW :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.$trModule4;

lvl17_rb6WX :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.$trModule2;

lvl18_rb6WY :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "./GHC/IO/Handle/Text.hs"#;

lvl19_rb6WZ :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl18_rb6WY;

lvl20_rb6X0 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [785#];

lvl21_rb6X1 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [17#];

lvl22_rb6X2 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [38#];

lvl23_rb6X3 :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl16_rb6WW
                                           lvl17_rb6WX
                                           lvl19_rb6WZ
                                           lvl20_rb6X0
                                           lvl21_rb6X1
                                           lvl20_rb6X0
                                           lvl22_rb6X2];

lvl24_rb6X4 :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl15_rb6WV
                                                  lvl23_rb6X3
                                                  GHC.Stack.Types.EmptyCallStack];

lvl25_rb6X5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Todo: hPutBuf"#;

lvl26_rb6X6 :: GHC.Types.IO ()
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl25_rb6X5 of sat_sbcfJ {
          __DEFAULT -> GHC.Err.error lvl24_rb6X4 sat_sbcfJ;
        };

lvl27_rb6X7 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [790#];

lvl28_rb6X8 :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl16_rb6WW
                                           lvl17_rb6WX
                                           lvl19_rb6WZ
                                           lvl27_rb6X7
                                           lvl21_rb6X1
                                           lvl27_rb6X7
                                           lvl22_rb6X2];

lvl29_rb6X9 :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl15_rb6WV
                                                  lvl28_rb6X8
                                                  GHC.Stack.Types.EmptyCallStack];

lvl30_rb6Xa :: GHC.Types.IO GHC.Types.Int
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl25_rb6X5 of sat_sbcfK {
          __DEFAULT -> GHC.Err.error lvl29_rb6X9 sat_sbcfK;
        };

GHC.IO.Handle.Text.$wbufWrite [InlPrag=NOUSERINLINE[0],
                               Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=5,
 Str=<S,1*U><L,1*U(U)><S,U><L,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbcfL w1_sbcfM ww_sbcfN w2_sbcfO w3_sbcfP]
        case w_sbcfL of wild_sbcfQ {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       $dBufferedIO_sbcfS
                                       $dTypeable_sbcfT [Occ=Once*]
                                       ds_sbcfU [Occ=Once]
                                       _ [Occ=Dead]
                                       dt_sbcfW
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case ds_sbcfU of ww1_sbcg7 {
                GHC.IO.FD.FD ww2_sbcg8 [Occ=Once*] ww3_sbcg9 [Occ=Once*] ->
                    case readMutVar# [dt_sbcfW w3_sbcfP] of {
                      (#,#) ipv_sbcgb ipv1_sbcgc [Occ=Once!] ->
                          case ipv1_sbcgc of wild1_sbcgd {
                            GHC.IO.Buffer.Buffer dt4_sbcge
                                                 dt5_sbcgf
                                                 ds10_sbcgg [Occ=Once*]
                                                 dt6_sbcgh
                                                 dt7_sbcgi [Occ=Once*]
                                                 dt8_sbcgj ->
                                let {
                                  v_sbcgk :: GHC.Types.Int
                                  [LclId, Unf=OtherCon []] =
                                      CCCS GHC.Types.I#! [ww_sbcfN];
                                } in 
                                  let-no-escape {
                                    $j_sbcgl [Occ=Once*T[0], Dmd=<L,1*U(U,U)>]
                                      :: (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                                    [LclId[JoinId(0)], Unf=OtherCon []] =
                                        [w1_sbcfM
                                         ww_sbcfN
                                         w2_sbcfO
                                         wild_sbcfQ
                                         $dBufferedIO_sbcfS
                                         $dTypeable_sbcfT
                                         dt_sbcfW
                                         ww1_sbcg7
                                         ww2_sbcg8
                                         ww3_sbcg9
                                         ipv_sbcgb
                                         wild1_sbcgd
                                         dt6_sbcgh
                                         dt8_sbcgj
                                         v_sbcgk] \r []
                                            let-no-escape {
                                              $w$j_sbcgm [InlPrag=NOUSERINLINE[0],
                                                          Occ=Once*!T[1],
                                                          Dmd=<L,1*C1(U(U,U))>]
                                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         GHC.Types.Int #)
                                              [LclId[JoinId(1)],
                                               Arity=1,
                                               Str=<S,U>,
                                               Unf=OtherCon []] =
                                                  sat-only [w1_sbcfM
                                                            ww_sbcfN
                                                            w2_sbcfO
                                                            wild_sbcfQ
                                                            $dTypeable_sbcfT
                                                            ww2_sbcg8
                                                            ww3_sbcg9
                                                            dt6_sbcgh
                                                            v_sbcgk] \r [w4_sbcgn]
                                                      case <# [ww_sbcfN dt6_sbcgh] of {
                                                        __DEFAULT ->
                                                            case w2_sbcfO of {
                                                              GHC.Types.False ->
                                                                  case
                                                                      Data.Typeable.Internal.sameTypeRep
                                                                          $dTypeable_sbcfT
                                                                          lvl11_rb6WR
                                                                  of
                                                                  { GHC.Types.False -> lvl30_rb6Xa;
                                                                    GHC.Types.True ->
                                                                        case w1_sbcfM of {
                                                                          GHC.Ptr.Ptr ww5_sbcgt [Occ=Once] ->
                                                                              GHC.IO.FD.$w$cwriteNonBlocking
                                                                                  ww2_sbcg8
                                                                                  ww3_sbcg9
                                                                                  ww5_sbcgt
                                                                                  ww_sbcfN
                                                                                  w4_sbcgn;
                                                                        };
                                                                  };
                                                              GHC.Types.True ->
                                                                  case
                                                                      Data.Typeable.Internal.sameTypeRep
                                                                          $dTypeable_sbcfT
                                                                          lvl11_rb6WR
                                                                  of
                                                                  { GHC.Types.False -> lvl26_rb6X6;
                                                                    GHC.Types.True ->
                                                                        case w1_sbcfM of {
                                                                          GHC.Ptr.Ptr ww5_sbcgx [Occ=Once] ->
                                                                              case
                                                                                  GHC.IO.FD.$wfdWrite
                                                                                      ww2_sbcg8
                                                                                      ww3_sbcg9
                                                                                      ww5_sbcgx
                                                                                      ww_sbcfN
                                                                                      w4_sbcgn
                                                                              of
                                                                              { (#,#) ipv2_sbcgz [Occ=Once]
                                                                                      _ [Occ=Dead] ->
                                                                                    (#,#) [ipv2_sbcgz
                                                                                           v_sbcgk];
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                        1# ->
                                                            GHC.IO.Handle.Text.$wbufWrite
                                                                wild_sbcfQ
                                                                w1_sbcfM
                                                                ww_sbcfN
                                                                w2_sbcfO
                                                                w4_sbcgn;
                                                      };
                                            } in 
                                              case ># [dt8_sbcgj 0#] of {
                                                __DEFAULT -> $w$j_sbcgm ipv_sbcgb;
                                                1# ->
                                                    case
                                                        GHC.IO.BufferedIO.flushWriteBuffer
                                                            $dBufferedIO_sbcfS
                                                            ww1_sbcg7
                                                            wild1_sbcgd
                                                            ipv_sbcgb
                                                    of
                                                    { (#,#) ipv2_sbcgD [Occ=Once]
                                                            ipv3_sbcgE [Occ=Once] ->
                                                          case
                                                              writeMutVar# [dt_sbcfW
                                                                            ipv3_sbcgE
                                                                            ipv2_sbcgD]
                                                          of
                                                          s2#_sbcgF
                                                          { __DEFAULT -> $w$j_sbcgm s2#_sbcgF;
                                                          };
                                                    };
                                              };
                                  } in 
                                    case <# [ww_sbcfN dt6_sbcgh] of {
                                      __DEFAULT -> $j_sbcgl;
                                      1# ->
                                          case -# [dt6_sbcgh dt8_sbcgj] of sat_sbcgH {
                                            __DEFAULT ->
                                                case <=# [ww_sbcfN sat_sbcgH] of {
                                                  __DEFAULT -> $j_sbcgl;
                                                  1# ->
                                                      case w1_sbcfM of {
                                                        GHC.Ptr.Ptr ds12_sbcgK [Occ=Once] ->
                                                            case int2Word# [ww_sbcfN] of sat_sbcgN {
                                                              __DEFAULT ->
                                                                  case
                                                                      plusAddr# [dt4_sbcge
                                                                                 dt8_sbcgj]
                                                                  of
                                                                  sat_sbcgM
                                                                  { __DEFAULT ->
                                                                        case
                                                                            __pkg_ccall base-4.11.0.0 [sat_sbcgM
                                                                                                       ds12_sbcgK
                                                                                                       sat_sbcgN
                                                                                                       ipv_sbcgb]
                                                                        of
                                                                        { (#,#) ds13_sbcgP [Occ=Once]
                                                                                _ [Occ=Dead] ->
                                                                              case
                                                                                  touch# [dt5_sbcgf
                                                                                          ds13_sbcgP]
                                                                              of
                                                                              s'_sbcgR
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        -# [dt6_sbcgh
                                                                                            dt8_sbcgj]
                                                                                    of
                                                                                    sat_sbcgS
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              ==# [ww_sbcfN
                                                                                                   sat_sbcgS]
                                                                                          of
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    +# [dt8_sbcgj
                                                                                                        ww_sbcfN]
                                                                                                of
                                                                                                sat_sbcgU
                                                                                                { __DEFAULT ->
                                                                                                      let {
                                                                                                        sat_sbcgV [Occ=Once]
                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                               GHC.Word.Word8
                                                                                                        [LclId] =
                                                                                                            CCCS GHC.IO.Buffer.Buffer! [dt4_sbcge
                                                                                                                                        dt5_sbcgf
                                                                                                                                        ds10_sbcgg
                                                                                                                                        dt6_sbcgh
                                                                                                                                        dt7_sbcgi
                                                                                                                                        sat_sbcgU];
                                                                                                      } in 
                                                                                                        case
                                                                                                            writeMutVar# [dt_sbcfW
                                                                                                                          sat_sbcgV
                                                                                                                          s'_sbcgR]
                                                                                                        of
                                                                                                        s2#_sbcgW
                                                                                                        { __DEFAULT ->
                                                                                                              (#,#) [s2#_sbcgW
                                                                                                                     v_sbcgk];
                                                                                                        };
                                                                                                };
                                                                                            1# ->
                                                                                                case
                                                                                                    +# [dt8_sbcgj
                                                                                                        ww_sbcfN]
                                                                                                of
                                                                                                sat_sbcgX
                                                                                                { __DEFAULT ->
                                                                                                      let {
                                                                                                        sat_sbcgY [Occ=Once]
                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                               GHC.Word.Word8
                                                                                                        [LclId] =
                                                                                                            CCCS GHC.IO.Buffer.Buffer! [dt4_sbcge
                                                                                                                                        dt5_sbcgf
                                                                                                                                        ds10_sbcgg
                                                                                                                                        dt6_sbcgh
                                                                                                                                        dt7_sbcgi
                                                                                                                                        sat_sbcgX];
                                                                                                      } in 
                                                                                                        case
                                                                                                            GHC.IO.BufferedIO.flushWriteBuffer
                                                                                                                $dBufferedIO_sbcfS
                                                                                                                ww1_sbcg7
                                                                                                                sat_sbcgY
                                                                                                                s'_sbcgR
                                                                                                        of
                                                                                                        { (#,#) ipv2_sbch0 [Occ=Once]
                                                                                                                ipv3_sbch1 [Occ=Once] ->
                                                                                                              case
                                                                                                                  writeMutVar# [dt_sbcfW
                                                                                                                                ipv3_sbch1
                                                                                                                                ipv2_sbch0]
                                                                                                              of
                                                                                                              s2#_sbch2
                                                                                                              { __DEFAULT ->
                                                                                                                    (#,#) [s2#_sbch2
                                                                                                                           v_sbcgk];
                                                                                                              };
                                                                                                        };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                          };
                    };
              };
        };

GHC.IO.Handle.Text.hPutBuf4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hPutBuf"#;

GHC.IO.Handle.Text.hPutBuf3 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hPutBuf4;

GHC.IO.Handle.Text.$whPutBuf' [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=5,
 Str=<L,U><L,U(U)><S,1*U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbch3 w1_sbch4 ww_sbch5 w2_sbch6 w3_sbch7]
        case ww_sbch5 of wild_sbch8 {
          __DEFAULT ->
              case <# [wild_sbch8 0#] of {
                __DEFAULT ->
                    let {
                      act_sbcha [Occ=Once*, Dmd=<L,C(C1(U(U,U)))>]
                        :: GHC.IO.Handle.Types.Handle__
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                      [LclId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
                          [w1_sbch4 w2_sbch6 wild_sbch8] \r [h__sbchb eta_sbchc]
                              case h__sbchb of wild1_sbchd {
                                GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                             $dBufferedIO_sbchf [Occ=Once]
                                                             _ [Occ=Dead]
                                                             ds_sbchh [Occ=Once]
                                                             _ [Occ=Dead]
                                                             dt_sbchj
                                                             ds2_sbchk [Occ=Once!]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                    case
                                        GHC.IO.Handle.Text.$wbufWrite
                                            wild1_sbchd w1_sbch4 wild_sbch8 w2_sbch6 eta_sbchc
                                    of
                                    ds9_sbchu
                                    { (#,#) ipv_sbchv [Occ=Once] ipv1_sbchw [Occ=Once*] ->
                                          case ds2_sbchk of {
                                            __DEFAULT ->
                                                case readMutVar# [dt_sbchj ipv_sbchv] of {
                                                  (#,#) ipv2_sbchz [Occ=Once*]
                                                        ipv3_sbchA [Occ=Once!] ->
                                                      case ipv3_sbchA of {
                                                        GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                             _ [Occ=Dead]
                                                                             ds11_sbchE [Occ=Once!]
                                                                             _ [Occ=Dead]
                                                                             _ [Occ=Dead]
                                                                             _ [Occ=Dead] ->
                                                            case ds11_sbchE of {
                                                              GHC.IO.Buffer.ReadBuffer ->
                                                                  (#,#) [ipv2_sbchz ipv1_sbchw];
                                                              GHC.IO.Buffer.WriteBuffer ->
                                                                  case
                                                                      readMutVar# [dt_sbchj
                                                                                   ipv2_sbchz]
                                                                  of
                                                                  { (#,#) ipv4_sbchK [Occ=Once*]
                                                                          ipv5_sbchL [Occ=Once!] ->
                                                                        case
                                                                            ipv5_sbchL
                                                                        of
                                                                        wild5_sbchM
                                                                        { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                               _ [Occ=Dead]
                                                                                               _ [Occ=Dead]
                                                                                               _ [Occ=Dead]
                                                                                               dt12_sbchR [Occ=Once]
                                                                                               dt13_sbchS [Occ=Once] ->
                                                                              case
                                                                                  ==# [dt12_sbchR
                                                                                       dt13_sbchS]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        GHC.IO.BufferedIO.flushWriteBuffer
                                                                                            $dBufferedIO_sbchf
                                                                                            ds_sbchh
                                                                                            wild5_sbchM
                                                                                            ipv4_sbchK
                                                                                    of
                                                                                    { (#,#) ipv6_sbchV [Occ=Once]
                                                                                            ipv7_sbchW [Occ=Once] ->
                                                                                          case
                                                                                              writeMutVar# [dt_sbchj
                                                                                                            ipv7_sbchW
                                                                                                            ipv6_sbchV]
                                                                                          of
                                                                                          s2#_sbchX
                                                                                          { __DEFAULT ->
                                                                                                (#,#) [s2#_sbchX
                                                                                                       ipv1_sbchw];
                                                                                          };
                                                                                    };
                                                                                1# ->
                                                                                    (#,#) [ipv4_sbchK
                                                                                           ipv1_sbchw];
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                            GHC.IO.Handle.Types.BlockBuffering _ [Occ=Dead] ->
                                                ds9_sbchu;
                                          };
                                    };
                              };
                    } in 
                      case w_sbch3 of wild1_sbchZ {
                        GHC.IO.Handle.Types.FileHandle _ [Occ=Dead] dt_sbci1 [Occ=Once] ->
                            GHC.IO.Handle.Internals.$wwantWritableHandle'
                                GHC.IO.Handle.Text.hPutBuf3
                                wild1_sbchZ
                                dt_sbci1
                                act_sbcha
                                w3_sbch7;
                        GHC.IO.Handle.Types.DuplexHandle _ [Occ=Dead]
                                                         _ [Occ=Dead]
                                                         dt1_sbci4 [Occ=Once] ->
                            GHC.IO.Handle.Internals.$wwantWritableHandle'
                                GHC.IO.Handle.Text.hPutBuf3
                                wild1_sbchZ
                                dt1_sbci4
                                act_sbcha
                                w3_sbch7;
                      };
                1# ->
                    GHC.IO.Handle.Text.$willegalBufferSize
                        w_sbch3 GHC.IO.Handle.Text.hPutBuf3 wild_sbch8 w3_sbch7;
              };
          0# -> (#,#) [w3_sbch7 GHC.IO.Handle.Text.hGetBuf3];
        };

GHC.IO.Handle.Text.hPutBuf2 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=5,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbci5 w1_sbci6 w2_sbci7 w3_sbci8 w4_sbci9]
        case w2_sbci7 of {
          GHC.Types.I# ww1_sbcib [Occ=Once] ->
              GHC.IO.Handle.Text.$whPutBuf'
                  w_sbci5 w1_sbci6 ww1_sbcib w3_sbci8 w4_sbci9;
        };

GHC.IO.Handle.Text.hPutBufNonBlocking1
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [h_sbcic ptr_sbcid count_sbcie w_sbcif]
        case count_sbcie of {
          GHC.Types.I# ww1_sbcih [Occ=Once] ->
              GHC.IO.Handle.Text.$whPutBuf'
                  h_sbcic ptr_sbcid ww1_sbcih GHC.Types.False w_sbcif;
        };

GHC.IO.Handle.Text.hPutBufNonBlocking
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Handle.Text.hPutBufNonBlocking1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.Handle.Text.hPutBuf1
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [h_sbcii ptr_sbcij count_sbcik s_sbcil]
        case count_sbcik of {
          GHC.Types.I# ww1_sbcin [Occ=Once] ->
              case
                  GHC.IO.Handle.Text.$whPutBuf'
                      h_sbcii ptr_sbcij ww1_sbcin GHC.Types.True s_sbcil
              of
              { (#,#) ipv_sbcip [Occ=Once] _ [Occ=Dead] ->
                    (#,#) [ipv_sbcip GHC.Tuple.()];
              };
        };

GHC.IO.Handle.Text.hPutBuf
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Handle.Text.hPutBuf1 eta_B4 eta_B3 eta_B2 eta_B1;

lvl31_rb6Xb :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "\n"#;

lvl32_rb6Xc :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl31_rb6Xb;

GHC.IO.Handle.Text.$wwriteBlocks [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.IO.Handle.Types.Newline
     -> GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.Prim.Int#
     -> GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=9,
 Str=<S,U><L,U><L,1*U><L,U><L,U><L,U><L,U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbcir
           w1_sbcis
           w2_sbcit
           w3_sbciu
           ww_sbciv
           ww1_sbciw
           ww2_sbcix
           w4_sbciy
           w5_sbciz]
        let {
          sat_sbckU [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
          [LclId] =
              [w2_sbcit] \s []
                  case w2_sbcit of {
                    GHC.Types.False -> [] [];
                    GHC.Types.True -> lvl32_rb6Xc;
                  };
        } in 
          let-no-escape {
            exit_sbciA [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
              :: GHC.Prim.Int#
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
            [LclId[JoinId(2)], Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
                sat-only [w_sbcir ww_sbciv ww1_sbciw ww2_sbcix] \r [ww3_sbciB
                                                                    w6_sbciC]
                    let {
                      raw_sbciD [Occ=OnceL]
                        :: GHC.IO.Buffer.RawBuffer GHC.IO.Buffer.CharBufElem
                      [LclId, Unf=OtherCon []] =
                          CCCS GHC.ForeignPtr.ForeignPtr! [ww_sbciv ww1_sbciw]; } in
                    let {
                      sat_sbcjg [Occ=Once]
                        :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO ()
                      [LclId] =
                          [ww_sbciv ww1_sbciw ww2_sbcix ww3_sbciB raw_sbciD] \r [h__sbciE
                                                                                 eta_sbciF]
                              case h__sbciE of wild_sbciG {
                                GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             dt2_sbciP [Occ=Once]
                                                             dt3_sbciQ
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                    case
                                        GHC.IO.Handle.Internals.$wwriteCharBuffer
                                            wild_sbciG
                                            ww_sbciv
                                            ww1_sbciw
                                            GHC.IO.Buffer.WriteBuffer
                                            ww2_sbcix
                                            0#
                                            ww3_sbciB
                                            eta_sbciF
                                    of
                                    { (#,#) ipv_sbciY [Occ=Once] _ [Occ=Dead] ->
                                          case readMutVar# [dt2_sbciP ipv_sbciY] of {
                                            (#,#) ipv2_sbcj1 [Occ=Once*] ipv3_sbcj2 [Occ=Once!] ->
                                                case ipv3_sbcj2 of {
                                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                       _ [Occ=Dead]
                                                                       _ [Occ=Dead]
                                                                       dt6_sbcj7 [Occ=Once]
                                                                       _ [Occ=Dead]
                                                                       _ [Occ=Dead] ->
                                                      case ==# [ww2_sbcix dt6_sbcj7] of {
                                                        __DEFAULT ->
                                                            (#,#) [ipv2_sbcj1 GHC.Tuple.()];
                                                        1# ->
                                                            case
                                                                readMutVar# [dt3_sbciQ ipv2_sbcj1]
                                                            of
                                                            { (#,#) ipv4_sbcjc [Occ=Once]
                                                                    ipv5_sbcjd [Occ=Once] ->
                                                                  let {
                                                                    sat_sbcje [Occ=Once]
                                                                      :: GHC.IO.Handle.Types.BufferList
                                                                           GHC.IO.Buffer.CharBufElem
                                                                    [LclId] =
                                                                        CCCS GHC.IO.Handle.Types.BufferListCons! [raw_sbciD
                                                                                                                  ipv5_sbcjd];
                                                                  } in 
                                                                    case
                                                                        writeMutVar# [dt3_sbciQ
                                                                                      sat_sbcje
                                                                                      ipv4_sbcjc]
                                                                    of
                                                                    s2#_sbcjf
                                                                    { __DEFAULT ->
                                                                          (#,#) [s2#_sbcjf
                                                                                 GHC.Tuple.()];
                                                                    };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.Handle.Internals.wantWritableHandle1
                          lvl2_rb6WE w_sbcir sat_sbcjg w6_sbciC;
          } in 
            let-no-escape {
              $wshoveString_sbcjh [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[4]]
                :: GHC.Prim.Int#
                   -> [GHC.Types.Char]
                   -> [GHC.Types.Char]
                   -> GHC.Prim.State# GHC.Prim.RealWorld
                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
              [LclId[JoinId(4)],
               Arity=4,
               Str=<S,U><S,1*U><L,1*U><S,U>,
               Unf=OtherCon []] =
                  sat-only [w_sbcir
                            w1_sbcis
                            w3_sbciu
                            ww_sbciv
                            ww1_sbciw
                            ww2_sbcix
                            exit_sbciA
                            $wshoveString_sbcjh] \r [ww3_sbcji w6_sbcjj w7_sbcjk w8_sbcjl]
                      case w6_sbcjj of wild_sbcjm {
                        [] ->
                            case w7_sbcjk of wild1_sbcjn {
                              [] -> exit_sbciA ww3_sbcji w8_sbcjl;
                              : _ [Occ=Dead] _ [Occ=Dead] ->
                                  $wshoveString_sbcjh ww3_sbcji wild1_sbcjn GHC.Types.[] w8_sbcjl;
                            };
                        : c_sbcjq [Occ=Once!] cs_sbcjr [Occ=Once*] ->
                            case +# [ww3_sbcji 1#] of sat_sbcjs {
                              __DEFAULT ->
                                  case >=# [sat_sbcjs ww2_sbcix] of {
                                    __DEFAULT ->
                                        case c_sbcjq of {
                                          GHC.Types.C# x_sbcjv [Occ=Once!] ->
                                              case x_sbcjv of wild2_sbcjw {
                                                __DEFAULT ->
                                                    case
                                                        writeWideCharOffAddr# [ww_sbciv
                                                                               ww3_sbcji
                                                                               wild2_sbcjw
                                                                               w8_sbcjl]
                                                    of
                                                    s2_sbcjx
                                                    { __DEFAULT ->
                                                          case
                                                              touch# [ww1_sbciw s2_sbcjx]
                                                          of
                                                          s'_sbcjy
                                                          { __DEFAULT ->
                                                                case
                                                                    +# [ww3_sbcji 1#]
                                                                of
                                                                sat_sbcjz
                                                                { __DEFAULT ->
                                                                      $wshoveString_sbcjh
                                                                          sat_sbcjz
                                                                          cs_sbcjr
                                                                          w7_sbcjk
                                                                          s'_sbcjy;
                                                                };
                                                          };
                                                    };
                                                '\n'# ->
                                                    let-no-escape {
                                                      $w$j_sbcjA [InlPrag=NOUSERINLINE[0],
                                                                  Occ=Once*!T[2],
                                                                  Dmd=<C(C(S)),1*C1(C1(U(U,U)))>]
                                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                                           -> GHC.Prim.Int#
                                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                 () #)
                                                      [LclId[JoinId(2)],
                                                       Arity=2,
                                                       Str=<S,U><L,U>,
                                                       Unf=OtherCon []] =
                                                          sat-only [w_sbcir
                                                                    w1_sbcis
                                                                    ww_sbciv
                                                                    ww1_sbciw
                                                                    ww2_sbcix
                                                                    $wshoveString_sbcjh
                                                                    w7_sbcjk
                                                                    cs_sbcjr] \r [w9_sbcjB
                                                                                  ww4_sbcjC]
                                                              case w1_sbcis of {
                                                                GHC.Types.False ->
                                                                    $wshoveString_sbcjh
                                                                        ww4_sbcjC
                                                                        cs_sbcjr
                                                                        w7_sbcjk
                                                                        w9_sbcjB;
                                                                GHC.Types.True ->
                                                                    let {
                                                                      sat_sbckf [Occ=Once]
                                                                        :: GHC.IO.Handle.Types.Handle__
                                                                           -> GHC.Types.IO ()
                                                                      [LclId] =
                                                                          [ww_sbciv
                                                                           ww1_sbciw
                                                                           ww2_sbcix
                                                                           ww4_sbcjC] \r [h__sbcjE
                                                                                          eta_sbcjF]
                                                                              case
                                                                                  h__sbcjE
                                                                              of
                                                                              wild4_sbcjG
                                                                              { GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                                                                             $dBufferedIO_sbcjI [Occ=Once]
                                                                                                             _ [Occ=Dead]
                                                                                                             ds_sbcjK [Occ=Once]
                                                                                                             _ [Occ=Dead]
                                                                                                             dt_sbcjM
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead] ->
                                                                                    case
                                                                                        GHC.IO.Handle.Internals.$wwriteCharBuffer
                                                                                            wild4_sbcjG
                                                                                            ww_sbciv
                                                                                            ww1_sbciw
                                                                                            GHC.IO.Buffer.WriteBuffer
                                                                                            ww2_sbcix
                                                                                            0#
                                                                                            ww4_sbcjC
                                                                                            eta_sbcjF
                                                                                    of
                                                                                    { (#,#) ipv_sbcjY [Occ=Once]
                                                                                            _ [Occ=Dead] ->
                                                                                          case
                                                                                              readMutVar# [dt_sbcjM
                                                                                                           ipv_sbcjY]
                                                                                          of
                                                                                          { (#,#) ipv2_sbck1 [Occ=Once*]
                                                                                                  ipv3_sbck2 [Occ=Once!] ->
                                                                                                case
                                                                                                    ipv3_sbck2
                                                                                                of
                                                                                                wild5_sbck3
                                                                                                { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       dt7_sbck8 [Occ=Once]
                                                                                                                       dt8_sbck9 [Occ=Once] ->
                                                                                                      case
                                                                                                          ==# [dt7_sbck8
                                                                                                               dt8_sbck9]
                                                                                                      of
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                GHC.IO.BufferedIO.flushWriteBuffer
                                                                                                                    $dBufferedIO_sbcjI
                                                                                                                    ds_sbcjK
                                                                                                                    wild5_sbck3
                                                                                                                    ipv2_sbck1
                                                                                                            of
                                                                                                            { (#,#) ipv4_sbckc [Occ=Once]
                                                                                                                    ipv5_sbckd [Occ=Once] ->
                                                                                                                  case
                                                                                                                      writeMutVar# [dt_sbcjM
                                                                                                                                    ipv5_sbckd
                                                                                                                                    ipv4_sbckc]
                                                                                                                  of
                                                                                                                  s2#_sbcke
                                                                                                                  { __DEFAULT ->
                                                                                                                        (#,#) [s2#_sbcke
                                                                                                                               GHC.Tuple.()];
                                                                                                                  };
                                                                                                            };
                                                                                                        1# ->
                                                                                                            (#,#) [ipv2_sbck1
                                                                                                                   GHC.Tuple.()];
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                    } in 
                                                                      case
                                                                          GHC.IO.Handle.Internals.wantWritableHandle1
                                                                              lvl2_rb6WE
                                                                              w_sbcir
                                                                              sat_sbckf
                                                                              w9_sbcjB
                                                                      of
                                                                      { (#,#) ipv_sbckh [Occ=Once]
                                                                              _ [Occ=Dead] ->
                                                                            $wshoveString_sbcjh
                                                                                0#
                                                                                cs_sbcjr
                                                                                w7_sbcjk
                                                                                ipv_sbckh;
                                                                      };
                                                              };
                                                    } in 
                                                      case w3_sbciu of {
                                                        GHC.IO.Handle.Types.LF ->
                                                            case
                                                                writeWideCharOffAddr# [ww_sbciv
                                                                                       ww3_sbcji
                                                                                       '\n'#
                                                                                       w8_sbcjl]
                                                            of
                                                            s2_sbckk
                                                            { __DEFAULT ->
                                                                  case
                                                                      touch# [ww1_sbciw s2_sbckk]
                                                                  of
                                                                  s'_sbckl
                                                                  { __DEFAULT ->
                                                                        case
                                                                            +# [ww3_sbcji 1#]
                                                                        of
                                                                        sat_sbckm
                                                                        { __DEFAULT ->
                                                                              $w$j_sbcjA
                                                                                  s'_sbckl
                                                                                  sat_sbckm;
                                                                        };
                                                                  };
                                                            };
                                                        GHC.IO.Handle.Types.CRLF ->
                                                            case
                                                                writeWideCharOffAddr# [ww_sbciv
                                                                                       ww3_sbcji
                                                                                       '\r'#
                                                                                       w8_sbcjl]
                                                            of
                                                            s2_sbckn
                                                            { __DEFAULT ->
                                                                  case
                                                                      touch# [ww1_sbciw s2_sbckn]
                                                                  of
                                                                  s'_sbcko
                                                                  { __DEFAULT ->
                                                                        case
                                                                            +# [ww3_sbcji 1#]
                                                                        of
                                                                        ipv1_sbckp [Dmd=<S,U>]
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  writeWideCharOffAddr# [ww_sbciv
                                                                                                         ipv1_sbckp
                                                                                                         '\n'#
                                                                                                         s'_sbcko]
                                                                              of
                                                                              s1_sbckq
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        touch# [ww1_sbciw
                                                                                                s1_sbckq]
                                                                                    of
                                                                                    s'1_sbckr
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              +# [ipv1_sbckp
                                                                                                  1#]
                                                                                          of
                                                                                          sat_sbcks
                                                                                          { __DEFAULT ->
                                                                                                $w$j_sbcjA
                                                                                                    s'1_sbckr
                                                                                                    sat_sbcks;
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                              };
                                        };
                                    1# ->
                                        let {
                                          sat_sbckP [Occ=Once]
                                            :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO ()
                                          [LclId] =
                                              [ww_sbciv ww1_sbciw ww2_sbcix ww3_sbcji] \r [h__sbckt
                                                                                           eta_sbcku]
                                                  case h__sbckt of wild1_sbckv {
                                                    GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead] ->
                                                        case
                                                            GHC.IO.Handle.Internals.$wwriteCharBuffer
                                                                wild1_sbckv
                                                                ww_sbciv
                                                                ww1_sbciw
                                                                GHC.IO.Buffer.WriteBuffer
                                                                ww2_sbcix
                                                                0#
                                                                ww3_sbcji
                                                                eta_sbcku
                                                        of
                                                        { (#,#) ipv_sbckN [Occ=Once] _ [Occ=Dead] ->
                                                              (#,#) [ipv_sbckN GHC.Tuple.()];
                                                        };
                                                  };
                                        } in 
                                          case
                                              GHC.IO.Handle.Internals.wantWritableHandle1
                                                  lvl2_rb6WE w_sbcir sat_sbckP w8_sbcjl
                                          of
                                          { (#,#) ipv_sbckR [Occ=Once] _ [Occ=Dead] ->
                                                $wshoveString_sbcjh
                                                    0# wild_sbcjm w7_sbcjk ipv_sbckR;
                                          };
                                  };
                            };
                      };
            } in  $wshoveString_sbcjh 0# w4_sbciy sat_sbckU w5_sbciz;

lvl33_rb6Xd :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "no buffer!"#;

GHC.IO.Handle.Text.hPutStr4 :: GHC.IO.Buffer.CharBuffer
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl33_rb6Xd of sat_sbckV {
          __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_sbckV;
        };

GHC.IO.Handle.Text.hPutStr3
  :: (GHC.IO.Handle.Types.BufferMode, GHC.IO.Buffer.CharBuffer)
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE (,)! [GHC.IO.Handle.Types.NoBuffering
                        GHC.IO.Handle.Text.hPutStr4];

GHC.IO.Handle.Text.hPutStr2
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           ((GHC.IO.Handle.Types.BufferMode, GHC.IO.Buffer.CharBuffer),
            GHC.IO.Handle.Types.Newline) #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [h__sbckW s_sbckX]
        case h__sbckW of {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       ds2_sbcl5 [Occ=Once!]
                                       _ [Occ=Dead]
                                       dt2_sbcl7 [Occ=Once]
                                       dt3_sbcl8
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       ds7_sbcld [Occ=Once*]
                                       _ [Occ=Dead] ->
              case ds2_sbcl5 of wild1_sbclf {
                __DEFAULT ->
                    case readMutVar# [dt3_sbcl8 s_sbckX] of {
                      (#,#) ipv_sbclh [Occ=Once] ipv1_sbcli [Occ=Once!] ->
                          case readMutVar# [dt2_sbcl7 ipv_sbclh] of {
                            (#,#) ipv2_sbclk [Occ=Once*] ipv3_sbcll [Occ=Once*!] ->
                                case ipv1_sbcli of {
                                  GHC.IO.Handle.Types.BufferListNil ->
                                      case ipv3_sbcll of {
                                        GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             dt6_sbclr
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                            case *# [dt6_sbclr 4#] of x1_sbclu [Dmd=<S,U>] {
                                              __DEFAULT ->
                                                  case <# [x1_sbclu 0#] of {
                                                    __DEFAULT ->
                                                        case
                                                            newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                                        ipv2_sbclk]
                                                        of
                                                        { (#,#) ipv4_sbclx [Occ=Once]
                                                                ipv5_sbcly [Occ=Once] ->
                                                              case
                                                                  newPinnedByteArray# [x1_sbclu
                                                                                       ipv4_sbclx]
                                                              of
                                                              { (#,#) ipv6_sbclA [Occ=Once]
                                                                      ipv7_sbclB ->
                                                                    let {
                                                                      sat_sbclD [Occ=Once]
                                                                        :: GHC.ForeignPtr.ForeignPtrContents
                                                                      [LclId] =
                                                                          CCCS GHC.ForeignPtr.MallocPtr! [ipv7_sbclB
                                                                                                          ipv5_sbcly];
                                                                    } in 
                                                                      case
                                                                          byteArrayContents# [ipv7_sbclB]
                                                                      of
                                                                      sat_sbclC
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_sbclE [Occ=Once]
                                                                                :: GHC.IO.Buffer.CharBuffer
                                                                              [LclId] =
                                                                                  CCCS GHC.IO.Buffer.Buffer! [sat_sbclC
                                                                                                              sat_sbclD
                                                                                                              GHC.IO.Buffer.WriteBuffer
                                                                                                              dt6_sbclr
                                                                                                              0#
                                                                                                              0#]; } in
                                                                            let {
                                                                              sat_sbclF [Occ=Once]
                                                                                :: (GHC.IO.Handle.Types.BufferMode,
                                                                                    GHC.IO.Buffer.CharBuffer)
                                                                              [LclId] =
                                                                                  CCCS (,)! [wild1_sbclf
                                                                                             sat_sbclE]; } in
                                                                            let {
                                                                              sat_sbclG [Occ=Once]
                                                                                :: ((GHC.IO.Handle.Types.BufferMode,
                                                                                     GHC.IO.Buffer.CharBuffer),
                                                                                    GHC.IO.Handle.Types.Newline)
                                                                              [LclId] =
                                                                                  CCCS (,)! [sat_sbclF
                                                                                             ds7_sbcld];
                                                                            } in 
                                                                              (#,#) [ipv6_sbclA
                                                                                     sat_sbclG];
                                                                      };
                                                              };
                                                        };
                                                    1# -> GHC.ForeignPtr.mallocForeignPtrBytes2;
                                                  };
                                            };
                                      };
                                  GHC.IO.Handle.Types.BufferListCons b_sbclI [Occ=Once!]
                                                                     rest_sbclJ [Occ=Once] ->
                                      case
                                          writeMutVar# [dt3_sbcl8 rest_sbclJ ipv2_sbclk]
                                      of
                                      s2#_sbclK
                                      { __DEFAULT ->
                                            let {
                                              sat_sbclV [Occ=Once]
                                                :: GHC.IO.Buffer.Buffer GHC.IO.Buffer.CharBufElem
                                              [LclId] =
                                                  [ipv3_sbcll b_sbclI] \u []
                                                      case b_sbclI of {
                                                        GHC.ForeignPtr.ForeignPtr dt5_sbclM [Occ=Once]
                                                                                  dt6_sbclN [Occ=Once] ->
                                                            case ipv3_sbcll of {
                                                              GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                   _ [Occ=Dead]
                                                                                   _ [Occ=Dead]
                                                                                   dt9_sbclS [Occ=Once]
                                                                                   _ [Occ=Dead]
                                                                                   _ [Occ=Dead] ->
                                                                  GHC.IO.Buffer.Buffer [dt5_sbclM
                                                                                        dt6_sbclN
                                                                                        GHC.IO.Buffer.WriteBuffer
                                                                                        dt9_sbclS
                                                                                        0#
                                                                                        0#];
                                                            };
                                                      }; } in
                                            let {
                                              sat_sbclW [Occ=Once]
                                                :: (GHC.IO.Handle.Types.BufferMode,
                                                    GHC.IO.Buffer.CharBuffer)
                                              [LclId] =
                                                  CCCS (,)! [wild1_sbclf sat_sbclV]; } in
                                            let {
                                              sat_sbclX [Occ=Once]
                                                :: ((GHC.IO.Handle.Types.BufferMode,
                                                     GHC.IO.Buffer.CharBuffer),
                                                    GHC.IO.Handle.Types.Newline)
                                              [LclId] =
                                                  CCCS (,)! [sat_sbclW ds7_sbcld];
                                            } in  (#,#) [s2#_sbclK sat_sbclX];
                                      };
                                };
                          };
                    };
                GHC.IO.Handle.Types.NoBuffering ->
                    let {
                      sat_sbclY [Occ=Once]
                        :: ((GHC.IO.Handle.Types.BufferMode, GHC.IO.Buffer.CharBuffer),
                            GHC.IO.Handle.Types.Newline)
                      [LclId] =
                          CCCS (,)! [GHC.IO.Handle.Text.hPutStr3 ds7_sbcld];
                    } in  (#,#) [s_sbckX sat_sbclY];
              };
        };

GHC.IO.Handle.Text.hPutStr6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hPutStr"#;

GHC.IO.Handle.Text.hPutStr5 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hPutStr6;

GHC.IO.Handle.Text.hPutStr1
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Base.String
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=4, Str=<S,U><L,1*U><L,1*U><S,U>, Unf=OtherCon []] =
    [] \r [handle_sbclZ str_sbcm0 add_nl_sbcm1 s_sbcm2]
        let-no-escape {
          $w$j_sbcm3 [InlPrag=NOUSERINLINE[0],
                      Occ=Once*!T[4],
                      Dmd=<L,1*C1(C1(C1(C1(U(U,U)))))>]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> GHC.IO.Handle.Types.BufferMode
               -> GHC.IO.Buffer.CharBuffer
               -> GHC.IO.Handle.Types.Newline
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId[JoinId(4)],
           Arity=4,
           Str=<S,U><S,1*U><L,1*U(U,U,A,U,A,A)><L,U>,
           Unf=OtherCon []] =
              sat-only [handle_sbclZ str_sbcm0 add_nl_sbcm1] \r [w_sbcm4
                                                                 ww_sbcm5
                                                                 ww1_sbcm6
                                                                 ww2_sbcm7]
                  case ww_sbcm5 of {
                    GHC.IO.Handle.Types.NoBuffering ->
                        case
                            GHC.IO.Handle.Text.hPutStr7 handle_sbclZ str_sbcm0 w_sbcm4
                        of
                        { (#,#) ipv_sbcma [Occ=Once*] _ [Occ=Dead] ->
                              case add_nl_sbcm1 of {
                                GHC.Types.False -> (#,#) [ipv_sbcma GHC.Tuple.()];
                                GHC.Types.True ->
                                    GHC.IO.Handle.Text.$whPutChar handle_sbclZ '\n'# ipv_sbcma;
                              };
                        };
                    GHC.IO.Handle.Types.LineBuffering ->
                        case ww1_sbcm6 of {
                          GHC.IO.Buffer.Buffer ww4_sbcme [Occ=Once]
                                               ww5_sbcmf [Occ=Once]
                                               _ [Occ=Dead]
                                               ww7_sbcmh [Occ=Once]
                                               _ [Occ=Dead]
                                               _ [Occ=Dead] ->
                              GHC.IO.Handle.Text.$wwriteBlocks
                                  handle_sbclZ
                                  GHC.Types.True
                                  add_nl_sbcm1
                                  ww2_sbcm7
                                  ww4_sbcme
                                  ww5_sbcmf
                                  ww7_sbcmh
                                  str_sbcm0
                                  w_sbcm4;
                        };
                    GHC.IO.Handle.Types.BlockBuffering _ [Occ=Dead] ->
                        case ww1_sbcm6 of {
                          GHC.IO.Buffer.Buffer ww4_sbcmm [Occ=Once]
                                               ww5_sbcmn [Occ=Once]
                                               _ [Occ=Dead]
                                               ww7_sbcmp [Occ=Once]
                                               _ [Occ=Dead]
                                               _ [Occ=Dead] ->
                              GHC.IO.Handle.Text.$wwriteBlocks
                                  handle_sbclZ
                                  GHC.Types.False
                                  add_nl_sbcm1
                                  ww2_sbcm7
                                  ww4_sbcmm
                                  ww5_sbcmn
                                  ww7_sbcmp
                                  str_sbcm0
                                  w_sbcm4;
                        };
                  };
        } in 
          case handle_sbclZ of wild_sbcms {
            GHC.IO.Handle.Types.FileHandle _ [Occ=Dead] dt_sbcmu [Occ=Once] ->
                case
                    GHC.IO.Handle.Internals.$wwantWritableHandle'
                        GHC.IO.Handle.Text.hPutStr5
                        wild_sbcms
                        dt_sbcmu
                        GHC.IO.Handle.Text.hPutStr2
                        s_sbcm2
                of
                { (#,#) ipv_sbcmw [Occ=Once] ipv1_sbcmx [Occ=Once!] ->
                      case ipv1_sbcmx of {
                        (,) ww1_sbcmz [Occ=Once!] ww2_sbcmA [Occ=Once] ->
                            case ww1_sbcmz of {
                              (,) ww4_sbcmC [Occ=Once] ww5_sbcmD [Occ=Once] ->
                                  $w$j_sbcm3 ipv_sbcmw ww4_sbcmC ww5_sbcmD ww2_sbcmA;
                            };
                      };
                };
            GHC.IO.Handle.Types.DuplexHandle _ [Occ=Dead]
                                             _ [Occ=Dead]
                                             dt1_sbcmG [Occ=Once] ->
                case
                    GHC.IO.Handle.Internals.$wwantWritableHandle'
                        GHC.IO.Handle.Text.hPutStr5
                        wild_sbcms
                        dt1_sbcmG
                        GHC.IO.Handle.Text.hPutStr2
                        s_sbcm2
                of
                { (#,#) ipv_sbcmI [Occ=Once] ipv1_sbcmJ [Occ=Once!] ->
                      case ipv1_sbcmJ of {
                        (,) ww1_sbcmL [Occ=Once!] ww2_sbcmM [Occ=Once] ->
                            case ww1_sbcmL of {
                              (,) ww4_sbcmO [Occ=Once] ww5_sbcmP [Occ=Once] ->
                                  $w$j_sbcm3 ipv_sbcmI ww4_sbcmO ww5_sbcmP ww2_sbcmM;
                            };
                      };
                };
          };

GHC.IO.Handle.Text.hPutStr' [InlPrag=NOINLINE]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Base.String -> GHC.Types.Bool -> GHC.Types.IO ()
[GblId, Arity=4, Str=<S,U><L,1*U><L,1*U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.IO.Handle.Text.hPutStr1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.IO.Handle.Text.hPutStr
  :: GHC.IO.Handle.Types.Handle -> GHC.Base.String -> GHC.Types.IO ()
[GblId, Arity=3, Str=<L,U><L,U>, Unf=OtherCon []] =
    [] \r [handle_sbcmQ str_sbcmR eta_B1]
        GHC.IO.Handle.Text.hPutStr'
            handle_sbcmQ str_sbcmR GHC.Types.False eta_B1;

GHC.IO.Handle.Text.hPutStrLn
  :: GHC.IO.Handle.Types.Handle -> GHC.Base.String -> GHC.Types.IO ()
[GblId, Arity=3, Str=<L,U><L,U>, Unf=OtherCon []] =
    [] \r [handle_sbcmS str_sbcmT eta_B1]
        GHC.IO.Handle.Text.hPutStr'
            handle_sbcmS str_sbcmT GHC.Types.True eta_B1;

GHC.IO.Handle.Text.hWaitForInput3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hWaitForInput"#;

GHC.IO.Handle.Text.hWaitForInput2 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.IO.Handle.Text.hWaitForInput3;

GHC.IO.Handle.Text.hWaitForInput1
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId, Arity=3, Str=<S,1*U><L,U(U)><S,U>, Unf=OtherCon []] =
    [] \r [h_sbcmU msecs_sbcmV eta_sbcmW]
        let {
          lvl34_sbcmX [Occ=OnceL!] :: GHC.Types.Bool
          [LclId] =
              [msecs_sbcmV] \u []
                  case msecs_sbcmV of {
                    GHC.Types.I# x_sbcmZ [Occ=Once] ->
                        case <# [x_sbcmZ 0#] of sat_sbcn0 {
                          __DEFAULT -> tagToEnum# [sat_sbcn0];
                        };
                  }; } in
        let {
          sat_sbcoY [Occ=Once]
            :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Bool
          [LclId] =
              [msecs_sbcmV lvl34_sbcmX] \r [handle__sbcn1 eta1_sbcn2]
                  case handle__sbcn1 of wild_sbcn3 {
                    GHC.IO.Handle.Types.Handle__ $dIODevice_sbcn4 [Occ=Once]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 ds_sbcn7 [Occ=Once]
                                                 _ [Occ=Dead]
                                                 dt_sbcn9
                                                 _ [Occ=Dead]
                                                 dt1_sbcnb [Occ=Once*]
                                                 dt2_sbcnc
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 ds4_sbcnf [Occ=Once!]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead] ->
                        case readMutVar# [dt2_sbcnc eta1_sbcn2] of {
                          (#,#) ipv_sbcnl [Occ=Once*] ipv1_sbcnm [Occ=Once!] ->
                              case ipv1_sbcnm of wild1_sbcnn {
                                GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead]
                                                     dt7_sbcns [Occ=Once]
                                                     dt8_sbcnt [Occ=Once] ->
                                    case ==# [dt7_sbcns dt8_sbcnt] of {
                                      __DEFAULT -> (#,#) [ipv_sbcnl GHC.Types.True];
                                      1# ->
                                          case lvl34_sbcmX of {
                                            GHC.Types.False ->
                                                case readMutVar# [dt_sbcn9 ipv_sbcnl] of {
                                                  (#,#) ipv2_sbcnx [Occ=Once*] ipv3_sbcny ->
                                                      let-no-escape {
                                                        $w$j_sbcnz [InlPrag=NOUSERINLINE[0],
                                                                    Occ=Once*!T[7],
                                                                    Dmd=<L,1*C1(C1(C1(C1(C1(C1(C1(U(U,U))))))))>]
                                                          :: GHC.Prim.State# GHC.Prim.RealWorld
                                                             -> GHC.Prim.Addr#
                                                             -> GHC.ForeignPtr.ForeignPtrContents
                                                             -> GHC.IO.Buffer.BufferState
                                                             -> GHC.Prim.Int#
                                                             -> GHC.Prim.Int#
                                                             -> GHC.Prim.Int#
                                                             -> (# GHC.Prim.State#
                                                                     GHC.Prim.RealWorld,
                                                                   GHC.Types.Bool #)
                                                        [LclId[JoinId(7)],
                                                         Arity=7,
                                                         Str=<S,U><L,U><L,U><L,U><L,U><S,U><S,U>,
                                                         Unf=OtherCon []] =
                                                            sat-only [msecs_sbcmV
                                                                      wild_sbcn3
                                                                      $dIODevice_sbcn4
                                                                      ds_sbcn7
                                                                      dt2_sbcnc] \r [w_sbcnA
                                                                                     ww_sbcnB
                                                                                     ww1_sbcnC
                                                                                     ww2_sbcnD
                                                                                     ww3_sbcnE
                                                                                     ww4_sbcnF
                                                                                     ww5_sbcnG]
                                                                let {
                                                                  sat_sbcnH [Occ=Once]
                                                                    :: GHC.IO.Buffer.Buffer
                                                                         GHC.IO.Buffer.CharBufElem
                                                                  [LclId] =
                                                                      CCCS GHC.IO.Buffer.Buffer! [ww_sbcnB
                                                                                                  ww1_sbcnC
                                                                                                  ww2_sbcnD
                                                                                                  ww3_sbcnE
                                                                                                  ww4_sbcnF
                                                                                                  ww5_sbcnG];
                                                                } in 
                                                                  case
                                                                      writeMutVar# [dt2_sbcnc
                                                                                    sat_sbcnH
                                                                                    w_sbcnA]
                                                                  of
                                                                  s2#_sbcnI
                                                                  { __DEFAULT ->
                                                                        case
                                                                            ==# [ww4_sbcnF
                                                                                 ww5_sbcnG]
                                                                        of
                                                                        { __DEFAULT ->
                                                                              (#,#) [s2#_sbcnI
                                                                                     GHC.Types.True];
                                                                          1# ->
                                                                              case
                                                                                  GHC.IO.Device.ready
                                                                                      $dIODevice_sbcn4
                                                                                      ds_sbcn7
                                                                                      GHC.Types.False
                                                                                      msecs_sbcmV
                                                                                      s2#_sbcnI
                                                                              of
                                                                              { (#,#) ipv4_sbcnL [Occ=Once*]
                                                                                      ipv5_sbcnM [Occ=Once!] ->
                                                                                    case
                                                                                        ipv5_sbcnM
                                                                                    of
                                                                                    { GHC.Types.False ->
                                                                                          (#,#) [ipv4_sbcnL
                                                                                                 GHC.Types.False];
                                                                                      GHC.Types.True ->
                                                                                          case
                                                                                              readMutVar# [dt2_sbcnc
                                                                                                           ipv4_sbcnL]
                                                                                          of
                                                                                          { (#,#) ipv6_sbcnP [Occ=Once*]
                                                                                                  ipv7_sbcnQ [Occ=Once!] ->
                                                                                                case
                                                                                                    ipv7_sbcnQ
                                                                                                of
                                                                                                wild4_sbcnR
                                                                                                { GHC.IO.Buffer.Buffer dt9_sbcnS [Occ=Once*]
                                                                                                                       dt10_sbcnT [Occ=Once*]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       dt12_sbcnW
                                                                                                                       dt13_sbcnX [Occ=Once] ->
                                                                                                      case
                                                                                                          ==# [dt12_sbcnW
                                                                                                               dt13_sbcnX]
                                                                                                      of
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                writeMutVar# [dt2_sbcnc
                                                                                                                              wild4_sbcnR
                                                                                                                              ipv6_sbcnP]
                                                                                                            of
                                                                                                            s2#1_sbcnZ
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      readWideCharOffAddr# [dt9_sbcnS
                                                                                                                                            dt12_sbcnW
                                                                                                                                            s2#1_sbcnZ]
                                                                                                                  of
                                                                                                                  { (#,#) ipv8_sbco1 [Occ=Once]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        case
                                                                                                                            touch# [dt10_sbcnT
                                                                                                                                    ipv8_sbco1]
                                                                                                                        of
                                                                                                                        s'_sbco3
                                                                                                                        { __DEFAULT ->
                                                                                                                              (#,#) [s'_sbco3
                                                                                                                                     GHC.Types.True];
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                        1# ->
                                                                                                            case
                                                                                                                GHC.IO.Handle.Internals.hLookAhead_2
                                                                                                                    wild_sbcn3
                                                                                                                    wild4_sbcnR
                                                                                                                    ipv6_sbcnP
                                                                                                            of
                                                                                                            { (#,#) ipv8_sbco5 [Occ=Once]
                                                                                                                    ipv9_sbco6 [Occ=Once] ->
                                                                                                                  case
                                                                                                                      writeMutVar# [dt2_sbcnc
                                                                                                                                    ipv9_sbco6
                                                                                                                                    ipv8_sbco5]
                                                                                                                  of
                                                                                                                  s2#1_sbco7
                                                                                                                  { __DEFAULT ->
                                                                                                                        case
                                                                                                                            readWideCharOffAddr# [dt9_sbcnS
                                                                                                                                                  dt12_sbcnW
                                                                                                                                                  s2#1_sbco7]
                                                                                                                        of
                                                                                                                        { (#,#) ipv10_sbco9 [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              case
                                                                                                                                  touch# [dt10_sbcnT
                                                                                                                                          ipv10_sbco9]
                                                                                                                              of
                                                                                                                              s'_sbcob
                                                                                                                              { __DEFAULT ->
                                                                                                                                    (#,#) [s'_sbcob
                                                                                                                                           GHC.Types.True];
                                                                                                                              };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                      } in 
                                                        case ds4_sbcnf of {
                                                          GHC.Base.Nothing ->
                                                              let {
                                                                sat_sbcod [Occ=Once]
                                                                  :: (dec_state_ab2UP,
                                                                      GHC.IO.Buffer.Buffer
                                                                        GHC.Word.Word8)
                                                                [LclId] =
                                                                    CCCS (,)! [GHC.IO.Handle.Internals.decodeByteBuf2
                                                                               ipv3_sbcny];
                                                              } in 
                                                                case
                                                                    writeMutVar# [dt1_sbcnb
                                                                                  sat_sbcod
                                                                                  ipv2_sbcnx]
                                                                of
                                                                s2#_sbcoe
                                                                { __DEFAULT ->
                                                                      case
                                                                          GHC.IO.Encoding.Latin1.latin5
                                                                              ipv3_sbcny
                                                                              wild1_sbcnn
                                                                              s2#_sbcoe
                                                                      of
                                                                      { (#,#) ipv4_sbcog [Occ=Once]
                                                                              ipv5_sbcoh [Occ=Once!] ->
                                                                            case ipv5_sbcoh of {
                                                                              (,,) _ [Occ=Dead]
                                                                                   input'_sbcok [Occ=Once]
                                                                                   output'_sbcol [Occ=Once!] ->
                                                                                  case
                                                                                      writeMutVar# [dt_sbcn9
                                                                                                    input'_sbcok
                                                                                                    ipv4_sbcog]
                                                                                  of
                                                                                  s2#1_sbcom
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            output'_sbcol
                                                                                        of
                                                                                        { GHC.IO.Buffer.Buffer ww1_sbcoo [Occ=Once]
                                                                                                               ww2_sbcop [Occ=Once]
                                                                                                               ww3_sbcoq [Occ=Once]
                                                                                                               ww4_sbcor [Occ=Once]
                                                                                                               ww5_sbcos [Occ=Once]
                                                                                                               ww6_sbcot [Occ=Once] ->
                                                                                              $w$j_sbcnz
                                                                                                  s2#1_sbcom
                                                                                                  ww1_sbcoo
                                                                                                  ww2_sbcop
                                                                                                  ww3_sbcoq
                                                                                                  ww4_sbcor
                                                                                                  ww5_sbcos
                                                                                                  ww6_sbcot;
                                                                                        };
                                                                                  };
                                                                            };
                                                                      };
                                                                };
                                                          GHC.Base.Just decoder_sbcou [Occ=Once!] ->
                                                              case decoder_sbcou of {
                                                                GHC.IO.Encoding.Types.BufferCodec ds12_sbcow [Occ=Once]
                                                                                                  ds13_sbcox [Occ=Once]
                                                                                                  _ [Occ=Dead]
                                                                                                  ds15_sbcoz [Occ=Once]
                                                                                                  _ [Occ=Dead] ->
                                                                    case ds15_sbcoz ipv2_sbcnx of {
                                                                      (#,#) ipv4_sbcoC [Occ=Once]
                                                                            ipv5_sbcoD [Occ=Once] ->
                                                                          let {
                                                                            sat_sbcoE [Occ=Once]
                                                                              :: (dec_state_ab2UP,
                                                                                  GHC.IO.Buffer.Buffer
                                                                                    GHC.Word.Word8)
                                                                            [LclId] =
                                                                                CCCS (,)! [ipv5_sbcoD
                                                                                           ipv3_sbcny];
                                                                          } in 
                                                                            case
                                                                                writeMutVar# [dt1_sbcnb
                                                                                              sat_sbcoE
                                                                                              ipv4_sbcoC]
                                                                            of
                                                                            s2#_sbcoF
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      GHC.IO.Handle.Internals.$wstreamEncode
                                                                                          ds12_sbcow
                                                                                          ds13_sbcox
                                                                                          ipv3_sbcny
                                                                                          wild1_sbcnn
                                                                                          s2#_sbcoF
                                                                                  of
                                                                                  { (#,#) ipv6_sbcoH [Occ=Once]
                                                                                          ipv7_sbcoI [Occ=Once!] ->
                                                                                        case
                                                                                            ipv7_sbcoI
                                                                                        of
                                                                                        { (,) bbuf2_sbcoK [Occ=Once]
                                                                                              cbuf'_sbcoL [Occ=Once!] ->
                                                                                              case
                                                                                                  writeMutVar# [dt_sbcn9
                                                                                                                bbuf2_sbcoK
                                                                                                                ipv6_sbcoH]
                                                                                              of
                                                                                              s2#1_sbcoM
                                                                                              { __DEFAULT ->
                                                                                                    case
                                                                                                        cbuf'_sbcoL
                                                                                                    of
                                                                                                    { GHC.IO.Buffer.Buffer ww1_sbcoO [Occ=Once]
                                                                                                                           ww2_sbcoP [Occ=Once]
                                                                                                                           ww3_sbcoQ [Occ=Once]
                                                                                                                           ww4_sbcoR [Occ=Once]
                                                                                                                           ww5_sbcoS [Occ=Once]
                                                                                                                           ww6_sbcoT [Occ=Once] ->
                                                                                                          $w$j_sbcnz
                                                                                                              s2#1_sbcoM
                                                                                                              ww1_sbcoO
                                                                                                              ww2_sbcoP
                                                                                                              ww3_sbcoQ
                                                                                                              ww4_sbcoR
                                                                                                              ww5_sbcoS
                                                                                                              ww6_sbcoT;
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                    };
                                                              };
                                                        };
                                                };
                                            GHC.Types.True ->
                                                case
                                                    GHC.IO.Handle.Internals.hLookAhead_2
                                                        wild_sbcn3 wild1_sbcnn ipv_sbcnl
                                                of
                                                { (#,#) ipv2_sbcoV [Occ=Once]
                                                        ipv3_sbcoW [Occ=Once] ->
                                                      case
                                                          writeMutVar# [dt2_sbcnc
                                                                        ipv3_sbcoW
                                                                        ipv2_sbcoV]
                                                      of
                                                      s2#_sbcoX
                                                      { __DEFAULT ->
                                                            (#,#) [s2#_sbcoX GHC.Types.True];
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in 
          GHC.IO.Handle.Internals.wantReadableHandle_1
              GHC.IO.Handle.Text.hWaitForInput2 h_sbcmU sat_sbcoY eta_sbcmW;

GHC.IO.Handle.Text.hWaitForInput
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Bool
[GblId, Arity=3, Str=<S,1*U><L,U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.IO.Handle.Text.hWaitForInput1 eta_B3 eta_B2 eta_B1;


==================== STG syntax: ====================
2018-03-16 16:06:10.403760551 UTC

lvl_rb6WB :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "illegal buffer size "#;

GHC.IO.Handle.Text.$willegalBufferSize [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId, Arity=4, Str=<B,U><B,U><B,U><B,U>x, Unf=OtherCon []] =
    [] \r [w_sbbR4 w1_sbbR5 ww_sbbR6 void_0E]
        let {
          sat_sbbRf [Occ=Once] :: GHC.Exception.SomeException
          [LclId] =
              [w_sbbR4 w1_sbbR5 ww_sbbR6] \u []
                  let {
                    sat_sbbRd [Occ=Once] :: GHC.Base.String
                    [LclId] =
                        [ww_sbbR6] \u []
                            let {
                              sat_sbbRc [Occ=Once] :: [GHC.Types.Char]
                              [LclId] =
                                  [ww_sbbR6] \u []
                                      case GHC.Show.$wshowSignedInt 9# ww_sbbR6 GHC.Types.[] of {
                                        (#,#) ww5_sbbRa [Occ=Once] ww6_sbbRb [Occ=Once] ->
                                            : [ww5_sbbRa ww6_sbbRb];
                                      };
                            } in  GHC.CString.unpackAppendCString# lvl_rb6WB sat_sbbRc; } in
                  let {
                    sat_sbbR8 [Occ=Once] :: GHC.Base.Maybe GHC.IO.Handle.Types.Handle
                    [LclId] =
                        CCCS GHC.Base.Just! [w_sbbR4]; } in
                  let {
                    sat_sbbRe [Occ=Once] :: GHC.IO.Exception.IOException
                    [LclId] =
                        CCCS GHC.IO.Exception.IOError! [sat_sbbR8
                                                        GHC.IO.Exception.InvalidArgument
                                                        w1_sbbR5
                                                        sat_sbbRd
                                                        GHC.Base.Nothing
                                                        GHC.Base.Nothing];
                  } in 
                    GHC.IO.Exception.$fExceptionIOException_$ctoException sat_sbbRe;
        } in  raiseIO# [sat_sbbRf GHC.Prim.void#];

GHC.IO.Handle.Text.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.IO.Handle.Text.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Handle.Text.$trModule4];

GHC.IO.Handle.Text.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.IO.Handle.Text"#;

GHC.IO.Handle.Text.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.IO.Handle.Text.$trModule2];

GHC.IO.Handle.Text.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.IO.Handle.Text.$trModule3
                                     GHC.IO.Handle.Text.$trModule1];

memcpy1_rb6WC
  :: forall a.
     GHC.Ptr.Ptr a
     -> GHC.Ptr.Ptr a
     -> GHC.Word.Word64
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [ds_sbbRg ds1_sbbRh ds2_sbbRi void_0E]
        case ds_sbbRg of {
          GHC.Ptr.Ptr ds4_sbbRl [Occ=Once] ->
              case ds1_sbbRh of {
                GHC.Ptr.Ptr ds6_sbbRn [Occ=Once] ->
                    case ds2_sbbRi of {
                      GHC.Word.W64# ds8_sbbRp [Occ=Once] ->
                          case
                              __pkg_ccall base-4.11.0.0 [ds4_sbbRl
                                                         ds6_sbbRn
                                                         ds8_sbbRp
                                                         GHC.Prim.void#]
                          of
                          { Unit# ds10_sbbRt [Occ=Once] ->
                                let {
                                  sat_sbbRu [Occ=Once] :: GHC.Ptr.Ptr ()
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds10_sbbRt];
                                } in  Unit# [sat_sbbRu];
                          };
                    };
              };
        };

GHC.IO.Handle.Text.memcpy
  :: forall a.
     GHC.Ptr.Ptr a
     -> GHC.Ptr.Ptr a
     -> Foreign.C.Types.CSize
     -> GHC.Types.IO (GHC.Ptr.Ptr ())
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        memcpy1_rb6WC eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Handle.Text.$wcommitBuffer' [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.CharBuffer #)
[GblId,
 Arity=8,
 Caf=NoCafRefs,
 Str=<S,U><L,U><S,U><S,U><L,1*U><L,1*U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sbbRv
           ww1_sbbRw
           ww2_sbbRx
           ww3_sbbRy
           w_sbbRz
           w1_sbbRA
           w2_sbbRB
           void_0E]
        case w2_sbbRB of wild_sbbRD {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       $dBufferedIO_sbbRF [Occ=Once]
                                       _ [Occ=Dead]
                                       ds_sbbRH [Occ=Once]
                                       _ [Occ=Dead]
                                       dt_sbbRJ
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt2_sbbRM [Occ=Once*]
                                       dt3_sbbRN
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case
                  GHC.IO.Handle.Internals.$wwriteCharBuffer
                      wild_sbbRD
                      ww_sbbRv
                      ww1_sbbRw
                      GHC.IO.Buffer.WriteBuffer
                      ww2_sbbRx
                      0#
                      ww3_sbbRy
                      GHC.Prim.void#
              of
              { Unit# _ [Occ=Dead] ->
                    case w_sbbRz of {
                      GHC.Types.False ->
                          case w1_sbbRA of {
                            GHC.Types.False ->
                                let {
                                  sat_sbbRZ [Occ=Once]
                                    :: GHC.IO.Buffer.Buffer GHC.IO.Buffer.CharBufElem
                                  [LclId] =
                                      CCCS GHC.IO.Buffer.Buffer! [ww_sbbRv
                                                                  ww1_sbbRw
                                                                  GHC.IO.Buffer.WriteBuffer
                                                                  ww2_sbbRx
                                                                  0#
                                                                  ww3_sbbRy];
                                } in  Unit# [sat_sbbRZ];
                            GHC.Types.True ->
                                case readMutVar# [dt2_sbbRM GHC.Prim.void#] of {
                                  Unit# ipv3_sbbS2 [Occ=Once!] ->
                                      case ipv3_sbbS2 of {
                                        GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             dt6_sbbS7 [Occ=Once]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                            case ==# [ww2_sbbRx dt6_sbbS7] of {
                                              __DEFAULT ->
                                                  let {
                                                    sat_sbbSb [Occ=Once]
                                                      :: GHC.IO.Buffer.Buffer
                                                           GHC.IO.Buffer.CharBufElem
                                                    [LclId] =
                                                        CCCS GHC.IO.Buffer.Buffer! [ww_sbbRv
                                                                                    ww1_sbbRw
                                                                                    GHC.IO.Buffer.WriteBuffer
                                                                                    ww2_sbbRx
                                                                                    0#
                                                                                    ww3_sbbRy];
                                                  } in  Unit# [sat_sbbSb];
                                              1# ->
                                                  case readMutVar# [dt3_sbbRN GHC.Prim.void#] of {
                                                    Unit# ipv5_sbbSe [Occ=Once] ->
                                                        let {
                                                          sat_sbbSf [Occ=Once]
                                                            :: GHC.IO.Buffer.RawBuffer
                                                                 GHC.IO.Buffer.CharBufElem
                                                          [LclId] =
                                                              CCCS GHC.ForeignPtr.ForeignPtr! [ww_sbbRv
                                                                                               ww1_sbbRw]; } in
                                                        let {
                                                          sat_sbbSg [Occ=Once]
                                                            :: GHC.IO.Handle.Types.BufferList
                                                                 GHC.IO.Buffer.CharBufElem
                                                          [LclId] =
                                                              CCCS GHC.IO.Handle.Types.BufferListCons! [sat_sbbSf
                                                                                                        ipv5_sbbSe];
                                                        } in 
                                                          case
                                                              writeMutVar# [dt3_sbbRN
                                                                            sat_sbbSg
                                                                            GHC.Prim.void#]
                                                          of
                                                          s2#_sbbSh
                                                          { (##) ->
                                                                let {
                                                                  sat_sbbSi [Occ=Once]
                                                                    :: GHC.IO.Buffer.Buffer
                                                                         GHC.IO.Buffer.CharBufElem
                                                                  [LclId] =
                                                                      CCCS GHC.IO.Buffer.Buffer! [ww_sbbRv
                                                                                                  ww1_sbbRw
                                                                                                  GHC.IO.Buffer.WriteBuffer
                                                                                                  ww2_sbbRx
                                                                                                  0#
                                                                                                  ww3_sbbRy];
                                                                } in  Unit# [sat_sbbSi];
                                                          };
                                                  };
                                            };
                                      };
                                };
                          };
                      GHC.Types.True ->
                          case readMutVar# [dt_sbbRJ GHC.Prim.void#] of {
                            Unit# ipv3_sbbSl [Occ=Once!] ->
                                case ipv3_sbbSl of wild2_sbbSm {
                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                       _ [Occ=Dead]
                                                       _ [Occ=Dead]
                                                       _ [Occ=Dead]
                                                       dt7_sbbSr [Occ=Once]
                                                       dt8_sbbSs [Occ=Once] ->
                                      case ==# [dt7_sbbSr dt8_sbbSs] of {
                                        __DEFAULT ->
                                            case
                                                GHC.IO.BufferedIO.flushWriteBuffer
                                                    $dBufferedIO_sbbRF
                                                    ds_sbbRH
                                                    wild2_sbbSm
                                                    GHC.Prim.void#
                                            of
                                            { Unit# ipv5_sbbSw [Occ=Once] ->
                                                  case
                                                      writeMutVar# [dt_sbbRJ
                                                                    ipv5_sbbSw
                                                                    GHC.Prim.void#]
                                                  of
                                                  s2#_sbbSx
                                                  { (##) ->
                                                        case w1_sbbRA of {
                                                          GHC.Types.False ->
                                                              let {
                                                                sat_sbbSz [Occ=Once]
                                                                  :: GHC.IO.Buffer.Buffer
                                                                       GHC.IO.Buffer.CharBufElem
                                                                [LclId] =
                                                                    CCCS GHC.IO.Buffer.Buffer! [ww_sbbRv
                                                                                                ww1_sbbRw
                                                                                                GHC.IO.Buffer.WriteBuffer
                                                                                                ww2_sbbRx
                                                                                                0#
                                                                                                ww3_sbbRy];
                                                              } in  Unit# [sat_sbbSz];
                                                          GHC.Types.True ->
                                                              case
                                                                  readMutVar# [dt2_sbbRM
                                                                               GHC.Prim.void#]
                                                              of
                                                              { Unit# ipv7_sbbSC [Occ=Once!] ->
                                                                    case ipv7_sbbSC of {
                                                                      GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                           _ [Occ=Dead]
                                                                                           _ [Occ=Dead]
                                                                                           dt12_sbbSH [Occ=Once]
                                                                                           _ [Occ=Dead]
                                                                                           _ [Occ=Dead] ->
                                                                          case
                                                                              ==# [ww2_sbbRx
                                                                                   dt12_sbbSH]
                                                                          of
                                                                          { __DEFAULT ->
                                                                                let {
                                                                                  sat_sbbSL [Occ=Once]
                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                         GHC.IO.Buffer.CharBufElem
                                                                                  [LclId] =
                                                                                      CCCS GHC.IO.Buffer.Buffer! [ww_sbbRv
                                                                                                                  ww1_sbbRw
                                                                                                                  GHC.IO.Buffer.WriteBuffer
                                                                                                                  ww2_sbbRx
                                                                                                                  0#
                                                                                                                  ww3_sbbRy];
                                                                                } in 
                                                                                  Unit# [sat_sbbSL];
                                                                            1# ->
                                                                                case
                                                                                    readMutVar# [dt3_sbbRN
                                                                                                 GHC.Prim.void#]
                                                                                of
                                                                                { Unit# ipv9_sbbSO [Occ=Once] ->
                                                                                      let {
                                                                                        sat_sbbSP [Occ=Once]
                                                                                          :: GHC.IO.Buffer.RawBuffer
                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                        [LclId] =
                                                                                            CCCS GHC.ForeignPtr.ForeignPtr! [ww_sbbRv
                                                                                                                             ww1_sbbRw]; } in
                                                                                      let {
                                                                                        sat_sbbSQ [Occ=Once]
                                                                                          :: GHC.IO.Handle.Types.BufferList
                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                        [LclId] =
                                                                                            CCCS GHC.IO.Handle.Types.BufferListCons! [sat_sbbSP
                                                                                                                                      ipv9_sbbSO];
                                                                                      } in 
                                                                                        case
                                                                                            writeMutVar# [dt3_sbbRN
                                                                                                          sat_sbbSQ
                                                                                                          GHC.Prim.void#]
                                                                                        of
                                                                                        s2#1_sbbSR
                                                                                        { (##) ->
                                                                                              let {
                                                                                                sat_sbbSS [Occ=Once]
                                                                                                  :: GHC.IO.Buffer.Buffer
                                                                                                       GHC.IO.Buffer.CharBufElem
                                                                                                [LclId] =
                                                                                                    CCCS GHC.IO.Buffer.Buffer! [ww_sbbRv
                                                                                                                                ww1_sbbRw
                                                                                                                                GHC.IO.Buffer.WriteBuffer
                                                                                                                                ww2_sbbRx
                                                                                                                                0#
                                                                                                                                ww3_sbbRy];
                                                                                              } in 
                                                                                                Unit# [sat_sbbSS];
                                                                                        };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                        1# ->
                                            case w1_sbbRA of {
                                              GHC.Types.False ->
                                                  let {
                                                    sat_sbbSU [Occ=Once]
                                                      :: GHC.IO.Buffer.Buffer
                                                           GHC.IO.Buffer.CharBufElem
                                                    [LclId] =
                                                        CCCS GHC.IO.Buffer.Buffer! [ww_sbbRv
                                                                                    ww1_sbbRw
                                                                                    GHC.IO.Buffer.WriteBuffer
                                                                                    ww2_sbbRx
                                                                                    0#
                                                                                    ww3_sbbRy];
                                                  } in  Unit# [sat_sbbSU];
                                              GHC.Types.True ->
                                                  case readMutVar# [dt2_sbbRM GHC.Prim.void#] of {
                                                    Unit# ipv5_sbbSX [Occ=Once!] ->
                                                        case ipv5_sbbSX of {
                                                          GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                               _ [Occ=Dead]
                                                                               _ [Occ=Dead]
                                                                               dt12_sbbT2 [Occ=Once]
                                                                               _ [Occ=Dead]
                                                                               _ [Occ=Dead] ->
                                                              case ==# [ww2_sbbRx dt12_sbbT2] of {
                                                                __DEFAULT ->
                                                                    let {
                                                                      sat_sbbT6 [Occ=Once]
                                                                        :: GHC.IO.Buffer.Buffer
                                                                             GHC.IO.Buffer.CharBufElem
                                                                      [LclId] =
                                                                          CCCS GHC.IO.Buffer.Buffer! [ww_sbbRv
                                                                                                      ww1_sbbRw
                                                                                                      GHC.IO.Buffer.WriteBuffer
                                                                                                      ww2_sbbRx
                                                                                                      0#
                                                                                                      ww3_sbbRy];
                                                                    } in  Unit# [sat_sbbT6];
                                                                1# ->
                                                                    case
                                                                        readMutVar# [dt3_sbbRN
                                                                                     GHC.Prim.void#]
                                                                    of
                                                                    { Unit# ipv7_sbbT9 [Occ=Once] ->
                                                                          let {
                                                                            sat_sbbTa [Occ=Once]
                                                                              :: GHC.IO.Buffer.RawBuffer
                                                                                   GHC.IO.Buffer.CharBufElem
                                                                            [LclId] =
                                                                                CCCS GHC.ForeignPtr.ForeignPtr! [ww_sbbRv
                                                                                                                 ww1_sbbRw]; } in
                                                                          let {
                                                                            sat_sbbTb [Occ=Once]
                                                                              :: GHC.IO.Handle.Types.BufferList
                                                                                   GHC.IO.Buffer.CharBufElem
                                                                            [LclId] =
                                                                                CCCS GHC.IO.Handle.Types.BufferListCons! [sat_sbbTa
                                                                                                                          ipv7_sbbT9];
                                                                          } in 
                                                                            case
                                                                                writeMutVar# [dt3_sbbRN
                                                                                              sat_sbbTb
                                                                                              GHC.Prim.void#]
                                                                            of
                                                                            s2#_sbbTc
                                                                            { (##) ->
                                                                                  let {
                                                                                    sat_sbbTd [Occ=Once]
                                                                                      :: GHC.IO.Buffer.Buffer
                                                                                           GHC.IO.Buffer.CharBufElem
                                                                                    [LclId] =
                                                                                        CCCS GHC.IO.Buffer.Buffer! [ww_sbbRv
                                                                                                                    ww1_sbbRw
                                                                                                                    GHC.IO.Buffer.WriteBuffer
                                                                                                                    ww2_sbbRx
                                                                                                                    0#
                                                                                                                    ww3_sbbRy];
                                                                                  } in 
                                                                                    Unit# [sat_sbbTd];
                                                                            };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.IO.Handle.Text.commitBuffer'1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IO.Buffer.CharBuffer #)
[GblId,
 Arity=7,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><L,1*U><L,1*U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbbTe
           w1_sbbTf
           w2_sbbTg
           w3_sbbTh
           w4_sbbTi
           w5_sbbTj
           void_0E]
        case w_sbbTe of {
          GHC.ForeignPtr.ForeignPtr ww1_sbbTm [Occ=Once]
                                    ww2_sbbTn [Occ=Once] ->
              case w1_sbbTf of {
                GHC.Types.I# ww4_sbbTp [Occ=Once] ->
                    case w2_sbbTg of {
                      GHC.Types.I# ww6_sbbTr [Occ=Once] ->
                          GHC.IO.Handle.Text.$wcommitBuffer'
                              ww1_sbbTm
                              ww2_sbbTn
                              ww4_sbbTp
                              ww6_sbbTr
                              w3_sbbTh
                              w4_sbbTi
                              w5_sbbTj
                              GHC.Prim.void#;
                    };
              };
        };

GHC.IO.Handle.Text.commitBuffer'
  :: GHC.IO.Buffer.RawCharBuffer
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.IO.Handle.Types.Handle__
     -> GHC.Types.IO GHC.IO.Buffer.CharBuffer
[GblId,
 Arity=7,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(S),1*U(U)><S(S),1*U(U)><L,1*U><L,1*U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B7 eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.Handle.Text.commitBuffer'1
            eta_B7 eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

lvl1_rb6WD :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "commitBuffer"#;

lvl2_rb6WE :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl1_rb6WD;

GHC.IO.Handle.Text.hPutChar3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hPutChar"#;

GHC.IO.Handle.Text.hPutChar2 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hPutChar3;

GHC.IO.Handle.Text.$whPutChar [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.Char#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<S,1*U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [w_sbbTs ww_sbbTt void_0E]
        let {
          act_sbbTv [Occ=Once*, Dmd=<L,C(C1(U(U,U)))>]
            :: GHC.IO.Handle.Types.Handle__
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
              [ww_sbbTt] \r [handle__sbbTw void_0E]
                  case handle__sbbTw of wild_sbbTy {
                    GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                 $dBufferedIO_sbbTA [Occ=Once]
                                                 _ [Occ=Dead]
                                                 ds_sbbTC [Occ=Once]
                                                 _ [Occ=Dead]
                                                 dt_sbbTE
                                                 ds2_sbbTF [Occ=Once!]
                                                 _ [Occ=Dead]
                                                 dt2_sbbTH [Occ=Once]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 ds7_sbbTN [Occ=Once!]
                                                 _ [Occ=Dead] ->
                        case readMutVar# [dt2_sbbTH GHC.Prim.void#] of {
                          Unit# ipv1_sbbTR [Occ=Once*!] ->
                              case ww_sbbTt of wild1_sbbTS {
                                __DEFAULT ->
                                    case ipv1_sbbTR of {
                                      GHC.IO.Buffer.Buffer dt4_sbbTU
                                                           dt5_sbbTV
                                                           ds10_sbbTW [Occ=Once]
                                                           dt6_sbbTX [Occ=Once]
                                                           dt7_sbbTY [Occ=Once]
                                                           dt8_sbbTZ ->
                                          case
                                              writeWideCharOffAddr# [dt4_sbbTU
                                                                     dt8_sbbTZ
                                                                     wild1_sbbTS
                                                                     GHC.Prim.void#]
                                          of
                                          s2_sbbU0
                                          { (##) ->
                                                case touch# [dt5_sbbTV GHC.Prim.void#] of s'_sbbU1 {
                                                  (##) ->
                                                      case +# [dt8_sbbTZ 1#] of sat_sbbU2 {
                                                        __DEFAULT ->
                                                            case
                                                                GHC.IO.Handle.Internals.$wwriteCharBuffer
                                                                    wild_sbbTy
                                                                    dt4_sbbTU
                                                                    dt5_sbbTV
                                                                    ds10_sbbTW
                                                                    dt6_sbbTX
                                                                    dt7_sbbTY
                                                                    sat_sbbU2
                                                                    GHC.Prim.void#
                                                            of
                                                            { Unit# _ [Occ=Dead] ->
                                                                  Unit# [GHC.Tuple.()];
                                                            };
                                                      };
                                                };
                                          };
                                    };
                                '\n'# ->
                                    let-no-escape {
                                      $w$j_sbbU6 [InlPrag=NOUSERINLINE[0],
                                                  Occ=Once*!T[7],
                                                  Dmd=<C(C(C(C(C(C(C(S))))))),1*C1(C1(C1(C1(C1(C1(C1(U(U,U))))))))>]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> GHC.Prim.Addr#
                                           -> GHC.ForeignPtr.ForeignPtrContents
                                           -> GHC.IO.Buffer.BufferState
                                           -> GHC.Prim.Int#
                                           -> GHC.Prim.Int#
                                           -> GHC.Prim.Int#
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                      [LclId[JoinId(7)],
                                       Arity=7,
                                       Str=<S,U><S,U><L,U><L,U><S,U><S,U><S,U>,
                                       Unf=OtherCon []] =
                                          sat-only [wild_sbbTy
                                                    $dBufferedIO_sbbTA
                                                    ds_sbbTC
                                                    dt_sbbTE
                                                    ds2_sbbTF] \r [void_0E
                                                                   ww1_sbbU8
                                                                   ww2_sbbU9
                                                                   ww3_sbbUa
                                                                   ww4_sbbUb
                                                                   ww5_sbbUc
                                                                   ww6_sbbUd]
                                              case
                                                  GHC.IO.Handle.Internals.$wwriteCharBuffer
                                                      wild_sbbTy
                                                      ww1_sbbU8
                                                      ww2_sbbU9
                                                      ww3_sbbUa
                                                      ww4_sbbUb
                                                      ww5_sbbUc
                                                      ww6_sbbUd
                                                      GHC.Prim.void#
                                              of
                                              { Unit# _ [Occ=Dead] ->
                                                    case ds2_sbbTF of {
                                                      __DEFAULT -> Unit# [GHC.Tuple.()];
                                                      GHC.IO.Handle.Types.LineBuffering ->
                                                          case
                                                              readMutVar# [dt_sbbTE GHC.Prim.void#]
                                                          of
                                                          { Unit# ipv5_sbbUk [Occ=Once!] ->
                                                                case ipv5_sbbUk of wild3_sbbUl {
                                                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       dt7_sbbUq [Occ=Once]
                                                                                       dt8_sbbUr [Occ=Once] ->
                                                                      case
                                                                          ==# [dt7_sbbUq dt8_sbbUr]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            case
                                                                                GHC.IO.BufferedIO.flushWriteBuffer
                                                                                    $dBufferedIO_sbbTA
                                                                                    ds_sbbTC
                                                                                    wild3_sbbUl
                                                                                    GHC.Prim.void#
                                                                            of
                                                                            { Unit# ipv7_sbbUv [Occ=Once] ->
                                                                                  case
                                                                                      writeMutVar# [dt_sbbTE
                                                                                                    ipv7_sbbUv
                                                                                                    GHC.Prim.void#]
                                                                                  of
                                                                                  s2#_sbbUw
                                                                                  { (##) ->
                                                                                        Unit# [GHC.Tuple.()];
                                                                                  };
                                                                            };
                                                                        1# -> Unit# [GHC.Tuple.()];
                                                                      };
                                                                };
                                                          };
                                                    };
                                              };
                                    } in 
                                      case ds7_sbbTN of {
                                        GHC.IO.Handle.Types.LF ->
                                            case ipv1_sbbTR of {
                                              GHC.IO.Buffer.Buffer dt4_sbbUz
                                                                   dt5_sbbUA
                                                                   ds10_sbbUB [Occ=Once]
                                                                   dt6_sbbUC [Occ=Once]
                                                                   dt7_sbbUD [Occ=Once]
                                                                   dt8_sbbUE ->
                                                  case
                                                      writeWideCharOffAddr# [dt4_sbbUz
                                                                             dt8_sbbUE
                                                                             '\n'#
                                                                             GHC.Prim.void#]
                                                  of
                                                  s2_sbbUF
                                                  { (##) ->
                                                        case
                                                            touch# [dt5_sbbUA GHC.Prim.void#]
                                                        of
                                                        s'_sbbUG
                                                        { (##) ->
                                                              case +# [dt8_sbbUE 1#] of sat_sbbUH {
                                                                __DEFAULT ->
                                                                    $w$j_sbbU6
                                                                        GHC.Prim.void#
                                                                        dt4_sbbUz
                                                                        dt5_sbbUA
                                                                        ds10_sbbUB
                                                                        dt6_sbbUC
                                                                        dt7_sbbUD
                                                                        sat_sbbUH;
                                                              };
                                                        };
                                                  };
                                            };
                                        GHC.IO.Handle.Types.CRLF ->
                                            case ipv1_sbbTR of {
                                              GHC.IO.Buffer.Buffer dt4_sbbUJ
                                                                   dt5_sbbUK
                                                                   ds10_sbbUL [Occ=Once]
                                                                   dt6_sbbUM [Occ=Once]
                                                                   dt7_sbbUN [Occ=Once]
                                                                   dt8_sbbUO ->
                                                  case
                                                      writeWideCharOffAddr# [dt4_sbbUJ
                                                                             dt8_sbbUO
                                                                             '\r'#
                                                                             GHC.Prim.void#]
                                                  of
                                                  s2_sbbUP
                                                  { (##) ->
                                                        case
                                                            touch# [dt5_sbbUK GHC.Prim.void#]
                                                        of
                                                        s'_sbbUQ
                                                        { (##) ->
                                                              case
                                                                  +# [dt8_sbbUO 1#]
                                                              of
                                                              ipv2_sbbUR [Dmd=<S,U>]
                                                              { __DEFAULT ->
                                                                    case
                                                                        writeWideCharOffAddr# [dt4_sbbUJ
                                                                                               ipv2_sbbUR
                                                                                               '\n'#
                                                                                               GHC.Prim.void#]
                                                                    of
                                                                    s1_sbbUS
                                                                    { (##) ->
                                                                          case
                                                                              touch# [dt5_sbbUK
                                                                                      GHC.Prim.void#]
                                                                          of
                                                                          s'1_sbbUT
                                                                          { (##) ->
                                                                                case
                                                                                    +# [ipv2_sbbUR
                                                                                        1#]
                                                                                of
                                                                                sat_sbbUU
                                                                                { __DEFAULT ->
                                                                                      $w$j_sbbU6
                                                                                          GHC.Prim.void#
                                                                                          dt4_sbbUJ
                                                                                          dt5_sbbUK
                                                                                          ds10_sbbUL
                                                                                          dt6_sbbUM
                                                                                          dt7_sbbUN
                                                                                          sat_sbbUU;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                              };
                        };
                  };
        } in 
          case w_sbbTs of wild_sbbUV {
            GHC.IO.Handle.Types.FileHandle _ [Occ=Dead] dt_sbbUX [Occ=Once] ->
                GHC.IO.Handle.Internals.$wwantWritableHandle'
                    GHC.IO.Handle.Text.hPutChar2
                    wild_sbbUV
                    dt_sbbUX
                    act_sbbTv
                    GHC.Prim.void#;
            GHC.IO.Handle.Types.DuplexHandle _ [Occ=Dead]
                                             _ [Occ=Dead]
                                             dt1_sbbV0 [Occ=Once] ->
                GHC.IO.Handle.Internals.$wwantWritableHandle'
                    GHC.IO.Handle.Text.hPutChar2
                    wild_sbbUV
                    dt1_sbbV0
                    act_sbbTv
                    GHC.Prim.void#;
          };

GHC.IO.Handle.Text.hPutChar1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Types.Char
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<S,1*U><S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [w_sbbV1 w1_sbbV2 void_0E]
        case w1_sbbV2 of {
          GHC.Types.C# ww1_sbbV5 [Occ=Once] ->
              GHC.IO.Handle.Text.$whPutChar w_sbbV1 ww1_sbbV5 GHC.Prim.void#;
        };

GHC.IO.Handle.Text.hPutChar
  :: GHC.IO.Handle.Types.Handle -> GHC.Types.Char -> GHC.Types.IO ()
[GblId, Arity=3, Str=<S,1*U><S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.IO.Handle.Text.hPutChar1 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Handle.Text.hPutStr7 [Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle
     -> [GHC.Types.Char]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=<L,U><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [ds_sbbV6 ds1_sbbV7 void_0E]
        case ds1_sbbV7 of {
          [] -> Unit# [GHC.Tuple.()];
          : c_sbbVa [Occ=Once!] cs_sbbVb [Occ=Once] ->
              case c_sbbVa of {
                GHC.Types.C# ww1_sbbVd [Occ=Once] ->
                    case
                        GHC.IO.Handle.Text.$whPutChar ds_sbbV6 ww1_sbbVd GHC.Prim.void#
                    of
                    { Unit# _ [Occ=Dead] ->
                          GHC.IO.Handle.Text.hPutStr7 ds_sbbV6 cs_sbbVb GHC.Prim.void#;
                    };
              };
        };

GHC.IO.Handle.Text.hGetChar3
  :: GHC.Exception.SomeException
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Base.Maybe GHC.IO.Buffer.CharBuffer #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [e1_sbbVh void_0E]
        case e1_sbbVh of wild_sbbVj {
          GHC.Exception.SomeException $dException1_sbbVk [Occ=Once]
                                      e3_sbbVl [Occ=Once] ->
              case GHC.Exception.$p1Exception $dException1_sbbVk of sat_sbbVm {
                __DEFAULT ->
                    case
                        Data.Typeable.Internal.sameTypeRep
                            sat_sbbVm GHC.IO.Exception.$fExceptionIOException4
                    of
                    { GHC.Types.False -> raiseIO# [wild_sbbVj GHC.Prim.void#];
                      GHC.Types.True ->
                          case e3_sbbVl of wild2_sbbVo {
                            GHC.IO.Exception.IOError _ [Occ=Dead]
                                                     ds2_sbbVq [Occ=Once!]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead] ->
                                case ds2_sbbVq of {
                                  __DEFAULT ->
                                      let {
                                        sat_sbbVw [Occ=Once] :: GHC.Exception.SomeException
                                        [LclId] =
                                            [wild2_sbbVo] \u []
                                                GHC.IO.Exception.$fExceptionIOException_$ctoException
                                                    wild2_sbbVo;
                                      } in  raiseIO# [sat_sbbVw GHC.Prim.void#];
                                  GHC.IO.Exception.EOF -> Unit# [GHC.Base.Nothing];
                                };
                          };
                    };
              };
        };

GHC.IO.Handle.Text.hGetChar7 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetChar"#;

GHC.IO.Handle.Text.hGetChar6 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hGetChar7;

GHC.IO.Handle.Text.hGetChar5 :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! ['\r'#];

GHC.IO.Handle.Text.hGetChar4 :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! ['\n'#];

GHC.IO.Handle.Text.hGetChar2
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [handle__sbbVx void_0E]
        case handle__sbbVx of wild_sbbVz {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt2_sbbVI
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       ds6_sbbVN [Occ=Once!]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case readMutVar# [dt2_sbbVI GHC.Prim.void#] of {
                Unit# ipv1_sbbVS [Occ=Once!] ->
                    case ipv1_sbbVS of wild1_sbbVT {
                      GHC.IO.Buffer.Buffer dt4_sbbVU [Occ=Once]
                                           dt5_sbbVV [Occ=Once]
                                           ds10_sbbVW [Occ=Once]
                                           dt6_sbbVX [Occ=Once]
                                           dt7_sbbVY
                                           dt8_sbbVZ ->
                          let-no-escape {
                            $w$j_sbbW0 [InlPrag=NOUSERINLINE[0],
                                        Occ=Once*!T[7],
                                        Dmd=<L,1*C1(C1(C1(C1(C1(C1(C1(U(U,U))))))))>]
                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                 -> GHC.Prim.Addr#
                                 -> GHC.ForeignPtr.ForeignPtrContents
                                 -> GHC.IO.Buffer.BufferState
                                 -> GHC.Prim.Int#
                                 -> GHC.Prim.Int#
                                 -> GHC.Prim.Int#
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
                            [LclId[JoinId(7)],
                             Arity=7,
                             Str=<S,U><S,U><L,U><L,U><L,U><S,U><L,U>,
                             Unf=OtherCon []] =
                                sat-only [wild_sbbVz dt2_sbbVI ds6_sbbVN] \r [void_0E
                                                                              ww_sbbW2
                                                                              ww1_sbbW3
                                                                              ww2_sbbW4
                                                                              ww3_sbbW5
                                                                              ww4_sbbW6
                                                                              ww5_sbbW7]
                                    case
                                        readWideCharOffAddr# [ww_sbbW2 ww4_sbbW6 GHC.Prim.void#]
                                    of
                                    { Unit# ipv3_sbbWa [Occ=Once*] ->
                                          case touch# [ww1_sbbW3 GHC.Prim.void#] of s'_sbbWb {
                                            (##) ->
                                                case +# [ww4_sbbW6 1#] of ipv4_sbbWc {
                                                  __DEFAULT ->
                                                      case ds6_sbbVN of {
                                                        GHC.IO.Handle.Types.LF ->
                                                            let {
                                                              sat_sbbWf [Occ=Once]
                                                                :: GHC.IO.Buffer.Buffer
                                                                     GHC.IO.Buffer.CharBufElem
                                                              [LclId] =
                                                                  [ww_sbbW2
                                                                   ww1_sbbW3
                                                                   ww2_sbbW4
                                                                   ww3_sbbW5
                                                                   ww5_sbbW7
                                                                   ipv4_sbbWc] \u []
                                                                      case
                                                                          ==# [ipv4_sbbWc ww5_sbbW7]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            GHC.IO.Buffer.Buffer [ww_sbbW2
                                                                                                  ww1_sbbW3
                                                                                                  ww2_sbbW4
                                                                                                  ww3_sbbW5
                                                                                                  ipv4_sbbWc
                                                                                                  ww5_sbbW7];
                                                                        1# ->
                                                                            GHC.IO.Buffer.Buffer [ww_sbbW2
                                                                                                  ww1_sbbW3
                                                                                                  ww2_sbbW4
                                                                                                  ww3_sbbW5
                                                                                                  0#
                                                                                                  0#];
                                                                      };
                                                            } in 
                                                              case
                                                                  writeMutVar# [dt2_sbbVI
                                                                                sat_sbbWf
                                                                                GHC.Prim.void#]
                                                              of
                                                              s2#_sbbWg
                                                              { (##) ->
                                                                    let {
                                                                      sat_sbbWh [Occ=Once]
                                                                        :: GHC.Types.Char
                                                                      [LclId] =
                                                                          CCCS GHC.Types.C#! [ipv3_sbbWa];
                                                                    } in  Unit# [sat_sbbWh];
                                                              };
                                                        GHC.IO.Handle.Types.CRLF ->
                                                            case ipv3_sbbWa of wild3_sbbWi {
                                                              __DEFAULT ->
                                                                  let {
                                                                    sat_sbbWk [Occ=Once]
                                                                      :: GHC.IO.Buffer.Buffer
                                                                           GHC.IO.Buffer.CharBufElem
                                                                    [LclId] =
                                                                        [ww_sbbW2
                                                                         ww1_sbbW3
                                                                         ww2_sbbW4
                                                                         ww3_sbbW5
                                                                         ww5_sbbW7
                                                                         ipv4_sbbWc] \u []
                                                                            case
                                                                                ==# [ipv4_sbbWc
                                                                                     ww5_sbbW7]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.IO.Buffer.Buffer [ww_sbbW2
                                                                                                        ww1_sbbW3
                                                                                                        ww2_sbbW4
                                                                                                        ww3_sbbW5
                                                                                                        ipv4_sbbWc
                                                                                                        ww5_sbbW7];
                                                                              1# ->
                                                                                  GHC.IO.Buffer.Buffer [ww_sbbW2
                                                                                                        ww1_sbbW3
                                                                                                        ww2_sbbW4
                                                                                                        ww3_sbbW5
                                                                                                        0#
                                                                                                        0#];
                                                                            };
                                                                  } in 
                                                                    case
                                                                        writeMutVar# [dt2_sbbVI
                                                                                      sat_sbbWk
                                                                                      GHC.Prim.void#]
                                                                    of
                                                                    s2#_sbbWl
                                                                    { (##) ->
                                                                          let {
                                                                            sat_sbbWm [Occ=Once]
                                                                              :: GHC.Types.Char
                                                                            [LclId] =
                                                                                CCCS GHC.Types.C#! [wild3_sbbWi];
                                                                          } in  Unit# [sat_sbbWm];
                                                                    };
                                                              '\r'# ->
                                                                  let-no-escape {
                                                                    $j_sbbWn [Occ=Once*!T[7],
                                                                              Dmd=<C(C(C(C(C(C(C(S))))))),1*C1(C1(C1(C1(C1(C1(C1(U(U,U))))))))>]
                                                                      :: GHC.Prim.Addr#
                                                                         -> GHC.ForeignPtr.ForeignPtrContents
                                                                         -> GHC.IO.Buffer.BufferState
                                                                         -> GHC.Prim.Int#
                                                                         -> GHC.Prim.Int#
                                                                         -> GHC.Prim.Int#
                                                                         -> GHC.IO.Buffer.Buffer
                                                                              GHC.Types.Char
                                                                         -> (# GHC.Prim.State#
                                                                                 GHC.Prim.RealWorld,
                                                                               GHC.Types.Char #)
                                                                    [LclId[JoinId(7)],
                                                                     Arity=7,
                                                                     Str=<L,U><L,U><L,U><L,U><S,U><S,U><L,U(U,U,U,U,U,U)>,
                                                                     Unf=OtherCon []] =
                                                                        sat-only [wild_sbbVz
                                                                                  dt2_sbbVI] \r [dt9_sbbWo
                                                                                                 dt10_sbbWp
                                                                                                 ds12_sbbWq
                                                                                                 dt11_sbbWr
                                                                                                 dt12_sbbWs
                                                                                                 dt13_sbbWt
                                                                                                 wild4_sbbWu]
                                                                            case
                                                                                ==# [dt12_sbbWs
                                                                                     dt13_sbbWt]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      readWideCharOffAddr# [dt9_sbbWo
                                                                                                            dt12_sbbWs
                                                                                                            GHC.Prim.void#]
                                                                                  of
                                                                                  { Unit# ipv6_sbbWy [Occ=Once!] ->
                                                                                        case
                                                                                            touch# [dt10_sbbWp
                                                                                                    GHC.Prim.void#]
                                                                                        of
                                                                                        s'1_sbbWz
                                                                                        { (##) ->
                                                                                              case
                                                                                                  ipv6_sbbWy
                                                                                              of
                                                                                              { __DEFAULT ->
                                                                                                    case
                                                                                                        writeMutVar# [dt2_sbbVI
                                                                                                                      wild4_sbbWu
                                                                                                                      GHC.Prim.void#]
                                                                                                    of
                                                                                                    s2#_sbbWB
                                                                                                    { (##) ->
                                                                                                          Unit# [GHC.IO.Handle.Text.hGetChar5];
                                                                                                    };
                                                                                                '\n'# ->
                                                                                                    let {
                                                                                                      sat_sbbWE [Occ=Once]
                                                                                                        :: GHC.IO.Buffer.Buffer
                                                                                                             GHC.IO.Buffer.CharBufElem
                                                                                                      [LclId] =
                                                                                                          [dt9_sbbWo
                                                                                                           dt10_sbbWp
                                                                                                           ds12_sbbWq
                                                                                                           dt11_sbbWr
                                                                                                           dt12_sbbWs
                                                                                                           dt13_sbbWt] \u []
                                                                                                              case
                                                                                                                  +# [dt12_sbbWs
                                                                                                                      1#]
                                                                                                              of
                                                                                                              ipv7_sbbWC [Dmd=<S,U>]
                                                                                                              { __DEFAULT ->
                                                                                                                    case
                                                                                                                        ==# [ipv7_sbbWC
                                                                                                                             dt13_sbbWt]
                                                                                                                    of
                                                                                                                    { __DEFAULT ->
                                                                                                                          GHC.IO.Buffer.Buffer [dt9_sbbWo
                                                                                                                                                dt10_sbbWp
                                                                                                                                                ds12_sbbWq
                                                                                                                                                dt11_sbbWr
                                                                                                                                                ipv7_sbbWC
                                                                                                                                                dt13_sbbWt];
                                                                                                                      1# ->
                                                                                                                          GHC.IO.Buffer.Buffer [dt9_sbbWo
                                                                                                                                                dt10_sbbWp
                                                                                                                                                ds12_sbbWq
                                                                                                                                                dt11_sbbWr
                                                                                                                                                0#
                                                                                                                                                0#];
                                                                                                                    };
                                                                                                              };
                                                                                                    } in 
                                                                                                      case
                                                                                                          writeMutVar# [dt2_sbbVI
                                                                                                                        sat_sbbWE
                                                                                                                        GHC.Prim.void#]
                                                                                                      of
                                                                                                      s2#_sbbWF
                                                                                                      { (##) ->
                                                                                                            Unit# [GHC.IO.Handle.Text.hGetChar4];
                                                                                                      };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                              1# ->
                                                                                  let {
                                                                                    sat_sbbX0 [Occ=Once]
                                                                                      :: GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld
                                                                                         -> (# GHC.Prim.State#
                                                                                                 GHC.Prim.RealWorld,
                                                                                               GHC.Base.Maybe
                                                                                                 GHC.IO.Buffer.CharBuffer #)
                                                                                    [LclId] =
                                                                                        [wild_sbbVz
                                                                                         dt9_sbbWo
                                                                                         dt10_sbbWp
                                                                                         ds12_sbbWq
                                                                                         dt11_sbbWr
                                                                                         dt12_sbbWs
                                                                                         dt13_sbbWt
                                                                                         wild4_sbbWu] \r [void_0E]
                                                                                            case
                                                                                                -# [dt13_sbbWt
                                                                                                    dt12_sbbWs]
                                                                                            of
                                                                                            { __DEFAULT ->
                                                                                                  let {
                                                                                                    sat_sbbWI [Occ=Once]
                                                                                                      :: GHC.Base.Maybe
                                                                                                           GHC.IO.Buffer.CharBuffer
                                                                                                    [LclId] =
                                                                                                        CCCS GHC.Base.Just! [wild4_sbbWu];
                                                                                                  } in 
                                                                                                    Unit# [sat_sbbWI];
                                                                                              0# ->
                                                                                                  case
                                                                                                      GHC.IO.Handle.Internals.hLookAhead_2
                                                                                                          wild_sbbVz
                                                                                                          wild4_sbbWu
                                                                                                          GHC.Prim.void#
                                                                                                  of
                                                                                                  { Unit# ipv6_sbbWL [Occ=Once] ->
                                                                                                        let {
                                                                                                          sat_sbbWM [Occ=Once]
                                                                                                            :: GHC.Base.Maybe
                                                                                                                 GHC.IO.Buffer.CharBuffer
                                                                                                          [LclId] =
                                                                                                              CCCS GHC.Base.Just! [ipv6_sbbWL];
                                                                                                        } in 
                                                                                                          Unit# [sat_sbbWM];
                                                                                                  };
                                                                                              1# ->
                                                                                                  case
                                                                                                      readWideCharOffAddr# [dt9_sbbWo
                                                                                                                            dt12_sbbWs
                                                                                                                            GHC.Prim.void#]
                                                                                                  of
                                                                                                  { Unit# ipv6_sbbWP [Occ=Once!] ->
                                                                                                        case
                                                                                                            touch# [dt10_sbbWp
                                                                                                                    GHC.Prim.void#]
                                                                                                        of
                                                                                                        s'1_sbbWQ
                                                                                                        { (##) ->
                                                                                                              case
                                                                                                                  ipv6_sbbWP
                                                                                                              of
                                                                                                              { __DEFAULT ->
                                                                                                                    let {
                                                                                                                      sat_sbbWS [Occ=Once]
                                                                                                                        :: GHC.Base.Maybe
                                                                                                                             GHC.IO.Buffer.CharBuffer
                                                                                                                      [LclId] =
                                                                                                                          CCCS GHC.Base.Just! [wild4_sbbWu];
                                                                                                                    } in 
                                                                                                                      Unit# [sat_sbbWS];
                                                                                                                '\r'# ->
                                                                                                                    case
                                                                                                                        writeWideCharOffAddr# [dt9_sbbWo
                                                                                                                                               0#
                                                                                                                                               '\r'#
                                                                                                                                               GHC.Prim.void#]
                                                                                                                    of
                                                                                                                    s2_sbbWT
                                                                                                                    { (##) ->
                                                                                                                          case
                                                                                                                              touch# [dt10_sbbWp
                                                                                                                                      GHC.Prim.void#]
                                                                                                                          of
                                                                                                                          s'2_sbbWU
                                                                                                                          { (##) ->
                                                                                                                                let {
                                                                                                                                  sat_sbbWV [Occ=Once]
                                                                                                                                    :: GHC.IO.Buffer.CharBuffer
                                                                                                                                  [LclId] =
                                                                                                                                      CCCS GHC.IO.Buffer.Buffer! [dt9_sbbWo
                                                                                                                                                                  dt10_sbbWp
                                                                                                                                                                  ds12_sbbWq
                                                                                                                                                                  dt11_sbbWr
                                                                                                                                                                  0#
                                                                                                                                                                  1#];
                                                                                                                                } in 
                                                                                                                                  case
                                                                                                                                      GHC.IO.Handle.Internals.hLookAhead_2
                                                                                                                                          wild_sbbVz
                                                                                                                                          sat_sbbWV
                                                                                                                                          GHC.Prim.void#
                                                                                                                                  of
                                                                                                                                  { Unit# ipv8_sbbWY [Occ=Once] ->
                                                                                                                                        let {
                                                                                                                                          sat_sbbWZ [Occ=Once]
                                                                                                                                            :: GHC.Base.Maybe
                                                                                                                                                 GHC.IO.Buffer.CharBuffer
                                                                                                                                          [LclId] =
                                                                                                                                              CCCS GHC.Base.Just! [ipv8_sbbWY];
                                                                                                                                        } in 
                                                                                                                                          Unit# [sat_sbbWZ];
                                                                                                                                  };
                                                                                                                          };
                                                                                                                    };
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                  } in 
                                                                                    case
                                                                                        catch# [sat_sbbX0
                                                                                                GHC.IO.Handle.Text.hGetChar3
                                                                                                GHC.Prim.void#]
                                                                                    of
                                                                                    { Unit# ipv6_sbbX3 [Occ=Once!] ->
                                                                                          case
                                                                                              ipv6_sbbX3
                                                                                          of
                                                                                          { GHC.Base.Nothing ->
                                                                                                case
                                                                                                    writeMutVar# [dt2_sbbVI
                                                                                                                  wild4_sbbWu
                                                                                                                  GHC.Prim.void#]
                                                                                                of
                                                                                                s2#_sbbX5
                                                                                                { (##) ->
                                                                                                      Unit# [GHC.IO.Handle.Text.hGetChar5];
                                                                                                };
                                                                                            GHC.Base.Just buf3_sbbX6 [Occ=Once*] ->
                                                                                                case
                                                                                                    readWideCharOffAddr# [dt9_sbbWo
                                                                                                                          dt12_sbbWs
                                                                                                                          GHC.Prim.void#]
                                                                                                of
                                                                                                { Unit# ipv8_sbbX9 [Occ=Once!] ->
                                                                                                      case
                                                                                                          touch# [dt10_sbbWp
                                                                                                                  GHC.Prim.void#]
                                                                                                      of
                                                                                                      s'1_sbbXa
                                                                                                      { (##) ->
                                                                                                            case
                                                                                                                ipv8_sbbX9
                                                                                                            of
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      writeMutVar# [dt2_sbbVI
                                                                                                                                    buf3_sbbX6
                                                                                                                                    GHC.Prim.void#]
                                                                                                                  of
                                                                                                                  s2#_sbbXc
                                                                                                                  { (##) ->
                                                                                                                        Unit# [GHC.IO.Handle.Text.hGetChar5];
                                                                                                                  };
                                                                                                              '\n'# ->
                                                                                                                  let {
                                                                                                                    sat_sbbXm [Occ=Once]
                                                                                                                      :: GHC.IO.Buffer.Buffer
                                                                                                                           GHC.IO.Buffer.CharBufElem
                                                                                                                    [LclId] =
                                                                                                                        [dt12_sbbWs
                                                                                                                         buf3_sbbX6] \u []
                                                                                                                            case
                                                                                                                                buf3_sbbX6
                                                                                                                            of
                                                                                                                            { GHC.IO.Buffer.Buffer dt14_sbbXe [Occ=Once*]
                                                                                                                                                   dt15_sbbXf [Occ=Once*]
                                                                                                                                                   ds15_sbbXg [Occ=Once*]
                                                                                                                                                   dt16_sbbXh [Occ=Once*]
                                                                                                                                                   _ [Occ=Dead]
                                                                                                                                                   dt18_sbbXj ->
                                                                                                                                  case
                                                                                                                                      +# [dt12_sbbWs
                                                                                                                                          1#]
                                                                                                                                  of
                                                                                                                                  ipv9_sbbXk [Dmd=<S,U>]
                                                                                                                                  { __DEFAULT ->
                                                                                                                                        case
                                                                                                                                            ==# [ipv9_sbbXk
                                                                                                                                                 dt18_sbbXj]
                                                                                                                                        of
                                                                                                                                        { __DEFAULT ->
                                                                                                                                              GHC.IO.Buffer.Buffer [dt14_sbbXe
                                                                                                                                                                    dt15_sbbXf
                                                                                                                                                                    ds15_sbbXg
                                                                                                                                                                    dt16_sbbXh
                                                                                                                                                                    ipv9_sbbXk
                                                                                                                                                                    dt18_sbbXj];
                                                                                                                                          1# ->
                                                                                                                                              GHC.IO.Buffer.Buffer [dt14_sbbXe
                                                                                                                                                                    dt15_sbbXf
                                                                                                                                                                    ds15_sbbXg
                                                                                                                                                                    dt16_sbbXh
                                                                                                                                                                    0#
                                                                                                                                                                    0#];
                                                                                                                                        };
                                                                                                                                  };
                                                                                                                            };
                                                                                                                  } in 
                                                                                                                    case
                                                                                                                        writeMutVar# [dt2_sbbVI
                                                                                                                                      sat_sbbXm
                                                                                                                                      GHC.Prim.void#]
                                                                                                                    of
                                                                                                                    s2#_sbbXn
                                                                                                                    { (##) ->
                                                                                                                          Unit# [GHC.IO.Handle.Text.hGetChar4];
                                                                                                                    };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                            };
                                                                  } in 
                                                                    case
                                                                        ==# [ipv4_sbbWc ww5_sbbW7]
                                                                    of
                                                                    { __DEFAULT ->
                                                                          let {
                                                                            sat_sbbXp [Occ=Once]
                                                                              :: GHC.IO.Buffer.Buffer
                                                                                   GHC.Types.Char
                                                                            [LclId] =
                                                                                CCCS GHC.IO.Buffer.Buffer! [ww_sbbW2
                                                                                                            ww1_sbbW3
                                                                                                            ww2_sbbW4
                                                                                                            ww3_sbbW5
                                                                                                            ipv4_sbbWc
                                                                                                            ww5_sbbW7];
                                                                          } in 
                                                                            $j_sbbWn
                                                                                ww_sbbW2
                                                                                ww1_sbbW3
                                                                                ww2_sbbW4
                                                                                ww3_sbbW5
                                                                                ipv4_sbbWc
                                                                                ww5_sbbW7
                                                                                sat_sbbXp;
                                                                      1# ->
                                                                          let {
                                                                            sat_sbbXq [Occ=Once]
                                                                              :: GHC.IO.Buffer.Buffer
                                                                                   GHC.Types.Char
                                                                            [LclId] =
                                                                                CCCS GHC.IO.Buffer.Buffer! [ww_sbbW2
                                                                                                            ww1_sbbW3
                                                                                                            ww2_sbbW4
                                                                                                            ww3_sbbW5
                                                                                                            0#
                                                                                                            0#];
                                                                          } in 
                                                                            $j_sbbWn
                                                                                ww_sbbW2
                                                                                ww1_sbbW3
                                                                                ww2_sbbW4
                                                                                ww3_sbbW5
                                                                                0#
                                                                                0#
                                                                                sat_sbbXq;
                                                                    };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                          } in 
                            case ==# [dt7_sbbVY dt8_sbbVZ] of {
                              __DEFAULT ->
                                  $w$j_sbbW0
                                      GHC.Prim.void#
                                      dt4_sbbVU
                                      dt5_sbbVV
                                      ds10_sbbVW
                                      dt6_sbbVX
                                      dt7_sbbVY
                                      dt8_sbbVZ;
                              1# ->
                                  case
                                      GHC.IO.Handle.Internals.hLookAhead_2
                                          wild_sbbVz wild1_sbbVT GHC.Prim.void#
                                  of
                                  { Unit# ipv3_sbbXu [Occ=Once!] ->
                                        case ipv3_sbbXu of {
                                          GHC.IO.Buffer.Buffer ww1_sbbXw [Occ=Once]
                                                               ww2_sbbXx [Occ=Once]
                                                               ww3_sbbXy [Occ=Once]
                                                               ww4_sbbXz [Occ=Once]
                                                               ww5_sbbXA [Occ=Once]
                                                               ww6_sbbXB [Occ=Once] ->
                                              $w$j_sbbW0
                                                  GHC.Prim.void#
                                                  ww1_sbbXw
                                                  ww2_sbbXx
                                                  ww3_sbbXy
                                                  ww4_sbbXz
                                                  ww5_sbbXA
                                                  ww6_sbbXB;
                                        };
                                  };
                            };
                    };
              };
        };

GHC.IO.Handle.Text.hGetChar1
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
[GblId, Arity=2, Str=<L,U>, Unf=OtherCon []] =
    [] \r [handle_sbbXC void_0E]
        GHC.IO.Handle.Internals.wantReadableHandle_1
            GHC.IO.Handle.Text.hGetChar6
            handle_sbbXC
            GHC.IO.Handle.Text.hGetChar2
            GHC.Prim.void#;

GHC.IO.Handle.Text.hGetChar
  :: GHC.IO.Handle.Types.Handle -> GHC.Types.IO GHC.Types.Char
[GblId, Arity=2, Str=<L,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.IO.Handle.Text.hGetChar1 eta_B2 GHC.Prim.void#;

GHC.IO.Handle.Text.hGetBuf3 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

$wunpack_nl_rb6WF
  :: GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> [GHC.Types.Char]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           ([GHC.Types.Char], GHC.Types.Int) #)
[GblId,
 Arity=6,
 Caf=NoCafRefs,
 Str=<L,U><L,U><S,U><S,U><L,U><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [ww_sbbXD
                    ww1_sbbXE
                    ww2_sbbXF
                    ww3_sbbXG
                    w_sbbXH
                    void_0E]
        case ==# [ww2_sbbXF ww3_sbbXG] of {
          __DEFAULT ->
              case -# [ww3_sbbXG 1#] of sat_sbbXK {
                __DEFAULT ->
                    case readWideCharOffAddr# [ww_sbbXD sat_sbbXK GHC.Prim.void#] of {
                      Unit# ipv1_sbbXN [Occ=Once!] ->
                          let {
                            $wunpackRB_sbbXO [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
                              :: [GHC.Types.Char]
                                 -> GHC.Prim.Int#
                                 -> GHC.Prim.State# GHC.Prim.RealWorld
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                            [LclId, Arity=3, Str=<L,U><S,U><S,U>, Unf=OtherCon []] =
                                sat-only [ww_sbbXD ww2_sbbXF $wunpackRB_sbbXO] \r [w2_sbbXP
                                                                                   ww4_sbbXQ
                                                                                   void_0E]
                                    case <# [ww4_sbbXQ ww2_sbbXF] of {
                                      __DEFAULT ->
                                          case
                                              readWideCharOffAddr# [ww_sbbXD
                                                                    ww4_sbbXQ
                                                                    GHC.Prim.void#]
                                          of
                                          { Unit# ipv3_sbbXV [Occ=Once!] ->
                                                case ipv3_sbbXV of wild_sbbXW {
                                                  __DEFAULT ->
                                                      case -# [ww4_sbbXQ 1#] of sat_sbbXZ {
                                                        __DEFAULT ->
                                                            let {
                                                              sat_sbbXX [Occ=Once]
                                                                :: GHC.IO.Buffer.CharBufElem
                                                              [LclId] =
                                                                  CCCS GHC.Types.C#! [wild_sbbXW]; } in
                                                            let {
                                                              sat_sbbXY [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId] =
                                                                  CCCS :! [sat_sbbXX w2_sbbXP];
                                                            } in 
                                                              $wunpackRB_sbbXO
                                                                  sat_sbbXY
                                                                  sat_sbbXZ
                                                                  GHC.Prim.void#;
                                                      };
                                                  '\n'# ->
                                                      case ># [ww4_sbbXQ ww2_sbbXF] of {
                                                        __DEFAULT ->
                                                            case -# [ww4_sbbXQ 1#] of sat_sbbY2 {
                                                              __DEFAULT ->
                                                                  let {
                                                                    sat_sbbY1 [Occ=Once]
                                                                      :: [GHC.Types.Char]
                                                                    [LclId] =
                                                                        CCCS :! [GHC.IO.Handle.Text.hGetChar4
                                                                                 w2_sbbXP];
                                                                  } in 
                                                                    $wunpackRB_sbbXO
                                                                        sat_sbbY1
                                                                        sat_sbbY2
                                                                        GHC.Prim.void#;
                                                            };
                                                        1# ->
                                                            case -# [ww4_sbbXQ 1#] of sat_sbbY3 {
                                                              __DEFAULT ->
                                                                  case
                                                                      readWideCharOffAddr# [ww_sbbXD
                                                                                            sat_sbbY3
                                                                                            GHC.Prim.void#]
                                                                  of
                                                                  { Unit# ipv5_sbbY6 [Occ=Once!] ->
                                                                        case ipv5_sbbY6 of {
                                                                          __DEFAULT ->
                                                                              case
                                                                                  -# [ww4_sbbXQ 1#]
                                                                              of
                                                                              sat_sbbY9
                                                                              { __DEFAULT ->
                                                                                    let {
                                                                                      sat_sbbY8 [Occ=Once]
                                                                                        :: [GHC.Types.Char]
                                                                                      [LclId] =
                                                                                          CCCS :! [GHC.IO.Handle.Text.hGetChar4
                                                                                                   w2_sbbXP];
                                                                                    } in 
                                                                                      $wunpackRB_sbbXO
                                                                                          sat_sbbY8
                                                                                          sat_sbbY9
                                                                                          GHC.Prim.void#;
                                                                              };
                                                                          '\r'# ->
                                                                              case
                                                                                  -# [ww4_sbbXQ 2#]
                                                                              of
                                                                              sat_sbbYb
                                                                              { __DEFAULT ->
                                                                                    let {
                                                                                      sat_sbbYa [Occ=Once]
                                                                                        :: [GHC.Types.Char]
                                                                                      [LclId] =
                                                                                          CCCS :! [GHC.IO.Handle.Text.hGetChar4
                                                                                                   w2_sbbXP];
                                                                                    } in 
                                                                                      $wunpackRB_sbbXO
                                                                                          sat_sbbYa
                                                                                          sat_sbbYb
                                                                                          GHC.Prim.void#;
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                      1# -> Unit# [w2_sbbXP];
                                    };
                          } in 
                            case ipv1_sbbXN of {
                              __DEFAULT ->
                                  case -# [ww3_sbbXG 1#] of sat_sbbYd {
                                    __DEFAULT ->
                                        case $wunpackRB_sbbXO w_sbbXH sat_sbbYd GHC.Prim.void# of {
                                          Unit# ipv3_sbbYg [Occ=Once] ->
                                              case touch# [ww1_sbbXE GHC.Prim.void#] of s'_sbbYh {
                                                (##) ->
                                                    let {
                                                      sat_sbbYi [Occ=Once] :: GHC.Types.Int
                                                      [LclId] =
                                                          CCCS GHC.Types.I#! [ww3_sbbXG]; } in
                                                    let {
                                                      sat_sbbYj [Occ=Once]
                                                        :: ([GHC.Types.Char], GHC.Types.Int)
                                                      [LclId] =
                                                          CCCS (,)! [ipv3_sbbYg sat_sbbYi];
                                                    } in  Unit# [sat_sbbYj];
                                              };
                                        };
                                  };
                              '\r'# ->
                                  case -# [ww3_sbbXG 2#] of sat_sbbYk {
                                    __DEFAULT ->
                                        case $wunpackRB_sbbXO w_sbbXH sat_sbbYk GHC.Prim.void# of {
                                          Unit# ipv3_sbbYn [Occ=Once] ->
                                              case touch# [ww1_sbbXE GHC.Prim.void#] of s'_sbbYo {
                                                (##) ->
                                                    case -# [ww3_sbbXG 1#] of sat_sbbYp {
                                                      __DEFAULT ->
                                                          let {
                                                            sat_sbbYq [Occ=Once] :: GHC.Types.Int
                                                            [LclId] =
                                                                CCCS GHC.Types.I#! [sat_sbbYp]; } in
                                                          let {
                                                            sat_sbbYr [Occ=Once]
                                                              :: ([GHC.Types.Char], GHC.Types.Int)
                                                            [LclId] =
                                                                CCCS (,)! [ipv3_sbbYn sat_sbbYq];
                                                          } in  Unit# [sat_sbbYr];
                                                    };
                                              };
                                        };
                                  };
                            };
                    };
              };
          1# ->
              let {
                sat_sbbYs [Occ=Once] :: ([GHC.Types.Char], GHC.Types.Int)
                [LclId] =
                    CCCS (,)! [w_sbbXH GHC.IO.Handle.Text.hGetBuf3];
              } in  Unit# [sat_sbbYs];
        };

GHC.IO.Handle.Text.hGetContents4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetContents"#;

GHC.IO.Handle.Text.hGetContents3 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.IO.Handle.Text.hGetContents4;

lvl3_rb6WG :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "\r"#;

lvl4_rb6WH :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl3_rb6WG;

$wlvl_rb6WI
  :: GHC.IO.Handle.Types.Handle
     -> GHC.IO.Exception.IOErrorType
     -> GHC.Base.String
     -> GHC.Base.Maybe Foreign.C.Types.CInt
     -> GHC.Base.Maybe GHC.IO.FilePath
     -> [GHC.Types.Char]
[GblId,
 Arity=5,
 Str=<B,U><B,U><B,U><B,U><B,1*U>x,
 Unf=OtherCon []] =
    sat-only [] \r [w_sbbYt ww_sbbYu ww1_sbbYv ww2_sbbYw ww3_sbbYx]
        let {
          sat_sbbYH [Occ=Once] :: GHC.Base.Maybe GHC.IO.FilePath
          [LclId] =
              [w_sbbYt ww3_sbbYx] \u []
                  case ww3_sbbYx of wild1_sbbYz {
                    GHC.Base.Nothing ->
                        case w_sbbYt of {
                          GHC.IO.Handle.Types.FileHandle path_sbbYB [Occ=Once]
                                                         _ [Occ=Dead] ->
                              GHC.Base.Just [path_sbbYB];
                          GHC.IO.Handle.Types.DuplexHandle path_sbbYD [Occ=Once]
                                                           _ [Occ=Dead]
                                                           _ [Occ=Dead] ->
                              GHC.Base.Just [path_sbbYD];
                        };
                    GHC.Base.Just _ [Occ=Dead] -> wild1_sbbYz;
                  }; } in
        let {
          sat_sbbYy [Occ=Once] :: GHC.Base.Maybe GHC.IO.Handle.Types.Handle
          [LclId] =
              CCCS GHC.Base.Just! [w_sbbYt]; } in
        let {
          sat_sbbYI [Occ=Once] :: GHC.IO.Exception.IOException
          [LclId] =
              CCCS GHC.IO.Exception.IOError! [sat_sbbYy
                                              ww_sbbYu
                                              GHC.IO.Handle.Text.hGetContents3
                                              ww1_sbbYv
                                              ww2_sbbYw
                                              sat_sbbYH];
        } in 
          GHC.Exception.throw
              GHC.IO.Exception.$fExceptionIOException sat_sbbYI;

lvl5_rb6WJ :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "delayed read on closed handle"#;

lvl6_rb6WK :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl5_rb6WJ;

lvl7_rb6WL
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.IO.Handle.Types.Handle__, [GHC.Types.Char]) #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    sat-only [] \r [handle_sbbYJ void_0E]
        let {
          sat_sbbYN [Occ=Once] :: GHC.Exception.SomeException
          [LclId] =
              [handle_sbbYJ] \u []
                  let {
                    sat_sbbYL [Occ=Once] :: GHC.Base.Maybe GHC.IO.Handle.Types.Handle
                    [LclId] =
                        CCCS GHC.Base.Just! [handle_sbbYJ]; } in
                  let {
                    sat_sbbYM [Occ=Once] :: GHC.IO.Exception.IOException
                    [LclId] =
                        CCCS GHC.IO.Exception.IOError! [sat_sbbYL
                                                        GHC.IO.Exception.IllegalOperation
                                                        GHC.IO.Handle.Text.hGetContents3
                                                        lvl6_rb6WK
                                                        GHC.Base.Nothing
                                                        GHC.Base.Nothing];
                  } in 
                    GHC.IO.Exception.$fExceptionIOException_$ctoException sat_sbbYM;
        } in  raiseIO# [sat_sbbYN GHC.Prim.void#];

lvl8_rb6WM :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "illegal handle type"#;

lvl9_rb6WN :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl8_rb6WM;

lvl10_rb6WO
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.IO.Handle.Types.Handle__, [GHC.Types.Char]) #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    sat-only [] \r [handle_sbbYO void_0E]
        let {
          sat_sbbYS [Occ=Once] :: GHC.Exception.SomeException
          [LclId] =
              [handle_sbbYO] \u []
                  let {
                    sat_sbbYQ [Occ=Once] :: GHC.Base.Maybe GHC.IO.Handle.Types.Handle
                    [LclId] =
                        CCCS GHC.Base.Just! [handle_sbbYO]; } in
                  let {
                    sat_sbbYR [Occ=Once] :: GHC.IO.Exception.IOException
                    [LclId] =
                        CCCS GHC.IO.Exception.IOError! [sat_sbbYQ
                                                        GHC.IO.Exception.IllegalOperation
                                                        GHC.IO.Handle.Text.hGetContents3
                                                        lvl9_rb6WN
                                                        GHC.Base.Nothing
                                                        GHC.Base.Nothing];
                  } in 
                    GHC.IO.Exception.$fExceptionIOException_$ctoException sat_sbbYR;
        } in  raiseIO# [sat_sbbYS GHC.Prim.void#];

GHC.IO.Handle.Text.hGetContents2 [Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [handle_sbbYT void_0E]
        let {
          sat_sbc1l [Occ=Once] :: GHC.Types.IO [GHC.Types.Char]
          [LclId] =
              [handle_sbbYT] \r [void_0E]
                  case noDuplicate# [GHC.Prim.void#] of s'_sbbYW {
                    (##) ->
                        let {
                          act_sbbYX [Occ=Once*, Dmd=<C(S),C(U)>]
                            :: GHC.IO.Handle.Types.Handle__
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     (GHC.IO.Handle.Types.Handle__, [GHC.Types.Char]) #)
                          [LclId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
                              [handle_sbbYT] \r [handle__sbbYY void_0E]
                                  case handle__sbbYY of wild_sbbZ0 {
                                    GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 ds2_sbbZ5 [Occ=Once!]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 dt2_sbbZ9
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 ds7_sbbZe
                                                                 _ [Occ=Dead]
                                                                 _ [Occ=Dead] ->
                                        case ds2_sbbZ5 of {
                                          __DEFAULT -> lvl10_rb6WO handle_sbbYT GHC.Prim.void#;
                                          GHC.IO.Handle.Types.ClosedHandle ->
                                              lvl7_rb6WL handle_sbbYT GHC.Prim.void#;
                                          GHC.IO.Handle.Types.SemiClosedHandle ->
                                              case readMutVar# [dt2_sbbZ9 GHC.Prim.void#] of {
                                                Unit# ipv1_sbbZk ->
                                                    let {
                                                      sat_sbc1e [Occ=Once]
                                                        :: GHC.Exception.SomeException
                                                           -> GHC.Prim.State# GHC.Prim.RealWorld
                                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                 (GHC.IO.Handle.Types.Handle__,
                                                                  [GHC.Types.Char]) #)
                                                      [LclId] =
                                                          [handle_sbbYT
                                                           wild_sbbZ0
                                                           ipv1_sbbZk] \r [e1_sbc0J void_0E]
                                                              case e1_sbc0J of wild2_sbc0L {
                                                                GHC.Exception.SomeException $dException1_sbc0M [Occ=Once]
                                                                                            e3_sbc0N [Occ=Once] ->
                                                                    case
                                                                        GHC.Exception.$p1Exception
                                                                            $dException1_sbc0M
                                                                    of
                                                                    sat_sbc0O
                                                                    { __DEFAULT ->
                                                                          case
                                                                              Data.Typeable.Internal.sameTypeRep
                                                                                  sat_sbc0O
                                                                                  GHC.IO.Exception.$fExceptionIOException4
                                                                          of
                                                                          { GHC.Types.False ->
                                                                                raiseIO# [wild2_sbc0L
                                                                                          GHC.Prim.void#];
                                                                            GHC.Types.True ->
                                                                                case
                                                                                    GHC.IO.Handle.Internals.hClose_help1
                                                                                        wild_sbbZ0
                                                                                        GHC.Prim.void#
                                                                                of
                                                                                { Unit# ipv3_sbc0S [Occ=Once!] ->
                                                                                      case
                                                                                          ipv3_sbc0S
                                                                                      of
                                                                                      { (,) handle_'_sbc0U [Occ=Once]
                                                                                            _ [Occ=Dead] ->
                                                                                            let {
                                                                                              sat_sbc1c [Occ=Once]
                                                                                                :: [GHC.Types.Char]
                                                                                              [LclId] =
                                                                                                  [handle_sbbYT
                                                                                                   ipv1_sbbZk
                                                                                                   e3_sbc0N] \u []
                                                                                                      case
                                                                                                          e3_sbc0N
                                                                                                      of
                                                                                                      { GHC.IO.Exception.IOError _ [Occ=Dead]
                                                                                                                                 ds14_sbc0Y [Occ=Once!]
                                                                                                                                 _ [Occ=Dead]
                                                                                                                                 ds16_sbc10 [Occ=Once]
                                                                                                                                 ds17_sbc11 [Occ=Once]
                                                                                                                                 ds18_sbc12 [Occ=Once] ->
                                                                                                            case
                                                                                                                ds14_sbc0Y
                                                                                                            of
                                                                                                            wild6_sbc13
                                                                                                            { __DEFAULT ->
                                                                                                                  $wlvl_rb6WI
                                                                                                                      handle_sbbYT
                                                                                                                      wild6_sbc13
                                                                                                                      ds16_sbc10
                                                                                                                      ds17_sbc11
                                                                                                                      ds18_sbc12;
                                                                                                              GHC.IO.Exception.EOF ->
                                                                                                                  case
                                                                                                                      ipv1_sbbZk
                                                                                                                  of
                                                                                                                  { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                                                                         _ [Occ=Dead]
                                                                                                                                         _ [Occ=Dead]
                                                                                                                                         _ [Occ=Dead]
                                                                                                                                         dt7_sbc19 [Occ=Once]
                                                                                                                                         dt8_sbc1a [Occ=Once] ->
                                                                                                                        case
                                                                                                                            ==# [dt7_sbc19
                                                                                                                                 dt8_sbc1a]
                                                                                                                        of
                                                                                                                        { __DEFAULT ->
                                                                                                                              lvl4_rb6WH;
                                                                                                                          1# ->
                                                                                                                              [] [];
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      }; } in
                                                                                            let {
                                                                                              sat_sbc1d [Occ=Once]
                                                                                                :: (GHC.IO.Handle.Types.Handle__,
                                                                                                    [GHC.Types.Char])
                                                                                              [LclId] =
                                                                                                  CCCS (,)! [handle_'_sbc0U
                                                                                                             sat_sbc1c];
                                                                                            } in 
                                                                                              Unit# [sat_sbc1d];
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              }; } in
                                                    let {
                                                      sat_sbc0I [Occ=Once]
                                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                 (GHC.IO.Handle.Types.Handle__,
                                                                  [GHC.Types.Char]) #)
                                                      [LclId] =
                                                          [handle_sbbYT
                                                           wild_sbbZ0
                                                           dt2_sbbZ9
                                                           ds7_sbbZe
                                                           ipv1_sbbZk] \r [void_0E]
                                                              case ipv1_sbbZk of wild2_sbbZm {
                                                                GHC.IO.Buffer.Buffer dt4_sbbZn
                                                                                     dt5_sbbZo
                                                                                     ds_sbbZp [Occ=Once*]
                                                                                     dt6_sbbZq [Occ=Once*]
                                                                                     dt7_sbbZr
                                                                                     dt8_sbbZs ->
                                                                    let-no-escape {
                                                                      $w$j_sbbZt [InlPrag=NOUSERINLINE[0],
                                                                                  Occ=Once*!T[7],
                                                                                  Dmd=<L,1*C1(C1(C1(C1(C1(C1(C1(U)))))))>]
                                                                        :: GHC.Prim.State#
                                                                             GHC.Prim.RealWorld
                                                                           -> GHC.Prim.Addr#
                                                                           -> GHC.ForeignPtr.ForeignPtrContents
                                                                           -> GHC.IO.Buffer.BufferState
                                                                           -> GHC.Prim.Int#
                                                                           -> GHC.Prim.Int#
                                                                           -> GHC.Prim.Int#
                                                                           -> (# GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld,
                                                                                 (GHC.IO.Handle.Types.Handle__,
                                                                                  [GHC.Types.Char]) #)
                                                                      [LclId[JoinId(7)],
                                                                       Arity=7,
                                                                       Str=<S,U><L,U><L,U><L,U><L,U><L,U><L,U>,
                                                                       Unf=OtherCon []] =
                                                                          sat-only [handle_sbbYT
                                                                                    wild_sbbZ0
                                                                                    dt2_sbbZ9
                                                                                    ds7_sbbZe] \r [void_0E
                                                                                                   ww_sbbZv
                                                                                                   ww1_sbbZw
                                                                                                   ww2_sbbZx
                                                                                                   ww3_sbbZy
                                                                                                   ww4_sbbZz
                                                                                                   ww5_sbbZA]
                                                                              case
                                                                                  GHC.IO.Handle.Text.hGetContents2
                                                                                      handle_sbbYT
                                                                                      GHC.Prim.void#
                                                                              of
                                                                              { Unit# ipv3_sbbZD [Occ=Once*] ->
                                                                                    case
                                                                                        ds7_sbbZe
                                                                                    of
                                                                                    { GHC.IO.Handle.Types.LF ->
                                                                                          case
                                                                                              ==# [ww4_sbbZz
                                                                                                   ww5_sbbZA]
                                                                                          of
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    -# [ww5_sbbZA
                                                                                                        1#]
                                                                                                of
                                                                                                sat_sbbZY
                                                                                                { __DEFAULT ->
                                                                                                      let-no-escape {
                                                                                                        $j_sbbZG [Occ=OnceL!T[2],
                                                                                                                  Dmd=<C(C(S)),C(C1(U))>]
                                                                                                          :: GHC.Prim.State#
                                                                                                               GHC.Prim.RealWorld
                                                                                                             -> [GHC.IO.Buffer.CharBufElem]
                                                                                                             -> (# GHC.Prim.State#
                                                                                                                     GHC.Prim.RealWorld,
                                                                                                                   (GHC.IO.Handle.Types.Handle__,
                                                                                                                    [GHC.Types.Char]) #)
                                                                                                        [LclId[JoinId(2)],
                                                                                                         Arity=2,
                                                                                                         Str=<S,U><L,U>,
                                                                                                         Unf=OtherCon []] =
                                                                                                            sat-only [wild_sbbZ0
                                                                                                                      dt2_sbbZ9
                                                                                                                      ww_sbbZv
                                                                                                                      ww1_sbbZw
                                                                                                                      ww2_sbbZx
                                                                                                                      ww3_sbbZy] \r [void_0E
                                                                                                                                     ipv5_sbbZI]
                                                                                                                case
                                                                                                                    touch# [ww1_sbbZw
                                                                                                                            GHC.Prim.void#]
                                                                                                                of
                                                                                                                s'1_sbbZJ
                                                                                                                { (##) ->
                                                                                                                      let {
                                                                                                                        sat_sbbZK [Occ=Once]
                                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                                                        [LclId] =
                                                                                                                            CCCS GHC.IO.Buffer.Buffer! [ww_sbbZv
                                                                                                                                                        ww1_sbbZw
                                                                                                                                                        ww2_sbbZx
                                                                                                                                                        ww3_sbbZy
                                                                                                                                                        0#
                                                                                                                                                        0#];
                                                                                                                      } in 
                                                                                                                        case
                                                                                                                            writeMutVar# [dt2_sbbZ9
                                                                                                                                          sat_sbbZK
                                                                                                                                          GHC.Prim.void#]
                                                                                                                        of
                                                                                                                        s2#_sbbZL
                                                                                                                        { (##) ->
                                                                                                                              let {
                                                                                                                                sat_sbbZM [Occ=Once]
                                                                                                                                  :: (GHC.IO.Handle.Types.Handle__,
                                                                                                                                      [GHC.Types.Char])
                                                                                                                                [LclId] =
                                                                                                                                    CCCS (,)! [wild_sbbZ0
                                                                                                                                               ipv5_sbbZI];
                                                                                                                              } in 
                                                                                                                                Unit# [sat_sbbZM];
                                                                                                                        };
                                                                                                                };
                                                                                                      } in 
                                                                                                        let-no-escape {
                                                                                                          $wunpackRB_sbbZN [InlPrag=NOUSERINLINE[0],
                                                                                                                            Occ=LoopBreakerT[3]]
                                                                                                            :: [GHC.IO.Buffer.CharBufElem]
                                                                                                               -> GHC.Prim.Int#
                                                                                                               -> GHC.Prim.State#
                                                                                                                    GHC.Prim.RealWorld
                                                                                                               -> (# GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld,
                                                                                                                     (GHC.IO.Handle.Types.Handle__,
                                                                                                                      [GHC.Types.Char]) #)
                                                                                                          [LclId[JoinId(3)],
                                                                                                           Arity=3,
                                                                                                           Str=<L,U><S,U><S,U>,
                                                                                                           Unf=OtherCon []] =
                                                                                                              sat-only [ww_sbbZv
                                                                                                                        ww4_sbbZz
                                                                                                                        $j_sbbZG
                                                                                                                        $wunpackRB_sbbZN] \r [w1_sbbZO
                                                                                                                                              ww6_sbbZP
                                                                                                                                              void_0E]
                                                                                                                  case
                                                                                                                      <# [ww6_sbbZP
                                                                                                                          ww4_sbbZz]
                                                                                                                  of
                                                                                                                  { __DEFAULT ->
                                                                                                                        case
                                                                                                                            readWideCharOffAddr# [ww_sbbZv
                                                                                                                                                  ww6_sbbZP
                                                                                                                                                  GHC.Prim.void#]
                                                                                                                        of
                                                                                                                        { Unit# ipv5_sbbZU [Occ=Once] ->
                                                                                                                              case
                                                                                                                                  -# [ww6_sbbZP
                                                                                                                                      1#]
                                                                                                                              of
                                                                                                                              sat_sbbZX
                                                                                                                              { __DEFAULT ->
                                                                                                                                    let {
                                                                                                                                      sat_sbbZV [Occ=Once]
                                                                                                                                        :: GHC.IO.Buffer.CharBufElem
                                                                                                                                      [LclId] =
                                                                                                                                          CCCS GHC.Types.C#! [ipv5_sbbZU]; } in
                                                                                                                                    let {
                                                                                                                                      sat_sbbZW [Occ=Once]
                                                                                                                                        :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                      [LclId] =
                                                                                                                                          CCCS :! [sat_sbbZV
                                                                                                                                                   w1_sbbZO];
                                                                                                                                    } in 
                                                                                                                                      $wunpackRB_sbbZN
                                                                                                                                          sat_sbbZW
                                                                                                                                          sat_sbbZX
                                                                                                                                          GHC.Prim.void#;
                                                                                                                              };
                                                                                                                        };
                                                                                                                    1# ->
                                                                                                                        $j_sbbZG
                                                                                                                            GHC.Prim.void#
                                                                                                                            w1_sbbZO;
                                                                                                                  };
                                                                                                        } in 
                                                                                                          $wunpackRB_sbbZN
                                                                                                              ipv3_sbbZD
                                                                                                              sat_sbbZY
                                                                                                              GHC.Prim.void#;
                                                                                                };
                                                                                            1# ->
                                                                                                let {
                                                                                                  sat_sbbZZ [Occ=Once]
                                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                                         GHC.IO.Buffer.CharBufElem
                                                                                                  [LclId] =
                                                                                                      CCCS GHC.IO.Buffer.Buffer! [ww_sbbZv
                                                                                                                                  ww1_sbbZw
                                                                                                                                  ww2_sbbZx
                                                                                                                                  ww3_sbbZy
                                                                                                                                  0#
                                                                                                                                  0#];
                                                                                                } in 
                                                                                                  case
                                                                                                      writeMutVar# [dt2_sbbZ9
                                                                                                                    sat_sbbZZ
                                                                                                                    GHC.Prim.void#]
                                                                                                  of
                                                                                                  s2#_sbc00
                                                                                                  { (##) ->
                                                                                                        let {
                                                                                                          sat_sbc01 [Occ=Once]
                                                                                                            :: (GHC.IO.Handle.Types.Handle__,
                                                                                                                [GHC.Types.Char])
                                                                                                          [LclId] =
                                                                                                              CCCS (,)! [wild_sbbZ0
                                                                                                                         ipv3_sbbZD];
                                                                                                        } in 
                                                                                                          Unit# [sat_sbc01];
                                                                                                  };
                                                                                          };
                                                                                      GHC.IO.Handle.Types.CRLF ->
                                                                                          case
                                                                                              $wunpack_nl_rb6WF
                                                                                                  ww_sbbZv
                                                                                                  ww1_sbbZw
                                                                                                  ww4_sbbZz
                                                                                                  ww5_sbbZA
                                                                                                  ipv3_sbbZD
                                                                                                  GHC.Prim.void#
                                                                                          of
                                                                                          { Unit# ipv5_sbc04 [Occ=Once!] ->
                                                                                                case
                                                                                                    ipv5_sbc04
                                                                                                of
                                                                                                { (,) s2_sbc06 [Occ=Once]
                                                                                                      r_sbc07 [Occ=Once!] ->
                                                                                                      let {
                                                                                                        sat_sbc0b [Occ=Once]
                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                                        [LclId] =
                                                                                                            [ww_sbbZv
                                                                                                             ww1_sbbZw
                                                                                                             ww2_sbbZx
                                                                                                             ww3_sbbZy
                                                                                                             ww5_sbbZA
                                                                                                             r_sbc07] \u []
                                                                                                                case
                                                                                                                    r_sbc07
                                                                                                                of
                                                                                                                { GHC.Types.I# x_sbc09 ->
                                                                                                                      case
                                                                                                                          ==# [x_sbc09
                                                                                                                               ww5_sbbZA]
                                                                                                                      of
                                                                                                                      { __DEFAULT ->
                                                                                                                            GHC.IO.Buffer.Buffer [ww_sbbZv
                                                                                                                                                  ww1_sbbZw
                                                                                                                                                  ww2_sbbZx
                                                                                                                                                  ww3_sbbZy
                                                                                                                                                  x_sbc09
                                                                                                                                                  ww5_sbbZA];
                                                                                                                        1# ->
                                                                                                                            GHC.IO.Buffer.Buffer [ww_sbbZv
                                                                                                                                                  ww1_sbbZw
                                                                                                                                                  ww2_sbbZx
                                                                                                                                                  ww3_sbbZy
                                                                                                                                                  0#
                                                                                                                                                  0#];
                                                                                                                      };
                                                                                                                };
                                                                                                      } in 
                                                                                                        case
                                                                                                            writeMutVar# [dt2_sbbZ9
                                                                                                                          sat_sbc0b
                                                                                                                          GHC.Prim.void#]
                                                                                                        of
                                                                                                        s2#_sbc0c
                                                                                                        { (##) ->
                                                                                                              let {
                                                                                                                sat_sbc0d [Occ=Once]
                                                                                                                  :: (GHC.IO.Handle.Types.Handle__,
                                                                                                                      [GHC.Types.Char])
                                                                                                                [LclId] =
                                                                                                                    CCCS (,)! [wild_sbbZ0
                                                                                                                               s2_sbc06];
                                                                                                              } in 
                                                                                                                Unit# [sat_sbc0d];
                                                                                                        };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                    } in 
                                                                      case
                                                                          -# [dt8_sbbZs dt7_sbbZr]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            $w$j_sbbZt
                                                                                GHC.Prim.void#
                                                                                dt4_sbbZn
                                                                                dt5_sbbZo
                                                                                ds_sbbZp
                                                                                dt6_sbbZq
                                                                                dt7_sbbZr
                                                                                dt8_sbbZs;
                                                                        0# ->
                                                                            case
                                                                                GHC.IO.Handle.Internals.hLookAhead_2
                                                                                    wild_sbbZ0
                                                                                    wild2_sbbZm
                                                                                    GHC.Prim.void#
                                                                            of
                                                                            { Unit# ipv3_sbc0h [Occ=Once!] ->
                                                                                  case
                                                                                      ipv3_sbc0h
                                                                                  of
                                                                                  { GHC.IO.Buffer.Buffer ww1_sbc0j [Occ=Once]
                                                                                                         ww2_sbc0k [Occ=Once]
                                                                                                         ww3_sbc0l [Occ=Once]
                                                                                                         ww4_sbc0m [Occ=Once]
                                                                                                         ww5_sbc0n [Occ=Once]
                                                                                                         ww6_sbc0o [Occ=Once] ->
                                                                                        $w$j_sbbZt
                                                                                            GHC.Prim.void#
                                                                                            ww1_sbc0j
                                                                                            ww2_sbc0k
                                                                                            ww3_sbc0l
                                                                                            ww4_sbc0m
                                                                                            ww5_sbc0n
                                                                                            ww6_sbc0o;
                                                                                  };
                                                                            };
                                                                        1# ->
                                                                            case ds7_sbbZe of {
                                                                              GHC.IO.Handle.Types.LF ->
                                                                                  $w$j_sbbZt
                                                                                      GHC.Prim.void#
                                                                                      dt4_sbbZn
                                                                                      dt5_sbbZo
                                                                                      ds_sbbZp
                                                                                      dt6_sbbZq
                                                                                      dt7_sbbZr
                                                                                      dt8_sbbZs;
                                                                              GHC.IO.Handle.Types.CRLF ->
                                                                                  case
                                                                                      readWideCharOffAddr# [dt4_sbbZn
                                                                                                            dt7_sbbZr
                                                                                                            GHC.Prim.void#]
                                                                                  of
                                                                                  { Unit# ipv3_sbc0s [Occ=Once!] ->
                                                                                        case
                                                                                            touch# [dt5_sbbZo
                                                                                                    GHC.Prim.void#]
                                                                                        of
                                                                                        s'1_sbc0t
                                                                                        { (##) ->
                                                                                              case
                                                                                                  ipv3_sbc0s
                                                                                              of
                                                                                              { __DEFAULT ->
                                                                                                    $w$j_sbbZt
                                                                                                        GHC.Prim.void#
                                                                                                        dt4_sbbZn
                                                                                                        dt5_sbbZo
                                                                                                        ds_sbbZp
                                                                                                        dt6_sbbZq
                                                                                                        dt7_sbbZr
                                                                                                        dt8_sbbZs;
                                                                                                '\r'# ->
                                                                                                    case
                                                                                                        writeWideCharOffAddr# [dt4_sbbZn
                                                                                                                               0#
                                                                                                                               '\r'#
                                                                                                                               GHC.Prim.void#]
                                                                                                    of
                                                                                                    s2_sbc0v
                                                                                                    { (##) ->
                                                                                                          case
                                                                                                              touch# [dt5_sbbZo
                                                                                                                      GHC.Prim.void#]
                                                                                                          of
                                                                                                          s'2_sbc0w
                                                                                                          { (##) ->
                                                                                                                let {
                                                                                                                  sat_sbc0x [Occ=Once]
                                                                                                                    :: GHC.IO.Buffer.CharBuffer
                                                                                                                  [LclId] =
                                                                                                                      CCCS GHC.IO.Buffer.Buffer! [dt4_sbbZn
                                                                                                                                                  dt5_sbbZo
                                                                                                                                                  ds_sbbZp
                                                                                                                                                  dt6_sbbZq
                                                                                                                                                  0#
                                                                                                                                                  1#];
                                                                                                                } in 
                                                                                                                  case
                                                                                                                      GHC.IO.Handle.Internals.hLookAhead_2
                                                                                                                          wild_sbbZ0
                                                                                                                          sat_sbc0x
                                                                                                                          GHC.Prim.void#
                                                                                                                  of
                                                                                                                  { Unit# ipv5_sbc0A [Occ=Once!] ->
                                                                                                                        case
                                                                                                                            ipv5_sbc0A
                                                                                                                        of
                                                                                                                        { GHC.IO.Buffer.Buffer ww1_sbc0C [Occ=Once]
                                                                                                                                               ww2_sbc0D [Occ=Once]
                                                                                                                                               ww3_sbc0E [Occ=Once]
                                                                                                                                               ww4_sbc0F [Occ=Once]
                                                                                                                                               ww5_sbc0G [Occ=Once]
                                                                                                                                               ww6_sbc0H [Occ=Once] ->
                                                                                                                              $w$j_sbbZt
                                                                                                                                  GHC.Prim.void#
                                                                                                                                  ww1_sbc0C
                                                                                                                                  ww2_sbc0D
                                                                                                                                  ww3_sbc0E
                                                                                                                                  ww4_sbc0F
                                                                                                                                  ww5_sbc0G
                                                                                                                                  ww6_sbc0H;
                                                                                                                        };
                                                                                                                  };
                                                                                                          };
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                      };
                                                              };
                                                    } in 
                                                      catch# [sat_sbc0I sat_sbc1e GHC.Prim.void#];
                                              };
                                        };
                                  };
                        } in 
                          case handle_sbbYT of wild_sbc1f {
                            GHC.IO.Handle.Types.FileHandle _ [Occ=Dead] dt_sbc1h [Occ=Once] ->
                                GHC.IO.Handle.Internals.$wwithHandle'
                                    GHC.IO.Handle.Text.hGetContents3
                                    wild_sbc1f
                                    dt_sbc1h
                                    act_sbbYX
                                    GHC.Prim.void#;
                            GHC.IO.Handle.Types.DuplexHandle _ [Occ=Dead]
                                                             dt_sbc1j [Occ=Once]
                                                             _ [Occ=Dead] ->
                                GHC.IO.Handle.Internals.$wwithHandle'
                                    GHC.IO.Handle.Text.hGetContents3
                                    wild_sbc1f
                                    dt_sbc1j
                                    act_sbbYX
                                    GHC.Prim.void#;
                          };
                  };
        } in 
          GHC.IO.Unsafe.unsafeDupableInterleaveIO sat_sbc1l GHC.Prim.void#;

GHC.IO.Handle.Text.hGetContents1
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [handle_sbc1m void_0E]
        let {
          sat_sbc1M [Occ=Once]
            :: GHC.IO.Handle.Types.Handle__
               -> GHC.Types.IO (GHC.IO.Handle.Types.Handle__, GHC.Base.String)
          [LclId] =
              [handle_sbc1m] \r [handle__sbc1o void_0E]
                  case
                      GHC.IO.Handle.Text.hGetContents2 handle_sbc1m GHC.Prim.void#
                  of
                  { Unit# ipv1_sbc1s [Occ=Once] ->
                        let {
                          sat_sbc1K [Occ=Once] :: GHC.IO.Handle.Types.Handle__
                          [LclId] =
                              [handle__sbc1o] \u []
                                  case handle__sbc1o of {
                                    GHC.IO.Handle.Types.Handle__ ds_sbc1u [Occ=Once]
                                                                 ds2_sbc1v [Occ=Once]
                                                                 ds3_sbc1w [Occ=Once]
                                                                 ds4_sbc1x [Occ=Once]
                                                                 _ [Occ=Dead]
                                                                 dt_sbc1z [Occ=Once]
                                                                 ds6_sbc1A [Occ=Once]
                                                                 dt1_sbc1B [Occ=Once]
                                                                 dt2_sbc1C [Occ=Once]
                                                                 dt3_sbc1D [Occ=Once]
                                                                 ds7_sbc1E [Occ=Once]
                                                                 ds8_sbc1F [Occ=Once]
                                                                 ds9_sbc1G [Occ=Once]
                                                                 ds10_sbc1H [Occ=Once]
                                                                 ds11_sbc1I [Occ=Once]
                                                                 ds12_sbc1J [Occ=Once] ->
                                        GHC.IO.Handle.Types.Handle__ [ds_sbc1u
                                                                      ds2_sbc1v
                                                                      ds3_sbc1w
                                                                      ds4_sbc1x
                                                                      GHC.IO.Handle.Types.SemiClosedHandle
                                                                      dt_sbc1z
                                                                      ds6_sbc1A
                                                                      dt1_sbc1B
                                                                      dt2_sbc1C
                                                                      dt3_sbc1D
                                                                      ds7_sbc1E
                                                                      ds8_sbc1F
                                                                      ds9_sbc1G
                                                                      ds10_sbc1H
                                                                      ds11_sbc1I
                                                                      ds12_sbc1J];
                                  }; } in
                        let {
                          sat_sbc1L [Occ=Once]
                            :: (GHC.IO.Handle.Types.Handle__, GHC.Base.String)
                          [LclId] =
                              CCCS (,)! [sat_sbc1K ipv1_sbc1s];
                        } in  Unit# [sat_sbc1L];
                  };
        } in 
          GHC.IO.Handle.Internals.wantReadableHandle1
              GHC.IO.Handle.Text.hGetContents3
              handle_sbc1m
              sat_sbc1M
              GHC.Prim.void#;

GHC.IO.Handle.Text.hGetContents
  :: GHC.IO.Handle.Types.Handle -> GHC.Types.IO GHC.Base.String
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.IO.Handle.Text.hGetContents1 eta_B2 GHC.Prim.void#;

go_rb6WP :: [[GHC.Types.Char]] -> [GHC.Types.Char]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    sat-only [] \r [ds_sbc1N]
        case ds_sbc1N of {
          [] -> [] [];
          : y_sbc1P [Occ=Once] ys_sbc1Q [Occ=Once] ->
              let {
                sat_sbc1R [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                [LclId] =
                    [ys_sbc1Q] \s [] go_rb6WP ys_sbc1Q;
              } in  GHC.Base.++ y_sbc1P sat_sbc1R;
        };

go1_rb6WQ :: [[GHC.Types.Char]] -> [GHC.Types.Char]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    sat-only [] \r [ds_sbc1S]
        case ds_sbc1S of {
          [] -> [] [];
          : y_sbc1U [Occ=Once] ys_sbc1V [Occ=Once] ->
              let {
                sat_sbc1W [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                [LclId] =
                    [ys_sbc1V] \s [] go1_rb6WQ ys_sbc1V;
              } in  GHC.Base.++ y_sbc1U sat_sbc1W;
        };

GHC.IO.Handle.Text.$whGetLineBufferedLoop [InlPrag=NOUSERINLINE[0],
                                           Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.IO.Buffer.BufferState
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> [GHC.Base.String]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=9,
 Str=<S,1*U><L,U><L,U><L,U><L,U><S,U><S,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbc1X
           ww_sbc1Y
           ww1_sbc1Z
           ww2_sbc20
           ww3_sbc21
           ww4_sbc22
           ww5_sbc23
           w1_sbc24
           void_0E]
        case w_sbc1X of wild_sbc26 {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt2_sbc2f [Occ=Once*]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       ds6_sbc2k
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              let {
                sat_sbc4v [Occ=Once] :: GHC.IO.Buffer.RawCharBuffer
                [LclId] =
                    CCCS GHC.ForeignPtr.ForeignPtr! [ww_sbc1Y ww1_sbc1Z];
              } in 
                let-no-escape {
                  $w$j_sbc2n [InlPrag=NOUSERINLINE[0],
                              Dmd=<C(C(C(S))),C(C1(C1(U(U,U))))>]
                    :: GHC.Prim.State# GHC.Prim.RealWorld
                       -> GHC.Types.Bool
                       -> GHC.Prim.Int#
                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                  [LclId[JoinId(3)], Arity=3, Str=<S,U><L,U><S,U>, Unf=OtherCon []] =
                      sat-only [ww_sbc1Y
                                ww1_sbc1Z
                                ww2_sbc20
                                ww3_sbc21
                                ww4_sbc22
                                ww5_sbc23
                                w1_sbc24
                                wild_sbc26
                                dt2_sbc2f
                                ds6_sbc2k] \r [void_0E ww6_sbc2p ww7_sbc2q]
                          let-no-escape {
                            $w$j1_sbc2r [InlPrag=NOUSERINLINE[0],
                                         Occ=Once*!T[3],
                                         Dmd=<L,C(C1(C1(U(U,U))))>]
                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                 -> [GHC.Types.Char]
                                 -> GHC.Types.Int
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                            [LclId[JoinId(3)],
                             Arity=3,
                             Str=<S,U><L,U><L,1*U(U)>,
                             Unf=OtherCon []] =
                                sat-only [ww_sbc1Y
                                          ww1_sbc1Z
                                          ww2_sbc20
                                          ww3_sbc21
                                          ww5_sbc23
                                          w1_sbc24
                                          wild_sbc26
                                          dt2_sbc2f
                                          ds6_sbc2k
                                          ww6_sbc2p
                                          ww7_sbc2q] \r [void_0E ww8_sbc2t ww9_sbc2u]
                                    case ww6_sbc2p of {
                                      GHC.Types.False ->
                                          let {
                                            buf1_sbc2w [Dmd=<L,U(U,U,U,U,U,U)>]
                                              :: GHC.IO.Buffer.Buffer GHC.Types.Char
                                            [LclId] =
                                                [ww_sbc1Y
                                                 ww1_sbc1Z
                                                 ww2_sbc20
                                                 ww3_sbc21
                                                 ww5_sbc23
                                                 ww9_sbc2u] \u []
                                                    case ww9_sbc2u of {
                                                      GHC.Types.I# x_sbc2y ->
                                                          case ==# [x_sbc2y ww5_sbc23] of {
                                                            __DEFAULT ->
                                                                GHC.IO.Buffer.Buffer [ww_sbc1Y
                                                                                      ww1_sbc1Z
                                                                                      ww2_sbc20
                                                                                      ww3_sbc21
                                                                                      x_sbc2y
                                                                                      ww5_sbc23];
                                                            1# ->
                                                                GHC.IO.Buffer.Buffer [ww_sbc1Y
                                                                                      ww1_sbc1Z
                                                                                      ww2_sbc20
                                                                                      ww3_sbc21
                                                                                      0#
                                                                                      0#];
                                                          };
                                                    }; } in
                                          let {
                                            sat_sbc33 [Occ=Once]
                                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Base.Maybe GHC.IO.Buffer.CharBuffer #)
                                            [LclId] =
                                                [wild_sbc26 ds6_sbc2k buf1_sbc2w] \r [void_0E]
                                                    case buf1_sbc2w of wild2_sbc2B {
                                                      GHC.IO.Buffer.Buffer dt4_sbc2C
                                                                           dt5_sbc2D
                                                                           ds9_sbc2E [Occ=Once]
                                                                           dt6_sbc2F [Occ=Once]
                                                                           dt7_sbc2G
                                                                           dt8_sbc2H [Occ=Once] ->
                                                          case -# [dt8_sbc2H dt7_sbc2G] of {
                                                            __DEFAULT ->
                                                                let {
                                                                  sat_sbc2J [Occ=Once]
                                                                    :: GHC.Base.Maybe
                                                                         GHC.IO.Buffer.CharBuffer
                                                                  [LclId] =
                                                                      CCCS GHC.Base.Just! [wild2_sbc2B];
                                                                } in  Unit# [sat_sbc2J];
                                                            0# ->
                                                                case
                                                                    GHC.IO.Handle.Internals.hLookAhead_2
                                                                        wild_sbc26
                                                                        wild2_sbc2B
                                                                        GHC.Prim.void#
                                                                of
                                                                { Unit# ipv1_sbc2M [Occ=Once] ->
                                                                      let {
                                                                        sat_sbc2N [Occ=Once]
                                                                          :: GHC.Base.Maybe
                                                                               GHC.IO.Buffer.CharBuffer
                                                                        [LclId] =
                                                                            CCCS GHC.Base.Just! [ipv1_sbc2M];
                                                                      } in  Unit# [sat_sbc2N];
                                                                };
                                                            1# ->
                                                                case ds6_sbc2k of {
                                                                  GHC.IO.Handle.Types.LF ->
                                                                      let {
                                                                        sat_sbc2P [Occ=Once]
                                                                          :: GHC.Base.Maybe
                                                                               GHC.IO.Buffer.CharBuffer
                                                                        [LclId] =
                                                                            CCCS GHC.Base.Just! [wild2_sbc2B];
                                                                      } in  Unit# [sat_sbc2P];
                                                                  GHC.IO.Handle.Types.CRLF ->
                                                                      case
                                                                          readWideCharOffAddr# [dt4_sbc2C
                                                                                                dt7_sbc2G
                                                                                                GHC.Prim.void#]
                                                                      of
                                                                      { Unit# ipv1_sbc2S [Occ=Once!] ->
                                                                            case
                                                                                touch# [dt5_sbc2D
                                                                                        GHC.Prim.void#]
                                                                            of
                                                                            s'_sbc2T
                                                                            { (##) ->
                                                                                  case
                                                                                      ipv1_sbc2S
                                                                                  of
                                                                                  { __DEFAULT ->
                                                                                        let {
                                                                                          sat_sbc2V [Occ=Once]
                                                                                            :: GHC.Base.Maybe
                                                                                                 GHC.IO.Buffer.CharBuffer
                                                                                          [LclId] =
                                                                                              CCCS GHC.Base.Just! [wild2_sbc2B];
                                                                                        } in 
                                                                                          Unit# [sat_sbc2V];
                                                                                    '\r'# ->
                                                                                        case
                                                                                            writeWideCharOffAddr# [dt4_sbc2C
                                                                                                                   0#
                                                                                                                   '\r'#
                                                                                                                   GHC.Prim.void#]
                                                                                        of
                                                                                        s2_sbc2W
                                                                                        { (##) ->
                                                                                              case
                                                                                                  touch# [dt5_sbc2D
                                                                                                          GHC.Prim.void#]
                                                                                              of
                                                                                              s'1_sbc2X
                                                                                              { (##) ->
                                                                                                    let {
                                                                                                      sat_sbc2Y [Occ=Once]
                                                                                                        :: GHC.IO.Buffer.CharBuffer
                                                                                                      [LclId] =
                                                                                                          CCCS GHC.IO.Buffer.Buffer! [dt4_sbc2C
                                                                                                                                      dt5_sbc2D
                                                                                                                                      ds9_sbc2E
                                                                                                                                      dt6_sbc2F
                                                                                                                                      0#
                                                                                                                                      1#];
                                                                                                    } in 
                                                                                                      case
                                                                                                          GHC.IO.Handle.Internals.hLookAhead_2
                                                                                                              wild_sbc26
                                                                                                              sat_sbc2Y
                                                                                                              GHC.Prim.void#
                                                                                                      of
                                                                                                      { Unit# ipv3_sbc31 [Occ=Once] ->
                                                                                                            let {
                                                                                                              sat_sbc32 [Occ=Once]
                                                                                                                :: GHC.Base.Maybe
                                                                                                                     GHC.IO.Buffer.CharBuffer
                                                                                                              [LclId] =
                                                                                                                  CCCS GHC.Base.Just! [ipv3_sbc31];
                                                                                                            } in 
                                                                                                              Unit# [sat_sbc32];
                                                                                                      };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                      };
                                                                };
                                                          };
                                                    };
                                          } in 
                                            case
                                                catch# [sat_sbc33
                                                        GHC.IO.Handle.Text.hGetChar3
                                                        GHC.Prim.void#]
                                            of
                                            { Unit# ipv1_sbc36 [Occ=Once!] ->
                                                  case ipv1_sbc36 of {
                                                    GHC.Base.Nothing ->
                                                        let {
                                                          sat_sbc3f [Occ=Once]
                                                            :: GHC.IO.Buffer.Buffer
                                                                 GHC.IO.Buffer.CharBufElem
                                                          [LclId] =
                                                              [buf1_sbc2w] \u []
                                                                  case buf1_sbc2w of {
                                                                    GHC.IO.Buffer.Buffer dt4_sbc39 [Occ=Once]
                                                                                         dt5_sbc3a [Occ=Once]
                                                                                         ds10_sbc3b [Occ=Once]
                                                                                         dt6_sbc3c [Occ=Once]
                                                                                         _ [Occ=Dead]
                                                                                         _ [Occ=Dead] ->
                                                                        GHC.IO.Buffer.Buffer [dt4_sbc39
                                                                                              dt5_sbc3a
                                                                                              ds10_sbc3b
                                                                                              dt6_sbc3c
                                                                                              0#
                                                                                              0#];
                                                                  };
                                                        } in 
                                                          case
                                                              writeMutVar# [dt2_sbc2f
                                                                            sat_sbc3f
                                                                            GHC.Prim.void#]
                                                          of
                                                          s2#_sbc3g
                                                          { (##) ->
                                                                let {
                                                                  sat_sbc3q [Occ=Once]
                                                                    :: [[GHC.Types.Char]]
                                                                  [LclId] =
                                                                      CCCS :! [ww8_sbc2t
                                                                               w1_sbc24]; } in
                                                                let {
                                                                  sat_sbc3p [Occ=Once]
                                                                    :: [GHC.Types.Char]
                                                                  [LclId] =
                                                                      [buf1_sbc2w] \u []
                                                                          case buf1_sbc2w of {
                                                                            GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                                 _ [Occ=Dead]
                                                                                                 _ [Occ=Dead]
                                                                                                 _ [Occ=Dead]
                                                                                                 dt7_sbc3m [Occ=Once]
                                                                                                 dt8_sbc3n [Occ=Once] ->
                                                                                case
                                                                                    ==# [dt7_sbc3m
                                                                                         dt8_sbc3n]
                                                                                of
                                                                                { __DEFAULT ->
                                                                                      lvl4_rb6WH;
                                                                                  1# -> [] [];
                                                                                };
                                                                          }; } in
                                                                let {
                                                                  sat_sbc3r [Occ=Once]
                                                                    :: [[GHC.Types.Char]]
                                                                  [LclId] =
                                                                      CCCS :! [sat_sbc3p sat_sbc3q];
                                                                } in 
                                                                  case
                                                                      GHC.List.reverse1
                                                                          sat_sbc3r GHC.Types.[]
                                                                  of
                                                                  sat_sbc3s
                                                                  { __DEFAULT ->
                                                                        case
                                                                            go1_rb6WQ sat_sbc3s
                                                                        of
                                                                        wild3_sbc3t
                                                                        { [] ->
                                                                              GHC.IO.Handle.Internals.ioe_EOF1
                                                                                  GHC.Prim.void#;
                                                                          : _ [Occ=Dead]
                                                                            _ [Occ=Dead] ->
                                                                              Unit# [wild3_sbc3t];
                                                                        };
                                                                  };
                                                          };
                                                    GHC.Base.Just new_buf_sbc3w [Occ=Once!] ->
                                                        case new_buf_sbc3w of {
                                                          GHC.IO.Buffer.Buffer ww11_sbc3y [Occ=Once]
                                                                               ww12_sbc3z [Occ=Once]
                                                                               ww13_sbc3A [Occ=Once]
                                                                               ww14_sbc3B [Occ=Once]
                                                                               ww15_sbc3C [Occ=Once]
                                                                               ww16_sbc3D [Occ=Once] ->
                                                              let {
                                                                sat_sbc3E [Occ=Once]
                                                                  :: [GHC.Base.String]
                                                                [LclId] =
                                                                    CCCS :! [ww8_sbc2t w1_sbc24];
                                                              } in 
                                                                GHC.IO.Handle.Text.$whGetLineBufferedLoop
                                                                    wild_sbc26
                                                                    ww11_sbc3y
                                                                    ww12_sbc3z
                                                                    ww13_sbc3A
                                                                    ww14_sbc3B
                                                                    ww15_sbc3C
                                                                    ww16_sbc3D
                                                                    sat_sbc3E
                                                                    GHC.Prim.void#;
                                                        };
                                                  };
                                            };
                                      GHC.Types.True ->
                                          let {
                                            sat_sbc3H [Occ=Once]
                                              :: GHC.IO.Buffer.Buffer GHC.IO.Buffer.CharBufElem
                                            [LclId] =
                                                [ww_sbc1Y
                                                 ww1_sbc1Z
                                                 ww2_sbc20
                                                 ww3_sbc21
                                                 ww5_sbc23
                                                 ww7_sbc2q] \u []
                                                    case +# [ww7_sbc2q 1#] of x_sbc3F [Dmd=<S,U>] {
                                                      __DEFAULT ->
                                                          case ==# [x_sbc3F ww5_sbc23] of {
                                                            __DEFAULT ->
                                                                GHC.IO.Buffer.Buffer [ww_sbc1Y
                                                                                      ww1_sbc1Z
                                                                                      ww2_sbc20
                                                                                      ww3_sbc21
                                                                                      x_sbc3F
                                                                                      ww5_sbc23];
                                                            1# ->
                                                                GHC.IO.Buffer.Buffer [ww_sbc1Y
                                                                                      ww1_sbc1Z
                                                                                      ww2_sbc20
                                                                                      ww3_sbc21
                                                                                      0#
                                                                                      0#];
                                                          };
                                                    };
                                          } in 
                                            case
                                                writeMutVar# [dt2_sbc2f sat_sbc3H GHC.Prim.void#]
                                            of
                                            s2#_sbc3I
                                            { (##) ->
                                                  let {
                                                    sat_sbc3L [Occ=Once] :: [GHC.Types.Char]
                                                    [LclId] =
                                                        [w1_sbc24 ww8_sbc2t] \u []
                                                            let {
                                                              sat_sbc3J [Occ=Once]
                                                                :: [[GHC.Types.Char]]
                                                              [LclId] =
                                                                  CCCS :! [ww8_sbc2t w1_sbc24];
                                                            } in 
                                                              case
                                                                  GHC.List.reverse1
                                                                      sat_sbc3J GHC.Types.[]
                                                              of
                                                              sat_sbc3K
                                                              { __DEFAULT -> go_rb6WP sat_sbc3K;
                                                              };
                                                  } in  Unit# [sat_sbc3L];
                                            };
                                    };
                          } in 
                            case ds6_sbc2k of {
                              GHC.IO.Handle.Types.LF ->
                                  case ==# [ww4_sbc22 ww7_sbc2q] of {
                                    __DEFAULT ->
                                        case -# [ww7_sbc2q 1#] of sat_sbc44 {
                                          __DEFAULT ->
                                              let-no-escape {
                                                $j_sbc3O [Occ=OnceL!T[2],
                                                          Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                                  :: GHC.Prim.State# GHC.Prim.RealWorld
                                                     -> [GHC.IO.Buffer.CharBufElem]
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                           GHC.Base.String #)
                                                [LclId[JoinId(2)],
                                                 Arity=2,
                                                 Str=<S,U><L,U>,
                                                 Unf=OtherCon []] =
                                                    sat-only [ww1_sbc1Z
                                                              ww7_sbc2q
                                                              $w$j1_sbc2r] \r [void_0E ipv1_sbc3Q]
                                                        case
                                                            touch# [ww1_sbc1Z GHC.Prim.void#]
                                                        of
                                                        s'_sbc3R
                                                        { (##) ->
                                                              let {
                                                                sat_sbc3S [Occ=Once]
                                                                  :: GHC.Types.Int
                                                                [LclId] =
                                                                    CCCS GHC.Types.I#! [ww7_sbc2q];
                                                              } in 
                                                                $w$j1_sbc2r
                                                                    GHC.Prim.void#
                                                                    ipv1_sbc3Q
                                                                    sat_sbc3S;
                                                        };
                                              } in 
                                                let-no-escape {
                                                  $wunpackRB_sbc3T [InlPrag=NOUSERINLINE[0],
                                                                    Occ=LoopBreakerT[3]]
                                                    :: [GHC.IO.Buffer.CharBufElem]
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Base.String #)
                                                  [LclId[JoinId(3)],
                                                   Arity=3,
                                                   Str=<L,U><S,U><S,U>,
                                                   Unf=OtherCon []] =
                                                      sat-only [ww_sbc1Y
                                                                ww4_sbc22
                                                                $j_sbc3O
                                                                $wunpackRB_sbc3T] \r [w4_sbc3U
                                                                                      ww8_sbc3V
                                                                                      void_0E]
                                                          case <# [ww8_sbc3V ww4_sbc22] of {
                                                            __DEFAULT ->
                                                                case
                                                                    readWideCharOffAddr# [ww_sbc1Y
                                                                                          ww8_sbc3V
                                                                                          GHC.Prim.void#]
                                                                of
                                                                { Unit# ipv1_sbc40 [Occ=Once] ->
                                                                      case
                                                                          -# [ww8_sbc3V 1#]
                                                                      of
                                                                      sat_sbc43
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_sbc41 [Occ=Once]
                                                                                :: GHC.IO.Buffer.CharBufElem
                                                                              [LclId] =
                                                                                  CCCS GHC.Types.C#! [ipv1_sbc40]; } in
                                                                            let {
                                                                              sat_sbc42 [Occ=Once]
                                                                                :: [GHC.IO.Buffer.CharBufElem]
                                                                              [LclId] =
                                                                                  CCCS :! [sat_sbc41
                                                                                           w4_sbc3U];
                                                                            } in 
                                                                              $wunpackRB_sbc3T
                                                                                  sat_sbc42
                                                                                  sat_sbc43
                                                                                  GHC.Prim.void#;
                                                                      };
                                                                };
                                                            1# -> $j_sbc3O GHC.Prim.void# w4_sbc3U;
                                                          };
                                                } in 
                                                  $wunpackRB_sbc3T
                                                      GHC.Types.[] sat_sbc44 GHC.Prim.void#;
                                        };
                                    1# ->
                                        let {
                                          sat_sbc45 [Occ=Once] :: GHC.Types.Int
                                          [LclId] =
                                              CCCS GHC.Types.I#! [ww7_sbc2q];
                                        } in  $w$j1_sbc2r GHC.Prim.void# GHC.Types.[] sat_sbc45;
                                  };
                              GHC.IO.Handle.Types.CRLF ->
                                  case
                                      $wunpack_nl_rb6WF
                                          ww_sbc1Y
                                          ww1_sbc1Z
                                          ww4_sbc22
                                          ww7_sbc2q
                                          GHC.Types.[]
                                          GHC.Prim.void#
                                  of
                                  { Unit# ipv1_sbc48 [Occ=Once!] ->
                                        case ipv1_sbc48 of {
                                          (,) ww9_sbc4a [Occ=Once] ww10_sbc4b [Occ=Once] ->
                                              $w$j1_sbc2r GHC.Prim.void# ww9_sbc4a ww10_sbc4b;
                                        };
                                  };
                            };
                } in 
                  let-no-escape {
                    exit_sbc4c [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
                      :: GHC.Prim.Int#
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                    [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
                        sat-only [$w$j_sbc2n] \r [ww6_sbc4d void_0E]
                            $w$j_sbc2n GHC.Prim.void# GHC.Types.True ww6_sbc4d;
                  } in 
                    let-no-escape {
                      exit1_sbc4f [Occ=OnceL!T[1], Dmd=<L,C(U(U,U))>]
                        :: GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                      [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                          sat-only [ww5_sbc23 $w$j_sbc2n] \r [void_0E]
                              $w$j_sbc2n GHC.Prim.void# GHC.Types.False ww5_sbc23;
                    } in 
                      let-no-escape {
                        $wloop_sbc4h [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                          :: GHC.IO.Buffer.RawCharBuffer
                             -> GHC.Prim.Int#
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                        [LclId[JoinId(3)],
                         Arity=3,
                         Str=<L,1*U(U,U)><S,U><S,U>,
                         Unf=OtherCon []] =
                            sat-only [ww5_sbc23
                                      exit_sbc4c
                                      exit1_sbc4f
                                      $wloop_sbc4h] \r [w3_sbc4i ww6_sbc4j void_0E]
                                case ==# [ww6_sbc4j ww5_sbc23] of {
                                  __DEFAULT ->
                                      case w3_sbc4i of wild1_sbc4m {
                                        GHC.ForeignPtr.ForeignPtr fo_sbc4n [Occ=Once]
                                                                  ds9_sbc4o [Occ=Once] ->
                                            case
                                                readWideCharOffAddr# [fo_sbc4n
                                                                      ww6_sbc4j
                                                                      GHC.Prim.void#]
                                            of
                                            { Unit# ipv1_sbc4r [Occ=Once!] ->
                                                  case
                                                      touch# [ds9_sbc4o GHC.Prim.void#]
                                                  of
                                                  s'_sbc4s
                                                  { (##) ->
                                                        case ipv1_sbc4r of {
                                                          __DEFAULT ->
                                                              case +# [ww6_sbc4j 1#] of sat_sbc4u {
                                                                __DEFAULT ->
                                                                    $wloop_sbc4h
                                                                        wild1_sbc4m
                                                                        sat_sbc4u
                                                                        GHC.Prim.void#;
                                                              };
                                                          '\n'# ->
                                                              exit_sbc4c ww6_sbc4j GHC.Prim.void#;
                                                        };
                                                  };
                                            };
                                      };
                                  1# -> exit1_sbc4f GHC.Prim.void#;
                                };
                      } in  $wloop_sbc4h sat_sbc4v ww4_sbc22 GHC.Prim.void#;
        };

GHC.IO.Handle.Text.hGetLine3 [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.IO.Buffer.CharBuffer
     -> [GHC.Base.String]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=4,
 Str=<S,1*U><S(SLLSSS),1*U(U,U,U,U,U,U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbc4w w1_sbc4x w2_sbc4y void_0E]
        case w1_sbc4x of {
          GHC.IO.Buffer.Buffer ww1_sbc4B [Occ=Once]
                               ww2_sbc4C [Occ=Once]
                               ww3_sbc4D [Occ=Once]
                               ww4_sbc4E [Occ=Once]
                               ww5_sbc4F [Occ=Once]
                               ww6_sbc4G [Occ=Once] ->
              GHC.IO.Handle.Text.$whGetLineBufferedLoop
                  w_sbc4w
                  ww1_sbc4B
                  ww2_sbc4C
                  ww3_sbc4D
                  ww4_sbc4E
                  ww5_sbc4F
                  ww6_sbc4G
                  w2_sbc4y
                  GHC.Prim.void#;
        };

GHC.IO.Handle.Text.hGetLine5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetLine"#;

GHC.IO.Handle.Text.hGetLine4 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hGetLine5;

GHC.IO.Handle.Text.hGetLine2
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [handle__sbc4H void_0E]
        case handle__sbc4H of wild_sbc4J {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt2_sbc4S [Occ=Once]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case readMutVar# [dt2_sbc4S GHC.Prim.void#] of {
                Unit# ipv1_sbc52 [Occ=Once!] ->
                    case ipv1_sbc52 of {
                      GHC.IO.Buffer.Buffer ww1_sbc54 [Occ=Once]
                                           ww2_sbc55 [Occ=Once]
                                           ww3_sbc56 [Occ=Once]
                                           ww4_sbc57 [Occ=Once]
                                           ww5_sbc58 [Occ=Once]
                                           ww6_sbc59 [Occ=Once] ->
                          GHC.IO.Handle.Text.$whGetLineBufferedLoop
                              wild_sbc4J
                              ww1_sbc54
                              ww2_sbc55
                              ww3_sbc56
                              ww4_sbc57
                              ww5_sbc58
                              ww6_sbc59
                              GHC.Types.[]
                              GHC.Prim.void#;
                    };
              };
        };

GHC.IO.Handle.Text.hGetLine1
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<L,U>, Unf=OtherCon []] =
    [] \r [h_sbc5a void_0E]
        GHC.IO.Handle.Internals.wantReadableHandle_1
            GHC.IO.Handle.Text.hGetLine4
            h_sbc5a
            GHC.IO.Handle.Text.hGetLine2
            GHC.Prim.void#;

GHC.IO.Handle.Text.hGetLine
  :: GHC.IO.Handle.Types.Handle -> GHC.Types.IO GHC.Base.String
[GblId, Arity=2, Str=<L,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.IO.Handle.Text.hGetLine1 eta_B2 GHC.Prim.void#;

lvl11_rb6WR :: Data.Typeable.Internal.TypeRep GHC.IO.FD.FD
[GblId] =
    [] \u []
        case
            Data.Typeable.Internal.$wmkTrCon
                10838815552519039062##
                15546290101957756376##
                GHC.IO.FD.$trModule
                GHC.IO.FD.$tcFD1
                0#
                GHC.Types.krep$*
                GHC.Types.[]
        of
        { (#,,,,#) ww8_sbc5c [Occ=Once]
                   ww9_sbc5d [Occ=Once]
                   ww10_sbc5e [Occ=Once]
                   ww11_sbc5f [Occ=Once]
                   ww12_sbc5g [Occ=Once] ->
              Data.Typeable.Internal.TrTyCon [ww8_sbc5c
                                              ww9_sbc5d
                                              ww10_sbc5e
                                              ww11_sbc5f
                                              ww12_sbc5g];
        };

GHC.IO.Handle.Text.hGetBufNonBlocking2
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<S,1*U><S(SLLLSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><L,1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [h__sbc5h
           buf_sbc5i
           ptr_sbc5j
           so_far_sbc5k
           count_sbc5l
           void_0E]
        case h__sbc5h of wild_sbc5n {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt_sbc5t [Occ=Once*]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case buf_sbc5i of {
                GHC.IO.Buffer.Buffer dt4_sbc5F
                                     dt5_sbc5G
                                     ds9_sbc5H [Occ=Once*]
                                     dt6_sbc5I
                                     dt7_sbc5J
                                     dt8_sbc5K ->
                    case count_sbc5l of {
                      GHC.Types.I# x_sbc5M ->
                          case -# [dt8_sbc5K dt7_sbc5J] of avail_sbc5N [Dmd=<S,U>] {
                            __DEFAULT ->
                                case <# [x_sbc5M avail_sbc5N] of {
                                  __DEFAULT ->
                                      case ptr_sbc5j of {
                                        GHC.Ptr.Ptr ds11_sbc5Q ->
                                            case int2Word# [avail_sbc5N] of sat_sbc5T {
                                              __DEFAULT ->
                                                  case
                                                      plusAddr# [dt4_sbc5F dt7_sbc5J]
                                                  of
                                                  sat_sbc5S
                                                  { __DEFAULT ->
                                                        case
                                                            __pkg_ccall base-4.11.0.0 [ds11_sbc5Q
                                                                                       sat_sbc5S
                                                                                       sat_sbc5T
                                                                                       GHC.Prim.void#]
                                                        of
                                                        { Unit# _ [Occ=Dead] ->
                                                              case
                                                                  touch# [dt5_sbc5G GHC.Prim.void#]
                                                              of
                                                              s'_sbc5X
                                                              { (##) ->
                                                                    let {
                                                                      sat_sbc5Y [Occ=Once]
                                                                        :: GHC.IO.Buffer.Buffer
                                                                             GHC.Word.Word8
                                                                      [LclId] =
                                                                          CCCS GHC.IO.Buffer.Buffer! [dt4_sbc5F
                                                                                                      dt5_sbc5G
                                                                                                      ds9_sbc5H
                                                                                                      dt6_sbc5I
                                                                                                      0#
                                                                                                      0#];
                                                                    } in 
                                                                      case
                                                                          writeMutVar# [dt_sbc5t
                                                                                        sat_sbc5Y
                                                                                        GHC.Prim.void#]
                                                                      of
                                                                      s2#_sbc5Z
                                                                      { (##) ->
                                                                            case
                                                                                -# [x_sbc5M
                                                                                    avail_sbc5N]
                                                                            of
                                                                            wild4_sbc60
                                                                            { __DEFAULT ->
                                                                                  let {
                                                                                    sat_sbc66 [Occ=Once,
                                                                                               Dmd=<L,U(U)>]
                                                                                      :: GHC.Types.Int
                                                                                    [LclId] =
                                                                                        [so_far_sbc5k
                                                                                         avail_sbc5N] \u []
                                                                                            case
                                                                                                so_far_sbc5k
                                                                                            of
                                                                                            { GHC.Types.I# x1_sbc64 [Occ=Once] ->
                                                                                                  case
                                                                                                      +# [x1_sbc64
                                                                                                          avail_sbc5N]
                                                                                                  of
                                                                                                  sat_sbc65
                                                                                                  { __DEFAULT ->
                                                                                                        GHC.Types.I# [sat_sbc65];
                                                                                                  };
                                                                                            };
                                                                                  } in 
                                                                                    case
                                                                                        plusAddr# [ds11_sbc5Q
                                                                                                   avail_sbc5N]
                                                                                    of
                                                                                    sat_sbc61
                                                                                    { __DEFAULT ->
                                                                                          let {
                                                                                            sat_sbc62 [Occ=Once]
                                                                                              :: GHC.Ptr.Ptr
                                                                                                   GHC.Word.Word8
                                                                                            [LclId] =
                                                                                                CCCS GHC.Ptr.Ptr! [sat_sbc61];
                                                                                          } in 
                                                                                            GHC.IO.Handle.Text.$wbufReadNBEmpty
                                                                                                wild_sbc5n
                                                                                                dt6_sbc5I
                                                                                                sat_sbc62
                                                                                                sat_sbc66
                                                                                                wild4_sbc60
                                                                                                GHC.Prim.void#;
                                                                                    };
                                                                              0# ->
                                                                                  let {
                                                                                    sat_sbc6a [Occ=Once]
                                                                                      :: GHC.Types.Int
                                                                                    [LclId] =
                                                                                        [so_far_sbc5k
                                                                                         avail_sbc5N] \u []
                                                                                            case
                                                                                                so_far_sbc5k
                                                                                            of
                                                                                            { GHC.Types.I# x1_sbc68 [Occ=Once] ->
                                                                                                  case
                                                                                                      +# [x1_sbc68
                                                                                                          avail_sbc5N]
                                                                                                  of
                                                                                                  sat_sbc69
                                                                                                  { __DEFAULT ->
                                                                                                        GHC.Types.I# [sat_sbc69];
                                                                                                  };
                                                                                            };
                                                                                  } in 
                                                                                    Unit# [sat_sbc6a];
                                                                            };
                                                                      };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                  1# ->
                                      case ptr_sbc5j of {
                                        GHC.Ptr.Ptr ds11_sbc6c [Occ=Once] ->
                                            case int2Word# [x_sbc5M] of sat_sbc6f {
                                              __DEFAULT ->
                                                  case
                                                      plusAddr# [dt4_sbc5F dt7_sbc5J]
                                                  of
                                                  sat_sbc6e
                                                  { __DEFAULT ->
                                                        case
                                                            __pkg_ccall base-4.11.0.0 [ds11_sbc6c
                                                                                       sat_sbc6e
                                                                                       sat_sbc6f
                                                                                       GHC.Prim.void#]
                                                        of
                                                        { Unit# _ [Occ=Dead] ->
                                                              case
                                                                  touch# [dt5_sbc5G GHC.Prim.void#]
                                                              of
                                                              s'_sbc6j
                                                              { (##) ->
                                                                    case
                                                                        +# [dt7_sbc5J x_sbc5M]
                                                                    of
                                                                    sat_sbc6k
                                                                    { __DEFAULT ->
                                                                          let {
                                                                            sat_sbc6l [Occ=Once]
                                                                              :: GHC.IO.Buffer.Buffer
                                                                                   GHC.Word.Word8
                                                                            [LclId] =
                                                                                CCCS GHC.IO.Buffer.Buffer! [dt4_sbc5F
                                                                                                            dt5_sbc5G
                                                                                                            ds9_sbc5H
                                                                                                            dt6_sbc5I
                                                                                                            sat_sbc6k
                                                                                                            dt8_sbc5K];
                                                                          } in 
                                                                            case
                                                                                writeMutVar# [dt_sbc5t
                                                                                              sat_sbc6l
                                                                                              GHC.Prim.void#]
                                                                            of
                                                                            s2#_sbc6m
                                                                            { (##) ->
                                                                                  let {
                                                                                    sat_sbc6q [Occ=Once]
                                                                                      :: GHC.Types.Int
                                                                                    [LclId] =
                                                                                        [so_far_sbc5k
                                                                                         x_sbc5M] \u []
                                                                                            case
                                                                                                so_far_sbc5k
                                                                                            of
                                                                                            { GHC.Types.I# x1_sbc6o [Occ=Once] ->
                                                                                                  case
                                                                                                      +# [x1_sbc6o
                                                                                                          x_sbc5M]
                                                                                                  of
                                                                                                  sat_sbc6p
                                                                                                  { __DEFAULT ->
                                                                                                        GHC.Types.I# [sat_sbc6p];
                                                                                                  };
                                                                                            };
                                                                                  } in 
                                                                                    Unit# [sat_sbc6q];
                                                                            };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };
GHC.IO.Handle.Text.$wbufReadNBEmpty [InlPrag=NOUSERINLINE[0],
                                     Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.Int#
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<S,1*U><S,U><L,1*U(U)><L,U(U)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbc6r ww_sbc6s w1_sbc6t w2_sbc6u ww1_sbc6v void_0E]
        case w_sbc6r of wild_sbc6x {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       $dBufferedIO_sbc6z [Occ=Once]
                                       $dTypeable_sbc6A [Occ=Once]
                                       ds_sbc6B [Occ=Once]
                                       _ [Occ=Dead]
                                       dt_sbc6D
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case ds_sbc6B of ww2_sbc6O {
                GHC.IO.FD.FD ww3_sbc6P [Occ=Once] ww4_sbc6Q [Occ=Once] ->
                    let-no-escape {
                      fail_sbc6R [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                        :: GHC.Prim.Void#
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                      [LclId[JoinId(1)], Arity=1, Str=<L,A>, Unf=OtherCon []] =
                          sat-only [w1_sbc6t
                                    w2_sbc6u
                                    ww1_sbc6v
                                    wild_sbc6x
                                    $dBufferedIO_sbc6z
                                    dt_sbc6D
                                    ww2_sbc6O] \r [void_0E]
                              case readMutVar# [dt_sbc6D GHC.Prim.void#] of {
                                Unit# ipv1_sbc6V [Occ=Once] ->
                                    case
                                        GHC.IO.BufferedIO.fillReadBuffer0
                                            $dBufferedIO_sbc6z ww2_sbc6O ipv1_sbc6V GHC.Prim.void#
                                    of
                                    { Unit# ipv3_sbc6Y [Occ=Once!] ->
                                          case ipv3_sbc6Y of {
                                            (,) r_sbc70 [Occ=Once!] buf'_sbc71 ->
                                                case r_sbc70 of {
                                                  GHC.Base.Nothing -> Unit# [w2_sbc6u];
                                                  GHC.Base.Just ds12_sbc73 [Occ=Once!] ->
                                                      case ds12_sbc73 of wild3_sbc74 {
                                                        GHC.Types.I# ds13_sbc75 [Occ=Once!] ->
                                                            case ds13_sbc75 of ds14_sbc76 {
                                                              __DEFAULT ->
                                                                  case
                                                                      writeMutVar# [dt_sbc6D
                                                                                    buf'_sbc71
                                                                                    GHC.Prim.void#]
                                                                  of
                                                                  s2#_sbc77
                                                                  { (##) ->
                                                                        case
                                                                            <=# [ww1_sbc6v
                                                                                 ds14_sbc76]
                                                                        of
                                                                        { __DEFAULT ->
                                                                              GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                  wild_sbc6x
                                                                                  buf'_sbc71
                                                                                  w1_sbc6t
                                                                                  w2_sbc6u
                                                                                  wild3_sbc74
                                                                                  GHC.Prim.void#;
                                                                          1# ->
                                                                              let {
                                                                                sat_sbc79 [Occ=Once]
                                                                                  :: GHC.Types.Int
                                                                                [LclId] =
                                                                                    CCCS GHC.Types.I#! [ww1_sbc6v];
                                                                              } in 
                                                                                GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                    wild_sbc6x
                                                                                    buf'_sbc71
                                                                                    w1_sbc6t
                                                                                    w2_sbc6u
                                                                                    sat_sbc79
                                                                                    GHC.Prim.void#;
                                                                        };
                                                                  };
                                                              0# -> Unit# [w2_sbc6u];
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in 
                      case ># [ww1_sbc6v ww_sbc6s] of {
                        __DEFAULT -> fail_sbc6R GHC.Prim.void#;
                        1# ->
                            case
                                Data.Typeable.Internal.sameTypeRep $dTypeable_sbc6A lvl11_rb6WR
                            of
                            { GHC.Types.False -> fail_sbc6R GHC.Prim.void#;
                              GHC.Types.True ->
                                  case w1_sbc6t of {
                                    GHC.Ptr.Ptr ww6_sbc7d [Occ=Once] ->
                                        case int2Word# [ww1_sbc6v] of sat_sbc7e {
                                          __DEFAULT ->
                                              case
                                                  GHC.IO.FD.$wreadRawBufferPtrNoBlock
                                                      GHC.IO.FD.$fBufferedIOFD8
                                                      ww3_sbc6P
                                                      ww4_sbc6Q
                                                      ww6_sbc7d
                                                      0#
                                                      sat_sbc7e
                                                      GHC.Prim.void#
                                              of
                                              { Unit# ipv1_sbc7h [Occ=Once!] ->
                                                    case ipv1_sbc7h of {
                                                      GHC.Types.I# ds10_sbc7j [Occ=Once!] ->
                                                          case ds10_sbc7j of ds11_sbc7k {
                                                            __DEFAULT ->
                                                                let {
                                                                  sat_sbc7o [Occ=Once]
                                                                    :: GHC.Types.Int
                                                                  [LclId] =
                                                                      [w2_sbc6u ds11_sbc7k] \u []
                                                                          case w2_sbc6u of {
                                                                            GHC.Types.I# x_sbc7m [Occ=Once] ->
                                                                                case
                                                                                    +# [x_sbc7m
                                                                                        ds11_sbc7k]
                                                                                of
                                                                                sat_sbc7n
                                                                                { __DEFAULT ->
                                                                                      GHC.Types.I# [sat_sbc7n];
                                                                                };
                                                                          };
                                                                } in  Unit# [sat_sbc7o];
                                                            -1# -> Unit# [w2_sbc6u];
                                                          };
                                                    };
                                              };
                                        };
                                  };
                            };
                      };
              };
        };

GHC.IO.Handle.Text.hGetBufNonBlocking4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetBufNonBlocking"#;

GHC.IO.Handle.Text.hGetBufNonBlocking3 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.IO.Handle.Text.hGetBufNonBlocking4;

GHC.IO.Handle.Text.$whGetBufNonBlocking [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId, Arity=4, Str=<L,U><L,U(U)><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [w_sbc7p w1_sbc7q ww_sbc7r void_0E]
        case ww_sbc7r of wild_sbc7t {
          __DEFAULT ->
              case <# [wild_sbc7t 0#] of {
                __DEFAULT ->
                    let {
                      wild1_sbc7v [Occ=OnceL, Dmd=<L,U(U)>] :: GHC.Types.Int
                      [LclId, Unf=OtherCon []] =
                          CCCS GHC.Types.I#! [wild_sbc7t]; } in
                    let {
                      sat_sbc98 [Occ=Once]
                        :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Int
                      [LclId] =
                          [w1_sbc7q wild_sbc7t wild1_sbc7v] \r [h__sbc7w void_0E]
                              case h__sbc7w of wild2_sbc7y {
                                GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             dt_sbc7E
                                                             _ [Occ=Dead]
                                                             dt1_sbc7G [Occ=Once]
                                                             dt2_sbc7H
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             ds4_sbc7K [Occ=Once!]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                    case readMutVar# [dt2_sbc7H GHC.Prim.void#] of {
                                      Unit# ipv1_sbc7R [Occ=Once!] ->
                                          case ipv1_sbc7R of {
                                            GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 ds11_sbc7V [Occ=Once!]
                                                                 _ [Occ=Dead]
                                                                 dt7_sbc7X [Occ=Once]
                                                                 dt8_sbc7Y [Occ=Once] ->
                                                let-no-escape {
                                                  $w$j_sbc7Z [InlPrag=NOUSERINLINE[0],
                                                              Occ=Once*!T[1],
                                                              Dmd=<L,1*C1(U(U,U))>]
                                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Types.Int #)
                                                  [LclId[JoinId(1)],
                                                   Arity=1,
                                                   Str=<S,U>,
                                                   Unf=OtherCon []] =
                                                      sat-only [w1_sbc7q
                                                                wild_sbc7t
                                                                wild1_sbc7v
                                                                wild2_sbc7y
                                                                dt_sbc7E] \r [void_0E]
                                                          case
                                                              readMutVar# [dt_sbc7E GHC.Prim.void#]
                                                          of
                                                          { Unit# ipv3_sbc83 [Occ=Once!] ->
                                                                case ipv3_sbc83 of wild4_sbc84 {
                                                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       dt12_sbc88 [Occ=Once]
                                                                                       dt13_sbc89 [Occ=Once]
                                                                                       dt14_sbc8a [Occ=Once] ->
                                                                      case
                                                                          ==# [dt13_sbc89
                                                                               dt14_sbc8a]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                wild2_sbc7y
                                                                                wild4_sbc84
                                                                                w1_sbc7q
                                                                                GHC.IO.Handle.Text.hGetBuf3
                                                                                wild1_sbc7v
                                                                                GHC.Prim.void#;
                                                                        1# ->
                                                                            GHC.IO.Handle.Text.$wbufReadNBEmpty
                                                                                wild2_sbc7y
                                                                                dt12_sbc88
                                                                                w1_sbc7q
                                                                                GHC.IO.Handle.Text.hGetBuf3
                                                                                wild_sbc7t
                                                                                GHC.Prim.void#;
                                                                      };
                                                                };
                                                          };
                                                } in 
                                                  case ds11_sbc7V of {
                                                    GHC.IO.Buffer.ReadBuffer ->
                                                        case ==# [dt7_sbc7X dt8_sbc7Y] of {
                                                          __DEFAULT ->
                                                              case
                                                                  readMutVar# [dt1_sbc7G
                                                                               GHC.Prim.void#]
                                                              of
                                                              { Unit# ipv3_sbc8g [Occ=Once!] ->
                                                                    case ipv3_sbc8g of {
                                                                      (,) codec_state_sbc8i [Occ=Once]
                                                                          bbuf0_sbc8j [Occ=Once*] ->
                                                                          case
                                                                              readMutVar# [dt2_sbc7H
                                                                                           GHC.Prim.void#]
                                                                          of
                                                                          { Unit# ipv5_sbc8m ->
                                                                                let {
                                                                                  sat_sbc8u [Occ=Once]
                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                         GHC.IO.Buffer.CharBufElem
                                                                                  [LclId] =
                                                                                      [ipv5_sbc8m] \u []
                                                                                          case
                                                                                              ipv5_sbc8m
                                                                                          of
                                                                                          { GHC.IO.Buffer.Buffer dt9_sbc8o [Occ=Once]
                                                                                                                 dt10_sbc8p [Occ=Once]
                                                                                                                 ds14_sbc8q [Occ=Once]
                                                                                                                 dt11_sbc8r [Occ=Once]
                                                                                                                 _ [Occ=Dead]
                                                                                                                 _ [Occ=Dead] ->
                                                                                                GHC.IO.Buffer.Buffer [dt9_sbc8o
                                                                                                                      dt10_sbc8p
                                                                                                                      ds14_sbc8q
                                                                                                                      dt11_sbc8r
                                                                                                                      0#
                                                                                                                      0#];
                                                                                          };
                                                                                } in 
                                                                                  case
                                                                                      writeMutVar# [dt2_sbc7H
                                                                                                    sat_sbc8u
                                                                                                    GHC.Prim.void#]
                                                                                  of
                                                                                  s2#_sbc8v
                                                                                  { (##) ->
                                                                                        case
                                                                                            ipv5_sbc8m
                                                                                        of
                                                                                        { GHC.IO.Buffer.Buffer dt9_sbc8x [Occ=Once]
                                                                                                               dt10_sbc8y [Occ=Once]
                                                                                                               ds14_sbc8z [Occ=Once]
                                                                                                               _ [Occ=Dead]
                                                                                                               dt12_sbc8B [Occ=Once!]
                                                                                                               _ [Occ=Dead] ->
                                                                                              case
                                                                                                  dt12_sbc8B
                                                                                              of
                                                                                              wild7_sbc8D
                                                                                              { __DEFAULT ->
                                                                                                    case
                                                                                                        ds4_sbc7K
                                                                                                    of
                                                                                                    { GHC.Base.Nothing ->
                                                                                                          let {
                                                                                                            sat_sbc8N [Occ=Once]
                                                                                                              :: GHC.IO.Buffer.Buffer
                                                                                                                   GHC.Word.Word8
                                                                                                            [LclId] =
                                                                                                                [bbuf0_sbc8j
                                                                                                                 wild7_sbc8D] \u []
                                                                                                                    case
                                                                                                                        bbuf0_sbc8j
                                                                                                                    of
                                                                                                                    { GHC.IO.Buffer.Buffer dt14_sbc8G [Occ=Once]
                                                                                                                                           dt15_sbc8H [Occ=Once]
                                                                                                                                           ds15_sbc8I [Occ=Once]
                                                                                                                                           dt16_sbc8J [Occ=Once]
                                                                                                                                           dt17_sbc8K [Occ=Once]
                                                                                                                                           dt18_sbc8L [Occ=Once] ->
                                                                                                                          case
                                                                                                                              +# [dt17_sbc8K
                                                                                                                                  wild7_sbc8D]
                                                                                                                          of
                                                                                                                          sat_sbc8M
                                                                                                                          { __DEFAULT ->
                                                                                                                                GHC.IO.Buffer.Buffer [dt14_sbc8G
                                                                                                                                                      dt15_sbc8H
                                                                                                                                                      ds15_sbc8I
                                                                                                                                                      dt16_sbc8J
                                                                                                                                                      sat_sbc8M
                                                                                                                                                      dt18_sbc8L];
                                                                                                                          };
                                                                                                                    };
                                                                                                          } in 
                                                                                                            case
                                                                                                                writeMutVar# [dt_sbc7E
                                                                                                                              sat_sbc8N
                                                                                                                              GHC.Prim.void#]
                                                                                                            of
                                                                                                            s2#1_sbc8O
                                                                                                            { (##) ->
                                                                                                                  $w$j_sbc7Z
                                                                                                                      GHC.Prim.void#;
                                                                                                            };
                                                                                                      GHC.Base.Just decoder_sbc8P [Occ=Once!] ->
                                                                                                          case
                                                                                                              decoder_sbc8P
                                                                                                          of
                                                                                                          { GHC.IO.Encoding.Types.BufferCodec ds15_sbc8R [Occ=Once]
                                                                                                                                              ds16_sbc8S [Occ=Once]
                                                                                                                                              _ [Occ=Dead]
                                                                                                                                              _ [Occ=Dead]
                                                                                                                                              ds19_sbc8V [Occ=Once!] ->
                                                                                                                case
                                                                                                                    ds19_sbc8V
                                                                                                                        codec_state_sbc8i
                                                                                                                        GHC.Prim.void#
                                                                                                                of
                                                                                                                { Unit# _ [Occ=Dead] ->
                                                                                                                      let {
                                                                                                                        sat_sbc8Z [Occ=Once]
                                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                                                        [LclId] =
                                                                                                                            CCCS GHC.IO.Buffer.Buffer! [dt9_sbc8x
                                                                                                                                                        dt10_sbc8y
                                                                                                                                                        ds14_sbc8z
                                                                                                                                                        wild7_sbc8D
                                                                                                                                                        0#
                                                                                                                                                        0#];
                                                                                                                      } in 
                                                                                                                        case
                                                                                                                            GHC.IO.Handle.Internals.$wstreamEncode
                                                                                                                                ds15_sbc8R
                                                                                                                                ds16_sbc8S
                                                                                                                                bbuf0_sbc8j
                                                                                                                                sat_sbc8Z
                                                                                                                                GHC.Prim.void#
                                                                                                                        of
                                                                                                                        { Unit# ipv9_sbc92 [Occ=Once!] ->
                                                                                                                              case
                                                                                                                                  ipv9_sbc92
                                                                                                                              of
                                                                                                                              { (,) bbuf1_sbc94 [Occ=Once]
                                                                                                                                    _ [Occ=Dead] ->
                                                                                                                                    case
                                                                                                                                        writeMutVar# [dt_sbc7E
                                                                                                                                                      bbuf1_sbc94
                                                                                                                                                      GHC.Prim.void#]
                                                                                                                                    of
                                                                                                                                    s2#1_sbc96
                                                                                                                                    { (##) ->
                                                                                                                                          $w$j_sbc7Z
                                                                                                                                              GHC.Prim.void#;
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                };
                                                                                                          };
                                                                                                    };
                                                                                                0# ->
                                                                                                    case
                                                                                                        writeMutVar# [dt_sbc7E
                                                                                                                      bbuf0_sbc8j
                                                                                                                      GHC.Prim.void#]
                                                                                                    of
                                                                                                    s2#1_sbc97
                                                                                                    { (##) ->
                                                                                                          $w$j_sbc7Z
                                                                                                              GHC.Prim.void#;
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                          };
                                                                    };
                                                              };
                                                          1# -> $w$j_sbc7Z GHC.Prim.void#;
                                                        };
                                                    GHC.IO.Buffer.WriteBuffer ->
                                                        $w$j_sbc7Z GHC.Prim.void#;
                                                  };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.Handle.Internals.wantReadableHandle_1
                          GHC.IO.Handle.Text.hGetBufNonBlocking3
                          w_sbc7p
                          sat_sbc98
                          GHC.Prim.void#;
                1# ->
                    GHC.IO.Handle.Text.$willegalBufferSize
                        w_sbc7p
                        GHC.IO.Handle.Text.hGetBufNonBlocking3
                        wild_sbc7t
                        GHC.Prim.void#;
              };
          0# -> Unit# [GHC.IO.Handle.Text.hGetBuf3];
        };

GHC.IO.Handle.Text.hGetBufNonBlocking1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbc99 w1_sbc9a w2_sbc9b void_0E]
        case w2_sbc9b of {
          GHC.Types.I# ww1_sbc9e [Occ=Once] ->
              GHC.IO.Handle.Text.$whGetBufNonBlocking
                  w_sbc99 w1_sbc9a ww1_sbc9e GHC.Prim.void#;
        };

GHC.IO.Handle.Text.hGetBufNonBlocking
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.Handle.Text.hGetBufNonBlocking1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

lvl12_rb6WS :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetBufSome"#;

lvl13_rb6WT :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl12_rb6WS;

GHC.IO.Handle.Text.$whGetBufSome [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId, Arity=4, Str=<L,U><L,U(U)><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [w_sbc9f w1_sbc9g ww_sbc9h void_0E]
        case ww_sbc9h of wild_sbc9j {
          __DEFAULT ->
              case <# [wild_sbc9j 0#] of {
                __DEFAULT ->
                    let {
                      wild1_sbc9l [Occ=OnceL*, Dmd=<L,U(U)>] :: GHC.Types.Int
                      [LclId, Unf=OtherCon []] =
                          CCCS GHC.Types.I#! [wild_sbc9j]; } in
                    let {
                      sat_sbcbm [Occ=Once]
                        :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Int
                      [LclId] =
                          [w1_sbc9g wild_sbc9j wild1_sbc9l] \r [h__sbc9m void_0E]
                              case h__sbc9m of wild2_sbc9o {
                                GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                             $dBufferedIO_sbc9q [Occ=Once]
                                                             $dTypeable_sbc9r [Occ=Once]
                                                             ds_sbc9s [Occ=Once]
                                                             _ [Occ=Dead]
                                                             dt_sbc9u
                                                             _ [Occ=Dead]
                                                             dt1_sbc9w [Occ=Once]
                                                             dt2_sbc9x
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             ds4_sbc9A [Occ=Once!]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                    case ds_sbc9s of ww1_sbc9F {
                                      GHC.IO.FD.FD ww2_sbc9G [Occ=Once] ww3_sbc9H [Occ=Once] ->
                                          case readMutVar# [dt2_sbc9x GHC.Prim.void#] of {
                                            Unit# ipv1_sbc9K [Occ=Once!] ->
                                                case ipv1_sbc9K of {
                                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                       _ [Occ=Dead]
                                                                       ds11_sbc9O [Occ=Once!]
                                                                       _ [Occ=Dead]
                                                                       dt7_sbc9Q [Occ=Once]
                                                                       dt8_sbc9R [Occ=Once] ->
                                                      let-no-escape {
                                                        $w$j_sbc9S [InlPrag=NOUSERINLINE[0],
                                                                    Occ=Once*!T[1],
                                                                    Dmd=<L,1*C1(U(U,U))>]
                                                          :: GHC.Prim.State# GHC.Prim.RealWorld
                                                             -> (# GHC.Prim.State#
                                                                     GHC.Prim.RealWorld,
                                                                   GHC.Types.Int #)
                                                        [LclId[JoinId(1)],
                                                         Arity=1,
                                                         Str=<S,U>,
                                                         Unf=OtherCon []] =
                                                            sat-only [w1_sbc9g
                                                                      wild_sbc9j
                                                                      wild1_sbc9l
                                                                      wild2_sbc9o
                                                                      $dBufferedIO_sbc9q
                                                                      $dTypeable_sbc9r
                                                                      dt_sbc9u
                                                                      ww1_sbc9F
                                                                      ww2_sbc9G
                                                                      ww3_sbc9H] \r [void_0E]
                                                                case
                                                                    readMutVar# [dt_sbc9u
                                                                                 GHC.Prim.void#]
                                                                of
                                                                { Unit# ipv3_sbc9W [Occ=Once!] ->
                                                                      case
                                                                          ipv3_sbc9W
                                                                      of
                                                                      wild4_sbc9X
                                                                      { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                             _ [Occ=Dead]
                                                                                             _ [Occ=Dead]
                                                                                             dt12_sbca1 [Occ=Once]
                                                                                             dt13_sbca2
                                                                                             dt14_sbca3 ->
                                                                            case
                                                                                ==# [dt13_sbca2
                                                                                     dt14_sbca3]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      -# [dt14_sbca3
                                                                                          dt13_sbca2]
                                                                                  of
                                                                                  y1_sbca5 [Dmd=<S,U>]
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            <=# [wild_sbc9j
                                                                                                 y1_sbca5]
                                                                                        of
                                                                                        { __DEFAULT ->
                                                                                              let {
                                                                                                sat_sbca7 [Occ=Once]
                                                                                                  :: GHC.Types.Int
                                                                                                [LclId] =
                                                                                                    CCCS GHC.Types.I#! [y1_sbca5];
                                                                                              } in 
                                                                                                GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                                    wild2_sbc9o
                                                                                                    wild4_sbc9X
                                                                                                    w1_sbc9g
                                                                                                    GHC.IO.Handle.Text.hGetBuf3
                                                                                                    sat_sbca7
                                                                                                    GHC.Prim.void#;
                                                                                          1# ->
                                                                                              GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                                  wild2_sbc9o
                                                                                                  wild4_sbc9X
                                                                                                  w1_sbc9g
                                                                                                  GHC.IO.Handle.Text.hGetBuf3
                                                                                                  wild1_sbc9l
                                                                                                  GHC.Prim.void#;
                                                                                        };
                                                                                  };
                                                                              1# ->
                                                                                  let-no-escape {
                                                                                    fail_sbca8 [Occ=Once*!T[1],
                                                                                                Dmd=<L,1*C1(U(U,U))>]
                                                                                      :: GHC.Prim.Void#
                                                                                         -> (# GHC.Prim.State#
                                                                                                 GHC.Prim.RealWorld,
                                                                                               GHC.Types.Int #)
                                                                                    [LclId[JoinId(1)],
                                                                                     Arity=1,
                                                                                     Str=<L,A>,
                                                                                     Unf=OtherCon []] =
                                                                                        sat-only [w1_sbc9g
                                                                                                  wild_sbc9j
                                                                                                  wild1_sbc9l
                                                                                                  wild2_sbc9o
                                                                                                  $dBufferedIO_sbc9q
                                                                                                  dt_sbc9u
                                                                                                  ww1_sbc9F
                                                                                                  wild4_sbc9X] \r [void_0E]
                                                                                            case
                                                                                                GHC.IO.BufferedIO.fillReadBuffer
                                                                                                    $dBufferedIO_sbc9q
                                                                                                    ww1_sbc9F
                                                                                                    wild4_sbc9X
                                                                                                    GHC.Prim.void#
                                                                                            of
                                                                                            { Unit# ipv5_sbcac [Occ=Once!] ->
                                                                                                  case
                                                                                                      ipv5_sbcac
                                                                                                  of
                                                                                                  { (,) r_sbcae [Occ=Once!]
                                                                                                        buf'_sbcaf ->
                                                                                                        case
                                                                                                            r_sbcae
                                                                                                        of
                                                                                                        wild6_sbcag
                                                                                                        { GHC.Types.I# x_sbcah [Occ=Once!] ->
                                                                                                              case
                                                                                                                  x_sbcah
                                                                                                              of
                                                                                                              wild7_sbcai
                                                                                                              { __DEFAULT ->
                                                                                                                    case
                                                                                                                        writeMutVar# [dt_sbc9u
                                                                                                                                      buf'_sbcaf
                                                                                                                                      GHC.Prim.void#]
                                                                                                                    of
                                                                                                                    s2#_sbcaj
                                                                                                                    { (##) ->
                                                                                                                          case
                                                                                                                              <=# [wild7_sbcai
                                                                                                                                   wild_sbc9j]
                                                                                                                          of
                                                                                                                          { __DEFAULT ->
                                                                                                                                GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                                                                    wild2_sbc9o
                                                                                                                                    buf'_sbcaf
                                                                                                                                    w1_sbc9g
                                                                                                                                    GHC.IO.Handle.Text.hGetBuf3
                                                                                                                                    wild1_sbc9l
                                                                                                                                    GHC.Prim.void#;
                                                                                                                            1# ->
                                                                                                                                GHC.IO.Handle.Text.hGetBufNonBlocking2
                                                                                                                                    wild2_sbc9o
                                                                                                                                    buf'_sbcaf
                                                                                                                                    w1_sbc9g
                                                                                                                                    GHC.IO.Handle.Text.hGetBuf3
                                                                                                                                    wild6_sbcag
                                                                                                                                    GHC.Prim.void#;
                                                                                                                          };
                                                                                                                    };
                                                                                                                0# ->
                                                                                                                    Unit# [GHC.IO.Handle.Text.hGetBuf3];
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                  } in 
                                                                                    case
                                                                                        ># [wild_sbc9j
                                                                                            dt12_sbca1]
                                                                                    of
                                                                                    { __DEFAULT ->
                                                                                          fail_sbca8
                                                                                              GHC.Prim.void#;
                                                                                      1# ->
                                                                                          case
                                                                                              Data.Typeable.Internal.sameTypeRep
                                                                                                  $dTypeable_sbc9r
                                                                                                  lvl11_rb6WR
                                                                                          of
                                                                                          { GHC.Types.False ->
                                                                                                fail_sbca8
                                                                                                    GHC.Prim.void#;
                                                                                            GHC.Types.True ->
                                                                                                case
                                                                                                    w1_sbc9g
                                                                                                of
                                                                                                { GHC.Ptr.Ptr ww5_sbcao [Occ=Once] ->
                                                                                                      case
                                                                                                          int2Word# [wild_sbc9j]
                                                                                                      of
                                                                                                      sat_sbcap
                                                                                                      { __DEFAULT ->
                                                                                                            GHC.IO.FD.$wreadRawBufferPtr
                                                                                                                GHC.IO.FD.$fBufferedIOFD12
                                                                                                                ww2_sbc9G
                                                                                                                ww3_sbc9H
                                                                                                                ww5_sbcao
                                                                                                                0#
                                                                                                                sat_sbcap
                                                                                                                GHC.Prim.void#;
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                            };
                                                                      };
                                                                };
                                                      } in 
                                                        case ds11_sbc9O of {
                                                          GHC.IO.Buffer.ReadBuffer ->
                                                              case ==# [dt7_sbc9Q dt8_sbc9R] of {
                                                                __DEFAULT ->
                                                                    case
                                                                        readMutVar# [dt1_sbc9w
                                                                                     GHC.Prim.void#]
                                                                    of
                                                                    { Unit# ipv3_sbcau [Occ=Once!] ->
                                                                          case ipv3_sbcau of {
                                                                            (,) codec_state_sbcaw [Occ=Once]
                                                                                bbuf0_sbcax [Occ=Once*] ->
                                                                                case
                                                                                    readMutVar# [dt2_sbc9x
                                                                                                 GHC.Prim.void#]
                                                                                of
                                                                                { Unit# ipv5_sbcaA ->
                                                                                      let {
                                                                                        sat_sbcaI [Occ=Once]
                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                        [LclId] =
                                                                                            [ipv5_sbcaA] \u []
                                                                                                case
                                                                                                    ipv5_sbcaA
                                                                                                of
                                                                                                { GHC.IO.Buffer.Buffer dt9_sbcaC [Occ=Once]
                                                                                                                       dt10_sbcaD [Occ=Once]
                                                                                                                       ds14_sbcaE [Occ=Once]
                                                                                                                       dt11_sbcaF [Occ=Once]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       _ [Occ=Dead] ->
                                                                                                      GHC.IO.Buffer.Buffer [dt9_sbcaC
                                                                                                                            dt10_sbcaD
                                                                                                                            ds14_sbcaE
                                                                                                                            dt11_sbcaF
                                                                                                                            0#
                                                                                                                            0#];
                                                                                                };
                                                                                      } in 
                                                                                        case
                                                                                            writeMutVar# [dt2_sbc9x
                                                                                                          sat_sbcaI
                                                                                                          GHC.Prim.void#]
                                                                                        of
                                                                                        s2#_sbcaJ
                                                                                        { (##) ->
                                                                                              case
                                                                                                  ipv5_sbcaA
                                                                                              of
                                                                                              { GHC.IO.Buffer.Buffer dt9_sbcaL [Occ=Once]
                                                                                                                     dt10_sbcaM [Occ=Once]
                                                                                                                     ds14_sbcaN [Occ=Once]
                                                                                                                     _ [Occ=Dead]
                                                                                                                     dt12_sbcaP [Occ=Once!]
                                                                                                                     _ [Occ=Dead] ->
                                                                                                    case
                                                                                                        dt12_sbcaP
                                                                                                    of
                                                                                                    wild7_sbcaR
                                                                                                    { __DEFAULT ->
                                                                                                          case
                                                                                                              ds4_sbc9A
                                                                                                          of
                                                                                                          { GHC.Base.Nothing ->
                                                                                                                let {
                                                                                                                  sat_sbcb1 [Occ=Once]
                                                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                                                         GHC.Word.Word8
                                                                                                                  [LclId] =
                                                                                                                      [bbuf0_sbcax
                                                                                                                       wild7_sbcaR] \u []
                                                                                                                          case
                                                                                                                              bbuf0_sbcax
                                                                                                                          of
                                                                                                                          { GHC.IO.Buffer.Buffer dt14_sbcaU [Occ=Once]
                                                                                                                                                 dt15_sbcaV [Occ=Once]
                                                                                                                                                 ds15_sbcaW [Occ=Once]
                                                                                                                                                 dt16_sbcaX [Occ=Once]
                                                                                                                                                 dt17_sbcaY [Occ=Once]
                                                                                                                                                 dt18_sbcaZ [Occ=Once] ->
                                                                                                                                case
                                                                                                                                    +# [dt17_sbcaY
                                                                                                                                        wild7_sbcaR]
                                                                                                                                of
                                                                                                                                sat_sbcb0
                                                                                                                                { __DEFAULT ->
                                                                                                                                      GHC.IO.Buffer.Buffer [dt14_sbcaU
                                                                                                                                                            dt15_sbcaV
                                                                                                                                                            ds15_sbcaW
                                                                                                                                                            dt16_sbcaX
                                                                                                                                                            sat_sbcb0
                                                                                                                                                            dt18_sbcaZ];
                                                                                                                                };
                                                                                                                          };
                                                                                                                } in 
                                                                                                                  case
                                                                                                                      writeMutVar# [dt_sbc9u
                                                                                                                                    sat_sbcb1
                                                                                                                                    GHC.Prim.void#]
                                                                                                                  of
                                                                                                                  s2#1_sbcb2
                                                                                                                  { (##) ->
                                                                                                                        $w$j_sbc9S
                                                                                                                            GHC.Prim.void#;
                                                                                                                  };
                                                                                                            GHC.Base.Just decoder_sbcb3 [Occ=Once!] ->
                                                                                                                case
                                                                                                                    decoder_sbcb3
                                                                                                                of
                                                                                                                { GHC.IO.Encoding.Types.BufferCodec ds15_sbcb5 [Occ=Once]
                                                                                                                                                    ds16_sbcb6 [Occ=Once]
                                                                                                                                                    _ [Occ=Dead]
                                                                                                                                                    _ [Occ=Dead]
                                                                                                                                                    ds19_sbcb9 [Occ=Once!] ->
                                                                                                                      case
                                                                                                                          ds19_sbcb9
                                                                                                                              codec_state_sbcaw
                                                                                                                              GHC.Prim.void#
                                                                                                                      of
                                                                                                                      { Unit# _ [Occ=Dead] ->
                                                                                                                            let {
                                                                                                                              sat_sbcbd [Occ=Once]
                                                                                                                                :: GHC.IO.Buffer.Buffer
                                                                                                                                     GHC.IO.Buffer.CharBufElem
                                                                                                                              [LclId] =
                                                                                                                                  CCCS GHC.IO.Buffer.Buffer! [dt9_sbcaL
                                                                                                                                                              dt10_sbcaM
                                                                                                                                                              ds14_sbcaN
                                                                                                                                                              wild7_sbcaR
                                                                                                                                                              0#
                                                                                                                                                              0#];
                                                                                                                            } in 
                                                                                                                              case
                                                                                                                                  GHC.IO.Handle.Internals.$wstreamEncode
                                                                                                                                      ds15_sbcb5
                                                                                                                                      ds16_sbcb6
                                                                                                                                      bbuf0_sbcax
                                                                                                                                      sat_sbcbd
                                                                                                                                      GHC.Prim.void#
                                                                                                                              of
                                                                                                                              { Unit# ipv9_sbcbg [Occ=Once!] ->
                                                                                                                                    case
                                                                                                                                        ipv9_sbcbg
                                                                                                                                    of
                                                                                                                                    { (,) bbuf1_sbcbi [Occ=Once]
                                                                                                                                          _ [Occ=Dead] ->
                                                                                                                                          case
                                                                                                                                              writeMutVar# [dt_sbc9u
                                                                                                                                                            bbuf1_sbcbi
                                                                                                                                                            GHC.Prim.void#]
                                                                                                                                          of
                                                                                                                                          s2#1_sbcbk
                                                                                                                                          { (##) ->
                                                                                                                                                $w$j_sbc9S
                                                                                                                                                    GHC.Prim.void#;
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              };
                                                                                                                      };
                                                                                                                };
                                                                                                          };
                                                                                                      0# ->
                                                                                                          case
                                                                                                              writeMutVar# [dt_sbc9u
                                                                                                                            bbuf0_sbcax
                                                                                                                            GHC.Prim.void#]
                                                                                                          of
                                                                                                          s2#1_sbcbl
                                                                                                          { (##) ->
                                                                                                                $w$j_sbc9S
                                                                                                                    GHC.Prim.void#;
                                                                                                          };
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                };
                                                                          };
                                                                    };
                                                                1# -> $w$j_sbc9S GHC.Prim.void#;
                                                              };
                                                          GHC.IO.Buffer.WriteBuffer ->
                                                              $w$j_sbc9S GHC.Prim.void#;
                                                        };
                                                };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.Handle.Internals.wantReadableHandle_1
                          lvl13_rb6WT w_sbc9f sat_sbcbm GHC.Prim.void#;
                1# ->
                    GHC.IO.Handle.Text.$willegalBufferSize
                        w_sbc9f lvl13_rb6WT wild_sbc9j GHC.Prim.void#;
              };
          0# -> Unit# [GHC.IO.Handle.Text.hGetBuf3];
        };

GHC.IO.Handle.Text.hGetBufSome1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbcbn w1_sbcbo w2_sbcbp void_0E]
        case w2_sbcbp of {
          GHC.Types.I# ww1_sbcbs [Occ=Once] ->
              GHC.IO.Handle.Text.$whGetBufSome
                  w_sbcbn w1_sbcbo ww1_sbcbs GHC.Prim.void#;
        };

GHC.IO.Handle.Text.hGetBufSome
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.Handle.Text.hGetBufSome1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Handle.Text.hGetBuf4
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<S,1*U><S(SLLLSS),1*U(U,U,U,U,U,U)><S(S),1*U(U)><S,1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [h__sbcbt
           buf_sbcbu
           ptr_sbcbv
           so_far_sbcbw
           count_sbcbx
           void_0E]
        case h__sbcbt of wild_sbcbz {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       dt_sbcbF [Occ=Once*]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case buf_sbcbu of {
                GHC.IO.Buffer.Buffer dt4_sbcbR
                                     dt5_sbcbS
                                     ds9_sbcbT [Occ=OnceL*]
                                     dt6_sbcbU [Occ=OnceL*]
                                     dt7_sbcbV
                                     dt8_sbcbW ->
                    case so_far_sbcbw of {
                      GHC.Types.I# ipv_sbcbY [Occ=Once*] ->
                          case count_sbcbx of {
                            GHC.Types.I# ipv1_sbcc0 ->
                                case -# [dt8_sbcbW dt7_sbcbV] of avail_sbcc1 [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      case <# [ipv1_sbcc0 avail_sbcc1] of {
                                        __DEFAULT ->
                                            case ptr_sbcbv of {
                                              GHC.Ptr.Ptr ds11_sbcc4 ->
                                                  case int2Word# [avail_sbcc1] of sat_sbcc7 {
                                                    __DEFAULT ->
                                                        case
                                                            plusAddr# [dt4_sbcbR dt7_sbcbV]
                                                        of
                                                        sat_sbcc6
                                                        { __DEFAULT ->
                                                              case
                                                                  __pkg_ccall base-4.11.0.0 [ds11_sbcc4
                                                                                             sat_sbcc6
                                                                                             sat_sbcc7
                                                                                             GHC.Prim.void#]
                                                              of
                                                              { Unit# _ [Occ=Dead] ->
                                                                    case
                                                                        touch# [dt5_sbcbS
                                                                                GHC.Prim.void#]
                                                                    of
                                                                    s'_sbccb
                                                                    { (##) ->
                                                                          let {
                                                                            buf'_sbccc [Dmd=<L,U(U,U,U,U,U,U)>]
                                                                              :: GHC.IO.Buffer.Buffer
                                                                                   GHC.Word.Word8
                                                                            [LclId,
                                                                             Unf=OtherCon []] =
                                                                                CCCS GHC.IO.Buffer.Buffer! [dt4_sbcbR
                                                                                                            dt5_sbcbS
                                                                                                            ds9_sbcbT
                                                                                                            dt6_sbcbU
                                                                                                            0#
                                                                                                            0#];
                                                                          } in 
                                                                            case
                                                                                writeMutVar# [dt_sbcbF
                                                                                              buf'_sbccc
                                                                                              GHC.Prim.void#]
                                                                            of
                                                                            s2#_sbccd
                                                                            { (##) ->
                                                                                  case
                                                                                      -# [ipv1_sbcc0
                                                                                          avail_sbcc1]
                                                                                  of
                                                                                  wild3_sbcce
                                                                                  { __DEFAULT ->
                                                                                        let {
                                                                                          sat_sbccj [Occ=Once]
                                                                                            :: GHC.Types.Int
                                                                                          [LclId] =
                                                                                              CCCS GHC.Types.I#! [wild3_sbcce];
                                                                                        } in 
                                                                                          case
                                                                                              +# [ipv_sbcbY
                                                                                                  avail_sbcc1]
                                                                                          of
                                                                                          sat_sbcch
                                                                                          { __DEFAULT ->
                                                                                                let {
                                                                                                  sat_sbcci [Occ=Once]
                                                                                                    :: GHC.Types.Int
                                                                                                  [LclId] =
                                                                                                      CCCS GHC.Types.I#! [sat_sbcch];
                                                                                                } in 
                                                                                                  case
                                                                                                      plusAddr# [ds11_sbcc4
                                                                                                                 avail_sbcc1]
                                                                                                  of
                                                                                                  sat_sbccf
                                                                                                  { __DEFAULT ->
                                                                                                        let {
                                                                                                          sat_sbccg [Occ=Once]
                                                                                                            :: GHC.Ptr.Ptr
                                                                                                                 GHC.Word.Word8
                                                                                                          [LclId] =
                                                                                                              CCCS GHC.Ptr.Ptr! [sat_sbccf];
                                                                                                        } in 
                                                                                                          GHC.IO.Handle.Text.hGetBuf2
                                                                                                              wild_sbcbz
                                                                                                              buf'_sbccc
                                                                                                              sat_sbccg
                                                                                                              sat_sbcci
                                                                                                              sat_sbccj
                                                                                                              GHC.Prim.void#;
                                                                                                  };
                                                                                          };
                                                                                    0# ->
                                                                                        case
                                                                                            +# [ipv_sbcbY
                                                                                                avail_sbcc1]
                                                                                        of
                                                                                        sat_sbcck
                                                                                        { __DEFAULT ->
                                                                                              let {
                                                                                                sat_sbccl [Occ=Once]
                                                                                                  :: GHC.Types.Int
                                                                                                [LclId] =
                                                                                                    CCCS GHC.Types.I#! [sat_sbcck];
                                                                                              } in 
                                                                                                Unit# [sat_sbccl];
                                                                                        };
                                                                                  };
                                                                            };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                        1# ->
                                            case ptr_sbcbv of {
                                              GHC.Ptr.Ptr ds11_sbccn [Occ=Once] ->
                                                  case int2Word# [ipv1_sbcc0] of sat_sbccq {
                                                    __DEFAULT ->
                                                        case
                                                            plusAddr# [dt4_sbcbR dt7_sbcbV]
                                                        of
                                                        sat_sbccp
                                                        { __DEFAULT ->
                                                              case
                                                                  __pkg_ccall base-4.11.0.0 [ds11_sbccn
                                                                                             sat_sbccp
                                                                                             sat_sbccq
                                                                                             GHC.Prim.void#]
                                                              of
                                                              { Unit# _ [Occ=Dead] ->
                                                                    case
                                                                        touch# [dt5_sbcbS
                                                                                GHC.Prim.void#]
                                                                    of
                                                                    s'_sbccu
                                                                    { (##) ->
                                                                          case
                                                                              +# [dt7_sbcbV
                                                                                  ipv1_sbcc0]
                                                                          of
                                                                          sat_sbccv
                                                                          { __DEFAULT ->
                                                                                let {
                                                                                  sat_sbccw [Occ=Once]
                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                         GHC.Word.Word8
                                                                                  [LclId] =
                                                                                      CCCS GHC.IO.Buffer.Buffer! [dt4_sbcbR
                                                                                                                  dt5_sbcbS
                                                                                                                  ds9_sbcbT
                                                                                                                  dt6_sbcbU
                                                                                                                  sat_sbccv
                                                                                                                  dt8_sbcbW];
                                                                                } in 
                                                                                  case
                                                                                      writeMutVar# [dt_sbcbF
                                                                                                    sat_sbccw
                                                                                                    GHC.Prim.void#]
                                                                                  of
                                                                                  s2#_sbccx
                                                                                  { (##) ->
                                                                                        case
                                                                                            +# [ipv_sbcbY
                                                                                                ipv1_sbcc0]
                                                                                        of
                                                                                        sat_sbccy
                                                                                        { __DEFAULT ->
                                                                                              let {
                                                                                                sat_sbccz [Occ=Once]
                                                                                                  :: GHC.Types.Int
                                                                                                [LclId] =
                                                                                                    CCCS GHC.Types.I#! [sat_sbccy];
                                                                                              } in 
                                                                                                Unit# [sat_sbccz];
                                                                                        };
                                                                                  };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };
GHC.IO.Handle.Text.hGetBuf2 [Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.IO.Buffer.Buffer GHC.Word.Word8
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=6,
 Str=<S,1*U><S(LLLSLL),1*U(U,U,U,U,U,U)><L,U(U)><L,U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [h__sbccA
           buf_sbccB
           ptr_sbccC
           so_far_sbccD
           count_sbccE
           void_0E]
        case h__sbccA of wild_sbccG {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       $dBufferedIO_sbccI [Occ=Once]
                                       $dTypeable_sbccJ [Occ=Once]
                                       ds_sbccK
                                       _ [Occ=Dead]
                                       dt_sbccM [Occ=Once]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case buf_sbccB of wild1_sbccX {
                GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     dt6_sbcd1 [Occ=Once]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead] ->
                    case count_sbccE of wild2_sbcd4 {
                      GHC.Types.I# x_sbcd5 ->
                          let-no-escape {
                            fail_sbcd6 [Occ=Once*!T[1], Dmd=<L,1*C1(U(U,U))>]
                              :: GHC.Prim.Void#
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                            [LclId[JoinId(1)], Arity=1, Str=<L,A>, Unf=OtherCon []] =
                                sat-only [ptr_sbccC
                                          so_far_sbccD
                                          wild_sbccG
                                          $dBufferedIO_sbccI
                                          ds_sbccK
                                          dt_sbccM
                                          wild1_sbccX
                                          wild2_sbcd4] \r [void_0E]
                                    case
                                        GHC.IO.BufferedIO.fillReadBuffer
                                            $dBufferedIO_sbccI ds_sbccK wild1_sbccX GHC.Prim.void#
                                    of
                                    { Unit# ipv1_sbcda [Occ=Once!] ->
                                          case ipv1_sbcda of {
                                            (,) r_sbcdc [Occ=Once!] buf'_sbcdd ->
                                                case r_sbcdc of {
                                                  GHC.Types.I# x1_sbcdf [Occ=Once!] ->
                                                      case x1_sbcdf of {
                                                        __DEFAULT ->
                                                            case
                                                                writeMutVar# [dt_sbccM
                                                                              buf'_sbcdd
                                                                              GHC.Prim.void#]
                                                            of
                                                            s2#_sbcdh
                                                            { (##) ->
                                                                  GHC.IO.Handle.Text.hGetBuf4
                                                                      wild_sbccG
                                                                      buf'_sbcdd
                                                                      ptr_sbccC
                                                                      so_far_sbccD
                                                                      wild2_sbcd4
                                                                      GHC.Prim.void#;
                                                            };
                                                        0# -> Unit# [so_far_sbccD];
                                                      };
                                                };
                                          };
                                    };
                          } in 
                            case ># [x_sbcd5 dt6_sbcd1] of {
                              __DEFAULT -> fail_sbcd6 GHC.Prim.void#;
                              1# ->
                                  case
                                      Data.Typeable.Internal.sameTypeRep
                                          $dTypeable_sbccJ lvl11_rb6WR
                                  of
                                  { GHC.Types.False -> fail_sbcd6 GHC.Prim.void#;
                                    GHC.Types.True ->
                                        let-no-escape {
                                          exit_sbcdk [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
                                            :: GHC.Prim.Int#
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                     GHC.Types.Int #)
                                          [LclId[JoinId(2)],
                                           Arity=2,
                                           Str=<L,U><S,U>,
                                           Unf=OtherCon []] =
                                              sat-only [so_far_sbccD] \r [d_sbcdl void_0E]
                                                  let {
                                                    sat_sbcdq [Occ=Once] :: GHC.Types.Int
                                                    [LclId] =
                                                        [so_far_sbccD d_sbcdl] \u []
                                                            case so_far_sbccD of {
                                                              GHC.Types.I# x1_sbcdo [Occ=Once] ->
                                                                  case
                                                                      +# [x1_sbcdo d_sbcdl]
                                                                  of
                                                                  sat_sbcdp
                                                                  { __DEFAULT ->
                                                                        GHC.Types.I# [sat_sbcdp];
                                                                  };
                                                            };
                                                  } in  Unit# [sat_sbcdq];
                                        } in 
                                          let-no-escape {
                                            exit1_sbcdr [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
                                              :: GHC.Types.Int
                                                 -> GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Types.Int #)
                                            [LclId[JoinId(2)],
                                             Arity=2,
                                             Str=<L,1*U(U)><S,U>,
                                             Unf=OtherCon []] =
                                                sat-only [so_far_sbccD] \r [w_sbcds void_0E]
                                                    let {
                                                      sat_sbcdu [Occ=Once] :: GHC.Types.Int
                                                      [LclId] =
                                                          [so_far_sbccD w_sbcds] \u []
                                                              GHC.Num.$fNumInt_$c+
                                                                  so_far_sbccD w_sbcds;
                                                    } in  Unit# [sat_sbcdu];
                                          } in 
                                            let-no-escape {
                                              $wloop_sbcdv [InlPrag=NOUSERINLINE[0],
                                                            Occ=LoopBreakerT[4]]
                                                :: GHC.IO.FD.FD
                                                   -> GHC.Types.Int
                                                   -> GHC.Prim.Int#
                                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         GHC.Types.Int #)
                                              [LclId[JoinId(4)],
                                               Arity=4,
                                               Str=<L,1*U(U,U)><L,1*U(U)><S,U><S,U>,
                                               Unf=OtherCon []] =
                                                  sat-only [ptr_sbccC
                                                            exit_sbcdk
                                                            exit1_sbcdr
                                                            $wloop_sbcdv] \r [w_sbcdw
                                                                              w1_sbcdx
                                                                              ww_sbcdy
                                                                              void_0E]
                                                      case <=# [ww_sbcdy 0#] of {
                                                        __DEFAULT ->
                                                            case ptr_sbccC of {
                                                              GHC.Ptr.Ptr addr_sbcdC [Occ=Once] ->
                                                                  case w1_sbcdx of {
                                                                    GHC.Types.I# d_sbcdE ->
                                                                        case w_sbcdw of ww1_sbcdF {
                                                                          GHC.IO.FD.FD ww2_sbcdG [Occ=Once]
                                                                                       ww3_sbcdH [Occ=Once] ->
                                                                              case
                                                                                  int2Word# [ww_sbcdy]
                                                                              of
                                                                              sat_sbcdJ
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        plusAddr# [addr_sbcdC
                                                                                                   d_sbcdE]
                                                                                    of
                                                                                    sat_sbcdI
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              GHC.IO.FD.$wreadRawBufferPtr
                                                                                                  GHC.IO.FD.$fBufferedIOFD12
                                                                                                  ww2_sbcdG
                                                                                                  ww3_sbcdH
                                                                                                  sat_sbcdI
                                                                                                  0#
                                                                                                  sat_sbcdJ
                                                                                                  GHC.Prim.void#
                                                                                          of
                                                                                          { Unit# ipv1_sbcdM [Occ=Once!] ->
                                                                                                case
                                                                                                    ipv1_sbcdM
                                                                                                of
                                                                                                { GHC.Types.I# x1_sbcdO [Occ=Once!] ->
                                                                                                      case
                                                                                                          x1_sbcdO
                                                                                                      of
                                                                                                      wild7_sbcdP
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                -# [ww_sbcdy
                                                                                                                    wild7_sbcdP]
                                                                                                            of
                                                                                                            sat_sbcdS
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      +# [d_sbcdE
                                                                                                                          wild7_sbcdP]
                                                                                                                  of
                                                                                                                  sat_sbcdQ
                                                                                                                  { __DEFAULT ->
                                                                                                                        let {
                                                                                                                          sat_sbcdR [Occ=Once]
                                                                                                                            :: GHC.Types.Int
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Types.I#! [sat_sbcdQ];
                                                                                                                        } in 
                                                                                                                          $wloop_sbcdv
                                                                                                                              ww1_sbcdF
                                                                                                                              sat_sbcdR
                                                                                                                              sat_sbcdS
                                                                                                                              GHC.Prim.void#;
                                                                                                                  };
                                                                                                            };
                                                                                                        0# ->
                                                                                                            exit_sbcdk
                                                                                                                d_sbcdE
                                                                                                                GHC.Prim.void#;
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                        1# -> exit1_sbcdr w1_sbcdx GHC.Prim.void#;
                                                      };
                                            } in 
                                              $wloop_sbcdv
                                                  ds_sbccK
                                                  GHC.IO.Handle.Text.hGetBuf3
                                                  x_sbcd5
                                                  GHC.Prim.void#;
                                  };
                            };
                    };
              };
        };

GHC.IO.Handle.Text.hGetBuf6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hGetBuf"#;

GHC.IO.Handle.Text.hGetBuf5 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hGetBuf6;

GHC.IO.Handle.Text.$whGetBuf [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId, Arity=4, Str=<L,U><L,U(U)><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [w_sbcdT w1_sbcdU ww_sbcdV void_0E]
        case ww_sbcdV of wild_sbcdX {
          __DEFAULT ->
              case <# [wild_sbcdX 0#] of {
                __DEFAULT ->
                    let {
                      wild1_sbcdZ [Occ=OnceL*, Dmd=<L,U(U)>] :: GHC.Types.Int
                      [LclId, Unf=OtherCon []] =
                          CCCS GHC.Types.I#! [wild_sbcdX]; } in
                    let {
                      sat_sbcfC [Occ=Once]
                        :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Int
                      [LclId] =
                          [w1_sbcdU wild1_sbcdZ] \r [h__sbce0 void_0E]
                              case h__sbce0 of wild2_sbce2 {
                                GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             dt_sbce8
                                                             _ [Occ=Dead]
                                                             dt1_sbcea [Occ=Once]
                                                             dt2_sbceb
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             ds4_sbcee [Occ=Once!]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                    case readMutVar# [dt2_sbceb GHC.Prim.void#] of {
                                      Unit# ipv1_sbcel [Occ=Once!] ->
                                          case ipv1_sbcel of {
                                            GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                 _ [Occ=Dead]
                                                                 ds11_sbcep [Occ=Once!]
                                                                 _ [Occ=Dead]
                                                                 dt7_sbcer [Occ=Once]
                                                                 dt8_sbces [Occ=Once] ->
                                                let-no-escape {
                                                  $w$j_sbcet [InlPrag=NOUSERINLINE[0],
                                                              Occ=Once*!T[1],
                                                              Dmd=<L,1*C1(U(U,U))>]
                                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Types.Int #)
                                                  [LclId[JoinId(1)],
                                                   Arity=1,
                                                   Str=<S,U>,
                                                   Unf=OtherCon []] =
                                                      sat-only [w1_sbcdU
                                                                wild1_sbcdZ
                                                                wild2_sbce2
                                                                dt_sbce8] \r [void_0E]
                                                          case
                                                              readMutVar# [dt_sbce8 GHC.Prim.void#]
                                                          of
                                                          { Unit# ipv3_sbcex [Occ=Once!] ->
                                                                case ipv3_sbcex of wild4_sbcey {
                                                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       _ [Occ=Dead]
                                                                                       dt13_sbceD [Occ=Once]
                                                                                       dt14_sbceE [Occ=Once] ->
                                                                      case
                                                                          ==# [dt13_sbceD
                                                                               dt14_sbceE]
                                                                      of
                                                                      { __DEFAULT ->
                                                                            GHC.IO.Handle.Text.hGetBuf4
                                                                                wild2_sbce2
                                                                                wild4_sbcey
                                                                                w1_sbcdU
                                                                                GHC.IO.Handle.Text.hGetBuf3
                                                                                wild1_sbcdZ
                                                                                GHC.Prim.void#;
                                                                        1# ->
                                                                            GHC.IO.Handle.Text.hGetBuf2
                                                                                wild2_sbce2
                                                                                wild4_sbcey
                                                                                w1_sbcdU
                                                                                GHC.IO.Handle.Text.hGetBuf3
                                                                                wild1_sbcdZ
                                                                                GHC.Prim.void#;
                                                                      };
                                                                };
                                                          };
                                                } in 
                                                  case ds11_sbcep of {
                                                    GHC.IO.Buffer.ReadBuffer ->
                                                        case ==# [dt7_sbcer dt8_sbces] of {
                                                          __DEFAULT ->
                                                              case
                                                                  readMutVar# [dt1_sbcea
                                                                               GHC.Prim.void#]
                                                              of
                                                              { Unit# ipv3_sbceK [Occ=Once!] ->
                                                                    case ipv3_sbceK of {
                                                                      (,) codec_state_sbceM [Occ=Once]
                                                                          bbuf0_sbceN [Occ=Once*] ->
                                                                          case
                                                                              readMutVar# [dt2_sbceb
                                                                                           GHC.Prim.void#]
                                                                          of
                                                                          { Unit# ipv5_sbceQ ->
                                                                                let {
                                                                                  sat_sbceY [Occ=Once]
                                                                                    :: GHC.IO.Buffer.Buffer
                                                                                         GHC.IO.Buffer.CharBufElem
                                                                                  [LclId] =
                                                                                      [ipv5_sbceQ] \u []
                                                                                          case
                                                                                              ipv5_sbceQ
                                                                                          of
                                                                                          { GHC.IO.Buffer.Buffer dt9_sbceS [Occ=Once]
                                                                                                                 dt10_sbceT [Occ=Once]
                                                                                                                 ds14_sbceU [Occ=Once]
                                                                                                                 dt11_sbceV [Occ=Once]
                                                                                                                 _ [Occ=Dead]
                                                                                                                 _ [Occ=Dead] ->
                                                                                                GHC.IO.Buffer.Buffer [dt9_sbceS
                                                                                                                      dt10_sbceT
                                                                                                                      ds14_sbceU
                                                                                                                      dt11_sbceV
                                                                                                                      0#
                                                                                                                      0#];
                                                                                          };
                                                                                } in 
                                                                                  case
                                                                                      writeMutVar# [dt2_sbceb
                                                                                                    sat_sbceY
                                                                                                    GHC.Prim.void#]
                                                                                  of
                                                                                  s2#_sbceZ
                                                                                  { (##) ->
                                                                                        case
                                                                                            ipv5_sbceQ
                                                                                        of
                                                                                        { GHC.IO.Buffer.Buffer dt9_sbcf1 [Occ=Once]
                                                                                                               dt10_sbcf2 [Occ=Once]
                                                                                                               ds14_sbcf3 [Occ=Once]
                                                                                                               _ [Occ=Dead]
                                                                                                               dt12_sbcf5 [Occ=Once!]
                                                                                                               _ [Occ=Dead] ->
                                                                                              case
                                                                                                  dt12_sbcf5
                                                                                              of
                                                                                              wild7_sbcf7
                                                                                              { __DEFAULT ->
                                                                                                    case
                                                                                                        ds4_sbcee
                                                                                                    of
                                                                                                    { GHC.Base.Nothing ->
                                                                                                          let {
                                                                                                            sat_sbcfh [Occ=Once]
                                                                                                              :: GHC.IO.Buffer.Buffer
                                                                                                                   GHC.Word.Word8
                                                                                                            [LclId] =
                                                                                                                [bbuf0_sbceN
                                                                                                                 wild7_sbcf7] \u []
                                                                                                                    case
                                                                                                                        bbuf0_sbceN
                                                                                                                    of
                                                                                                                    { GHC.IO.Buffer.Buffer dt14_sbcfa [Occ=Once]
                                                                                                                                           dt15_sbcfb [Occ=Once]
                                                                                                                                           ds15_sbcfc [Occ=Once]
                                                                                                                                           dt16_sbcfd [Occ=Once]
                                                                                                                                           dt17_sbcfe [Occ=Once]
                                                                                                                                           dt18_sbcff [Occ=Once] ->
                                                                                                                          case
                                                                                                                              +# [dt17_sbcfe
                                                                                                                                  wild7_sbcf7]
                                                                                                                          of
                                                                                                                          sat_sbcfg
                                                                                                                          { __DEFAULT ->
                                                                                                                                GHC.IO.Buffer.Buffer [dt14_sbcfa
                                                                                                                                                      dt15_sbcfb
                                                                                                                                                      ds15_sbcfc
                                                                                                                                                      dt16_sbcfd
                                                                                                                                                      sat_sbcfg
                                                                                                                                                      dt18_sbcff];
                                                                                                                          };
                                                                                                                    };
                                                                                                          } in 
                                                                                                            case
                                                                                                                writeMutVar# [dt_sbce8
                                                                                                                              sat_sbcfh
                                                                                                                              GHC.Prim.void#]
                                                                                                            of
                                                                                                            s2#1_sbcfi
                                                                                                            { (##) ->
                                                                                                                  $w$j_sbcet
                                                                                                                      GHC.Prim.void#;
                                                                                                            };
                                                                                                      GHC.Base.Just decoder_sbcfj [Occ=Once!] ->
                                                                                                          case
                                                                                                              decoder_sbcfj
                                                                                                          of
                                                                                                          { GHC.IO.Encoding.Types.BufferCodec ds15_sbcfl [Occ=Once]
                                                                                                                                              ds16_sbcfm [Occ=Once]
                                                                                                                                              _ [Occ=Dead]
                                                                                                                                              _ [Occ=Dead]
                                                                                                                                              ds19_sbcfp [Occ=Once!] ->
                                                                                                                case
                                                                                                                    ds19_sbcfp
                                                                                                                        codec_state_sbceM
                                                                                                                        GHC.Prim.void#
                                                                                                                of
                                                                                                                { Unit# _ [Occ=Dead] ->
                                                                                                                      let {
                                                                                                                        sat_sbcft [Occ=Once]
                                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                                                        [LclId] =
                                                                                                                            CCCS GHC.IO.Buffer.Buffer! [dt9_sbcf1
                                                                                                                                                        dt10_sbcf2
                                                                                                                                                        ds14_sbcf3
                                                                                                                                                        wild7_sbcf7
                                                                                                                                                        0#
                                                                                                                                                        0#];
                                                                                                                      } in 
                                                                                                                        case
                                                                                                                            GHC.IO.Handle.Internals.$wstreamEncode
                                                                                                                                ds15_sbcfl
                                                                                                                                ds16_sbcfm
                                                                                                                                bbuf0_sbceN
                                                                                                                                sat_sbcft
                                                                                                                                GHC.Prim.void#
                                                                                                                        of
                                                                                                                        { Unit# ipv9_sbcfw [Occ=Once!] ->
                                                                                                                              case
                                                                                                                                  ipv9_sbcfw
                                                                                                                              of
                                                                                                                              { (,) bbuf1_sbcfy [Occ=Once]
                                                                                                                                    _ [Occ=Dead] ->
                                                                                                                                    case
                                                                                                                                        writeMutVar# [dt_sbce8
                                                                                                                                                      bbuf1_sbcfy
                                                                                                                                                      GHC.Prim.void#]
                                                                                                                                    of
                                                                                                                                    s2#1_sbcfA
                                                                                                                                    { (##) ->
                                                                                                                                          $w$j_sbcet
                                                                                                                                              GHC.Prim.void#;
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                };
                                                                                                          };
                                                                                                    };
                                                                                                0# ->
                                                                                                    case
                                                                                                        writeMutVar# [dt_sbce8
                                                                                                                      bbuf0_sbceN
                                                                                                                      GHC.Prim.void#]
                                                                                                    of
                                                                                                    s2#1_sbcfB
                                                                                                    { (##) ->
                                                                                                          $w$j_sbcet
                                                                                                              GHC.Prim.void#;
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                          };
                                                                    };
                                                              };
                                                          1# -> $w$j_sbcet GHC.Prim.void#;
                                                        };
                                                    GHC.IO.Buffer.WriteBuffer ->
                                                        $w$j_sbcet GHC.Prim.void#;
                                                  };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.Handle.Internals.wantReadableHandle_1
                          GHC.IO.Handle.Text.hGetBuf5 w_sbcdT sat_sbcfC GHC.Prim.void#;
                1# ->
                    GHC.IO.Handle.Text.$willegalBufferSize
                        w_sbcdT GHC.IO.Handle.Text.hGetBuf5 wild_sbcdX GHC.Prim.void#;
              };
          0# -> Unit# [GHC.IO.Handle.Text.hGetBuf3];
        };

GHC.IO.Handle.Text.hGetBuf1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbcfD w1_sbcfE w2_sbcfF void_0E]
        case w2_sbcfF of {
          GHC.Types.I# ww1_sbcfI [Occ=Once] ->
              GHC.IO.Handle.Text.$whGetBuf
                  w_sbcfD w1_sbcfE ww1_sbcfI GHC.Prim.void#;
        };

GHC.IO.Handle.Text.hGetBuf
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.Handle.Text.hGetBuf1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

lvl14_rb6WU :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "error"#;

lvl15_rb6WV :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl14_rb6WU;

lvl16_rb6WW :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.$trModule4;

lvl17_rb6WX :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.$trModule2;

lvl18_rb6WY :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "./GHC/IO/Handle/Text.hs"#;

lvl19_rb6WZ :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl18_rb6WY;

lvl20_rb6X0 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [785#];

lvl21_rb6X1 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [17#];

lvl22_rb6X2 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [38#];

lvl23_rb6X3 :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl16_rb6WW
                                           lvl17_rb6WX
                                           lvl19_rb6WZ
                                           lvl20_rb6X0
                                           lvl21_rb6X1
                                           lvl20_rb6X0
                                           lvl22_rb6X2];

lvl24_rb6X4 :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl15_rb6WV
                                                  lvl23_rb6X3
                                                  GHC.Stack.Types.EmptyCallStack];

lvl25_rb6X5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Todo: hPutBuf"#;

lvl26_rb6X6 :: GHC.Types.IO ()
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl25_rb6X5 of sat_sbcfJ {
          __DEFAULT -> GHC.Err.error lvl24_rb6X4 sat_sbcfJ;
        };

lvl27_rb6X7 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [790#];

lvl28_rb6X8 :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl16_rb6WW
                                           lvl17_rb6WX
                                           lvl19_rb6WZ
                                           lvl27_rb6X7
                                           lvl21_rb6X1
                                           lvl27_rb6X7
                                           lvl22_rb6X2];

lvl29_rb6X9 :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl15_rb6WV
                                                  lvl28_rb6X8
                                                  GHC.Stack.Types.EmptyCallStack];

lvl30_rb6Xa :: GHC.Types.IO GHC.Types.Int
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl25_rb6X5 of sat_sbcfK {
          __DEFAULT -> GHC.Err.error lvl29_rb6X9 sat_sbcfK;
        };

GHC.IO.Handle.Text.$wbufWrite [InlPrag=NOUSERINLINE[0],
                               Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Ptr.Ptr GHC.Word.Word8
     -> GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=5,
 Str=<S,1*U><L,1*U(U)><S,U><L,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbcfL w1_sbcfM ww_sbcfN w2_sbcfO void_0E]
        case w_sbcfL of wild_sbcfQ {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       $dBufferedIO_sbcfS
                                       $dTypeable_sbcfT [Occ=Once*]
                                       ds_sbcfU [Occ=Once]
                                       _ [Occ=Dead]
                                       dt_sbcfW
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead] ->
              case ds_sbcfU of ww1_sbcg7 {
                GHC.IO.FD.FD ww2_sbcg8 [Occ=Once*] ww3_sbcg9 [Occ=Once*] ->
                    case readMutVar# [dt_sbcfW GHC.Prim.void#] of {
                      Unit# ipv1_sbcgc [Occ=Once!] ->
                          case ipv1_sbcgc of wild1_sbcgd {
                            GHC.IO.Buffer.Buffer dt4_sbcge
                                                 dt5_sbcgf
                                                 ds10_sbcgg [Occ=Once*]
                                                 dt6_sbcgh
                                                 dt7_sbcgi [Occ=Once*]
                                                 dt8_sbcgj ->
                                let {
                                  v_sbcgk :: GHC.Types.Int
                                  [LclId, Unf=OtherCon []] =
                                      CCCS GHC.Types.I#! [ww_sbcfN];
                                } in 
                                  let-no-escape {
                                    $j_sbcgl [Occ=Once*T[0], Dmd=<L,1*U(U,U)>]
                                      :: (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                                    [LclId[JoinId(0)], Unf=OtherCon []] =
                                        [w1_sbcfM
                                         ww_sbcfN
                                         w2_sbcfO
                                         wild_sbcfQ
                                         $dBufferedIO_sbcfS
                                         $dTypeable_sbcfT
                                         dt_sbcfW
                                         ww1_sbcg7
                                         ww2_sbcg8
                                         ww3_sbcg9
                                         wild1_sbcgd
                                         dt6_sbcgh
                                         dt8_sbcgj
                                         v_sbcgk] \r []
                                            let-no-escape {
                                              $w$j_sbcgm [InlPrag=NOUSERINLINE[0],
                                                          Occ=Once*!T[1],
                                                          Dmd=<L,1*C1(U(U,U))>]
                                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         GHC.Types.Int #)
                                              [LclId[JoinId(1)],
                                               Arity=1,
                                               Str=<S,U>,
                                               Unf=OtherCon []] =
                                                  sat-only [w1_sbcfM
                                                            ww_sbcfN
                                                            w2_sbcfO
                                                            wild_sbcfQ
                                                            $dTypeable_sbcfT
                                                            ww2_sbcg8
                                                            ww3_sbcg9
                                                            dt6_sbcgh
                                                            v_sbcgk] \r [void_0E]
                                                      case <# [ww_sbcfN dt6_sbcgh] of {
                                                        __DEFAULT ->
                                                            case w2_sbcfO of {
                                                              GHC.Types.False ->
                                                                  case
                                                                      Data.Typeable.Internal.sameTypeRep
                                                                          $dTypeable_sbcfT
                                                                          lvl11_rb6WR
                                                                  of
                                                                  { GHC.Types.False -> lvl30_rb6Xa;
                                                                    GHC.Types.True ->
                                                                        case w1_sbcfM of {
                                                                          GHC.Ptr.Ptr ww5_sbcgt [Occ=Once] ->
                                                                              GHC.IO.FD.$w$cwriteNonBlocking
                                                                                  ww2_sbcg8
                                                                                  ww3_sbcg9
                                                                                  ww5_sbcgt
                                                                                  ww_sbcfN
                                                                                  GHC.Prim.void#;
                                                                        };
                                                                  };
                                                              GHC.Types.True ->
                                                                  case
                                                                      Data.Typeable.Internal.sameTypeRep
                                                                          $dTypeable_sbcfT
                                                                          lvl11_rb6WR
                                                                  of
                                                                  { GHC.Types.False -> lvl26_rb6X6;
                                                                    GHC.Types.True ->
                                                                        case w1_sbcfM of {
                                                                          GHC.Ptr.Ptr ww5_sbcgx [Occ=Once] ->
                                                                              case
                                                                                  GHC.IO.FD.$wfdWrite
                                                                                      ww2_sbcg8
                                                                                      ww3_sbcg9
                                                                                      ww5_sbcgx
                                                                                      ww_sbcfN
                                                                                      GHC.Prim.void#
                                                                              of
                                                                              { Unit# _ [Occ=Dead] ->
                                                                                    Unit# [v_sbcgk];
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                        1# ->
                                                            GHC.IO.Handle.Text.$wbufWrite
                                                                wild_sbcfQ
                                                                w1_sbcfM
                                                                ww_sbcfN
                                                                w2_sbcfO
                                                                GHC.Prim.void#;
                                                      };
                                            } in 
                                              case ># [dt8_sbcgj 0#] of {
                                                __DEFAULT -> $w$j_sbcgm GHC.Prim.void#;
                                                1# ->
                                                    case
                                                        GHC.IO.BufferedIO.flushWriteBuffer
                                                            $dBufferedIO_sbcfS
                                                            ww1_sbcg7
                                                            wild1_sbcgd
                                                            GHC.Prim.void#
                                                    of
                                                    { Unit# ipv3_sbcgE [Occ=Once] ->
                                                          case
                                                              writeMutVar# [dt_sbcfW
                                                                            ipv3_sbcgE
                                                                            GHC.Prim.void#]
                                                          of
                                                          s2#_sbcgF
                                                          { (##) -> $w$j_sbcgm GHC.Prim.void#;
                                                          };
                                                    };
                                              };
                                  } in 
                                    case <# [ww_sbcfN dt6_sbcgh] of {
                                      __DEFAULT -> $j_sbcgl;
                                      1# ->
                                          case -# [dt6_sbcgh dt8_sbcgj] of sat_sbcgH {
                                            __DEFAULT ->
                                                case <=# [ww_sbcfN sat_sbcgH] of {
                                                  __DEFAULT -> $j_sbcgl;
                                                  1# ->
                                                      case w1_sbcfM of {
                                                        GHC.Ptr.Ptr ds12_sbcgK [Occ=Once] ->
                                                            case int2Word# [ww_sbcfN] of sat_sbcgN {
                                                              __DEFAULT ->
                                                                  case
                                                                      plusAddr# [dt4_sbcge
                                                                                 dt8_sbcgj]
                                                                  of
                                                                  sat_sbcgM
                                                                  { __DEFAULT ->
                                                                        case
                                                                            __pkg_ccall base-4.11.0.0 [sat_sbcgM
                                                                                                       ds12_sbcgK
                                                                                                       sat_sbcgN
                                                                                                       GHC.Prim.void#]
                                                                        of
                                                                        { Unit# _ [Occ=Dead] ->
                                                                              case
                                                                                  touch# [dt5_sbcgf
                                                                                          GHC.Prim.void#]
                                                                              of
                                                                              s'_sbcgR
                                                                              { (##) ->
                                                                                    case
                                                                                        -# [dt6_sbcgh
                                                                                            dt8_sbcgj]
                                                                                    of
                                                                                    sat_sbcgS
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              ==# [ww_sbcfN
                                                                                                   sat_sbcgS]
                                                                                          of
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    +# [dt8_sbcgj
                                                                                                        ww_sbcfN]
                                                                                                of
                                                                                                sat_sbcgU
                                                                                                { __DEFAULT ->
                                                                                                      let {
                                                                                                        sat_sbcgV [Occ=Once]
                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                               GHC.Word.Word8
                                                                                                        [LclId] =
                                                                                                            CCCS GHC.IO.Buffer.Buffer! [dt4_sbcge
                                                                                                                                        dt5_sbcgf
                                                                                                                                        ds10_sbcgg
                                                                                                                                        dt6_sbcgh
                                                                                                                                        dt7_sbcgi
                                                                                                                                        sat_sbcgU];
                                                                                                      } in 
                                                                                                        case
                                                                                                            writeMutVar# [dt_sbcfW
                                                                                                                          sat_sbcgV
                                                                                                                          GHC.Prim.void#]
                                                                                                        of
                                                                                                        s2#_sbcgW
                                                                                                        { (##) ->
                                                                                                              Unit# [v_sbcgk];
                                                                                                        };
                                                                                                };
                                                                                            1# ->
                                                                                                case
                                                                                                    +# [dt8_sbcgj
                                                                                                        ww_sbcfN]
                                                                                                of
                                                                                                sat_sbcgX
                                                                                                { __DEFAULT ->
                                                                                                      let {
                                                                                                        sat_sbcgY [Occ=Once]
                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                               GHC.Word.Word8
                                                                                                        [LclId] =
                                                                                                            CCCS GHC.IO.Buffer.Buffer! [dt4_sbcge
                                                                                                                                        dt5_sbcgf
                                                                                                                                        ds10_sbcgg
                                                                                                                                        dt6_sbcgh
                                                                                                                                        dt7_sbcgi
                                                                                                                                        sat_sbcgX];
                                                                                                      } in 
                                                                                                        case
                                                                                                            GHC.IO.BufferedIO.flushWriteBuffer
                                                                                                                $dBufferedIO_sbcfS
                                                                                                                ww1_sbcg7
                                                                                                                sat_sbcgY
                                                                                                                GHC.Prim.void#
                                                                                                        of
                                                                                                        { Unit# ipv3_sbch1 [Occ=Once] ->
                                                                                                              case
                                                                                                                  writeMutVar# [dt_sbcfW
                                                                                                                                ipv3_sbch1
                                                                                                                                GHC.Prim.void#]
                                                                                                              of
                                                                                                              s2#_sbch2
                                                                                                              { (##) ->
                                                                                                                    Unit# [v_sbcgk];
                                                                                                              };
                                                                                                        };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                          };
                    };
              };
        };

GHC.IO.Handle.Text.hPutBuf4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hPutBuf"#;

GHC.IO.Handle.Text.hPutBuf3 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hPutBuf4;

GHC.IO.Handle.Text.$whPutBuf' [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=5,
 Str=<L,U><L,U(U)><S,1*U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbch3 w1_sbch4 ww_sbch5 w2_sbch6 void_0E]
        case ww_sbch5 of wild_sbch8 {
          __DEFAULT ->
              case <# [wild_sbch8 0#] of {
                __DEFAULT ->
                    let {
                      act_sbcha [Occ=Once*, Dmd=<L,C(C1(U(U,U)))>]
                        :: GHC.IO.Handle.Types.Handle__
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                      [LclId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
                          [w1_sbch4 w2_sbch6 wild_sbch8] \r [h__sbchb void_0E]
                              case h__sbchb of wild1_sbchd {
                                GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                             $dBufferedIO_sbchf [Occ=Once]
                                                             _ [Occ=Dead]
                                                             ds_sbchh [Occ=Once]
                                                             _ [Occ=Dead]
                                                             dt_sbchj
                                                             ds2_sbchk [Occ=Once!]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                    case
                                        GHC.IO.Handle.Text.$wbufWrite
                                            wild1_sbchd w1_sbch4 wild_sbch8 w2_sbch6 GHC.Prim.void#
                                    of
                                    ds9_sbchu
                                    { Unit# ipv1_sbchw [Occ=Once*] ->
                                          case ds2_sbchk of {
                                            __DEFAULT ->
                                                case readMutVar# [dt_sbchj GHC.Prim.void#] of {
                                                  Unit# ipv3_sbchA [Occ=Once!] ->
                                                      case ipv3_sbchA of {
                                                        GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                             _ [Occ=Dead]
                                                                             ds11_sbchE [Occ=Once!]
                                                                             _ [Occ=Dead]
                                                                             _ [Occ=Dead]
                                                                             _ [Occ=Dead] ->
                                                            case ds11_sbchE of {
                                                              GHC.IO.Buffer.ReadBuffer ->
                                                                  Unit# [ipv1_sbchw];
                                                              GHC.IO.Buffer.WriteBuffer ->
                                                                  case
                                                                      readMutVar# [dt_sbchj
                                                                                   GHC.Prim.void#]
                                                                  of
                                                                  { Unit# ipv5_sbchL [Occ=Once!] ->
                                                                        case
                                                                            ipv5_sbchL
                                                                        of
                                                                        wild5_sbchM
                                                                        { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                               _ [Occ=Dead]
                                                                                               _ [Occ=Dead]
                                                                                               _ [Occ=Dead]
                                                                                               dt12_sbchR [Occ=Once]
                                                                                               dt13_sbchS [Occ=Once] ->
                                                                              case
                                                                                  ==# [dt12_sbchR
                                                                                       dt13_sbchS]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        GHC.IO.BufferedIO.flushWriteBuffer
                                                                                            $dBufferedIO_sbchf
                                                                                            ds_sbchh
                                                                                            wild5_sbchM
                                                                                            GHC.Prim.void#
                                                                                    of
                                                                                    { Unit# ipv7_sbchW [Occ=Once] ->
                                                                                          case
                                                                                              writeMutVar# [dt_sbchj
                                                                                                            ipv7_sbchW
                                                                                                            GHC.Prim.void#]
                                                                                          of
                                                                                          s2#_sbchX
                                                                                          { (##) ->
                                                                                                Unit# [ipv1_sbchw];
                                                                                          };
                                                                                    };
                                                                                1# ->
                                                                                    Unit# [ipv1_sbchw];
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                            GHC.IO.Handle.Types.BlockBuffering _ [Occ=Dead] ->
                                                Unit# [ipv1_sbchw];
                                          };
                                    };
                              };
                    } in 
                      case w_sbch3 of wild1_sbchZ {
                        GHC.IO.Handle.Types.FileHandle _ [Occ=Dead] dt_sbci1 [Occ=Once] ->
                            GHC.IO.Handle.Internals.$wwantWritableHandle'
                                GHC.IO.Handle.Text.hPutBuf3
                                wild1_sbchZ
                                dt_sbci1
                                act_sbcha
                                GHC.Prim.void#;
                        GHC.IO.Handle.Types.DuplexHandle _ [Occ=Dead]
                                                         _ [Occ=Dead]
                                                         dt1_sbci4 [Occ=Once] ->
                            GHC.IO.Handle.Internals.$wwantWritableHandle'
                                GHC.IO.Handle.Text.hPutBuf3
                                wild1_sbchZ
                                dt1_sbci4
                                act_sbcha
                                GHC.Prim.void#;
                      };
                1# ->
                    GHC.IO.Handle.Text.$willegalBufferSize
                        w_sbch3 GHC.IO.Handle.Text.hPutBuf3 wild_sbch8 GHC.Prim.void#;
              };
          0# -> Unit# [GHC.IO.Handle.Text.hGetBuf3];
        };

GHC.IO.Handle.Text.hPutBuf2 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=5,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbci5 w1_sbci6 w2_sbci7 w3_sbci8 void_0E]
        case w2_sbci7 of {
          GHC.Types.I# ww1_sbcib [Occ=Once] ->
              GHC.IO.Handle.Text.$whPutBuf'
                  w_sbci5 w1_sbci6 ww1_sbcib w3_sbci8 GHC.Prim.void#;
        };

GHC.IO.Handle.Text.hPutBufNonBlocking1
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [h_sbcic ptr_sbcid count_sbcie void_0E]
        case count_sbcie of {
          GHC.Types.I# ww1_sbcih [Occ=Once] ->
              GHC.IO.Handle.Text.$whPutBuf'
                  h_sbcic ptr_sbcid ww1_sbcih GHC.Types.False GHC.Prim.void#;
        };

GHC.IO.Handle.Text.hPutBufNonBlocking
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.Handle.Text.hPutBufNonBlocking1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Handle.Text.hPutBuf1
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [h_sbcii ptr_sbcij count_sbcik void_0E]
        case count_sbcik of {
          GHC.Types.I# ww1_sbcin [Occ=Once] ->
              case
                  GHC.IO.Handle.Text.$whPutBuf'
                      h_sbcii ptr_sbcij ww1_sbcin GHC.Types.True GHC.Prim.void#
              of
              { Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
              };
        };

GHC.IO.Handle.Text.hPutBuf
  :: forall a.
     GHC.IO.Handle.Types.Handle
     -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Str=<L,U><L,U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.Handle.Text.hPutBuf1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

lvl31_rb6Xb :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "\n"#;

lvl32_rb6Xc :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl31_rb6Xb;

GHC.IO.Handle.Text.$wwriteBlocks [InlPrag=NOUSERINLINE[0]]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Types.Bool
     -> GHC.Types.Bool
     -> GHC.IO.Handle.Types.Newline
     -> GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.Prim.Int#
     -> GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=9,
 Str=<S,U><L,U><L,1*U><L,U><L,U><L,U><L,U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sbcir
           w1_sbcis
           w2_sbcit
           w3_sbciu
           ww_sbciv
           ww1_sbciw
           ww2_sbcix
           w4_sbciy
           void_0E]
        let {
          sat_sbckU [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
          [LclId] =
              [w2_sbcit] \s []
                  case w2_sbcit of {
                    GHC.Types.False -> [] [];
                    GHC.Types.True -> lvl32_rb6Xc;
                  };
        } in 
          let-no-escape {
            exit_sbciA [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
              :: GHC.Prim.Int#
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
            [LclId[JoinId(2)], Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
                sat-only [w_sbcir ww_sbciv ww1_sbciw ww2_sbcix] \r [ww3_sbciB
                                                                    void_0E]
                    let {
                      raw_sbciD [Occ=OnceL]
                        :: GHC.IO.Buffer.RawBuffer GHC.IO.Buffer.CharBufElem
                      [LclId, Unf=OtherCon []] =
                          CCCS GHC.ForeignPtr.ForeignPtr! [ww_sbciv ww1_sbciw]; } in
                    let {
                      sat_sbcjg [Occ=Once]
                        :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO ()
                      [LclId] =
                          [ww_sbciv ww1_sbciw ww2_sbcix ww3_sbciB raw_sbciD] \r [h__sbciE
                                                                                 void_0E]
                              case h__sbciE of wild_sbciG {
                                GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             dt2_sbciP [Occ=Once]
                                                             dt3_sbciQ
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                    case
                                        GHC.IO.Handle.Internals.$wwriteCharBuffer
                                            wild_sbciG
                                            ww_sbciv
                                            ww1_sbciw
                                            GHC.IO.Buffer.WriteBuffer
                                            ww2_sbcix
                                            0#
                                            ww3_sbciB
                                            GHC.Prim.void#
                                    of
                                    { Unit# _ [Occ=Dead] ->
                                          case readMutVar# [dt2_sbciP GHC.Prim.void#] of {
                                            Unit# ipv3_sbcj2 [Occ=Once!] ->
                                                case ipv3_sbcj2 of {
                                                  GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                       _ [Occ=Dead]
                                                                       _ [Occ=Dead]
                                                                       dt6_sbcj7 [Occ=Once]
                                                                       _ [Occ=Dead]
                                                                       _ [Occ=Dead] ->
                                                      case ==# [ww2_sbcix dt6_sbcj7] of {
                                                        __DEFAULT -> Unit# [GHC.Tuple.()];
                                                        1# ->
                                                            case
                                                                readMutVar# [dt3_sbciQ
                                                                             GHC.Prim.void#]
                                                            of
                                                            { Unit# ipv5_sbcjd [Occ=Once] ->
                                                                  let {
                                                                    sat_sbcje [Occ=Once]
                                                                      :: GHC.IO.Handle.Types.BufferList
                                                                           GHC.IO.Buffer.CharBufElem
                                                                    [LclId] =
                                                                        CCCS GHC.IO.Handle.Types.BufferListCons! [raw_sbciD
                                                                                                                  ipv5_sbcjd];
                                                                  } in 
                                                                    case
                                                                        writeMutVar# [dt3_sbciQ
                                                                                      sat_sbcje
                                                                                      GHC.Prim.void#]
                                                                    of
                                                                    s2#_sbcjf
                                                                    { (##) -> Unit# [GHC.Tuple.()];
                                                                    };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.Handle.Internals.wantWritableHandle1
                          lvl2_rb6WE w_sbcir sat_sbcjg GHC.Prim.void#;
          } in 
            let-no-escape {
              $wshoveString_sbcjh [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[4]]
                :: GHC.Prim.Int#
                   -> [GHC.Types.Char]
                   -> [GHC.Types.Char]
                   -> GHC.Prim.State# GHC.Prim.RealWorld
                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
              [LclId[JoinId(4)],
               Arity=4,
               Str=<S,U><S,1*U><L,1*U><S,U>,
               Unf=OtherCon []] =
                  sat-only [w_sbcir
                            w1_sbcis
                            w3_sbciu
                            ww_sbciv
                            ww1_sbciw
                            ww2_sbcix
                            exit_sbciA
                            $wshoveString_sbcjh] \r [ww3_sbcji w6_sbcjj w7_sbcjk void_0E]
                      case w6_sbcjj of wild_sbcjm {
                        [] ->
                            case w7_sbcjk of wild1_sbcjn {
                              [] -> exit_sbciA ww3_sbcji GHC.Prim.void#;
                              : _ [Occ=Dead] _ [Occ=Dead] ->
                                  $wshoveString_sbcjh
                                      ww3_sbcji wild1_sbcjn GHC.Types.[] GHC.Prim.void#;
                            };
                        : c_sbcjq [Occ=Once!] cs_sbcjr [Occ=Once*] ->
                            case +# [ww3_sbcji 1#] of sat_sbcjs {
                              __DEFAULT ->
                                  case >=# [sat_sbcjs ww2_sbcix] of {
                                    __DEFAULT ->
                                        case c_sbcjq of {
                                          GHC.Types.C# x_sbcjv [Occ=Once!] ->
                                              case x_sbcjv of wild2_sbcjw {
                                                __DEFAULT ->
                                                    case
                                                        writeWideCharOffAddr# [ww_sbciv
                                                                               ww3_sbcji
                                                                               wild2_sbcjw
                                                                               GHC.Prim.void#]
                                                    of
                                                    s2_sbcjx
                                                    { (##) ->
                                                          case
                                                              touch# [ww1_sbciw GHC.Prim.void#]
                                                          of
                                                          s'_sbcjy
                                                          { (##) ->
                                                                case
                                                                    +# [ww3_sbcji 1#]
                                                                of
                                                                sat_sbcjz
                                                                { __DEFAULT ->
                                                                      $wshoveString_sbcjh
                                                                          sat_sbcjz
                                                                          cs_sbcjr
                                                                          w7_sbcjk
                                                                          GHC.Prim.void#;
                                                                };
                                                          };
                                                    };
                                                '\n'# ->
                                                    let-no-escape {
                                                      $w$j_sbcjA [InlPrag=NOUSERINLINE[0],
                                                                  Occ=Once*!T[2],
                                                                  Dmd=<C(C(S)),1*C1(C1(U(U,U)))>]
                                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                                           -> GHC.Prim.Int#
                                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                 () #)
                                                      [LclId[JoinId(2)],
                                                       Arity=2,
                                                       Str=<S,U><L,U>,
                                                       Unf=OtherCon []] =
                                                          sat-only [w_sbcir
                                                                    w1_sbcis
                                                                    ww_sbciv
                                                                    ww1_sbciw
                                                                    ww2_sbcix
                                                                    $wshoveString_sbcjh
                                                                    w7_sbcjk
                                                                    cs_sbcjr] \r [void_0E ww4_sbcjC]
                                                              case w1_sbcis of {
                                                                GHC.Types.False ->
                                                                    $wshoveString_sbcjh
                                                                        ww4_sbcjC
                                                                        cs_sbcjr
                                                                        w7_sbcjk
                                                                        GHC.Prim.void#;
                                                                GHC.Types.True ->
                                                                    let {
                                                                      sat_sbckf [Occ=Once]
                                                                        :: GHC.IO.Handle.Types.Handle__
                                                                           -> GHC.Types.IO ()
                                                                      [LclId] =
                                                                          [ww_sbciv
                                                                           ww1_sbciw
                                                                           ww2_sbcix
                                                                           ww4_sbcjC] \r [h__sbcjE
                                                                                          void_0E]
                                                                              case
                                                                                  h__sbcjE
                                                                              of
                                                                              wild4_sbcjG
                                                                              { GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                                                                             $dBufferedIO_sbcjI [Occ=Once]
                                                                                                             _ [Occ=Dead]
                                                                                                             ds_sbcjK [Occ=Once]
                                                                                                             _ [Occ=Dead]
                                                                                                             dt_sbcjM
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead]
                                                                                                             _ [Occ=Dead] ->
                                                                                    case
                                                                                        GHC.IO.Handle.Internals.$wwriteCharBuffer
                                                                                            wild4_sbcjG
                                                                                            ww_sbciv
                                                                                            ww1_sbciw
                                                                                            GHC.IO.Buffer.WriteBuffer
                                                                                            ww2_sbcix
                                                                                            0#
                                                                                            ww4_sbcjC
                                                                                            GHC.Prim.void#
                                                                                    of
                                                                                    { Unit# _ [Occ=Dead] ->
                                                                                          case
                                                                                              readMutVar# [dt_sbcjM
                                                                                                           GHC.Prim.void#]
                                                                                          of
                                                                                          { Unit# ipv3_sbck2 [Occ=Once!] ->
                                                                                                case
                                                                                                    ipv3_sbck2
                                                                                                of
                                                                                                wild5_sbck3
                                                                                                { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       dt7_sbck8 [Occ=Once]
                                                                                                                       dt8_sbck9 [Occ=Once] ->
                                                                                                      case
                                                                                                          ==# [dt7_sbck8
                                                                                                               dt8_sbck9]
                                                                                                      of
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                GHC.IO.BufferedIO.flushWriteBuffer
                                                                                                                    $dBufferedIO_sbcjI
                                                                                                                    ds_sbcjK
                                                                                                                    wild5_sbck3
                                                                                                                    GHC.Prim.void#
                                                                                                            of
                                                                                                            { Unit# ipv5_sbckd [Occ=Once] ->
                                                                                                                  case
                                                                                                                      writeMutVar# [dt_sbcjM
                                                                                                                                    ipv5_sbckd
                                                                                                                                    GHC.Prim.void#]
                                                                                                                  of
                                                                                                                  s2#_sbcke
                                                                                                                  { (##) ->
                                                                                                                        Unit# [GHC.Tuple.()];
                                                                                                                  };
                                                                                                            };
                                                                                                        1# ->
                                                                                                            Unit# [GHC.Tuple.()];
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                    } in 
                                                                      case
                                                                          GHC.IO.Handle.Internals.wantWritableHandle1
                                                                              lvl2_rb6WE
                                                                              w_sbcir
                                                                              sat_sbckf
                                                                              GHC.Prim.void#
                                                                      of
                                                                      { Unit# _ [Occ=Dead] ->
                                                                            $wshoveString_sbcjh
                                                                                0#
                                                                                cs_sbcjr
                                                                                w7_sbcjk
                                                                                GHC.Prim.void#;
                                                                      };
                                                              };
                                                    } in 
                                                      case w3_sbciu of {
                                                        GHC.IO.Handle.Types.LF ->
                                                            case
                                                                writeWideCharOffAddr# [ww_sbciv
                                                                                       ww3_sbcji
                                                                                       '\n'#
                                                                                       GHC.Prim.void#]
                                                            of
                                                            s2_sbckk
                                                            { (##) ->
                                                                  case
                                                                      touch# [ww1_sbciw
                                                                              GHC.Prim.void#]
                                                                  of
                                                                  s'_sbckl
                                                                  { (##) ->
                                                                        case
                                                                            +# [ww3_sbcji 1#]
                                                                        of
                                                                        sat_sbckm
                                                                        { __DEFAULT ->
                                                                              $w$j_sbcjA
                                                                                  GHC.Prim.void#
                                                                                  sat_sbckm;
                                                                        };
                                                                  };
                                                            };
                                                        GHC.IO.Handle.Types.CRLF ->
                                                            case
                                                                writeWideCharOffAddr# [ww_sbciv
                                                                                       ww3_sbcji
                                                                                       '\r'#
                                                                                       GHC.Prim.void#]
                                                            of
                                                            s2_sbckn
                                                            { (##) ->
                                                                  case
                                                                      touch# [ww1_sbciw
                                                                              GHC.Prim.void#]
                                                                  of
                                                                  s'_sbcko
                                                                  { (##) ->
                                                                        case
                                                                            +# [ww3_sbcji 1#]
                                                                        of
                                                                        ipv1_sbckp [Dmd=<S,U>]
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  writeWideCharOffAddr# [ww_sbciv
                                                                                                         ipv1_sbckp
                                                                                                         '\n'#
                                                                                                         GHC.Prim.void#]
                                                                              of
                                                                              s1_sbckq
                                                                              { (##) ->
                                                                                    case
                                                                                        touch# [ww1_sbciw
                                                                                                GHC.Prim.void#]
                                                                                    of
                                                                                    s'1_sbckr
                                                                                    { (##) ->
                                                                                          case
                                                                                              +# [ipv1_sbckp
                                                                                                  1#]
                                                                                          of
                                                                                          sat_sbcks
                                                                                          { __DEFAULT ->
                                                                                                $w$j_sbcjA
                                                                                                    GHC.Prim.void#
                                                                                                    sat_sbcks;
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                              };
                                        };
                                    1# ->
                                        let {
                                          sat_sbckP [Occ=Once]
                                            :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO ()
                                          [LclId] =
                                              [ww_sbciv ww1_sbciw ww2_sbcix ww3_sbcji] \r [h__sbckt
                                                                                           void_0E]
                                                  case h__sbckt of wild1_sbckv {
                                                    GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead]
                                                                                 _ [Occ=Dead] ->
                                                        case
                                                            GHC.IO.Handle.Internals.$wwriteCharBuffer
                                                                wild1_sbckv
                                                                ww_sbciv
                                                                ww1_sbciw
                                                                GHC.IO.Buffer.WriteBuffer
                                                                ww2_sbcix
                                                                0#
                                                                ww3_sbcji
                                                                GHC.Prim.void#
                                                        of
                                                        { Unit# _ [Occ=Dead] ->
                                                              Unit# [GHC.Tuple.()];
                                                        };
                                                  };
                                        } in 
                                          case
                                              GHC.IO.Handle.Internals.wantWritableHandle1
                                                  lvl2_rb6WE w_sbcir sat_sbckP GHC.Prim.void#
                                          of
                                          { Unit# _ [Occ=Dead] ->
                                                $wshoveString_sbcjh
                                                    0# wild_sbcjm w7_sbcjk GHC.Prim.void#;
                                          };
                                  };
                            };
                      };
            } in  $wshoveString_sbcjh 0# w4_sbciy sat_sbckU GHC.Prim.void#;

lvl33_rb6Xd :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "no buffer!"#;

GHC.IO.Handle.Text.hPutStr4 :: GHC.IO.Buffer.CharBuffer
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl33_rb6Xd of sat_sbckV {
          __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_sbckV;
        };

GHC.IO.Handle.Text.hPutStr3
  :: (GHC.IO.Handle.Types.BufferMode, GHC.IO.Buffer.CharBuffer)
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE (,)! [GHC.IO.Handle.Types.NoBuffering
                        GHC.IO.Handle.Text.hPutStr4];

GHC.IO.Handle.Text.hPutStr2
  :: GHC.IO.Handle.Types.Handle__
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           ((GHC.IO.Handle.Types.BufferMode, GHC.IO.Buffer.CharBuffer),
            GHC.IO.Handle.Types.Newline) #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [h__sbckW void_0E]
        case h__sbckW of {
          GHC.IO.Handle.Types.Handle__ _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       ds2_sbcl5 [Occ=Once!]
                                       _ [Occ=Dead]
                                       dt2_sbcl7 [Occ=Once]
                                       dt3_sbcl8
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       _ [Occ=Dead]
                                       ds7_sbcld [Occ=Once*]
                                       _ [Occ=Dead] ->
              case ds2_sbcl5 of wild1_sbclf {
                __DEFAULT ->
                    case readMutVar# [dt3_sbcl8 GHC.Prim.void#] of {
                      Unit# ipv1_sbcli [Occ=Once!] ->
                          case readMutVar# [dt2_sbcl7 GHC.Prim.void#] of {
                            Unit# ipv3_sbcll [Occ=Once*!] ->
                                case ipv1_sbcli of {
                                  GHC.IO.Handle.Types.BufferListNil ->
                                      case ipv3_sbcll of {
                                        GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead]
                                                             dt6_sbclr
                                                             _ [Occ=Dead]
                                                             _ [Occ=Dead] ->
                                            case *# [dt6_sbclr 4#] of x1_sbclu [Dmd=<S,U>] {
                                              __DEFAULT ->
                                                  case <# [x1_sbclu 0#] of {
                                                    __DEFAULT ->
                                                        case
                                                            newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                                        GHC.Prim.void#]
                                                        of
                                                        { Unit# ipv5_sbcly [Occ=Once] ->
                                                              case
                                                                  newPinnedByteArray# [x1_sbclu
                                                                                       GHC.Prim.void#]
                                                              of
                                                              { Unit# ipv7_sbclB ->
                                                                    let {
                                                                      sat_sbclD [Occ=Once]
                                                                        :: GHC.ForeignPtr.ForeignPtrContents
                                                                      [LclId] =
                                                                          CCCS GHC.ForeignPtr.MallocPtr! [ipv7_sbclB
                                                                                                          ipv5_sbcly];
                                                                    } in 
                                                                      case
                                                                          byteArrayContents# [ipv7_sbclB]
                                                                      of
                                                                      sat_sbclC
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_sbclE [Occ=Once]
                                                                                :: GHC.IO.Buffer.CharBuffer
                                                                              [LclId] =
                                                                                  CCCS GHC.IO.Buffer.Buffer! [sat_sbclC
                                                                                                              sat_sbclD
                                                                                                              GHC.IO.Buffer.WriteBuffer
                                                                                                              dt6_sbclr
                                                                                                              0#
                                                                                                              0#]; } in
                                                                            let {
                                                                              sat_sbclF [Occ=Once]
                                                                                :: (GHC.IO.Handle.Types.BufferMode,
                                                                                    GHC.IO.Buffer.CharBuffer)
                                                                              [LclId] =
                                                                                  CCCS (,)! [wild1_sbclf
                                                                                             sat_sbclE]; } in
                                                                            let {
                                                                              sat_sbclG [Occ=Once]
                                                                                :: ((GHC.IO.Handle.Types.BufferMode,
                                                                                     GHC.IO.Buffer.CharBuffer),
                                                                                    GHC.IO.Handle.Types.Newline)
                                                                              [LclId] =
                                                                                  CCCS (,)! [sat_sbclF
                                                                                             ds7_sbcld];
                                                                            } in  Unit# [sat_sbclG];
                                                                      };
                                                              };
                                                        };
                                                    1# -> GHC.ForeignPtr.mallocForeignPtrBytes2;
                                                  };
                                            };
                                      };
                                  GHC.IO.Handle.Types.BufferListCons b_sbclI [Occ=Once!]
                                                                     rest_sbclJ [Occ=Once] ->
                                      case
                                          writeMutVar# [dt3_sbcl8 rest_sbclJ GHC.Prim.void#]
                                      of
                                      s2#_sbclK
                                      { (##) ->
                                            let {
                                              sat_sbclV [Occ=Once]
                                                :: GHC.IO.Buffer.Buffer GHC.IO.Buffer.CharBufElem
                                              [LclId] =
                                                  [ipv3_sbcll b_sbclI] \u []
                                                      case b_sbclI of {
                                                        GHC.ForeignPtr.ForeignPtr dt5_sbclM [Occ=Once]
                                                                                  dt6_sbclN [Occ=Once] ->
                                                            case ipv3_sbcll of {
                                                              GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                   _ [Occ=Dead]
                                                                                   _ [Occ=Dead]
                                                                                   dt9_sbclS [Occ=Once]
                                                                                   _ [Occ=Dead]
                                                                                   _ [Occ=Dead] ->
                                                                  GHC.IO.Buffer.Buffer [dt5_sbclM
                                                                                        dt6_sbclN
                                                                                        GHC.IO.Buffer.WriteBuffer
                                                                                        dt9_sbclS
                                                                                        0#
                                                                                        0#];
                                                            };
                                                      }; } in
                                            let {
                                              sat_sbclW [Occ=Once]
                                                :: (GHC.IO.Handle.Types.BufferMode,
                                                    GHC.IO.Buffer.CharBuffer)
                                              [LclId] =
                                                  CCCS (,)! [wild1_sbclf sat_sbclV]; } in
                                            let {
                                              sat_sbclX [Occ=Once]
                                                :: ((GHC.IO.Handle.Types.BufferMode,
                                                     GHC.IO.Buffer.CharBuffer),
                                                    GHC.IO.Handle.Types.Newline)
                                              [LclId] =
                                                  CCCS (,)! [sat_sbclW ds7_sbcld];
                                            } in  Unit# [sat_sbclX];
                                      };
                                };
                          };
                    };
                GHC.IO.Handle.Types.NoBuffering ->
                    let {
                      sat_sbclY [Occ=Once]
                        :: ((GHC.IO.Handle.Types.BufferMode, GHC.IO.Buffer.CharBuffer),
                            GHC.IO.Handle.Types.Newline)
                      [LclId] =
                          CCCS (,)! [GHC.IO.Handle.Text.hPutStr3 ds7_sbcld];
                    } in  Unit# [sat_sbclY];
              };
        };

GHC.IO.Handle.Text.hPutStr6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hPutStr"#;

GHC.IO.Handle.Text.hPutStr5 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.IO.Handle.Text.hPutStr6;

GHC.IO.Handle.Text.hPutStr1
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Base.String
     -> GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=4, Str=<S,U><L,1*U><L,1*U><S,U>, Unf=OtherCon []] =
    [] \r [handle_sbclZ str_sbcm0 add_nl_sbcm1 void_0E]
        let-no-escape {
          $w$j_sbcm3 [InlPrag=NOUSERINLINE[0],
                      Occ=Once*!T[4],
                      Dmd=<L,1*C1(C1(C1(C1(U(U,U)))))>]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> GHC.IO.Handle.Types.BufferMode
               -> GHC.IO.Buffer.CharBuffer
               -> GHC.IO.Handle.Types.Newline
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId[JoinId(4)],
           Arity=4,
           Str=<S,U><S,1*U><L,1*U(U,U,A,U,A,A)><L,U>,
           Unf=OtherCon []] =
              sat-only [handle_sbclZ str_sbcm0 add_nl_sbcm1] \r [void_0E
                                                                 ww_sbcm5
                                                                 ww1_sbcm6
                                                                 ww2_sbcm7]
                  case ww_sbcm5 of {
                    GHC.IO.Handle.Types.NoBuffering ->
                        case
                            GHC.IO.Handle.Text.hPutStr7 handle_sbclZ str_sbcm0 GHC.Prim.void#
                        of
                        { Unit# _ [Occ=Dead] ->
                              case add_nl_sbcm1 of {
                                GHC.Types.False -> Unit# [GHC.Tuple.()];
                                GHC.Types.True ->
                                    GHC.IO.Handle.Text.$whPutChar handle_sbclZ '\n'# GHC.Prim.void#;
                              };
                        };
                    GHC.IO.Handle.Types.LineBuffering ->
                        case ww1_sbcm6 of {
                          GHC.IO.Buffer.Buffer ww4_sbcme [Occ=Once]
                                               ww5_sbcmf [Occ=Once]
                                               _ [Occ=Dead]
                                               ww7_sbcmh [Occ=Once]
                                               _ [Occ=Dead]
                                               _ [Occ=Dead] ->
                              GHC.IO.Handle.Text.$wwriteBlocks
                                  handle_sbclZ
                                  GHC.Types.True
                                  add_nl_sbcm1
                                  ww2_sbcm7
                                  ww4_sbcme
                                  ww5_sbcmf
                                  ww7_sbcmh
                                  str_sbcm0
                                  GHC.Prim.void#;
                        };
                    GHC.IO.Handle.Types.BlockBuffering _ [Occ=Dead] ->
                        case ww1_sbcm6 of {
                          GHC.IO.Buffer.Buffer ww4_sbcmm [Occ=Once]
                                               ww5_sbcmn [Occ=Once]
                                               _ [Occ=Dead]
                                               ww7_sbcmp [Occ=Once]
                                               _ [Occ=Dead]
                                               _ [Occ=Dead] ->
                              GHC.IO.Handle.Text.$wwriteBlocks
                                  handle_sbclZ
                                  GHC.Types.False
                                  add_nl_sbcm1
                                  ww2_sbcm7
                                  ww4_sbcmm
                                  ww5_sbcmn
                                  ww7_sbcmp
                                  str_sbcm0
                                  GHC.Prim.void#;
                        };
                  };
        } in 
          case handle_sbclZ of wild_sbcms {
            GHC.IO.Handle.Types.FileHandle _ [Occ=Dead] dt_sbcmu [Occ=Once] ->
                case
                    GHC.IO.Handle.Internals.$wwantWritableHandle'
                        GHC.IO.Handle.Text.hPutStr5
                        wild_sbcms
                        dt_sbcmu
                        GHC.IO.Handle.Text.hPutStr2
                        GHC.Prim.void#
                of
                { Unit# ipv1_sbcmx [Occ=Once!] ->
                      case ipv1_sbcmx of {
                        (,) ww1_sbcmz [Occ=Once!] ww2_sbcmA [Occ=Once] ->
                            case ww1_sbcmz of {
                              (,) ww4_sbcmC [Occ=Once] ww5_sbcmD [Occ=Once] ->
                                  $w$j_sbcm3 GHC.Prim.void# ww4_sbcmC ww5_sbcmD ww2_sbcmA;
                            };
                      };
                };
            GHC.IO.Handle.Types.DuplexHandle _ [Occ=Dead]
                                             _ [Occ=Dead]
                                             dt1_sbcmG [Occ=Once] ->
                case
                    GHC.IO.Handle.Internals.$wwantWritableHandle'
                        GHC.IO.Handle.Text.hPutStr5
                        wild_sbcms
                        dt1_sbcmG
                        GHC.IO.Handle.Text.hPutStr2
                        GHC.Prim.void#
                of
                { Unit# ipv1_sbcmJ [Occ=Once!] ->
                      case ipv1_sbcmJ of {
                        (,) ww1_sbcmL [Occ=Once!] ww2_sbcmM [Occ=Once] ->
                            case ww1_sbcmL of {
                              (,) ww4_sbcmO [Occ=Once] ww5_sbcmP [Occ=Once] ->
                                  $w$j_sbcm3 GHC.Prim.void# ww4_sbcmO ww5_sbcmP ww2_sbcmM;
                            };
                      };
                };
          };

GHC.IO.Handle.Text.hPutStr' [InlPrag=NOINLINE]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Base.String -> GHC.Types.Bool -> GHC.Types.IO ()
[GblId, Arity=4, Str=<S,U><L,1*U><L,1*U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.IO.Handle.Text.hPutStr1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.IO.Handle.Text.hPutStr
  :: GHC.IO.Handle.Types.Handle -> GHC.Base.String -> GHC.Types.IO ()
[GblId, Arity=3, Str=<L,U><L,U>, Unf=OtherCon []] =
    [] \r [handle_sbcmQ str_sbcmR void_0E]
        GHC.IO.Handle.Text.hPutStr'
            handle_sbcmQ str_sbcmR GHC.Types.False GHC.Prim.void#;

GHC.IO.Handle.Text.hPutStrLn
  :: GHC.IO.Handle.Types.Handle -> GHC.Base.String -> GHC.Types.IO ()
[GblId, Arity=3, Str=<L,U><L,U>, Unf=OtherCon []] =
    [] \r [handle_sbcmS str_sbcmT void_0E]
        GHC.IO.Handle.Text.hPutStr'
            handle_sbcmS str_sbcmT GHC.Types.True GHC.Prim.void#;

GHC.IO.Handle.Text.hWaitForInput3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "hWaitForInput"#;

GHC.IO.Handle.Text.hWaitForInput2 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.IO.Handle.Text.hWaitForInput3;

GHC.IO.Handle.Text.hWaitForInput1
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId, Arity=3, Str=<S,1*U><L,U(U)><S,U>, Unf=OtherCon []] =
    [] \r [h_sbcmU msecs_sbcmV void_0E]
        let {
          lvl34_sbcmX [Occ=OnceL!] :: GHC.Types.Bool
          [LclId] =
              [msecs_sbcmV] \u []
                  case msecs_sbcmV of {
                    GHC.Types.I# x_sbcmZ [Occ=Once] ->
                        case <# [x_sbcmZ 0#] of sat_sbcn0 {
                          __DEFAULT -> tagToEnum# [sat_sbcn0];
                        };
                  }; } in
        let {
          sat_sbcoY [Occ=Once]
            :: GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Bool
          [LclId] =
              [msecs_sbcmV lvl34_sbcmX] \r [handle__sbcn1 void_0E]
                  case handle__sbcn1 of wild_sbcn3 {
                    GHC.IO.Handle.Types.Handle__ $dIODevice_sbcn4 [Occ=Once]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 ds_sbcn7 [Occ=Once]
                                                 _ [Occ=Dead]
                                                 dt_sbcn9
                                                 _ [Occ=Dead]
                                                 dt1_sbcnb [Occ=Once*]
                                                 dt2_sbcnc
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 ds4_sbcnf [Occ=Once!]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead] ->
                        case readMutVar# [dt2_sbcnc GHC.Prim.void#] of {
                          Unit# ipv1_sbcnm [Occ=Once!] ->
                              case ipv1_sbcnm of wild1_sbcnn {
                                GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead]
                                                     dt7_sbcns [Occ=Once]
                                                     dt8_sbcnt [Occ=Once] ->
                                    case ==# [dt7_sbcns dt8_sbcnt] of {
                                      __DEFAULT -> Unit# [GHC.Types.True];
                                      1# ->
                                          case lvl34_sbcmX of {
                                            GHC.Types.False ->
                                                case readMutVar# [dt_sbcn9 GHC.Prim.void#] of {
                                                  Unit# ipv3_sbcny ->
                                                      let-no-escape {
                                                        $w$j_sbcnz [InlPrag=NOUSERINLINE[0],
                                                                    Occ=Once*!T[7],
                                                                    Dmd=<L,1*C1(C1(C1(C1(C1(C1(C1(U(U,U))))))))>]
                                                          :: GHC.Prim.State# GHC.Prim.RealWorld
                                                             -> GHC.Prim.Addr#
                                                             -> GHC.ForeignPtr.ForeignPtrContents
                                                             -> GHC.IO.Buffer.BufferState
                                                             -> GHC.Prim.Int#
                                                             -> GHC.Prim.Int#
                                                             -> GHC.Prim.Int#
                                                             -> (# GHC.Prim.State#
                                                                     GHC.Prim.RealWorld,
                                                                   GHC.Types.Bool #)
                                                        [LclId[JoinId(7)],
                                                         Arity=7,
                                                         Str=<S,U><L,U><L,U><L,U><L,U><S,U><S,U>,
                                                         Unf=OtherCon []] =
                                                            sat-only [msecs_sbcmV
                                                                      wild_sbcn3
                                                                      $dIODevice_sbcn4
                                                                      ds_sbcn7
                                                                      dt2_sbcnc] \r [void_0E
                                                                                     ww_sbcnB
                                                                                     ww1_sbcnC
                                                                                     ww2_sbcnD
                                                                                     ww3_sbcnE
                                                                                     ww4_sbcnF
                                                                                     ww5_sbcnG]
                                                                let {
                                                                  sat_sbcnH [Occ=Once]
                                                                    :: GHC.IO.Buffer.Buffer
                                                                         GHC.IO.Buffer.CharBufElem
                                                                  [LclId] =
                                                                      CCCS GHC.IO.Buffer.Buffer! [ww_sbcnB
                                                                                                  ww1_sbcnC
                                                                                                  ww2_sbcnD
                                                                                                  ww3_sbcnE
                                                                                                  ww4_sbcnF
                                                                                                  ww5_sbcnG];
                                                                } in 
                                                                  case
                                                                      writeMutVar# [dt2_sbcnc
                                                                                    sat_sbcnH
                                                                                    GHC.Prim.void#]
                                                                  of
                                                                  s2#_sbcnI
                                                                  { (##) ->
                                                                        case
                                                                            ==# [ww4_sbcnF
                                                                                 ww5_sbcnG]
                                                                        of
                                                                        { __DEFAULT ->
                                                                              Unit# [GHC.Types.True];
                                                                          1# ->
                                                                              case
                                                                                  GHC.IO.Device.ready
                                                                                      $dIODevice_sbcn4
                                                                                      ds_sbcn7
                                                                                      GHC.Types.False
                                                                                      msecs_sbcmV
                                                                                      GHC.Prim.void#
                                                                              of
                                                                              { Unit# ipv5_sbcnM [Occ=Once!] ->
                                                                                    case
                                                                                        ipv5_sbcnM
                                                                                    of
                                                                                    { GHC.Types.False ->
                                                                                          Unit# [GHC.Types.False];
                                                                                      GHC.Types.True ->
                                                                                          case
                                                                                              readMutVar# [dt2_sbcnc
                                                                                                           GHC.Prim.void#]
                                                                                          of
                                                                                          { Unit# ipv7_sbcnQ [Occ=Once!] ->
                                                                                                case
                                                                                                    ipv7_sbcnQ
                                                                                                of
                                                                                                wild4_sbcnR
                                                                                                { GHC.IO.Buffer.Buffer dt9_sbcnS [Occ=Once*]
                                                                                                                       dt10_sbcnT [Occ=Once*]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       _ [Occ=Dead]
                                                                                                                       dt12_sbcnW
                                                                                                                       dt13_sbcnX [Occ=Once] ->
                                                                                                      case
                                                                                                          ==# [dt12_sbcnW
                                                                                                               dt13_sbcnX]
                                                                                                      of
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                writeMutVar# [dt2_sbcnc
                                                                                                                              wild4_sbcnR
                                                                                                                              GHC.Prim.void#]
                                                                                                            of
                                                                                                            s2#1_sbcnZ
                                                                                                            { (##) ->
                                                                                                                  case
                                                                                                                      readWideCharOffAddr# [dt9_sbcnS
                                                                                                                                            dt12_sbcnW
                                                                                                                                            GHC.Prim.void#]
                                                                                                                  of
                                                                                                                  { Unit# _ [Occ=Dead] ->
                                                                                                                        case
                                                                                                                            touch# [dt10_sbcnT
                                                                                                                                    GHC.Prim.void#]
                                                                                                                        of
                                                                                                                        s'_sbco3
                                                                                                                        { (##) ->
                                                                                                                              Unit# [GHC.Types.True];
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                        1# ->
                                                                                                            case
                                                                                                                GHC.IO.Handle.Internals.hLookAhead_2
                                                                                                                    wild_sbcn3
                                                                                                                    wild4_sbcnR
                                                                                                                    GHC.Prim.void#
                                                                                                            of
                                                                                                            { Unit# ipv9_sbco6 [Occ=Once] ->
                                                                                                                  case
                                                                                                                      writeMutVar# [dt2_sbcnc
                                                                                                                                    ipv9_sbco6
                                                                                                                                    GHC.Prim.void#]
                                                                                                                  of
                                                                                                                  s2#1_sbco7
                                                                                                                  { (##) ->
                                                                                                                        case
                                                                                                                            readWideCharOffAddr# [dt9_sbcnS
                                                                                                                                                  dt12_sbcnW
                                                                                                                                                  GHC.Prim.void#]
                                                                                                                        of
                                                                                                                        { Unit# _ [Occ=Dead] ->
                                                                                                                              case
                                                                                                                                  touch# [dt10_sbcnT
                                                                                                                                          GHC.Prim.void#]
                                                                                                                              of
                                                                                                                              s'_sbcob
                                                                                                                              { (##) ->
                                                                                                                                    Unit# [GHC.Types.True];
                                                                                                                              };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                      } in 
                                                        case ds4_sbcnf of {
                                                          GHC.Base.Nothing ->
                                                              let {
                                                                sat_sbcod [Occ=Once]
                                                                  :: (dec_state_ab2UP,
                                                                      GHC.IO.Buffer.Buffer
                                                                        GHC.Word.Word8)
                                                                [LclId] =
                                                                    CCCS (,)! [GHC.IO.Handle.Internals.decodeByteBuf2
                                                                               ipv3_sbcny];
                                                              } in 
                                                                case
                                                                    writeMutVar# [dt1_sbcnb
                                                                                  sat_sbcod
                                                                                  GHC.Prim.void#]
                                                                of
                                                                s2#_sbcoe
                                                                { (##) ->
                                                                      case
                                                                          GHC.IO.Encoding.Latin1.latin5
                                                                              ipv3_sbcny
                                                                              wild1_sbcnn
                                                                              GHC.Prim.void#
                                                                      of
                                                                      { Unit# ipv5_sbcoh [Occ=Once!] ->
                                                                            case ipv5_sbcoh of {
                                                                              (,,) _ [Occ=Dead]
                                                                                   input'_sbcok [Occ=Once]
                                                                                   output'_sbcol [Occ=Once!] ->
                                                                                  case
                                                                                      writeMutVar# [dt_sbcn9
                                                                                                    input'_sbcok
                                                                                                    GHC.Prim.void#]
                                                                                  of
                                                                                  s2#1_sbcom
                                                                                  { (##) ->
                                                                                        case
                                                                                            output'_sbcol
                                                                                        of
                                                                                        { GHC.IO.Buffer.Buffer ww1_sbcoo [Occ=Once]
                                                                                                               ww2_sbcop [Occ=Once]
                                                                                                               ww3_sbcoq [Occ=Once]
                                                                                                               ww4_sbcor [Occ=Once]
                                                                                                               ww5_sbcos [Occ=Once]
                                                                                                               ww6_sbcot [Occ=Once] ->
                                                                                              $w$j_sbcnz
                                                                                                  GHC.Prim.void#
                                                                                                  ww1_sbcoo
                                                                                                  ww2_sbcop
                                                                                                  ww3_sbcoq
                                                                                                  ww4_sbcor
                                                                                                  ww5_sbcos
                                                                                                  ww6_sbcot;
                                                                                        };
                                                                                  };
                                                                            };
                                                                      };
                                                                };
                                                          GHC.Base.Just decoder_sbcou [Occ=Once!] ->
                                                              case decoder_sbcou of {
                                                                GHC.IO.Encoding.Types.BufferCodec ds12_sbcow [Occ=Once]
                                                                                                  ds13_sbcox [Occ=Once]
                                                                                                  _ [Occ=Dead]
                                                                                                  ds15_sbcoz [Occ=Once]
                                                                                                  _ [Occ=Dead] ->
                                                                    case
                                                                        ds15_sbcoz GHC.Prim.void#
                                                                    of
                                                                    { Unit# ipv5_sbcoD [Occ=Once] ->
                                                                          let {
                                                                            sat_sbcoE [Occ=Once]
                                                                              :: (dec_state_ab2UP,
                                                                                  GHC.IO.Buffer.Buffer
                                                                                    GHC.Word.Word8)
                                                                            [LclId] =
                                                                                CCCS (,)! [ipv5_sbcoD
                                                                                           ipv3_sbcny];
                                                                          } in 
                                                                            case
                                                                                writeMutVar# [dt1_sbcnb
                                                                                              sat_sbcoE
                                                                                              GHC.Prim.void#]
                                                                            of
                                                                            s2#_sbcoF
                                                                            { (##) ->
                                                                                  case
                                                                                      GHC.IO.Handle.Internals.$wstreamEncode
                                                                                          ds12_sbcow
                                                                                          ds13_sbcox
                                                                                          ipv3_sbcny
                                                                                          wild1_sbcnn
                                                                                          GHC.Prim.void#
                                                                                  of
                                                                                  { Unit# ipv7_sbcoI [Occ=Once!] ->
                                                                                        case
                                                                                            ipv7_sbcoI
                                                                                        of
                                                                                        { (,) bbuf2_sbcoK [Occ=Once]
                                                                                              cbuf'_sbcoL [Occ=Once!] ->
                                                                                              case
                                                                                                  writeMutVar# [dt_sbcn9
                                                                                                                bbuf2_sbcoK
                                                                                                                GHC.Prim.void#]
                                                                                              of
                                                                                              s2#1_sbcoM
                                                                                              { (##) ->
                                                                                                    case
                                                                                                        cbuf'_sbcoL
                                                                                                    of
                                                                                                    { GHC.IO.Buffer.Buffer ww1_sbcoO [Occ=Once]
                                                                                                                           ww2_sbcoP [Occ=Once]
                                                                                                                           ww3_sbcoQ [Occ=Once]
                                                                                                                           ww4_sbcoR [Occ=Once]
                                                                                                                           ww5_sbcoS [Occ=Once]
                                                                                                                           ww6_sbcoT [Occ=Once] ->
                                                                                                          $w$j_sbcnz
                                                                                                              GHC.Prim.void#
                                                                                                              ww1_sbcoO
                                                                                                              ww2_sbcoP
                                                                                                              ww3_sbcoQ
                                                                                                              ww4_sbcoR
                                                                                                              ww5_sbcoS
                                                                                                              ww6_sbcoT;
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                    };
                                                              };
                                                        };
                                                };
                                            GHC.Types.True ->
                                                case
                                                    GHC.IO.Handle.Internals.hLookAhead_2
                                                        wild_sbcn3 wild1_sbcnn GHC.Prim.void#
                                                of
                                                { Unit# ipv3_sbcoW [Occ=Once] ->
                                                      case
                                                          writeMutVar# [dt2_sbcnc
                                                                        ipv3_sbcoW
                                                                        GHC.Prim.void#]
                                                      of
                                                      s2#_sbcoX
                                                      { (##) -> Unit# [GHC.Types.True];
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in 
          GHC.IO.Handle.Internals.wantReadableHandle_1
              GHC.IO.Handle.Text.hWaitForInput2 h_sbcmU sat_sbcoY GHC.Prim.void#;

GHC.IO.Handle.Text.hWaitForInput
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Types.Int -> GHC.Types.IO GHC.Types.Bool
[GblId, Arity=3, Str=<S,1*U><L,U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.IO.Handle.Text.hWaitForInput1 eta_B3 eta_B2 GHC.Prim.void#;

