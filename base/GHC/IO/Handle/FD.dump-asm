
==================== Asm code ====================
2018-03-16 16:06:12.142950456 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle12_closure
.type GHC.IO.Handle.FD.fdToHandle12_closure, @object
GHC.IO.Handle.FD.fdToHandle12_closure:
	.quad	GHC.IO.Handle.FD.fdToHandle12_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.143925647 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.fdToHandle12_entry
.type GHC.IO.Handle.FD.fdToHandle12_entry, @object
GHC.IO.Handle.FD.fdToHandle12_entry:
_cbgp3:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgp4
_cbgp5:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbgoX
_cbgoW:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_cbgoY_info,-24(%rbp)
	xorl %r9d,%r9d
	movl $GHC.IO.FD.$tcFD1_closure,%r8d
	movl $GHC.IO.FD.$trModule_closure,%edi
	movq $-2900453971751795240,%rsi
	movq $-7607928521190512554,%r14
	movq $GHC.Types.krep$*_closure,-40(%rbp)
	movq $GHC.Types.[]_closure+1,-32(%rbp)
	addq $-40,%rbp
	jmp Data.Typeable.Internal.$wmkTrCon_entry
_cbgp4:
	jmp *-16(%r13)
_cbgoX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.FD.fdToHandle12_entry, .-GHC.IO.Handle.FD.fdToHandle12_entry


==================== Asm code ====================
2018-03-16 16:06:12.144671402 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle12_info
.type GHC.IO.Handle.FD.fdToHandle12_info, @object
GHC.IO.Handle.FD.fdToHandle12_info:
	.quad	GHC.IO.Handle.FD.fdToHandle12_entry
	.quad	0
	.quad	4294967317
	.quad	SbfJE_srt


==================== Asm code ====================
2018-03-16 16:06:12.145340154 UTC

.section .text
.align 8
_cbgoY:
_cbgoY:
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-40,%rbp
	jmp _cbgoZ
	.size _cbgoY, .-_cbgoY


==================== Asm code ====================
2018-03-16 16:06:12.145921728 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgoY_info:
	.quad	_cbgoY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:12.146604518 UTC

.section .text
.align 8
_cbgoZ:
_cbgoZ:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbgp8
_cbgp7:
	movq $Data.Typeable.Internal.TrTyCon_con_info,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -38(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbgp8:
	movq $48,904(%r13)
	movq $block_cbgoZ_info,(%rbp)
	jmp stg_gc_noregs
	.size _cbgoZ, .-_cbgoZ


==================== Asm code ====================
2018-03-16 16:06:12.147309934 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgoZ_info:
	.quad	_cbgoZ
	.quad	1093
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:12.148911808 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.FD.$trModule4_bytes
.type GHC.IO.Handle.FD.$trModule4_bytes, @object
GHC.IO.Handle.FD.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:06:12.150531732 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.$trModule3_closure
.type GHC.IO.Handle.FD.$trModule3_closure, @object
GHC.IO.Handle.FD.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.FD.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:06:12.152176055 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.FD.$trModule2_bytes
.type GHC.IO.Handle.FD.$trModule2_bytes, @object
GHC.IO.Handle.FD.$trModule2_bytes:
	.asciz "GHC.IO.Handle.FD"


==================== Asm code ====================
2018-03-16 16:06:12.154056963 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.$trModule1_closure
.type GHC.IO.Handle.FD.$trModule1_closure, @object
GHC.IO.Handle.FD.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.FD.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:06:12.155726662 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.$trModule_closure
.type GHC.IO.Handle.FD.$trModule_closure, @object
GHC.IO.Handle.FD.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.IO.Handle.FD.$trModule3_closure+1
	.quad	GHC.IO.Handle.FD.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:12.157420706 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_rbfCu_bytes:
	.asciz "handleToFd"


==================== Asm code ====================
2018-03-16 16:06:12.160036296 UTC

.section .data
.align 8
.align 1
lvl1_rbfCv_closure:
	.quad	lvl1_rbfCv_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.160887449 UTC

.section .text
.align 8
lvl1_rbfCv_entry:
_cbgpG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgpH
_cbgpI:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbgpF
_cbgpE:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl_rbfCu_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbgpH:
	jmp *-16(%r13)
_cbgpF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl1_rbfCv_entry, .-lvl1_rbfCv_entry


==================== Asm code ====================
2018-03-16 16:06:12.161610572 UTC

.section .data.rel.ro
.align 8
.align 1
lvl1_rbfCv_info:
	.quad	lvl1_rbfCv_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:12.163193767 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl2_rbfCw_bytes:
	.asciz "not a file descriptor"


==================== Asm code ====================
2018-03-16 16:06:12.166076189 UTC

.section .data
.align 8
.align 1
lvl3_rbfCx_closure:
	.quad	lvl3_rbfCx_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.166868969 UTC

.section .text
.align 8
lvl3_rbfCx_entry:
_cbgpX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgpY
_cbgpZ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbgpW
_cbgpV:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl2_rbfCw_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbgpY:
	jmp *-16(%r13)
_cbgpW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl3_rbfCx_entry, .-lvl3_rbfCx_entry


==================== Asm code ====================
2018-03-16 16:06:12.167563782 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_rbfCx_info:
	.quad	lvl3_rbfCx_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:12.172086879 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.handleToFd3_closure
.type GHC.IO.Handle.FD.handleToFd3_closure, @object
GHC.IO.Handle.FD.handleToFd3_closure:
	.quad	GHC.IO.Handle.FD.handleToFd3_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.172916045 UTC

.section .text
.align 8
sat_sbfCX_entry:
_cbgqh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgqi
_cbgqj:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbgql
_cbgqk:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $GHC.Base.Just_con_info,-64(%r12)
	movq %rax,-56(%r12)
	movq $GHC.IO.Exception.IOError_con_info,-48(%r12)
	leaq -62(%r12),%rax
	movq %rax,-40(%r12)
	movq $GHC.IO.Exception.InappropriateType_closure+1,-32(%r12)
	movq $lvl1_rbfCv_closure,-24(%r12)
	movq $lvl3_rbfCx_closure,-16(%r12)
	movq $GHC.Base.Nothing_closure+1,-8(%r12)
	movq $GHC.Base.Nothing_closure+1,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_cbgql:
	movq $72,904(%r13)
_cbgqi:
	jmp *-16(%r13)
	.size sat_sbfCX_entry, .-sat_sbfCX_entry


==================== Asm code ====================
2018-03-16 16:06:12.173689779 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfCX_info:
	.quad	sat_sbfCX_entry
	.quad	1
	.quad	30064771088
	.quad	SbfJE_srt+8


==================== Asm code ====================
2018-03-16 16:06:12.174399114 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.handleToFd3_entry
.type GHC.IO.Handle.FD.handleToFd3_entry, @object
GHC.IO.Handle.FD.handleToFd3_entry:
_cbgqm:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbgqq
_cbgqp:
	movq $sat_sbfCX_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	jmp stg_raiseIO#
_cbgqq:
	movq $24,904(%r13)
	movl $GHC.IO.Handle.FD.handleToFd3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.handleToFd3_entry, .-GHC.IO.Handle.FD.handleToFd3_entry


==================== Asm code ====================
2018-03-16 16:06:12.174981541 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.handleToFd3_info
.type GHC.IO.Handle.FD.handleToFd3_info, @object
GHC.IO.Handle.FD.handleToFd3_info:
	.quad	GHC.IO.Handle.FD.handleToFd3_entry
	.quad	0
	.quad	64424509454
	.quad	8589934597
	.quad	SbfJE_srt+8


==================== Asm code ====================
2018-03-16 16:06:12.176609512 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl4_rbfCy_bytes:
	.asciz "not a file handle"


==================== Asm code ====================
2018-03-16 16:06:12.179512682 UTC

.section .data
.align 8
.align 1
lvl5_rbfCz_closure:
	.quad	lvl5_rbfCz_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.180285358 UTC

.section .text
.align 8
lvl5_rbfCz_entry:
_cbgqH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgqI
_cbgqJ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbgqG
_cbgqF:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl4_rbfCy_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbgqI:
	jmp *-16(%r13)
_cbgqG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl5_rbfCz_entry, .-lvl5_rbfCz_entry


==================== Asm code ====================
2018-03-16 16:06:12.18096827 UTC

.section .data.rel.ro
.align 8
.align 1
lvl5_rbfCz_info:
	.quad	lvl5_rbfCz_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:12.184163688 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.handleToFd2_closure
.type GHC.IO.Handle.FD.handleToFd2_closure, @object
GHC.IO.Handle.FD.handleToFd2_closure:
	.quad	GHC.IO.Handle.FD.handleToFd2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.184928513 UTC

.section .text
.align 8
sat_sbfD2_entry:
_cbgr1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgr2
_cbgr3:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbgr5
_cbgr4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $GHC.Base.Just_con_info,-64(%r12)
	movq %rax,-56(%r12)
	movq $GHC.IO.Exception.IOError_con_info,-48(%r12)
	leaq -62(%r12),%rax
	movq %rax,-40(%r12)
	movq $GHC.IO.Exception.InappropriateType_closure+1,-32(%r12)
	movq $lvl1_rbfCv_closure,-24(%r12)
	movq $lvl5_rbfCz_closure,-16(%r12)
	movq $GHC.Base.Nothing_closure+1,-8(%r12)
	movq $GHC.Base.Nothing_closure+1,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_cbgr5:
	movq $72,904(%r13)
_cbgr2:
	jmp *-16(%r13)
	.size sat_sbfD2_entry, .-sat_sbfD2_entry


==================== Asm code ====================
2018-03-16 16:06:12.185725486 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfD2_info:
	.quad	sat_sbfD2_entry
	.quad	1
	.quad	81604378640
	.quad	SbfJE_srt+8


==================== Asm code ====================
2018-03-16 16:06:12.186464889 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.handleToFd2_entry
.type GHC.IO.Handle.FD.handleToFd2_entry, @object
GHC.IO.Handle.FD.handleToFd2_entry:
_cbgr6:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbgra
_cbgr9:
	movq $sat_sbfD2_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	jmp stg_raiseIO#
_cbgra:
	movq $24,904(%r13)
	movl $GHC.IO.Handle.FD.handleToFd2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.handleToFd2_entry, .-GHC.IO.Handle.FD.handleToFd2_entry


==================== Asm code ====================
2018-03-16 16:06:12.187131114 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.handleToFd2_info
.type GHC.IO.Handle.FD.handleToFd2_info, @object
GHC.IO.Handle.FD.handleToFd2_info:
	.quad	GHC.IO.Handle.FD.handleToFd2_entry
	.quad	0
	.quad	219043332110
	.quad	8589934597
	.quad	SbfJE_srt+8


==================== Asm code ====================
2018-03-16 16:06:12.191637718 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.handleToFd1_closure
.type GHC.IO.Handle.FD.handleToFd1_closure, @object
GHC.IO.Handle.FD.handleToFd1_closure:
	.quad	GHC.IO.Handle.FD.handleToFd1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.192414269 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.handleToFd1_entry
.type GHC.IO.Handle.FD.handleToFd1_entry, @object
GHC.IO.Handle.FD.handleToFd1_entry:
_cbgrv:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgrw
_cbgrx:
	movq $block_cbgro_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbgro
_cbgrp:
	movq (%rbx),%rax
	jmp *(%rax)
_cbgrw:
	movl $GHC.IO.Handle.FD.handleToFd1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.handleToFd1_entry, .-GHC.IO.Handle.FD.handleToFd1_entry


==================== Asm code ====================
2018-03-16 16:06:12.193064985 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.handleToFd1_info
.type GHC.IO.Handle.FD.handleToFd1_info, @object
GHC.IO.Handle.FD.handleToFd1_info:
	.quad	GHC.IO.Handle.FD.handleToFd1_entry
	.quad	0
	.quad	261993005070
	.quad	8589934597
	.quad	SbfJE_srt+32


==================== Asm code ====================
2018-03-16 16:06:12.193859271 UTC

.section .text
.align 8
_cbgro:
_cbgro:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbgrs
_cbgrt:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.IO.Handle.FD.handleToFd2_entry
_cbgrs:
	movq $block_cbgrA_info,-8(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_readMVar#
	.size _cbgro, .-_cbgro


==================== Asm code ====================
2018-03-16 16:06:12.194535435 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgro_info:
	.quad	_cbgro
	.quad	0
	.quad	124554051614
	.quad	SbfJE_srt+32


==================== Asm code ====================
2018-03-16 16:06:12.195166295 UTC

.section .text
.align 8
_cbgrA:
_cbgrA:
	movq $block_cbgrC_info,(%rbp)
	testb $7,%bl
	jne _cbgrC
_cbgrF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgrA, .-_cbgrA


==================== Asm code ====================
2018-03-16 16:06:12.195703503 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgrA_info:
	.quad	_cbgrA
	.quad	1
	.quad	107374182430
	.quad	SbfJE_srt+32


==================== Asm code ====================
2018-03-16 16:06:12.196293149 UTC

.section .text
.align 8
_cbgrC:
_cbgrC:
	movq $block_cbgrJ_info,-8(%rbp)
	movl $GHC.IO.Handle.FD.fdToHandle12_closure,%esi
	movq 23(%rbx),%r14
	movq 31(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp Data.Typeable.Internal.sameTypeRep_entry
	.size _cbgrC, .-_cbgrC


==================== Asm code ====================
2018-03-16 16:06:12.196914726 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgrC_info:
	.quad	_cbgrC
	.quad	1
	.quad	107374182430
	.quad	SbfJE_srt+32


==================== Asm code ====================
2018-03-16 16:06:12.197653424 UTC

.section .text
.align 8
_cbgrJ:
_cbgrJ:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbgrQ
_cbgrU:
	movq 8(%rbp),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbgrQ:
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.FD.handleToFd3_entry
	.size _cbgrJ, .-_cbgrJ


==================== Asm code ====================
2018-03-16 16:06:12.198210385 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgrJ_info:
	.quad	_cbgrJ
	.quad	2
	.quad	4294967326
	.quad	SbfJE_srt+32


==================== Asm code ====================
2018-03-16 16:06:12.20030358 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.handleToFd_closure
.type GHC.IO.Handle.FD.handleToFd_closure, @object
GHC.IO.Handle.FD.handleToFd_closure:
	.quad	GHC.IO.Handle.FD.handleToFd_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.20088656 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.handleToFd_entry
.type GHC.IO.Handle.FD.handleToFd_entry, @object
GHC.IO.Handle.FD.handleToFd_entry:
_cbgsu:
	jmp GHC.IO.Handle.FD.handleToFd1_entry
	.size GHC.IO.Handle.FD.handleToFd_entry, .-GHC.IO.Handle.FD.handleToFd_entry


==================== Asm code ====================
2018-03-16 16:06:12.201744263 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.handleToFd_info
.type GHC.IO.Handle.FD.handleToFd_info, @object
GHC.IO.Handle.FD.handleToFd_info:
	.quad	GHC.IO.Handle.FD.handleToFd_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbfJE_srt+72


==================== Asm code ====================
2018-03-16 16:06:12.203370934 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.FD.fdToHandle11_bytes
.type GHC.IO.Handle.FD.fdToHandle11_bytes, @object
GHC.IO.Handle.FD.fdToHandle11_bytes:
	.asciz "openFile"


==================== Asm code ====================
2018-03-16 16:06:12.206282542 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle10_closure
.type GHC.IO.Handle.FD.fdToHandle10_closure, @object
GHC.IO.Handle.FD.fdToHandle10_closure:
	.quad	GHC.IO.Handle.FD.fdToHandle10_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.207135022 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.fdToHandle10_entry
.type GHC.IO.Handle.FD.fdToHandle10_entry, @object
GHC.IO.Handle.FD.fdToHandle10_entry:
_cbgsI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgsJ
_cbgsK:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbgsH
_cbgsG:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.FD.fdToHandle11_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbgsJ:
	jmp *-16(%r13)
_cbgsH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.FD.fdToHandle10_entry, .-GHC.IO.Handle.FD.fdToHandle10_entry


==================== Asm code ====================
2018-03-16 16:06:12.207846923 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle10_info
.type GHC.IO.Handle.FD.fdToHandle10_info, @object
GHC.IO.Handle.FD.fdToHandle10_info:
	.quad	GHC.IO.Handle.FD.fdToHandle10_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:12.209567704 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.FD.fdToHandle9_bytes
.type GHC.IO.Handle.FD.fdToHandle9_bytes, @object
GHC.IO.Handle.FD.fdToHandle9_bytes:
	.asciz "is a directory"


==================== Asm code ====================
2018-03-16 16:06:12.212044933 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle8_closure
.type GHC.IO.Handle.FD.fdToHandle8_closure, @object
GHC.IO.Handle.FD.fdToHandle8_closure:
	.quad	GHC.IO.Handle.FD.fdToHandle8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.212885322 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.fdToHandle8_entry
.type GHC.IO.Handle.FD.fdToHandle8_entry, @object
GHC.IO.Handle.FD.fdToHandle8_entry:
_cbgsZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgt0
_cbgt1:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbgsY
_cbgsX:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.FD.fdToHandle9_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbgt0:
	jmp *-16(%r13)
_cbgsY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.FD.fdToHandle8_entry, .-GHC.IO.Handle.FD.fdToHandle8_entry


==================== Asm code ====================
2018-03-16 16:06:12.213997097 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle8_info
.type GHC.IO.Handle.FD.fdToHandle8_info, @object
GHC.IO.Handle.FD.fdToHandle8_info:
	.quad	GHC.IO.Handle.FD.fdToHandle8_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:12.215851831 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle7_closure
.type GHC.IO.Handle.FD.fdToHandle7_closure, @object
GHC.IO.Handle.FD.fdToHandle7_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.InappropriateType_closure+1
	.quad	GHC.IO.Handle.FD.fdToHandle10_closure
	.quad	GHC.IO.Handle.FD.fdToHandle8_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.218419092 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle6_closure
.type GHC.IO.Handle.FD.fdToHandle6_closure, @object
GHC.IO.Handle.FD.fdToHandle6_closure:
	.quad	GHC.IO.Handle.FD.fdToHandle6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.219231402 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.fdToHandle6_entry
.type GHC.IO.Handle.FD.fdToHandle6_entry, @object
GHC.IO.Handle.FD.fdToHandle6_entry:
_cbgtg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgth
_cbgti:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbgtf
_cbgte:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.FD.fdToHandle7_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_cbgth:
	jmp *-16(%r13)
_cbgtf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.FD.fdToHandle6_entry, .-GHC.IO.Handle.FD.fdToHandle6_entry


==================== Asm code ====================
2018-03-16 16:06:12.219940798 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle6_info
.type GHC.IO.Handle.FD.fdToHandle6_info, @object
GHC.IO.Handle.FD.fdToHandle6_info:
	.quad	GHC.IO.Handle.FD.fdToHandle6_entry
	.quad	0
	.quad	2203318222869
	.quad	SbfJE_srt+8


==================== Asm code ====================
2018-03-16 16:06:12.232285145 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle5_closure
.type GHC.IO.Handle.FD.fdToHandle5_closure, @object
GHC.IO.Handle.FD.fdToHandle5_closure:
	.quad	GHC.IO.Handle.FD.fdToHandle5_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.233110022 UTC

.section .text
.align 8
nl_sbfDG_entry:
_cbgtG:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgtH
_cbgtI:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbgtD_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbgtD
_cbgtE:
	movq (%rbx),%rax
	jmp *(%rax)
_cbgtH:
	jmp *-16(%r13)
	.size nl_sbfDG_entry, .-nl_sbfDG_entry


==================== Asm code ====================
2018-03-16 16:06:12.233794664 UTC

.section .data.rel.ro
.align 8
.align 1
nl_sbfDG_info:
	.quad	nl_sbfDG_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:12.234442733 UTC

.section .text
.align 8
_cbgtD:
_cbgtD:
	movl $GHC.IO.Handle.Types.nativeNewlineMode_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgtD, .-_cbgtD


==================== Asm code ====================
2018-03-16 16:06:12.234995879 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgtD_info:
	.quad	_cbgtD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:12.235759433 UTC

.section .text
.align 8
sat_sbfDL_entry:
_cbgu5:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgu6
_cbgu7:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbgtW_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbgtW
_cbgtX:
	movq (%rbx),%rax
	jmp *(%rax)
_cbgu6:
	jmp *-16(%r13)
	.size sat_sbfDL_entry, .-sat_sbfDL_entry


==================== Asm code ====================
2018-03-16 16:06:12.236422269 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfDL_info:
	.quad	sat_sbfDL_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:12.237211026 UTC

.section .text
.align 8
_cbgtW:
_cbgtW:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ubguk
_ubgul:
	cmpq $4,%rbx
	jb _cbgu2
_cbgu3:
	movl $GHC.IO.Handle.Types.ReadWriteHandle_closure+6,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbgu2:
	movl $GHC.IO.Handle.Types.AppendHandle_closure+5,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ubguk:
	cmpq $2,%rbx
	jb _cbgu0
_cbgu1:
	movl $GHC.IO.Handle.Types.WriteHandle_closure+4,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbgu0:
	movl $GHC.IO.Handle.Types.ReadHandle_closure+3,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbgtW, .-_cbgtW


==================== Asm code ====================
2018-03-16 16:06:12.238216574 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgtW_info:
	.quad	_cbgtW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:12.239010982 UTC

.section .text
.align 8
sat_sbfE4_entry:
_cbguG:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbguS
_cbguR:
	subq $8,%rsp
	movq 15(%rbx),%rax
	movslq %eax,%rsi
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call ghczuwrapperZC17ZCbaseZCSystemziPosixziInternalsZCfcntl
	addq $8,%rsp
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cbguS:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_sbfE4_entry, .-sat_sbfE4_entry


==================== Asm code ====================
2018-03-16 16:06:12.239642245 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfE4_info:
	.quad	sat_sbfE4_entry
	.quad	8589934592
	.quad	13
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:12.240419493 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.fdToHandle5_entry
.type GHC.IO.Handle.FD.fdToHandle5_entry, @object
GHC.IO.Handle.FD.fdToHandle5_entry:
_cbguX:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cbguY
_cbguZ:
	movq $block_cbgun_info,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbgun
_cbguo:
	movq (%rbx),%rax
	jmp *(%rax)
_cbguY:
	movl $GHC.IO.Handle.FD.fdToHandle5_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.fdToHandle5_entry, .-GHC.IO.Handle.FD.fdToHandle5_entry


==================== Asm code ====================
2018-03-16 16:06:12.241111236 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle5_info
.type GHC.IO.Handle.FD.fdToHandle5_info, @object
GHC.IO.Handle.FD.fdToHandle5_info:
	.quad	GHC.IO.Handle.FD.fdToHandle5_entry
	.quad	0
	.quad	17562121273358
	.quad	30064771098
	.quad	SbfJE_srt+64


==================== Asm code ====================
2018-03-16 16:06:12.241850471 UTC

.section .text
.align 8
_cbgun:
_cbgun:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbguU
_cbguV:
	movq $block_cbgut_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cbgut
_cbguu:
	movq (%rbx),%rax
	jmp *(%rax)
_cbguU:
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _cbgtx
	.size _cbgun, .-_cbgun


==================== Asm code ====================
2018-03-16 16:06:12.2424931 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgun_info:
	.quad	_cbgun
	.quad	5
	.quad	13164074762270
	.quad	SbfJE_srt+64


==================== Asm code ====================
2018-03-16 16:06:12.243224883 UTC

.section .text
.align 8
_cbgut:
_cbgut:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbgvG
_cbgvF:
	movq 7(%rbx),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_f_getfl
	addq $8,%rsp
	movq $sat_sbfE4_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	movq $block_cbgvA_info,-8(%rbp)
	leaq -15(%r12),%rdi
	movl $System.Posix.Internals.setNonBlockingFD3_closure,%esi
	movl $System.Posix.Internals.fdFileSize_pred_closure+1,%r14d
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp Foreign.C.Error.throwErrnoIfMinus1Retry2_entry
_cbgvG:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbgut, .-_cbgut


==================== Asm code ====================
2018-03-16 16:06:12.243905417 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgut_info:
	.quad	_cbgut
	.quad	4
	.quad	13164074762270
	.quad	SbfJE_srt+64


==================== Asm code ====================
2018-03-16 16:06:12.244539351 UTC

.section .text
.align 8
_cbgvA:
_cbgvA:
	movq $block_cbgvC_info,(%rbp)
	testb $7,%bl
	jne _cbgvC
_cbgvI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgvA, .-_cbgvA


==================== Asm code ====================
2018-03-16 16:06:12.245095365 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgvA_info:
	.quad	_cbgvA
	.quad	69
	.quad	13060995547166
	.quad	SbfJE_srt+64


==================== Asm code ====================
2018-03-16 16:06:12.246865577 UTC

.section .text
.align 8
_cbgvC:
_cbgvC:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbgvO
_cbgvN:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	subq $8,%rsp
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call __hscore_o_nonblock
	addq $8,%rsp
	movslq %eax,%rax
	movq %rbx,%rcx
	orq %rax,%rcx
	cmpq %rcx,%rbx
	je _cbgw8
_cbgw9:
	subq $8,%rsp
	xorl %eax,%eax
	movq %rcx,%rbx
	call __hscore_f_setfl
	addq $8,%rsp
	subq $8,%rsp
	movq %r14,%rcx
	movslq %eax,%rax
	movq %rbx,%rdx
	movq %rcx,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	call ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl
	addq $8,%rsp
	movq $GHC.IO.FD.FD_con_info,-16(%r12)
	movq %r14,-8(%r12)
	movq $1,(%r12)
	leaq -15(%r12),%rbx
	movq %rbx,8(%rbp)
	addq $8,%rbp
	jmp _cbgtx
_cbgw8:
	movq $GHC.IO.FD.FD_con_info,-16(%r12)
	movq %r14,-8(%r12)
	movq $1,(%r12)
	leaq -15(%r12),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _cbgtx
_cbgvO:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbgvC, .-_cbgvC


==================== Asm code ====================
2018-03-16 16:06:12.247655502 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgvC_info:
	.quad	_cbgvC
	.quad	69
	.quad	13060995547166
	.quad	SbfJE_srt+64


==================== Asm code ====================
2018-03-16 16:06:12.248407426 UTC

.section .text
.align 8
_cbgtx:
_cbgtx:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbgv3
_cbgv2:
	movq $nl_sbfDG_info,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq $block_cbgv0_info,-8(%rbp)
	movq 8(%rbp),%rbx
	leaq -16(%r12),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbgv0
_cbgv7:
	movq (%rbx),%rax
	jmp *(%rax)
_cbgv3:
	movq $24,904(%r13)
	movq (%rbp),%rax
	movq $block_cbgtw_info,(%rbp)
	movq %rax,%rbx
	jmp stg_gc_unpt_r1
	.size _cbgtx, .-_cbgtx


==================== Asm code ====================
2018-03-16 16:06:12.249125248 UTC

.section .text
.align 8
_cbgtw:
_cbgtw:
	movq %rbx,(%rbp)
	jmp _cbgtx
	.size _cbgtw, .-_cbgtw


==================== Asm code ====================
2018-03-16 16:06:12.249638936 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgtw_info:
	.quad	_cbgtw
	.quad	4
	.quad	13060995547166
	.quad	SbfJE_srt+64


==================== Asm code ====================
2018-03-16 16:06:12.250360689 UTC

.section .text
.align 8
_cbgv0:
_cbgv0:
	andl $7,%ebx
	cmpq $1,%rbx
	jne _ubgwo
_cbgvh:
	movl $GHC.IO.Handle.FD.fdToHandle6_closure,%ebx
	addq $48,%rbp
	jmp stg_raiseIO#
_ubgwo:
	cmpq $2,%rbx
	jne _cbgtQ
_cbgvm:
	movq $block_cbgvk_info,(%rbp)
	movq 32(%rbp),%rbx
	testb $7,%bl
	jne _cbgvk
_cbgvn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgv0, .-_cbgv0


==================== Asm code ====================
2018-03-16 16:06:12.25100166 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgv0_info:
	.quad	_cbgv0
	.quad	5
	.quad	13060995547166
	.quad	SbfJE_srt+64


==================== Asm code ====================
2018-03-16 16:06:12.251733085 UTC

.section .text
.align 8
_cbgvk:
_cbgvk:
	andl $7,%ebx
	cmpq $4,%rbx
	je _cbgvx
	jmp _cbgtQ
_cbgvx:
	movq 24(%rbp),%r9
	movq 8(%rbp),%r8
	movl $GHC.IO.Handle.FD.fdToHandle12_closure,%edi
	movl $GHC.IO.FD.$fBufferedIOFD_closure,%esi
	movl $GHC.IO.FD.$fIODeviceFD_closure,%r14d
	movq 40(%rbp),%rax
	movq %rax,32(%rbp)
	movq 16(%rbp),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp GHC.IO.Handle.Internals.mkDuplexHandle1_entry
	.size _cbgvk, .-_cbgvk


==================== Asm code ====================
2018-03-16 16:06:12.252368318 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgvk_info:
	.quad	_cbgvk
	.quad	5
	.quad	4264902524958
	.quad	SbfJE_srt+64


==================== Asm code ====================
2018-03-16 16:06:12.253132797 UTC

.section .text
.align 8
_cbgtQ:
_cbgtQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbgv6
_cbgv5:
	movq $sat_sbfDL_info,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq 24(%rbp),%r9
	movq 8(%rbp),%r8
	movl $GHC.IO.Handle.FD.fdToHandle12_closure,%edi
	movl $GHC.IO.FD.$fBufferedIOFD_closure,%esi
	movl $GHC.IO.FD.$fIODeviceFD_closure,%r14d
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	movq $GHC.Types.True_closure+2,8(%rbp)
	movq 16(%rbp),%rax
	movq 40(%rbp),%rbx
	movq %rbx,16(%rbp)
	movq %rax,24(%rbp)
	movq $GHC.IO.Handle.Internals.mkDuplexHandle4_closure,32(%rbp)
	movq $GHC.Base.Nothing_closure+1,40(%rbp)
	jmp GHC.IO.Handle.Internals.mkDuplexHandle5_entry
_cbgv6:
	movq $24,904(%r13)
	movq $block_cbgtQ_info,(%rbp)
	jmp stg_gc_noregs
	.size _cbgtQ, .-_cbgtQ


==================== Asm code ====================
2018-03-16 16:06:12.253884646 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgtQ_info:
	.quad	_cbgtQ
	.quad	5
	.quad	4127463571486
	.quad	SbfJE_srt+64


==================== Asm code ====================
2018-03-16 16:06:12.25633113 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.mkHandleFromFD_closure
.type GHC.IO.Handle.FD.mkHandleFromFD_closure, @object
GHC.IO.Handle.FD.mkHandleFromFD_closure:
	.quad	GHC.IO.Handle.FD.mkHandleFromFD_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.256942255 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.mkHandleFromFD_entry
.type GHC.IO.Handle.FD.mkHandleFromFD_entry, @object
GHC.IO.Handle.FD.mkHandleFromFD_entry:
_cbgy2:
	jmp GHC.IO.Handle.FD.fdToHandle5_entry
	.size GHC.IO.Handle.FD.mkHandleFromFD_entry, .-GHC.IO.Handle.FD.mkHandleFromFD_entry


==================== Asm code ====================
2018-03-16 16:06:12.257817303 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.mkHandleFromFD_info
.type GHC.IO.Handle.FD.mkHandleFromFD_info, @object
GHC.IO.Handle.FD.mkHandleFromFD_info:
	.quad	GHC.IO.Handle.FD.mkHandleFromFD_entry
	.quad	0
	.quad	4294967310
	.quad	30064771098
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.259517517 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle'2_closure
.type GHC.IO.Handle.FD.fdToHandle'2_closure, @object
GHC.IO.Handle.FD.fdToHandle'2_closure:
	.quad	GHC.Word.W64#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.268639082 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle'1_closure
.type GHC.IO.Handle.FD.fdToHandle'1_closure, @object
GHC.IO.Handle.FD.fdToHandle'1_closure:
	.quad	GHC.IO.Handle.FD.fdToHandle'1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.269488646 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.fdToHandle'1_entry
.type GHC.IO.Handle.FD.fdToHandle'1_entry, @object
GHC.IO.Handle.FD.fdToHandle'1_entry:
_cbgyn:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgyo
_cbgyp:
	movq $block_cbgyg_info,-40(%rbp)
	movq %rsi,%rbx
	movq %r14,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbgyg
_cbgyh:
	movq (%rbx),%rax
	jmp *(%rax)
_cbgyo:
	movl $GHC.IO.Handle.FD.fdToHandle'1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.fdToHandle'1_entry, .-GHC.IO.Handle.FD.fdToHandle'1_entry


==================== Asm code ====================
2018-03-16 16:06:12.270177104 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle'1_info
.type GHC.IO.Handle.FD.fdToHandle'1_info, @object
GHC.IO.Handle.FD.fdToHandle'1_info:
	.quad	GHC.IO.Handle.FD.fdToHandle'1_entry
	.quad	0
	.quad	124554051598
	.quad	30064771098
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.270937417 UTC

.section .text
.align 8
_cbgyg:
_cbgyg:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbgyk
_cbgyl:
	movq $block_cbgz6_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbgz6
_cbgz8:
	movq (%rbx),%rax
	jmp *(%rax)
_cbgyk:
	movq 8(%rbp),%rax
	movq $block_cbgyU_info,8(%rbp)
	movq 16(%rbp),%r8
	movl $GHC.Base.Nothing_closure+1,%edi
	movq 32(%rbp),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.IO.FD.$wmkFD_entry
	.size _cbgyg, .-_cbgyg


==================== Asm code ====================
2018-03-16 16:06:12.271622946 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgyg_info:
	.quad	_cbgyg
	.quad	5
	.quad	55834574878
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.272248416 UTC

.section .text
.align 8
_cbgyU:
_cbgyU:
	movq $block_cbgyW_info,(%rbp)
	testb $7,%bl
	jne _cbgyW
_cbgyZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgyU, .-_cbgyU


==================== Asm code ====================
2018-03-16 16:06:12.272797896 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgyU_info:
	.quad	_cbgyU
	.quad	4
	.quad	21474836510
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.273440035 UTC

.section .text
.align 8
_cbgyW:
_cbgyW:
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp _sbfEC
	.size _cbgyW, .-_cbgyW


==================== Asm code ====================
2018-03-16 16:06:12.274023952 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgyW_info:
	.quad	_cbgyW
	.quad	4
	.quad	21474836510
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.274850951 UTC

.section .text
.align 8
_cbgz6:
_cbgz6:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq %rbx,%rsi
	andl $7,%esi
	cmpq $3,%rsi
	je _cbgzy
_cbgzi:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbgzl
_cbgzk:
	movq $(,,)_con_info,-40(%r12)
	movq %rbx,-32(%r12)
	movq $GHC.IO.Handle.FD.fdToHandle'2_closure+1,-24(%r12)
	movq $GHC.IO.Handle.FD.fdToHandle'2_closure+1,-16(%r12)
	movq $GHC.Base.Just_con_info,-8(%r12)
	leaq -39(%r12),%rbx
	movq %rbx,(%r12)
	movq $block_cbgze_info,8(%rbp)
	movq %rcx,%r8
	leaq -6(%r12),%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.IO.FD.$wmkFD_entry
_cbgzy:
	movq $block_cbgzu_info,8(%rbp)
	movq %rcx,%r8
	movl $GHC.Base.Nothing_closure+1,%edi
	movq %rdx,%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.IO.FD.$wmkFD_entry
_cbgzl:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbgz6, .-_cbgz6


==================== Asm code ====================
2018-03-16 16:06:12.275653292 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgz6_info:
	.quad	_cbgz6
	.quad	5
	.quad	55834574878
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.27633376 UTC

.section .text
.align 8
_cbgzu:
_cbgzu:
	movq $block_cbgzw_info,(%rbp)
	testb $7,%bl
	jne _cbgzw
_cbgzA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgzu, .-_cbgzu


==================== Asm code ====================
2018-03-16 16:06:12.276907044 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgzu_info:
	.quad	_cbgzu
	.quad	4
	.quad	21474836510
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.277745872 UTC

.section .text
.align 8
_cbgzw:
_cbgzw:
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp _sbfEC
	.size _cbgzw, .-_cbgzw


==================== Asm code ====================
2018-03-16 16:06:12.278294647 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgzw_info:
	.quad	_cbgzw
	.quad	4
	.quad	21474836510
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.279008359 UTC

.section .text
.align 8
_cbgze:
_cbgze:
	movq $block_cbgzg_info,(%rbp)
	testb $7,%bl
	jne _cbgzg
_cbgzn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgze, .-_cbgze


==================== Asm code ====================
2018-03-16 16:06:12.279647001 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgze_info:
	.quad	_cbgze
	.quad	4
	.quad	21474836510
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.280327857 UTC

.section .text
.align 8
_cbgzg:
_cbgzg:
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp _sbfEC
	.size _cbgzg, .-_cbgzg


==================== Asm code ====================
2018-03-16 16:06:12.280896065 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgzg_info:
	.quad	_cbgzg
	.quad	4
	.quad	21474836510
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.281601998 UTC

.section .text
.align 8
_sbfEC:
_sbfEC:
	movq $block_cbgyt_info,-8(%rbp)
	movq 40(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbgyt
_cbgyv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbfEC, .-_sbfEC


==================== Asm code ====================
2018-03-16 16:06:12.282402077 UTC

.section .text
.align 8
_cbgyt:
_cbgyt:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbgyJ
_cbgyR:
	movq 24(%rbp),%r9
	movq 40(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	movq $GHC.Base.Nothing_closure+1,48(%rbp)
	addq $48,%rbp
	jmp GHC.IO.Handle.FD.fdToHandle5_entry
_cbgyJ:
	movq $block_cbgyz_info,(%rbp)
	movl $GHC.IO.Encoding.getLocaleEncoding1_closure,%ebx
	testb $7,%bl
	jne _cbgyz
_cbgyA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgyt, .-_cbgyt


==================== Asm code ====================
2018-03-16 16:06:12.283085211 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgyt_info:
	.quad	_cbgyt
	.quad	2054
	.quad	21474836510
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.28421388 UTC

.section .text
.align 8
_cbgyz:
_cbgyz:
	movq $block_cbgyE_info,(%rbp)
	movq 7(%rbx),%rbx
	jmp stg_ap_v_fast
	.size _cbgyz, .-_cbgyz


==================== Asm code ====================
2018-03-16 16:06:12.284792062 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgyz_info:
	.quad	_cbgyz
	.quad	2054
	.quad	4294967326
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.285585595 UTC

.section .text
.align 8
_cbgyE:
_cbgyE:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbgyN
_cbgyM:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	movq 24(%rbp),%r9
	movq 40(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	leaq -6(%r12),%rax
	movq %rax,48(%rbp)
	addq $48,%rbp
	jmp GHC.IO.Handle.FD.fdToHandle5_entry
_cbgyN:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbgyE, .-_cbgyE


==================== Asm code ====================
2018-03-16 16:06:12.286222155 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgyE_info:
	.quad	_cbgyE
	.quad	2054
	.quad	4294967326
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.288598682 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle'_closure
.type GHC.IO.Handle.FD.fdToHandle'_closure, @object
GHC.IO.Handle.FD.fdToHandle'_closure:
	.quad	GHC.IO.Handle.FD.fdToHandle'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.289216682 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.fdToHandle'_entry
.type GHC.IO.Handle.FD.fdToHandle'_entry, @object
GHC.IO.Handle.FD.fdToHandle'_entry:
_cbgAX:
	jmp GHC.IO.Handle.FD.fdToHandle'1_entry
	.size GHC.IO.Handle.FD.fdToHandle'_entry, .-GHC.IO.Handle.FD.fdToHandle'_entry


==================== Asm code ====================
2018-03-16 16:06:12.290147581 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle'_info
.type GHC.IO.Handle.FD.fdToHandle'_info, @object
GHC.IO.Handle.FD.fdToHandle'_info:
	.quad	GHC.IO.Handle.FD.fdToHandle'_entry
	.quad	0
	.quad	4294967310
	.quad	30064771098
	.quad	SbfJE_srt+176


==================== Asm code ====================
2018-03-16 16:06:12.291829383 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.FD.fdToHandle4_bytes
.type GHC.IO.Handle.FD.fdToHandle4_bytes, @object
GHC.IO.Handle.FD.fdToHandle4_bytes:
	.asciz "<file descriptor: "


==================== Asm code ====================
2018-03-16 16:06:12.29348267 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.FD.fdToHandle3_bytes
.type GHC.IO.Handle.FD.fdToHandle3_bytes, @object
GHC.IO.Handle.FD.fdToHandle3_bytes:
	.asciz ">"


==================== Asm code ====================
2018-03-16 16:06:12.295972252 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle2_closure
.type GHC.IO.Handle.FD.fdToHandle2_closure, @object
GHC.IO.Handle.FD.fdToHandle2_closure:
	.quad	GHC.IO.Handle.FD.fdToHandle2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.296820402 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.fdToHandle2_entry
.type GHC.IO.Handle.FD.fdToHandle2_entry, @object
GHC.IO.Handle.FD.fdToHandle2_entry:
_cbgBc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgBd
_cbgBe:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbgBb
_cbgBa:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.FD.fdToHandle3_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbgBd:
	jmp *-16(%r13)
_cbgBb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.FD.fdToHandle2_entry, .-GHC.IO.Handle.FD.fdToHandle2_entry


==================== Asm code ====================
2018-03-16 16:06:12.297521358 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle2_info
.type GHC.IO.Handle.FD.fdToHandle2_info, @object
GHC.IO.Handle.FD.fdToHandle2_info:
	.quad	GHC.IO.Handle.FD.fdToHandle2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:12.304369914 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.$wfdToHandle_closure
.type GHC.IO.Handle.FD.$wfdToHandle_closure, @object
GHC.IO.Handle.FD.$wfdToHandle_closure:
	.quad	GHC.IO.Handle.FD.$wfdToHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.305109335 UTC

.section .text
.align 8
sat_sbfFu_entry:
_cbgBL:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgBR
_cbgBS:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_cbgBI_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbgBI
_cbgBJ:
	movq (%rbx),%rax
	jmp *(%rax)
_cbgBR:
	jmp *-16(%r13)
	.size sat_sbfFu_entry, .-sat_sbfFu_entry


==================== Asm code ====================
2018-03-16 16:06:12.305787201 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfFu_info:
	.quad	sat_sbfFu_entry
	.quad	1
	.quad	4294967312
	.quad	SbfJE_srt+184


==================== Asm code ====================
2018-03-16 16:06:12.306449332 UTC

.section .text
.align 8
_cbgBI:
_cbgBI:
	movq $block_cbgBO_info,(%rbp)
	movl $GHC.Types.[]_closure+1,%edi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Show.$wshowSignedInt_entry
	.size _cbgBI, .-_cbgBI


==================== Asm code ====================
2018-03-16 16:06:12.307041582 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgBI_info:
	.quad	_cbgBI
	.quad	0
	.quad	4294967326
	.quad	SbfJE_srt+184


==================== Asm code ====================
2018-03-16 16:06:12.307728558 UTC

.section .text
.align 8
_cbgBO:
_cbgBO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbgBW
_cbgBV:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movl $GHC.IO.Handle.FD.fdToHandle2_closure,%esi
	leaq -14(%r12),%r14
	addq $8,%rbp
	jmp GHC.Base.++_entry
_cbgBW:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _cbgBO, .-_cbgBO


==================== Asm code ====================
2018-03-16 16:06:12.308280809 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgBO_info:
	.quad	_cbgBO
	.quad	0
	.quad	4294967326
	.quad	SbfJE_srt+184


==================== Asm code ====================
2018-03-16 16:06:12.309022504 UTC

.section .text
.align 8
sat_sbfFv_entry:
_cbgBY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgBZ
_cbgC0:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbgC2
_cbgC1:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq $sat_sbfFu_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	movl $GHC.IO.Handle.FD.fdToHandle4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_cbgC2:
	movq $24,904(%r13)
_cbgBZ:
	jmp *-16(%r13)
	.size sat_sbfFv_entry, .-sat_sbfFv_entry


==================== Asm code ====================
2018-03-16 16:06:12.30970954 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfFv_info:
	.quad	sat_sbfFv_entry
	.quad	1
	.quad	4294967312
	.quad	SbfJE_srt+184


==================== Asm code ====================
2018-03-16 16:06:12.310416324 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.$wfdToHandle_entry
.type GHC.IO.Handle.FD.$wfdToHandle_entry, @object
GHC.IO.Handle.FD.$wfdToHandle_entry:
_cbgC3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgC4
_cbgC5:
	movq $block_cbgBq_info,-16(%rbp)
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp System.Posix.Internals.$wfdGetMode_entry
_cbgC4:
	movl $GHC.IO.Handle.FD.$wfdToHandle_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.$wfdToHandle_entry, .-GHC.IO.Handle.FD.$wfdToHandle_entry


==================== Asm code ====================
2018-03-16 16:06:12.311090527 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.$wfdToHandle_info
.type GHC.IO.Handle.FD.$wfdToHandle_info, @object
GHC.IO.Handle.FD.$wfdToHandle_info:
	.quad	GHC.IO.Handle.FD.$wfdToHandle_entry
	.quad	0
	.quad	1000727379982
	.quad	8589934596
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.31185819 UTC

.section .text
.align 8
_cbgBq:
_cbgBq:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbgC8
_cbgC7:
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_cbgBt_info,(%rbp)
	movl $GHC.Types.False_closure+1,%r8d
	movl $GHC.Base.Nothing_closure+1,%edi
	movq %rbx,%rsi
	leaq -7(%r12),%r14
	movq %rbx,8(%rbp)
	jmp GHC.IO.FD.$wmkFD_entry
_cbgC8:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbgBq, .-_cbgBq


==================== Asm code ====================
2018-03-16 16:06:12.312543178 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgBq_info:
	.quad	_cbgBq
	.quad	65
	.quad	176093659166
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.313185889 UTC

.section .text
.align 8
_cbgBt:
_cbgBt:
	movq $block_cbgBv_info,(%rbp)
	testb $7,%bl
	jne _cbgBv
_cbgBw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgBt, .-_cbgBt


==================== Asm code ====================
2018-03-16 16:06:12.314139124 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgBt_info:
	.quad	_cbgBt
	.quad	1
	.quad	141733920798
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.314864703 UTC

.section .text
.align 8
_cbgBv:
_cbgBv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbgCc
_cbgCb:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_sbfFv_info,-16(%r12)
	movq %rax,(%r12)
	movl $GHC.Types.False_closure+1,%r9d
	movq 8(%rbp),%r8
	leaq -16(%r12),%rdi
	movq %rbx,%rsi
	movq %rax,%r14
	movq $GHC.Base.Nothing_closure+1,8(%rbp)
	addq $8,%rbp
	jmp GHC.IO.Handle.FD.fdToHandle5_entry
_cbgCc:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbgBv, .-_cbgBv


==================== Asm code ====================
2018-03-16 16:06:12.315527663 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgBv_info:
	.quad	_cbgBv
	.quad	1
	.quad	141733920798
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.318458878 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle1_closure
.type GHC.IO.Handle.FD.fdToHandle1_closure, @object
GHC.IO.Handle.FD.fdToHandle1_closure:
	.quad	GHC.IO.Handle.FD.fdToHandle1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.319208297 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.fdToHandle1_entry
.type GHC.IO.Handle.FD.fdToHandle1_entry, @object
GHC.IO.Handle.FD.fdToHandle1_entry:
_cbgCQ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgCR
_cbgCS:
	movq $block_cbgCN_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbgCN
_cbgCO:
	movq (%rbx),%rax
	jmp *(%rax)
_cbgCR:
	movl $GHC.IO.Handle.FD.fdToHandle1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.fdToHandle1_entry, .-GHC.IO.Handle.FD.fdToHandle1_entry


==================== Asm code ====================
2018-03-16 16:06:12.320382059 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle1_info
.type GHC.IO.Handle.FD.fdToHandle1_info, @object
GHC.IO.Handle.FD.fdToHandle1_info:
	.quad	GHC.IO.Handle.FD.fdToHandle1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	SbfJE_srt+200


==================== Asm code ====================
2018-03-16 16:06:12.321037117 UTC

.section .text
.align 8
_cbgCN:
_cbgCN:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.IO.Handle.FD.$wfdToHandle_entry
	.size _cbgCN, .-_cbgCN


==================== Asm code ====================
2018-03-16 16:06:12.321667099 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgCN_info:
	.quad	_cbgCN
	.quad	0
	.quad	4294967326
	.quad	SbfJE_srt+200


==================== Asm code ====================
2018-03-16 16:06:12.323711832 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle_closure
.type GHC.IO.Handle.FD.fdToHandle_closure, @object
GHC.IO.Handle.FD.fdToHandle_closure:
	.quad	GHC.IO.Handle.FD.fdToHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.324305917 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.fdToHandle_entry
.type GHC.IO.Handle.FD.fdToHandle_entry, @object
GHC.IO.Handle.FD.fdToHandle_entry:
_cbgDa:
	jmp GHC.IO.Handle.FD.fdToHandle1_entry
	.size GHC.IO.Handle.FD.fdToHandle_entry, .-GHC.IO.Handle.FD.fdToHandle_entry


==================== Asm code ====================
2018-03-16 16:06:12.324907988 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle_info
.type GHC.IO.Handle.FD.fdToHandle_info, @object
GHC.IO.Handle.FD.fdToHandle_info:
	.quad	GHC.IO.Handle.FD.fdToHandle_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	SbfJE_srt+208


==================== Asm code ====================
2018-03-16 16:06:12.332982395 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile5_closure
.type GHC.IO.Handle.FD.openBinaryFile5_closure, @object
GHC.IO.Handle.FD.openBinaryFile5_closure:
	.quad	GHC.IO.Handle.FD.openBinaryFile5_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.333818123 UTC

.section .text
.align 8
sat_sbfFX_entry:
_cbgDF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgDJ
_cbgDK:
	movq $block_cbgDC_info,-16(%rbp)
	movq 6(%rbx),%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbgDC
_cbgDD:
	movq (%rbx),%rax
	jmp *(%rax)
_cbgDJ:
	jmp *-8(%r13)
	.size sat_sbfFX_entry, .-sat_sbfFX_entry


==================== Asm code ====================
2018-03-16 16:06:12.334459779 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfFX_info:
	.quad	sat_sbfFX_entry
	.quad	1
	.quad	4294967305
	.quad	8589934597
	.quad	SbfJE_srt+216


==================== Asm code ====================
2018-03-16 16:06:12.335096579 UTC

.section .text
.align 8
_cbgDC:
_cbgDC:
	movq $block_cbgDI_info,(%rbp)
	movq 7(%rbx),%r14
	jmp GHC.IO.FD.$w$cclose_entry
	.size _cbgDC, .-_cbgDC


==================== Asm code ====================
2018-03-16 16:06:12.335690546 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgDC_info:
	.quad	_cbgDC
	.quad	1
	.quad	4294967326
	.quad	SbfJE_srt+216


==================== Asm code ====================
2018-03-16 16:06:12.336311892 UTC

.section .text
.align 8
_cbgDI:
_cbgDI:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_raiseIO#
	.size _cbgDI, .-_cbgDI


==================== Asm code ====================
2018-03-16 16:06:12.336827462 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgDI_info:
	.quad	_cbgDI
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:12.337571862 UTC

.section .text
.align 8
sat_sbfFO_entry:
_cbgDU:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgDV
_cbgDW:
	movl $GHC.Types.False_closure+1,%r9d
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 31(%rbx),%rsi
	movq 23(%rbx),%r14
	movq 39(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.IO.Handle.FD.fdToHandle5_entry
_cbgDV:
	jmp *-8(%r13)
	.size sat_sbfFO_entry, .-sat_sbfFO_entry


==================== Asm code ====================
2018-03-16 16:06:12.338254056 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfFO_info:
	.quad	sat_sbfFO_entry
	.quad	5
	.quad	4294967304
	.quad	4294967299
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.338978414 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.openBinaryFile5_entry
.type GHC.IO.Handle.FD.openBinaryFile5_entry, @object
GHC.IO.Handle.FD.openBinaryFile5_entry:
_cbgDX:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgDY
_cbgDZ:
	movq $block_cbgDl_info,-32(%rbp)
	movq %rdi,%rax
	movq %r8,%rdi
	movq %rsi,%rbx
	movq %r14,%rcx
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.IO.FD.openFile1_entry
_cbgDY:
	movl $GHC.IO.Handle.FD.openBinaryFile5_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.openBinaryFile5_entry, .-GHC.IO.Handle.FD.openBinaryFile5_entry


==================== Asm code ====================
2018-03-16 16:06:12.339641011 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile5_info
.type GHC.IO.Handle.FD.openBinaryFile5_info, @object
GHC.IO.Handle.FD.openBinaryFile5_info:
	.quad	GHC.IO.Handle.FD.openBinaryFile5_entry
	.quad	0
	.quad	15414637625358
	.quad	21474836504
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.340329774 UTC

.section .text
.align 8
_cbgDl:
_cbgDl:
	movq $block_cbgDn_info,(%rbp)
	testb $7,%bl
	jne _cbgDn
_cbgDo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgDl, .-_cbgDl


==================== Asm code ====================
2018-03-16 16:06:12.340903916 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgDl_info:
	.quad	_cbgDl
	.quad	3
	.quad	2220498092062
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.341606897 UTC

.section .text
.align 8
_cbgDn:
_cbgDn:
	movq $block_cbgE1_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbgE1
_cbgE6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgDn, .-_cbgDn


==================== Asm code ====================
2018-03-16 16:06:12.342264767 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgDn_info:
	.quad	_cbgDn
	.quad	3
	.quad	2220498092062
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.342990998 UTC

.section .text
.align 8
_cbgE1:
_cbgE1:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbgEd
_cbgEr:
	movq $GHC.Base.Nothing_closure+1,(%rbp)
	jmp _cbgDv
_cbgEd:
	movq $block_cbgEa_info,(%rbp)
	movl $GHC.IO.Encoding.getLocaleEncoding1_closure,%ebx
	testb $7,%bl
	jne _cbgEa
_cbgEe:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgE1, .-_cbgE1


==================== Asm code ====================
2018-03-16 16:06:12.343625155 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgE1_info:
	.quad	_cbgE1
	.quad	4
	.quad	2220498092062
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.344253162 UTC

.section .text
.align 8
_cbgEa:
_cbgEa:
	movq $block_cbgEi_info,(%rbp)
	movq 7(%rbx),%rbx
	jmp stg_ap_v_fast
	.size _cbgEa, .-_cbgEa


==================== Asm code ====================
2018-03-16 16:06:12.344830584 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgEa_info:
	.quad	_cbgEa
	.quad	4
	.quad	2203318222878
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.345967958 UTC

.section .text
.align 8
_cbgEi:
_cbgEi:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbgEn
_cbgEm:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,(%rbp)
	jmp _cbgDv
_cbgEn:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbgEi, .-_cbgEi


==================== Asm code ====================
2018-03-16 16:06:12.346593835 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgEi_info:
	.quad	_cbgEi
	.quad	4
	.quad	2203318222878
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.347397954 UTC

.section .text
.align 8
_cbgDv:
_cbgDv:
	addq $64,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cbgE5
_cbgE4:
	movq $sat_sbfFX_info,-56(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-48(%r12)
	movq $sat_sbfFO_info,-40(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq %rbx,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -54(%r12),%r14
	leaq -39(%r12),%rbx
	addq $40,%rbp
	jmp stg_catch#
_cbgE5:
	movq $64,904(%r13)
	movq $block_cbgDu_info,(%rbp)
	movq %rax,%rbx
	jmp stg_gc_unpt_r1
	.size _cbgDv, .-_cbgDv


==================== Asm code ====================
2018-03-16 16:06:12.348129882 UTC

.section .text
.align 8
_cbgDu:
_cbgDu:
	movq %rbx,(%rbp)
	jmp _cbgDv
	.size _cbgDu, .-_cbgDu


==================== Asm code ====================
2018-03-16 16:06:12.348684655 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgDu_info:
	.quad	_cbgDu
	.quad	4
	.quad	2203318222878
	.quad	SbfJE_srt+144


==================== Asm code ====================
2018-03-16 16:06:12.353198202 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.openFile2_closure
.type GHC.IO.Handle.FD.openFile2_closure, @object
GHC.IO.Handle.FD.openFile2_closure:
	.quad	GHC.IO.Handle.FD.openFile2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.35409859 UTC

.section .text
.align 8
sat_sbfGi_entry:
_cbgFG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgFH
_cbgFI:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbgFK
_cbgFJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq $GHC.Base.Just_con_info,-64(%r12)
	movq %rax,-56(%r12)
	movq $GHC.IO.Exception.IOError_con_info,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq $GHC.IO.Handle.FD.fdToHandle10_closure,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -62(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_cbgFK:
	movq $72,904(%r13)
_cbgFH:
	jmp *-16(%r13)
	.size sat_sbfGi_entry, .-sat_sbfGi_entry


==================== Asm code ====================
2018-03-16 16:06:12.354816179 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfGi_info:
	.quad	sat_sbfGi_entry
	.quad	5
	.quad	2305843013508661263
	.quad	SbfJE_srt+8


==================== Asm code ====================
2018-03-16 16:06:12.355580376 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.openFile2_entry
.type GHC.IO.Handle.FD.openFile2_entry, @object
GHC.IO.Handle.FD.openFile2_entry:
_cbgFL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgFM
_cbgFN:
	movq $block_cbgFv_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbgFv
_cbgFw:
	movq (%rbx),%rax
	jmp *(%rax)
_cbgFM:
	movl $GHC.IO.Handle.FD.openFile2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.openFile2_entry, .-GHC.IO.Handle.FD.openFile2_entry


==================== Asm code ====================
2018-03-16 16:06:12.356230583 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.openFile2_info
.type GHC.IO.Handle.FD.openFile2_info, @object
GHC.IO.Handle.FD.openFile2_info:
	.quad	GHC.IO.Handle.FD.openFile2_entry
	.quad	0
	.quad	6917529031936049166
	.quad	12884901903
	.quad	SbfJE_srt+8


==================== Asm code ====================
2018-03-16 16:06:12.356988236 UTC

.section .text
.align 8
_cbgFv:
_cbgFv:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbgFQ
_cbgFP:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rbx
	movq $sat_sbfGi_info,-48(%r12)
	movq 8(%rbp),%rsi
	movq %rsi,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -48(%r12),%rbx
	addq $16,%rbp
	jmp stg_raiseIO#
_cbgFQ:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbgFv, .-_cbgFv


==================== Asm code ====================
2018-03-16 16:06:12.358566141 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgFv_info:
	.quad	_cbgFv
	.quad	1
	.quad	2305843013508661278
	.quad	SbfJE_srt+8


==================== Asm code ====================
2018-03-16 16:06:12.364188718 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.openFile1_closure
.type GHC.IO.Handle.FD.openFile1_closure, @object
GHC.IO.Handle.FD.openFile1_closure:
	.quad	GHC.IO.Handle.FD.openFile1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.36486644 UTC

.section .text
.align 8
sat_sbfGt_entry:
_cbgGy:
	movq 7(%rbx),%rbx
	jmp stg_raiseIO#
	.size sat_sbfGt_entry, .-sat_sbfGt_entry


==================== Asm code ====================
2018-03-16 16:06:12.365463923 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfGt_info:
	.quad	sat_sbfGt_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:12.366289733 UTC

.section .text
.align 8
sat_sbfGv_entry:
_cbgGB:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgGC
_cbgGD:
	movq $block_cbgGg_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbgGg
_cbgGh:
	movq (%rbx),%rax
	jmp *(%rax)
_cbgGC:
	jmp *-8(%r13)
	.size sat_sbfGv_entry, .-sat_sbfGv_entry


==================== Asm code ====================
2018-03-16 16:06:12.366959189 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfGv_info:
	.quad	sat_sbfGv_entry
	.quad	1
	.quad	216172786408751113
	.quad	4294967301
	.quad	SbfJE_srt+56


==================== Asm code ====================
2018-03-16 16:06:12.367635293 UTC

.section .text
.align 8
_cbgGg:
_cbgGg:
	movq $block_cbgGl_info,-16(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.Exception.$p1Exception_entry
	.size _cbgGg, .-_cbgGg


==================== Asm code ====================
2018-03-16 16:06:12.368273033 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgGg_info:
	.quad	_cbgGg
	.quad	1
	.quad	216172786408751134
	.quad	SbfJE_srt+56


==================== Asm code ====================
2018-03-16 16:06:12.3689333 UTC

.section .text
.align 8
_cbgGl:
_cbgGl:
	movq $block_cbgGp_info,(%rbp)
	movl $GHC.IO.Exception.$fExceptionIOException4_closure,%esi
	movq %rbx,%r14
	jmp Data.Typeable.Internal.sameTypeRep_entry
	.size _cbgGl, .-_cbgGl


==================== Asm code ====================
2018-03-16 16:06:12.369530632 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgGl_info:
	.quad	_cbgGl
	.quad	3
	.quad	216172786408751134
	.quad	SbfJE_srt+56


==================== Asm code ====================
2018-03-16 16:06:12.370306452 UTC

.section .text
.align 8
_cbgGp:
_cbgGp:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbgGH
_cbgGO:
	movq 8(%rbp),%rsi
	movq 24(%rbp),%r14
	movl $GHC.IO.Handle.FD.openFile2_closure+3,%ebx
	addq $32,%rbp
	jmp stg_ap_pp_fast
_cbgGK:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_cbgGH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbgGK
_cbgGJ:
	movq $sat_sbfGt_info,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbgGp, .-_cbgGp


==================== Asm code ====================
2018-03-16 16:06:12.370987338 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgGp_info:
	.quad	_cbgGp
	.quad	3
	.quad	4294967326
	.quad	SbfJE_srt+248


==================== Asm code ====================
2018-03-16 16:06:12.371649333 UTC

.section .text
.align 8
sat_sbfGm_entry:
_cbgGW:
	movl $GHC.Types.True_closure+2,%r8d
	movl $GHC.Types.False_closure+1,%edi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.IO.Handle.FD.openBinaryFile5_entry
	.size sat_sbfGm_entry, .-sat_sbfGm_entry


==================== Asm code ====================
2018-03-16 16:06:12.372290638 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfGm_info:
	.quad	sat_sbfGm_entry
	.quad	2
	.quad	4294967307
	.quad	4294967299
	.quad	SbfJE_srt+232


==================== Asm code ====================
2018-03-16 16:06:12.373034471 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.openFile1_entry
.type GHC.IO.Handle.FD.openFile1_entry, @object
GHC.IO.Handle.FD.openFile1_entry:
_cbgGZ:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbgH3
_cbgH2:
	movq $sat_sbfGv_info,-32(%r12)
	movq %r14,-24(%r12)
	movq $sat_sbfGm_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -31(%r12),%r14
	leaq -15(%r12),%rbx
	jmp stg_catch#
_cbgH3:
	movq $40,904(%r13)
	movl $GHC.IO.Handle.FD.openFile1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.openFile1_entry, .-GHC.IO.Handle.FD.openFile1_entry


==================== Asm code ====================
2018-03-16 16:06:12.373748402 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.openFile1_info
.type GHC.IO.Handle.FD.openFile1_info, @object
GHC.IO.Handle.FD.openFile1_info:
	.quad	GHC.IO.Handle.FD.openFile1_entry
	.quad	0
	.quad	522417561069944846
	.quad	12884901903
	.quad	SbfJE_srt+56


==================== Asm code ====================
2018-03-16 16:06:12.375999168 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.openFile_closure
.type GHC.IO.Handle.FD.openFile_closure, @object
GHC.IO.Handle.FD.openFile_closure:
	.quad	GHC.IO.Handle.FD.openFile_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.376565543 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.openFile_entry
.type GHC.IO.Handle.FD.openFile_entry, @object
GHC.IO.Handle.FD.openFile_entry:
_cbgHB:
	jmp GHC.IO.Handle.FD.openFile1_entry
	.size GHC.IO.Handle.FD.openFile_entry, .-GHC.IO.Handle.FD.openFile_entry


==================== Asm code ====================
2018-03-16 16:06:12.377134652 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.openFile_info
.type GHC.IO.Handle.FD.openFile_info, @object
GHC.IO.Handle.FD.openFile_info:
	.quad	GHC.IO.Handle.FD.openFile_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SbfJE_srt+264


==================== Asm code ====================
2018-03-16 16:06:12.382767893 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.openFileBlocking1_closure
.type GHC.IO.Handle.FD.openFileBlocking1_closure, @object
GHC.IO.Handle.FD.openFileBlocking1_closure:
	.quad	GHC.IO.Handle.FD.openFileBlocking1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.383402728 UTC

.section .text
.align 8
sat_sbfGG_entry:
_cbgI9:
	movq 7(%rbx),%rbx
	jmp stg_raiseIO#
	.size sat_sbfGG_entry, .-sat_sbfGG_entry


==================== Asm code ====================
2018-03-16 16:06:12.383964661 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfGG_info:
	.quad	sat_sbfGG_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:12.384745652 UTC

.section .text
.align 8
sat_sbfGI_entry:
_cbgIc:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgId
_cbgIe:
	movq $block_cbgHR_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbgHR
_cbgHS:
	movq (%rbx),%rax
	jmp *(%rax)
_cbgId:
	jmp *-8(%r13)
	.size sat_sbfGI_entry, .-sat_sbfGI_entry


==================== Asm code ====================
2018-03-16 16:06:12.385455607 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfGI_info:
	.quad	sat_sbfGI_entry
	.quad	1
	.quad	216172786408751113
	.quad	4294967301
	.quad	SbfJE_srt+56


==================== Asm code ====================
2018-03-16 16:06:12.386123078 UTC

.section .text
.align 8
_cbgHR:
_cbgHR:
	movq $block_cbgHW_info,-16(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.Exception.$p1Exception_entry
	.size _cbgHR, .-_cbgHR


==================== Asm code ====================
2018-03-16 16:06:12.386715511 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgHR_info:
	.quad	_cbgHR
	.quad	1
	.quad	216172786408751134
	.quad	SbfJE_srt+56


==================== Asm code ====================
2018-03-16 16:06:12.38734747 UTC

.section .text
.align 8
_cbgHW:
_cbgHW:
	movq $block_cbgI0_info,(%rbp)
	movl $GHC.IO.Exception.$fExceptionIOException4_closure,%esi
	movq %rbx,%r14
	jmp Data.Typeable.Internal.sameTypeRep_entry
	.size _cbgHW, .-_cbgHW


==================== Asm code ====================
2018-03-16 16:06:12.387953929 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgHW_info:
	.quad	_cbgHW
	.quad	3
	.quad	216172786408751134
	.quad	SbfJE_srt+56


==================== Asm code ====================
2018-03-16 16:06:12.388779956 UTC

.section .text
.align 8
_cbgI0:
_cbgI0:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbgIi
_cbgIp:
	movq 8(%rbp),%rsi
	movq 24(%rbp),%r14
	movl $GHC.IO.Handle.FD.openFile2_closure+3,%ebx
	addq $32,%rbp
	jmp stg_ap_pp_fast
_cbgIl:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_cbgIi:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbgIl
_cbgIk:
	movq $sat_sbfGG_info,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbgI0, .-_cbgI0


==================== Asm code ====================
2018-03-16 16:06:12.392225011 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgI0_info:
	.quad	_cbgI0
	.quad	3
	.quad	4294967326
	.quad	SbfJE_srt+248


==================== Asm code ====================
2018-03-16 16:06:12.392865936 UTC

.section .text
.align 8
sat_sbfGz_entry:
_cbgIx:
	movl $GHC.Types.False_closure+1,%r8d
	movl $GHC.Types.False_closure+1,%edi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.IO.Handle.FD.openBinaryFile5_entry
	.size sat_sbfGz_entry, .-sat_sbfGz_entry


==================== Asm code ====================
2018-03-16 16:06:12.393466169 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfGz_info:
	.quad	sat_sbfGz_entry
	.quad	2
	.quad	4294967307
	.quad	4294967299
	.quad	SbfJE_srt+232


==================== Asm code ====================
2018-03-16 16:06:12.39422959 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.openFileBlocking1_entry
.type GHC.IO.Handle.FD.openFileBlocking1_entry, @object
GHC.IO.Handle.FD.openFileBlocking1_entry:
_cbgIA:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbgIE
_cbgID:
	movq $sat_sbfGI_info,-32(%r12)
	movq %r14,-24(%r12)
	movq $sat_sbfGz_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -31(%r12),%r14
	leaq -15(%r12),%rbx
	jmp stg_catch#
_cbgIE:
	movq $40,904(%r13)
	movl $GHC.IO.Handle.FD.openFileBlocking1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.openFileBlocking1_entry, .-GHC.IO.Handle.FD.openFileBlocking1_entry


==================== Asm code ====================
2018-03-16 16:06:12.394874133 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.openFileBlocking1_info
.type GHC.IO.Handle.FD.openFileBlocking1_info, @object
GHC.IO.Handle.FD.openFileBlocking1_info:
	.quad	GHC.IO.Handle.FD.openFileBlocking1_entry
	.quad	0
	.quad	810647937221656590
	.quad	12884901903
	.quad	SbfJE_srt+56


==================== Asm code ====================
2018-03-16 16:06:12.397180347 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.openFileBlocking_closure
.type GHC.IO.Handle.FD.openFileBlocking_closure, @object
GHC.IO.Handle.FD.openFileBlocking_closure:
	.quad	GHC.IO.Handle.FD.openFileBlocking_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.398339347 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.openFileBlocking_entry
.type GHC.IO.Handle.FD.openFileBlocking_entry, @object
GHC.IO.Handle.FD.openFileBlocking_entry:
_cbgJc:
	jmp GHC.IO.Handle.FD.openFileBlocking1_entry
	.size GHC.IO.Handle.FD.openFileBlocking_entry, .-GHC.IO.Handle.FD.openFileBlocking_entry


==================== Asm code ====================
2018-03-16 16:06:12.399029345 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.openFileBlocking_info
.type GHC.IO.Handle.FD.openFileBlocking_info, @object
GHC.IO.Handle.FD.openFileBlocking_info:
	.quad	GHC.IO.Handle.FD.openFileBlocking_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SbfJE_srt+272


==================== Asm code ====================
2018-03-16 16:06:12.400947496 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile4_bytes
.type GHC.IO.Handle.FD.openBinaryFile4_bytes, @object
GHC.IO.Handle.FD.openBinaryFile4_bytes:
	.asciz "openBinaryFile"


==================== Asm code ====================
2018-03-16 16:06:12.404272128 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile3_closure
.type GHC.IO.Handle.FD.openBinaryFile3_closure, @object
GHC.IO.Handle.FD.openBinaryFile3_closure:
	.quad	GHC.IO.Handle.FD.openBinaryFile3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.405028158 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.openBinaryFile3_entry
.type GHC.IO.Handle.FD.openBinaryFile3_entry, @object
GHC.IO.Handle.FD.openBinaryFile3_entry:
_cbgJq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgJr
_cbgJs:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbgJp
_cbgJo:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.IO.Handle.FD.openBinaryFile4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbgJr:
	jmp *-16(%r13)
_cbgJp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.FD.openBinaryFile3_entry, .-GHC.IO.Handle.FD.openBinaryFile3_entry


==================== Asm code ====================
2018-03-16 16:06:12.405815514 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile3_info
.type GHC.IO.Handle.FD.openBinaryFile3_info, @object
GHC.IO.Handle.FD.openBinaryFile3_info:
	.quad	GHC.IO.Handle.FD.openBinaryFile3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:12.410223255 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile2_closure
.type GHC.IO.Handle.FD.openBinaryFile2_closure, @object
GHC.IO.Handle.FD.openBinaryFile2_closure:
	.quad	GHC.IO.Handle.FD.openBinaryFile2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.411077414 UTC

.section .text
.align 8
sat_sbfGV_entry:
_cbgJP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgJQ
_cbgJR:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbgJT
_cbgJS:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq $GHC.Base.Just_con_info,-64(%r12)
	movq %rax,-56(%r12)
	movq $GHC.IO.Exception.IOError_con_info,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	movq $GHC.IO.Handle.FD.openBinaryFile3_closure,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -62(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_cbgJT:
	movq $72,904(%r13)
_cbgJQ:
	jmp *-16(%r13)
	.size sat_sbfGV_entry, .-sat_sbfGV_entry


==================== Asm code ====================
2018-03-16 16:06:12.411872332 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfGV_info:
	.quad	sat_sbfGV_entry
	.quad	5
	.quad	12884901903
	.quad	SbfJE_srt+280


==================== Asm code ====================
2018-03-16 16:06:12.412571376 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.openBinaryFile2_entry
.type GHC.IO.Handle.FD.openBinaryFile2_entry, @object
GHC.IO.Handle.FD.openBinaryFile2_entry:
_cbgJU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgJV
_cbgJW:
	movq $block_cbgJE_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbgJE
_cbgJF:
	movq (%rbx),%rax
	jmp *(%rax)
_cbgJV:
	movl $GHC.IO.Handle.FD.openBinaryFile2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.openBinaryFile2_entry, .-GHC.IO.Handle.FD.openBinaryFile2_entry


==================== Asm code ====================
2018-03-16 16:06:12.413635883 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile2_info
.type GHC.IO.Handle.FD.openBinaryFile2_info, @object
GHC.IO.Handle.FD.openBinaryFile2_info:
	.quad	GHC.IO.Handle.FD.openBinaryFile2_entry
	.quad	0
	.quad	30064771086
	.quad	12884901903
	.quad	SbfJE_srt+280


==================== Asm code ====================
2018-03-16 16:06:12.414451551 UTC

.section .text
.align 8
_cbgJE:
_cbgJE:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbgJZ
_cbgJY:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rbx
	movq $sat_sbfGV_info,-48(%r12)
	movq 8(%rbp),%rsi
	movq %rsi,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -48(%r12),%rbx
	addq $16,%rbp
	jmp stg_raiseIO#
_cbgJZ:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbgJE, .-_cbgJE


==================== Asm code ====================
2018-03-16 16:06:12.415148512 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgJE_info:
	.quad	_cbgJE
	.quad	1
	.quad	12884901918
	.quad	SbfJE_srt+280


==================== Asm code ====================
2018-03-16 16:06:12.420819105 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile1_closure
.type GHC.IO.Handle.FD.openBinaryFile1_closure, @object
GHC.IO.Handle.FD.openBinaryFile1_closure:
	.quad	GHC.IO.Handle.FD.openBinaryFile1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.421764211 UTC

.section .text
.align 8
sat_sbfH6_entry:
_cbgKH:
	movq 7(%rbx),%rbx
	jmp stg_raiseIO#
	.size sat_sbfH6_entry, .-sat_sbfH6_entry


==================== Asm code ====================
2018-03-16 16:06:12.422358248 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfH6_info:
	.quad	sat_sbfH6_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:12.423077976 UTC

.section .text
.align 8
sat_sbfH8_entry:
_cbgKK:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgKL
_cbgKM:
	movq $block_cbgKp_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbgKp
_cbgKq:
	movq (%rbx),%rax
	jmp *(%rax)
_cbgKL:
	jmp *-8(%r13)
	.size sat_sbfH8_entry, .-sat_sbfH8_entry


==================== Asm code ====================
2018-03-16 16:06:12.423696563 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfH8_info:
	.quad	sat_sbfH8_entry
	.quad	1
	.quad	4755801210798211081
	.quad	4294967301
	.quad	SbfJE_srt+56


==================== Asm code ====================
2018-03-16 16:06:12.42439628 UTC

.section .text
.align 8
_cbgKp:
_cbgKp:
	movq $block_cbgKu_info,-16(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.Exception.$p1Exception_entry
	.size _cbgKp, .-_cbgKp


==================== Asm code ====================
2018-03-16 16:06:12.42498145 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgKp_info:
	.quad	_cbgKp
	.quad	1
	.quad	4755801210798211102
	.quad	SbfJE_srt+56


==================== Asm code ====================
2018-03-16 16:06:12.425638163 UTC

.section .text
.align 8
_cbgKu:
_cbgKu:
	movq $block_cbgKy_info,(%rbp)
	movl $GHC.IO.Exception.$fExceptionIOException4_closure,%esi
	movq %rbx,%r14
	jmp Data.Typeable.Internal.sameTypeRep_entry
	.size _cbgKu, .-_cbgKu


==================== Asm code ====================
2018-03-16 16:06:12.426228932 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgKu_info:
	.quad	_cbgKu
	.quad	3
	.quad	4755801210798211102
	.quad	SbfJE_srt+56


==================== Asm code ====================
2018-03-16 16:06:12.426977807 UTC

.section .text
.align 8
_cbgKy:
_cbgKy:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbgKQ
_cbgKX:
	movq 8(%rbp),%rsi
	movq 24(%rbp),%r14
	movl $GHC.IO.Handle.FD.openBinaryFile2_closure+3,%ebx
	addq $32,%rbp
	jmp stg_ap_pp_fast
_cbgKT:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
_cbgKQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbgKT
_cbgKS:
	movq $sat_sbfH6_info,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbgKy, .-_cbgKy


==================== Asm code ====================
2018-03-16 16:06:12.42768434 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgKy_info:
	.quad	_cbgKy
	.quad	3
	.quad	4294967326
	.quad	SbfJE_srt+296


==================== Asm code ====================
2018-03-16 16:06:12.428298664 UTC

.section .text
.align 8
sat_sbfGZ_entry:
_cbgL5:
	movl $GHC.Types.True_closure+2,%r8d
	movl $GHC.Types.True_closure+2,%edi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.IO.Handle.FD.openBinaryFile5_entry
	.size sat_sbfGZ_entry, .-sat_sbfGZ_entry


==================== Asm code ====================
2018-03-16 16:06:12.428864824 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfGZ_info:
	.quad	sat_sbfGZ_entry
	.quad	2
	.quad	4294967307
	.quad	4294967299
	.quad	SbfJE_srt+232


==================== Asm code ====================
2018-03-16 16:06:12.429611828 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.openBinaryFile1_entry
.type GHC.IO.Handle.FD.openBinaryFile1_entry, @object
GHC.IO.Handle.FD.openBinaryFile1_entry:
_cbgL8:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbgLc
_cbgLb:
	movq $sat_sbfH8_info,-32(%r12)
	movq %r14,-24(%r12)
	movq $sat_sbfGZ_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -31(%r12),%r14
	leaq -15(%r12),%rbx
	jmp stg_catch#
_cbgLc:
	movq $40,904(%r13)
	movl $GHC.IO.Handle.FD.openBinaryFile1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.openBinaryFile1_entry, .-GHC.IO.Handle.FD.openBinaryFile1_entry


==================== Asm code ====================
2018-03-16 16:06:12.430309244 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile1_info
.type GHC.IO.Handle.FD.openBinaryFile1_info, @object
GHC.IO.Handle.FD.openBinaryFile1_info:
	.quad	GHC.IO.Handle.FD.openBinaryFile1_entry
	.quad	0
	.quad	-4449556427547082738
	.quad	12884901903
	.quad	SbfJE_srt+56


==================== Asm code ====================
2018-03-16 16:06:12.432543368 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile_closure
.type GHC.IO.Handle.FD.openBinaryFile_closure, @object
GHC.IO.Handle.FD.openBinaryFile_closure:
	.quad	GHC.IO.Handle.FD.openBinaryFile_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.433153993 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.openBinaryFile_entry
.type GHC.IO.Handle.FD.openBinaryFile_entry, @object
GHC.IO.Handle.FD.openBinaryFile_entry:
_cbgLK:
	jmp GHC.IO.Handle.FD.openBinaryFile1_entry
	.size GHC.IO.Handle.FD.openBinaryFile_entry, .-GHC.IO.Handle.FD.openBinaryFile_entry


==================== Asm code ====================
2018-03-16 16:06:12.433907721 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile_info
.type GHC.IO.Handle.FD.openBinaryFile_info, @object
GHC.IO.Handle.FD.openBinaryFile_info:
	.quad	GHC.IO.Handle.FD.openBinaryFile_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	SbfJE_srt+304


==================== Asm code ====================
2018-03-16 16:06:12.4497572 UTC

.section .data
.align 8
.align 1
$wstdHandleFinalizer_rbfCA_closure:
	.quad	$wstdHandleFinalizer_rbfCA_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.450537153 UTC

.section .text
.align 8
sat_sbfHL_entry:
_cbgMv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgMw
_cbgMx:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.ioe_finalizedHandle_entry
_cbgMw:
	jmp *-16(%r13)
	.size sat_sbfHL_entry, .-sat_sbfHL_entry


==================== Asm code ====================
2018-03-16 16:06:12.451143764 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfHL_info:
	.quad	sat_sbfHL_entry
	.quad	1
	.quad	4294967312
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.451832782 UTC

.section .text
.align 8
sat_sbfHX_entry:
_cbgML:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgMM
_cbgMN:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.ioe_finalizedHandle_entry
_cbgMM:
	jmp *-16(%r13)
	.size sat_sbfHX_entry, .-sat_sbfHX_entry


==================== Asm code ====================
2018-03-16 16:06:12.452474967 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfHX_info:
	.quad	sat_sbfHX_entry
	.quad	1
	.quad	4294967312
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.453156777 UTC

.section .text
.align 8
sat_sbfIa_entry:
_cbgN6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgN7
_cbgN8:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.ioe_finalizedHandle_entry
_cbgN7:
	jmp *-16(%r13)
	.size sat_sbfIa_entry, .-sat_sbfIa_entry


==================== Asm code ====================
2018-03-16 16:06:12.453774622 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfIa_info:
	.quad	sat_sbfIa_entry
	.quad	1
	.quad	4294967312
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.454456443 UTC

.section .text
.align 8
sat_sbfIm_entry:
_cbgNm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgNn
_cbgNo:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.ioe_finalizedHandle_entry
_cbgNn:
	jmp *-16(%r13)
	.size sat_sbfIm_entry, .-sat_sbfIm_entry


==================== Asm code ====================
2018-03-16 16:06:12.45508105 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfIm_info:
	.quad	sat_sbfIm_entry
	.quad	1
	.quad	4294967312
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.455711473 UTC

.section .text
.align 8
sat_sbfIo_entry:
_cbgNv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgNw
_cbgNx:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.IO.Handle.Internals.ioe_finalizedHandle_entry
_cbgNw:
	jmp *-16(%r13)
	.size sat_sbfIo_entry, .-sat_sbfIo_entry


==================== Asm code ====================
2018-03-16 16:06:12.456327621 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbfIo_info:
	.quad	sat_sbfIo_entry
	.quad	1
	.quad	4294967312
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.457043388 UTC

.section .text
.align 8
$wstdHandleFinalizer_rbfCA_entry:
_cbgNy:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgNz
_cbgNA:
	movq $block_cbgLV_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp stg_takeMVar#
_cbgNz:
	movl $$wstdHandleFinalizer_rbfCA_closure,%ebx
	jmp *-8(%r13)
	.size $wstdHandleFinalizer_rbfCA_entry, .-$wstdHandleFinalizer_rbfCA_entry


==================== Asm code ====================
2018-03-16 16:06:12.457820116 UTC

.section .data.rel.ro
.align 8
.align 1
$wstdHandleFinalizer_rbfCA_info:
	.quad	$wstdHandleFinalizer_rbfCA_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.458468441 UTC

.section .text
.align 8
_cbgLV:
_cbgLV:
	movq $block_cbgLX_info,(%rbp)
	testb $7,%bl
	jne _cbgLX
_cbgLY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgLV, .-_cbgLV


==================== Asm code ====================
2018-03-16 16:06:12.459069606 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgLV_info:
	.quad	_cbgLV
	.quad	2
	.quad	4294967326
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.459809237 UTC

.section .text
.align 8
_cbgLX:
_cbgLX:
	movq $block_cbgM2_info,-48(%rbp)
	movq 15(%rbx),%rax
	movq 31(%rbx),%rcx
	movq 39(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 87(%rbx),%rdi
	movq 95(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rsi),%rbx
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _cbgM2
_cbgM3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgLX, .-_cbgLX


==================== Asm code ====================
2018-03-16 16:06:12.460529453 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgLX_info:
	.quad	_cbgLX
	.quad	2
	.quad	4294967326
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.461154836 UTC

.section .text
.align 8
_cbgM2:
_cbgM2:
	movq $block_cbgND_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _cbgND
_cbgOv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgM2, .-_cbgM2


==================== Asm code ====================
2018-03-16 16:06:12.461816065 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgM2_info:
	.quad	_cbgM2
	.quad	8
	.quad	4294967326
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.462536156 UTC

.section .text
.align 8
_cbgND:
_cbgND:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ubgP3
_cbgOG:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_cbgOE_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbgOE
_cbgOH:
	movq (%rbx),%rax
	jmp *(%rax)
_ubgP3:
	addq $16,%rbp
	jmp _sbfHG
	.size _cbgND, .-_cbgND


==================== Asm code ====================
2018-03-16 16:06:12.463170458 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgND_info:
	.quad	_cbgND
	.quad	8
	.quad	4294967326
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.463900271 UTC

.section .text
.align 8
_cbgOE:
_cbgOE:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _ubgP4
_cbgOR:
	movq 8(%rbp),%rax
	movq $block_cbgOP_info,8(%rbp)
	movq 48(%rbp),%r14
	movq $stg_ap_ppv_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.IO.BufferedIO.flushWriteBuffer_entry
_ubgP4:
	addq $16,%rbp
	jmp _sbfHG
	.size _cbgOE, .-_cbgOE


==================== Asm code ====================
2018-03-16 16:06:12.464540095 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgOE_info:
	.quad	_cbgOE
	.quad	8
	.quad	4294967326
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.465214801 UTC

.section .text
.align 8
_cbgOP:
_cbgOP:
	movq 16(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $8,%rbp
	jmp _sbfHG
	.size _cbgOP, .-_cbgOP


==================== Asm code ====================
2018-03-16 16:06:12.465836667 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgOP_info:
	.quad	_cbgOP
	.quad	1031
	.quad	4294967326
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.466541284 UTC

.section .text
.align 8
_sbfHG:
_sbfHG:
	movq $block_cbgMc_info,8(%rbp)
	movq (%rbp),%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cbgMc
_cbgMd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbfHG, .-_sbfHG


==================== Asm code ====================
2018-03-16 16:06:12.467401883 UTC

.section .text
.align 8
_cbgMc:
_cbgMc:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbgOp
_cbgNI:
	movq $block_cbgMh_info,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _cbgMh
_cbgMi:
	movq (%rbx),%rax
	jmp *(%rax)
_cbgOs:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_cbgOp:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbgOs
_cbgOr:
	movq $sat_sbfIo_info,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq 40(%rbp),%rax
	movq $block_cbgOo_info,40(%rbp)
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $40,%rbp
	jmp stg_putMVar#
	.size _cbgMc, .-_cbgMc


==================== Asm code ====================
2018-03-16 16:06:12.468083712 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgMc_info:
	.quad	_cbgMc
	.quad	261
	.quad	4294967326
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.468765227 UTC

.section .text
.align 8
_cbgMh:
_cbgMh:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbgNL
_cbgO4:
	movq $block_cbgMQ_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbgMQ
_cbgMR:
	movq (%rbx),%rax
	jmp *(%rax)
_cbgNL:
	movq $block_cbgMm_info,24(%rbp)
	movq 8(%rbp),%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _cbgMm
_cbgMn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgMh, .-_cbgMh


==================== Asm code ====================
2018-03-16 16:06:12.469766704 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgMh_info:
	.quad	_cbgMh
	.quad	389
	.quad	4294967326
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.470545872 UTC

.section .text
.align 8
_cbgMm:
_cbgMm:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbgNO
_cbgNW:
	movq $block_cbgMA_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbgMA
_cbgMB:
	movq (%rbx),%rax
	jmp *(%rax)
_cbgNR:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_cbgNO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbgNR
_cbgNQ:
	movq $sat_sbfHL_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq 16(%rbp),%rax
	movq $block_cbgOo_info,16(%rbp)
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $16,%rbp
	jmp stg_putMVar#
	.size _cbgMm, .-_cbgMm


==================== Asm code ====================
2018-03-16 16:06:12.471218005 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgMm_info:
	.quad	_cbgMm
	.quad	2
	.quad	4294967326
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.471849587 UTC

.section .text
.align 8
_cbgMA:
_cbgMA:
	movq $block_cbgMF_info,(%rbp)
	movq 23(%rbx),%rbx
	jmp stg_ap_v_fast
	.size _cbgMA, .-_cbgMA


==================== Asm code ====================
2018-03-16 16:06:12.472471954 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgMA_info:
	.quad	_cbgMA
	.quad	2
	.quad	4294967326
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.47326145 UTC

.section .text
.align 8
_cbgMF:
_cbgMF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbgO0
_cbgNZ:
	movq $sat_sbfHX_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq 16(%rbp),%rax
	movq $block_cbgOo_info,16(%rbp)
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $16,%rbp
	jmp stg_putMVar#
_cbgO0:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbgMF, .-_cbgMF


==================== Asm code ====================
2018-03-16 16:06:12.473922443 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgMF_info:
	.quad	_cbgMF
	.quad	2
	.quad	4294967326
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.474521245 UTC

.section .text
.align 8
_cbgMQ:
_cbgMQ:
	movq $block_cbgMV_info,(%rbp)
	movq 23(%rbx),%rbx
	jmp stg_ap_v_fast
	.size _cbgMQ, .-_cbgMQ


==================== Asm code ====================
2018-03-16 16:06:12.475094649 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgMQ_info:
	.quad	_cbgMQ
	.quad	389
	.quad	4294967326
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.47574317 UTC

.section .text
.align 8
_cbgMV:
_cbgMV:
	movq $block_cbgMX_info,24(%rbp)
	movq 8(%rbp),%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _cbgMX
_cbgMY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgMV, .-_cbgMV


==================== Asm code ====================
2018-03-16 16:06:12.476341298 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgMV_info:
	.quad	_cbgMV
	.quad	389
	.quad	4294967326
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.477143502 UTC

.section .text
.align 8
_cbgMX:
_cbgMX:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbgO9
_cbgOh:
	movq $block_cbgNb_info,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbgNb
_cbgNc:
	movq (%rbx),%rax
	jmp *(%rax)
_cbgOc:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_cbgO9:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbgOc
_cbgOb:
	movq $sat_sbfIa_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq 16(%rbp),%rax
	movq $block_cbgOo_info,16(%rbp)
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $16,%rbp
	jmp stg_putMVar#
	.size _cbgMX, .-_cbgMX


==================== Asm code ====================
2018-03-16 16:06:12.477909683 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgMX_info:
	.quad	_cbgMX
	.quad	2
	.quad	4294967326
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.479060524 UTC

.section .text
.align 8
_cbgNb:
_cbgNb:
	movq $block_cbgNg_info,(%rbp)
	movq 23(%rbx),%rbx
	jmp stg_ap_v_fast
	.size _cbgNb, .-_cbgNb


==================== Asm code ====================
2018-03-16 16:06:12.47971161 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgNb_info:
	.quad	_cbgNb
	.quad	2
	.quad	4294967326
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.480423368 UTC

.section .text
.align 8
_cbgNg:
_cbgNg:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbgOl
_cbgOk:
	movq $sat_sbfIm_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq 16(%rbp),%rax
	movq $block_cbgOo_info,16(%rbp)
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $16,%rbp
	jmp stg_putMVar#
_cbgOl:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbgNg, .-_cbgNg


==================== Asm code ====================
2018-03-16 16:06:12.481039583 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgNg_info:
	.quad	_cbgNg
	.quad	2
	.quad	4294967326
	.quad	SbfJE_srt+312


==================== Asm code ====================
2018-03-16 16:06:12.481718525 UTC

.section .text
.align 8
_cbgOo:
_cbgOo:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbgOo, .-_cbgOo


==================== Asm code ====================
2018-03-16 16:06:12.482276109 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgOo_info:
	.quad	_cbgOo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:12.485194077 UTC

.section .data
.align 8
.align 1
stdHandleFinalizer_rbfCB_closure:
	.quad	stdHandleFinalizer_rbfCB_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.485965317 UTC

.section .text
.align 8
stdHandleFinalizer_rbfCB_entry:
_cbgRb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgRc
_cbgRd:
	movq $block_cbgR8_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbgR8
_cbgR9:
	movq (%rbx),%rax
	jmp *(%rax)
_cbgRc:
	movl $stdHandleFinalizer_rbfCB_closure,%ebx
	jmp *-8(%r13)
	.size stdHandleFinalizer_rbfCB_entry, .-stdHandleFinalizer_rbfCB_entry


==================== Asm code ====================
2018-03-16 16:06:12.486618512 UTC

.section .data.rel.ro
.align 8
.align 1
stdHandleFinalizer_rbfCB_info:
	.quad	stdHandleFinalizer_rbfCB_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	SbfJE_srt+320


==================== Asm code ====================
2018-03-16 16:06:12.487257299 UTC

.section .text
.align 8
_cbgR8:
_cbgR8:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp $wstdHandleFinalizer_rbfCA_entry
	.size _cbgR8, .-_cbgR8


==================== Asm code ====================
2018-03-16 16:06:12.487836048 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgR8_info:
	.quad	_cbgR8
	.quad	1
	.quad	4294967326
	.quad	SbfJE_srt+320


==================== Asm code ====================
2018-03-16 16:06:12.490180597 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl6_rbfCC_bytes:
	.asciz "<stderr>"


==================== Asm code ====================
2018-03-16 16:06:12.492552078 UTC

.section .data
.align 8
.align 1
lvl7_rbfCD_closure:
	.quad	lvl7_rbfCD_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.4933619 UTC

.section .text
.align 8
lvl7_rbfCD_entry:
_cbgRy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgRz
_cbgRA:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbgRx
_cbgRw:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl6_rbfCC_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbgRz:
	jmp *-16(%r13)
_cbgRx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl7_rbfCD_entry, .-lvl7_rbfCD_entry


==================== Asm code ====================
2018-03-16 16:06:12.49397539 UTC

.section .data.rel.ro
.align 8
.align 1
lvl7_rbfCD_info:
	.quad	lvl7_rbfCD_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:12.495658888 UTC

.section .data
.align 8
.align 1
lvl8_rbfCE_closure:
	.quad	GHC.Base.Just_con_info
	.quad	stdHandleFinalizer_rbfCB_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.499942877 UTC

.section .data
.align 8
.align 1
lvl9_rbfCF_closure:
	.quad	lvl9_rbfCF_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.500437363 UTC

.section .data.rel.ro
.align 8
.align 1
ubgS6_srtd:
	.quad	SbfJE_srt+64
	.quad	37
	.quad	120259089281


==================== Asm code ====================
2018-03-16 16:06:12.501144244 UTC

.section .text
.align 8
lvl9_rbfCF_entry:
_cbgRS:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgRT
_cbgRU:
	movq $block_cbgRN_info,-8(%rbp)
	addq $-8,%rbp
	jmp stg_noDuplicate#
_cbgRT:
	movl $lvl9_rbfCF_closure,%ebx
	jmp *-8(%r13)
	.size lvl9_rbfCF_entry, .-lvl9_rbfCF_entry


==================== Asm code ====================
2018-03-16 16:06:12.501772864 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_rbfCF_info:
	.quad	lvl9_rbfCF_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967299
	.quad	ubgS6_srtd


==================== Asm code ====================
2018-03-16 16:06:12.502305438 UTC

.section .data.rel.ro
.align 8
.align 1
ubgS7_srtd:
	.quad	SbfJE_srt+64
	.quad	36
	.quad	51539612545


==================== Asm code ====================
2018-03-16 16:06:12.502954464 UTC

.section .text
.align 8
_cbgRN:
_cbgRN:
	movq $block_cbgRP_info,(%rbp)
	movl $GHC.IO.Encoding.getLocaleEncoding1_closure,%ebx
	testb $7,%bl
	jne _cbgRP
_cbgRQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgRN, .-_cbgRN


==================== Asm code ====================
2018-03-16 16:06:12.503506115 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgRN_info:
	.quad	_cbgRN
	.quad	0
	.quad	-4294967266
	.quad	ubgS7_srtd


==================== Asm code ====================
2018-03-16 16:06:12.504026565 UTC

.section .data.rel.ro
.align 8
.align 1
ubgS8_srtd:
	.quad	SbfJE_srt+64
	.quad	36
	.quad	51539608449


==================== Asm code ====================
2018-03-16 16:06:12.504625768 UTC

.section .text
.align 8
_cbgRP:
_cbgRP:
	movq $block_cbgRY_info,(%rbp)
	movq 7(%rbx),%rbx
	jmp stg_ap_v_fast
	.size _cbgRP, .-_cbgRP


==================== Asm code ====================
2018-03-16 16:06:12.50518476 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgRP_info:
	.quad	_cbgRP
	.quad	0
	.quad	-4294967266
	.quad	ubgS8_srtd


==================== Asm code ====================
2018-03-16 16:06:12.505749924 UTC

.section .data.rel.ro
.align 8
.align 1
ubgS9_srtd:
	.quad	SbfJE_srt+64
	.quad	36
	.quad	51539608449


==================== Asm code ====================
2018-03-16 16:06:12.506474025 UTC

.section .text
.align 8
_cbgRY:
_cbgRY:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbgS3
_cbgS2:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	movl $lvl7_rbfCD_closure,%r9d
	movl $GHC.IO.FD.stderr_closure,%r8d
	movl $GHC.IO.Handle.FD.fdToHandle12_closure,%edi
	movl $GHC.IO.FD.$fBufferedIOFD_closure,%esi
	movl $GHC.IO.FD.$fIODeviceFD_closure,%r14d
	movq $GHC.IO.Handle.Types.WriteHandle_closure+4,-40(%rbp)
	movq $GHC.Types.False_closure+1,-32(%rbp)
	leaq -6(%r12),%rax
	movq %rax,-24(%rbp)
	movq $GHC.IO.Handle.Types.nativeNewlineMode_closure,-16(%rbp)
	movq $lvl8_rbfCE_closure+2,-8(%rbp)
	movq $GHC.Base.Nothing_closure+1,(%rbp)
	addq $-40,%rbp
	jmp GHC.IO.Handle.Internals.mkDuplexHandle5_entry
_cbgS3:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbgRY, .-_cbgRY


==================== Asm code ====================
2018-03-16 16:06:12.507178352 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgRY_info:
	.quad	_cbgRY
	.quad	0
	.quad	-4294967266
	.quad	ubgS9_srtd


==================== Asm code ====================
2018-03-16 16:06:12.510453597 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.stderr_closure
.type GHC.IO.Handle.FD.stderr_closure, @object
GHC.IO.Handle.FD.stderr_closure:
	.quad	GHC.IO.Handle.FD.stderr_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.511303964 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.stderr_entry
.type GHC.IO.Handle.FD.stderr_entry, @object
GHC.IO.Handle.FD.stderr_entry:
_cbgSC:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgSD
_cbgSE:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbgSz
_cbgSy:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_cbgSA_info,-24(%rbp)
	addq $-24,%rbp
	jmp lvl9_rbfCF_entry
_cbgSD:
	jmp *-16(%r13)
_cbgSz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.FD.stderr_entry, .-GHC.IO.Handle.FD.stderr_entry


==================== Asm code ====================
2018-03-16 16:06:12.512507999 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.stderr_info
.type GHC.IO.Handle.FD.stderr_info, @object
GHC.IO.Handle.FD.stderr_info:
	.quad	GHC.IO.Handle.FD.stderr_entry
	.quad	0
	.quad	4294967317
	.quad	SbfJE_srt+352


==================== Asm code ====================
2018-03-16 16:06:12.513308114 UTC

.section .text
.align 8
_cbgSA:
_cbgSA:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgSA, .-_cbgSA


==================== Asm code ====================
2018-03-16 16:06:12.513869301 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgSA_info:
	.quad	_cbgSA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:12.515545217 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl10_rbfCG_bytes:
	.asciz "<stdout>"


==================== Asm code ====================
2018-03-16 16:06:12.518046679 UTC

.section .data
.align 8
.align 1
lvl11_rbfCH_closure:
	.quad	lvl11_rbfCH_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.518853111 UTC

.section .text
.align 8
lvl11_rbfCH_entry:
_cbgSZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgT0
_cbgT1:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbgSY
_cbgSX:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl10_rbfCG_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbgT0:
	jmp *-16(%r13)
_cbgSY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl11_rbfCH_entry, .-lvl11_rbfCH_entry


==================== Asm code ====================
2018-03-16 16:06:12.519535801 UTC

.section .data.rel.ro
.align 8
.align 1
lvl11_rbfCH_info:
	.quad	lvl11_rbfCH_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:12.523959627 UTC

.section .data
.align 8
.align 1
lvl12_rbfCI_closure:
	.quad	lvl12_rbfCI_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.524514728 UTC

.section .data.rel.ro
.align 8
.align 1
ubgTw_srtd:
	.quad	SbfJE_srt+64
	.quad	39
	.quad	446676603777


==================== Asm code ====================
2018-03-16 16:06:12.525219819 UTC

.section .text
.align 8
lvl12_rbfCI_entry:
_cbgTi:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgTj
_cbgTk:
	movq $block_cbgTd_info,-8(%rbp)
	addq $-8,%rbp
	jmp stg_noDuplicate#
_cbgTj:
	movl $lvl12_rbfCI_closure,%ebx
	jmp *-8(%r13)
	.size lvl12_rbfCI_entry, .-lvl12_rbfCI_entry


==================== Asm code ====================
2018-03-16 16:06:12.525899287 UTC

.section .data.rel.ro
.align 8
.align 1
lvl12_rbfCI_info:
	.quad	lvl12_rbfCI_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967299
	.quad	ubgTw_srtd


==================== Asm code ====================
2018-03-16 16:06:12.526475234 UTC

.section .data.rel.ro
.align 8
.align 1
ubgTx_srtd:
	.quad	SbfJE_srt+64
	.quad	38
	.quad	171798696833


==================== Asm code ====================
2018-03-16 16:06:12.52709421 UTC

.section .text
.align 8
_cbgTd:
_cbgTd:
	movq $block_cbgTf_info,(%rbp)
	movl $GHC.IO.Encoding.getLocaleEncoding1_closure,%ebx
	testb $7,%bl
	jne _cbgTf
_cbgTg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgTd, .-_cbgTd


==================== Asm code ====================
2018-03-16 16:06:12.5276638 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgTd_info:
	.quad	_cbgTd
	.quad	0
	.quad	-4294967266
	.quad	ubgTx_srtd


==================== Asm code ====================
2018-03-16 16:06:12.528195755 UTC

.section .data.rel.ro
.align 8
.align 1
ubgTy_srtd:
	.quad	SbfJE_srt+64
	.quad	38
	.quad	171798692737


==================== Asm code ====================
2018-03-16 16:06:12.528830386 UTC

.section .text
.align 8
_cbgTf:
_cbgTf:
	movq $block_cbgTo_info,(%rbp)
	movq 7(%rbx),%rbx
	jmp stg_ap_v_fast
	.size _cbgTf, .-_cbgTf


==================== Asm code ====================
2018-03-16 16:06:12.529402284 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgTf_info:
	.quad	_cbgTf
	.quad	0
	.quad	-4294967266
	.quad	ubgTy_srtd


==================== Asm code ====================
2018-03-16 16:06:12.529903664 UTC

.section .data.rel.ro
.align 8
.align 1
ubgTz_srtd:
	.quad	SbfJE_srt+64
	.quad	38
	.quad	171798692737


==================== Asm code ====================
2018-03-16 16:06:12.530667887 UTC

.section .text
.align 8
_cbgTo:
_cbgTo:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbgTt
_cbgTs:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	movl $lvl11_rbfCH_closure,%r9d
	movl $GHC.IO.FD.stdout_closure,%r8d
	movl $GHC.IO.Handle.FD.fdToHandle12_closure,%edi
	movl $GHC.IO.FD.$fBufferedIOFD_closure,%esi
	movl $GHC.IO.FD.$fIODeviceFD_closure,%r14d
	movq $GHC.IO.Handle.Types.WriteHandle_closure+4,-40(%rbp)
	movq $GHC.Types.True_closure+2,-32(%rbp)
	leaq -6(%r12),%rax
	movq %rax,-24(%rbp)
	movq $GHC.IO.Handle.Types.nativeNewlineMode_closure,-16(%rbp)
	movq $lvl8_rbfCE_closure+2,-8(%rbp)
	movq $GHC.Base.Nothing_closure+1,(%rbp)
	addq $-40,%rbp
	jmp GHC.IO.Handle.Internals.mkDuplexHandle5_entry
_cbgTt:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbgTo, .-_cbgTo


==================== Asm code ====================
2018-03-16 16:06:12.531428007 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgTo_info:
	.quad	_cbgTo
	.quad	0
	.quad	-4294967266
	.quad	ubgTz_srtd


==================== Asm code ====================
2018-03-16 16:06:12.534723592 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.stdout_closure
.type GHC.IO.Handle.FD.stdout_closure, @object
GHC.IO.Handle.FD.stdout_closure:
	.quad	GHC.IO.Handle.FD.stdout_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.535518887 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.stdout_entry
.type GHC.IO.Handle.FD.stdout_entry, @object
GHC.IO.Handle.FD.stdout_entry:
_cbgU2:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgU3
_cbgU4:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbgTZ
_cbgTY:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_cbgU0_info,-24(%rbp)
	addq $-24,%rbp
	jmp lvl12_rbfCI_entry
_cbgU3:
	jmp *-16(%r13)
_cbgTZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.FD.stdout_entry, .-GHC.IO.Handle.FD.stdout_entry


==================== Asm code ====================
2018-03-16 16:06:12.536211591 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.stdout_info
.type GHC.IO.Handle.FD.stdout_info, @object
GHC.IO.Handle.FD.stdout_info:
	.quad	GHC.IO.Handle.FD.stdout_entry
	.quad	0
	.quad	4294967317
	.quad	SbfJE_srt+368


==================== Asm code ====================
2018-03-16 16:06:12.536877066 UTC

.section .text
.align 8
_cbgU0:
_cbgU0:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgU0, .-_cbgU0


==================== Asm code ====================
2018-03-16 16:06:12.537473444 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgU0_info:
	.quad	_cbgU0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:12.53916442 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl13_rbfCJ_bytes:
	.asciz "<stdin>"


==================== Asm code ====================
2018-03-16 16:06:12.541664883 UTC

.section .data
.align 8
.align 1
lvl14_rbfCK_closure:
	.quad	lvl14_rbfCK_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.542443234 UTC

.section .text
.align 8
lvl14_rbfCK_entry:
_cbgUp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgUq
_cbgUr:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbgUo
_cbgUn:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl13_rbfCJ_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_cbgUq:
	jmp *-16(%r13)
_cbgUo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl14_rbfCK_entry, .-lvl14_rbfCK_entry


==================== Asm code ====================
2018-03-16 16:06:12.543129139 UTC

.section .data.rel.ro
.align 8
.align 1
lvl14_rbfCK_info:
	.quad	lvl14_rbfCK_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:12.548110913 UTC

.section .data
.align 8
.align 1
lvl15_rbfCL_closure:
	.quad	lvl15_rbfCL_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.548724794 UTC

.section .data.rel.ro
.align 8
.align 1
ubgUW_srtd:
	.quad	SbfJE_srt+64
	.quad	41
	.quad	1683627185025


==================== Asm code ====================
2018-03-16 16:06:12.549457128 UTC

.section .text
.align 8
lvl15_rbfCL_entry:
_cbgUI:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgUJ
_cbgUK:
	movq $block_cbgUD_info,-8(%rbp)
	addq $-8,%rbp
	jmp stg_noDuplicate#
_cbgUJ:
	movl $lvl15_rbfCL_closure,%ebx
	jmp *-8(%r13)
	.size lvl15_rbfCL_entry, .-lvl15_rbfCL_entry


==================== Asm code ====================
2018-03-16 16:06:12.55009348 UTC

.section .data.rel.ro
.align 8
.align 1
lvl15_rbfCL_info:
	.quad	lvl15_rbfCL_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967299
	.quad	ubgUW_srtd


==================== Asm code ====================
2018-03-16 16:06:12.550650511 UTC

.section .data.rel.ro
.align 8
.align 1
ubgUX_srtd:
	.quad	SbfJE_srt+64
	.quad	40
	.quad	584115557249


==================== Asm code ====================
2018-03-16 16:06:12.551358542 UTC

.section .text
.align 8
_cbgUD:
_cbgUD:
	movq $block_cbgUF_info,(%rbp)
	movl $GHC.IO.Encoding.getLocaleEncoding1_closure,%ebx
	testb $7,%bl
	jne _cbgUF
_cbgUG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgUD, .-_cbgUD


==================== Asm code ====================
2018-03-16 16:06:12.551958191 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgUD_info:
	.quad	_cbgUD
	.quad	0
	.quad	-4294967266
	.quad	ubgUX_srtd


==================== Asm code ====================
2018-03-16 16:06:12.552518623 UTC

.section .data.rel.ro
.align 8
.align 1
ubgUY_srtd:
	.quad	SbfJE_srt+64
	.quad	40
	.quad	584115553153


==================== Asm code ====================
2018-03-16 16:06:12.553191548 UTC

.section .text
.align 8
_cbgUF:
_cbgUF:
	movq $block_cbgUO_info,(%rbp)
	movq 7(%rbx),%rbx
	jmp stg_ap_v_fast
	.size _cbgUF, .-_cbgUF


==================== Asm code ====================
2018-03-16 16:06:12.55373625 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgUF_info:
	.quad	_cbgUF
	.quad	0
	.quad	-4294967266
	.quad	ubgUY_srtd


==================== Asm code ====================
2018-03-16 16:06:12.554260957 UTC

.section .data.rel.ro
.align 8
.align 1
ubgUZ_srtd:
	.quad	SbfJE_srt+64
	.quad	40
	.quad	584115553153


==================== Asm code ====================
2018-03-16 16:06:12.555081307 UTC

.section .text
.align 8
_cbgUO:
_cbgUO:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbgUT
_cbgUS:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq %rbx,(%r12)
	movl $lvl14_rbfCK_closure,%r9d
	movl $GHC.IO.FD.stdin_closure,%r8d
	movl $GHC.IO.Handle.FD.fdToHandle12_closure,%edi
	movl $GHC.IO.FD.$fBufferedIOFD_closure,%esi
	movl $GHC.IO.FD.$fIODeviceFD_closure,%r14d
	movq $GHC.IO.Handle.Types.ReadHandle_closure+3,-40(%rbp)
	movq $GHC.Types.True_closure+2,-32(%rbp)
	leaq -6(%r12),%rax
	movq %rax,-24(%rbp)
	movq $GHC.IO.Handle.Types.nativeNewlineMode_closure,-16(%rbp)
	movq $lvl8_rbfCE_closure+2,-8(%rbp)
	movq $GHC.Base.Nothing_closure+1,(%rbp)
	addq $-40,%rbp
	jmp GHC.IO.Handle.Internals.mkDuplexHandle5_entry
_cbgUT:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cbgUO, .-_cbgUO


==================== Asm code ====================
2018-03-16 16:06:12.555821561 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgUO_info:
	.quad	_cbgUO
	.quad	0
	.quad	-4294967266
	.quad	ubgUZ_srtd


==================== Asm code ====================
2018-03-16 16:06:12.559053462 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.stdin_closure
.type GHC.IO.Handle.FD.stdin_closure, @object
GHC.IO.Handle.FD.stdin_closure:
	.quad	GHC.IO.Handle.FD.stdin_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:12.559839461 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.stdin_entry
.type GHC.IO.Handle.FD.stdin_entry, @object
GHC.IO.Handle.FD.stdin_entry:
_cbgVs:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbgVt
_cbgVu:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _cbgVp
_cbgVo:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_cbgVq_info,-24(%rbp)
	addq $-24,%rbp
	jmp lvl15_rbfCL_entry
_cbgVt:
	jmp *-16(%r13)
_cbgVp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.FD.stdin_entry, .-GHC.IO.Handle.FD.stdin_entry


==================== Asm code ====================
2018-03-16 16:06:12.560523425 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.stdin_info
.type GHC.IO.Handle.FD.stdin_info, @object
GHC.IO.Handle.FD.stdin_info:
	.quad	GHC.IO.Handle.FD.stdin_entry
	.quad	0
	.quad	4294967317
	.quad	SbfJE_srt+384


==================== Asm code ====================
2018-03-16 16:06:12.56117132 UTC

.section .text
.align 8
_cbgVq:
_cbgVq:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbgVq, .-_cbgVq


==================== Asm code ====================
2018-03-16 16:06:12.561794041 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbgVq_info:
	.quad	_cbgVq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:12.564030009 UTC

.section .data.rel.ro
.align 8
.align 1
SbfJE_srt:
	.quad	Data.Typeable.Internal.$wmkTrCon_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	lvl1_rbfCv_closure
	.quad	lvl3_rbfCx_closure
	.quad	GHC.IO.Handle.FD.handleToFd3_closure
	.quad	lvl5_rbfCz_closure
	.quad	GHC.IO.Handle.FD.handleToFd2_closure
	.quad	Data.Typeable.Internal.sameTypeRep_closure
	.quad	GHC.IO.Handle.FD.fdToHandle12_closure
	.quad	GHC.IO.Handle.FD.handleToFd1_closure
	.quad	GHC.IO.Handle.FD.fdToHandle7_closure
	.quad	Foreign.C.Error.throwErrnoIfMinus1Retry2_closure
	.quad	System.Posix.Internals.setNonBlockingFD3_closure
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle1_closure
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle4_closure
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle5_closure
	.quad	GHC.IO.FD.$fBufferedIOFD_closure
	.quad	GHC.IO.FD.$fIODeviceFD_closure
	.quad	GHC.IO.Handle.FD.fdToHandle5_closure
	.quad	GHC.IO.Handle.FD.fdToHandle6_closure
	.quad	GHC.IO.Encoding.getLocaleEncoding1_closure
	.quad	GHC.IO.FD.$wmkFD_closure
	.quad	GHC.IO.Handle.FD.fdToHandle'1_closure
	.quad	GHC.IO.Handle.FD.fdToHandle2_closure
	.quad	System.Posix.Internals.$wfdGetMode_closure
	.quad	GHC.IO.Handle.FD.$wfdToHandle_closure
	.quad	GHC.IO.Handle.FD.fdToHandle1_closure
	.quad	GHC.IO.FD.$w$cclose_closure
	.quad	GHC.IO.FD.openFile1_closure
	.quad	GHC.IO.Handle.FD.openBinaryFile5_closure
	.quad	GHC.IO.Handle.FD.fdToHandle10_closure
	.quad	GHC.IO.Handle.FD.openFile2_closure
	.quad	GHC.IO.Exception.$fExceptionIOException4_closure
	.quad	GHC.IO.Handle.FD.openFile1_closure
	.quad	GHC.IO.Handle.FD.openFileBlocking1_closure
	.quad	GHC.IO.Handle.FD.openBinaryFile3_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	GHC.IO.Handle.FD.openBinaryFile2_closure
	.quad	GHC.IO.Handle.FD.openBinaryFile1_closure
	.quad	GHC.IO.Handle.Internals.ioe_finalizedHandle_closure
	.quad	$wstdHandleFinalizer_rbfCA_closure
	.quad	stdHandleFinalizer_rbfCB_closure
	.quad	lvl7_rbfCD_closure
	.quad	lvl8_rbfCE_closure
	.quad	lvl9_rbfCF_closure
	.quad	lvl11_rbfCH_closure
	.quad	lvl12_rbfCI_closure
	.quad	lvl14_rbfCK_closure
	.quad	lvl15_rbfCL_closure


==================== Asm code ====================
2018-03-16 16:06:13.547516043 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle12_closure
.type GHC.IO.Handle.FD.fdToHandle12_closure, @object
GHC.IO.Handle.FD.fdToHandle12_closure:
	.quad	GHC.IO.Handle.FD.fdToHandle12_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.548537419 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.fdToHandle12_entry
.type GHC.IO.Handle.FD.fdToHandle12_entry, @object
GHC.IO.Handle.FD.fdToHandle12_entry:
_cbh2s:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _cbh2t
_cbh2u:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbh2m
_cbh2l:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_cbh2n_info(%rip),%rax
	movq %rax,-24(%rbp)
	xorl %r9d,%r9d
	movq GHC.IO.FD.$tcFD1_closure@gotpcrel(%rip),%r8
	movq GHC.IO.FD.$trModule_closure@gotpcrel(%rip),%rdi
	movq $-2900453971751795240,%rsi
	movq $-7607928521190512554,%r14
	movq GHC.Types.krep$*_closure@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%rbp)
	addq $-40,%rbp
	jmp *Data.Typeable.Internal.$wmkTrCon_entry@gotpcrel(%rip)
_cbh2t:
	jmp *-16(%r13)
_cbh2m:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.FD.fdToHandle12_entry, .-GHC.IO.Handle.FD.fdToHandle12_entry


==================== Asm code ====================
2018-03-16 16:06:13.549382639 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle12_info
.type GHC.IO.Handle.FD.fdToHandle12_info, @object
GHC.IO.Handle.FD.fdToHandle12_info:
	.quad	GHC.IO.Handle.FD.fdToHandle12_entry
	.quad	0
	.quad	4294967317
	.quad	Sbh2A_srt


==================== Asm code ====================
2018-03-16 16:06:13.550041667 UTC

.section .text
.align 8
_cbh2n:
_cbh2n:
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-40,%rbp
	jmp _cbh2o
	.size _cbh2n, .-_cbh2n


==================== Asm code ====================
2018-03-16 16:06:13.550643582 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbh2n_info:
	.quad	_cbh2n
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:13.55137966 UTC

.section .text
.align 8
_cbh2o:
_cbh2o:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbh2x
_cbh2w:
	movq Data.Typeable.Internal.TrTyCon_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq 32(%rbp),%rax
	movq %rax,-16(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -38(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbh2x:
	movq $48,904(%r13)
	leaq block_cbh2o_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cbh2o, .-_cbh2o


==================== Asm code ====================
2018-03-16 16:06:13.552082736 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbh2o_info:
	.quad	_cbh2o
	.quad	1093
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:13.553747222 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.FD.$trModule4_bytes
.type GHC.IO.Handle.FD.$trModule4_bytes, @object
GHC.IO.Handle.FD.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:06:13.555526526 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.$trModule3_closure
.type GHC.IO.Handle.FD.$trModule3_closure, @object
GHC.IO.Handle.FD.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.FD.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:06:13.557211504 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.FD.$trModule2_bytes
.type GHC.IO.Handle.FD.$trModule2_bytes, @object
GHC.IO.Handle.FD.$trModule2_bytes:
	.asciz "GHC.IO.Handle.FD"


==================== Asm code ====================
2018-03-16 16:06:13.558922414 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.$trModule1_closure
.type GHC.IO.Handle.FD.$trModule1_closure, @object
GHC.IO.Handle.FD.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.IO.Handle.FD.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:06:13.56060892 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.$trModule_closure
.type GHC.IO.Handle.FD.$trModule_closure, @object
GHC.IO.Handle.FD.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.IO.Handle.FD.$trModule3_closure+1
	.quad	GHC.IO.Handle.FD.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:06:13.562330567 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_rbfCu_bytes:
	.asciz "handleToFd"


==================== Asm code ====================
2018-03-16 16:06:13.564980942 UTC

.section .data
.align 8
.align 1
lvl1_rbfCv_closure:
	.quad	lvl1_rbfCv_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.566296119 UTC

.section .text
.align 8
lvl1_rbfCv_entry:
_cbh3d:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbh3e
_cbh3f:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbh3c
_cbh3b:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl_rbfCu_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbh3e:
	jmp *-16(%r13)
_cbh3c:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl1_rbfCv_entry, .-lvl1_rbfCv_entry


==================== Asm code ====================
2018-03-16 16:06:13.567039623 UTC

.section .data.rel.ro
.align 8
.align 1
lvl1_rbfCv_info:
	.quad	lvl1_rbfCv_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:13.568793304 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl2_rbfCw_bytes:
	.asciz "not a file descriptor"


==================== Asm code ====================
2018-03-16 16:06:13.571258211 UTC

.section .data
.align 8
.align 1
lvl3_rbfCx_closure:
	.quad	lvl3_rbfCx_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.572056742 UTC

.section .text
.align 8
lvl3_rbfCx_entry:
_cbh3v:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbh3w
_cbh3x:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbh3u
_cbh3t:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl2_rbfCw_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbh3w:
	jmp *-16(%r13)
_cbh3u:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl3_rbfCx_entry, .-lvl3_rbfCx_entry


==================== Asm code ====================
2018-03-16 16:06:13.572826624 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_rbfCx_info:
	.quad	lvl3_rbfCx_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:13.576983946 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.handleToFd3_closure
.type GHC.IO.Handle.FD.handleToFd3_closure, @object
GHC.IO.Handle.FD.handleToFd3_closure:
	.quad	GHC.IO.Handle.FD.handleToFd3_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.578382681 UTC

.section .text
.align 8
sat_sbgVT_entry:
_cbh3Q:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbh3R
_cbh3S:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbh3U
_cbh3T:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq GHC.IO.Exception.IOError_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -62(%r12),%rax
	movq %rax,-40(%r12)
	movq GHC.IO.Exception.InappropriateType_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	leaq lvl1_rbfCv_closure(%rip),%rax
	movq %rax,-24(%r12)
	leaq lvl3_rbfCx_closure(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cbh3U:
	movq $72,904(%r13)
_cbh3R:
	jmp *-16(%r13)
	.size sat_sbgVT_entry, .-sat_sbgVT_entry


==================== Asm code ====================
2018-03-16 16:06:13.579194068 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbgVT_info:
	.quad	sat_sbgVT_entry
	.quad	1
	.quad	30064771088
	.quad	Sbh2A_srt+8


==================== Asm code ====================
2018-03-16 16:06:13.579902704 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.handleToFd3_entry
.type GHC.IO.Handle.FD.handleToFd3_entry, @object
GHC.IO.Handle.FD.handleToFd3_entry:
_cbh3V:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbh3Z
_cbh3Y:
	leaq sat_sbgVT_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
_cbh3Z:
	movq $24,904(%r13)
	leaq GHC.IO.Handle.FD.handleToFd3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.handleToFd3_entry, .-GHC.IO.Handle.FD.handleToFd3_entry


==================== Asm code ====================
2018-03-16 16:06:13.580577372 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.handleToFd3_info
.type GHC.IO.Handle.FD.handleToFd3_info, @object
GHC.IO.Handle.FD.handleToFd3_info:
	.quad	GHC.IO.Handle.FD.handleToFd3_entry
	.quad	0
	.quad	64424509454
	.quad	8589934597
	.quad	Sbh2A_srt+8


==================== Asm code ====================
2018-03-16 16:06:13.582370879 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl4_rbfCy_bytes:
	.asciz "not a file handle"


==================== Asm code ====================
2018-03-16 16:06:13.584929209 UTC

.section .data
.align 8
.align 1
lvl5_rbfCz_closure:
	.quad	lvl5_rbfCz_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.585781308 UTC

.section .text
.align 8
lvl5_rbfCz_entry:
_cbh4s:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbh4t
_cbh4u:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbh4r
_cbh4q:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl4_rbfCy_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbh4t:
	jmp *-16(%r13)
_cbh4r:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl5_rbfCz_entry, .-lvl5_rbfCz_entry


==================== Asm code ====================
2018-03-16 16:06:13.586496424 UTC

.section .data.rel.ro
.align 8
.align 1
lvl5_rbfCz_info:
	.quad	lvl5_rbfCz_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:13.590153327 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.handleToFd2_closure
.type GHC.IO.Handle.FD.handleToFd2_closure, @object
GHC.IO.Handle.FD.handleToFd2_closure:
	.quad	GHC.IO.Handle.FD.handleToFd2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.591048218 UTC

.section .text
.align 8
sat_sbgVY_entry:
_cbh4N:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbh4O
_cbh4P:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbh4R
_cbh4Q:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%r12)
	movq %rax,-56(%r12)
	movq GHC.IO.Exception.IOError_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -62(%r12),%rax
	movq %rax,-40(%r12)
	movq GHC.IO.Exception.InappropriateType_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	leaq lvl1_rbfCv_closure(%rip),%rax
	movq %rax,-24(%r12)
	leaq lvl5_rbfCz_closure(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%r12)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cbh4R:
	movq $72,904(%r13)
_cbh4O:
	jmp *-16(%r13)
	.size sat_sbgVY_entry, .-sat_sbgVY_entry


==================== Asm code ====================
2018-03-16 16:06:13.591857124 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbgVY_info:
	.quad	sat_sbgVY_entry
	.quad	1
	.quad	81604378640
	.quad	Sbh2A_srt+8


==================== Asm code ====================
2018-03-16 16:06:13.592581637 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.handleToFd2_entry
.type GHC.IO.Handle.FD.handleToFd2_entry, @object
GHC.IO.Handle.FD.handleToFd2_entry:
_cbh4S:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbh4W
_cbh4V:
	leaq sat_sbgVY_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
_cbh4W:
	movq $24,904(%r13)
	leaq GHC.IO.Handle.FD.handleToFd2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.handleToFd2_entry, .-GHC.IO.Handle.FD.handleToFd2_entry


==================== Asm code ====================
2018-03-16 16:06:13.593294169 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.handleToFd2_info
.type GHC.IO.Handle.FD.handleToFd2_info, @object
GHC.IO.Handle.FD.handleToFd2_info:
	.quad	GHC.IO.Handle.FD.handleToFd2_entry
	.quad	0
	.quad	219043332110
	.quad	8589934597
	.quad	Sbh2A_srt+8


==================== Asm code ====================
2018-03-16 16:06:13.597613215 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.handleToFd1_closure
.type GHC.IO.Handle.FD.handleToFd1_closure, @object
GHC.IO.Handle.FD.handleToFd1_closure:
	.quad	GHC.IO.Handle.FD.handleToFd1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.598402727 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.handleToFd1_entry
.type GHC.IO.Handle.FD.handleToFd1_entry, @object
GHC.IO.Handle.FD.handleToFd1_entry:
_cbh5t:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbh5u
_cbh5v:
	leaq block_cbh5m_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbh5m
_cbh5n:
	movq (%rbx),%rax
	jmp *(%rax)
_cbh5u:
	leaq GHC.IO.Handle.FD.handleToFd1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.handleToFd1_entry, .-GHC.IO.Handle.FD.handleToFd1_entry


==================== Asm code ====================
2018-03-16 16:06:13.599102439 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.handleToFd1_info
.type GHC.IO.Handle.FD.handleToFd1_info, @object
GHC.IO.Handle.FD.handleToFd1_info:
	.quad	GHC.IO.Handle.FD.handleToFd1_entry
	.quad	0
	.quad	261993005070
	.quad	8589934597
	.quad	Sbh2A_srt+32


==================== Asm code ====================
2018-03-16 16:06:13.599830038 UTC

.section .text
.align 8
_cbh5m:
_cbh5m:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbh5q
_cbh5r:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.IO.Handle.FD.handleToFd2_entry
_cbh5q:
	leaq block_cbh5y_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_readMVar#@gotpcrel(%rip)
	.size _cbh5m, .-_cbh5m


==================== Asm code ====================
2018-03-16 16:06:13.600468971 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbh5m_info:
	.quad	_cbh5m
	.quad	0
	.quad	124554051614
	.quad	Sbh2A_srt+32


==================== Asm code ====================
2018-03-16 16:06:13.601168298 UTC

.section .text
.align 8
_cbh5y:
_cbh5y:
	leaq block_cbh5A_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbh5A
_cbh5D:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbh5y, .-_cbh5y


==================== Asm code ====================
2018-03-16 16:06:13.602138478 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbh5y_info:
	.quad	_cbh5y
	.quad	1
	.quad	107374182430
	.quad	Sbh2A_srt+32


==================== Asm code ====================
2018-03-16 16:06:13.60281959 UTC

.section .text
.align 8
_cbh5A:
_cbh5A:
	leaq block_cbh5H_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.FD.fdToHandle12_closure(%rip),%rsi
	movq 23(%rbx),%r14
	movq 31(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *Data.Typeable.Internal.sameTypeRep_entry@gotpcrel(%rip)
	.size _cbh5A, .-_cbh5A


==================== Asm code ====================
2018-03-16 16:06:13.60345772 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbh5A_info:
	.quad	_cbh5A
	.quad	1
	.quad	107374182430
	.quad	Sbh2A_srt+32


==================== Asm code ====================
2018-03-16 16:06:13.604143123 UTC

.section .text
.align 8
_cbh5H:
_cbh5H:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbh5O
_cbh5S:
	movq 8(%rbp),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbh5O:
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.IO.Handle.FD.handleToFd3_entry
	.size _cbh5H, .-_cbh5H


==================== Asm code ====================
2018-03-16 16:06:13.604766676 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbh5H_info:
	.quad	_cbh5H
	.quad	2
	.quad	4294967326
	.quad	Sbh2A_srt+32


==================== Asm code ====================
2018-03-16 16:06:13.607049979 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.handleToFd_closure
.type GHC.IO.Handle.FD.handleToFd_closure, @object
GHC.IO.Handle.FD.handleToFd_closure:
	.quad	GHC.IO.Handle.FD.handleToFd_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.607703016 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.handleToFd_entry
.type GHC.IO.Handle.FD.handleToFd_entry, @object
GHC.IO.Handle.FD.handleToFd_entry:
_cbh6w:
	jmp GHC.IO.Handle.FD.handleToFd1_entry
	.size GHC.IO.Handle.FD.handleToFd_entry, .-GHC.IO.Handle.FD.handleToFd_entry


==================== Asm code ====================
2018-03-16 16:06:13.608308239 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.handleToFd_info
.type GHC.IO.Handle.FD.handleToFd_info, @object
GHC.IO.Handle.FD.handleToFd_info:
	.quad	GHC.IO.Handle.FD.handleToFd_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	Sbh2A_srt+72


==================== Asm code ====================
2018-03-16 16:06:13.610604534 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.FD.fdToHandle11_bytes
.type GHC.IO.Handle.FD.fdToHandle11_bytes, @object
GHC.IO.Handle.FD.fdToHandle11_bytes:
	.asciz "openFile"


==================== Asm code ====================
2018-03-16 16:06:13.61316959 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle10_closure
.type GHC.IO.Handle.FD.fdToHandle10_closure, @object
GHC.IO.Handle.FD.fdToHandle10_closure:
	.quad	GHC.IO.Handle.FD.fdToHandle10_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.614385822 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.fdToHandle10_entry
.type GHC.IO.Handle.FD.fdToHandle10_entry, @object
GHC.IO.Handle.FD.fdToHandle10_entry:
_cbh6K:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbh6L
_cbh6M:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbh6J
_cbh6I:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.FD.fdToHandle11_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbh6L:
	jmp *-16(%r13)
_cbh6J:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.FD.fdToHandle10_entry, .-GHC.IO.Handle.FD.fdToHandle10_entry


==================== Asm code ====================
2018-03-16 16:06:13.615117862 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle10_info
.type GHC.IO.Handle.FD.fdToHandle10_info, @object
GHC.IO.Handle.FD.fdToHandle10_info:
	.quad	GHC.IO.Handle.FD.fdToHandle10_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:13.616894788 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.FD.fdToHandle9_bytes
.type GHC.IO.Handle.FD.fdToHandle9_bytes, @object
GHC.IO.Handle.FD.fdToHandle9_bytes:
	.asciz "is a directory"


==================== Asm code ====================
2018-03-16 16:06:13.619375778 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle8_closure
.type GHC.IO.Handle.FD.fdToHandle8_closure, @object
GHC.IO.Handle.FD.fdToHandle8_closure:
	.quad	GHC.IO.Handle.FD.fdToHandle8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.620180798 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.fdToHandle8_entry
.type GHC.IO.Handle.FD.fdToHandle8_entry, @object
GHC.IO.Handle.FD.fdToHandle8_entry:
_cbh72:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbh73
_cbh74:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbh71
_cbh70:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.FD.fdToHandle9_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbh73:
	jmp *-16(%r13)
_cbh71:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.FD.fdToHandle8_entry, .-GHC.IO.Handle.FD.fdToHandle8_entry


==================== Asm code ====================
2018-03-16 16:06:13.620917103 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle8_info
.type GHC.IO.Handle.FD.fdToHandle8_info, @object
GHC.IO.Handle.FD.fdToHandle8_info:
	.quad	GHC.IO.Handle.FD.fdToHandle8_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:13.622844186 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle7_closure
.type GHC.IO.Handle.FD.fdToHandle7_closure, @object
GHC.IO.Handle.FD.fdToHandle7_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.InappropriateType_closure+1
	.quad	GHC.IO.Handle.FD.fdToHandle10_closure
	.quad	GHC.IO.Handle.FD.fdToHandle8_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.625824663 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle6_closure
.type GHC.IO.Handle.FD.fdToHandle6_closure, @object
GHC.IO.Handle.FD.fdToHandle6_closure:
	.quad	GHC.IO.Handle.FD.fdToHandle6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.626663865 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.fdToHandle6_entry
.type GHC.IO.Handle.FD.fdToHandle6_entry, @object
GHC.IO.Handle.FD.fdToHandle6_entry:
_cbh7k:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbh7l
_cbh7m:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbh7j
_cbh7i:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.FD.fdToHandle7_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cbh7l:
	jmp *-16(%r13)
_cbh7j:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.FD.fdToHandle6_entry, .-GHC.IO.Handle.FD.fdToHandle6_entry


==================== Asm code ====================
2018-03-16 16:06:13.627379382 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle6_info
.type GHC.IO.Handle.FD.fdToHandle6_info, @object
GHC.IO.Handle.FD.fdToHandle6_info:
	.quad	GHC.IO.Handle.FD.fdToHandle6_entry
	.quad	0
	.quad	2203318222869
	.quad	Sbh2A_srt+8


==================== Asm code ====================
2018-03-16 16:06:13.639578686 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle5_closure
.type GHC.IO.Handle.FD.fdToHandle5_closure, @object
GHC.IO.Handle.FD.fdToHandle5_closure:
	.quad	GHC.IO.Handle.FD.fdToHandle5_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.640461496 UTC

.section .text
.align 8
nl_sbgWC_entry:
_cbh7L:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbh7M
_cbh7N:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbh7I_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbh7I
_cbh7J:
	movq (%rbx),%rax
	jmp *(%rax)
_cbh7M:
	jmp *-16(%r13)
	.size nl_sbgWC_entry, .-nl_sbgWC_entry


==================== Asm code ====================
2018-03-16 16:06:13.641151083 UTC

.section .data.rel.ro
.align 8
.align 1
nl_sbgWC_info:
	.quad	nl_sbgWC_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:13.642215874 UTC

.section .text
.align 8
_cbh7I:
_cbh7I:
	movq GHC.IO.Handle.Types.nativeNewlineMode_closure@gotpcrel(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbh7I, .-_cbh7I


==================== Asm code ====================
2018-03-16 16:06:13.642826079 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbh7I_info:
	.quad	_cbh7I
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:13.643554426 UTC

.section .text
.align 8
sat_sbgWH_entry:
_cbh8a:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbh8b
_cbh8c:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbh81_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbh81
_cbh82:
	movq (%rbx),%rax
	jmp *(%rax)
_cbh8b:
	jmp *-16(%r13)
	.size sat_sbgWH_entry, .-sat_sbgWH_entry


==================== Asm code ====================
2018-03-16 16:06:13.644262811 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbgWH_info:
	.quad	sat_sbgWH_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:06:13.645134182 UTC

.section .text
.align 8
_cbh81:
_cbh81:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _ubh8p
_ubh8q:
	cmpq $4,%rbx
	jb _cbh87
_cbh88:
	movq GHC.IO.Handle.Types.ReadWriteHandle_closure@gotpcrel(%rip),%rax
	leaq 6(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbh87:
	movq GHC.IO.Handle.Types.AppendHandle_closure@gotpcrel(%rip),%rax
	leaq 5(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ubh8p:
	cmpq $2,%rbx
	jb _cbh85
_cbh86:
	movq GHC.IO.Handle.Types.WriteHandle_closure@gotpcrel(%rip),%rax
	leaq 4(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cbh85:
	movq GHC.IO.Handle.Types.ReadHandle_closure@gotpcrel(%rip),%rax
	leaq 3(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbh81, .-_cbh81


==================== Asm code ====================
2018-03-16 16:06:13.645909954 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbh81_info:
	.quad	_cbh81
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:13.646742887 UTC

.section .text
.align 8
sat_sbgX0_entry:
_cbh8L:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbh8X
_cbh8W:
	subq $8,%rsp
	movq 15(%rbx),%rax
	movslq %eax,%rsi
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call ghczuwrapperZC17ZCbaseZCSystemziPosixziInternalsZCfcntl@plt
	addq $8,%rsp
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movslq %eax,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cbh8X:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_sbgX0_entry, .-sat_sbgX0_entry


==================== Asm code ====================
2018-03-16 16:06:13.647454029 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbgX0_info:
	.quad	sat_sbgX0_entry
	.quad	8589934592
	.quad	13
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:13.648293458 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.fdToHandle5_entry
.type GHC.IO.Handle.FD.fdToHandle5_entry, @object
GHC.IO.Handle.FD.fdToHandle5_entry:
_cbh92:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cbh93
_cbh94:
	leaq block_cbh8s_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r9,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbh8s
_cbh8t:
	movq (%rbx),%rax
	jmp *(%rax)
_cbh93:
	leaq GHC.IO.Handle.FD.fdToHandle5_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.fdToHandle5_entry, .-GHC.IO.Handle.FD.fdToHandle5_entry


==================== Asm code ====================
2018-03-16 16:06:13.649016858 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle5_info
.type GHC.IO.Handle.FD.fdToHandle5_info, @object
GHC.IO.Handle.FD.fdToHandle5_info:
	.quad	GHC.IO.Handle.FD.fdToHandle5_entry
	.quad	0
	.quad	17562121273358
	.quad	30064771098
	.quad	Sbh2A_srt+64


==================== Asm code ====================
2018-03-16 16:06:13.649874772 UTC

.section .text
.align 8
_cbh8s:
_cbh8s:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbh8Z
_cbh90:
	leaq block_cbh8y_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cbh8y
_cbh8z:
	movq (%rbx),%rax
	jmp *(%rax)
_cbh8Z:
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _cbh7C
	.size _cbh8s, .-_cbh8s


==================== Asm code ====================
2018-03-16 16:06:13.650562623 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbh8s_info:
	.quad	_cbh8s
	.quad	5
	.quad	13164074762270
	.quad	Sbh2A_srt+64


==================== Asm code ====================
2018-03-16 16:06:13.651435502 UTC

.section .text
.align 8
_cbh8y:
_cbh8y:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbh9L
_cbh9K:
	movq 7(%rbx),%rax
	subq $8,%rsp
	movq %rax,%rbx
	xorl %eax,%eax
	call __hscore_f_getfl@plt
	addq $8,%rsp
	leaq sat_sbgX0_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq block_cbh9F_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -15(%r12),%rdi
	movq System.Posix.Internals.setNonBlockingFD3_closure@gotpcrel(%rip),%rsi
	movq System.Posix.Internals.fdFileSize_pred_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *Foreign.C.Error.throwErrnoIfMinus1Retry2_entry@gotpcrel(%rip)
_cbh9L:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbh8y, .-_cbh8y


==================== Asm code ====================
2018-03-16 16:06:13.652215837 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbh8y_info:
	.quad	_cbh8y
	.quad	4
	.quad	13164074762270
	.quad	Sbh2A_srt+64


==================== Asm code ====================
2018-03-16 16:06:13.652960794 UTC

.section .text
.align 8
_cbh9F:
_cbh9F:
	leaq block_cbh9H_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbh9H
_cbh9N:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbh9F, .-_cbh9F


==================== Asm code ====================
2018-03-16 16:06:13.654471915 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbh9F_info:
	.quad	_cbh9F
	.quad	69
	.quad	13060995547166
	.quad	Sbh2A_srt+64


==================== Asm code ====================
2018-03-16 16:06:13.655421606 UTC

.section .text
.align 8
_cbh9H:
_cbh9H:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbh9T
_cbh9S:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	subq $8,%rsp
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call __hscore_o_nonblock@plt
	addq $8,%rsp
	movslq %eax,%rax
	movq %rbx,%rcx
	orq %rax,%rcx
	cmpq %rcx,%rbx
	je _cbhad
_cbhae:
	subq $8,%rsp
	xorl %eax,%eax
	movq %rcx,%rbx
	call __hscore_f_setfl@plt
	addq $8,%rsp
	subq $8,%rsp
	movq %r14,%rcx
	movslq %eax,%rax
	movq %rbx,%rdx
	movq %rcx,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	call ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl@plt
	addq $8,%rsp
	movq GHC.IO.FD.FD_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %r14,-8(%r12)
	movq $1,(%r12)
	leaq -15(%r12),%rbx
	movq %rbx,8(%rbp)
	addq $8,%rbp
	jmp _cbh7C
_cbhad:
	movq GHC.IO.FD.FD_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq $1,(%r12)
	leaq -15(%r12),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _cbh7C
_cbh9T:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbh9H, .-_cbh9H


==================== Asm code ====================
2018-03-16 16:06:13.656256429 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbh9H_info:
	.quad	_cbh9H
	.quad	69
	.quad	13060995547166
	.quad	Sbh2A_srt+64


==================== Asm code ====================
2018-03-16 16:06:13.65705008 UTC

.section .text
.align 8
_cbh7C:
_cbh7C:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbh98
_cbh97:
	leaq nl_sbgWC_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq block_cbh95_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rbx
	leaq -16(%r12),%rax
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbh95
_cbh9c:
	movq (%rbx),%rax
	jmp *(%rax)
_cbh98:
	movq $24,904(%r13)
	movq (%rbp),%rax
	leaq block_cbh7B_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbh7C, .-_cbh7C


==================== Asm code ====================
2018-03-16 16:06:13.657818485 UTC

.section .text
.align 8
_cbh7B:
_cbh7B:
	movq %rbx,(%rbp)
	jmp _cbh7C
	.size _cbh7B, .-_cbh7B


==================== Asm code ====================
2018-03-16 16:06:13.658410101 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbh7B_info:
	.quad	_cbh7B
	.quad	4
	.quad	13060995547166
	.quad	Sbh2A_srt+64


==================== Asm code ====================
2018-03-16 16:06:13.659164692 UTC

.section .text
.align 8
_cbh95:
_cbh95:
	andl $7,%ebx
	cmpq $1,%rbx
	jne _ubhat
_cbh9m:
	leaq GHC.IO.Handle.FD.fdToHandle6_closure(%rip),%rbx
	addq $48,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_ubhat:
	cmpq $2,%rbx
	jne _cbh7V
_cbh9r:
	leaq block_cbh9p_info(%rip),%rax
	movq %rax,(%rbp)
	movq 32(%rbp),%rbx
	testb $7,%bl
	jne _cbh9p
_cbh9s:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbh95, .-_cbh95


==================== Asm code ====================
2018-03-16 16:06:13.659825677 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbh95_info:
	.quad	_cbh95
	.quad	5
	.quad	13060995547166
	.quad	Sbh2A_srt+64


==================== Asm code ====================
2018-03-16 16:06:13.660588064 UTC

.section .text
.align 8
_cbh9p:
_cbh9p:
	andl $7,%ebx
	cmpq $4,%rbx
	je _cbh9C
	jmp _cbh7V
_cbh9C:
	movq 24(%rbp),%r9
	movq 8(%rbp),%r8
	leaq GHC.IO.Handle.FD.fdToHandle12_closure(%rip),%rdi
	movq GHC.IO.FD.$fBufferedIOFD_closure@gotpcrel(%rip),%rsi
	movq GHC.IO.FD.$fIODeviceFD_closure@gotpcrel(%rip),%r14
	movq 40(%rbp),%rax
	movq %rax,32(%rbp)
	movq 16(%rbp),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp *GHC.IO.Handle.Internals.mkDuplexHandle1_entry@gotpcrel(%rip)
	.size _cbh9p, .-_cbh9p


==================== Asm code ====================
2018-03-16 16:06:13.661305823 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbh9p_info:
	.quad	_cbh9p
	.quad	5
	.quad	4264902524958
	.quad	Sbh2A_srt+64


==================== Asm code ====================
2018-03-16 16:06:13.662157498 UTC

.section .text
.align 8
_cbh7V:
_cbh7V:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbh9b
_cbh9a:
	leaq sat_sbgWH_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq 24(%rbp),%r9
	movq 8(%rbp),%r8
	leaq GHC.IO.Handle.FD.fdToHandle12_closure(%rip),%rdi
	movq GHC.IO.FD.$fBufferedIOFD_closure@gotpcrel(%rip),%rsi
	movq GHC.IO.FD.$fIODeviceFD_closure@gotpcrel(%rip),%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,8(%rbp)
	movq 16(%rbp),%rax
	movq 40(%rbp),%rbx
	movq %rbx,16(%rbp)
	movq %rax,24(%rbp)
	movq GHC.IO.Handle.Internals.mkDuplexHandle4_closure@gotpcrel(%rip),%rax
	movq %rax,32(%rbp)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,40(%rbp)
	jmp *GHC.IO.Handle.Internals.mkDuplexHandle5_entry@gotpcrel(%rip)
_cbh9b:
	movq $24,904(%r13)
	leaq block_cbh7V_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cbh7V, .-_cbh7V


==================== Asm code ====================
2018-03-16 16:06:13.662967468 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbh7V_info:
	.quad	_cbh7V
	.quad	5
	.quad	4127463571486
	.quad	Sbh2A_srt+64


==================== Asm code ====================
2018-03-16 16:06:13.665803844 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.mkHandleFromFD_closure
.type GHC.IO.Handle.FD.mkHandleFromFD_closure, @object
GHC.IO.Handle.FD.mkHandleFromFD_closure:
	.quad	GHC.IO.Handle.FD.mkHandleFromFD_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.666429852 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.mkHandleFromFD_entry
.type GHC.IO.Handle.FD.mkHandleFromFD_entry, @object
GHC.IO.Handle.FD.mkHandleFromFD_entry:
_cbhcz:
	jmp GHC.IO.Handle.FD.fdToHandle5_entry
	.size GHC.IO.Handle.FD.mkHandleFromFD_entry, .-GHC.IO.Handle.FD.mkHandleFromFD_entry


==================== Asm code ====================
2018-03-16 16:06:13.667000448 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.mkHandleFromFD_info
.type GHC.IO.Handle.FD.mkHandleFromFD_info, @object
GHC.IO.Handle.FD.mkHandleFromFD_info:
	.quad	GHC.IO.Handle.FD.mkHandleFromFD_entry
	.quad	0
	.quad	4294967310
	.quad	30064771098
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.668656763 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle'2_closure
.type GHC.IO.Handle.FD.fdToHandle'2_closure, @object
GHC.IO.Handle.FD.fdToHandle'2_closure:
	.quad	GHC.Word.W64#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.67786847 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle'1_closure
.type GHC.IO.Handle.FD.fdToHandle'1_closure, @object
GHC.IO.Handle.FD.fdToHandle'1_closure:
	.quad	GHC.IO.Handle.FD.fdToHandle'1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.678748219 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.fdToHandle'1_entry
.type GHC.IO.Handle.FD.fdToHandle'1_entry, @object
GHC.IO.Handle.FD.fdToHandle'1_entry:
_cbhcU:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhcV
_cbhcW:
	leaq block_cbhcN_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rsi,%rbx
	movq %r14,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _cbhcN
_cbhcO:
	movq (%rbx),%rax
	jmp *(%rax)
_cbhcV:
	leaq GHC.IO.Handle.FD.fdToHandle'1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.fdToHandle'1_entry, .-GHC.IO.Handle.FD.fdToHandle'1_entry


==================== Asm code ====================
2018-03-16 16:06:13.679453709 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle'1_info
.type GHC.IO.Handle.FD.fdToHandle'1_info, @object
GHC.IO.Handle.FD.fdToHandle'1_info:
	.quad	GHC.IO.Handle.FD.fdToHandle'1_entry
	.quad	0
	.quad	124554051598
	.quad	30064771098
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.680285893 UTC

.section .text
.align 8
_cbhcN:
_cbhcN:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbhcR
_cbhcS:
	leaq block_cbhdD_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbhdD
_cbhdF:
	movq (%rbx),%rax
	jmp *(%rax)
_cbhcR:
	movq 8(%rbp),%rax
	leaq block_cbhdr_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 16(%rbp),%r8
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rcx
	leaq 1(%rcx),%rdi
	movq 32(%rbp),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.IO.FD.$wmkFD_entry@gotpcrel(%rip)
	.size _cbhcN, .-_cbhcN


==================== Asm code ====================
2018-03-16 16:06:13.681029237 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhcN_info:
	.quad	_cbhcN
	.quad	5
	.quad	55834574878
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.681805862 UTC

.section .text
.align 8
_cbhdr:
_cbhdr:
	leaq block_cbhdt_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbhdt
_cbhdw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbhdr, .-_cbhdr


==================== Asm code ====================
2018-03-16 16:06:13.682410313 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhdr_info:
	.quad	_cbhdr
	.quad	4
	.quad	21474836510
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.683093695 UTC

.section .text
.align 8
_cbhdt:
_cbhdt:
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp _sbgXy
	.size _cbhdt, .-_cbhdt


==================== Asm code ====================
2018-03-16 16:06:13.683677171 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhdt_info:
	.quad	_cbhdt
	.quad	4
	.quad	21474836510
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.684592492 UTC

.section .text
.align 8
_cbhdD:
_cbhdD:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq %rbx,%rsi
	andl $7,%esi
	cmpq $3,%rsi
	je _cbhe5
_cbhdP:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _cbhdS
_cbhdR:
	movq (,,)_con_info@gotpcrel(%rip),%rsi
	movq %rsi,-40(%r12)
	movq %rbx,-32(%r12)
	leaq GHC.IO.Handle.FD.fdToHandle'2_closure+1(%rip),%rbx
	movq %rbx,-24(%r12)
	leaq GHC.IO.Handle.FD.fdToHandle'2_closure+1(%rip),%rbx
	movq %rbx,-16(%r12)
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	leaq -39(%r12),%rbx
	movq %rbx,(%r12)
	leaq block_cbhdL_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rcx,%r8
	leaq -6(%r12),%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.IO.FD.$wmkFD_entry@gotpcrel(%rip)
_cbhe5:
	leaq block_cbhe1_info(%rip),%rsi
	movq %rsi,8(%rbp)
	movq %rcx,%r8
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rcx
	leaq 1(%rcx),%rdi
	movq %rdx,%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.IO.FD.$wmkFD_entry@gotpcrel(%rip)
_cbhdS:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbhdD, .-_cbhdD


==================== Asm code ====================
2018-03-16 16:06:13.68545854 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhdD_info:
	.quad	_cbhdD
	.quad	5
	.quad	55834574878
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.686174754 UTC

.section .text
.align 8
_cbhe1:
_cbhe1:
	leaq block_cbhe3_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbhe3
_cbhe7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbhe1, .-_cbhe1


==================== Asm code ====================
2018-03-16 16:06:13.686774788 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhe1_info:
	.quad	_cbhe1
	.quad	4
	.quad	21474836510
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.68742121 UTC

.section .text
.align 8
_cbhe3:
_cbhe3:
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp _sbgXy
	.size _cbhe3, .-_cbhe3


==================== Asm code ====================
2018-03-16 16:06:13.688044237 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhe3_info:
	.quad	_cbhe3
	.quad	4
	.quad	21474836510
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.688763664 UTC

.section .text
.align 8
_cbhdL:
_cbhdL:
	leaq block_cbhdN_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbhdN
_cbhdU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbhdL, .-_cbhdL


==================== Asm code ====================
2018-03-16 16:06:13.689590249 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhdL_info:
	.quad	_cbhdL
	.quad	4
	.quad	21474836510
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.690263018 UTC

.section .text
.align 8
_cbhdN:
_cbhdN:
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp _sbgXy
	.size _cbhdN, .-_cbhdN


==================== Asm code ====================
2018-03-16 16:06:13.690891809 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhdN_info:
	.quad	_cbhdN
	.quad	4
	.quad	21474836510
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.691622299 UTC

.section .text
.align 8
_sbgXy:
_sbgXy:
	leaq block_cbhd0_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 40(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbhd0
_cbhd2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbgXy, .-_sbgXy


==================== Asm code ====================
2018-03-16 16:06:13.693077595 UTC

.section .text
.align 8
_cbhd0:
_cbhd0:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbhdg
_cbhdo:
	movq 24(%rbp),%r9
	movq 40(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,48(%rbp)
	addq $48,%rbp
	jmp GHC.IO.Handle.FD.fdToHandle5_entry
_cbhdg:
	leaq block_cbhd6_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.IO.Encoding.getLocaleEncoding1_closure@gotpcrel(%rip),%rbx
	testb $7,%bl
	jne _cbhd6
_cbhd7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbhd0, .-_cbhd0


==================== Asm code ====================
2018-03-16 16:06:13.693863015 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhd0_info:
	.quad	_cbhd0
	.quad	2054
	.quad	21474836510
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.694536431 UTC

.section .text
.align 8
_cbhd6:
_cbhd6:
	leaq block_cbhdb_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cbhd6, .-_cbhd6


==================== Asm code ====================
2018-03-16 16:06:13.695165229 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhd6_info:
	.quad	_cbhd6
	.quad	2054
	.quad	4294967326
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.695898331 UTC

.section .text
.align 8
_cbhdb:
_cbhdb:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbhdk
_cbhdj:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 24(%rbp),%r9
	movq 40(%rbp),%r8
	movq 32(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	leaq -6(%r12),%rax
	movq %rax,48(%rbp)
	addq $48,%rbp
	jmp GHC.IO.Handle.FD.fdToHandle5_entry
_cbhdk:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbhdb, .-_cbhdb


==================== Asm code ====================
2018-03-16 16:06:13.696606524 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhdb_info:
	.quad	_cbhdb
	.quad	2054
	.quad	4294967326
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.699115085 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle'_closure
.type GHC.IO.Handle.FD.fdToHandle'_closure, @object
GHC.IO.Handle.FD.fdToHandle'_closure:
	.quad	GHC.IO.Handle.FD.fdToHandle'_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.699716961 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.fdToHandle'_entry
.type GHC.IO.Handle.FD.fdToHandle'_entry, @object
GHC.IO.Handle.FD.fdToHandle'_entry:
_cbhfO:
	jmp GHC.IO.Handle.FD.fdToHandle'1_entry
	.size GHC.IO.Handle.FD.fdToHandle'_entry, .-GHC.IO.Handle.FD.fdToHandle'_entry


==================== Asm code ====================
2018-03-16 16:06:13.700298334 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle'_info
.type GHC.IO.Handle.FD.fdToHandle'_info, @object
GHC.IO.Handle.FD.fdToHandle'_info:
	.quad	GHC.IO.Handle.FD.fdToHandle'_entry
	.quad	0
	.quad	4294967310
	.quad	30064771098
	.quad	Sbh2A_srt+176


==================== Asm code ====================
2018-03-16 16:06:13.702515968 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.FD.fdToHandle4_bytes
.type GHC.IO.Handle.FD.fdToHandle4_bytes, @object
GHC.IO.Handle.FD.fdToHandle4_bytes:
	.asciz "<file descriptor: "


==================== Asm code ====================
2018-03-16 16:06:13.704206637 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.FD.fdToHandle3_bytes
.type GHC.IO.Handle.FD.fdToHandle3_bytes, @object
GHC.IO.Handle.FD.fdToHandle3_bytes:
	.asciz ">"


==================== Asm code ====================
2018-03-16 16:06:13.706843081 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle2_closure
.type GHC.IO.Handle.FD.fdToHandle2_closure, @object
GHC.IO.Handle.FD.fdToHandle2_closure:
	.quad	GHC.IO.Handle.FD.fdToHandle2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.707709037 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.fdToHandle2_entry
.type GHC.IO.Handle.FD.fdToHandle2_entry, @object
GHC.IO.Handle.FD.fdToHandle2_entry:
_cbhg3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhg4
_cbhg5:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbhg2
_cbhg1:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.FD.fdToHandle3_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbhg4:
	jmp *-16(%r13)
_cbhg2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.FD.fdToHandle2_entry, .-GHC.IO.Handle.FD.fdToHandle2_entry


==================== Asm code ====================
2018-03-16 16:06:13.708465838 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle2_info
.type GHC.IO.Handle.FD.fdToHandle2_info, @object
GHC.IO.Handle.FD.fdToHandle2_info:
	.quad	GHC.IO.Handle.FD.fdToHandle2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:13.715478958 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.$wfdToHandle_closure
.type GHC.IO.Handle.FD.$wfdToHandle_closure, @object
GHC.IO.Handle.FD.$wfdToHandle_closure:
	.quad	GHC.IO.Handle.FD.$wfdToHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.716275037 UTC

.section .text
.align 8
sat_sbgYq_entry:
_cbhgD:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhgJ
_cbhgK:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_cbhgA_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _cbhgA
_cbhgB:
	movq (%rbx),%rax
	jmp *(%rax)
_cbhgJ:
	jmp *-16(%r13)
	.size sat_sbgYq_entry, .-sat_sbgYq_entry


==================== Asm code ====================
2018-03-16 16:06:13.716903462 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbgYq_info:
	.quad	sat_sbgYq_entry
	.quad	1
	.quad	4294967312
	.quad	Sbh2A_srt+184


==================== Asm code ====================
2018-03-16 16:06:13.717647182 UTC

.section .text
.align 8
_cbhgA:
_cbhgA:
	leaq block_cbhgG_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _cbhgA, .-_cbhgA


==================== Asm code ====================
2018-03-16 16:06:13.718237258 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhgA_info:
	.quad	_cbhgA
	.quad	0
	.quad	4294967326
	.quad	Sbh2A_srt+184


==================== Asm code ====================
2018-03-16 16:06:13.718992639 UTC

.section .text
.align 8
_cbhgG:
_cbhgG:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbhgO
_cbhgN:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq GHC.IO.Handle.FD.fdToHandle2_closure(%rip),%rsi
	leaq -14(%r12),%r14
	addq $8,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_cbhgO:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _cbhgG, .-_cbhgG


==================== Asm code ====================
2018-03-16 16:06:13.719659342 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhgG_info:
	.quad	_cbhgG
	.quad	0
	.quad	4294967326
	.quad	Sbh2A_srt+184


==================== Asm code ====================
2018-03-16 16:06:13.720476764 UTC

.section .text
.align 8
sat_sbgYr_entry:
_cbhgQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhgR
_cbhgS:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbhgU
_cbhgT:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq sat_sbgYq_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	leaq GHC.IO.Handle.FD.fdToHandle4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_cbhgU:
	movq $24,904(%r13)
_cbhgR:
	jmp *-16(%r13)
	.size sat_sbgYr_entry, .-sat_sbgYr_entry


==================== Asm code ====================
2018-03-16 16:06:13.721232678 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbgYr_info:
	.quad	sat_sbgYr_entry
	.quad	1
	.quad	4294967312
	.quad	Sbh2A_srt+184


==================== Asm code ====================
2018-03-16 16:06:13.722014171 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.$wfdToHandle_entry
.type GHC.IO.Handle.FD.$wfdToHandle_entry, @object
GHC.IO.Handle.FD.$wfdToHandle_entry:
_cbhgV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhgW
_cbhgX:
	leaq block_cbhgi_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *System.Posix.Internals.$wfdGetMode_entry@gotpcrel(%rip)
_cbhgW:
	leaq GHC.IO.Handle.FD.$wfdToHandle_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.$wfdToHandle_entry, .-GHC.IO.Handle.FD.$wfdToHandle_entry


==================== Asm code ====================
2018-03-16 16:06:13.722725858 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.$wfdToHandle_info
.type GHC.IO.Handle.FD.$wfdToHandle_info, @object
GHC.IO.Handle.FD.$wfdToHandle_info:
	.quad	GHC.IO.Handle.FD.$wfdToHandle_entry
	.quad	0
	.quad	1000727379982
	.quad	8589934596
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.723549059 UTC

.section .text
.align 8
_cbhgi:
_cbhgi:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbhh0
_cbhgZ:
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_cbhgl_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r8
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq %rbx,%rsi
	leaq -7(%r12),%r14
	movq %rbx,8(%rbp)
	jmp *GHC.IO.FD.$wmkFD_entry@gotpcrel(%rip)
_cbhh0:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbhgi, .-_cbhgi


==================== Asm code ====================
2018-03-16 16:06:13.724275037 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhgi_info:
	.quad	_cbhgi
	.quad	65
	.quad	176093659166
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.725013925 UTC

.section .text
.align 8
_cbhgl:
_cbhgl:
	leaq block_cbhgn_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbhgn
_cbhgo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbhgl, .-_cbhgl


==================== Asm code ====================
2018-03-16 16:06:13.72566499 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhgl_info:
	.quad	_cbhgl
	.quad	1
	.quad	141733920798
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.726458851 UTC

.section .text
.align 8
_cbhgn:
_cbhgn:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbhh4
_cbhh3:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_sbgYr_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,(%r12)
	movq GHC.Types.False_closure@gotpcrel(%rip),%rcx
	leaq 1(%rcx),%r9
	movq 8(%rbp),%r8
	leaq -16(%r12),%rdi
	movq %rbx,%rsi
	movq %rax,%r14
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp GHC.IO.Handle.FD.fdToHandle5_entry
_cbhh4:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbhgn, .-_cbhgn


==================== Asm code ====================
2018-03-16 16:06:13.72718795 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhgn_info:
	.quad	_cbhgn
	.quad	1
	.quad	141733920798
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.731020193 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle1_closure
.type GHC.IO.Handle.FD.fdToHandle1_closure, @object
GHC.IO.Handle.FD.fdToHandle1_closure:
	.quad	GHC.IO.Handle.FD.fdToHandle1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.731839338 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.fdToHandle1_entry
.type GHC.IO.Handle.FD.fdToHandle1_entry, @object
GHC.IO.Handle.FD.fdToHandle1_entry:
_cbhhZ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhi0
_cbhi1:
	leaq block_cbhhW_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cbhhW
_cbhhX:
	movq (%rbx),%rax
	jmp *(%rax)
_cbhi0:
	leaq GHC.IO.Handle.FD.fdToHandle1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.fdToHandle1_entry, .-GHC.IO.Handle.FD.fdToHandle1_entry


==================== Asm code ====================
2018-03-16 16:06:13.732505454 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle1_info
.type GHC.IO.Handle.FD.fdToHandle1_info, @object
GHC.IO.Handle.FD.fdToHandle1_info:
	.quad	GHC.IO.Handle.FD.fdToHandle1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	Sbh2A_srt+200


==================== Asm code ====================
2018-03-16 16:06:13.733140968 UTC

.section .text
.align 8
_cbhhW:
_cbhhW:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.IO.Handle.FD.$wfdToHandle_entry
	.size _cbhhW, .-_cbhhW


==================== Asm code ====================
2018-03-16 16:06:13.7337862 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhhW_info:
	.quad	_cbhhW
	.quad	0
	.quad	4294967326
	.quad	Sbh2A_srt+200


==================== Asm code ====================
2018-03-16 16:06:13.735873789 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle_closure
.type GHC.IO.Handle.FD.fdToHandle_closure, @object
GHC.IO.Handle.FD.fdToHandle_closure:
	.quad	GHC.IO.Handle.FD.fdToHandle_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.736498098 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.fdToHandle_entry
.type GHC.IO.Handle.FD.fdToHandle_entry, @object
GHC.IO.Handle.FD.fdToHandle_entry:
_cbhik:
	jmp GHC.IO.Handle.FD.fdToHandle1_entry
	.size GHC.IO.Handle.FD.fdToHandle_entry, .-GHC.IO.Handle.FD.fdToHandle_entry


==================== Asm code ====================
2018-03-16 16:06:13.737091615 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.fdToHandle_info
.type GHC.IO.Handle.FD.fdToHandle_info, @object
GHC.IO.Handle.FD.fdToHandle_info:
	.quad	GHC.IO.Handle.FD.fdToHandle_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	Sbh2A_srt+208


==================== Asm code ====================
2018-03-16 16:06:13.745426984 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile5_closure
.type GHC.IO.Handle.FD.openBinaryFile5_closure, @object
GHC.IO.Handle.FD.openBinaryFile5_closure:
	.quad	GHC.IO.Handle.FD.openBinaryFile5_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.746212434 UTC

.section .text
.align 8
sat_sbgYT_entry:
_cbhiP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhiT
_cbhiU:
	leaq block_cbhiM_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 6(%rbx),%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbhiM
_cbhiN:
	movq (%rbx),%rax
	jmp *(%rax)
_cbhiT:
	jmp *-8(%r13)
	.size sat_sbgYT_entry, .-sat_sbgYT_entry


==================== Asm code ====================
2018-03-16 16:06:13.746889828 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbgYT_info:
	.quad	sat_sbgYT_entry
	.quad	1
	.quad	4294967305
	.quad	8589934597
	.quad	Sbh2A_srt+216


==================== Asm code ====================
2018-03-16 16:06:13.747580924 UTC

.section .text
.align 8
_cbhiM:
_cbhiM:
	leaq block_cbhiS_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	jmp *GHC.IO.FD.$w$cclose_entry@gotpcrel(%rip)
	.size _cbhiM, .-_cbhiM


==================== Asm code ====================
2018-03-16 16:06:13.748165313 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhiM_info:
	.quad	_cbhiM
	.quad	1
	.quad	4294967326
	.quad	Sbh2A_srt+216


==================== Asm code ====================
2018-03-16 16:06:13.748780268 UTC

.section .text
.align 8
_cbhiS:
_cbhiS:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _cbhiS, .-_cbhiS


==================== Asm code ====================
2018-03-16 16:06:13.749409922 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhiS_info:
	.quad	_cbhiS
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:13.750161032 UTC

.section .text
.align 8
sat_sbgYK_entry:
_cbhj4:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhj5
_cbhj6:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r9
	movq 15(%rbx),%r8
	movq 7(%rbx),%rdi
	movq 31(%rbx),%rsi
	movq 23(%rbx),%r14
	movq 39(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.IO.Handle.FD.fdToHandle5_entry
_cbhj5:
	jmp *-8(%r13)
	.size sat_sbgYK_entry, .-sat_sbgYK_entry


==================== Asm code ====================
2018-03-16 16:06:13.750794357 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbgYK_info:
	.quad	sat_sbgYK_entry
	.quad	5
	.quad	4294967304
	.quad	4294967299
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.751522221 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.openBinaryFile5_entry
.type GHC.IO.Handle.FD.openBinaryFile5_entry, @object
GHC.IO.Handle.FD.openBinaryFile5_entry:
_cbhj7:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhj8
_cbhj9:
	leaq block_cbhiv_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rdi,%rax
	movq %r8,%rdi
	movq %rsi,%rbx
	movq %r14,%rcx
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp *GHC.IO.FD.openFile1_entry@gotpcrel(%rip)
_cbhj8:
	leaq GHC.IO.Handle.FD.openBinaryFile5_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.openBinaryFile5_entry, .-GHC.IO.Handle.FD.openBinaryFile5_entry


==================== Asm code ====================
2018-03-16 16:06:13.752226647 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile5_info
.type GHC.IO.Handle.FD.openBinaryFile5_info, @object
GHC.IO.Handle.FD.openBinaryFile5_info:
	.quad	GHC.IO.Handle.FD.openBinaryFile5_entry
	.quad	0
	.quad	15414637625358
	.quad	21474836504
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.752908685 UTC

.section .text
.align 8
_cbhiv:
_cbhiv:
	leaq block_cbhix_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbhix
_cbhiy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbhiv, .-_cbhiv


==================== Asm code ====================
2018-03-16 16:06:13.753808365 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhiv_info:
	.quad	_cbhiv
	.quad	3
	.quad	2220498092062
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.754511692 UTC

.section .text
.align 8
_cbhix:
_cbhix:
	leaq block_cbhjb_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cbhjb
_cbhjg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbhix, .-_cbhix


==================== Asm code ====================
2018-03-16 16:06:13.755143163 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhix_info:
	.quad	_cbhix
	.quad	3
	.quad	2220498092062
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.755946923 UTC

.section .text
.align 8
_cbhjb:
_cbhjb:
	andl $7,%ebx
	cmpq $1,%rbx
	je _cbhjn
_cbhjB:
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%rbp)
	jmp _cbhiF
_cbhjn:
	leaq block_cbhjk_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.IO.Encoding.getLocaleEncoding1_closure@gotpcrel(%rip),%rbx
	testb $7,%bl
	jne _cbhjk
_cbhjo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbhjb, .-_cbhjb


==================== Asm code ====================
2018-03-16 16:06:13.756636505 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhjb_info:
	.quad	_cbhjb
	.quad	4
	.quad	2220498092062
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.757323816 UTC

.section .text
.align 8
_cbhjk:
_cbhjk:
	leaq block_cbhjs_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cbhjk, .-_cbhjk


==================== Asm code ====================
2018-03-16 16:06:13.757923465 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhjk_info:
	.quad	_cbhjk
	.quad	4
	.quad	2203318222878
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.758637 UTC

.section .text
.align 8
_cbhjs:
_cbhjs:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbhjx
_cbhjw:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -6(%r12),%rax
	movq %rax,(%rbp)
	jmp _cbhiF
_cbhjx:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbhjs, .-_cbhjs


==================== Asm code ====================
2018-03-16 16:06:13.759253182 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhjs_info:
	.quad	_cbhjs
	.quad	4
	.quad	2203318222878
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.760073046 UTC

.section .text
.align 8
_cbhiF:
_cbhiF:
	addq $64,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _cbhjf
_cbhje:
	leaq sat_sbgYT_info(%rip),%rbx
	movq %rbx,-56(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-48(%r12)
	leaq sat_sbgYK_info(%rip),%rcx
	movq %rcx,-40(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-32(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq %rbx,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -54(%r12),%r14
	leaq -39(%r12),%rbx
	addq $40,%rbp
	jmp *stg_catch#@gotpcrel(%rip)
_cbhjf:
	movq $64,904(%r13)
	leaq block_cbhiE_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbhiF, .-_cbhiF


==================== Asm code ====================
2018-03-16 16:06:13.760885349 UTC

.section .text
.align 8
_cbhiE:
_cbhiE:
	movq %rbx,(%rbp)
	jmp _cbhiF
	.size _cbhiE, .-_cbhiE


==================== Asm code ====================
2018-03-16 16:06:13.761475314 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhiE_info:
	.quad	_cbhiE
	.quad	4
	.quad	2203318222878
	.quad	Sbh2A_srt+144


==================== Asm code ====================
2018-03-16 16:06:13.766446141 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.openFile2_closure
.type GHC.IO.Handle.FD.openFile2_closure, @object
GHC.IO.Handle.FD.openFile2_closure:
	.quad	GHC.IO.Handle.FD.openFile2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.767347255 UTC

.section .text
.align 8
sat_sbgZe_entry:
_cbhl4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhl5
_cbhl6:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbhl8
_cbhl7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rdi
	movq %rdi,-64(%r12)
	movq %rax,-56(%r12)
	movq GHC.IO.Exception.IOError_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	leaq GHC.IO.Handle.FD.fdToHandle10_closure(%rip),%rax
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -62(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cbhl8:
	movq $72,904(%r13)
_cbhl5:
	jmp *-16(%r13)
	.size sat_sbgZe_entry, .-sat_sbgZe_entry


==================== Asm code ====================
2018-03-16 16:06:13.768140953 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbgZe_info:
	.quad	sat_sbgZe_entry
	.quad	5
	.quad	2305843013508661263
	.quad	Sbh2A_srt+8


==================== Asm code ====================
2018-03-16 16:06:13.768938381 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.openFile2_entry
.type GHC.IO.Handle.FD.openFile2_entry, @object
GHC.IO.Handle.FD.openFile2_entry:
_cbhl9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhla
_cbhlb:
	leaq block_cbhkT_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbhkT
_cbhkU:
	movq (%rbx),%rax
	jmp *(%rax)
_cbhla:
	leaq GHC.IO.Handle.FD.openFile2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.openFile2_entry, .-GHC.IO.Handle.FD.openFile2_entry


==================== Asm code ====================
2018-03-16 16:06:13.769690035 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.openFile2_info
.type GHC.IO.Handle.FD.openFile2_info, @object
GHC.IO.Handle.FD.openFile2_info:
	.quad	GHC.IO.Handle.FD.openFile2_entry
	.quad	0
	.quad	6917529031936049166
	.quad	12884901903
	.quad	Sbh2A_srt+8


==================== Asm code ====================
2018-03-16 16:06:13.771055822 UTC

.section .text
.align 8
_cbhkT:
_cbhkT:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbhle
_cbhld:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rbx
	leaq sat_sbgZe_info(%rip),%rsi
	movq %rsi,-48(%r12)
	movq 8(%rbp),%rsi
	movq %rsi,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -48(%r12),%rbx
	addq $16,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_cbhle:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbhkT, .-_cbhkT


==================== Asm code ====================
2018-03-16 16:06:13.771774703 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhkT_info:
	.quad	_cbhkT
	.quad	1
	.quad	2305843013508661278
	.quad	Sbh2A_srt+8


==================== Asm code ====================
2018-03-16 16:06:13.777677124 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.openFile1_closure
.type GHC.IO.Handle.FD.openFile1_closure, @object
GHC.IO.Handle.FD.openFile1_closure:
	.quad	GHC.IO.Handle.FD.openFile1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.778319557 UTC

.section .text
.align 8
sat_sbgZp_entry:
_cbhm2:
	movq 7(%rbx),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size sat_sbgZp_entry, .-sat_sbgZp_entry


==================== Asm code ====================
2018-03-16 16:06:13.778920656 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbgZp_info:
	.quad	sat_sbgZp_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:13.779651361 UTC

.section .text
.align 8
sat_sbgZr_entry:
_cbhm5:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhm6
_cbhm7:
	leaq block_cbhlK_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbhlK
_cbhlL:
	movq (%rbx),%rax
	jmp *(%rax)
_cbhm6:
	jmp *-8(%r13)
	.size sat_sbgZr_entry, .-sat_sbgZr_entry


==================== Asm code ====================
2018-03-16 16:06:13.780311669 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbgZr_info:
	.quad	sat_sbgZr_entry
	.quad	1
	.quad	216172786408751113
	.quad	4294967301
	.quad	Sbh2A_srt+56


==================== Asm code ====================
2018-03-16 16:06:13.780989092 UTC

.section .text
.align 8
_cbhlK:
_cbhlK:
	leaq block_cbhlP_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Exception.$p1Exception_entry@gotpcrel(%rip)
	.size _cbhlK, .-_cbhlK


==================== Asm code ====================
2018-03-16 16:06:13.781651504 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhlK_info:
	.quad	_cbhlK
	.quad	1
	.quad	216172786408751134
	.quad	Sbh2A_srt+56


==================== Asm code ====================
2018-03-16 16:06:13.782302798 UTC

.section .text
.align 8
_cbhlP:
_cbhlP:
	leaq block_cbhlT_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.IO.Exception.$fExceptionIOException4_closure@gotpcrel(%rip),%rsi
	movq %rbx,%r14
	jmp *Data.Typeable.Internal.sameTypeRep_entry@gotpcrel(%rip)
	.size _cbhlP, .-_cbhlP


==================== Asm code ====================
2018-03-16 16:06:13.782928097 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhlP_info:
	.quad	_cbhlP
	.quad	3
	.quad	216172786408751134
	.quad	Sbh2A_srt+56


==================== Asm code ====================
2018-03-16 16:06:13.783751637 UTC

.section .text
.align 8
_cbhlT:
_cbhlT:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbhmb
_cbhmi:
	movq 8(%rbp),%rsi
	movq 24(%rbp),%r14
	leaq GHC.IO.Handle.FD.openFile2_closure+3(%rip),%rbx
	addq $32,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cbhme:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbhmb:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbhme
_cbhmd:
	leaq sat_sbgZp_info(%rip),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbhlT, .-_cbhlT


==================== Asm code ====================
2018-03-16 16:06:13.784446909 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhlT_info:
	.quad	_cbhlT
	.quad	3
	.quad	4294967326
	.quad	Sbh2A_srt+248


==================== Asm code ====================
2018-03-16 16:06:13.785139771 UTC

.section .text
.align 8
sat_sbgZi_entry:
_cbhmq:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r8
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.IO.Handle.FD.openBinaryFile5_entry
	.size sat_sbgZi_entry, .-sat_sbgZi_entry


==================== Asm code ====================
2018-03-16 16:06:13.78581024 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbgZi_info:
	.quad	sat_sbgZi_entry
	.quad	2
	.quad	4294967307
	.quad	4294967299
	.quad	Sbh2A_srt+232


==================== Asm code ====================
2018-03-16 16:06:13.786516083 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.openFile1_entry
.type GHC.IO.Handle.FD.openFile1_entry, @object
GHC.IO.Handle.FD.openFile1_entry:
_cbhmt:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbhmx
_cbhmw:
	leaq sat_sbgZr_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	leaq sat_sbgZi_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -31(%r12),%r14
	leaq -15(%r12),%rbx
	jmp *stg_catch#@gotpcrel(%rip)
_cbhmx:
	movq $40,904(%r13)
	leaq GHC.IO.Handle.FD.openFile1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.openFile1_entry, .-GHC.IO.Handle.FD.openFile1_entry


==================== Asm code ====================
2018-03-16 16:06:13.787201783 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.openFile1_info
.type GHC.IO.Handle.FD.openFile1_info, @object
GHC.IO.Handle.FD.openFile1_info:
	.quad	GHC.IO.Handle.FD.openFile1_entry
	.quad	0
	.quad	522417561069944846
	.quad	12884901903
	.quad	Sbh2A_srt+56


==================== Asm code ====================
2018-03-16 16:06:13.789771992 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.openFile_closure
.type GHC.IO.Handle.FD.openFile_closure, @object
GHC.IO.Handle.FD.openFile_closure:
	.quad	GHC.IO.Handle.FD.openFile_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.790370238 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.openFile_entry
.type GHC.IO.Handle.FD.openFile_entry, @object
GHC.IO.Handle.FD.openFile_entry:
_cbhnd:
	jmp GHC.IO.Handle.FD.openFile1_entry
	.size GHC.IO.Handle.FD.openFile_entry, .-GHC.IO.Handle.FD.openFile_entry


==================== Asm code ====================
2018-03-16 16:06:13.79097766 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.openFile_info
.type GHC.IO.Handle.FD.openFile_info, @object
GHC.IO.Handle.FD.openFile_info:
	.quad	GHC.IO.Handle.FD.openFile_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	Sbh2A_srt+264


==================== Asm code ====================
2018-03-16 16:06:13.796552299 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.openFileBlocking1_closure
.type GHC.IO.Handle.FD.openFileBlocking1_closure, @object
GHC.IO.Handle.FD.openFileBlocking1_closure:
	.quad	GHC.IO.Handle.FD.openFileBlocking1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.797255585 UTC

.section .text
.align 8
sat_sbgZC_entry:
_cbhnL:
	movq 7(%rbx),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size sat_sbgZC_entry, .-sat_sbgZC_entry


==================== Asm code ====================
2018-03-16 16:06:13.797822864 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbgZC_info:
	.quad	sat_sbgZC_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:13.798614422 UTC

.section .text
.align 8
sat_sbgZE_entry:
_cbhnO:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhnP
_cbhnQ:
	leaq block_cbhnt_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbhnt
_cbhnu:
	movq (%rbx),%rax
	jmp *(%rax)
_cbhnP:
	jmp *-8(%r13)
	.size sat_sbgZE_entry, .-sat_sbgZE_entry


==================== Asm code ====================
2018-03-16 16:06:13.799262473 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbgZE_info:
	.quad	sat_sbgZE_entry
	.quad	1
	.quad	216172786408751113
	.quad	4294967301
	.quad	Sbh2A_srt+56


==================== Asm code ====================
2018-03-16 16:06:13.799967532 UTC

.section .text
.align 8
_cbhnt:
_cbhnt:
	leaq block_cbhny_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Exception.$p1Exception_entry@gotpcrel(%rip)
	.size _cbhnt, .-_cbhnt


==================== Asm code ====================
2018-03-16 16:06:13.800574697 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhnt_info:
	.quad	_cbhnt
	.quad	1
	.quad	216172786408751134
	.quad	Sbh2A_srt+56


==================== Asm code ====================
2018-03-16 16:06:13.801230192 UTC

.section .text
.align 8
_cbhny:
_cbhny:
	leaq block_cbhnC_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.IO.Exception.$fExceptionIOException4_closure@gotpcrel(%rip),%rsi
	movq %rbx,%r14
	jmp *Data.Typeable.Internal.sameTypeRep_entry@gotpcrel(%rip)
	.size _cbhny, .-_cbhny


==================== Asm code ====================
2018-03-16 16:06:13.802279155 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhny_info:
	.quad	_cbhny
	.quad	3
	.quad	216172786408751134
	.quad	Sbh2A_srt+56


==================== Asm code ====================
2018-03-16 16:06:13.803087411 UTC

.section .text
.align 8
_cbhnC:
_cbhnC:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbhnU
_cbho1:
	movq 8(%rbp),%rsi
	movq 24(%rbp),%r14
	leaq GHC.IO.Handle.FD.openFile2_closure+3(%rip),%rbx
	addq $32,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cbhnX:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbhnU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbhnX
_cbhnW:
	leaq sat_sbgZC_info(%rip),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbhnC, .-_cbhnC


==================== Asm code ====================
2018-03-16 16:06:13.803803024 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhnC_info:
	.quad	_cbhnC
	.quad	3
	.quad	4294967326
	.quad	Sbh2A_srt+248


==================== Asm code ====================
2018-03-16 16:06:13.804488289 UTC

.section .text
.align 8
sat_sbgZv_entry:
_cbho9:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r8
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.IO.Handle.FD.openBinaryFile5_entry
	.size sat_sbgZv_entry, .-sat_sbgZv_entry


==================== Asm code ====================
2018-03-16 16:06:13.805122578 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbgZv_info:
	.quad	sat_sbgZv_entry
	.quad	2
	.quad	4294967307
	.quad	4294967299
	.quad	Sbh2A_srt+232


==================== Asm code ====================
2018-03-16 16:06:13.805941054 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.openFileBlocking1_entry
.type GHC.IO.Handle.FD.openFileBlocking1_entry, @object
GHC.IO.Handle.FD.openFileBlocking1_entry:
_cbhoc:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbhog
_cbhof:
	leaq sat_sbgZE_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	leaq sat_sbgZv_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -31(%r12),%r14
	leaq -15(%r12),%rbx
	jmp *stg_catch#@gotpcrel(%rip)
_cbhog:
	movq $40,904(%r13)
	leaq GHC.IO.Handle.FD.openFileBlocking1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.openFileBlocking1_entry, .-GHC.IO.Handle.FD.openFileBlocking1_entry


==================== Asm code ====================
2018-03-16 16:06:13.806630662 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.openFileBlocking1_info
.type GHC.IO.Handle.FD.openFileBlocking1_info, @object
GHC.IO.Handle.FD.openFileBlocking1_info:
	.quad	GHC.IO.Handle.FD.openFileBlocking1_entry
	.quad	0
	.quad	810647937221656590
	.quad	12884901903
	.quad	Sbh2A_srt+56


==================== Asm code ====================
2018-03-16 16:06:13.809668036 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.openFileBlocking_closure
.type GHC.IO.Handle.FD.openFileBlocking_closure, @object
GHC.IO.Handle.FD.openFileBlocking_closure:
	.quad	GHC.IO.Handle.FD.openFileBlocking_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.810275184 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.openFileBlocking_entry
.type GHC.IO.Handle.FD.openFileBlocking_entry, @object
GHC.IO.Handle.FD.openFileBlocking_entry:
_cbhoW:
	jmp GHC.IO.Handle.FD.openFileBlocking1_entry
	.size GHC.IO.Handle.FD.openFileBlocking_entry, .-GHC.IO.Handle.FD.openFileBlocking_entry


==================== Asm code ====================
2018-03-16 16:06:13.810884524 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.openFileBlocking_info
.type GHC.IO.Handle.FD.openFileBlocking_info, @object
GHC.IO.Handle.FD.openFileBlocking_info:
	.quad	GHC.IO.Handle.FD.openFileBlocking_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	Sbh2A_srt+272


==================== Asm code ====================
2018-03-16 16:06:13.812595189 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile4_bytes
.type GHC.IO.Handle.FD.openBinaryFile4_bytes, @object
GHC.IO.Handle.FD.openBinaryFile4_bytes:
	.asciz "openBinaryFile"


==================== Asm code ====================
2018-03-16 16:06:13.815136719 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile3_closure
.type GHC.IO.Handle.FD.openBinaryFile3_closure, @object
GHC.IO.Handle.FD.openBinaryFile3_closure:
	.quad	GHC.IO.Handle.FD.openBinaryFile3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.815994478 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.openBinaryFile3_entry
.type GHC.IO.Handle.FD.openBinaryFile3_entry, @object
GHC.IO.Handle.FD.openBinaryFile3_entry:
_cbhpa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhpb
_cbhpc:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbhp9
_cbhp8:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq GHC.IO.Handle.FD.openBinaryFile4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbhpb:
	jmp *-16(%r13)
_cbhp9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.FD.openBinaryFile3_entry, .-GHC.IO.Handle.FD.openBinaryFile3_entry


==================== Asm code ====================
2018-03-16 16:06:13.816689791 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile3_info
.type GHC.IO.Handle.FD.openBinaryFile3_info, @object
GHC.IO.Handle.FD.openBinaryFile3_info:
	.quad	GHC.IO.Handle.FD.openBinaryFile3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:13.821002681 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile2_closure
.type GHC.IO.Handle.FD.openBinaryFile2_closure, @object
GHC.IO.Handle.FD.openBinaryFile2_closure:
	.quad	GHC.IO.Handle.FD.openBinaryFile2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.821915734 UTC

.section .text
.align 8
sat_sbgZR_entry:
_cbhpA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhpB
_cbhpC:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _cbhpE
_cbhpD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rdi
	movq %rdi,-64(%r12)
	movq %rax,-56(%r12)
	movq GHC.IO.Exception.IOError_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq %rcx,-40(%r12)
	movq %rdx,-32(%r12)
	leaq GHC.IO.Handle.FD.openBinaryFile3_closure(%rip),%rax
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -62(%r12),%rax
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_cbhpE:
	movq $72,904(%r13)
_cbhpB:
	jmp *-16(%r13)
	.size sat_sbgZR_entry, .-sat_sbgZR_entry


==================== Asm code ====================
2018-03-16 16:06:13.822733709 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbgZR_info:
	.quad	sat_sbgZR_entry
	.quad	5
	.quad	12884901903
	.quad	Sbh2A_srt+280


==================== Asm code ====================
2018-03-16 16:06:13.823498578 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.openBinaryFile2_entry
.type GHC.IO.Handle.FD.openBinaryFile2_entry, @object
GHC.IO.Handle.FD.openBinaryFile2_entry:
_cbhpF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhpG
_cbhpH:
	leaq block_cbhpp_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbhpp
_cbhpq:
	movq (%rbx),%rax
	jmp *(%rax)
_cbhpG:
	leaq GHC.IO.Handle.FD.openBinaryFile2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.openBinaryFile2_entry, .-GHC.IO.Handle.FD.openBinaryFile2_entry


==================== Asm code ====================
2018-03-16 16:06:13.824208994 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile2_info
.type GHC.IO.Handle.FD.openBinaryFile2_info, @object
GHC.IO.Handle.FD.openBinaryFile2_info:
	.quad	GHC.IO.Handle.FD.openBinaryFile2_entry
	.quad	0
	.quad	30064771086
	.quad	12884901903
	.quad	Sbh2A_srt+280


==================== Asm code ====================
2018-03-16 16:06:13.824979034 UTC

.section .text
.align 8
_cbhpp:
_cbhpp:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _cbhpK
_cbhpJ:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 31(%rbx),%rdx
	movq 39(%rbx),%rbx
	leaq sat_sbgZR_info(%rip),%rsi
	movq %rsi,-48(%r12)
	movq 8(%rbp),%rsi
	movq %rsi,-32(%r12)
	movq %rax,-24(%r12)
	movq %rcx,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rbx,(%r12)
	leaq -48(%r12),%rbx
	addq $16,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_cbhpK:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbhpp, .-_cbhpp


==================== Asm code ====================
2018-03-16 16:06:13.82571103 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhpp_info:
	.quad	_cbhpp
	.quad	1
	.quad	12884901918
	.quad	Sbh2A_srt+280


==================== Asm code ====================
2018-03-16 16:06:13.831258102 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile1_closure
.type GHC.IO.Handle.FD.openBinaryFile1_closure, @object
GHC.IO.Handle.FD.openBinaryFile1_closure:
	.quad	GHC.IO.Handle.FD.openBinaryFile1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.831917658 UTC

.section .text
.align 8
sat_sbh02_entry:
_cbhqy:
	movq 7(%rbx),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size sat_sbh02_entry, .-sat_sbh02_entry


==================== Asm code ====================
2018-03-16 16:06:13.832490987 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbh02_info:
	.quad	sat_sbh02_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:06:13.83325599 UTC

.section .text
.align 8
sat_sbh04_entry:
_cbhqB:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhqC
_cbhqD:
	leaq block_cbhqg_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbhqg
_cbhqh:
	movq (%rbx),%rax
	jmp *(%rax)
_cbhqC:
	jmp *-8(%r13)
	.size sat_sbh04_entry, .-sat_sbh04_entry


==================== Asm code ====================
2018-03-16 16:06:13.833897564 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbh04_info:
	.quad	sat_sbh04_entry
	.quad	1
	.quad	4755801210798211081
	.quad	4294967301
	.quad	Sbh2A_srt+56


==================== Asm code ====================
2018-03-16 16:06:13.834575383 UTC

.section .text
.align 8
_cbhqg:
_cbhqg:
	leaq block_cbhql_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Exception.$p1Exception_entry@gotpcrel(%rip)
	.size _cbhqg, .-_cbhqg


==================== Asm code ====================
2018-03-16 16:06:13.835172503 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhqg_info:
	.quad	_cbhqg
	.quad	1
	.quad	4755801210798211102
	.quad	Sbh2A_srt+56


==================== Asm code ====================
2018-03-16 16:06:13.835851189 UTC

.section .text
.align 8
_cbhql:
_cbhql:
	leaq block_cbhqp_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.IO.Exception.$fExceptionIOException4_closure@gotpcrel(%rip),%rsi
	movq %rbx,%r14
	jmp *Data.Typeable.Internal.sameTypeRep_entry@gotpcrel(%rip)
	.size _cbhql, .-_cbhql


==================== Asm code ====================
2018-03-16 16:06:13.836478657 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhql_info:
	.quad	_cbhql
	.quad	3
	.quad	4755801210798211102
	.quad	Sbh2A_srt+56


==================== Asm code ====================
2018-03-16 16:06:13.83728624 UTC

.section .text
.align 8
_cbhqp:
_cbhqp:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbhqH
_cbhqO:
	movq 8(%rbp),%rsi
	movq 24(%rbp),%r14
	leaq GHC.IO.Handle.FD.openBinaryFile2_closure+3(%rip),%rbx
	addq $32,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_cbhqK:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbhqH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbhqK
_cbhqJ:
	leaq sat_sbh02_info(%rip),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbhqp, .-_cbhqp


==================== Asm code ====================
2018-03-16 16:06:13.837970293 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhqp_info:
	.quad	_cbhqp
	.quad	3
	.quad	4294967326
	.quad	Sbh2A_srt+296


==================== Asm code ====================
2018-03-16 16:06:13.838657718 UTC

.section .text
.align 8
sat_sbgZV_entry:
_cbhqW:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r8
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp GHC.IO.Handle.FD.openBinaryFile5_entry
	.size sat_sbgZV_entry, .-sat_sbgZV_entry


==================== Asm code ====================
2018-03-16 16:06:13.83925171 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbgZV_info:
	.quad	sat_sbgZV_entry
	.quad	2
	.quad	4294967307
	.quad	4294967299
	.quad	Sbh2A_srt+232


==================== Asm code ====================
2018-03-16 16:06:13.840044345 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.openBinaryFile1_entry
.type GHC.IO.Handle.FD.openBinaryFile1_entry, @object
GHC.IO.Handle.FD.openBinaryFile1_entry:
_cbhqZ:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cbhr3
_cbhr2:
	leaq sat_sbh04_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	leaq sat_sbgZV_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -31(%r12),%r14
	leaq -15(%r12),%rbx
	jmp *stg_catch#@gotpcrel(%rip)
_cbhr3:
	movq $40,904(%r13)
	leaq GHC.IO.Handle.FD.openBinaryFile1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.IO.Handle.FD.openBinaryFile1_entry, .-GHC.IO.Handle.FD.openBinaryFile1_entry


==================== Asm code ====================
2018-03-16 16:06:13.84075446 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile1_info
.type GHC.IO.Handle.FD.openBinaryFile1_info, @object
GHC.IO.Handle.FD.openBinaryFile1_info:
	.quad	GHC.IO.Handle.FD.openBinaryFile1_entry
	.quad	0
	.quad	-4449556427547082738
	.quad	12884901903
	.quad	Sbh2A_srt+56


==================== Asm code ====================
2018-03-16 16:06:13.843076783 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile_closure
.type GHC.IO.Handle.FD.openBinaryFile_closure, @object
GHC.IO.Handle.FD.openBinaryFile_closure:
	.quad	GHC.IO.Handle.FD.openBinaryFile_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.843726875 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.openBinaryFile_entry
.type GHC.IO.Handle.FD.openBinaryFile_entry, @object
GHC.IO.Handle.FD.openBinaryFile_entry:
_cbhrJ:
	jmp GHC.IO.Handle.FD.openBinaryFile1_entry
	.size GHC.IO.Handle.FD.openBinaryFile_entry, .-GHC.IO.Handle.FD.openBinaryFile_entry


==================== Asm code ====================
2018-03-16 16:06:13.844275158 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.openBinaryFile_info
.type GHC.IO.Handle.FD.openBinaryFile_info, @object
GHC.IO.Handle.FD.openBinaryFile_info:
	.quad	GHC.IO.Handle.FD.openBinaryFile_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	Sbh2A_srt+304


==================== Asm code ====================
2018-03-16 16:06:13.86019339 UTC

.section .data
.align 8
.align 1
$wstdHandleFinalizer_rbfCA_closure:
	.quad	$wstdHandleFinalizer_rbfCA_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.860988811 UTC

.section .text
.align 8
sat_sbh0H_entry:
_cbhsu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhsv
_cbhsw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_finalizedHandle_entry@gotpcrel(%rip)
_cbhsv:
	jmp *-16(%r13)
	.size sat_sbh0H_entry, .-sat_sbh0H_entry


==================== Asm code ====================
2018-03-16 16:06:13.86166455 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbh0H_info:
	.quad	sat_sbh0H_entry
	.quad	1
	.quad	4294967312
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.86235538 UTC

.section .text
.align 8
sat_sbh0T_entry:
_cbhsK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhsL
_cbhsM:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_finalizedHandle_entry@gotpcrel(%rip)
_cbhsL:
	jmp *-16(%r13)
	.size sat_sbh0T_entry, .-sat_sbh0T_entry


==================== Asm code ====================
2018-03-16 16:06:13.862949725 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbh0T_info:
	.quad	sat_sbh0T_entry
	.quad	1
	.quad	4294967312
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.863633164 UTC

.section .text
.align 8
sat_sbh16_entry:
_cbht5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbht6
_cbht7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_finalizedHandle_entry@gotpcrel(%rip)
_cbht6:
	jmp *-16(%r13)
	.size sat_sbh16_entry, .-sat_sbh16_entry


==================== Asm code ====================
2018-03-16 16:06:13.864196302 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbh16_info:
	.quad	sat_sbh16_entry
	.quad	1
	.quad	4294967312
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.864913241 UTC

.section .text
.align 8
sat_sbh1i_entry:
_cbhtl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhtm
_cbhtn:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_finalizedHandle_entry@gotpcrel(%rip)
_cbhtm:
	jmp *-16(%r13)
	.size sat_sbh1i_entry, .-sat_sbh1i_entry


==================== Asm code ====================
2018-03-16 16:06:13.865618249 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbh1i_info:
	.quad	sat_sbh1i_entry
	.quad	1
	.quad	4294967312
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.866308069 UTC

.section .text
.align 8
sat_sbh1k_entry:
_cbhtu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhtv
_cbhtw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Handle.Internals.ioe_finalizedHandle_entry@gotpcrel(%rip)
_cbhtv:
	jmp *-16(%r13)
	.size sat_sbh1k_entry, .-sat_sbh1k_entry


==================== Asm code ====================
2018-03-16 16:06:13.866938174 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sbh1k_info:
	.quad	sat_sbh1k_entry
	.quad	1
	.quad	4294967312
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.867682897 UTC

.section .text
.align 8
$wstdHandleFinalizer_rbfCA_entry:
_cbhtx:
	leaq -88(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhty
_cbhtz:
	leaq block_cbhrU_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp *stg_takeMVar#@gotpcrel(%rip)
_cbhty:
	leaq $wstdHandleFinalizer_rbfCA_closure(%rip),%rbx
	jmp *-8(%r13)
	.size $wstdHandleFinalizer_rbfCA_entry, .-$wstdHandleFinalizer_rbfCA_entry


==================== Asm code ====================
2018-03-16 16:06:13.86836031 UTC

.section .data.rel.ro
.align 8
.align 1
$wstdHandleFinalizer_rbfCA_info:
	.quad	$wstdHandleFinalizer_rbfCA_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.868998288 UTC

.section .text
.align 8
_cbhrU:
_cbhrU:
	leaq block_cbhrW_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cbhrW
_cbhrX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbhrU, .-_cbhrU


==================== Asm code ====================
2018-03-16 16:06:13.869629793 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhrU_info:
	.quad	_cbhrU
	.quad	2
	.quad	4294967326
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.870405425 UTC

.section .text
.align 8
_cbhrW:
_cbhrW:
	leaq block_cbhs1_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq 15(%rbx),%rax
	movq 31(%rbx),%rcx
	movq 39(%rbx),%rdx
	movq 47(%rbx),%rsi
	movq 87(%rbx),%rdi
	movq 95(%rbx),%rbx
	movq %rbx,%r8
	movq 8(%rsi),%rbx
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	movq %rax,(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _cbhs1
_cbhs2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbhrW, .-_cbhrW


==================== Asm code ====================
2018-03-16 16:06:13.871048177 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhrW_info:
	.quad	_cbhrW
	.quad	2
	.quad	4294967326
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.871747359 UTC

.section .text
.align 8
_cbhs1:
_cbhs1:
	leaq block_cbhtC_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _cbhtC
_cbhuu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbhs1, .-_cbhs1


==================== Asm code ====================
2018-03-16 16:06:13.872394814 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhs1_info:
	.quad	_cbhs1
	.quad	8
	.quad	4294967326
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.873183691 UTC

.section .text
.align 8
_cbhtC:
_cbhtC:
	andl $7,%ebx
	cmpq $1,%rbx
	je _ubhv2
_cbhuF:
	movq 24(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_cbhuD_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _cbhuD
_cbhuG:
	movq (%rbx),%rax
	jmp *(%rax)
_ubhv2:
	addq $16,%rbp
	jmp _sbh0C
	.size _cbhtC, .-_cbhtC


==================== Asm code ====================
2018-03-16 16:06:13.874809631 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhtC_info:
	.quad	_cbhtC
	.quad	8
	.quad	4294967326
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.875532548 UTC

.section .text
.align 8
_cbhuD:
_cbhuD:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _ubhv3
_cbhuQ:
	movq 8(%rbp),%rax
	leaq block_cbhuO_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 48(%rbp),%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.IO.BufferedIO.flushWriteBuffer_entry@gotpcrel(%rip)
_ubhv3:
	addq $16,%rbp
	jmp _sbh0C
	.size _cbhuD, .-_cbhuD


==================== Asm code ====================
2018-03-16 16:06:13.876209054 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhuD_info:
	.quad	_cbhuD
	.quad	8
	.quad	4294967326
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.876913786 UTC

.section .text
.align 8
_cbhuO:
_cbhuO:
	movq 16(%rbp),%rax
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $8,%rbp
	jmp _sbh0C
	.size _cbhuO, .-_cbhuO


==================== Asm code ====================
2018-03-16 16:06:13.877573422 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhuO_info:
	.quad	_cbhuO
	.quad	1031
	.quad	4294967326
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.878242949 UTC

.section .text
.align 8
_sbh0C:
_sbh0C:
	leaq block_cbhsb_info(%rip),%rax
	movq %rax,8(%rbp)
	movq (%rbp),%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cbhsb
_cbhsc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _sbh0C, .-_sbh0C


==================== Asm code ====================
2018-03-16 16:06:13.879146085 UTC

.section .text
.align 8
_cbhsb:
_cbhsb:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbhuo
_cbhtH:
	leaq block_cbhsg_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _cbhsg
_cbhsh:
	movq (%rbx),%rax
	jmp *(%rax)
_cbhur:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbhuo:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbhur
_cbhuq:
	leaq sat_sbh1k_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq 40(%rbp),%rax
	leaq block_cbhun_info(%rip),%rbx
	movq %rbx,40(%rbp)
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $40,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbhsb, .-_cbhsb


==================== Asm code ====================
2018-03-16 16:06:13.87988007 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhsb_info:
	.quad	_cbhsb
	.quad	261
	.quad	4294967326
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.880685234 UTC

.section .text
.align 8
_cbhsg:
_cbhsg:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbhtK
_cbhu3:
	leaq block_cbhsP_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbhsP
_cbhsQ:
	movq (%rbx),%rax
	jmp *(%rax)
_cbhtK:
	leaq block_cbhsl_info(%rip),%rax
	movq %rax,24(%rbp)
	movq 8(%rbp),%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _cbhsl
_cbhsm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbhsg, .-_cbhsg


==================== Asm code ====================
2018-03-16 16:06:13.881390231 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhsg_info:
	.quad	_cbhsg
	.quad	389
	.quad	4294967326
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.882247885 UTC

.section .text
.align 8
_cbhsl:
_cbhsl:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbhtN
_cbhtV:
	leaq block_cbhsz_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbhsz
_cbhsA:
	movq (%rbx),%rax
	jmp *(%rax)
_cbhtQ:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbhtN:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbhtQ
_cbhtP:
	leaq sat_sbh0H_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq 16(%rbp),%rax
	leaq block_cbhun_info(%rip),%rbx
	movq %rbx,16(%rbp)
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $16,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbhsl, .-_cbhsl


==================== Asm code ====================
2018-03-16 16:06:13.882995189 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhsl_info:
	.quad	_cbhsl
	.quad	2
	.quad	4294967326
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.883635075 UTC

.section .text
.align 8
_cbhsz:
_cbhsz:
	leaq block_cbhsE_info(%rip),%rax
	movq %rax,(%rbp)
	movq 23(%rbx),%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cbhsz, .-_cbhsz


==================== Asm code ====================
2018-03-16 16:06:13.884213399 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhsz_info:
	.quad	_cbhsz
	.quad	2
	.quad	4294967326
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.884954052 UTC

.section .text
.align 8
_cbhsE:
_cbhsE:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbhtZ
_cbhtY:
	leaq sat_sbh0T_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq 16(%rbp),%rax
	leaq block_cbhun_info(%rip),%rbx
	movq %rbx,16(%rbp)
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $16,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
_cbhtZ:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbhsE, .-_cbhsE


==================== Asm code ====================
2018-03-16 16:06:13.886068012 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhsE_info:
	.quad	_cbhsE
	.quad	2
	.quad	4294967326
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.88677699 UTC

.section .text
.align 8
_cbhsP:
_cbhsP:
	leaq block_cbhsU_info(%rip),%rax
	movq %rax,(%rbp)
	movq 23(%rbx),%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cbhsP, .-_cbhsP


==================== Asm code ====================
2018-03-16 16:06:13.88739752 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhsP_info:
	.quad	_cbhsP
	.quad	389
	.quad	4294967326
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.888079369 UTC

.section .text
.align 8
_cbhsU:
_cbhsU:
	leaq block_cbhsW_info(%rip),%rax
	movq %rax,24(%rbp)
	movq 8(%rbp),%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _cbhsW
_cbhsX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbhsU, .-_cbhsU


==================== Asm code ====================
2018-03-16 16:06:13.888732736 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhsU_info:
	.quad	_cbhsU
	.quad	389
	.quad	4294967326
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.889589102 UTC

.section .text
.align 8
_cbhsW:
_cbhsW:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cbhu8
_cbhug:
	leaq block_cbhta_info(%rip),%rax
	movq %rax,(%rbp)
	movq 6(%rbx),%rbx
	testb $7,%bl
	jne _cbhta
_cbhtb:
	movq (%rbx),%rax
	jmp *(%rax)
_cbhub:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_cbhu8:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbhub
_cbhua:
	leaq sat_sbh16_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq 16(%rbp),%rax
	leaq block_cbhun_info(%rip),%rbx
	movq %rbx,16(%rbp)
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $16,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cbhsW, .-_cbhsW


==================== Asm code ====================
2018-03-16 16:06:13.89095206 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhsW_info:
	.quad	_cbhsW
	.quad	2
	.quad	4294967326
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.891568569 UTC

.section .text
.align 8
_cbhta:
_cbhta:
	leaq block_cbhtf_info(%rip),%rax
	movq %rax,(%rbp)
	movq 23(%rbx),%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cbhta, .-_cbhta


==================== Asm code ====================
2018-03-16 16:06:13.892161507 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhta_info:
	.quad	_cbhta
	.quad	2
	.quad	4294967326
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.89288016 UTC

.section .text
.align 8
_cbhtf:
_cbhtf:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cbhuk
_cbhuj:
	leaq sat_sbh1i_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq 16(%rbp),%rax
	leaq block_cbhun_info(%rip),%rbx
	movq %rbx,16(%rbp)
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $16,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
_cbhuk:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbhtf, .-_cbhtf


==================== Asm code ====================
2018-03-16 16:06:13.893547379 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhtf_info:
	.quad	_cbhtf
	.quad	2
	.quad	4294967326
	.quad	Sbh2A_srt+312


==================== Asm code ====================
2018-03-16 16:06:13.894193848 UTC

.section .text
.align 8
_cbhun:
_cbhun:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cbhun, .-_cbhun


==================== Asm code ====================
2018-03-16 16:06:13.89478193 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhun_info:
	.quad	_cbhun
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:13.898109866 UTC

.section .data
.align 8
.align 1
stdHandleFinalizer_rbfCB_closure:
	.quad	stdHandleFinalizer_rbfCB_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.898882888 UTC

.section .text
.align 8
stdHandleFinalizer_rbfCB_entry:
_cbhxH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhxI
_cbhxJ:
	leaq block_cbhxE_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cbhxE
_cbhxF:
	movq (%rbx),%rax
	jmp *(%rax)
_cbhxI:
	leaq stdHandleFinalizer_rbfCB_closure(%rip),%rbx
	jmp *-8(%r13)
	.size stdHandleFinalizer_rbfCB_entry, .-stdHandleFinalizer_rbfCB_entry


==================== Asm code ====================
2018-03-16 16:06:13.899567513 UTC

.section .data.rel.ro
.align 8
.align 1
stdHandleFinalizer_rbfCB_info:
	.quad	stdHandleFinalizer_rbfCB_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	Sbh2A_srt+320


==================== Asm code ====================
2018-03-16 16:06:13.900194774 UTC

.section .text
.align 8
_cbhxE:
_cbhxE:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp $wstdHandleFinalizer_rbfCA_entry
	.size _cbhxE, .-_cbhxE


==================== Asm code ====================
2018-03-16 16:06:13.900740595 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhxE_info:
	.quad	_cbhxE
	.quad	1
	.quad	4294967326
	.quad	Sbh2A_srt+320


==================== Asm code ====================
2018-03-16 16:06:13.902436854 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl6_rbfCC_bytes:
	.asciz "<stderr>"


==================== Asm code ====================
2018-03-16 16:06:13.904807392 UTC

.section .data
.align 8
.align 1
lvl7_rbfCD_closure:
	.quad	lvl7_rbfCD_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.905615063 UTC

.section .text
.align 8
lvl7_rbfCD_entry:
_cbhy5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhy6
_cbhy7:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbhy4
_cbhy3:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl6_rbfCC_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbhy6:
	jmp *-16(%r13)
_cbhy4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl7_rbfCD_entry, .-lvl7_rbfCD_entry


==================== Asm code ====================
2018-03-16 16:06:13.906290138 UTC

.section .data.rel.ro
.align 8
.align 1
lvl7_rbfCD_info:
	.quad	lvl7_rbfCD_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:13.907974748 UTC

.section .data
.align 8
.align 1
lvl8_rbfCE_closure:
	.quad	GHC.Base.Just_con_info
	.quad	stdHandleFinalizer_rbfCB_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.912379622 UTC

.section .data
.align 8
.align 1
lvl9_rbfCF_closure:
	.quad	lvl9_rbfCF_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.912967038 UTC

.section .data.rel.ro
.align 8
.align 1
ubhyE_srtd:
	.quad	Sbh2A_srt+64
	.quad	37
	.quad	120259089281


==================== Asm code ====================
2018-03-16 16:06:13.913685958 UTC

.section .text
.align 8
lvl9_rbfCF_entry:
_cbhyq:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhyr
_cbhys:
	leaq block_cbhyl_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *stg_noDuplicate#@gotpcrel(%rip)
_cbhyr:
	leaq lvl9_rbfCF_closure(%rip),%rbx
	jmp *-8(%r13)
	.size lvl9_rbfCF_entry, .-lvl9_rbfCF_entry


==================== Asm code ====================
2018-03-16 16:06:13.914330508 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_rbfCF_info:
	.quad	lvl9_rbfCF_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967299
	.quad	ubhyE_srtd


==================== Asm code ====================
2018-03-16 16:06:13.914915411 UTC

.section .data.rel.ro
.align 8
.align 1
ubhyF_srtd:
	.quad	Sbh2A_srt+64
	.quad	36
	.quad	51539612545


==================== Asm code ====================
2018-03-16 16:06:13.915629243 UTC

.section .text
.align 8
_cbhyl:
_cbhyl:
	leaq block_cbhyn_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.IO.Encoding.getLocaleEncoding1_closure@gotpcrel(%rip),%rbx
	testb $7,%bl
	jne _cbhyn
_cbhyo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbhyl, .-_cbhyl


==================== Asm code ====================
2018-03-16 16:06:13.916267463 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhyl_info:
	.quad	_cbhyl
	.quad	0
	.quad	-4294967266
	.quad	ubhyF_srtd


==================== Asm code ====================
2018-03-16 16:06:13.916814104 UTC

.section .data.rel.ro
.align 8
.align 1
ubhyG_srtd:
	.quad	Sbh2A_srt+64
	.quad	36
	.quad	51539608449


==================== Asm code ====================
2018-03-16 16:06:13.917468622 UTC

.section .text
.align 8
_cbhyn:
_cbhyn:
	leaq block_cbhyw_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cbhyn, .-_cbhyn


==================== Asm code ====================
2018-03-16 16:06:13.918103799 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhyn_info:
	.quad	_cbhyn
	.quad	0
	.quad	-4294967266
	.quad	ubhyG_srtd


==================== Asm code ====================
2018-03-16 16:06:13.918691783 UTC

.section .data.rel.ro
.align 8
.align 1
ubhyH_srtd:
	.quad	Sbh2A_srt+64
	.quad	36
	.quad	51539608449


==================== Asm code ====================
2018-03-16 16:06:13.919598198 UTC

.section .text
.align 8
_cbhyw:
_cbhyw:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbhyB
_cbhyA:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq lvl7_rbfCD_closure(%rip),%r9
	movq GHC.IO.FD.stderr_closure@gotpcrel(%rip),%r8
	leaq GHC.IO.Handle.FD.fdToHandle12_closure(%rip),%rdi
	movq GHC.IO.FD.$fBufferedIOFD_closure@gotpcrel(%rip),%rsi
	movq GHC.IO.FD.$fIODeviceFD_closure@gotpcrel(%rip),%r14
	movq GHC.IO.Handle.Types.WriteHandle_closure@gotpcrel(%rip),%rax
	addq $4,%rax
	movq %rax,-40(%rbp)
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%rbp)
	leaq -6(%r12),%rax
	movq %rax,-24(%rbp)
	movq GHC.IO.Handle.Types.nativeNewlineMode_closure@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq lvl8_rbfCE_closure+2(%rip),%rax
	movq %rax,-8(%rbp)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%rbp)
	addq $-40,%rbp
	jmp *GHC.IO.Handle.Internals.mkDuplexHandle5_entry@gotpcrel(%rip)
_cbhyB:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbhyw, .-_cbhyw


==================== Asm code ====================
2018-03-16 16:06:13.920465528 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhyw_info:
	.quad	_cbhyw
	.quad	0
	.quad	-4294967266
	.quad	ubhyH_srtd


==================== Asm code ====================
2018-03-16 16:06:13.92424999 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.stderr_closure
.type GHC.IO.Handle.FD.stderr_closure, @object
GHC.IO.Handle.FD.stderr_closure:
	.quad	GHC.IO.Handle.FD.stderr_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.925101872 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.stderr_entry
.type GHC.IO.Handle.FD.stderr_entry, @object
GHC.IO.Handle.FD.stderr_entry:
_cbhzm:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhzn
_cbhzo:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbhzj
_cbhzi:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_cbhzk_info(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-24,%rbp
	jmp lvl9_rbfCF_entry
_cbhzn:
	jmp *-16(%r13)
_cbhzj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.FD.stderr_entry, .-GHC.IO.Handle.FD.stderr_entry


==================== Asm code ====================
2018-03-16 16:06:13.925830362 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.stderr_info
.type GHC.IO.Handle.FD.stderr_info, @object
GHC.IO.Handle.FD.stderr_info:
	.quad	GHC.IO.Handle.FD.stderr_entry
	.quad	0
	.quad	4294967317
	.quad	Sbh2A_srt+352


==================== Asm code ====================
2018-03-16 16:06:13.926455726 UTC

.section .text
.align 8
_cbhzk:
_cbhzk:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbhzk, .-_cbhzk


==================== Asm code ====================
2018-03-16 16:06:13.926999017 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhzk_info:
	.quad	_cbhzk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:13.928590369 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl10_rbfCG_bytes:
	.asciz "<stdout>"


==================== Asm code ====================
2018-03-16 16:06:13.931043015 UTC

.section .data
.align 8
.align 1
lvl11_rbfCH_closure:
	.quad	lvl11_rbfCH_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.93180529 UTC

.section .text
.align 8
lvl11_rbfCH_entry:
_cbhzL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhzM
_cbhzN:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbhzK
_cbhzJ:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl10_rbfCG_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbhzM:
	jmp *-16(%r13)
_cbhzK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl11_rbfCH_entry, .-lvl11_rbfCH_entry


==================== Asm code ====================
2018-03-16 16:06:13.932482295 UTC

.section .data.rel.ro
.align 8
.align 1
lvl11_rbfCH_info:
	.quad	lvl11_rbfCH_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:13.936832343 UTC

.section .data
.align 8
.align 1
lvl12_rbfCI_closure:
	.quad	lvl12_rbfCI_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.937435421 UTC

.section .data.rel.ro
.align 8
.align 1
ubhAj_srtd:
	.quad	Sbh2A_srt+64
	.quad	39
	.quad	446676603777


==================== Asm code ====================
2018-03-16 16:06:13.93815638 UTC

.section .text
.align 8
lvl12_rbfCI_entry:
_cbhA5:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhA6
_cbhA7:
	leaq block_cbhA0_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *stg_noDuplicate#@gotpcrel(%rip)
_cbhA6:
	leaq lvl12_rbfCI_closure(%rip),%rbx
	jmp *-8(%r13)
	.size lvl12_rbfCI_entry, .-lvl12_rbfCI_entry


==================== Asm code ====================
2018-03-16 16:06:13.938786383 UTC

.section .data.rel.ro
.align 8
.align 1
lvl12_rbfCI_info:
	.quad	lvl12_rbfCI_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967299
	.quad	ubhAj_srtd


==================== Asm code ====================
2018-03-16 16:06:13.93940763 UTC

.section .data.rel.ro
.align 8
.align 1
ubhAk_srtd:
	.quad	Sbh2A_srt+64
	.quad	38
	.quad	171798696833


==================== Asm code ====================
2018-03-16 16:06:13.940085678 UTC

.section .text
.align 8
_cbhA0:
_cbhA0:
	leaq block_cbhA2_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.IO.Encoding.getLocaleEncoding1_closure@gotpcrel(%rip),%rbx
	testb $7,%bl
	jne _cbhA2
_cbhA3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbhA0, .-_cbhA0


==================== Asm code ====================
2018-03-16 16:06:13.940709559 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhA0_info:
	.quad	_cbhA0
	.quad	0
	.quad	-4294967266
	.quad	ubhAk_srtd


==================== Asm code ====================
2018-03-16 16:06:13.941331103 UTC

.section .data.rel.ro
.align 8
.align 1
ubhAl_srtd:
	.quad	Sbh2A_srt+64
	.quad	38
	.quad	171798692737


==================== Asm code ====================
2018-03-16 16:06:13.9419713 UTC

.section .text
.align 8
_cbhA2:
_cbhA2:
	leaq block_cbhAb_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cbhA2, .-_cbhA2


==================== Asm code ====================
2018-03-16 16:06:13.942522595 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhA2_info:
	.quad	_cbhA2
	.quad	0
	.quad	-4294967266
	.quad	ubhAl_srtd


==================== Asm code ====================
2018-03-16 16:06:13.943097658 UTC

.section .data.rel.ro
.align 8
.align 1
ubhAm_srtd:
	.quad	Sbh2A_srt+64
	.quad	38
	.quad	171798692737


==================== Asm code ====================
2018-03-16 16:06:13.943922207 UTC

.section .text
.align 8
_cbhAb:
_cbhAb:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbhAg
_cbhAf:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq lvl11_rbfCH_closure(%rip),%r9
	movq GHC.IO.FD.stdout_closure@gotpcrel(%rip),%r8
	leaq GHC.IO.Handle.FD.fdToHandle12_closure(%rip),%rdi
	movq GHC.IO.FD.$fBufferedIOFD_closure@gotpcrel(%rip),%rsi
	movq GHC.IO.FD.$fIODeviceFD_closure@gotpcrel(%rip),%r14
	movq GHC.IO.Handle.Types.WriteHandle_closure@gotpcrel(%rip),%rax
	addq $4,%rax
	movq %rax,-40(%rbp)
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-32(%rbp)
	leaq -6(%r12),%rax
	movq %rax,-24(%rbp)
	movq GHC.IO.Handle.Types.nativeNewlineMode_closure@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq lvl8_rbfCE_closure+2(%rip),%rax
	movq %rax,-8(%rbp)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%rbp)
	addq $-40,%rbp
	jmp *GHC.IO.Handle.Internals.mkDuplexHandle5_entry@gotpcrel(%rip)
_cbhAg:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbhAb, .-_cbhAb


==================== Asm code ====================
2018-03-16 16:06:13.944689148 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhAb_info:
	.quad	_cbhAb
	.quad	0
	.quad	-4294967266
	.quad	ubhAm_srtd


==================== Asm code ====================
2018-03-16 16:06:13.947619228 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.stdout_closure
.type GHC.IO.Handle.FD.stdout_closure, @object
GHC.IO.Handle.FD.stdout_closure:
	.quad	GHC.IO.Handle.FD.stdout_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.948418165 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.stdout_entry
.type GHC.IO.Handle.FD.stdout_entry, @object
GHC.IO.Handle.FD.stdout_entry:
_cbhB1:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhB2
_cbhB3:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbhAY
_cbhAX:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_cbhAZ_info(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-24,%rbp
	jmp lvl12_rbfCI_entry
_cbhB2:
	jmp *-16(%r13)
_cbhAY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.FD.stdout_entry, .-GHC.IO.Handle.FD.stdout_entry


==================== Asm code ====================
2018-03-16 16:06:13.949112016 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.stdout_info
.type GHC.IO.Handle.FD.stdout_info, @object
GHC.IO.Handle.FD.stdout_info:
	.quad	GHC.IO.Handle.FD.stdout_entry
	.quad	0
	.quad	4294967317
	.quad	Sbh2A_srt+368


==================== Asm code ====================
2018-03-16 16:06:13.949780532 UTC

.section .text
.align 8
_cbhAZ:
_cbhAZ:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbhAZ, .-_cbhAZ


==================== Asm code ====================
2018-03-16 16:06:13.950355582 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhAZ_info:
	.quad	_cbhAZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:13.952015541 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl13_rbfCJ_bytes:
	.asciz "<stdin>"


==================== Asm code ====================
2018-03-16 16:06:13.954850116 UTC

.section .data
.align 8
.align 1
lvl14_rbfCK_closure:
	.quad	lvl14_rbfCK_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.95566912 UTC

.section .text
.align 8
lvl14_rbfCK_entry:
_cbhBq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhBr
_cbhBs:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbhBp
_cbhBo:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl13_rbfCJ_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_cbhBr:
	jmp *-16(%r13)
_cbhBp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl14_rbfCK_entry, .-lvl14_rbfCK_entry


==================== Asm code ====================
2018-03-16 16:06:13.956316945 UTC

.section .data.rel.ro
.align 8
.align 1
lvl14_rbfCK_info:
	.quad	lvl14_rbfCK_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:06:13.961039178 UTC

.section .data
.align 8
.align 1
lvl15_rbfCL_closure:
	.quad	lvl15_rbfCL_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.961586179 UTC

.section .data.rel.ro
.align 8
.align 1
ubhBY_srtd:
	.quad	Sbh2A_srt+64
	.quad	41
	.quad	1683627185025


==================== Asm code ====================
2018-03-16 16:06:13.962290724 UTC

.section .text
.align 8
lvl15_rbfCL_entry:
_cbhBK:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhBL
_cbhBM:
	leaq block_cbhBF_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *stg_noDuplicate#@gotpcrel(%rip)
_cbhBL:
	leaq lvl15_rbfCL_closure(%rip),%rbx
	jmp *-8(%r13)
	.size lvl15_rbfCL_entry, .-lvl15_rbfCL_entry


==================== Asm code ====================
2018-03-16 16:06:13.962917042 UTC

.section .data.rel.ro
.align 8
.align 1
lvl15_rbfCL_info:
	.quad	lvl15_rbfCL_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967299
	.quad	ubhBY_srtd


==================== Asm code ====================
2018-03-16 16:06:13.963502787 UTC

.section .data.rel.ro
.align 8
.align 1
ubhBZ_srtd:
	.quad	Sbh2A_srt+64
	.quad	40
	.quad	584115557249


==================== Asm code ====================
2018-03-16 16:06:13.964193644 UTC

.section .text
.align 8
_cbhBF:
_cbhBF:
	leaq block_cbhBH_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.IO.Encoding.getLocaleEncoding1_closure@gotpcrel(%rip),%rbx
	testb $7,%bl
	jne _cbhBH
_cbhBI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbhBF, .-_cbhBF


==================== Asm code ====================
2018-03-16 16:06:13.964751564 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhBF_info:
	.quad	_cbhBF
	.quad	0
	.quad	-4294967266
	.quad	ubhBZ_srtd


==================== Asm code ====================
2018-03-16 16:06:13.965892916 UTC

.section .data.rel.ro
.align 8
.align 1
ubhC0_srtd:
	.quad	Sbh2A_srt+64
	.quad	40
	.quad	584115553153


==================== Asm code ====================
2018-03-16 16:06:13.966529961 UTC

.section .text
.align 8
_cbhBH:
_cbhBH:
	leaq block_cbhBQ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _cbhBH, .-_cbhBH


==================== Asm code ====================
2018-03-16 16:06:13.967137444 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhBH_info:
	.quad	_cbhBH
	.quad	0
	.quad	-4294967266
	.quad	ubhC0_srtd


==================== Asm code ====================
2018-03-16 16:06:13.967674254 UTC

.section .data.rel.ro
.align 8
.align 1
ubhC1_srtd:
	.quad	Sbh2A_srt+64
	.quad	40
	.quad	584115553153


==================== Asm code ====================
2018-03-16 16:06:13.968515132 UTC

.section .text
.align 8
_cbhBQ:
_cbhBQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cbhBV
_cbhBU:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq lvl14_rbfCK_closure(%rip),%r9
	movq GHC.IO.FD.stdin_closure@gotpcrel(%rip),%r8
	leaq GHC.IO.Handle.FD.fdToHandle12_closure(%rip),%rdi
	movq GHC.IO.FD.$fBufferedIOFD_closure@gotpcrel(%rip),%rsi
	movq GHC.IO.FD.$fIODeviceFD_closure@gotpcrel(%rip),%r14
	movq GHC.IO.Handle.Types.ReadHandle_closure@gotpcrel(%rip),%rax
	addq $3,%rax
	movq %rax,-40(%rbp)
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-32(%rbp)
	leaq -6(%r12),%rax
	movq %rax,-24(%rbp)
	movq GHC.IO.Handle.Types.nativeNewlineMode_closure@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq lvl8_rbfCE_closure+2(%rip),%rax
	movq %rax,-8(%rbp)
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%rbp)
	addq $-40,%rbp
	jmp *GHC.IO.Handle.Internals.mkDuplexHandle5_entry@gotpcrel(%rip)
_cbhBV:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cbhBQ, .-_cbhBQ


==================== Asm code ====================
2018-03-16 16:06:13.969308135 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhBQ_info:
	.quad	_cbhBQ
	.quad	0
	.quad	-4294967266
	.quad	ubhC1_srtd


==================== Asm code ====================
2018-03-16 16:06:13.972209496 UTC

.section .data
.align 8
.align 1
.globl GHC.IO.Handle.FD.stdin_closure
.type GHC.IO.Handle.FD.stdin_closure, @object
GHC.IO.Handle.FD.stdin_closure:
	.quad	GHC.IO.Handle.FD.stdin_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:06:13.973019118 UTC

.section .text
.align 8
.globl GHC.IO.Handle.FD.stdin_entry
.type GHC.IO.Handle.FD.stdin_entry, @object
GHC.IO.Handle.FD.stdin_entry:
_cbhCG:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cbhCH
_cbhCI:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _cbhCD
_cbhCC:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_cbhCE_info(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-24,%rbp
	jmp lvl15_rbfCL_entry
_cbhCH:
	jmp *-16(%r13)
_cbhCD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.IO.Handle.FD.stdin_entry, .-GHC.IO.Handle.FD.stdin_entry


==================== Asm code ====================
2018-03-16 16:06:13.973768331 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.IO.Handle.FD.stdin_info
.type GHC.IO.Handle.FD.stdin_info, @object
GHC.IO.Handle.FD.stdin_info:
	.quad	GHC.IO.Handle.FD.stdin_entry
	.quad	0
	.quad	4294967317
	.quad	Sbh2A_srt+384


==================== Asm code ====================
2018-03-16 16:06:13.974396605 UTC

.section .text
.align 8
_cbhCE:
_cbhCE:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cbhCE, .-_cbhCE


==================== Asm code ====================
2018-03-16 16:06:13.974962577 UTC

.section .data.rel.ro
.align 8
.align 1
block_cbhCE_info:
	.quad	_cbhCE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:06:13.977559727 UTC

.section .data.rel.ro
.align 8
.align 1
Sbh2A_srt:
	.quad	Data.Typeable.Internal.$wmkTrCon_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	lvl1_rbfCv_closure
	.quad	lvl3_rbfCx_closure
	.quad	GHC.IO.Handle.FD.handleToFd3_closure
	.quad	lvl5_rbfCz_closure
	.quad	GHC.IO.Handle.FD.handleToFd2_closure
	.quad	Data.Typeable.Internal.sameTypeRep_closure
	.quad	GHC.IO.Handle.FD.fdToHandle12_closure
	.quad	GHC.IO.Handle.FD.handleToFd1_closure
	.quad	GHC.IO.Handle.FD.fdToHandle7_closure
	.quad	Foreign.C.Error.throwErrnoIfMinus1Retry2_closure
	.quad	System.Posix.Internals.setNonBlockingFD3_closure
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle1_closure
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle4_closure
	.quad	GHC.IO.Handle.Internals.mkDuplexHandle5_closure
	.quad	GHC.IO.FD.$fBufferedIOFD_closure
	.quad	GHC.IO.FD.$fIODeviceFD_closure
	.quad	GHC.IO.Handle.FD.fdToHandle5_closure
	.quad	GHC.IO.Handle.FD.fdToHandle6_closure
	.quad	GHC.IO.Encoding.getLocaleEncoding1_closure
	.quad	GHC.IO.FD.$wmkFD_closure
	.quad	GHC.IO.Handle.FD.fdToHandle'1_closure
	.quad	GHC.IO.Handle.FD.fdToHandle2_closure
	.quad	System.Posix.Internals.$wfdGetMode_closure
	.quad	GHC.IO.Handle.FD.$wfdToHandle_closure
	.quad	GHC.IO.Handle.FD.fdToHandle1_closure
	.quad	GHC.IO.FD.$w$cclose_closure
	.quad	GHC.IO.FD.openFile1_closure
	.quad	GHC.IO.Handle.FD.openBinaryFile5_closure
	.quad	GHC.IO.Handle.FD.fdToHandle10_closure
	.quad	GHC.IO.Handle.FD.openFile2_closure
	.quad	GHC.IO.Exception.$fExceptionIOException4_closure
	.quad	GHC.IO.Handle.FD.openFile1_closure
	.quad	GHC.IO.Handle.FD.openFileBlocking1_closure
	.quad	GHC.IO.Handle.FD.openBinaryFile3_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	GHC.IO.Handle.FD.openBinaryFile2_closure
	.quad	GHC.IO.Handle.FD.openBinaryFile1_closure
	.quad	GHC.IO.Handle.Internals.ioe_finalizedHandle_closure
	.quad	$wstdHandleFinalizer_rbfCA_closure
	.quad	stdHandleFinalizer_rbfCB_closure
	.quad	lvl7_rbfCD_closure
	.quad	lvl8_rbfCE_closure
	.quad	lvl9_rbfCF_closure
	.quad	lvl11_rbfCH_closure
	.quad	lvl12_rbfCI_closure
	.quad	lvl14_rbfCK_closure
	.quad	lvl15_rbfCL_closure

